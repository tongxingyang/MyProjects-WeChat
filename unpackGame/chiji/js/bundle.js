!function() {
    "use strict";
    let e = {
        RES_VERTION: "RES_VERTION_",
        IS_UPDATE: "IS_UPDATE",
        ROLE_INFO: "ROLE_INFO",
        AD_LIMIT: "AD_LIMIT",
        CONFIG: "CONFIG",
        MUSIC: "MUSIC",
        EFFECT: "EFFECT",
        VIBRATE: "VIBRATE",
        PLATFORM_USER_ID: "PLATFORM_USER_ID",
        JUMPLIST: "JUMPLIST",
        DOT_REWARD_COUNT: "DOT_REWARD_COUNT",
        DOT_REWARD_DAY_COUNT: "DOT_REWARD_DAY_COUNT",
        OPEN_ID: "OPEN_ID",
        EQUIP_RED: "EQUIP_RED",
        PRIVATE_STATE: "PRIVATE_STATE",
        PLATFORM_USER_INFO: "PLATFORM_USER_INFO",
        TURN_TABLE_ITEM: "TURN_TABLE_ITEM",
        CLEAN_USER_INFO: "CLEAN_USER_INFO",
        TOKEN: "TOKEN"
    };
    if ("h5api" in Laya.Browser.window) for (let t in e) {
        let i = e[t];
        e[t] = "qzryjy" + i;
    }
    var t, i;
    !function(e) {
        e[e.DEFAULT = 0] = "DEFAULT", e[e.END_DOUBLE_REWARD = 1] = "END_DOUBLE_REWARD", 
        e[e.TRY_SKIN = 2] = "TRY_SKIN", e[e.SUPER_REWARD = 3] = "SUPER_REWARD", e[e.GOLD_REWARD = 4] = "GOLD_REWARD", 
        e[e.DIAMOND_REWARD = 5] = "DIAMOND_REWARD", e[e.SIGN = 6] = "SIGN", e[e.NEW_GIFT = 7] = "NEW_GIFT", 
        e[e.SUPER_EQUIP = 8] = "SUPER_EQUIP", e[e.TASK = 9] = "TASK", e[e.REVIVE = 10] = "REVIVE", 
        e[e.EQUIP_TRY = 10] = "EQUIP_TRY", e[e.DROP_AIR = 11] = "DROP_AIR", e[e.BOX_REWARD = 12] = "BOX_REWARD", 
        e[e.REWARD_EXTRA = 13] = "REWARD_EXTRA", e[e.BUFF = 14] = "BUFF", e[e.MTOUCH = 15] = "MTOUCH", 
        e[e.FIRECRACKER = 16] = "FIRECRACKER", e[e.GAMEAIR = 17] = "GAMEAIR", e[e.TURNTABLE = 18] = "TURNTABLE", 
        e[e.SHOP_TRY = 19] = "SHOP_TRY", e[e.ROLE_TRY = 20] = "ROLE_TRY", e[e.NEW_YEAR_PLAYER = 21] = "NEW_YEAR_PLAYER", 
        e[e.GET_DEBRIS = 22] = "GET_DEBRIS", e[e.ADD_ARM = 23] = "ADD_ARM", e[e.SKILL_MODE_START_AD = 24] = "SKILL_MODE_START_AD", 
        e[e.START_BUFF_1 = 25] = "START_BUFF_1", e[e.START_BUFF_2 = 26] = "START_BUFF_2", 
        e[e.DRAGON_BOAT_BOMB = 27] = "DRAGON_BOAT_BOMB", e[e.SUMMER_GIFT = 28] = "SUMMER_GIFT", 
        e[e.DAN_UP = 29] = "DAN_UP", e[e.TOUCH = 30] = "TOUCH";
    }(t || (t = {})), function(e) {
        e[e.BANNER = 1] = "BANNER", e[e.ICON = 2] = "ICON";
    }(i || (i = {}));
    let a = [ {
        id: t.DEFAULT,
        ad_id: "",
        info: "通用",
        list: [ 0 ],
        count: 0
    }, {
        id: t.END_DOUBLE_REWARD,
        ad_id: "",
        info: "结束三倍领取",
        list: [ 0 ],
        count: 0
    }, {
        id: t.TRY_SKIN,
        ad_id: "",
        info: "皮肤试用",
        list: [ 0 ],
        count: 0
    }, {
        id: t.SUPER_REWARD,
        ad_id: "",
        info: "超级奖励",
        list: [ 0 ],
        count: 0
    }, {
        id: t.GOLD_REWARD,
        ad_id: "",
        info: "金币获取",
        list: [ 0 ],
        count: 0
    }, {
        id: t.DIAMOND_REWARD,
        ad_id: "",
        info: "钻石获取",
        list: [ 0 ],
        count: 0
    }, {
        id: t.SIGN,
        ad_id: "",
        info: "签到",
        list: [ 0 ],
        count: 0
    }, {
        id: t.NEW_GIFT,
        ad_id: "",
        info: "新手礼包",
        list: [ 0 ],
        count: 0
    }, {
        id: t.SUPER_EQUIP,
        ad_id: "",
        info: "超级武器",
        list: [ 0 ],
        count: 0
    }, {
        id: t.TASK,
        ad_id: "",
        info: "七日任务",
        list: [ 0 ],
        count: 0
    }, {
        id: t.REVIVE,
        ad_id: "",
        info: "复活",
        list: [ 0 ],
        count: 0
    }, {
        id: t.EQUIP_TRY,
        ad_id: "",
        info: "武器试用",
        list: [ 0 ],
        count: 0
    }, {
        id: t.DROP_AIR,
        ad_id: "",
        info: "空投",
        list: [ 0 ],
        count: 0
    }, {
        id: t.BOX_REWARD,
        ad_id: "",
        info: "宝箱奖励",
        list: [ 0 ],
        count: 0
    }, {
        id: t.REWARD_EXTRA,
        ad_id: "",
        info: "额外领取奖励",
        list: [ 0 ],
        count: 0
    }, {
        id: t.BUFF,
        ad_id: "",
        info: "buff增益",
        list: [ 0 ],
        count: 0
    }, {
        id: t.MTOUCH,
        ad_id: "",
        info: "误触",
        list: [ 0 ],
        count: 0
    }, {
        id: t.FIRECRACKER,
        ad_id: "",
        info: "爆竹",
        list: [ 0 ],
        count: 0
    }, {
        id: t.GAMEAIR,
        ad_id: "",
        info: "空投神枪",
        list: [ 0 ],
        count: 0
    }, {
        id: t.TURNTABLE,
        ad_id: "",
        info: "转盘",
        list: [ 0 ],
        count: 0
    }, {
        id: t.SHOP_TRY,
        ad_id: "",
        info: "商店试用",
        list: [ 0 ],
        count: 0
    }, {
        id: t.ROLE_TRY,
        ad_id: "",
        info: "角色试用",
        list: [ 0 ],
        count: 0
    }, {
        id: t.NEW_YEAR_PLAYER,
        ad_id: "",
        info: "新春人物",
        list: [ 0 ],
        count: 0
    }, {
        id: t.GET_DEBRIS,
        ad_id: "",
        info: "获取碎片",
        list: [ 0 ],
        count: 0
    }, {
        id: t.ADD_ARM,
        ad_id: "",
        info: "看视频获取扩容弹夹",
        list: [ 0 ],
        count: 0
    }, {
        id: t.SKILL_MODE_START_AD,
        ad_id: "",
        info: "看视频超级武器开局",
        list: [ 0 ],
        count: 0
    }, {
        id: t.START_BUFF_1,
        ad_id: "",
        info: "无限子弹",
        list: [ 0 ],
        count: 0
    }, {
        id: t.START_BUFF_2,
        ad_id: "",
        info: "无限炸弹",
        list: [ 0 ],
        count: 0
    }, {
        id: t.DRAGON_BOAT_BOMB,
        ad_id: "",
        info: "端午炸弹",
        list: [ 0 ],
        count: 0
    }, {
        id: t.DAN_UP,
        ad_id: "",
        info: "段位结算界面升级段位",
        list: [ 0 ],
        count: 0
    }, {
        id: t.TOUCH,
        ad_id: "",
        info: "自动播放视频",
        list: [ 0 ],
        count: 0
    } ];
    var s;
    !function(e) {
        e[e.AD = 0] = "AD", e[e.SHARE = 1] = "SHARE";
    }(s || (s = {}));
    let n = [], o = [], r = {
        NORMAL: 0
    }, l = [], h = [], c = [], d = [], g = [], u = [], m = [], p = [], y = [], I = [], f = [];
    class L {
        static register(e, t, i) {
            L.list[e] || (L.list[e] = {});
            let a = e + ":" + new Date().getTime() + Math.floor(1e3 * Math.random()).toString();
            return L.list[e][a] = t.bind(i), a;
        }
        static once(e, t, i) {
            L.onceList[e] || (L.onceList[e] = {});
            let a = e + ":" + new Date().getTime();
            return L.onceList[e][a] = t.bind(i), a;
        }
        static unregisterByEventId(e) {
            for (let t in L.list[e]) L.list[e][t] = null;
            L.list[e] = null, delete L.list[e];
        }
        static unregisterByFuncId(e) {
            for (let t in L.list) for (let i in L.list[t]) i == e && (L.list[t][i] = null, delete L.list[t][i]);
        }
        static notify(e, t = null) {
            if (L.list[e]) for (let i in L.list[e]) L.list[e][i](t);
            if (L.onceList[e]) {
                for (let i in L.onceList[e]) L.onceList[e][i](t);
                L.onceList[e] = null, delete L.onceList[e];
            }
        }
    }
    L.list = {}, L.onceList = {};
    let w = {
        REFRESH_GAME_VIEW: "REFRESH_GAME_VIEW",
        REFRESH_GOLD_VIEW: "REFRESH_GOLD_VIEW",
        REFRESH_DIAMOND_VIEW: "REFRESH_DIAMOND_VIEW",
        REFRESH_SKIN: "REFRESH_SKIN",
        FIRST_VIEW_BANNER: "FIRST_VIEW_BANNER",
        PLAY_UPPER_LIMB_ANI: "PLAY_UPPER_LIMB_ANI",
        PLAY_THE_LEGS_ANI: "PLAY_THE_LEGS_ANI",
        PLAY_EFFECT: "PLAY_EFFECT",
        ON_SHOW: "ON_SHOW",
        PLAY_SOUND: "PLAY_SOUND",
        KILL: "KILL",
        REFRESH_PLAYER_HP_UI: "REFRESH_PLAYER_HP_UI",
        PLAYER_WAR_SITUATION: "PLAYER_WAR_SITUATION",
        KILL_BROADCAST: "KILL_BROADCAST",
        REFRESH_MAIN_ARM: "REFRESH_MAIN_ARM",
        BINDING_HEAD: "BINDING_HEAD",
        MATCH_KILL: "MATCH_KILL",
        PLAYER_KILL_DETAILS: "PLAYER_KILL_DETAILS",
        REFRESH_CANBUY_ARM: "REFRESH_CANBUY_ARM",
        ADDARM_BY_SHOP: "ADDARM_BY_SHOP",
        REFRESH_NATIVE_AD: "REFRESH_NATIVE_AD",
        ISHIDE_NATIVE_AD: "HIDE_NATIVE_AD",
        REFRESH_PLAYER_ARMOR_UI: "REFRESH_PLAYER_ARMOR_UI",
        REFRESH_OV_AD: "REFRESH_OV_AD",
        ANDROID_IMG_AD_LOAD: "ANDROID_IMG_AD_LOAD",
        ANDROID_REWARD_AD_LOAD: "ANDROID_REWARD_AD_LOAD",
        REFRESH_AI_GOOD: "REFRESH_AI_GOOD",
        CHANNEL_DATA: "CHANNEL_DATA",
        POSITION: "POSITION",
        PLAY_AIR_DROP_ANI: "PLAY_AIR_DROP_ANI",
        ACTIVE: "ACTIVE",
        AIR_DROP_HALO: "AIR_DROP_HALO",
        DROP_ARM_CHANGE: "DROP_ARM_CHANGE"
    }, b = {
        WX_HEADER_CODE: "X-WX-Code",
        WX_SESSION_MAGIC_ID: "F2C224D4-2BCE-4C64-AF9F-A6D872000D1A",
        WX_HEADER_SKEY: "X-WX-Skey",
        TOKEN: "Token",
        MULTI_SKEY: "Multi-Skey"
    }, E = {
        ERR_TIMEOUT: "网络超时",
        ERR_LOGIN_SESSION_NOT_RECEIVED: "1001",
        ERR_SKEY_INVALID: "ERR_SKEY_INVALID"
    }, C = {
        LOGIN: "login",
        USER: "user",
        CONFIG: "config",
        PLATFORM_USER_ID: "platformUserId",
        SUBSCRIBE: "subscribe",
        CHANNEL: "channel",
        INVITE: "invite",
        INVITE_ALL_DATA: "inviteAll",
        ROLE_INFO: "roleInfo",
        COS_CREDENTIALS: "cosCredentials",
        TOKEN: "token"
    };
    var v;
    !function(e) {
        e[e.WEB = 1] = "WEB", e[e.WX = 2] = "WX", e[e.VIVO = 3] = "VIVO", e[e.OPPO = 4] = "OPPO", 
        e[e.QQ = 5] = "QQ", e[e.TT = 6] = "TT", e[e.NATIVE_IOS = 7] = "NATIVE_IOS", e[e.NATIVE_ANDRIOD = 8] = "NATIVE_ANDRIOD", 
        e[e.WEB_4399 = 9] = "WEB_4399";
    }(v || (v = {}));
    var x = function() {};
    class B {
        static request(t, i, a, s = null, n = null, o = !1) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return void n();
            if (s = s || x, n = n || x, hl.platform == v.NATIVE_ANDRIOD) {
                let e = `${t}:${i}:${Laya.Utils.getGID()}`;
                this.handle[e + ":success"] = s, this.handle[e + ":fail"] = n;
                let o = window.PlatformClass;
                return void (o && o.createClass("demo.JSBridge").call("request", t, i, JSON.stringify(a), e));
            }
            let r = B.httpHost + t;
            var l = new Laya.HttpRequest();
            if (hl.platform == v.VIVO || hl.platform == v.OPPO || hl.platform == v.NATIVE_IOS) if ("GET" == i) {
                let e = "?";
                for (let t in a) e += encodeURIComponent(t) + "=" + encodeURIComponent(a[t]) + "&";
                r += e = e.substring(0, e.length - 1), a = "";
            } else "POST" == i && (a = JSON.stringify(a));
            l.send(r, a, i, "json", [ b.TOKEN, Laya.LocalStorage.getItem(e.TOKEN), b.MULTI_SKEY, B.multiSkey, "Content-Type", "application/json" ]), 
            l.on(Laya.Event.COMPLETE, null, function(e) {
                e && 0 === e.code ? s(e.data) : e.error == E.ERR_SKEY_INVALID ? B.login(function() {
                    B.request(t, i, a, s, n);
                }, n) : n("登陆失败 code:" + E.ERR_LOGIN_SESSION_NOT_RECEIVED), l.offAll();
            }), l.on(Laya.Event.ERROR, null, function() {
                console.log("请求失败"), n(), l.offAll();
            });
        }
        static requestWithUrl(e, t, i, a, s = null, n = null, o = !1) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return void n();
            s = s || x, n = n || x;
            var r = new Laya.HttpRequest();
            if (hl.platform == v.VIVO || hl.platform == v.OPPO) if ("GET" == t) {
                let t = "?";
                for (let e in a) t += encodeURIComponent(e) + "=" + encodeURIComponent(a[e]) + "&";
                e += t = t.substring(0, t.length - 1), a = "";
            } else "POST" == t && (a = JSON.stringify(a));
            let l = [ "Content-Type", "application/json;charset=utf-8" ];
            for (let e in i) l.push(i[e]);
            r.send(e, a, t, "json", l), r.once(Laya.Event.COMPLETE, null, function(e) {
                !e || 0 !== e.code && 200 !== e.code && void 0 !== e.code ? n(JSON.stringify(e)) : void 0 === e.code ? s(e) : s(e.data);
            }), r.once(Laya.Event.ERROR, null, function(e) {
                console.log("请求失败", e), n(e);
            });
        }
        static nativeSuccessCallBack(e, t) {
            console.log("nativeSuccessCallBack", e, t), !t || 0 !== t.code && 200 !== t.code && void 0 !== t.code ? this.handle[e + ":fail"] && (this.handle[e + ":fail"](JSON.stringify(t)), 
            delete this.handle[e + ":fail"]) : this.handle[e + ":success"] && (void 0 === t.code ? (this.handle[e + ":success"](t), 
            delete this.handle[e + ":success"]) : (this.handle[e + ":success"](t.data), delete this.handle[e + ":success"]));
        }
        static nativeFaiCallBack(e) {
            console.log("nativeFaiCallBack", e), this.handle[e + ":fail"] && (this.handle[e + ":fail"](""), 
            delete this.handle[e + ":fail"]);
        }
        static requestToken(t, i) {
            let a = Laya.LocalStorage.getItem(e.TOKEN);
            a && "" != a ? B.request(C.TOKEN, "GET", {
                token: a
            }, function(e) {
                1 == e.result ? t() : -1 == e.result && B.login(t, i);
            }, i) : B.login(t, i);
        }
        static login(t, i) {
            ol.login(function(a) {
                B.request(C.TOKEN, "POST", {
                    appId: hl.appId,
                    code: a
                }, function(a) {
                    console.log(a), 1 == a.result ? (Laya.LocalStorage.setItem(e.PLATFORM_USER_ID, a.data.openId), 
                    Laya.LocalStorage.setItem(e.TOKEN, a.data.token), t()) : i();
                }, i);
            }, i);
        }
    }
    B.httpHost = "https://wxg-twoface.ruidroid.xyz/multi/", B.loginTimeOut = 5e3, B.multiSkey = "yidingkeji888888", 
    B.handle = {}, window.NetworkManager = B;
    class A {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new A();
                a.id = i.id, a.name = i.name, a.objName = i.objName, a.type = i.type, a.interval = i.interval, 
                a.attackSound = i.attackSound, a.magazineBullet = i.magazineBullet, a.bullets = i.bullets, 
                a.bulletChangeTimer = i.bulletChangeTimer, a.hit = i.hit, a.bodyMultiple = i.bodyMultiple, 
                a.headHit = i.headHit, a.limbMultiple = i.limbMultiple, a.limbHit = i.limbHit, a.maxBodyHit = i.maxBodyHit, 
                a.maxHeadHit = i.maxHeadHit, a.maxLimbHit = i.maxLimbHit, a.isCanOpMirror = i.isCanOpMirror, 
                a.cutScale = i.cutScale, a.attackDis = i.attackDis, a.icon = i.icon, a.recoilForce = JSON.parse(i.recoilForce), 
                a.reloadsound = i.reloadsound, a.firestarter = i.firestarter, a.beatEffect = i.beatEffect, 
                a.ballistic = i.ballistic, a.bullethole = i.bullethole, a.price = i.price, a.produce = i.produce, 
                a.priceByDiamond = JSON.parse(i.priceByDiamond), a.grade = i.grade, a.lv = i.lv, 
                a.pierceThrough = i.pierceThrough, a.range = i.range, a.sight = i.sight, a.movingSpeed = i.movingSpeed, 
                a.biochemicalCharging = i.biochemicalCharging, a.accurate = i.accurate, A.cache[a.id] = a, 
                this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (A.cache[e]) return A.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return A.cache[this.keys[e]] ? A.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return A.cache;
        }
        clear() {
            A.cache = {};
        }
    }
    A.cache = {}, A.keys = [];
    const _ = {
        AD_SUCCESS: "视频播放结束总：",
        AD_START: "视频播放开始总：",
        AD: "观看视频：",
        SHARE: "分享：",
        NAV_SUCCESS: "跳转成功",
        NEW_NAV_SUCCESS: "新用户跳转成功",
        ONLINE_TIME: "在线时长:",
        NEW_GAME_ONE: "新用户第一局:",
        NEW_GAME_TWO: "新用户第二局:",
        NEW_GAME_THREE: "新用户第三局:",
        GUIDE: "新手引导：",
        ENTER_SKILL: "进入大招版",
        FULL_SCREEN: "全屏导出页",
        FULL_SCREEN_JUMP: "全屏导出页点击",
        FULL_SCREEN_JUMP_SUCCESS: "全屏导出页成功跳转",
        FIRST_VIEW: "首页曝光",
        SKIN_VIEW: "选购皮肤",
        END_VIEW: "结算页曝光",
        CHANNEL_FLOAT_VIEW: "插屏导出页曝光"
    };
    var S;
    !function(e) {
        e[e.NORNAL = 0] = "NORNAL", e[e.SYNTESIS = 200] = "SYNTESIS", e[e.LOADING = 300] = "LOADING", 
        e[e.NOTIFY = 400] = "NOTIFY", e[e.MAX = 500] = "MAX";
    }(S || (S = {}));
    var T, D = Laya.View, R = Laya.Scene, N = Laya.ClassUtils.regClass;
    !function(e) {
        !function(e) {
            class t extends R {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(t.uiView);
                }
            }
            t.uiView = {
                type: "Scene",
                props: {
                    width: 750,
                    height: 1334
                },
                compId: 2,
                loadList: [],
                loadList3D: []
            }, e.GameSceneUI = t, N("ui.scene.GameSceneUI", t);
        }(e.scene || (e.scene = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/ani/AccountUpgradeView");
                    }
                }
                e.AccountUpgradeViewUI = t, N("ui.view.ani.AccountUpgradeViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/ani/DanAniView");
                    }
                }
                e.DanAniViewUI = i, N("ui.view.ani.DanAniViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/ani/EndAniView");
                    }
                }
                e.EndAniViewUI = a, N("ui.view.ani.EndAniViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/ani/LoadFightAniView");
                    }
                }
                e.LoadFightAniViewUI = s, N("ui.view.ani.LoadFightAniViewUI", s);
            }(e.ani || (e.ani = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/ActivityEquipView");
                    }
                }
                e.ActivityEquipViewUI = t, N("ui.view.award.ActivityEquipViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/ActivityPlayerView");
                    }
                }
                e.ActivityPlayerViewUI = i, N("ui.view.award.ActivityPlayerViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/InfiniteAwardView");
                    }
                }
                e.InfiniteAwardViewUI = a, N("ui.view.award.InfiniteAwardViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/NewGiftView");
                    }
                }
                e.NewGiftViewUI = s, N("ui.view.award.NewGiftViewUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/NewPlayerTryArmView");
                    }
                }
                e.NewPlayerTryArmViewUI = n, N("ui.view.award.NewPlayerTryArmViewUI", n);
                class o extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/NewYearGiftCellView");
                    }
                }
                e.NewYearGiftCellViewUI = o, N("ui.view.award.NewYearGiftCellViewUI", o);
                class r extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/NewYearGiftView");
                    }
                }
                e.NewYearGiftViewUI = r, N("ui.view.award.NewYearGiftViewUI", r);
                class l extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/OnLineAwardCellView");
                    }
                }
                e.OnLineAwardCellViewUI = l, N("ui.view.award.OnLineAwardCellViewUI", l);
                class h extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/OnLineAwardView");
                    }
                }
                e.OnLineAwardViewUI = h, N("ui.view.award.OnLineAwardViewUI", h);
                class c extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/award/SuperEquipView");
                    }
                }
                e.SuperEquipViewUI = c, N("ui.view.award.SuperEquipViewUI", c);
            }(e.award || (e.award = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/channel/ChannelSingleCell");
                    }
                }
                e.ChannelSingleCellUI = t, N("ui.view.channel.ChannelSingleCellUI", t);
            }(e.channel || (e.channel = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 185,
                        height: 185
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 92.5,
                            width: 185,
                            var: "imgBottom",
                            skin: "sub1/ui/move/img_2.png",
                            height: 185,
                            anchorY: 0,
                            anchorX: .5
                        },
                        compId: 5
                    }, {
                        type: "Image",
                        props: {
                            y: 92.5,
                            x: 92.5,
                            width: 82,
                            var: "imgKnob",
                            skin: "sub1/ui/move/img_1.png",
                            height: 82,
                            anchorY: .5,
                            anchorX: .5,
                            alpha: 1
                        },
                        compId: 4
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 4,
                            keyframes: {
                                y: [ {
                                    value: 8.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 20,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 5
                                }, {
                                    value: 40,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 10
                                }, {
                                    value: 77.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 15
                                }, {
                                    value: 127.33333333333333,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 20
                                }, {
                                    value: 156,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 25
                                }, {
                                    value: 171,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 30
                                }, {
                                    value: 177,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 35
                                }, {
                                    value: 164,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 40
                                }, {
                                    value: 150,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 45
                                }, {
                                    value: 128,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 50
                                }, {
                                    value: 92.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 55
                                }, {
                                    value: 55.333333333333336,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 60
                                }, {
                                    value: 22,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 65
                                }, {
                                    value: 8.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 70
                                }, {
                                    value: 92.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 75
                                } ],
                                x: [ {
                                    value: 92.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 134,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 5
                                }, {
                                    value: 157,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 10
                                }, {
                                    value: 174,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 15
                                }, {
                                    value: 168.44444444444446,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 147,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 25
                                }, {
                                    value: 119,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 30
                                }, {
                                    value: 92,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 35
                                }, {
                                    value: 49.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 40
                                }, {
                                    value: 31,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 45
                                }, {
                                    value: 17,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 50
                                }, {
                                    value: 8.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 55
                                }, {
                                    value: 17.458333333333332,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 60
                                }, {
                                    value: 49.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 65
                                }, {
                                    value: 92.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 70
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/move/img_2.png", "sub1/ui/move/img_1.png" ],
                    loadList3D: []
                }, e.RockerMoveViewUI = t, N("ui.view.characterCtrl.RockerMoveViewUI", t);
            }(e.characterCtrl || (e.characterCtrl = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/common/AnnouncementView");
                    }
                }
                e.AnnouncementViewUI = t, N("ui.view.common.AnnouncementViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/common/CommonMenuTopBar");
                    }
                }
                e.CommonMenuTopBarUI = i, N("ui.view.common.CommonMenuTopBarUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/common/DiamondNum");
                    }
                }
                e.DiamondNumUI = a, N("ui.view.common.DiamondNumUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(s.uiView);
                    }
                }
                s.uiView = {
                    type: "View",
                    props: {
                        width: 141,
                        height: 42
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 21,
                            x: 75.5,
                            width: 151,
                            var: "btnDiamonds",
                            height: 42,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 21,
                                x: 21,
                                var: "imgDiamond",
                                skin: "sub1/ui/common/img_4.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 5
                        }, {
                            type: "Label",
                            props: {
                                y: 9,
                                x: 43,
                                width: 69,
                                var: "txtDiamonds",
                                valign: "middle",
                                text: "label",
                                height: 24,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "left"
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 20,
                                x: 28,
                                var: "imgAdd",
                                skin: "sub1/ui/first/img_13.png"
                            },
                            compId: 7
                        }, {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 8
                        } ]
                    } ],
                    loadList: [ "sub1/ui/common/img_4.png", "sub1/ui/first/img_13.png" ],
                    loadList3D: []
                }, e.DiamondsTopUI = s, N("ui.view.common.DiamondsTopUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(n.uiView);
                    }
                }
                n.uiView = {
                    type: "View",
                    props: {
                        y: 21,
                        x: 77,
                        width: 153,
                        pivotY: 21,
                        pivotX: 77,
                        height: 42
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 21,
                            x: 15,
                            var: "imgGold",
                            skin: "sub1/ui/common/img_3.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 4
                    }, {
                        type: "Label",
                        props: {
                            y: 9,
                            x: 37,
                            width: 69,
                            var: "txtCount",
                            valign: "middle",
                            text: "label",
                            height: 24,
                            fontSize: 28,
                            font: "SimHei",
                            color: "#FFFFFF",
                            align: "left"
                        },
                        compId: 5
                    }, {
                        type: "Image",
                        props: {
                            y: 21,
                            x: 21,
                            var: "imgAdd",
                            skin: "sub1/ui/first/img_13.png"
                        },
                        compId: 6
                    }, {
                        type: "Script",
                        props: {
                            y: 0,
                            x: -6,
                            runtime: "effect/ButtonEffect.ts"
                        },
                        compId: 8
                    } ],
                    loadList: [ "sub1/ui/common/img_3.png", "sub1/ui/first/img_13.png" ],
                    loadList3D: []
                }, e.GoldNumUI = n, N("ui.view.common.GoldNumUI", n);
                class o extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/common/GoldTop");
                    }
                }
                e.GoldTopUI = o, N("ui.view.common.GoldTopUI", o);
                class r extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/common/LogClickView");
                    }
                }
                e.LogClickViewUI = r, N("ui.view.common.LogClickViewUI", r);
                class l extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(l.uiView);
                    }
                }
                l.uiView = {
                    type: "View",
                    props: {
                        width: 322,
                        mouseThrough: !1,
                        mouseEnabled: !1,
                        hitTestPrior: !1,
                        height: 51,
                        centerX: 0
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            width: 322,
                            var: "imgBg",
                            skin: "sub1/ui/scale9/img_27.png",
                            sizeGrid: "6,8,10,7",
                            height: 51,
                            centerY: 0,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5,
                            alpha: .7
                        },
                        compId: 5
                    }, {
                        type: "Label",
                        props: {
                            y: 26,
                            x: 672,
                            var: "labelLog",
                            fontSize: 24,
                            color: "#ffffff",
                            centerY: 0,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5,
                            alpha: 1
                        },
                        compId: 6
                    } ],
                    loadList: [ "sub1/ui/scale9/img_27.png" ],
                    loadList3D: []
                }, e.LogViewUI = l, N("ui.view.common.LogViewUI", l);
                class h extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/common/LoseFocusView");
                    }
                }
                e.LoseFocusViewUI = h, N("ui.view.common.LoseFocusViewUI", h);
                class c extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/common/MoreGameView");
                    }
                }
                e.MoreGameViewUI = c, N("ui.view.common.MoreGameViewUI", c);
                class d extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(d.uiView);
                    }
                }
                d.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            width: 300,
                            var: "boxContent",
                            height: 0,
                            centerY: -50,
                            centerX: 0,
                            anchorY: 1
                        },
                        compId: 26
                    } ],
                    loadList: [],
                    loadList3D: []
                }, e.NotificationViewUI = d, N("ui.view.common.NotificationViewUI", d);
                class g extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(g.uiView);
                    }
                }
                g.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        name: "NotifyView",
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            x: 0,
                            top: 0,
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: 0
                        },
                        compId: 6,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/scale9/img_13.png",
                                right: 0,
                                left: 0,
                                bottom: 0,
                                alpha: .5,
                                sizeGrid: "2,4,3,2"
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 318,
                                x: 412,
                                width: 511,
                                skin: "sub1/ui/scale9/img_tip_1.png",
                                height: 75,
                                centerY: -20,
                                centerX: 0,
                                sizeGrid: "7,7,10,6"
                            },
                            compId: 3,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 10.5,
                                    x: 0,
                                    width: 510,
                                    var: "txtContent",
                                    valign: "middle",
                                    text: "已发送好友申请！",
                                    height: 56,
                                    fontSize: 30,
                                    font: "Helvetica",
                                    color: "#FFFFFF",
                                    bold: !1,
                                    align: "center"
                                },
                                compId: 4
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 6,
                            keyframes: {
                                x: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 0
                                } ],
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "alpha",
                                    index: 30
                                } ]
                            }
                        } ],
                        name: "aniOpen",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 6,
                            keyframes: {
                                x: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 22
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "alpha",
                                    index: 22
                                } ]
                            }
                        } ],
                        name: "aniClose",
                        id: 2,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/scale9/img_13.png", "sub1/ui/scale9/img_tip_1.png" ],
                    loadList3D: []
                }, e.NotifyViewUI = g, N("ui.view.common.NotifyViewUI", g);
                class u extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(u.uiView);
                    }
                }
                u.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            visible: !0,
                            var: "boxDetail",
                            right: 0,
                            left: 0,
                            height: 750
                        },
                        compId: 3,
                        child: [ {
                            type: "Rect",
                            props: {
                                y: 0,
                                x: 0,
                                width: 1962,
                                lineWidth: 1,
                                height: 1132,
                                fillColor: "#ffffff"
                            },
                            compId: 4
                        }, {
                            type: "Panel",
                            props: {
                                y: 0,
                                width: 1334,
                                var: "panel",
                                height: 750,
                                elasticEnabled: !0,
                                centerX: 0
                            },
                            compId: 5,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 66,
                                    x: 0,
                                    wordWrap: !0,
                                    width: 1334,
                                    var: "txtContent",
                                    text: '更新日期:2021/12/13 \\n生效日期:2021/12/13\\n隐私政策\\n 引言\\n 欢迎使用广州市一盯科技有限公司(以下简称"我们")提供的产品和服务。您在使用我们的产品时，我们可能会收集和使用您的相关信息。我们承诺将极力保护使用我们产品和服务之用户（以下称“用户”或“您”）的隐私。  \\n我们将不时地更新检查本隐私政策，因此有关的措施会随之变化，我们恳请您定期查看本页面，确保对我们《隐私政策》始终保持了解。如您对本《隐私政策》及其相关事宜有任何问题，请与客服联系。  \\n本《隐私政策》主要向您说明以下信息：  \\n我们收集哪些信息； \\n我们收集信息的用途； \\n您享有的权利。 \\n本《隐私政策》适用于我司旗下所有产品和服务。当您使用我们任何产品和服务时，即表示您认同我们在本政策中所述内容。  \\n一、我们收集的信息 1.非身份信息 当您使用我司产品和服务时，我们可能会搜集用户的来源途径、访问顺序等信息。例如记录每个用户的来源途径、浏览器信息等。  \\n2.注册信息 当您使用我司注册服务时，我们可能收集您的个人注册信息，如：个人身份证明（包括身份证、护照、驾驶证等）、籍贯、性别、个人手机号码、网络身份标识（包括账号、IP地址、电子邮箱地址以及与前述有关的密码、密码保护信息、口令、口令保护信息等）。  \\n3.使用产品设备信息 当您使用我司产品时，我们可能会收集您的设备信息（包括设备型号、设备MAC地址、操作系统类型、设备设置等）、软件列表唯一设备识别码（如IMEI/android ID/IDFA/OPENUDID/GUID、SIM卡IMSI信息等在内的描述个人常用设备基本情况的信息）。  \\n4.产品相关信息 当你使用我司产品时，我们可能会收集和汇总您的游戏虚拟币、游戏余额、游戏类型、游戏记录等信息。  \\n二、我们如何收集和使用信息 1.您提供的信息 a.您在注册我司产品服务的账号或使用我司产品服务时向我们提供的信息；  \\nb.您通过我司产品向其他方提供的共享信息，以及您使用我司产品时所储存的信息；  \\nc.其他方分享的您的信息；  \\nd.我们获取到您使用我司产品或服务时的信息。如：日志信息、设备信息、网络信息等。  \\n2.Cookies、日志 我们可能通过cookies获取和使用您的信息，并将该信息储存为日志信息。  \\n通过使用cookies我们向用户提供更好的网络体验。我们使用cookies是为了让用户可以受益。例如使用我司产品服务时登录过程更快捷，cookies能帮助我们确定您连接的页面和内容，能使我们能更好、更快地为您服务，并且使您在我司享受到的服务更丰富。  \\n您可以控制cookies是否被您的设备接受。请查阅您的设备附带的文件以获得更多这方面的信息。  \\n3.我们使用cookies用于以下用途 a.记住您的身份。Cookies有助于我们辨认您作为我们的注册用户的身份，或保存您向我们提供有关您的喜好或其他信息；  \\nb.分析您使用我们服务的情况。我们可以用cookies来了解您使用我司产品时喜爱哪些活动或者哪些服务。  \\n我们为上述目的使用cookies收集到的非个人身份信息可能提供给其它伙伴，用于分析您和其它用户如何使用我司服务。  \\n我们的产品或服务上可能放置cookies，这些cookies可能会收集与您相关的非个人身份信息，以用于分析用户如何使用我们的产品和服务，您可以通过用户选择机制或用户管理来控制cookies。如果您停止使用cookies，我们可能无法向您提供最佳的服务，某些服务也可能无法正常使用。  \\n三、我们出于以下目的，收集和使用您的信息： 1.帮助您快速完成注册 为便于我们为您提供服务，您需要提供基本的注册信息，例如个人身份证明、手机号码等，并创建您的用户名和密码。  \\n2.向您提供奖品、服务 a.在部分服务项目中，为便于向您提供奖品或服务，您需要提供个人身份信息、姓名、收货地址、邮政编码、收货人、联系电话等信息，如果您拒绝提供此类信息，我们将无法完成奖品提供或服务； \\n b.当您与我们联系时，我们可能会保存您的通信/通话记录和您留下的联系方式等，以便我们与您联系或帮助您解决问题；  \\nc.为向您提供奖品或服务，我们可能会收集您所选择的物流信息、奖品信息等信息，并可能会共享给上述服务提供者。  \\n3.向您发出通知 我们可能在必要时（例如暂停、维护等），向您发出服务有关通知，以便您更好的知晓我们的服务状态。  \\n4.改进我们的服务 我们可能将通过一项我司产品所收集的信息，用于我们的其它产品。我们可能请您参与有关我司产品的调查，帮助我们改善我们现有的产品和服务或设计新的产品和服务。  \\n5.为您提供安全保障 为确保您身份的真实性、向您提供更好的安全保障，您可以向我们提供身份证明等个人敏感信息以完成实名认证。  \\n除身份验证外，我们可能将您的信息用于客户服务、安全防范、诈骗监测、存档和备份等用途，确保我们向您提供的服务的安全性；我们可能使用或整合我们所收集的您的信息，以及我们的合作伙伴取得您授权或依据法律共享的信息，来综合判断您的账户、进行身份验证、检测及防范安全事件，并依法采取必要的记录、审计、分析、处置等措施。  \\n四、分享及披露 1.分享 未经您明确同意，我们不会与我司外任何第三方分享您的信息  \\na.向您提供服务，我们可能向合作伙伴或第三方分享您的信息，例如物流服务等； \\n b.实现本《隐私政策》第二条“我们如何收集和使用信息”部分所述目的； \\n c.维护和改善我们的服务。我们可能向合作伙伴及其他第三方分享您的信息，以帮助我们为您提供更有针对性、更完善的服务，例如：代表我们发出电子邮件或推送通知的通讯服务提供商等； \\n d.履行我们在本《隐私政策》或我们与您达成的其他协议中的义务和行使我们的权利； \\n e.向委托我们进行推广的合作伙伴等第三方共享，但我们仅会向这些委托方提供推广的覆盖面和有效性的信息，而不会提供可以识别您身份的信息，例如姓名电话号码或电子邮箱；或者我们将这些信息进行汇总，以便它不会识别您个人； \\n f.在法律法规允许的范围内，为了遵守法律、维护我们及我们的关联方或合作伙伴、您或其他我司用户或社会公众利益、财产或安全免遭损害，比如为防止欺诈等违法活动和减少信用风险，我们可能与其他公司或组织交换信息； \\n g.应您合法需求，协助处理您与他人的纠纷或争议； \\n h.应您的监护人合法要求而提供您的信息； \\n i.根据与您签署的单项服务协议（包括在线签署的电子协议以及相应的平台规则）或其他的法律文件约定所提供；  \\n j.基于学术研究而提供；  \\n k.基于符合法律法规的社会公共利益而提供。  \\n我们仅会出于合法、正当、必要、特定、明确的目的共享您的信息。对我们与之共享信息的公司、组织和个人，我们会与其签署严格的保密协定，要求他们按照我们的说明、本《隐私政策》以及其他任何相关的保密和安全措施来处理信息。  \\n2.披露 我们仅会在以下情况披露您的信息：  \\na.符合业界标准的安全防护措施的前提； \\n b.在您明确同意下，根据您的需求披露您所指定的信息；  \\nc.根据法律、法规的要求、强制性的行政执法或司法要求所必须提供您信息的情况下，我们可能会依据所要求的信息类型和披露方式披露您的信息。在符合法律法规的前提下，当我们收到上述披露信息的请求时，我们会要求接收方必须出具与之相应的法律文件，如传票或调查函。  \\n五、我们对您的信息的保护和处理 \\n1.数据安全技术措施 a.我们会采用符合业界标准的安全防护措施，包括建立合理的制度规范、安全技术来防止您的信息遭到未经授权的访问使用、修改，避免数据的损坏或丢失； \\n b.网络服务采取了多种加密技术，例如SSL、TLS等加密技术来保护您的信息；  \\nc.并通过隔离技术进行隔离； \\n d.在信息使用时，例如信息展示、信息关联计算，我们会采用多种数据脱敏技术增强信息在使用中的安全性。采用严格的数据访问权限控制和多重身份认证技术保护信息，避免数据被违规使用。 \\n 2.保护信息采取的其他安全措施 \\na.通过建立数据分类分级制度、数据安全管理规范、数据安全开发规范来管理规范信息的存储和使用；\\n  b.通过信息接触者保密协议、监控和审计机制来对数据进行全面安全控制； \\n c.加强安全意识。我们还会举办安全和隐私保护培训课程，加强员工对于信息保护重要性的认识。 \\n 3.仅允许必要人员知晓这些信息，并保证知晓人员不记录、保存。 为此设置了严格的访问权限控制和监控机制。我们同时要求可能接触到您的信息的所有人员履行相应的保密义务。如未能履行这些义务，会被追究法律责任。 \\n 4.我们会采取一切合理可行的措施，确保不收集无关的信息。\\n 5.我们将尽力确保或担保您发送给我们的任何信息的安全性。 如果我们的物理、技术、或管理防护设施遭到破坏，导致信息被非授权访问、公开披露、篡改或毁坏，导致您的合法权益受损，我们将承担相应的法律责任。 \\n 6.安全事件如何处理 a.通过我司与其他方进行沟通或服务时，您不可避免要向其他方披露自己的信息，如手机号码、电子邮箱地址等，请您妥善保护自己的信息，仅在必要的情况下向他人提供；\\n  b.为应对信息泄露、损毁和丢失等可能出现的风险，我们制定了多项制度，明确安全事件、安全漏洞的分类分级标准及相应的处理流程。我们也为安全事件建立了专门的应急响应团队，按照安全事件处置规范要求，针对不同安全事件启动安全预案，进行止损、分析、定位、制定补救措施，联合相关部门进行打击；  \\n c.若不幸发生安全事件时，我们将按照法律法规的要求，及时向您告知：事件的基本情况、我们已采取或将要采取的处置方案及可能会发生的情况、您可自主防范和降低风险的建议、对您补救的方案等。同时我们要按照监管部门的要求，主动上报信息安全事件和处置情况； \\n d.由于技术的限制以及风险防范的局限，即便我们已经尽量加强安全措施，也无法始终保证信息百分之百的安全。所以您需要了解，有可能在我们可控范围外的情况而发生的情况和问题 \\n 六、您如何管理自己的信息 1.访问、更新和删除 我们鼓励您更新和修改您的信息以使其更准确有效。您能通过我司访问您的信息，并根据对应信息的管理方式自行完成或合理要求我们进行修改、补充和删除。我们将采取适当的技术手段，尽可能保证您可以访问、更新和更正自己的信息或使用我司服务时提供的其他信息。 \\n 在访问、更新、更正和删除前述信息时，我们可能会要求您进行身份验证，以保障信息安全。 \\n 如您想查询、修改或删除您的部分信息，请登录我司帐号中心或按照单项服务的具体指引进行操作。\\n  2.公开和分享 您在使用我们的服务过程中，会分享您使用服务的相关信息（如性别、昵称等），此类信息可通过您自行访问后修改，我们慎重的提醒您不要将个人信息填写至公开信息区（如昵称）。由此造成您的信息泄露，我们不承担责任。 \\n 3.注销 在符合我司服务协议及国家相关法律法规的情况下，您的账号或相关信息可能被注销或删除。在您的账号或相关信息被注销或删除后，这些信息将按照我司服务协议处理。 \\n 4.改变您授权同意的范围 您可以选择您的信息是否被披露，且您可以通过删除信息、关闭设备功能等方式改变您授权我们继续收集信息的范围或撤回您的授权。 \\n 5.敏感信息 某些信息因其特殊性可能被认为是敏感信息，例如您的种族、宗教、个人健康和医疗信息等，以及身份证明文件、个人生物识别信息、财产信息、行踪轨迹、未成年人的信息等。因此，您需要在使用我们为您提供的产品或服务前谨慎考虑。您同意这些个人敏感信息将按照《隐私政策》的相关条款来进行处理。\\n  您在我司服务中所提供的内容和信息您需要慎重考虑。 \\n 七、第三方服务 我们选择有信誉的第三方作为我们的合作伙伴，为用户提供信息和服务。然而每个合作伙伴都有与我司不同的隐私政策，您进入至第三方服务时，我司的隐私政策条款将不再生效。我们建议您查看第三方的隐私政策，确保您的信息安全。 \\n 八、未成年人限制 任何未成年人参加网上活动应事先取得家长或其法定监护人的同意。我们将根据国家相关法律法规的规定保护未成年人的相关信息并执行相关限制。 \\n 九、更新和修订 本《隐私政策》自发布生效，我们将根据国家法律法规对本《隐私政策》不定期进行更新和修订。本《隐私政策》变更后，若您不接受修订后的条款，应立即停止使用我司的产品和服务。若您在本《隐私条款》变更七日后继续使用本服务的，视为接受修订后的所有条款。\\n  十、联系我们 如您有关于网络信息安全的投诉和举报，或您对本《隐私政策》及其相关事宜有任何问题、意见或建议的，您可通过我司客服中心与我们联系。邮箱地址:959999019@qq.com。地址：广州市番禺区大学城青蓝街23号有米科技大厦',
                                    padding: "10",
                                    leading: 10,
                                    height: 7650,
                                    fontSize: 34,
                                    color: "#000000",
                                    centerX: 0
                                },
                                compId: 7
                            }, {
                                type: "Label",
                                props: {
                                    y: 17,
                                    width: 100,
                                    var: "txtClose2",
                                    valign: "middle",
                                    text: "X",
                                    right: 146,
                                    height: 55,
                                    fontSize: 50,
                                    color: "#000000",
                                    align: "center"
                                },
                                compId: 6
                            }, {
                                type: "Label",
                                props: {
                                    y: 7600,
                                    width: 100,
                                    var: "txtClose1",
                                    valign: "middle",
                                    text: "关闭",
                                    height: 55,
                                    fontSize: 34,
                                    color: "#000000",
                                    centerX: 0,
                                    align: "center"
                                },
                                compId: 8
                            } ]
                        } ]
                    } ],
                    loadList: [],
                    loadList3D: []
                }, e.PrivateDetailViewUI = u, N("ui.view.common.PrivateDetailViewUI", u);
                class m extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(m.uiView);
                    }
                }
                m.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "private/img_02black2.png",
                            sizeGrid: "5,10,10,8",
                            right: 0,
                            left: 1,
                            bottom: 0,
                            alpha: .8
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            width: 720,
                            height: 562,
                            centerY: -24,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 75,
                                width: 717,
                                skin: "private/img_32.png",
                                sizeGrid: "66,16,16,19",
                                right: 3,
                                left: 0,
                                height: 456
                            },
                            compId: 10
                        }, {
                            type: "Label",
                            props: {
                                y: 87,
                                text: "温馨提示",
                                fontSize: 40,
                                color: "#ffffff",
                                centerX: 0
                            },
                            compId: 11
                        }, {
                            type: "Box",
                            props: {
                                y: 463,
                                x: 190.125,
                                width: 251,
                                var: "btnCancel",
                                text: "不同意",
                                height: 90,
                                fontSize: 40,
                                color: "#454444",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 25
                            }, {
                                type: "Image",
                                props: {
                                    y: 45,
                                    x: 125,
                                    width: 248,
                                    skin: "private/img_normal_2.png",
                                    pivotY: 42,
                                    pivotX: 124,
                                    height: 84
                                },
                                compId: 30
                            }, {
                                type: "Image",
                                props: {
                                    y: 28,
                                    x: 72,
                                    skin: "private/img_4.png"
                                },
                                compId: 31
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 463,
                                x: 525,
                                width: 248,
                                var: "btnOK",
                                skin: "private/img_normal_1.png",
                                sizeGrid: "0,56,0,52",
                                pivotY: 42,
                                pivotX: 124,
                                height: 84
                            },
                            compId: 14,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 26
                            }, {
                                type: "Image",
                                props: {
                                    y: 28,
                                    x: 36,
                                    skin: "private/img_6.png"
                                },
                                compId: 28
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 175,
                                x: 43,
                                wordWrap: !0,
                                width: 605,
                                text: "欢迎使用本协议,在使用本协议前,请您充分阅读并理解",
                                leading: 20,
                                height: 84,
                                fontSize: 34,
                                color: "#ffffff"
                            },
                            compId: 17,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 76,
                                    x: 318,
                                    wordWrap: !0,
                                    width: 204,
                                    var: "txtDetail",
                                    text: "《隐私政策》",
                                    leading: 10,
                                    height: 43,
                                    fontSize: 34,
                                    color: "#0bc003",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 18,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "effect/ButtonEffect.ts"
                                    },
                                    compId: 27
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 106,
                                    x: 0,
                                    wordWrap: !0,
                                    width: 605,
                                    text: '各项条款,如您已详细阅读并同意隐私政策,请点击"同意并继续"开始我们的服务',
                                    leading: 20,
                                    height: 248,
                                    fontSize: 34,
                                    color: "#ffffff"
                                },
                                compId: 20
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 403,
                                skin: "private/img_5.png",
                                right: 20,
                                left: 20
                            },
                            compId: 24
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 3,
                            keyframes: {
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .8,
                                    tweenMethod: "backOut",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 4,
                            keyframes: {
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "backOut",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 30
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "backOut",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 30
                                } ]
                            }
                        } ],
                        name: "aniOpen",
                        id: 1,
                        frameRate: 60,
                        action: 1
                    } ],
                    loadList: [ "private/img_02black2.png", "private/img_32.png", "private/img_normal_2.png", "private/img_4.png", "private/img_normal_1.png", "private/img_6.png", "private/img_5.png" ],
                    loadList3D: []
                }, e.PrivateDialogViewUI = m, N("ui.view.common.PrivateDialogViewUI", m);
            }(e.common || (e.common = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            class t extends D {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("view/DemoShowView");
                }
            }
            e.DemoShowViewUI = t, N("ui.view.DemoShowViewUI", t);
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            width: 717,
                            var: "boxAll",
                            height: 490,
                            centerY: -62,
                            centerX: 0
                        },
                        compId: 22,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -5,
                                x: 19,
                                width: 678,
                                skin: "private/img_32.png",
                                sizeGrid: "66,8,12,10",
                                height: 461
                            },
                            compId: 25
                        }, {
                            type: "Label",
                            props: {
                                y: 68.5,
                                x: 126,
                                width: 470,
                                valign: "middle",
                                text: "观看简短的视频免费获得钻石！",
                                height: 48,
                                fontSize: 28,
                                font: "SimHei",
                                color: "#ffffff",
                                align: "center"
                            },
                            compId: 6
                        }, {
                            type: "Box",
                            props: {
                                y: 108,
                                x: 219,
                                width: 257,
                                height: 217
                            },
                            compId: 7,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 139,
                                    var: "imgStartGold",
                                    skin: "sub1/ui/common/img_20.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 8
                            }, {
                                type: "Label",
                                props: {
                                    y: 159,
                                    x: 44,
                                    width: 180,
                                    var: "txtGold",
                                    valign: "middle",
                                    text: "钻石x30",
                                    height: 60,
                                    fontSize: 32,
                                    font: "SimHei",
                                    color: "#56EDFF",
                                    align: "center"
                                },
                                compId: 9
                            }, {
                                type: "Image",
                                props: {
                                    y: 56,
                                    x: 61,
                                    skin: "sub1/ui/common/img_18.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 10
                            }, {
                                type: "Image",
                                props: {
                                    y: 41,
                                    x: 217,
                                    width: 7,
                                    skin: "sub1/ui/common/img_18.png",
                                    height: 13,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 11
                            }, {
                                type: "Image",
                                props: {
                                    y: 159,
                                    x: 212,
                                    width: 18,
                                    skin: "sub1/ui/common/img_18.png",
                                    height: 25,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: 141,
                                    x: 85,
                                    width: 18,
                                    skin: "sub1/ui/common/img_18.png",
                                    height: 22,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 13
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 23,
                                x: 646,
                                width: 77,
                                var: "btnClose",
                                height: 62,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 19,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 14,
                                    x: 21,
                                    skin: "sub1/ui/common/img_7.png",
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 18
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 20
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 0,
                                width: 470,
                                var: "labelTag",
                                valign: "middle",
                                text: "免费钻石",
                                height: 48,
                                fontSize: 34,
                                font: "SimHei",
                                color: "#ffffff",
                                centerX: 0,
                                align: "center"
                            },
                            compId: 26
                        }, {
                            type: "Image",
                            props: {
                                y: 388,
                                x: 358,
                                var: "btnGold",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 27,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 20.5,
                                    x: 26,
                                    skin: "sub1/ui/common/img_10.png"
                                },
                                compId: 28
                            }, {
                                type: "Image",
                                props: {
                                    y: 19.5,
                                    x: 67,
                                    skin: "sub1/ui/common/img_15.png"
                                },
                                compId: 29
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 30
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 388,
                                x: 485,
                                visible: !1,
                                var: "btnNo",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 31,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 32
                            }, {
                                type: "Label",
                                props: {
                                    y: 21.5,
                                    x: 43,
                                    text: "不了谢谢",
                                    fontSize: 27,
                                    color: "#ffffff"
                                },
                                compId: 33
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 10,
                            keyframes: {
                                x: [ {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "x",
                                    index: 40
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleY",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleY",
                                    index: 20
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleY",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleY",
                                    index: 40
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleX",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleX",
                                    index: 20
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleX",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleX",
                                    index: 40
                                } ]
                            }
                        }, {
                            target: 11,
                            keyframes: {
                                x: [ {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "x",
                                    index: 19
                                }, {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "x",
                                    index: 37
                                } ],
                                scaleY: [ {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleY",
                                    index: 10
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleY",
                                    index: 19
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleY",
                                    index: 27
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleY",
                                    index: 37
                                } ],
                                scaleX: [ {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleX",
                                    index: 10
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleX",
                                    index: 19
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleX",
                                    index: 27
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleX",
                                    index: 37
                                } ]
                            }
                        }, {
                            target: 12,
                            keyframes: {
                                x: [ {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "x",
                                    index: 9
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 23
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 33
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 44
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleY",
                                    index: 9
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 23
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 33
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 44
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleX",
                                    index: 9
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 23
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 33
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 44
                                } ]
                            }
                        }, {
                            target: 13,
                            keyframes: {
                                x: [ {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "x",
                                    index: 13
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 26
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 35
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 42
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleY",
                                    index: 13
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 26
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 35
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 42
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleX",
                                    index: 13
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 26
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 35
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 42
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 24,
                        action: 0
                    } ],
                    loadList: [ "private/img_32.png", "sub1/ui/common/img_20.png", "sub1/ui/common/img_18.png", "sub1/ui/common/img_7.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_10.png", "sub1/ui/common/img_15.png", "sub1/ui/scale9/img_normal_2.png" ],
                    loadList3D: []
                }, e.AddDiamondsViewUI = t, N("ui.view.diamonds.AddDiamondsViewUI", t);
            }(e.diamonds || (e.diamonds = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/dragonBoat/DragonBoatBombView");
                    }
                }
                e.DragonBoatBombViewUI = t, N("ui.view.dragonBoat.DragonBoatBombViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/dragonBoat/DragonBoatGunRewardView");
                    }
                }
                e.DragonBoatGunRewardViewUI = i, N("ui.view.dragonBoat.DragonBoatGunRewardViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/dragonBoat/DragonBoatListRewardView");
                    }
                }
                e.DragonBoatListRewardViewUI = a, N("ui.view.dragonBoat.DragonBoatListRewardViewUI", a);
            }(e.dragonBoat || (e.dragonBoat = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 708,
                        height: 86
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            x: 2,
                            var: "imgPlayerBg",
                            top: 0,
                            skin: "sub1/ui/scale9/img_54.png",
                            bottom: 0,
                            sizeGrid: "17,10,10,7"
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            y: 11,
                            x: 33,
                            width: 64,
                            var: "imgHead",
                            skin: "sub1/role/001.png",
                            height: 64
                        },
                        compId: 5
                    }, {
                        type: "Label",
                        props: {
                            y: 9,
                            x: 107,
                            width: 135,
                            var: "txtName",
                            valign: "middle",
                            text: "txtName",
                            height: 28,
                            fontSize: 22,
                            color: "#FFFFFF",
                            align: "left"
                        },
                        compId: 6
                    }, {
                        type: "Image",
                        props: {
                            y: 29,
                            x: 238,
                            var: "imgFist",
                            skin: "sub1/ui/end/img_3.png"
                        },
                        compId: 7
                    }, {
                        type: "Label",
                        props: {
                            y: 27,
                            x: 317,
                            width: 135,
                            var: "txtBeat",
                            valign: "middle",
                            text: "0",
                            height: 28,
                            fontSize: 28,
                            color: "#FFFFFF",
                            align: "center"
                        },
                        compId: 8
                    }, {
                        type: "Label",
                        props: {
                            y: 27,
                            x: 388.5,
                            width: 135,
                            var: "txtBeBeat",
                            valign: "middle",
                            text: "0",
                            height: 28,
                            fontSize: 28,
                            color: "#FFFFFF",
                            align: "center"
                        },
                        compId: 9
                    }, {
                        type: "Label",
                        props: {
                            y: 27,
                            x: 461,
                            width: 135,
                            var: "txtScore",
                            valign: "middle",
                            text: "0",
                            height: 28,
                            fontSize: 28,
                            color: "#FFFFFF",
                            align: "center"
                        },
                        compId: 10
                    }, {
                        type: "Image",
                        props: {
                            y: 40.5,
                            x: 109,
                            width: 87,
                            var: "imgDouble",
                            height: 33
                        },
                        compId: 11
                    }, {
                        type: "Box",
                        props: {
                            y: 23.5,
                            x: 588,
                            width: 35,
                            var: "btnGood",
                            height: 37
                        },
                        compId: 15,
                        child: [ {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/end/img_26.png"
                            },
                            compId: 16
                        }, {
                            type: "Image",
                            props: {
                                y: 8.5,
                                x: 7.5,
                                var: "imgGood",
                                skin: "sub1/ui/end/img_25.png"
                            },
                            compId: 17
                        }, {
                            type: "Label",
                            props: {
                                y: 23,
                                x: 24.5,
                                width: 61,
                                visible: !1,
                                var: "txtGoodNum",
                                text: "0",
                                height: 15,
                                fontSize: 16,
                                color: "#FFFFFF"
                            },
                            compId: 18
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 43,
                            x: 659,
                            width: 36,
                            var: "btnSend",
                            height: 36,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 20,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -.5,
                                x: -2.5,
                                skin: "sub1/ui/end/img_26.png"
                            },
                            compId: 19
                        }, {
                            type: "Image",
                            props: {
                                y: 16,
                                x: 18,
                                skin: "sub1/ui/common/img_common_5.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 13
                        }, {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 21
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 17,
                            keyframes: {
                                y: [ {
                                    value: 8.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "y",
                                    index: 5
                                }, {
                                    value: 8.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    label: null,
                                    key: "y",
                                    index: 10
                                } ],
                                x: [ {
                                    value: 7.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 5.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "x",
                                    index: 5
                                }, {
                                    value: 7.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    label: null,
                                    key: "x",
                                    index: 10
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: -11,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "rotation",
                                    index: 5
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    label: null,
                                    key: "rotation",
                                    index: 10
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 24,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/scale9/img_54.png", "sub1/role/001.png", "sub1/ui/end/img_3.png", "sub1/ui/end/img_26.png", "sub1/ui/end/img_25.png", "sub1/ui/common/img_common_5.png" ],
                    loadList3D: []
                }, e.EndItemUI = t, N("ui.view.end.EndItemUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/end/EndMySelfView");
                    }
                }
                e.EndMySelfViewUI = i, N("ui.view.end.EndMySelfViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/end/EndRecreationView");
                    }
                }
                e.EndRecreationViewUI = a, N("ui.view.end.EndRecreationViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(s.uiView);
                    }
                }
                s.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 375,
                            width: 1535,
                            var: "boxBg",
                            pivotY: 375,
                            pivotX: 768,
                            height: 750,
                            centerX: 0
                        },
                        compId: 92,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 770,
                                width: 811,
                                skin: "sub1/ui/end/img_27.jpg",
                                skewY: 180,
                                pivotX: 811,
                                height: 750
                            },
                            compId: 91
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: -41,
                                skin: "sub1/ui/end/img_27.jpg",
                                scaleX: 1
                            },
                            compId: 8
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "sub1/ui/scale9/img_59.png",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 86
                    }, {
                        type: "Box",
                        props: {
                            width: 1334,
                            var: "boxMain",
                            height: 493,
                            centerY: -24,
                            centerX: 0
                        },
                        compId: 9,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 4,
                                x: -40,
                                width: 1411,
                                skin: "sub1/ui/scale9/img_50.png",
                                height: 488,
                                sizeGrid: "8,9,9,9"
                            },
                            compId: 22
                        }, {
                            type: "Box",
                            props: {
                                y: 52,
                                x: -26,
                                width: 696,
                                var: "boxWe",
                                height: 429
                            },
                            compId: 45,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 82,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 49
                            }, {
                                type: "Image",
                                props: {
                                    y: 171,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 50
                            }, {
                                type: "Image",
                                props: {
                                    y: 254,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 51
                            }, {
                                type: "Image",
                                props: {
                                    y: 338,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 52
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 52,
                                x: 676,
                                width: 685,
                                var: "boxEnemy",
                                height: 429
                            },
                            compId: 47,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 82,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 63
                            }, {
                                type: "Image",
                                props: {
                                    y: 171,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 64
                            }, {
                                type: "Image",
                                props: {
                                    y: 254,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 65
                            }, {
                                type: "Image",
                                props: {
                                    y: 338,
                                    x: 10,
                                    width: 646,
                                    skin: "sub1/ui/end/img_7.png",
                                    right: 0,
                                    left: 0,
                                    height: 2
                                },
                                compId: 66
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 2,
                                x: -42,
                                width: 713,
                                skin: "sub1/ui/scale9/img_52.png",
                                height: 53,
                                sizeGrid: "10,11,11,9"
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                y: 2,
                                x: 666,
                                width: 707,
                                skin: "sub1/ui/scale9/img_53.png",
                                height: 53,
                                sizeGrid: "10,10,14,9"
                            },
                            compId: 12
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 68.5,
                                width: 77,
                                valign: "middle",
                                text: "玩家",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 13
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 315,
                                width: 77,
                                valign: "middle",
                                text: "击败",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 14
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 389,
                                width: 77,
                                valign: "middle",
                                text: "被淘汰",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 15
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 463,
                                width: 77,
                                valign: "middle",
                                text: "分数",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 16
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 759.5,
                                width: 77,
                                valign: "middle",
                                text: "玩家",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 18
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 1017,
                                width: 77,
                                valign: "middle",
                                text: "击败",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 19
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 1091,
                                width: 77,
                                valign: "middle",
                                text: "被淘汰",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 20
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 1162,
                                width: 77,
                                valign: "middle",
                                text: "分数",
                                height: 33,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 21
                        }, {
                            type: "Image",
                            props: {
                                y: -80,
                                x: 539,
                                var: "imgType",
                                skin: "sub1/ui/end/img_5.png"
                            },
                            compId: 23
                        }, {
                            type: "Image",
                            props: {
                                y: 515.5,
                                x: -41,
                                width: 356,
                                visible: !1,
                                skin: "sub1/ui/scale9/img_51.png",
                                height: 91,
                                sizeGrid: "8,7,9,6"
                            },
                            compId: 24,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 11.5,
                                    x: 76,
                                    var: "imgGold",
                                    skin: "sub1/ui/common/img_3.png"
                                },
                                compId: 25
                            }, {
                                type: "Label",
                                props: {
                                    y: 49.5,
                                    x: 13.5,
                                    width: 165,
                                    var: "txtRewardGold",
                                    valign: "middle",
                                    text: "label",
                                    height: 40,
                                    fontSize: 22,
                                    color: "#ffffff",
                                    align: "center"
                                },
                                compId: 26
                            }, {
                                type: "Image",
                                props: {
                                    y: 11.5,
                                    x: 235,
                                    skin: "sub1/ui/end/img_1.png"
                                },
                                compId: 27
                            }, {
                                type: "Label",
                                props: {
                                    y: 48.5,
                                    x: 183.5,
                                    width: 165,
                                    var: "txtRewardExp",
                                    valign: "middle",
                                    text: "label",
                                    height: 40,
                                    fontSize: 22,
                                    color: "#ffffff",
                                    align: "center"
                                },
                                compId: 28
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 562.5,
                                x: 1224,
                                width: 224,
                                visible: !1,
                                var: "btnWinBack",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 81,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 29,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 30
                            }, {
                                type: "Image",
                                props: {
                                    y: 22,
                                    x: 49,
                                    skin: "sub1/ui/common/img_8.png"
                                },
                                compId: 31
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 561,
                                x: 1224,
                                width: 224,
                                visible: !1,
                                var: "btnFailBack",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 81,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 32,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 33
                            }, {
                                type: "Image",
                                props: {
                                    y: 22,
                                    x: 49,
                                    skin: "sub1/ui/common/img_8.png"
                                },
                                compId: 34
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: -101.5,
                                x: 212.5,
                                width: 282,
                                var: "txtWeScore",
                                valign: "middle",
                                text: "0",
                                strokeColor: "#000000",
                                stroke: 2,
                                height: 99,
                                fontSize: 56,
                                font: "SimHei",
                                color: "#57C6FF",
                                align: "center"
                            },
                            compId: 41
                        }, {
                            type: "Label",
                            props: {
                                y: -101.5,
                                x: 826,
                                width: 282,
                                var: "txtEnemyScore",
                                valign: "middle",
                                text: "0",
                                strokeColor: "#000000",
                                stroke: 2,
                                height: 99,
                                fontSize: 56,
                                font: "SimHei",
                                color: "#FF806F",
                                align: "center"
                            },
                            compId: 42
                        }, {
                            type: "Image",
                            props: {
                                y: 558,
                                x: 1222,
                                width: 224,
                                visible: !1,
                                var: "btnBack",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 81,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 72,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 73
                            }, {
                                type: "Image",
                                props: {
                                    y: 26,
                                    x: 56.5,
                                    skin: "sub1/ui/end/img_22.png"
                                },
                                compId: 74
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 563,
                                x: 68.5,
                                width: 224,
                                visible: !1,
                                var: "btnShare",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                height: 81,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 75,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 76
                            }, {
                                type: "Image",
                                props: {
                                    y: 26,
                                    x: 56.5,
                                    skin: "sub1/ui/end/img_23.png"
                                },
                                compId: 77
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: -12.5,
                                x: 446.5,
                                width: 422,
                                skin: "sub1/ui/common/img_24.png"
                            },
                            compId: 88
                        }, {
                            type: "Image",
                            props: {
                                y: -18.5,
                                x: 879.5,
                                skin: "sub1/ui/common/img_23.png"
                            },
                            compId: 89
                        }, {
                            type: "Image",
                            props: {
                                y: -18.5,
                                x: 260,
                                skin: "sub1/ui/common/img_23.png"
                            },
                            compId: 90
                        }, {
                            type: "Image",
                            props: {
                                y: 558,
                                x: 1223,
                                width: 224,
                                visible: !0,
                                var: "btnAgain",
                                skin: "sub1/ui/scale9/img_task_4.png",
                                height: 81,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 93,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 94
                            }, {
                                type: "Label",
                                props: {
                                    y: 23,
                                    x: 42,
                                    text: "再来一局",
                                    fontSize: 35
                                },
                                compId: 96
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/end/img_27.jpg", "sub1/ui/scale9/img_59.png", "sub1/ui/scale9/img_50.png", "sub1/ui/end/img_7.png", "sub1/ui/scale9/img_52.png", "sub1/ui/scale9/img_53.png", "sub1/ui/end/img_5.png", "sub1/ui/scale9/img_51.png", "sub1/ui/common/img_3.png", "sub1/ui/end/img_1.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_8.png", "sub1/ui/end/img_22.png", "sub1/ui/scale9/img_normal_2.png", "sub1/ui/end/img_23.png", "sub1/ui/common/img_24.png", "sub1/ui/common/img_23.png", "sub1/ui/scale9/img_task_4.png" ],
                    loadList3D: []
                }, e.EndViewUI = s, N("ui.view.end.EndViewUI", s);
            }(e.end || (e.end = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 146,
                        height: 131
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 133,
                            x: 73,
                            width: 146,
                            height: 133,
                            anchorY: 1,
                            anchorX: .5
                        },
                        compId: 5,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 2,
                                x: -8,
                                skin: "sub1/ui/equip/img_13.png",
                                alpha: 0
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 129,
                                x: 73,
                                skin: "sub1/ui/equip/img_14.png",
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 3
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 5,
                            keyframes: {
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleY",
                                    index: 45
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleY",
                                    index: 50
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleY",
                                    index: 55
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    label: null,
                                    key: "scaleY",
                                    index: 139
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleX",
                                    index: 45
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleX",
                                    index: 50
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleX",
                                    index: 55
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    label: null,
                                    key: "scaleX",
                                    index: 139
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 4,
                            keyframes: {
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 58
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "alpha",
                                    index: 123
                                } ]
                            }
                        } ],
                        name: "ani2",
                        id: 2,
                        frameRate: 24,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/equip/img_13.png", "sub1/ui/equip/img_14.png" ],
                    loadList3D: []
                }, e.AirdropItemUI = t, N("ui.view.equip.AirdropItemUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            var: "imgBg",
                            top: 0,
                            skin: "sub1/ui/equip/img_19.jpg",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 16
                    }, {
                        type: "Box",
                        props: {
                            width: 1174,
                            var: "boxWarehouse",
                            top: 2,
                            height: 748,
                            centerX: 80,
                            bottom: 0
                        },
                        compId: 15
                    }, {
                        type: "Box",
                        props: {
                            zOrder: 100,
                            y: 879,
                            x: 265,
                            width: 147,
                            var: "btnFreeEquip",
                            pivotY: 71,
                            pivotX: 74,
                            height: 163
                        },
                        compId: 22,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 107,
                                x: 72,
                                width: 88,
                                var: "imgIcon",
                                skin: "sub1/ui/first/img_32.png",
                                scaleY: 1,
                                rotation: 0,
                                pivotY: 22,
                                pivotX: 44,
                                height: 76
                            },
                            compId: 23,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 40,
                                    x: 41,
                                    visible: !1,
                                    var: "imgAd",
                                    skin: "sub1/ui/common/img_tt_2.png",
                                    scaleY: .66,
                                    scaleX: .66
                                },
                                compId: 42
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 96.5,
                                x: 75.5,
                                skin: "sub1/ui/first/img_26.png",
                                scaleY: 1,
                                rotation: 0,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 24
                        }, {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 25
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 88,
                            x: 1412,
                            width: 136,
                            height: 212
                        },
                        compId: 39
                    }, {
                        type: "Box",
                        props: {
                            y: 62,
                            x: 191,
                            width: 221,
                            var: "btnClose",
                            height: 81,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 17,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 16.5,
                                x: 37,
                                skin: "sub1/ui/equip/img_5.png"
                            },
                            compId: 4
                        }, {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 18
                        }, {
                            type: "Image",
                            props: {
                                y: 34.5,
                                x: 129,
                                skin: "sub1/ui/equip/img_8.png"
                            },
                            compId: 5
                        } ]
                    }, {
                        type: "Label",
                        props: {
                            x: 89,
                            visible: !1,
                            var: "label4399",
                            text: "4399",
                            italic: !0,
                            fontSize: 60,
                            color: "#ffffff",
                            bottom: 50,
                            bold: !0,
                            alpha: .5
                        },
                        compId: 43
                    }, {
                        type: "Image",
                        props: {
                            y: 39,
                            x: 463,
                            width: 109,
                            visible: !1,
                            var: "btnGameCommunity",
                            skin: "sub1/ui/scale9/img_first_6.png",
                            sizeGrid: "26,20,34,19",
                            pivotY: 22,
                            pivotX: 55,
                            height: 44
                        },
                        compId: 44,
                        child: [ {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 45
                        }, {
                            type: "Image",
                            props: {
                                y: -2,
                                x: 1,
                                skin: "sub1/ui/first/img_58.png",
                                sizeGrid: "0,8,0,8"
                            },
                            compId: 46
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 24,
                            keyframes: {
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "scaleY",
                                    index: 80
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "scaleY",
                                    index: 180
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: -2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "rotation",
                                    index: 40
                                }, {
                                    value: 3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "rotation",
                                    index: 135
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "rotation",
                                    index: 180
                                } ]
                            }
                        }, {
                            target: 23,
                            keyframes: {
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "backOut",
                                    tween: !0,
                                    target: 23,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .8,
                                    tweenMethod: "backOut",
                                    tween: !0,
                                    target: 23,
                                    key: "scaleY",
                                    index: 80
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 23,
                                    key: "scaleY",
                                    index: 180
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 23,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 23,
                                    key: "rotation",
                                    index: 40
                                }, {
                                    value: -3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 23,
                                    key: "rotation",
                                    index: 135
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 23,
                                    key: "rotation",
                                    index: 180
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    } ],
                    loadList: [ "sub1/ui/equip/img_19.jpg", "sub1/ui/first/img_32.png", "sub1/ui/common/img_tt_2.png", "sub1/ui/first/img_26.png", "sub1/ui/equip/img_5.png", "sub1/ui/equip/img_8.png", "sub1/ui/scale9/img_first_6.png", "sub1/ui/first/img_58.png" ],
                    loadList3D: []
                }, e.EquipViewUI = i, N("ui.view.equip.EquipViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(a.uiView);
                    }
                }
                a.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "HBox",
                        props: {
                            width: 2387,
                            top: 0,
                            centerX: 0,
                            bottom: 0
                        },
                        compId: 21,
                        child: [ {
                            type: "Image",
                            props: {
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 22
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 23
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 24
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 25
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 26
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 27
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 795,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 28
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 29
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 30
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 31
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 32
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 33
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 34
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 35
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_10.png",
                                bottom: 0
                            },
                            compId: 36
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            skin: "sub1/ui/equip/img_x_7.png",
                            scaleY: 1.5,
                            scaleX: 1.5,
                            right: -16,
                            bottom: -14
                        },
                        compId: 37
                    }, {
                        type: "Image",
                        props: {
                            y: 146,
                            x: 422,
                            skin: "sub1/ui/equip/img_x_7.png",
                            skewY: 180,
                            scaleY: 1.5,
                            scaleX: 1.5,
                            left: 422,
                            bottom: -14
                        },
                        compId: 39
                    }, {
                        type: "Image",
                        props: {
                            y: 423,
                            x: 218,
                            width: 51,
                            skin: "sub1/ui/equip/img_x_11.png",
                            scaleY: 1.1,
                            scaleX: 1.1,
                            rotation: -39,
                            pivotY: 383,
                            pivotX: 12,
                            height: 392
                        },
                        compId: 40
                    }, {
                        type: "Image",
                        props: {
                            y: 438,
                            x: 1412,
                            width: 51,
                            skin: "sub1/ui/equip/img_x_11.png",
                            skewY: 180,
                            scaleY: 1.1,
                            scaleX: 1.1,
                            rotation: 38,
                            right: 170,
                            pivotY: 383,
                            pivotX: 12,
                            height: 392,
                            bottom: 302
                        },
                        compId: 41
                    }, {
                        type: "Box",
                        props: {
                            width: 1625,
                            var: "boxBg",
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 42,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 280,
                                top: 0,
                                skin: "sub1/ui/equip/img_x_9.png",
                                scaleY: 1.6,
                                scaleX: 1.6,
                                centerX: 0
                            },
                            compId: 52
                        }, {
                            type: "Image",
                            props: {
                                y: -8,
                                skin: "sub1/ui/equip/img_x_8.png",
                                scaleY: 1.25,
                                scaleX: 1.25,
                                centerX: -11
                            },
                            compId: 47
                        }, {
                            type: "Image",
                            props: {
                                y: 67,
                                skin: "sub1/ui/equip/img_x_6.png",
                                rotation: 0,
                                centerX: 0
                            },
                            compId: 48
                        }, {
                            type: "Image",
                            props: {
                                y: 29,
                                x: 195,
                                skin: "sub1/ui/equip/img_x_3.png",
                                scaleY: 1.25,
                                scaleX: 1.25
                            },
                            compId: 43
                        }, {
                            type: "Image",
                            props: {
                                y: 29,
                                x: 1027,
                                skin: "sub1/ui/equip/img_x_4.png",
                                scaleY: 1.25,
                                scaleX: 1.25
                            },
                            compId: 44
                        }, {
                            type: "Image",
                            props: {
                                y: 319,
                                x: 208,
                                skin: "sub1/ui/equip/img_x_5.png"
                            },
                            compId: 45
                        }, {
                            type: "Image",
                            props: {
                                y: 319,
                                x: 1041,
                                skin: "sub1/ui/equip/img_x_5.png"
                            },
                            compId: 46
                        }, {
                            type: "Label",
                            props: {
                                y: 26,
                                text: "恭喜获得新武器",
                                fontSize: 28,
                                color: "#ffffff",
                                centerX: 0
                            },
                            compId: 49
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 90,
                            width: 706,
                            var: "boxCenter",
                            height: 540,
                            centerX: 0
                        },
                        compId: 5,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 119,
                                x: 167,
                                var: "img1",
                                skin: "sub1/equip/arm/1.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 119,
                                x: 520,
                                var: "img2",
                                skin: "sub1/equip/arm/1.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 119,
                                x: 341,
                                var: "img3",
                                skin: "sub1/equip/arm/1.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 8
                        }, {
                            type: "Box",
                            props: {
                                y: 297,
                                var: "imgCenter",
                                height: 46,
                                centerX: 0,
                                alpha: 1
                            },
                            compId: 10,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 11.5,
                                    x: 43,
                                    var: "txtName",
                                    valign: "middle",
                                    text: "1",
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    align: "center"
                                },
                                compId: 11
                            }, {
                                type: "Image",
                                props: {
                                    y: 6,
                                    x: 0,
                                    width: 43,
                                    var: "imgLv",
                                    skin: "sub1/ui/scale9/img_getReward_4.png",
                                    height: 35
                                },
                                compId: 50,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 9,
                                        x: 4,
                                        width: 34,
                                        var: "txtLv",
                                        valign: "middle",
                                        text: "1",
                                        height: 26,
                                        fontSize: 24,
                                        font: "fnt2",
                                        color: "#ffffff",
                                        align: "center"
                                    },
                                    compId: 12
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 419.5,
                                x: 143,
                                var: "btnBack",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 14,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 19,
                                    x: 42,
                                    skin: "sub1/ui/equip/img_x_2.png"
                                },
                                compId: 16
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 18
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 419.5,
                                x: 562,
                                var: "btnShare",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 15,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 19,
                                    x: 42,
                                    skin: "sub1/ui/equip/img_x_1.png"
                                },
                                compId: 17
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 19
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 24,
                                x: 4,
                                width: 674,
                                var: "img3DCenter",
                                height: 674
                            },
                            compId: 20
                        }, {
                            type: "Image",
                            props: {
                                y: 145,
                                x: 347,
                                skin: "sub1/ui/getReward/img_x_10.png",
                                scaleY: 0,
                                scaleX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 51
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 6,
                            keyframes: {
                                x: [ {
                                    value: 167,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 167,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "x",
                                    index: 33
                                }, {
                                    value: 107,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 40
                                }, {
                                    value: 283,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "x",
                                    index: 47
                                }, {
                                    value: 341,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "x",
                                    index: 77
                                }, {
                                    value: 341,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 78
                                } ],
                                width: [ {
                                    value: 255,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "width",
                                    index: 0
                                }, {
                                    value: 255,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "width",
                                    index: 47
                                }, {
                                    value: 255,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "width",
                                    index: 77
                                }, {
                                    value: 255,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "width",
                                    index: 78
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "rotation",
                                    index: 3
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "rotation",
                                    index: 6
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 9
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 12
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 15
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 18
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 21
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 24
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 27
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 30
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "rotation",
                                    index: 33
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "alpha",
                                    index: 40
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "alpha",
                                    index: 47
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "alpha",
                                    index: 77
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "alpha",
                                    index: 78
                                } ]
                            }
                        }, {
                            target: 7,
                            keyframes: {
                                x: [ {
                                    value: 520,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 520,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "x",
                                    index: 33
                                }, {
                                    value: 624,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "x",
                                    index: 40
                                }, {
                                    value: 380,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "x",
                                    index: 47
                                }, {
                                    value: 341,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "x",
                                    index: 77
                                }, {
                                    value: 341,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "x",
                                    index: 78
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 3
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 6
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 9
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 12
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 15
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 18
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 21
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 24
                                }, {
                                    value: -6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 27
                                }, {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "rotation",
                                    index: 30
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 33
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "alpha",
                                    index: 40
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "alpha",
                                    index: 47
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "alpha",
                                    index: 77
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "alpha",
                                    index: 78
                                } ]
                            }
                        }, {
                            target: 8,
                            keyframes: {
                                x: [ {
                                    value: 341,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 8,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 341,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 8,
                                    label: null,
                                    key: "x",
                                    index: 77
                                }, {
                                    value: 341,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 8,
                                    key: "x",
                                    index: 78
                                } ],
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 8,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 8,
                                    label: null,
                                    key: "alpha",
                                    index: 77
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 8,
                                    key: "alpha",
                                    index: 78
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 51,
                            keyframes: {
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "backOut",
                                    tween: !0,
                                    target: 51,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 51,
                                    key: "scaleY",
                                    index: 20
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "backOut",
                                    tween: !0,
                                    target: 51,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 51,
                                    key: "scaleX",
                                    index: 20
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 51,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 51,
                                    key: "alpha",
                                    index: 40
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 51,
                                    key: "alpha",
                                    index: 100
                                } ]
                            }
                        } ],
                        name: "ani2",
                        id: 2,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/equip/img_x_10.png", "sub1/ui/equip/img_x_7.png", "sub1/ui/equip/img_x_11.png", "sub1/ui/equip/img_x_9.png", "sub1/ui/equip/img_x_8.png", "sub1/ui/equip/img_x_6.png", "sub1/ui/equip/img_x_3.png", "sub1/ui/equip/img_x_4.png", "sub1/ui/equip/img_x_5.png", "sub1/equip/arm/1.png", "sub1/ui/scale9/img_getReward_4.png", "sub1/ui/scale9/img_normal_2.png", "sub1/ui/equip/img_x_2.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/equip/img_x_1.png", "sub1/ui/getReward/img_x_10.png" ],
                    loadList3D: []
                }, e.NewEquipUnLockViewUI = a, N("ui.view.equip.NewEquipUnLockViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(s.uiView);
                    }
                }
                s.uiView = {
                    type: "View",
                    props: {
                        width: 100,
                        height: 40
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            skin: "sub1/ui/common/img_3.png"
                        },
                        compId: 3
                    }, {
                        type: "Label",
                        props: {
                            y: 9.5,
                            x: 48,
                            width: 141,
                            var: "txtProduce",
                            text: "label",
                            height: 23,
                            fontSize: 21,
                            font: "SimHei",
                            color: "#FFFFFF"
                        },
                        compId: 4
                    } ],
                    loadList: [ "sub1/ui/common/img_3.png" ],
                    loadList3D: []
                }, e.ProduceGoldUI = s, N("ui.view.equip.ProduceGoldUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(n.uiView);
                    }
                }
                n.uiView = {
                    type: "View",
                    props: {
                        width: 307,
                        height: 25
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 303,
                            height: 25
                        },
                        compId: 3,
                        child: [ {
                            type: "Label",
                            props: {
                                y: 3,
                                x: 4,
                                width: 123,
                                var: "txtAttribute",
                                valign: "middle",
                                text: "火力",
                                height: 20,
                                fontSize: 16,
                                font: "SimHei",
                                color: "#D2EAFF",
                                bold: !0,
                                align: "left"
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 9,
                                x: 203,
                                width: 100,
                                skin: "sub1/ui/scale9/img_43.png",
                                height: 9,
                                sizeGrid: "4,4,5,3"
                            },
                            compId: 7
                        }, {
                            type: "Label",
                            props: {
                                y: 4,
                                x: 175,
                                width: 113,
                                var: "txtPro",
                                valign: "middle",
                                text: "100",
                                height: 18,
                                fontSize: 14,
                                font: "SimHei",
                                color: "#D2EAFF",
                                bold: !0,
                                align: "left"
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 9,
                                x: 203,
                                width: 100,
                                var: "imgPro",
                                skin: "sub1/ui/scale9/img_44.png",
                                height: 9,
                                sizeGrid: "3,4,5,5"
                            },
                            compId: 6
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_43.png", "sub1/ui/scale9/img_44.png" ],
                    loadList3D: []
                }, e.PropertybarItemUI = n, N("ui.view.equip.PropertybarItemUI", n);
                class o extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(o.uiView);
                    }
                }
                o.uiView = {
                    type: "View",
                    props: {
                        width: 276,
                        height: 156
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 273,
                            height: 156
                        },
                        compId: 10,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 276,
                                var: "imgBg",
                                top: 0,
                                skin: "sub1/ui/scale9/img_24.png",
                                right: 0,
                                left: 0,
                                height: 158,
                                gray: !1,
                                disabled: !1,
                                bottom: 0,
                                sizeGrid: "35,13,11,11"
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                y: -2,
                                x: 0,
                                width: 276,
                                visible: !0,
                                var: "imgSelect",
                                skin: "sub1/ui/scale9/img_26.png",
                                height: 161,
                                sizeGrid: "10,12,11,10"
                            },
                            compId: 5
                        }, {
                            type: "Label",
                            props: {
                                y: 3,
                                x: 13,
                                width: 114,
                                var: "txtName",
                                valign: "middle",
                                text: "label",
                                height: 23,
                                fontSize: 19,
                                color: "#ffffff",
                                align: "left"
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 86,
                                width: 255,
                                var: "imgTarget",
                                skin: "sub1/equip/arm/6.png",
                                scaleY: 1,
                                scaleX: 1,
                                rotation: 0,
                                height: 112,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 7
                        }, {
                            type: "Label",
                            props: {
                                y: 126,
                                x: 207,
                                width: 86,
                                var: "txtLv",
                                valign: "middle",
                                text: "1",
                                height: 28,
                                fontSize: 20,
                                font: "SimHei",
                                color: "#ffffff",
                                align: "center"
                            },
                            compId: 8,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -5,
                                    x: 24,
                                    width: 36,
                                    skin: "sub1/ui/equip/img_16.png",
                                    height: 30,
                                    sizeGrid: "8,8,10,8"
                                },
                                compId: 11
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 41,
                                x: 99,
                                var: "imgLock",
                                skin: "sub1/ui/equip/img_6.png",
                                scaleY: 1,
                                scaleX: 1
                            },
                            compId: 9
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 7,
                            keyframes: {
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .9,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "scaleY",
                                    index: 8
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "scaleY",
                                    index: 11
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "scaleY",
                                    index: 14
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .9,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "scaleX",
                                    index: 8
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "scaleX",
                                    index: 11
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    label: null,
                                    key: "scaleX",
                                    index: 14
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 24,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 7,
                            keyframes: {
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: -5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 5
                                }, {
                                    value: 5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 10
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 7,
                                    key: "rotation",
                                    index: 15
                                } ]
                            }
                        } ],
                        name: "ani2",
                        id: 2,
                        frameRate: 50,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/scale9/img_24.png", "sub1/ui/scale9/img_26.png", "sub1/equip/arm/6.png", "sub1/ui/equip/img_16.png", "sub1/ui/equip/img_6.png" ],
                    loadList3D: []
                }, e.SynthesisCellUI = o, N("ui.view.equip.SynthesisCellUI", o);
                class r extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(r.uiView);
                    }
                }
                r.uiView = {
                    type: "View",
                    props: {
                        width: 1117,
                        mouseThrough: !1,
                        height: 670
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            width: 1e3,
                            var: "boxBtn",
                            height: 168,
                            centerX: 0,
                            bottom: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 40,
                                x: 165,
                                width: 149,
                                var: "btnRecovery",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                height: 96,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 10,
                                    x: 44,
                                    skin: "sub1/ui/equip/img_7.png",
                                    alpha: .3
                                },
                                compId: 7
                            }, {
                                type: "Box",
                                props: {
                                    y: -80,
                                    x: 8.5,
                                    width: 130,
                                    var: "boxGetGold",
                                    height: 74
                                },
                                compId: 41
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 91,
                                x: 517,
                                var: "btnBuy",
                                skin: "sub1/ui/scale9/img_25.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "50,170,53,150"
                            },
                            compId: 5,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 22.5,
                                    x: 8,
                                    width: 168,
                                    var: "imgCurArm",
                                    height: 71
                                },
                                compId: 8
                            }, {
                                type: "Image",
                                props: {
                                    y: 50.5,
                                    x: 206,
                                    skin: "sub1/ui/common/img_3.png"
                                },
                                compId: 9
                            }, {
                                type: "Label",
                                props: {
                                    y: 52.5,
                                    x: 246,
                                    width: 120,
                                    var: "txtPrice",
                                    valign: "middle",
                                    text: "label",
                                    stroke: 0,
                                    height: 38,
                                    fontSize: 30,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "left"
                                },
                                compId: 10
                            }, {
                                type: "Label",
                                props: {
                                    y: 75.5,
                                    x: 158,
                                    width: 40,
                                    var: "txtLv",
                                    valign: "middle",
                                    text: "1",
                                    height: 25,
                                    fontSize: 16,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 11
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 23
                            }, {
                                type: "Image",
                                props: {
                                    y: 21.5,
                                    x: 248,
                                    skin: "sub1/ui/equip/img_15.png"
                                },
                                compId: 27
                            }, {
                                type: "Image",
                                props: {
                                    y: 69.5,
                                    x: 163.5,
                                    width: 29,
                                    skin: "sub1/ui/equip/img_16.png",
                                    height: 25,
                                    sizeGrid: "8,8,10,8"
                                },
                                compId: 29
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 346,
                                    height: 97
                                },
                                compId: 42,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: -179,
                                        width: 144,
                                        skin: "sub1/ui/common/img_25.png",
                                        height: 95,
                                        alpha: .3
                                    },
                                    compId: 43
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 346,
                                        skin: "sub1/ui/scale9/img_12.png",
                                        renderType: "mask",
                                        height: 95,
                                        sizeGrid: "9,7,8,6"
                                    },
                                    compId: 44
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 88,
                                x: 790,
                                width: 149,
                                var: "btnShop",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                height: 96,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 6,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 12,
                                    x: 35,
                                    skin: "sub1/ui/equip/img_9.png"
                                },
                                compId: 12
                            }, {
                                type: "Script",
                                props: {
                                    y: -1,
                                    x: 0,
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 16
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 88,
                                x: 84,
                                width: 112,
                                var: "btnWarehouse",
                                height: 96,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 32,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 6,
                                    x: 22,
                                    skin: "sub1/ui/equip/img_17.png",
                                    alpha: 0
                                },
                                compId: 40
                            }, {
                                type: "Image",
                                props: {
                                    y: 5,
                                    x: 22.5,
                                    skin: "sub1/ui/equip/img_18.png"
                                },
                                compId: 34
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 35
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            width: 1117,
                            var: "boxContentRoot",
                            height: 515,
                            centerX: 0,
                            bottom: 155
                        },
                        compId: 13,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 23,
                                x: 20,
                                width: 273,
                                height: 156
                            },
                            compId: 24
                        }, {
                            type: "Box",
                            props: {
                                y: 23,
                                x: 304,
                                width: 273,
                                height: 156
                            },
                            compId: 30
                        }, {
                            type: "Box",
                            props: {
                                y: 186.5,
                                x: 20,
                                width: 273,
                                height: 156
                            },
                            compId: 31
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 43,
                            keyframes: {
                                x: [ {
                                    value: -179,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 423,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    key: "x",
                                    index: 106
                                }, {
                                    value: 423,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    label: null,
                                    key: "x",
                                    index: 190
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    } ],
                    loadList: [ "sub1/ui/scale9/img_normal_2.png", "sub1/ui/equip/img_7.png", "sub1/ui/scale9/img_25.png", "sub1/ui/common/img_3.png", "sub1/ui/equip/img_15.png", "sub1/ui/equip/img_16.png", "sub1/ui/common/img_25.png", "sub1/ui/scale9/img_12.png", "sub1/ui/equip/img_9.png", "sub1/ui/equip/img_17.png", "sub1/ui/equip/img_18.png" ],
                    loadList3D: []
                }, e.SynthesisViewUI = r, N("ui.view.equip.SynthesisViewUI", r);
                class l extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(l.uiView);
                    }
                }
                l.uiView = {
                    type: "View",
                    props: {
                        width: 289,
                        height: 150
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            var: "imgSelect",
                            top: 0,
                            skin: "sub1/ui/scale9/img_45.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            sizeGrid: "34,31,28,30"
                        },
                        compId: 4
                    }, {
                        type: "Image",
                        props: {
                            y: 15,
                            x: 16,
                            width: 256,
                            var: "imgFrame",
                            skin: "sub1/ui/scale9/img_pingjikuang_1.png",
                            height: 119,
                            sizeGrid: "10,14,16,15"
                        },
                        compId: 5
                    }, {
                        type: "Image",
                        props: {
                            y: 22,
                            x: 235,
                            var: "imgGrade",
                            skin: "sub1/ui/warehouse/img_pingji_1.png"
                        },
                        compId: 6
                    }, {
                        type: "Label",
                        props: {
                            y: 104,
                            x: 24,
                            width: 184,
                            var: "txtName",
                            valign: "middle",
                            text: "label",
                            height: 27,
                            fontSize: 22,
                            color: "#000000",
                            align: "left"
                        },
                        compId: 7
                    }, {
                        type: "Image",
                        props: {
                            y: 19,
                            x: 16,
                            var: "imgIcon",
                            skin: "sub1/equip/arm/1.png"
                        },
                        compId: 8
                    }, {
                        type: "Label",
                        props: {
                            y: 102,
                            x: 81,
                            width: 184,
                            var: "txtLv",
                            valign: "middle",
                            text: "label",
                            height: 27,
                            fontSize: 22,
                            color: "#000000",
                            align: "right"
                        },
                        compId: 10
                    }, {
                        type: "Image",
                        props: {
                            y: 56,
                            x: 16,
                            width: 256,
                            var: "imgEquip",
                            skin: "sub1/ui/scale9/img_43.png",
                            height: 37,
                            sizeGrid: "4,4,5,3"
                        },
                        compId: 11,
                        child: [ {
                            type: "Label",
                            props: {
                                y: 5,
                                x: 67.5,
                                width: 121,
                                valign: "middle",
                                text: "已装备",
                                height: 27,
                                fontSize: 24,
                                font: "SimHei",
                                color: "#ffffff",
                                align: "center"
                            },
                            compId: 12
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            y: 2,
                            x: 259,
                            visible: !1,
                            var: "imgDot",
                            skin: "sub1/ui/common/img_1.png"
                        },
                        compId: 13
                    } ],
                    loadList: [ "sub1/ui/scale9/img_45.png", "sub1/ui/scale9/img_pingjikuang_1.png", "sub1/ui/warehouse/img_pingji_1.png", "sub1/equip/arm/1.png", "sub1/ui/scale9/img_43.png", "sub1/ui/common/img_1.png" ],
                    loadList3D: []
                }, e.WarehouseBottomItemUI = l, N("ui.view.equip.WarehouseBottomItemUI", l);
                class h extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(h.uiView);
                    }
                }
                h.uiView = {
                    type: "View",
                    props: {
                        width: 124,
                        height: 63
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            var: "imgFrame",
                            top: 0,
                            skin: "sub1/ui/scale9/img_46.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            sizeGrid: "13,10,10,11"
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            y: 9,
                            x: 11,
                            var: "imgIcon",
                            skin: "sub1/equip/arm/1.png",
                            scaleY: .4,
                            scaleX: .4
                        },
                        compId: 4
                    }, {
                        type: "Image",
                        props: {
                            y: 13,
                            x: 48,
                            var: "imgLock",
                            skin: "sub1/ui/equip/img_6.png",
                            scaleY: .4,
                            scaleX: .4
                        },
                        compId: 5
                    } ],
                    loadList: [ "sub1/ui/scale9/img_46.png", "sub1/equip/arm/1.png", "sub1/ui/equip/img_6.png" ],
                    loadList3D: []
                }, e.WarehouseRightItemUI = h, N("ui.view.equip.WarehouseRightItemUI", h);
                class c extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(c.uiView);
                    }
                }
                c.uiView = {
                    type: "View",
                    props: {
                        width: 1174,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            x: 0,
                            width: 1174,
                            top: 0,
                            bottom: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 108,
                                x: 551,
                                width: 606,
                                var: "boxTop",
                                height: 213
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 607,
                                    skin: "sub1/ui/scale9/img_13.png",
                                    height: 211,
                                    alpha: .3,
                                    sizeGrid: "2,4,3,2"
                                },
                                compId: 45
                            }, {
                                type: "Label",
                                props: {
                                    y: -12,
                                    x: 245,
                                    width: 114,
                                    text: "已携带装备",
                                    height: 28,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0
                                },
                                compId: 11
                            }, {
                                type: "Box",
                                props: {
                                    y: 35,
                                    x: 34,
                                    width: 539,
                                    var: "boxEquip",
                                    height: 144
                                },
                                compId: 96
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 345,
                                x: 11,
                                width: 1156,
                                var: "boxBottom",
                                height: 311
                            },
                            compId: 8,
                            child: [ {
                                type: "List",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 1149,
                                    var: "listBottom",
                                    repeatX: 4,
                                    height: 312
                                },
                                compId: 10
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 334,
                                x: 2,
                                width: 1158,
                                skin: "sub1/ui/scale9/img_48.png",
                                height: 7
                            },
                            compId: 46
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 527,
                                height: 327
                            },
                            compId: 47,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 80,
                                    x: 224,
                                    width: 291,
                                    skin: "sub1/ui/scale9/img_48.png",
                                    height: 3
                                },
                                compId: 52
                            }, {
                                type: "Image",
                                props: {
                                    y: 45,
                                    x: 220,
                                    width: 121,
                                    var: "imgNameBg",
                                    skin: "sub1/ui/scale9/img_pingjikuang_bg_4.png",
                                    height: 29
                                },
                                compId: 48
                            }, {
                                type: "Image",
                                props: {
                                    y: 45,
                                    x: 349,
                                    var: "imgIcon",
                                    skin: "sub1/equip/arm/1.png",
                                    scaleY: .3,
                                    scaleX: .3
                                },
                                compId: 49
                            }, {
                                type: "Label",
                                props: {
                                    y: 41.5,
                                    x: 392,
                                    width: 112,
                                    var: "txtType",
                                    valign: "middle",
                                    text: "label",
                                    height: 42,
                                    fontSize: 16,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 50
                            }, {
                                type: "Label",
                                props: {
                                    y: 37.5,
                                    x: 210,
                                    width: 139,
                                    var: "txtName",
                                    valign: "middle",
                                    text: "label",
                                    height: 42,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 51
                            }, {
                                type: "Image",
                                props: {
                                    y: 50,
                                    x: 488,
                                    var: "imgGrade",
                                    skin: "sub1/ui/warehouse/img_pingji_1.png"
                                },
                                compId: 107
                            }, {
                                type: "Image",
                                props: {
                                    y: -45,
                                    x: -103,
                                    width: 442,
                                    var: "img3DCenter",
                                    height: 442
                                },
                                compId: 108
                            }, {
                                type: "Box",
                                props: {
                                    y: 83,
                                    x: 217,
                                    width: 311,
                                    var: "boxPropertybar",
                                    height: 231
                                },
                                compId: 109
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 697,
                                x: 439,
                                width: 198,
                                var: "btnStrengthen",
                                skin: "sub1/ui/scale9/img_normal_3.png",
                                height: 80,
                                centerX: -148,
                                bottom: 13,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "25,29,30,26"
                            },
                            compId: 97,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 99
                            }, {
                                type: "Image",
                                props: {
                                    y: 22.5,
                                    x: 68,
                                    skin: "sub1/ui/warehouse/img_1.png"
                                },
                                compId: 104
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 697,
                                x: 728,
                                width: 198,
                                var: "btnEquip",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                name: "btnEquip",
                                height: 80,
                                centerX: 141,
                                bottom: 13,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 98,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 103
                            }, {
                                type: "Image",
                                props: {
                                    y: 21.5,
                                    x: 68,
                                    skin: "sub1/ui/warehouse/img_3.png"
                                },
                                compId: 105
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 697,
                                x: 728,
                                width: 198,
                                var: "btnRemove",
                                skin: "sub1/ui/scale9/img_normal_4.png",
                                height: 80,
                                centerX: 141,
                                bottom: 13,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,28,29,28"
                            },
                            compId: 100,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 101
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    x: 66.5,
                                    skin: "sub1/ui/warehouse/img_2.png"
                                },
                                compId: 106
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_13.png", "sub1/ui/scale9/img_48.png", "sub1/ui/scale9/img_pingjikuang_bg_4.png", "sub1/equip/arm/1.png", "sub1/ui/warehouse/img_pingji_1.png", "sub1/ui/scale9/img_normal_3.png", "sub1/ui/warehouse/img_1.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/warehouse/img_3.png", "sub1/ui/scale9/img_normal_4.png", "sub1/ui/warehouse/img_2.png" ],
                    loadList3D: []
                }, e.WarehouseViewUI = c, N("ui.view.equip.WarehouseViewUI", c);
            }(e.equip || (e.equip = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/equipTry/EquipTryView");
                    }
                }
                e.EquipTryViewUI = t, N("ui.view.equipTry.EquipTryViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/equipTry/RoleTryView");
                    }
                }
                e.RoleTryViewUI = i, N("ui.view.equipTry.RoleTryViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/equipTry/ShopTryView");
                    }
                }
                e.ShopTryViewUI = a, N("ui.view.equipTry.ShopTryViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/equipTry/SkillModeEquipTryView");
                    }
                }
                e.SkillModeEquipTryViewUI = s, N("ui.view.equipTry.SkillModeEquipTryViewUI", s);
            }(e.equipTry || (e.equipTry = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .75,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            width: 738,
                            height: 444,
                            centerY: -36,
                            centerX: 0
                        },
                        compId: 8,
                        child: [ {
                            type: "Label",
                            props: {
                                text: "您确定要退出游戏吗？",
                                fontSize: 54,
                                font: "SimHei",
                                color: "#FFFFFF",
                                centerY: -77,
                                centerX: 0,
                                bold: !0
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 319,
                                x: 559,
                                var: "btnBack",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 6,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 9
                            }, {
                                type: "Label",
                                props: {
                                    y: 5,
                                    x: 48,
                                    width: 100,
                                    valign: "middle",
                                    text: "否",
                                    height: 57,
                                    fontSize: 30,
                                    color: "#FFFFFF",
                                    align: "center"
                                },
                                compId: 15
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 319,
                                x: 169,
                                var: "btnOK",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 7,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 10
                            }, {
                                type: "Label",
                                props: {
                                    y: 5,
                                    x: 48,
                                    width: 100,
                                    valign: "middle",
                                    text: "是",
                                    height: 57,
                                    fontSize: 30,
                                    color: "#FFFFFF",
                                    align: "center"
                                },
                                compId: 16
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "sub1/ui/scale9/img_normal_2.png" ],
                    loadList3D: []
                }, e.ExitViewUI = t, N("ui.view.exit.ExitViewUI", t);
            }(e.exit || (e.exit = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            var: "floatingLayer",
                            top: 14,
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 8
                    }, {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 526,
                            var: "boxTop",
                            height: 142
                        },
                        compId: 20,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 25,
                                x: 123,
                                width: 70,
                                var: "imgHead",
                                height: 72
                            },
                            compId: 23
                        }, {
                            type: "Image",
                            props: {
                                y: 22,
                                x: 120,
                                width: 76,
                                var: "btnStanding",
                                skin: "sub1/ui/scale9/img_first_2.png",
                                sizeGrid: "10,6,10,10",
                                height: 77
                            },
                            compId: 203,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -5,
                                    x: 65,
                                    skin: "sub1/ui/common/img_1.png",
                                    name: "imgDot"
                                },
                                compId: 272
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 21,
                                x: 211,
                                var: "txtName",
                                valign: "middle",
                                text: "游客",
                                strokeColor: "#000000",
                                fontSize: 24,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "left"
                            },
                            compId: 29
                        }, {
                            type: "Image",
                            props: {
                                y: 39,
                                x: 786,
                                width: 109,
                                visible: !1,
                                var: "btnGameCommunity",
                                skin: "sub1/ui/scale9/img_first_6.png",
                                sizeGrid: "26,20,34,19",
                                pivotY: 22,
                                pivotX: 55,
                                height: 44
                            },
                            compId: 34,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 35
                            }, {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: 1,
                                    skin: "sub1/ui/first/img_58.png",
                                    sizeGrid: "0,8,0,8"
                                },
                                compId: 271
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 58.5,
                                x: 211,
                                space: -5
                            },
                            compId: 116,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: -3,
                                    x: 3,
                                    var: "txtLv",
                                    valign: "middle",
                                    text: "lv.1",
                                    fontSize: 24,
                                    color: "#FFF000",
                                    align: "left"
                                },
                                compId: 30
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 84,
                                x: 213,
                                width: 168,
                                skin: "sub1/ui/scale9/img_first_5.png",
                                sizeGrid: "0,9,0,8",
                                height: 15
                            },
                            compId: 173,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 168,
                                    var: "imgExp",
                                    skin: "sub1/ui/scale9/img_first_4.png",
                                    sizeGrid: "0,7,0,6",
                                    height: 15
                                },
                                compId: 206
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 45,
                                x: 702,
                                width: 47,
                                visible: !1,
                                var: "btnNotify",
                                height: 41,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 295,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 296
                            }, {
                                type: "Image",
                                props: {
                                    y: 3,
                                    x: 7,
                                    skin: "sub1/ui/first/img_tt_3.png"
                                },
                                compId: 297
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            width: 911,
                            var: "boxRightBottom",
                            right: 0,
                            height: 141,
                            bottom: 0
                        },
                        compId: 36,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 79,
                                x: 187,
                                width: 146,
                                var: "btnOnLine",
                                height: 109,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 290,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 291
                            }, {
                                type: "Image",
                                props: {
                                    y: 5,
                                    x: 0,
                                    var: "imgOnLine1",
                                    skin: "sub1/ui/first/img_60.png"
                                },
                                compId: 293
                            }, {
                                type: "Image",
                                props: {
                                    y: -19,
                                    x: 0,
                                    var: "imgOnLine2",
                                    skin: "sub1/ui/first/img_59.png"
                                },
                                compId: 294
                            }, {
                                type: "Label",
                                props: {
                                    y: 31,
                                    var: "labelOnLineTime",
                                    text: "30:30",
                                    strokeColor: "#010000",
                                    stroke: 2,
                                    fontSize: 30,
                                    color: "#ffffff",
                                    centerX: 0
                                },
                                compId: 299
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 91,
                                x: 316,
                                var: "btnSign",
                                skin: "sub1/ui/first/img_2.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 38,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 87
                            }, {
                                type: "Image",
                                props: {
                                    y: 6,
                                    x: 104,
                                    visible: !1,
                                    skin: "sub1/ui/common/img_1.png",
                                    name: "imgDot"
                                },
                                compId: 164
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 89,
                                x: 733,
                                var: "btnTreasureChest",
                                skin: "sub1/ui/first/img_1.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 40,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 89
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 110.5,
                                    visible: !1,
                                    skin: "sub1/ui/common/img_1.png",
                                    name: "imgDot"
                                },
                                compId: 165
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 90,
                                x: 590.5,
                                var: "btnTask",
                                skin: "sub1/ui/first/img_3.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 41,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 90
                            }, {
                                type: "Image",
                                props: {
                                    y: 6,
                                    x: 104,
                                    visible: !1,
                                    skin: "sub1/ui/common/img_1.png",
                                    name: "imgDot"
                                },
                                compId: 160
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 79,
                                x: 522,
                                skin: "sub1/ui/first/img_50.png"
                            },
                            compId: 163
                        }, {
                            type: "Image",
                            props: {
                                y: 79,
                                x: 390,
                                skin: "sub1/ui/first/img_50.png"
                            },
                            compId: 204
                        }, {
                            type: "Image",
                            props: {
                                y: 79,
                                x: 663,
                                skin: "sub1/ui/first/img_50.png"
                            },
                            compId: 205
                        }, {
                            type: "Image",
                            props: {
                                y: 89,
                                x: 453,
                                width: 107,
                                var: "btnTurnTable",
                                skin: "sub1/ui/first/img_55.png",
                                pivotY: 27,
                                pivotX: 54,
                                height: 53
                            },
                            compId: 240,
                            child: [ {
                                type: "Script",
                                props: {
                                    y: 62,
                                    x: 676,
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 243
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            x: 847,
                            width: 131,
                            visible: !1,
                            height: 133,
                            bottom: -203
                        },
                        compId: 43,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 63,
                                x: 62,
                                var: "btnSeason",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 44,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 20,
                                    x: 26.5
                                },
                                compId: 45
                            }, {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 15
                                },
                                compId: 46
                            }, {
                                type: "Image",
                                props: {
                                    y: 14,
                                    x: 100
                                },
                                compId: 47
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 48
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            width: 416,
                            right: 151,
                            height: 518,
                            centerY: -37
                        },
                        compId: 49,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 338,
                                x: 335,
                                width: 257,
                                var: "btnRecreation",
                                height: 185,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 68,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 91
                            }, {
                                type: "Image",
                                props: {
                                    skin: "sub1/ui/first/img_45.png",
                                    centerY: -2,
                                    centerX: 0
                                },
                                compId: 117
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 139,
                                x: 183,
                                width: 312,
                                var: "btnRanking",
                                height: 228,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 121,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 122
                            }, {
                                type: "Image",
                                props: {
                                    skin: "sub1/ui/first/img_47.png",
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 124
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 145,
                                x: 405.5,
                                width: 113,
                                var: "btnBiochemistry",
                                height: 195,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 153,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 154
                            }, {
                                type: "Image",
                                props: {
                                    skin: "sub1/ui/first/img_44.png",
                                    centerY: 7,
                                    centerX: -3
                                },
                                compId: 155
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 145,
                                x: -29,
                                width: 123,
                                var: "btnEquip",
                                height: 181,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 84,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: -5,
                                    skin: "sub1/ui/first/img_43.png"
                                },
                                compId: 167
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 93
                            }, {
                                type: "Label",
                                props: {
                                    y: 125,
                                    x: 33,
                                    text: "ARMS",
                                    fontSize: 15,
                                    color: "#ffffff",
                                    centerX: -7
                                },
                                compId: 257
                            }, {
                                type: "Label",
                                props: {
                                    y: 140,
                                    x: 22,
                                    text: "武器",
                                    fontSize: 35,
                                    color: "#ffffff",
                                    centerX: -5
                                },
                                compId: 256
                            }, {
                                type: "Box",
                                props: {
                                    y: -14,
                                    x: 22,
                                    width: 190,
                                    scaleY: .7,
                                    scaleX: .7,
                                    rotation: 31,
                                    height: 205
                                },
                                compId: 170,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        width: 262,
                                        var: "imgGun",
                                        skin: "sub1/equip/arm/38.png",
                                        skewY: 180,
                                        height: 122,
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 168
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 98,
                                    visible: !1,
                                    skin: "sub1/ui/common/img_1.png",
                                    name: "imgDot"
                                },
                                compId: 156
                            }, {
                                type: "Label",
                                props: {
                                    y: 4.5,
                                    x: 59.5,
                                    width: 36,
                                    var: "labelGunLv",
                                    valign: "middle",
                                    text: "4",
                                    height: 26,
                                    fontSize: 26,
                                    color: "#ffffff",
                                    align: "center"
                                },
                                compId: 171
                            }, {
                                type: "Box",
                                props: {
                                    y: 31,
                                    x: 7,
                                    width: 97,
                                    height: 123
                                },
                                compId: 258,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        skin: "sub1/ui/first/img_56.png"
                                    },
                                    compId: 259
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "sub1/ui/first/img_57.png"
                                    },
                                    compId: 260
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 8,
                                        skin: "sub1/ui/first/img_56.png",
                                        height: 9
                                    },
                                    compId: 261
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 5,
                                        skin: "sub1/ui/first/img_57.png",
                                        height: 9
                                    },
                                    compId: 262
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        skin: "sub1/ui/first/img_56.png"
                                    },
                                    compId: 263
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        skin: "sub1/ui/first/img_57.png"
                                    },
                                    compId: 264
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 8,
                                        skin: "sub1/ui/first/img_56.png",
                                        height: 9
                                    },
                                    compId: 265
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 5,
                                        skin: "sub1/ui/first/img_57.png",
                                        height: 9
                                    },
                                    compId: 266
                                }, {
                                    type: "Script",
                                    props: {
                                        runtime: "effect/UpMoveEffect.ts"
                                    },
                                    compId: 267
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 503,
                                x: 52,
                                width: 181,
                                var: "btnMode",
                                height: 79,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 175,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    skin: "sub1/ui/scale9/img_first_1.png"
                                },
                                compId: 176
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 177
                            }, {
                                type: "Image",
                                props: {
                                    y: 25,
                                    x: 28,
                                    skin: "sub1/ui/first/img_48.png"
                                },
                                compId: 178
                            }, {
                                type: "Image",
                                props: {
                                    y: 16,
                                    x: 90.5,
                                    skin: "sub1/ui/first/img_53.png"
                                },
                                compId: 179
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    skin: "sub1/ui/scale9/img_first_1.png",
                                    renderType: "mask"
                                },
                                compId: 182
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 259,
                                    width: 81,
                                    rotation: 90,
                                    height: 359
                                },
                                compId: 199,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "effect/GunMoveEffect.ts"
                                    },
                                    compId: 200
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 5,
                                        skin: "sub1/ui/first/img_51.png",
                                        rotation: 90
                                    },
                                    compId: 201
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 214,
                                        x: 81,
                                        skin: "sub1/ui/first/img_51.png",
                                        rotation: 90
                                    },
                                    compId: 202
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 503,
                                x: 293,
                                width: 260,
                                var: "btnStart",
                                height: 79,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 183,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    skin: "sub1/ui/scale9/img_first_3.png"
                                },
                                compId: 184
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 185
                            }, {
                                type: "Image",
                                props: {
                                    y: 40,
                                    x: 0,
                                    skin: "sub1/ui/first/img_52.png"
                                },
                                compId: 191
                            }, {
                                type: "Image",
                                props: {
                                    skin: "sub1/ui/first/img_49.png"
                                },
                                compId: 192
                            }, {
                                type: "Label",
                                props: {
                                    y: 57,
                                    x: 8,
                                    var: "labelmode",
                                    text: "label",
                                    fontSize: 18,
                                    color: "#371E01"
                                },
                                compId: 193
                            }, {
                                type: "Image",
                                props: {
                                    y: 24,
                                    x: 72,
                                    skin: "sub1/ui/first/img_46.png"
                                },
                                compId: 186
                            }, {
                                type: "Image",
                                props: {
                                    y: -1,
                                    x: -160,
                                    skin: "sub1/ui/common/img_25.png",
                                    blendMode: "lighter",
                                    alpha: .75
                                },
                                compId: 213
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    skin: "sub1/ui/scale9/img_first_3.png",
                                    renderType: "mask"
                                },
                                compId: 190
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 260,
                                    width: 81,
                                    rotation: 90,
                                    height: 454
                                },
                                compId: 195,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "effect/GunMoveEffect.ts"
                                    },
                                    compId: 196
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 5,
                                        skin: "sub1/ui/first/img_51.png",
                                        rotation: 90
                                    },
                                    compId: 188
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 259,
                                        x: 79,
                                        skin: "sub1/ui/first/img_51.png",
                                        rotation: 90
                                    },
                                    compId: 189
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 26,
                                x: -27,
                                width: 103,
                                var: "boxGold",
                                height: 81
                            },
                            compId: 207
                        }, {
                            type: "Box",
                            props: {
                                y: 336,
                                x: 53,
                                width: 298,
                                var: "btnSkillMode",
                                pivotY: 92,
                                pivotX: 149,
                                height: 184
                            },
                            compId: 253,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "imgSkillMode",
                                    skin: "sub1/ui/first/img_42.png"
                                },
                                compId: 254
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 255
                            }, {
                                type: "Image",
                                props: {
                                    y: 7,
                                    x: 112.5,
                                    skin: "sub1/ui/first/img_x_1.png"
                                },
                                compId: 298
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 514,
                                x: -119,
                                width: 111,
                                visible: !1,
                                var: "btnMoreGame",
                                pivotY: 23,
                                pivotX: 56,
                                height: 45
                            },
                            compId: 236,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 109,
                                    skin: "sub1/ui/scale9/img_first_6.png",
                                    sizeGrid: "0,8,0,8",
                                    height: 44
                                },
                                compId: 237
                            }, {
                                type: "Image",
                                props: {
                                    y: 2,
                                    x: 5.5,
                                    skin: "sub1/ui/first/img_54.png"
                                },
                                compId: 235
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 238
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 143,
                            x: 120,
                            width: 226,
                            var: "boxLeft",
                            height: 552
                        },
                        compId: 81,
                        child: [ {
                            type: "VBox",
                            props: {
                                y: 280,
                                x: 0,
                                width: 226,
                                space: 5,
                                height: 355
                            },
                            compId: 214,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 112,
                                    width: 224,
                                    height: 85
                                },
                                compId: 230,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        width: 224,
                                        var: "box1",
                                        height: 85,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 215,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            var: "img1",
                                            skin: "sub1/ui/first/1.png",
                                            centerY: 0,
                                            centerX: 0
                                        },
                                        compId: 216
                                    }, {
                                        type: "Script",
                                        props: {
                                            runtime: "effect/ButtonEffect.ts"
                                        },
                                        compId: 217
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 132,
                                    x: 112,
                                    width: 224,
                                    height: 85
                                },
                                compId: 231,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        width: 224,
                                        var: "box2",
                                        height: 85,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 221,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            var: "img2",
                                            skin: "sub1/ui/first/1.png",
                                            centerY: 0,
                                            centerX: 0
                                        },
                                        compId: 222
                                    }, {
                                        type: "Script",
                                        props: {
                                            runtime: "effect/ButtonEffect.ts"
                                        },
                                        compId: 223
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 224,
                                    x: 112,
                                    width: 224,
                                    height: 85
                                },
                                compId: 232,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        width: 224,
                                        var: "box3",
                                        height: 85,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 224,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            var: "img3",
                                            skin: "sub1/ui/first/1.png",
                                            centerY: 0,
                                            centerX: 0
                                        },
                                        compId: 225
                                    }, {
                                        type: "Script",
                                        props: {
                                            runtime: "effect/ButtonEffect.ts"
                                        },
                                        compId: 226
                                    } ]
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 57,
                                x: 110,
                                var: "btnMentor",
                                skin: "sub1/ui/first/img_mentor_icon.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 287,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 288
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 175,
                                x: 113,
                                var: "btnWarehouse",
                                skin: "sub1/ui/first/img_lib_icon.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 286,
                            child: [ {
                                type: "Script",
                                props: {
                                    y: 0,
                                    x: 0,
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 289
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 56,
                                x: 112,
                                width: 94,
                                visible: !1,
                                var: "btnAddDesktop",
                                pivotY: 32,
                                pivotX: 47,
                                height: 64
                            },
                            compId: 300,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 301
                            }, {
                                type: "Image",
                                props: {
                                    skin: "sub1/ui/first/img_tt_2.png"
                                },
                                compId: 302
                            } ]
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            y: 37,
                            width: 60,
                            visible: !1,
                            var: "btnCtrl",
                            right: 218,
                            height: 50,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 94,
                        child: [ {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 95
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 66,
                                skin: "sub1/ui/scale9/img_18.png",
                                height: 47,
                                sizeGrid: "13,15,15,13"
                            },
                            compId: 132
                        }, {
                            type: "Image",
                            props: {
                                y: 23.5,
                                skin: "sub1/ui/first/img_14.png",
                                right: 11,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 133
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: -80,
                            x: 0,
                            width: 1625,
                            var: "boxLoad",
                            height: 90
                        },
                        compId: 103
                    }, {
                        type: "Box",
                        props: {
                            y: 109,
                            width: 97,
                            var: "boxDan",
                            height: 108,
                            centerX: 0
                        },
                        compId: 148,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 63,
                                x: 58,
                                width: 226,
                                scaleY: .5,
                                scaleX: .5,
                                height: 278,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 150,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 112,
                                    x: 113,
                                    var: "imgDan",
                                    skin: "sub1/ui/dan/img_1.png",
                                    scaleY: 1,
                                    scaleX: 1,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 151
                            }, {
                                type: "Label",
                                props: {
                                    y: 258,
                                    var: "labelDan",
                                    valign: "middle",
                                    text: "白银III",
                                    scaleY: 1.8,
                                    scaleX: 1.8,
                                    name: "txtName",
                                    italic: !0,
                                    height: 30,
                                    fontSize: 30,
                                    color: "#ffffff",
                                    centerX: -9,
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 152
                            }, {
                                type: "Image",
                                props: {
                                    y: 177,
                                    x: 87.1767578125,
                                    var: "imgLv",
                                    skin: "sub1/ui/dan/img_lv_3.png"
                                },
                                compId: 234
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: -4,
                            x: 461,
                            width: 63,
                            var: "btnDragonBoat",
                            height: 219,
                            anchorX: .5
                        },
                        compId: 273,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 105,
                                x: -33,
                                skin: "sub1/ui/first/img_summer_gift.png"
                            },
                            compId: 275
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 6.5,
                                skin: "sub1/ui/first/img_dragonBoat3.png"
                            },
                            compId: 274
                        }, {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 285
                        } ]
                    }, {
                        type: "Label",
                        props: {
                            x: 120,
                            visible: !1,
                            var: "label4399",
                            text: "4399",
                            italic: !0,
                            fontSize: 60,
                            color: "#ffffff",
                            bottom: 52,
                            bold: !0,
                            alpha: .5
                        },
                        compId: 246
                    }, {
                        type: "Box",
                        props: {
                            visible: !1,
                            var: "boxReview",
                            top: 0,
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 247,
                        child: [ {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/review/img_1.jpg"
                            },
                            compId: 248
                        }, {
                            type: "Box",
                            props: {
                                y: 123,
                                width: 408,
                                var: "btnReviewStart",
                                right: 97,
                                height: 422
                            },
                            compId: 252,
                            child: [ {
                                type: "Image",
                                props: {
                                    x: 10.5,
                                    skin: "sub1/ui/review/img_3.png",
                                    centerX: 0
                                },
                                compId: 249
                            }, {
                                type: "Image",
                                props: {
                                    y: 348,
                                    x: 203.5,
                                    skin: "sub1/ui/review/img_2.png",
                                    right: 175,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 250
                            } ]
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            y: 37,
                            x: 727,
                            width: 55,
                            var: "btnPrivate",
                            skin: "sub1/ui/scale9/img_60.png",
                            sizeGrid: "3,4,5,5",
                            height: 53,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 268,
                        child: [ {
                            type: "Label",
                            props: {
                                text: "隐私\\n协议",
                                fontSize: 23,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 269
                        }, {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 270
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 103,
                            keyframes: {
                                y: [ {
                                    value: -90,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 103,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 103,
                                    key: "y",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 20,
                            keyframes: {
                                y: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 20,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -143,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 20,
                                    key: "y",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 49,
                            keyframes: {
                                right: [ {
                                    value: 151,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 49,
                                    key: "right",
                                    index: 0
                                }, {
                                    value: -520,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 49,
                                    key: "right",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 81,
                            keyframes: {
                                x: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 81,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: -283,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 81,
                                    key: "x",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 36,
                            keyframes: {
                                bottom: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    key: "bottom",
                                    index: 0
                                }, {
                                    value: -154,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    key: "bottom",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 94,
                            keyframes: {
                                y: [ {
                                    value: 43,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 94,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -43,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 94,
                                    key: "y",
                                    index: 30
                                } ]
                            }
                        } ],
                        name: "aniLoadOpen",
                        id: 2,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 103,
                            keyframes: {
                                y: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 103,
                                    label: null,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -90,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 103,
                                    label: null,
                                    key: "y",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 20,
                            keyframes: {
                                y: [ {
                                    value: -143,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 20,
                                    label: null,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 20,
                                    label: null,
                                    key: "y",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 49,
                            keyframes: {
                                right: [ {
                                    value: -520,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 49,
                                    label: null,
                                    key: "right",
                                    index: 0
                                }, {
                                    value: 151,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 49,
                                    label: null,
                                    key: "right",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 81,
                            keyframes: {
                                x: [ {
                                    value: -283,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 81,
                                    label: null,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 81,
                                    label: null,
                                    key: "x",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 36,
                            keyframes: {
                                bottom: [ {
                                    value: -154,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    label: null,
                                    key: "bottom",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    label: null,
                                    key: "bottom",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 94,
                            keyframes: {
                                y: [ {
                                    value: -43,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 94,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 43,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 94,
                                    key: "y",
                                    index: 30
                                } ]
                            }
                        } ],
                        name: "aniLoadClose",
                        id: 2,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 192,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 192,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 192,
                                    key: "alpha",
                                    index: 140
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 192,
                                    label: null,
                                    key: "alpha",
                                    index: 360
                                } ]
                            }
                        }, {
                            target: 191,
                            keyframes: {
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 191,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 191,
                                    key: "alpha",
                                    index: 140
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 191,
                                    key: "alpha",
                                    index: 360
                                } ]
                            }
                        }, {
                            target: 213,
                            keyframes: {
                                x: [ {
                                    value: -160,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 213,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 300.5,
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 213,
                                    key: "x",
                                    index: 139
                                } ]
                            }
                        } ],
                        name: "ani3",
                        id: 3,
                        frameRate: 120,
                        action: 2
                    }, {
                        nodes: [ {
                            target: 168,
                            keyframes: {
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "scaleY",
                                    index: 8
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    label: null,
                                    key: "scaleY",
                                    index: 15
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "scaleX",
                                    index: 8
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    label: null,
                                    key: "scaleX",
                                    index: 15
                                } ]
                            }
                        } ],
                        name: "ani4",
                        id: 4,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 273,
                            keyframes: {
                                rotation: [ {
                                    value: -14,
                                    tweenMethod: "quadInOut",
                                    tween: !0,
                                    target: 273,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 14,
                                    tweenMethod: "quadInOut",
                                    tween: !0,
                                    target: 273,
                                    key: "rotation",
                                    index: 100
                                }, {
                                    value: -14,
                                    tweenMethod: "quadInOut",
                                    tween: !0,
                                    target: 273,
                                    key: "rotation",
                                    index: 200
                                } ]
                            }
                        } ],
                        name: "aniDragonBoat",
                        id: 5,
                        frameRate: 60,
                        action: 2
                    } ],
                    loadList: [ "sub1/ui/scale9/img_first_2.png", "sub1/ui/common/img_1.png", "sub1/ui/scale9/img_first_6.png", "sub1/ui/first/img_58.png", "sub1/ui/scale9/img_first_5.png", "sub1/ui/scale9/img_first_4.png", "sub1/ui/first/img_tt_3.png", "sub1/ui/first/img_60.png", "sub1/ui/first/img_59.png", "sub1/ui/first/img_2.png", "sub1/ui/first/img_1.png", "sub1/ui/first/img_3.png", "sub1/ui/first/img_50.png", "sub1/ui/first/img_55.png", "sub1/ui/first/img_45.png", "sub1/ui/first/img_47.png", "sub1/ui/first/img_44.png", "sub1/ui/first/img_43.png", "sub1/equip/arm/38.png", "sub1/ui/first/img_56.png", "sub1/ui/first/img_57.png", "sub1/ui/scale9/img_first_1.png", "sub1/ui/first/img_48.png", "sub1/ui/first/img_53.png", "sub1/ui/first/img_51.png", "sub1/ui/scale9/img_first_3.png", "sub1/ui/first/img_52.png", "sub1/ui/first/img_49.png", "sub1/ui/first/img_46.png", "sub1/ui/common/img_25.png", "sub1/ui/first/img_42.png", "sub1/ui/first/img_x_1.png", "sub1/ui/first/img_54.png", "sub1/ui/first/1.png", "sub1/ui/first/img_mentor_icon.png", "sub1/ui/first/img_lib_icon.png", "sub1/ui/first/img_tt_2.png", "sub1/ui/scale9/img_18.png", "sub1/ui/first/img_14.png", "sub1/ui/dan/img_1.png", "sub1/ui/dan/img_lv_3.png", "sub1/ui/first/img_summer_gift.png", "sub1/ui/first/img_dragonBoat3.png", "sub1/ui/review/img_1.jpg", "sub1/ui/review/img_3.png", "sub1/ui/review/img_2.png", "sub1/ui/scale9/img_60.png" ],
                    loadList3D: []
                }, e.FirstViewUI = t, N("ui.view.fisrt.FirstViewUI", t);
            }(e.fisrt || (e.fisrt = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 41,
                        height: 41
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            var: "imgFrame",
                            skin: "sub1/ui/scale9/img_4.png"
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            var: "imgState",
                            skin: "sub1/ui/game/img_1.png"
                        },
                        compId: 4
                    } ],
                    loadList: [ "sub1/ui/scale9/img_4.png", "sub1/ui/game/img_1.png" ],
                    loadList3D: []
                }, e.AIItemUI = t, N("ui.view.game.AIItemUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 250,
                        height: 130
                    },
                    compId: 2,
                    loadList: [],
                    loadList3D: []
                }, e.BroadcastViewUI = i, N("ui.view.game.BroadcastViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(a.uiView);
                    }
                }
                a.uiView = {
                    type: "View",
                    props: {
                        width: 55,
                        height: 72
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 72,
                            x: 27,
                            var: "buoy",
                            skin: "sub1/ui/game/img_1.png",
                            anchorY: 1,
                            anchorX: .5
                        },
                        compId: 6
                    } ],
                    loadList: [ "sub1/ui/game/img_1.png" ],
                    loadList3D: []
                }, e.BuoyUI = a, N("ui.view.game.BuoyUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(s.uiView);
                    }
                }
                s.uiView = {
                    type: "View",
                    props: {
                        width: 372,
                        height: 236
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 104,
                            x: 186,
                            width: 174,
                            scaleY: 1,
                            scaleX: 1,
                            height: 98,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -22,
                                x: 24,
                                skin: "sub1/ui/game/img_51.png"
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: -14,
                                x: 69,
                                skin: "sub1/ui/game/img_49.png",
                                name: "1"
                            },
                            compId: 8
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 133,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 59,
                                name: "2",
                                height: 63
                            },
                            compId: 9
                        }, {
                            type: "Image",
                            props: {
                                y: 63,
                                x: 151,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 120,
                                name: "3",
                                height: 63
                            },
                            compId: 10
                        }, {
                            type: "Image",
                            props: {
                                y: 109,
                                x: 105,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 179,
                                name: "4",
                                height: 63
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                y: 31,
                                x: 79,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 61,
                                name: "5",
                                height: 63
                            },
                            compId: 13
                        }, {
                            type: "Image",
                            props: {
                                y: 31,
                                x: 97,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 121,
                                name: "6",
                                height: 63
                            },
                            compId: 12
                        }, {
                            type: "Image",
                            props: {
                                y: 10,
                                x: 49,
                                var: "imgDouble",
                                skin: "sub1/ui/game/img_52.png"
                            },
                            compId: 5
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 4,
                            keyframes: {
                                y: [ {
                                    value: 104,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 104,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 13
                                }, {
                                    value: 82,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 16
                                }, {
                                    value: 104,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 18
                                }, {
                                    value: 82,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 20
                                }, {
                                    value: 104,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 22
                                }, {
                                    value: 82,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 24
                                }, {
                                    value: 104,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 26
                                }, {
                                    value: 82,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 28
                                }, {
                                    value: 104,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 30
                                }, {
                                    value: 104,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 78
                                } ],
                                x: [ {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 13
                                }, {
                                    value: 211,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 16
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 18
                                }, {
                                    value: 211,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 22
                                }, {
                                    value: 211,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 24
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 26
                                }, {
                                    value: 211,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 28
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 30
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 78
                                } ],
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 16
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 18
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 16
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 18
                                } ],
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 16
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 78
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 89
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 4,
                            keyframes: {
                                x: [ {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 10
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 10
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 13
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 10
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 13
                                } ]
                            }
                        } ],
                        name: "ani2",
                        id: 2,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/game/img_51.png", "sub1/ui/game/img_49.png", "sub1/ui/game/img_52.png" ],
                    loadList3D: []
                }, e.DoubleKillItemUI = s, N("ui.view.game.DoubleKillItemUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(n.uiView);
                    }
                }
                n.uiView = {
                    type: "View",
                    props: {
                        width: 83,
                        height: 100
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 83,
                            height: 100
                        },
                        compId: 4,
                        child: [ {
                            type: "Label",
                            props: {
                                y: 61,
                                x: -14.5,
                                width: 112,
                                var: "txtHit",
                                valign: "middle",
                                text: "0",
                                height: 30,
                                fontSize: 30,
                                font: "fnt5",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 3
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 3,
                            keyframes: {
                                y: [ {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 9,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 58
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 36
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 58
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [],
                    loadList3D: []
                }, e.FloatingbloodItemUI = n, N("ui.view.game.FloatingbloodItemUI", n);
                class o extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(o.uiView);
                    }
                }
                o.uiView = {
                    type: "View",
                    props: {
                        width: 176,
                        height: 72
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            width: 176,
                            height: 72,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 8,
                        child: [ {
                            type: "Image",
                            props: {
                                visible: !1,
                                var: "imgTrue",
                                top: 0,
                                skin: "sub1/ui/scale9/img_3.png",
                                right: 0,
                                left: 0,
                                bottom: 0,
                                sizeGrid: "16,16,14,16"
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                var: "imgFrame",
                                top: 0,
                                skin: "sub1/ui/scale9/img_1.png",
                                right: 0,
                                left: 0,
                                bottom: 0,
                                sizeGrid: "7,10,8,11"
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 5,
                                x: 24,
                                width: 202,
                                var: "imgIcon",
                                scaleY: .65,
                                scaleX: .65,
                                height: 98
                            },
                            compId: 5
                        }, {
                            type: "HBox",
                            props: {
                                y: 45.5,
                                right: 4
                            },
                            compId: 10,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 0,
                                    x: -35,
                                    var: "txtData",
                                    valign: "middle",
                                    text: "label",
                                    height: 23,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !1,
                                    align: "right"
                                },
                                compId: 7
                            }, {
                                type: "Label",
                                props: {
                                    y: 2,
                                    x: 0,
                                    var: "txtAll",
                                    valign: "middle",
                                    text: "label",
                                    height: 23,
                                    fontSize: 16,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !1,
                                    alpha: .8,
                                    align: "right"
                                },
                                compId: 9
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 11,
                                x: 52,
                                visible: !1,
                                var: "boxAdd"
                            },
                            compId: 13,
                            child: [ {
                                type: "Image",
                                props: {
                                    skin: "sub1/ui/game/img_72.png"
                                },
                                compId: 11
                            }, {
                                type: "Image",
                                props: {
                                    y: 25,
                                    x: 88,
                                    skin: "sub1/ui/game/img_73.png"
                                },
                                compId: 12
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_3.png", "sub1/ui/scale9/img_1.png", "sub1/ui/game/img_72.png", "sub1/ui/game/img_73.png" ],
                    loadList3D: []
                }, e.GameArmItemUI = o, N("ui.view.game.GameArmItemUI", o);
                class r extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/game/GameDiJIaView");
                    }
                }
                e.GameDiJIaViewUI = r, N("ui.view.game.GameDiJIaViewUI", r);
                class l extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(l.uiView);
                    }
                }
                l.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            visible: !1,
                            var: "imgMirror",
                            skin: "sub1/ui/game/img_33.png",
                            scaleY: 1,
                            scaleX: 1,
                            centerY: 0,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5,
                            sizeGrid: "87,159,88,157"
                        },
                        compId: 160,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -123,
                                x: -18,
                                width: 1682,
                                skin: "sub1/ui/scale9/img_13.png",
                                height: 154,
                                sizeGrid: "2,4,3,2"
                            },
                            compId: 246
                        }, {
                            type: "Image",
                            props: {
                                y: 709,
                                x: -28,
                                width: 1682,
                                skin: "sub1/ui/scale9/img_13.png",
                                height: 154,
                                sizeGrid: "2,4,3,2"
                            },
                            compId: 247
                        }, {
                            type: "Image",
                            props: {
                                y: -122,
                                x: -635,
                                width: 931,
                                skin: "sub1/ui/scale9/img_13.png",
                                height: 984,
                                sizeGrid: "2,4,3,2"
                            },
                            compId: 248
                        }, {
                            type: "Image",
                            props: {
                                y: -123,
                                x: 1160,
                                width: 931,
                                skin: "sub1/ui/scale9/img_13.png",
                                height: 986,
                                sizeGrid: "2,4,3,2"
                            },
                            compId: 249
                        }, {
                            type: "Box",
                            props: {
                                width: 696,
                                height: 620,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 226,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 308,
                                    x: 345,
                                    skin: "sub1/ui/game/img_55.png",
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 224
                            }, {
                                type: "Image",
                                props: {
                                    y: 308,
                                    x: -258,
                                    width: 603,
                                    skin: "sub1/ui/game/img_56.png",
                                    height: 4
                                },
                                compId: 225
                            }, {
                                type: "Image",
                                props: {
                                    y: -290,
                                    x: 350,
                                    width: 597,
                                    skin: "sub1/ui/game/img_56.png",
                                    rotation: 90,
                                    height: 4
                                },
                                compId: 227
                            }, {
                                type: "Image",
                                props: {
                                    y: 312,
                                    x: 954,
                                    width: 602,
                                    skin: "sub1/ui/game/img_56.png",
                                    rotation: 180,
                                    height: 4
                                },
                                compId: 229
                            }, {
                                type: "Image",
                                props: {
                                    y: 913,
                                    x: 346,
                                    width: 599,
                                    skin: "sub1/ui/game/img_56.png",
                                    rotation: 270,
                                    height: 4
                                },
                                compId: 230
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            width: 1625,
                            visible: !1,
                            var: "imgMirror1",
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 321,
                        child: [ {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/game/img_33.png",
                                alpha: .3,
                                sizeGrid: "87,159,88,157"
                            },
                            compId: 320
                        }, {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/game/img_87.png",
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 318
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            var: "floatingLayer",
                            top: 0,
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 5
                    }, {
                        type: "Box",
                        props: {
                            x: 788,
                            width: 50,
                            var: "boxQuasi",
                            height: 50,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 242,
                        child: [ {
                            type: "QuasiCenter",
                            props: {
                                y: -6,
                                x: -7,
                                var: "quasiCenter",
                                runtime: "view/game/QuasiCenterCtrl.ts",
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 243
                        }, {
                            type: "QuasiCenter1",
                            props: {
                                var: "quasiCenter1",
                                runtime: "view/game/QuasiCenter1Ctrl.ts",
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 245
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 304,
                            height: 260
                        },
                        compId: 56,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 304,
                                var: "boxLeftNonBiochemical",
                                height: 250
                            },
                            compId: 172,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 8,
                                    x: 204,
                                    width: 255,
                                    skin: "sub1/ui/scale9/img_57.png",
                                    sizeGrid: "7,8,8,8",
                                    height: 47
                                },
                                compId: 57
                            }, {
                                type: "Label",
                                props: {
                                    y: 17,
                                    x: 195,
                                    width: 249,
                                    var: "txtMySelfWarSituation",
                                    valign: "middle",
                                    text: "击杀:0    被淘汰:0",
                                    height: 30,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !1,
                                    align: "center"
                                },
                                compId: 58
                            }, {
                                type: "Box",
                                props: {
                                    y: 125,
                                    x: 75,
                                    width: 280,
                                    var: "boxWarSituation",
                                    height: 125
                                },
                                compId: 79
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 304,
                                var: "boxLeftBiochemical",
                                height: 276
                            },
                            compId: 173,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 8.5,
                                    x: 204,
                                    width: 122,
                                    skin: "sub1/ui/scale9/img_57.png",
                                    sizeGrid: "7,8,8,8",
                                    height: 47
                                },
                                compId: 231
                            }, {
                                type: "Label",
                                props: {
                                    y: 5.5,
                                    x: 214,
                                    width: 257,
                                    var: "txtPlayerZombieKillNum",
                                    valign: "middle",
                                    text: "击杀： 0",
                                    height: 52,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "left"
                                },
                                compId: 178
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 86,
                                x: 76,
                                width: 232,
                                visible: !1,
                                var: "boxMap",
                                height: 204
                            },
                            compId: 269,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 232,
                                    skin: "sub1/ui/scale9/img_game_3.png",
                                    height: 204,
                                    sizeGrid: "14,14,14,14"
                                },
                                compId: 271
                            }, {
                                type: "Panel",
                                props: {
                                    y: 3,
                                    x: 4,
                                    width: 226,
                                    var: "boxMapCell",
                                    height: 198
                                },
                                compId: 274,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -174.5,
                                        x: -165,
                                        width: 338,
                                        var: "imgMap",
                                        skin: "sub1/ui/game/img_67.png",
                                        height: 351,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 270,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 5,
                                            x: 149,
                                            visible: !1,
                                            var: "imgMap1",
                                            skin: "sub1/ui/game/img_74.png"
                                        },
                                        compId: 314,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 4,
                                                x: 67,
                                                text: "敌方阵营",
                                                fontSize: 22,
                                                color: "#ffffff",
                                                alpha: .2
                                            },
                                            compId: 316
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 168.5,
                                            x: 5,
                                            visible: !1,
                                            var: "imgMap2",
                                            skin: "sub1/ui/game/img_75.png"
                                        },
                                        compId: 315,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 34.119209896382074,
                                                x: 16.5,
                                                wordWrap: !0,
                                                width: 24,
                                                text: "敌方阵营",
                                                height: 100,
                                                fontSize: 22,
                                                color: "#ffffff",
                                                alpha: .2
                                            },
                                            compId: 317
                                        } ]
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 114,
                                        x: 113,
                                        width: 68,
                                        var: "imgPlayer",
                                        skin: "sub1/ui/game/img_68.png",
                                        pivotY: 45,
                                        pivotX: 34,
                                        height: 45
                                    },
                                    compId: 280,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 52,
                                            x: 34,
                                            width: 18,
                                            skin: "sub1/ui/game/img_62.png",
                                            pivotY: 26,
                                            pivotX: 9,
                                            height: 26
                                        },
                                        compId: 272
                                    } ]
                                } ]
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 273,
                            width: 788,
                            visible: !0,
                            var: "boxTop",
                            height: 81,
                            centerX: 0
                        },
                        compId: 29,
                        child: [ {
                            type: "Box",
                            props: {
                                y: -1,
                                x: 282.5,
                                width: 223,
                                var: "boxTopNonBiochemical",
                                height: 58
                            },
                            compId: 87,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -6,
                                    x: 59,
                                    width: 120,
                                    skin: "sub1/ui/game/img_57.png",
                                    height: 57
                                },
                                compId: 207
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: -88,
                                    width: 174,
                                    skin: "sub1/ui/game/img_37.png",
                                    sizeGrid: "0,53,0,46",
                                    height: 49
                                },
                                compId: 208
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 152,
                                    width: 176,
                                    skin: "sub1/ui/game/img_38.png",
                                    height: 49,
                                    sizeGrid: "0,48,0,46"
                                },
                                compId: 209
                            }, {
                                type: "Label",
                                props: {
                                    y: 19,
                                    x: 83,
                                    width: 72,
                                    var: "txtCurTask",
                                    valign: "middle",
                                    text: "30",
                                    height: 30,
                                    fontSize: 30,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 32
                            }, {
                                type: "Label",
                                props: {
                                    y: 3.5,
                                    x: -11,
                                    width: 37,
                                    var: "txtCurFriPro",
                                    valign: "middle",
                                    text: "0",
                                    height: 42,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 38
                            }, {
                                type: "Label",
                                props: {
                                    y: 1,
                                    x: 212,
                                    width: 37,
                                    var: "txtCurEnePro",
                                    valign: "middle",
                                    text: "0",
                                    height: 42,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 39
                            }, {
                                type: "Label",
                                props: {
                                    y: 0,
                                    x: 84,
                                    width: 70,
                                    var: "txtCurTime",
                                    valign: "middle",
                                    text: "00:00",
                                    height: 17,
                                    fontSize: 16,
                                    font: "SimHei",
                                    color: "#FFF000",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 33
                            }, {
                                type: "Image",
                                props: {
                                    y: 3.5,
                                    x: -119,
                                    skin: "sub1/ui/game/img_44.png"
                                },
                                compId: 211
                            }, {
                                type: "Image",
                                props: {
                                    y: 1,
                                    x: 332,
                                    skin: "sub1/ui/game/img_43.png"
                                },
                                compId: 212
                            }, {
                                type: "Image",
                                props: {
                                    y: 126,
                                    x: -11,
                                    width: 254,
                                    var: "imgWarmUp",
                                    skin: "sub1/ui/game/img_41.png",
                                    height: 39
                                },
                                compId: 213,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: -5,
                                        x: -18,
                                        width: 293,
                                        var: "txtWarmUp",
                                        valign: "middle",
                                        text: "热身时间：15s",
                                        height: 45,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#FFFFFF",
                                        bold: !1,
                                        align: "center"
                                    },
                                    compId: 214
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 78,
                                    x: 7.5,
                                    width: 192,
                                    visible: !1,
                                    var: "imgEnemy",
                                    skin: "sub1/ui/scale9/img_game_2.png",
                                    sizeGrid: "0,7,0,59",
                                    scaleY: 1.2,
                                    scaleX: 1.2,
                                    height: 31
                                },
                                compId: 233,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: -1,
                                        x: 55,
                                        var: "labelName",
                                        text: "吃",
                                        fontSize: 18
                                    },
                                    compId: 234
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 13,
                                        x: 197,
                                        var: "labelCount",
                                        text: "吃",
                                        fontSize: 18
                                    },
                                    compId: 235
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 1,
                                        x: 6,
                                        text: "敌方",
                                        fontSize: 18,
                                        color: "#ffffff"
                                    },
                                    compId: 236
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 19,
                                        x: 2,
                                        width: 188,
                                        var: "imgEnemyHp",
                                        skin: "sub1/ui/scale9/img_game_1.png",
                                        sizeGrid: "0,4,0,4",
                                        height: 10
                                    },
                                    compId: 237
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 117,
                                    width: 509,
                                    var: "boxAirDropLog",
                                    height: 57,
                                    centerX: 0,
                                    alpha: 0
                                },
                                compId: 253,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        skin: "sub1/ui/game/img_65.png",
                                        centerY: 0,
                                        centerX: 0
                                    },
                                    compId: 254
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 2,
                                        x: 46,
                                        skin: "sub1/ui/game/img_58.png"
                                    },
                                    compId: 255
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "sub1/ui/game/img_71.png",
                                        centerY: 0,
                                        centerX: 0
                                    },
                                    compId: 256
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: -1,
                                x: 41,
                                width: 757,
                                var: "boxTopBiochemical",
                                height: 142
                            },
                            compId: 167,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -87,
                                    x: 139,
                                    width: 447,
                                    var: "imgTopZomBieBg",
                                    skin: "sub1/ui/scale9/img_shenghua_2.png",
                                    sizeGrid: "0,86,0,92",
                                    height: 60
                                },
                                compId: 168,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 2,
                                        x: 57,
                                        width: 204,
                                        var: "txtZombieRound",
                                        valign: "middle",
                                        text: "第1批",
                                        height: 59,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#FFFFFF",
                                        align: "left"
                                    },
                                    compId: 169
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 173.5,
                                        var: "imgHead",
                                        skin: "sub1/ui/game/img_shenghua_5.png",
                                        centerY: -1
                                    },
                                    compId: 170
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 1,
                                        x: 219.5,
                                        width: 204,
                                        var: "txtZombieNum",
                                        valign: "middle",
                                        text: "剩余僵尸：100",
                                        height: 59,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#FFFFFF",
                                        align: "left"
                                    },
                                    compId: 171
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 121,
                                    x: 171.5,
                                    var: "imgZombieTimeBg",
                                    skin: "sub1/ui/game/img_shenghua_8.png"
                                },
                                compId: 179,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 5,
                                        x: 91,
                                        width: 251,
                                        valign: "middle",
                                        text: "剩余时间：",
                                        height: 33,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#FFFFFF",
                                        bold: !0,
                                        align: "left"
                                    },
                                    compId: 180
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 6,
                                        x: 221,
                                        width: 251,
                                        var: "txtZombieDownTime",
                                        valign: "middle",
                                        text: "100s",
                                        height: 33,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#FFFFFF",
                                        bold: !0,
                                        align: "left"
                                    },
                                    compId: 181
                                } ]
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            var: "boxJoystick",
                            top: 0,
                            right: 0,
                            left: 0,
                            height: 750,
                            bottom: 0
                        },
                        compId: 101,
                        child: [ {
                            type: "Box",
                            props: {
                                var: "boxTouch",
                                top: 0,
                                right: 0,
                                left: 0,
                                bottom: 0
                            },
                            compId: 232
                        }, {
                            type: "Image",
                            props: {
                                y: 577,
                                x: 217,
                                width: 290,
                                skin: "sub1/ui/move/img_2.png",
                                height: 290,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 102
                        }, {
                            type: "Image",
                            props: {
                                y: 577,
                                x: 217,
                                width: 121,
                                skin: "sub1/ui/move/img_1.png",
                                height: 121,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 104
                        }, {
                            type: "Image",
                            props: {
                                var: "btnJump",
                                skin: "sub1/ui/game/img_8.png",
                                right: 48,
                                bottom: 267,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 492,
                                x: 1073,
                                var: "btnRightAttack",
                                skin: "sub1/ui/game/img_4.png",
                                right: 186,
                                bottom: 183,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15
                        }, {
                            type: "Image",
                            props: {
                                width: 107,
                                var: "btnLeftAttack",
                                skin: "sub1/ui/game/img_4.png",
                                left: 117,
                                height: 107,
                                bottom: 274,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 40
                        }, {
                            type: "Image",
                            props: {
                                width: 90,
                                visible: !1,
                                var: "btnSquat",
                                skin: "sub1/ui/game/img_7.png",
                                right: -3150,
                                height: 90,
                                bottom: -395,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 48
                        }, {
                            type: "Image",
                            props: {
                                y: 32,
                                x: 53,
                                visible: !0,
                                var: "btnBack",
                                skin: "sub1/ui/game/img_16.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 52,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 53
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 8.5,
                                x: 85.5,
                                var: "btnAutoAttack",
                                skin: "sub1/ui/game/img_18.png"
                            },
                            compId: 54
                        }, {
                            type: "Image",
                            props: {
                                visible: !0,
                                var: "btnGiveUp",
                                skin: "sub1/ui/game/img_diu_1.png",
                                right: 230,
                                bottom: 429,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 165
                        }, {
                            type: "Label",
                            props: {
                                y: 204.5,
                                x: 813,
                                width: 394,
                                var: "txtZomBieAppearDown",
                                valign: "middle",
                                text: "5",
                                stroke: 3,
                                height: 203,
                                fontSize: 111,
                                font: "SimHei",
                                color: "#FFFFFF",
                                bold: !0,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 182
                        }, {
                            type: "Image",
                            props: {
                                y: 306,
                                x: 320,
                                visible: !1,
                                var: "btnCloseMirror",
                                skin: "sub1/ui/game/img_closeMirror_1.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 200
                        }, {
                            type: "Label",
                            props: {
                                y: 204.5,
                                width: 394,
                                visible: !1,
                                var: "txtTeamDown",
                                valign: "middle",
                                text: "5",
                                stroke: 3,
                                height: 203,
                                fontSize: 111,
                                font: "SimHei",
                                color: "#FFFFFF",
                                centerX: 0,
                                bold: !0,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 216
                        }, {
                            type: "Image",
                            props: {
                                y: 167,
                                visible: !1,
                                skin: "sub1/ui/game/img_39.png",
                                scaleY: 0,
                                scaleX: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 215
                        }, {
                            type: "Image",
                            props: {
                                var: "btnConvenient",
                                skin: "sub1/ui/game/img_10.png",
                                right: 332,
                                bottom: 339,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 217,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 47,
                                    x: 0,
                                    width: 262,
                                    var: "imgArm",
                                    skin: "sub1/equip/arm/1.png",
                                    scaleY: .35,
                                    scaleX: .35,
                                    rotation: -24,
                                    height: 122
                                },
                                compId: 218
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                var: "btnTestChange",
                                skin: "sub1/ui/game/img_10.png",
                                right: 183,
                                bottom: 593,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 250,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 22,
                                    x: 22,
                                    text: "换",
                                    fontSize: 50,
                                    color: "#ffffff"
                                },
                                compId: 252
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            var: "boxCenter",
                            right: 0,
                            left: 0,
                            height: 147,
                            bottom: 1
                        },
                        compId: 49,
                        child: [ {
                            type: "Box",
                            props: {
                                y: -5,
                                width: 635,
                                height: 51,
                                centerX: 60
                            },
                            compId: 202,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 13,
                                    x: 42,
                                    width: 328,
                                    skin: "sub1/ui/scale9/img_8.png",
                                    height: 24,
                                    sizeGrid: "6,9,10,7"
                                },
                                compId: 71,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 3,
                                        x: 3,
                                        width: 322,
                                        var: "imgHP",
                                        skin: "sub1/ui/scale9/img_7.png",
                                        sizeGrid: "11,6,8,6"
                                    },
                                    compId: 72
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 1,
                                        x: -50,
                                        skin: "sub1/ui/game/img_21.png"
                                    },
                                    compId: 73
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 3,
                                        x: 114,
                                        visible: !1,
                                        var: "txtHP",
                                        text: "100/100",
                                        stroke: 2,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#FFFFFF",
                                        bold: !0,
                                        alpha: 0
                                    },
                                    compId: 74
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 7,
                                        x: 204,
                                        skin: "sub1/ui/game/img_54.png",
                                        alpha: 0
                                    },
                                    compId: 219
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 3,
                                        x: 218,
                                        skin: "sub1/ui/game/img_54.png",
                                        alpha: 0
                                    },
                                    compId: 220
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 6,
                                        x: 204,
                                        skin: "sub1/ui/game/img_54.png",
                                        alpha: 0
                                    },
                                    compId: 221
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 7,
                                        x: 225,
                                        skin: "sub1/ui/game/img_54.png",
                                        alpha: 0
                                    },
                                    compId: 222
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 20,
                                        x: 211,
                                        width: 14,
                                        skin: "sub1/ui/game/img_54.png",
                                        height: 14,
                                        alpha: 0
                                    },
                                    compId: 223
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 12.5,
                                    x: 389,
                                    width: 248,
                                    height: 26
                                },
                                compId: 75,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        skin: "sub1/ui/game/img_20.png"
                                    },
                                    compId: 77
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 3,
                                        x: 44,
                                        var: "txtArmor",
                                        text: "100",
                                        stroke: 2,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#FFFFFF",
                                        bold: !0
                                    },
                                    compId: 78
                                } ]
                            } ]
                        }, {
                            type: "List",
                            props: {
                                y: 94,
                                x: 760,
                                var: "listAddArm",
                                spaceX: 10,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 307
                        }, {
                            type: "List",
                            props: {
                                y: 94,
                                x: 560,
                                var: "listArm",
                                spaceX: 10,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 55
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            var: "imgBeZombieHit",
                            top: 0,
                            skin: "sub1/ui/scale9/img_shanghua_1.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: 0
                        },
                        compId: 183
                    }, {
                        type: "Box",
                        props: {
                            width: 100,
                            height: 100,
                            centerY: -114,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 185,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 50,
                                x: 50,
                                width: 100,
                                var: "btnRescue",
                                height: 100,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 186,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 20.5,
                                    x: 20.5,
                                    skin: "sub1/ui/game/img_jiuyuan_6.png"
                                },
                                compId: 187
                            }, {
                                type: "Image",
                                props: {
                                    y: 15.5,
                                    x: 15.5,
                                    skin: "sub1/ui/game/img_jiuyuan_5.png"
                                },
                                compId: 188
                            }, {
                                type: "Image",
                                props: {
                                    y: 32,
                                    x: 32,
                                    skin: "sub1/ui/game/img_jiuyuan_7.png"
                                },
                                compId: 189
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 190
                            }, {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 23.5,
                                    skin: "sub1/ui/game/img_jiuyuan_2.png"
                                },
                                compId: 196
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 50,
                                x: 50,
                                width: 100,
                                var: "rescuing",
                                height: 100,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 191,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 195
                            }, {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 15.5,
                                    skin: "sub1/ui/game/img_jiuyuan_4.png"
                                },
                                compId: 197
                            }, {
                                type: "Image",
                                props: {
                                    y: 134,
                                    x: 5.5,
                                    var: "btnResueCancel",
                                    skin: "sub1/ui/game/img_jiuyuan_3.png"
                                },
                                compId: 198
                            } ]
                        } ]
                    }, {
                        type: "Label",
                        props: {
                            x: 42,
                            width: 280,
                            visible: !1,
                            var: "txtCurDiff",
                            valign: "middle",
                            underlineColor: "#ffffff",
                            text: "label",
                            height: 89,
                            fontSize: 50,
                            font: "SimHei",
                            color: "#dd5621",
                            bottom: 92,
                            bold: !0,
                            alpha: 0,
                            align: "left"
                        },
                        compId: 206
                    }, {
                        type: "Image",
                        props: {
                            width: 92,
                            var: "btnAmmunitionChange",
                            right: 209,
                            height: 89,
                            bottom: 42,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 42,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 44,
                                x: 46,
                                var: "imgAmmunitionRot",
                                skin: "sub1/ui/game/img_10.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 83
                        }, {
                            type: "Image",
                            props: {
                                y: 22.5,
                                x: 27,
                                visible: !1,
                                var: "btnAmmunitionChanging",
                                skin: "sub1/ui/game/img_28.png"
                            },
                            compId: 44,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 11,
                                    x: -4.5,
                                    width: 53,
                                    var: "txtAmmunitionChangTime",
                                    valign: "middle",
                                    text: "1.4s",
                                    height: 24,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 46
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 22.5,
                                x: 27,
                                var: "imgAmmunitionChang",
                                skin: "sub1/ui/game/img_29.png"
                            },
                            compId: 82
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            visible: !1,
                            var: "boxAirDrop",
                            top: 0,
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 257,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 252,
                                width: 105,
                                visible: !0,
                                var: "imgAirDropOpenProgressBar",
                                skin: "sub1/ui/game/img_70.png",
                                height: 105,
                                centerX: 0
                            },
                            compId: 259,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 5,
                                    x: 5,
                                    width: 95,
                                    var: "imgAirDropOpenProgress",
                                    skin: "sub1/ui/game/img_69.png",
                                    height: 95
                                },
                                compId: 260
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 357,
                                text: "开启中",
                                fontSize: 28,
                                color: "#000000",
                                centerX: 0,
                                bold: !0
                            },
                            compId: 262
                        }, {
                            type: "Label",
                            props: {
                                y: 287.5,
                                var: "labelTime",
                                text: "1s",
                                fontSize: 34,
                                color: "#000000",
                                centerX: 0
                            },
                            compId: 290
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 83,
                            keyframes: {
                                x: [ {
                                    value: 46,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 83,
                                    key: "x",
                                    index: 0
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 83,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 83,
                                    key: "rotation",
                                    index: 32
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 168,
                            keyframes: {
                                y: [ {
                                    value: -78,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 4,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "y",
                                    index: 5
                                }, {
                                    value: -5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "y",
                                    index: 8
                                } ]
                            }
                        } ],
                        name: "down",
                        id: 2,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 168,
                            keyframes: {
                                y: [ {
                                    value: -5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 4,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "y",
                                    index: 3
                                }, {
                                    value: -78,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 168,
                                    key: "y",
                                    index: 7
                                } ]
                            }
                        } ],
                        name: "up",
                        id: 3,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 179,
                            keyframes: {
                                x: [ {
                                    value: 130.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 179,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 130.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 179,
                                    key: "x",
                                    index: 17
                                }, {
                                    value: 130.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    label: null,
                                    index: 36
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 179,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 179,
                                    key: "alpha",
                                    index: 17
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    label: null,
                                    index: 36
                                } ]
                            }
                        } ],
                        name: "ani4",
                        id: 4,
                        frameRate: 24,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 183,
                            keyframes: {
                                x: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 183,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 183,
                                    label: null,
                                    key: "x",
                                    index: 20
                                } ],
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 183,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 183,
                                    key: "alpha",
                                    index: 10
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 183,
                                    label: null,
                                    key: "alpha",
                                    index: 20
                                } ]
                            }
                        } ],
                        name: "ani5",
                        id: 5,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 215,
                            keyframes: {
                                visible: [ {
                                    value: !0,
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 215,
                                    key: "visible",
                                    index: 0
                                }, {
                                    value: !0,
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 215,
                                    label: null,
                                    key: "visible",
                                    index: 58
                                } ],
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    key: "scaleY",
                                    index: 11
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    key: "scaleY",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    label: null,
                                    key: "scaleY",
                                    index: 40
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    label: null,
                                    key: "scaleY",
                                    index: 45
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    label: null,
                                    key: "scaleY",
                                    index: 58
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    key: "scaleX",
                                    index: 11
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    key: "scaleX",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    label: null,
                                    key: "scaleX",
                                    index: 40
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    label: null,
                                    key: "scaleX",
                                    index: 45
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 215,
                                    label: null,
                                    key: "scaleX",
                                    index: 58
                                } ]
                            }
                        } ],
                        name: "ani6",
                        id: 6,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 219,
                            keyframes: {
                                y: [ {
                                    value: 7,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 219,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -23,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 219,
                                    key: "y",
                                    index: 8
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 219,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 219,
                                    key: "alpha",
                                    index: 8
                                } ]
                            }
                        }, {
                            target: 220,
                            keyframes: {
                                y: [ {
                                    value: 3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 220,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -16,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 220,
                                    key: "y",
                                    index: 11
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 220,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 220,
                                    key: "alpha",
                                    index: 11
                                } ]
                            }
                        }, {
                            target: 221,
                            keyframes: {
                                y: [ {
                                    value: 6,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 221,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -12,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 221,
                                    key: "y",
                                    index: 7
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 221,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 221,
                                    key: "alpha",
                                    index: 7
                                } ]
                            }
                        }, {
                            target: 222,
                            keyframes: {
                                y: [ {
                                    value: 7,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 222,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -30,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 222,
                                    key: "y",
                                    index: 10
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 222,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 222,
                                    key: "alpha",
                                    index: 10
                                } ]
                            }
                        }, {
                            target: 223,
                            keyframes: {
                                y: [ {
                                    value: 20,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 223,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -16,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 223,
                                    key: "y",
                                    index: 12
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 223,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 223,
                                    key: "alpha",
                                    index: 12
                                } ]
                            }
                        } ],
                        name: "ani7",
                        id: 7,
                        frameRate: 24,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 225,
                            keyframes: {
                                x: [ {
                                    value: -258,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 225,
                                    key: "x",
                                    index: 0
                                } ],
                                scaleX: [ {
                                    value: .8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 225,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 225,
                                    key: "scaleX",
                                    index: 17
                                } ]
                            }
                        }, {
                            target: 227,
                            keyframes: {
                                x: [ {
                                    value: 351,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 227,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 351,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 227,
                                    key: "x",
                                    index: 17
                                } ],
                                scaleX: [ {
                                    value: .8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 227,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 227,
                                    key: "scaleX",
                                    index: 17
                                } ]
                            }
                        }, {
                            target: 229,
                            keyframes: {
                                x: [ {
                                    value: 954,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 229,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 954,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 229,
                                    key: "x",
                                    index: 17
                                } ],
                                scaleX: [ {
                                    value: .8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 229,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 229,
                                    key: "scaleX",
                                    index: 17
                                } ]
                            }
                        }, {
                            target: 230,
                            keyframes: {
                                x: [ {
                                    value: 346,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 230,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 346,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 230,
                                    key: "x",
                                    index: 17
                                } ],
                                scaleX: [ {
                                    value: .8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 230,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 230,
                                    key: "scaleX",
                                    index: 17
                                } ]
                            }
                        } ],
                        name: "ani8",
                        id: 8,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 253,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    key: "alpha",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    label: null,
                                    key: "alpha",
                                    index: 30
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    label: null,
                                    key: "alpha",
                                    index: 45
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    label: null,
                                    key: "alpha",
                                    index: 60
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    label: null,
                                    key: "alpha",
                                    index: 75
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    label: null,
                                    key: "alpha",
                                    index: 90
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 253,
                                    key: "alpha",
                                    index: 110
                                } ]
                            }
                        } ],
                        name: "airDropAni",
                        id: 9,
                        frameRate: 30,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/game/img_33.png", "sub1/ui/scale9/img_13.png", "sub1/ui/game/img_55.png", "sub1/ui/game/img_56.png", "sub1/ui/game/img_87.png", "view/game/QuasiCenter1.scene", "sub1/ui/scale9/img_57.png", "sub1/ui/scale9/img_game_3.png", "sub1/ui/game/img_67.png", "sub1/ui/game/img_74.png", "sub1/ui/game/img_75.png", "sub1/ui/game/img_68.png", "sub1/ui/game/img_62.png", "sub1/ui/game/img_57.png", "sub1/ui/game/img_37.png", "sub1/ui/game/img_38.png", "sub1/ui/game/img_44.png", "sub1/ui/game/img_43.png", "sub1/ui/game/img_41.png", "sub1/ui/scale9/img_game_2.png", "sub1/ui/scale9/img_game_1.png", "sub1/ui/game/img_65.png", "sub1/ui/game/img_58.png", "sub1/ui/game/img_71.png", "sub1/ui/scale9/img_shenghua_2.png", "sub1/ui/game/img_shenghua_5.png", "sub1/ui/game/img_shenghua_8.png", "sub1/ui/move/img_2.png", "sub1/ui/move/img_1.png", "sub1/ui/game/img_8.png", "sub1/ui/game/img_4.png", "sub1/ui/game/img_7.png", "sub1/ui/game/img_16.png", "sub1/ui/game/img_18.png", "sub1/ui/game/img_diu_1.png", "sub1/ui/game/img_closeMirror_1.png", "sub1/ui/game/img_39.png", "sub1/ui/game/img_10.png", "sub1/equip/arm/1.png", "sub1/ui/scale9/img_8.png", "sub1/ui/scale9/img_7.png", "sub1/ui/game/img_21.png", "sub1/ui/game/img_54.png", "sub1/ui/game/img_20.png", "sub1/ui/scale9/img_shanghua_1.png", "sub1/ui/game/img_jiuyuan_6.png", "sub1/ui/game/img_jiuyuan_5.png", "sub1/ui/game/img_jiuyuan_7.png", "sub1/ui/game/img_jiuyuan_2.png", "sub1/ui/game/img_jiuyuan_4.png", "sub1/ui/game/img_jiuyuan_3.png", "sub1/ui/game/img_28.png", "sub1/ui/game/img_29.png", "sub1/ui/game/img_70.png", "sub1/ui/game/img_69.png" ],
                    loadList3D: []
                }, e.GameViewUI = l, N("ui.view.game.GameViewUI", l);
                class h extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(h.uiView);
                    }
                }
                h.uiView = {
                    type: "View",
                    props: {
                        width: 372,
                        height: 236
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 118,
                            x: 186,
                            width: 372,
                            scaleY: 1,
                            scaleX: 1,
                            height: 236,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 47.5,
                                x: 122.5,
                                skin: "sub1/ui/game/img_51.png"
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 56,
                                x: 168,
                                skin: "sub1/ui/game/img_49.png",
                                name: "1",
                                alpha: 0
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 70,
                                x: 232,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 59,
                                name: "2",
                                height: 63,
                                alpha: 0
                            },
                            compId: 8
                        }, {
                            type: "Image",
                            props: {
                                y: 133,
                                x: 250,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 120,
                                name: "3",
                                height: 63,
                                alpha: 0
                            },
                            compId: 9
                        }, {
                            type: "Image",
                            props: {
                                y: 179,
                                x: 204,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 179,
                                name: "4",
                                height: 63,
                                alpha: 0
                            },
                            compId: 10
                        }, {
                            type: "Image",
                            props: {
                                y: 102,
                                x: 178,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 62,
                                name: "5",
                                height: 63,
                                alpha: 0
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                y: 101,
                                x: 196,
                                width: 36,
                                skin: "sub1/ui/game/img_49.png",
                                rotation: 121,
                                name: "6",
                                height: 63,
                                alpha: 0
                            },
                            compId: 12
                        }, {
                            type: "Image",
                            props: {
                                var: "imgHeadShot",
                                skin: "sub1/ui/game/img_45.png",
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 13
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 4,
                            keyframes: {
                                y: [ {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 12
                                }, {
                                    value: 78,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 15
                                }, {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 17
                                }, {
                                    value: 78,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "y",
                                    index: 19
                                }, {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 21
                                }, {
                                    value: 78,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 23
                                }, {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 25
                                }, {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "y",
                                    index: 57
                                } ],
                                x: [ {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 12
                                }, {
                                    value: 226,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 15
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 17
                                }, {
                                    value: 226,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "x",
                                    index: 19
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 21
                                }, {
                                    value: 226,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 23
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 25
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "x",
                                    index: 57
                                } ],
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 17
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "scaleY",
                                    index: 21
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "scaleY",
                                    index: 25
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "scaleY",
                                    index: 57
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 17
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "scaleX",
                                    index: 21
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "scaleX",
                                    index: 25
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    label: null,
                                    key: "scaleX",
                                    index: 57
                                } ],
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 57
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 67
                                } ]
                            }
                        } ],
                        name: "baotou",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/game/img_51.png", "sub1/ui/game/img_49.png", "sub1/ui/game/img_45.png" ],
                    loadList3D: []
                }, e.HeadshotUI = h, N("ui.view.game.HeadshotUI", h);
                class c extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(c.uiView);
                    }
                }
                c.uiView = {
                    type: "View",
                    props: {
                        width: 204,
                        height: 70
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 9,
                            x: -57,
                            width: 324,
                            skin: "sub1/ui/scale9/img_8.png",
                            height: 17,
                            sizeGrid: "6,9,10,7"
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 320,
                                var: "imgPro",
                                skin: "sub1/ui/scale9/img_12.png",
                                height: 13,
                                sizeGrid: "9,7,8,6"
                            },
                            compId: 4
                        } ]
                    }, {
                        type: "Label",
                        props: {
                            y: 36,
                            x: 8,
                            width: 188,
                            valign: "middle",
                            text: "无敌时间",
                            height: 31,
                            fontSize: 26,
                            font: "SimHei",
                            color: "#FFFFFF",
                            bold: !0,
                            align: "center"
                        },
                        compId: 6
                    } ],
                    loadList: [ "sub1/ui/scale9/img_8.png", "sub1/ui/scale9/img_12.png" ],
                    loadList3D: []
                }, e.InvincibleProUI = c, N("ui.view.game.InvincibleProUI", c);
                class d extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/game/MapAirDrop");
                    }
                }
                e.MapAirDropUI = d, N("ui.view.game.MapAirDropUI", d);
                class g extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(g.uiView);
                    }
                }
                g.uiView = {
                    type: "View",
                    props: {
                        width: 373,
                        height: 30
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: -1,
                            x: 0,
                            skin: "sub1/ui/game/img_27.png",
                            height: 30,
                            alpha: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 4,
                                x: 78,
                                skin: "sub1/ui/game/img_32.png"
                            },
                            compId: 4
                        }, {
                            type: "Label",
                            props: {
                                y: 5,
                                x: 111,
                                width: 155,
                                var: "txtContent",
                                text: "敌方剩余分数：",
                                height: 25,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                bold: !0
                            },
                            compId: 5
                        }, {
                            type: "Label",
                            props: {
                                y: 6,
                                x: 261,
                                width: 75,
                                var: "txtData",
                                text: "30",
                                height: 25,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FF7623",
                                bold: !0
                            },
                            compId: 6
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 3,
                            keyframes: {
                                x: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 0
                                } ],
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 8
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "alpha",
                                    index: 120
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 128
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/game/img_27.png", "sub1/ui/game/img_32.png" ],
                    loadList3D: []
                }, e.MatchSituationUI = g, N("ui.view.game.MatchSituationUI", g);
                class u extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(u.uiView);
                    }
                }
                u.uiView = {
                    type: "View",
                    props: {
                        width: 41,
                        height: 41
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            skin: "sub1/ui/scale9/img_6.png"
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            var: "imgState",
                            skin: "sub1/ui/game/img_1.png"
                        },
                        compId: 4
                    } ],
                    loadList: [ "sub1/ui/scale9/img_6.png", "sub1/ui/game/img_1.png" ],
                    loadList3D: []
                }, e.PlayerItemUI = u, N("ui.view.game.PlayerItemUI", u);
                class m extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(m.uiView);
                    }
                }
                m.uiView = {
                    type: "View",
                    props: {
                        width: 373,
                        height: 30
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            skin: "sub1/ui/game/img_27.png"
                        },
                        compId: 3
                    }, {
                        type: "Label",
                        props: {
                            y: 0,
                            x: 0,
                            width: 372,
                            var: "txttKill",
                            valign: "middle",
                            text: "你使用akm-12击杀了吃瓜的喃",
                            height: 30,
                            fontSize: 20,
                            font: "SimHei",
                            color: "#FFFFFF",
                            bold: !0,
                            align: "center"
                        },
                        compId: 4
                    } ],
                    loadList: [ "sub1/ui/game/img_27.png" ],
                    loadList3D: []
                }, e.PlayerKillBroadcastUI = m, N("ui.view.game.PlayerKillBroadcastUI", m);
                class p extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(p.uiView);
                    }
                }
                p.uiView = {
                    type: "View",
                    props: {
                        width: 64,
                        runtime: "view/game/QuasiCenterCtrl.ts",
                        height: 63
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 64,
                            height: 63
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 25,
                                x: 34,
                                var: "imgZhunXinUp",
                                skin: "sub1/ui/game/img_13.png",
                                rotation: -180
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 29,
                                x: 28,
                                var: "imgZhunXinLeft",
                                skin: "sub1/ui/game/img_13.png",
                                rotation: 90
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 33,
                                x: 36,
                                var: "imgZhunXinRight",
                                skin: "sub1/ui/game/img_13.png",
                                rotation: -90
                            },
                            compId: 9
                        }, {
                            type: "Image",
                            props: {
                                y: 36,
                                x: 30,
                                var: "imgZhunXinDown",
                                skin: "sub1/ui/game/img_13.png"
                            },
                            compId: 10
                        }, {
                            type: "Image",
                            props: {
                                y: 29,
                                x: 30,
                                var: "imgPoint",
                                skin: "sub1/ui/game/img_14.png"
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 31,
                                x: 32,
                                width: 53,
                                visible: !0,
                                var: "imgAttack",
                                skin: "sub1/ui/game/img_15.png",
                                height: 53,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 11
                        }, {
                            type: "Box",
                            props: {
                                y: 31,
                                x: 33,
                                width: 51,
                                var: "boxArrow",
                                pivotY: 28,
                                pivotX: 26,
                                height: 55,
                                alpha: 0
                            },
                            compId: 16,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 22.999999999999996,
                                    x: 57,
                                    var: "imgRight",
                                    skin: "sub1/ui/game/img_arraw.png"
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: 33,
                                    x: -7,
                                    var: "imgLeft",
                                    skin: "sub1/ui/game/img_arraw.png",
                                    rotation: 180
                                },
                                compId: 13
                            }, {
                                type: "Image",
                                props: {
                                    y: -3,
                                    x: 20.000000589487758,
                                    width: 7,
                                    var: "imgTop",
                                    skin: "sub1/ui/game/img_arraw.png",
                                    rotation: -90,
                                    height: 11
                                },
                                compId: 14
                            }, {
                                type: "Image",
                                props: {
                                    y: 60,
                                    x: 30.000000589487758,
                                    width: 7,
                                    var: "imgBottom",
                                    skin: "sub1/ui/game/img_arraw.png",
                                    rotation: 90,
                                    height: 11
                                },
                                compId: 15
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/game/img_13.png", "sub1/ui/game/img_14.png", "sub1/ui/game/img_15.png", "sub1/ui/game/img_arraw.png" ],
                    loadList3D: []
                }, e.QuasiCenterUI = p, N("ui.view.game.QuasiCenterUI", p);
                class y extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/game/QuasiCenter1");
                    }
                }
                e.QuasiCenter1UI = y, N("ui.view.game.QuasiCenter1UI", y);
                class I extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(I.uiView);
                    }
                }
                I.uiView = {
                    type: "View",
                    props: {
                        width: 69,
                        height: 69
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 73,
                            x: 72,
                            width: 56,
                            var: "box",
                            pivotY: 65,
                            pivotX: 65,
                            height: 56
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                skin: "sub1/ui/game/img_jiuyuan_6.png"
                            },
                            compId: 10
                        }, {
                            type: "Image",
                            props: {
                                y: 81,
                                x: 61,
                                var: "imgMask",
                                skin: "sub1/ui/game/img_jiuyuan_5.png",
                                sizeGrid: "8,7,6,5",
                                pivotY: 89,
                                pivotX: 67,
                                alpha: .7
                            },
                            compId: 5
                        }, {
                            type: "Label",
                            props: {
                                width: 75,
                                var: "txtTime",
                                valign: "middle",
                                text: "1",
                                height: 32,
                                fontSize: 24,
                                font: "SimHei",
                                color: "#ffffff",
                                centerY: -2,
                                centerX: -1,
                                align: "center"
                            },
                            compId: 7
                        }, {
                            type: "Sprite",
                            props: {
                                y: -8,
                                x: -9,
                                width: 70,
                                var: "sprPie",
                                height: 69
                            },
                            compId: 12
                        } ]
                    } ],
                    loadList: [ "sub1/ui/game/img_jiuyuan_6.png", "sub1/ui/game/img_jiuyuan_5.png" ],
                    loadList3D: []
                }, e.RescuingItemUI = I, N("ui.view.game.RescuingItemUI", I);
                class f extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(f.uiView);
                    }
                }
                f.uiView = {
                    type: "View",
                    props: {
                        width: 372,
                        height: 236
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 118,
                            x: 186,
                            width: 317,
                            scaleY: 0,
                            scaleX: 0,
                            height: 180,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 36,
                                x: 83,
                                var: "imgIcon",
                                skin: "sub1/ui/game/img_53.png"
                            },
                            compId: 5
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 3,
                            keyframes: {
                                y: [ {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 3
                                }, {
                                    value: 118,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 5
                                }, {
                                    value: 109,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 9
                                }, {
                                    value: 97,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 11
                                }, {
                                    value: 109,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 13
                                }, {
                                    value: 97,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "y",
                                    index: 15
                                }, {
                                    value: 109,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "y",
                                    index: 17
                                } ],
                                x: [ {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 3
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 5
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 7
                                }, {
                                    value: 164,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 9
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 11
                                }, {
                                    value: 169,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 13
                                }, {
                                    value: 186,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "x",
                                    index: 15
                                }, {
                                    value: 169,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "x",
                                    index: 17
                                } ],
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleY",
                                    index: 3
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleY",
                                    index: 5
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "scaleY",
                                    index: 7
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleX",
                                    index: 3
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleX",
                                    index: 5
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "scaleX",
                                    index: 7
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 50
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 56
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/game/img_53.png" ],
                    loadList3D: []
                }, e.RevengeItemUI = f, N("ui.view.game.RevengeItemUI", f);
                class L extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(L.uiView);
                    }
                }
                L.uiView = {
                    type: "View",
                    props: {
                        width: 300,
                        height: 34
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            skin: "sub1/ui/game/img_42.png"
                        },
                        compId: 6
                    }, {
                        type: "HBox",
                        props: {
                            y: 1,
                            x: 0,
                            width: 362,
                            height: 31
                        },
                        compId: 21,
                        child: [ {
                            type: "Label",
                            props: {
                                y: 6,
                                x: 7,
                                var: "txtKiller",
                                text: "吃瓜的喃",
                                height: 23,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                bold: !1
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                zOrder: 1,
                                y: 6,
                                x: 100,
                                width: 44,
                                var: "imgIcon",
                                skin: "sub1/ui/game/img_22.png",
                                height: 25
                            },
                            compId: 4
                        }, {
                            type: "Label",
                            props: {
                                zOrder: 2,
                                y: 7,
                                x: 144,
                                var: "txtBeKiller",
                                text: "吃瓜的喃",
                                height: 23,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                bold: !1
                            },
                            compId: 5
                        }, {
                            type: "Box",
                            props: {
                                zOrder: 3,
                                y: 16,
                                x: 221,
                                width: 158,
                                var: "boxHead",
                                scaleY: .3,
                                scaleX: .3,
                                height: 128,
                                anchorY: .5,
                                anchorX: 0
                            },
                            compId: 12,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -5.5,
                                    x: 14.5,
                                    skin: "sub1/ui/game/img_51.png"
                                },
                                compId: 13
                            }, {
                                type: "Image",
                                props: {
                                    y: 3,
                                    x: 61,
                                    skin: "sub1/ui/game/img_49.png",
                                    name: "1",
                                    alpha: 0
                                },
                                compId: 14
                            }, {
                                type: "Image",
                                props: {
                                    y: 16,
                                    x: 122,
                                    width: 36,
                                    skin: "sub1/ui/game/img_49.png",
                                    rotation: 59,
                                    name: "2",
                                    height: 63,
                                    alpha: 0
                                },
                                compId: 15
                            }, {
                                type: "Image",
                                props: {
                                    y: 82,
                                    x: 143,
                                    width: 36,
                                    skin: "sub1/ui/game/img_49.png",
                                    rotation: 120,
                                    name: "3",
                                    height: 63,
                                    alpha: 0
                                },
                                compId: 16
                            }, {
                                type: "Image",
                                props: {
                                    y: 128,
                                    x: 98,
                                    width: 36,
                                    skin: "sub1/ui/game/img_49.png",
                                    rotation: 179,
                                    name: "4",
                                    height: 63,
                                    alpha: 0
                                },
                                compId: 17
                            }, {
                                type: "Image",
                                props: {
                                    y: 109,
                                    x: 33,
                                    width: 36,
                                    skin: "sub1/ui/game/img_49.png",
                                    rotation: 239,
                                    name: "5",
                                    height: 63,
                                    alpha: 0
                                },
                                compId: 18
                            }, {
                                type: "Image",
                                props: {
                                    y: 45,
                                    x: 15,
                                    width: 36,
                                    skin: "sub1/ui/game/img_49.png",
                                    rotation: -55,
                                    name: "6",
                                    height: 63,
                                    alpha: 0
                                },
                                compId: 19
                            }, {
                                type: "Image",
                                props: {
                                    var: "imgHeadShot",
                                    skin: "sub1/ui/game/img_45.png",
                                    centerY: 0,
                                    centerX: -1
                                },
                                compId: 20
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/game/img_42.png", "sub1/ui/game/img_22.png", "sub1/ui/game/img_51.png", "sub1/ui/game/img_49.png", "sub1/ui/game/img_45.png" ],
                    loadList3D: []
                }, e.SingleBroadcastUI = L, N("ui.view.game.SingleBroadcastUI", L);
                class w extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(w.uiView);
                    }
                }
                w.uiView = {
                    type: "View",
                    props: {
                        width: 1,
                        height: 1
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            skin: "sub1/ui/game/img_jiuyuan_1.png"
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            y: 83,
                            x: 133,
                            skin: "sub1/ui/game/img_jiuyuan_8.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 4
                    } ],
                    loadList: [ "sub1/ui/game/img_jiuyuan_1.png", "sub1/ui/game/img_jiuyuan_8.png" ],
                    loadList3D: []
                }, e.WaitingforrescueViewUI = w, N("ui.view.game.WaitingforrescueViewUI", w);
                class b extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(b.uiView);
                    }
                }
                b.uiView = {
                    type: "View",
                    props: {
                        width: 690,
                        height: 100
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 13,
                            x: -225,
                            var: "imgZomBieComingBg",
                            skin: "sub1/ui/game/img_shenghua_10.png",
                            scaleY: 1.2,
                            scaleX: 1.2
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            y: 13,
                            x: 136,
                            var: "imgZombieComing",
                            skin: "sub1/ui/game/img_shenghua_2.png"
                        },
                        compId: 4
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 3,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 45
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "alpha",
                                    index: 89
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/game/img_shenghua_10.png", "sub1/ui/game/img_shenghua_2.png" ],
                    loadList3D: []
                }, e.ZombieComingViewUI = b, N("ui.view.game.ZombieComingViewUI", b);
            }(e.game || (e.game = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/gameAir/GameAirCrazyView");
                    }
                }
                e.GameAirCrazyViewUI = t, N("ui.view.gameAir.GameAirCrazyViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/gameAir/GameAirDropView");
                    }
                }
                e.GameAirDropViewUI = i, N("ui.view.gameAir.GameAirDropViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/gameAir/GameAirView");
                    }
                }
                e.GameAirViewUI = a, N("ui.view.gameAir.GameAirViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/gameAir/GameArmFull");
                    }
                }
                e.GameArmFullUI = s, N("ui.view.gameAir.GameArmFullUI", s);
            }(e.gameAir || (e.gameAir = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/gameBox/EndGameBoxView");
                    }
                }
                e.EndGameBoxViewUI = t, N("ui.view.gameBox.EndGameBoxViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/gameBox/GameBoxView");
                    }
                }
                e.GameBoxViewUI = i, N("ui.view.gameBox.GameBoxViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(a.uiView);
                    }
                }
                a.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "loading/img_11.jpg",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            width: 1145,
                            var: "boxAll",
                            height: 721,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 301,
                                x: 573,
                                width: 204,
                                skin: "sub1/ui/common/img_common_1.png",
                                scaleY: 2.5,
                                scaleX: 2.5,
                                height: 198,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 321,
                                x: 584,
                                width: 160,
                                skin: "sub1/ui/common/img_common_2.png",
                                scaleY: 2.8,
                                scaleX: 2.8,
                                height: 155,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 302,
                                x: 574,
                                var: "imgBox",
                                skin: "sub1/ui/gameBox/img_1.png",
                                scaleY: 1,
                                scaleX: 1,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 552,
                                x: 584,
                                width: 227,
                                var: "btnOpenSenior",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 86,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 13,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 14
                            }, {
                                type: "Box",
                                props: {
                                    y: 14,
                                    x: 15,
                                    width: 200,
                                    var: "boxAd",
                                    height: 56
                                },
                                compId: 17,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 11,
                                        x: 58,
                                        skin: "sub1/ui/gameBox/img_5.png"
                                    },
                                    compId: 15
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 15,
                                        x: 10,
                                        skin: "sub1/ui/common/img_10.png"
                                    },
                                    compId: 16
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 176,
                                x: 428,
                                skin: "sub1/ui/gameBox/img_3.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 24
                        }, {
                            type: "Image",
                            props: {
                                y: 189,
                                x: 676,
                                width: 30,
                                skin: "sub1/ui/gameBox/img_3.png",
                                height: 32,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 26
                        }, {
                            type: "Image",
                            props: {
                                y: 340,
                                x: 383,
                                width: 45,
                                skin: "sub1/ui/gameBox/img_3.png",
                                height: 49,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 27
                        }, {
                            type: "Image",
                            props: {
                                y: 436,
                                x: 737,
                                width: 36,
                                skin: "sub1/ui/gameBox/img_3.png",
                                height: 35,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 28
                        }, {
                            type: "Image",
                            props: {
                                y: 302,
                                x: 159,
                                skin: "sub1/ui/gameBox/img_2.png",
                                scaleY: 1,
                                scaleX: 1,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 29
                        }, {
                            type: "Image",
                            props: {
                                y: 552,
                                x: 156,
                                width: 227,
                                var: "btnOpenPrimary",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                height: 86,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 30,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 31
                            }, {
                                type: "Box",
                                props: {
                                    y: 14,
                                    x: 15,
                                    width: 200,
                                    height: 56
                                },
                                compId: 32,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 34,
                                        skin: "sub1/ui/gameBox/img_4.png"
                                    },
                                    compId: 33
                                } ]
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 5,
                            keyframes: {
                                x: [ {
                                    value: 572.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "x",
                                    index: 0
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "rotation",
                                    index: 275
                                } ]
                            }
                        }, {
                            target: 6,
                            keyframes: {
                                x: [ {
                                    value: 584,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 584,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 275
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: -360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "rotation",
                                    index: 275
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 24,
                            keyframes: {
                                x: [ {
                                    value: 428,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 428,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 428,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "x",
                                    index: 40
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "scaleY",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "scaleY",
                                    index: 20
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "scaleY",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "scaleY",
                                    index: 40
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    key: "scaleX",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "scaleX",
                                    index: 20
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "scaleX",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 24,
                                    label: null,
                                    key: "scaleX",
                                    index: 40
                                } ]
                            }
                        }, {
                            target: 26,
                            keyframes: {
                                x: [ {
                                    value: 676,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 676,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    key: "x",
                                    index: 12
                                }, {
                                    value: 676,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "x",
                                    index: 24
                                }, {
                                    value: 676,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "x",
                                    index: 34
                                }, {
                                    value: 676,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "x",
                                    index: 47
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    key: "scaleY",
                                    index: 12
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "scaleY",
                                    index: 24
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "scaleY",
                                    index: 34
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "scaleY",
                                    index: 47
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    key: "scaleX",
                                    index: 12
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "scaleX",
                                    index: 24
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "scaleX",
                                    index: 34
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 26,
                                    label: null,
                                    key: "scaleX",
                                    index: 47
                                } ]
                            }
                        }, {
                            target: 27,
                            keyframes: {
                                x: [ {
                                    value: 383,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 383,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    key: "x",
                                    index: 7
                                }, {
                                    value: 383,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "x",
                                    index: 21
                                }, {
                                    value: 383,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "x",
                                    index: 32
                                }, {
                                    value: 383,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "x",
                                    index: 44
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    key: "scaleY",
                                    index: 7
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "scaleY",
                                    index: 21
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "scaleY",
                                    index: 32
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "scaleY",
                                    index: 44
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    key: "scaleX",
                                    index: 7
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "scaleX",
                                    index: 21
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "scaleX",
                                    index: 32
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 27,
                                    label: null,
                                    key: "scaleX",
                                    index: 44
                                } ]
                            }
                        }, {
                            target: 28,
                            keyframes: {
                                x: [ {
                                    value: 737,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 737,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    key: "x",
                                    index: 13
                                }, {
                                    value: 737,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "x",
                                    index: 27
                                }, {
                                    value: 737,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "x",
                                    index: 37
                                }, {
                                    value: 737,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "x",
                                    index: 49
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    key: "scaleY",
                                    index: 13
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "scaleY",
                                    index: 27
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "scaleY",
                                    index: 37
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "scaleY",
                                    index: 49
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    key: "scaleX",
                                    index: 13
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "scaleX",
                                    index: 27
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "scaleX",
                                    index: 37
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 28,
                                    label: null,
                                    key: "scaleX",
                                    index: 49
                                } ]
                            }
                        } ],
                        name: "ani2",
                        id: 2,
                        frameRate: 24,
                        action: 0
                    } ],
                    loadList: [ "loading/img_11.jpg", "sub1/ui/common/img_common_1.png", "sub1/ui/common/img_common_2.png", "sub1/ui/gameBox/img_1.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/gameBox/img_5.png", "sub1/ui/common/img_10.png", "sub1/ui/gameBox/img_3.png", "sub1/ui/gameBox/img_2.png", "sub1/ui/scale9/img_normal_2.png", "sub1/ui/gameBox/img_4.png" ],
                    loadList3D: []
                }, e.OPPOGameBoxViewUI = a, N("ui.view.gameBox.OPPOGameBoxViewUI", a);
            }(e.gameBox || (e.gameBox = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/BoxItemCellView");
                    }
                }
                e.BoxItemCellViewUI = t, N("ui.view.getReward.BoxItemCellViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetBoxRewardNextExtraView");
                    }
                }
                e.GetBoxRewardNextExtraViewUI = i, N("ui.view.getReward.GetBoxRewardNextExtraViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetBoxRewardNextView");
                    }
                }
                e.GetBoxRewardNextViewUI = a, N("ui.view.getReward.GetBoxRewardNextViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetBoxRewardView");
                    }
                }
                e.GetBoxRewardViewUI = s, N("ui.view.getReward.GetBoxRewardViewUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(n.uiView);
                    }
                }
                n.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .75,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 14
                    }, {
                        type: "Box",
                        props: {
                            width: 1334,
                            var: "boxAll",
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 102,
                                x: -145,
                                width: 1625,
                                var: "boxBg",
                                height: 404,
                                centerX: 0
                            },
                            compId: 82,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 347.5,
                                    x: -9,
                                    width: 1642,
                                    skin: "sub1/ui/scale9/img_getReward_6.png",
                                    sizeGrid: "38,0,31,0",
                                    alpha: 1
                                },
                                compId: 83
                            }, {
                                type: "Image",
                                props: {
                                    y: -47.5,
                                    x: 328,
                                    width: 1011,
                                    skin: "sub1/ui/getReward/img_x_6.png",
                                    alpha: .5
                                },
                                compId: 84
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 1633,
                                    skin: "sub1/ui/getReward/img_x_3.png",
                                    skewY: 180
                                },
                                compId: 85
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: -7,
                                    skin: "sub1/ui/getReward/img_x_3.png"
                                },
                                compId: 86
                            }, {
                                type: "Image",
                                props: {
                                    y: -17,
                                    x: -7,
                                    skin: "sub1/ui/getReward/img_x_4.png"
                                },
                                compId: 87
                            }, {
                                type: "Image",
                                props: {
                                    y: -17,
                                    x: 1633,
                                    skin: "sub1/ui/getReward/img_x_4.png",
                                    skewY: 180
                                },
                                compId: 88
                            }, {
                                type: "Box",
                                props: {
                                    y: 46.5,
                                    x: 146,
                                    width: 157,
                                    rotation: 180,
                                    height: 35
                                },
                                compId: 89,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -76,
                                        x: 72,
                                        width: 131,
                                        skin: "sub1/ui/end/img_30.png",
                                        rotation: 43,
                                        height: 134
                                    },
                                    compId: 90
                                }, {
                                    type: "Image",
                                    props: {
                                        width: 157,
                                        skin: "sub1/ui/scale9/img_13.png",
                                        renderType: "mask",
                                        height: 35,
                                        sizeGrid: "2,4,3,2"
                                    },
                                    compId: 91
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 11.5,
                                    x: 1627,
                                    width: 157,
                                    skewY: 180,
                                    height: 35
                                },
                                compId: 92,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -76,
                                        x: 72,
                                        width: 131,
                                        skin: "sub1/ui/end/img_30.png",
                                        rotation: 43,
                                        height: 134
                                    },
                                    compId: 93
                                }, {
                                    type: "Image",
                                    props: {
                                        width: 157,
                                        skin: "sub1/ui/scale9/img_13.png",
                                        renderType: "mask",
                                        height: 35,
                                        sizeGrid: "2,4,3,2"
                                    },
                                    compId: 94
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: -30,
                                    x: -13,
                                    width: 50,
                                    skin: "sub1/ui/getReward/img_x_2.png",
                                    sizeGrid: "374,0,36,0",
                                    rotation: -44,
                                    height: 497
                                },
                                compId: 95
                            }, {
                                type: "Image",
                                props: {
                                    y: -26,
                                    x: 1647,
                                    width: 50,
                                    skin: "sub1/ui/getReward/img_x_2.png",
                                    skewY: 180,
                                    sizeGrid: "374,0,36,0",
                                    rotation: -315,
                                    height: 497
                                },
                                compId: 96
                            }, {
                                type: "Box",
                                props: {
                                    y: 370,
                                    x: -6.999999999998863,
                                    alpha: .5
                                },
                                compId: 97,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        x: 819.9999999999989,
                                        width: 820,
                                        skin: "sub1/ui/getReward/img_x_7.png",
                                        skewY: 180,
                                        height: 34
                                    },
                                    compId: 98
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 819.9999999999989,
                                        width: 820,
                                        skin: "sub1/ui/getReward/img_x_7.png",
                                        rotation: 0,
                                        height: 34
                                    },
                                    compId: 99
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 65,
                                skin: "sub1/ui/getReward/img_x_8.png",
                                scaleY: 2.5,
                                scaleX: 2.5,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 53,
                                skin: "sub1/ui/getReward/img_x_8.png",
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 1
                            },
                            compId: 5,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 48,
                                    x: 213,
                                    skin: "sub1/ui/getReward/img_x_5.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 100
                            }, {
                                type: "Image",
                                props: {
                                    y: 32.5,
                                    x: 36,
                                    width: 112,
                                    skin: "sub1/ui/getReward/img_x_5.png",
                                    pivotY: 16,
                                    pivotX: 56,
                                    height: 31
                                },
                                compId: 101
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 270,
                                x: 667,
                                var: "imgGold",
                                skin: "sub1/ui/common/img_20.png",
                                scaleY: .9,
                                scaleX: .9,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 6
                        }, {
                            type: "Label",
                            props: {
                                y: 442,
                                x: 661,
                                width: 290,
                                var: "btnBack",
                                valign: "middle",
                                text: "点击任意位置继续",
                                height: 56,
                                fontSize: 26,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: !0,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 22,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 23
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 279,
                                x: 656,
                                width: 206,
                                scaleY: .6,
                                scaleX: .6,
                                pivotY: 103,
                                pivotX: 103,
                                height: 206
                            },
                            compId: 103,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 206,
                                    var: "imgBg",
                                    skin: "sub1/ui/scale9/img_getReward_1.png",
                                    sizeGrid: "5,5,5,5",
                                    height: 206
                                },
                                compId: 104
                            }, {
                                type: "Image",
                                props: {
                                    var: "imgIcon",
                                    skin: "sub1/item/2001.png",
                                    scaleY: 1.9,
                                    scaleX: 1.9,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 105
                            }, {
                                type: "HBox",
                                props: {
                                    right: 9,
                                    bottom: 8
                                },
                                compId: 106,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        x: 122,
                                        var: "txtReward",
                                        text: "1",
                                        stroke: 2,
                                        fontSize: 46,
                                        color: "#ffffff"
                                    },
                                    compId: 107
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 225,
                                    x: 0,
                                    var: "labelName",
                                    text: "钻石",
                                    fontSize: 32,
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: !0,
                                    alpha: 1
                                },
                                compId: 108
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 4,
                            keyframes: {
                                scaleY: [ {
                                    value: 2.3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 29
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 42
                                }, {
                                    value: 2.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 55
                                } ],
                                scaleX: [ {
                                    value: 2.3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 15
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 29
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 42
                                }, {
                                    value: 2.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 55
                                } ],
                                alpha: [ {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 29
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 42
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 55
                                } ]
                            }
                        }, {
                            target: 5,
                            keyframes: {
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 21
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 33
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [],
                        name: "ani2",
                        id: 2,
                        frameRate: 30,
                        action: 0
                    }, {
                        nodes: [],
                        name: "ani3",
                        id: 3,
                        frameRate: 24,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 97,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 97,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 97,
                                    key: "alpha",
                                    index: 140
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 97,
                                    key: "alpha",
                                    index: 280
                                } ]
                            }
                        }, {
                            target: 84,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 84,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 84,
                                    key: "alpha",
                                    index: 140
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 84,
                                    key: "alpha",
                                    index: 280
                                } ]
                            }
                        }, {
                            target: 83,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 83,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 83,
                                    key: "alpha",
                                    index: 140
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 83,
                                    key: "alpha",
                                    index: 280
                                } ]
                            }
                        }, {
                            target: 101,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 101,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 101,
                                    key: "alpha",
                                    index: 140
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 101,
                                    key: "alpha",
                                    index: 280
                                } ]
                            }
                        }, {
                            target: 100,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 100,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 100,
                                    key: "alpha",
                                    index: 140
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 100,
                                    key: "alpha",
                                    index: 280
                                } ]
                            }
                        } ],
                        name: "ani4",
                        id: 4,
                        frameRate: 60,
                        action: 2
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "sub1/ui/scale9/img_getReward_6.png", "sub1/ui/getReward/img_x_6.png", "sub1/ui/getReward/img_x_3.png", "sub1/ui/getReward/img_x_4.png", "sub1/ui/end/img_30.png", "sub1/ui/scale9/img_13.png", "sub1/ui/getReward/img_x_2.png", "sub1/ui/getReward/img_x_7.png", "sub1/ui/getReward/img_x_8.png", "sub1/ui/getReward/img_x_5.png", "sub1/ui/common/img_20.png", "sub1/ui/scale9/img_getReward_1.png", "sub1/item/2001.png" ],
                    loadList3D: []
                }, e.GetDiamondsRewardViewUI = n, N("ui.view.getReward.GetDiamondsRewardViewUI", n);
                class o extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetDragonBoatBombView");
                    }
                }
                e.GetDragonBoatBombViewUI = o, N("ui.view.getReward.GetDragonBoatBombViewUI", o);
                class r extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetEquipOrRoleRewardView");
                    }
                }
                e.GetEquipOrRoleRewardViewUI = r, N("ui.view.getReward.GetEquipOrRoleRewardViewUI", r);
                class l extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(l.uiView);
                    }
                }
                l.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .75,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 14
                    }, {
                        type: "Box",
                        props: {
                            width: 1334,
                            var: "boxAll",
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 102,
                                x: -145,
                                width: 1625,
                                var: "boxBg",
                                height: 404,
                                centerX: 0
                            },
                            compId: 80,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 347.5,
                                    x: -9,
                                    width: 1642,
                                    skin: "sub1/ui/scale9/img_getReward_6.png",
                                    sizeGrid: "38,0,31,0",
                                    alpha: 1
                                },
                                compId: 81
                            }, {
                                type: "Image",
                                props: {
                                    y: -47.5,
                                    x: 328,
                                    width: 1011,
                                    skin: "sub1/ui/getReward/img_x_6.png",
                                    alpha: .5
                                },
                                compId: 82
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 1633,
                                    skin: "sub1/ui/getReward/img_x_3.png",
                                    skewY: 180
                                },
                                compId: 83
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: -7,
                                    skin: "sub1/ui/getReward/img_x_3.png"
                                },
                                compId: 84
                            }, {
                                type: "Image",
                                props: {
                                    y: -17,
                                    x: -7,
                                    skin: "sub1/ui/getReward/img_x_4.png"
                                },
                                compId: 85
                            }, {
                                type: "Image",
                                props: {
                                    y: -17,
                                    x: 1633,
                                    skin: "sub1/ui/getReward/img_x_4.png",
                                    skewY: 180
                                },
                                compId: 86
                            }, {
                                type: "Box",
                                props: {
                                    y: 46.5,
                                    x: 146,
                                    width: 157,
                                    rotation: 180,
                                    height: 35
                                },
                                compId: 87,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -76,
                                        x: 72,
                                        width: 131,
                                        skin: "sub1/ui/end/img_30.png",
                                        rotation: 43,
                                        height: 134
                                    },
                                    compId: 88
                                }, {
                                    type: "Image",
                                    props: {
                                        width: 157,
                                        skin: "sub1/ui/scale9/img_13.png",
                                        renderType: "mask",
                                        height: 35,
                                        sizeGrid: "2,4,3,2"
                                    },
                                    compId: 89
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 11.5,
                                    x: 1627,
                                    width: 157,
                                    skewY: 180,
                                    height: 35
                                },
                                compId: 90,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -76,
                                        x: 72,
                                        width: 131,
                                        skin: "sub1/ui/end/img_30.png",
                                        rotation: 43,
                                        height: 134
                                    },
                                    compId: 91
                                }, {
                                    type: "Image",
                                    props: {
                                        width: 157,
                                        skin: "sub1/ui/scale9/img_13.png",
                                        renderType: "mask",
                                        height: 35,
                                        sizeGrid: "2,4,3,2"
                                    },
                                    compId: 92
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: -30,
                                    x: -13,
                                    width: 50,
                                    skin: "sub1/ui/getReward/img_x_2.png",
                                    sizeGrid: "374,0,36,0",
                                    rotation: -44,
                                    height: 497
                                },
                                compId: 93
                            }, {
                                type: "Image",
                                props: {
                                    y: -26,
                                    x: 1647,
                                    width: 50,
                                    skin: "sub1/ui/getReward/img_x_2.png",
                                    skewY: 180,
                                    sizeGrid: "374,0,36,0",
                                    rotation: -315,
                                    height: 497
                                },
                                compId: 94
                            }, {
                                type: "Box",
                                props: {
                                    y: 370,
                                    x: -6.999999999998863,
                                    alpha: .5
                                },
                                compId: 95,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        x: 819.9999999999989,
                                        width: 820,
                                        skin: "sub1/ui/getReward/img_x_7.png",
                                        skewY: 180,
                                        height: 34
                                    },
                                    compId: 96
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 819.9999999999989,
                                        width: 820,
                                        skin: "sub1/ui/getReward/img_x_7.png",
                                        rotation: 0,
                                        height: 34
                                    },
                                    compId: 97
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 59,
                                skin: "sub1/ui/getReward/img_x_8.png",
                                scaleY: 2.5,
                                scaleX: 2.5,
                                centerX: 2,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 46,
                                skin: "sub1/ui/getReward/img_x_8.png",
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 1
                            },
                            compId: 5,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 48,
                                    x: 214,
                                    skin: "sub1/ui/getReward/img_x_5.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 118
                            }, {
                                type: "Image",
                                props: {
                                    y: 39.5,
                                    x: 37,
                                    skin: "sub1/ui/getReward/img_x_5.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 99
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 279.5,
                                x: 656.5,
                                var: "imgGold",
                                skin: "sub1/ui/common/img_17.png",
                                scaleY: .9,
                                scaleX: .9,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 6
                        }, {
                            type: "Label",
                            props: {
                                y: 426,
                                x: 656.5,
                                width: 290,
                                var: "btnBack",
                                valign: "middle",
                                text: "点击任意位置继续",
                                height: 56,
                                fontSize: 26,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: !0,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 22,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 23
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 279.5,
                                x: 656.5,
                                width: 206,
                                scaleY: .6,
                                scaleX: .6,
                                pivotY: 103,
                                pivotX: 103,
                                height: 206
                            },
                            compId: 119,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 206,
                                    var: "imgBg",
                                    skin: "sub1/ui/scale9/img_getReward_1.png",
                                    sizeGrid: "5,5,5,5",
                                    height: 206
                                },
                                compId: 120
                            }, {
                                type: "Image",
                                props: {
                                    var: "imgIcon",
                                    skin: "sub1/item/1001.png",
                                    scaleY: 1.9,
                                    scaleX: 1.9,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 121
                            }, {
                                type: "HBox",
                                props: {
                                    right: 9,
                                    bottom: 8
                                },
                                compId: 122,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        x: 122,
                                        var: "txtReward",
                                        text: "1",
                                        stroke: 2,
                                        fontSize: 46,
                                        color: "#ffffff"
                                    },
                                    compId: 124
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 225,
                                    x: 0,
                                    var: "labelName",
                                    text: "金币",
                                    fontSize: 32,
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: !0,
                                    alpha: 1
                                },
                                compId: 127
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 4,
                            keyframes: {
                                scaleY: [ {
                                    value: 2.3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 12
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 26
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 39
                                }, {
                                    value: 2.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleY",
                                    index: 52
                                } ],
                                scaleX: [ {
                                    value: 2.3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 12
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 26
                                }, {
                                    value: 1.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 39
                                }, {
                                    value: 2.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "scaleX",
                                    index: 52
                                } ],
                                alpha: [ {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 26
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 39
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 4,
                                    key: "alpha",
                                    index: 52
                                } ]
                            }
                        }, {
                            target: 5,
                            keyframes: {
                                alpha: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 18
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 30
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [],
                        name: "ani2",
                        id: 2,
                        frameRate: 30,
                        action: 0
                    }, {
                        nodes: [],
                        name: "ani3",
                        id: 3,
                        frameRate: 24,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 81,
                            keyframes: {
                                alpha: [ {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 81,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 81,
                                    key: "alpha",
                                    index: 90
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 81,
                                    key: "alpha",
                                    index: 180
                                } ]
                            }
                        }, {
                            target: 82,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 82,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 82,
                                    key: "alpha",
                                    index: 90
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 82,
                                    key: "alpha",
                                    index: 180
                                } ]
                            }
                        }, {
                            target: 95,
                            keyframes: {
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 95,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 95,
                                    key: "alpha",
                                    index: 90
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 95,
                                    key: "alpha",
                                    index: 180
                                } ]
                            }
                        } ],
                        name: "ani4",
                        id: 4,
                        frameRate: 60,
                        action: 2
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "sub1/ui/scale9/img_getReward_6.png", "sub1/ui/getReward/img_x_6.png", "sub1/ui/getReward/img_x_3.png", "sub1/ui/getReward/img_x_4.png", "sub1/ui/end/img_30.png", "sub1/ui/scale9/img_13.png", "sub1/ui/getReward/img_x_2.png", "sub1/ui/getReward/img_x_7.png", "sub1/ui/getReward/img_x_8.png", "sub1/ui/getReward/img_x_5.png", "sub1/ui/common/img_17.png", "sub1/ui/scale9/img_getReward_1.png", "sub1/item/1001.png" ],
                    loadList3D: []
                }, e.GetGoldRewardViewUI = l, N("ui.view.getReward.GetGoldRewardViewUI", l);
                class h extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetModeRewardView");
                    }
                }
                e.GetModeRewardViewUI = h, N("ui.view.getReward.GetModeRewardViewUI", h);
                class c extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetModeRewardView2");
                    }
                }
                e.GetModeRewardView2UI = c, N("ui.view.getReward.GetModeRewardView2UI", c);
                class d extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/GetThreeRewardView");
                    }
                }
                e.GetThreeRewardViewUI = d, N("ui.view.getReward.GetThreeRewardViewUI", d);
                class g extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/getReward/ItemCellView");
                    }
                }
                e.ItemCellViewUI = g, N("ui.view.getReward.ItemCellViewUI", g);
            }(e.getReward || (e.getReward = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            width: 717,
                            var: "boxAll",
                            height: 506,
                            centerY: -39,
                            centerX: 0
                        },
                        compId: 22,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -23,
                                x: 22,
                                width: 678,
                                skin: "private/img_32.png",
                                sizeGrid: "66,8,12,10",
                                height: 461
                            },
                            compId: 15
                        }, {
                            type: "Label",
                            props: {
                                y: 52,
                                x: 126,
                                width: 470,
                                valign: "middle",
                                text: "观看简短的视频免费获得金币！",
                                height: 48,
                                fontSize: 28,
                                font: "SimHei",
                                color: "#ffffff",
                                align: "center"
                            },
                            compId: 6
                        }, {
                            type: "Box",
                            props: {
                                y: 88,
                                x: 220,
                                width: 257,
                                height: 217
                            },
                            compId: 7,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 139,
                                    var: "imgStartGold",
                                    skin: "sub1/ui/common/img_17.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 8
                            }, {
                                type: "Label",
                                props: {
                                    y: 163,
                                    x: 44,
                                    width: 180,
                                    var: "txtGold",
                                    valign: "middle",
                                    text: "金币x800",
                                    height: 60,
                                    fontSize: 32,
                                    font: "SimHei",
                                    color: "#FFE400",
                                    align: "center"
                                },
                                compId: 9
                            }, {
                                type: "Image",
                                props: {
                                    y: 56,
                                    x: 61,
                                    skin: "sub1/ui/common/img_13.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 10
                            }, {
                                type: "Image",
                                props: {
                                    y: 41,
                                    x: 217,
                                    width: 7,
                                    skin: "sub1/ui/common/img_13.png",
                                    height: 13,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 11
                            }, {
                                type: "Image",
                                props: {
                                    y: 159,
                                    x: 212,
                                    width: 18,
                                    skin: "sub1/ui/common/img_13.png",
                                    height: 25,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: 141,
                                    x: 85,
                                    width: 18,
                                    skin: "sub1/ui/common/img_13.png",
                                    height: 22,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 13
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 375,
                                x: 358,
                                var: "btnGold",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 14,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 20.5,
                                    x: 26,
                                    skin: "sub1/ui/common/img_10.png"
                                },
                                compId: 16
                            }, {
                                type: "Image",
                                props: {
                                    y: 19.5,
                                    x: 67,
                                    skin: "sub1/ui/common/img_15.png"
                                },
                                compId: 17
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 21
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 7,
                                x: 646,
                                width: 71,
                                var: "btnClose",
                                height: 59,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 25,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 13,
                                    x: 18,
                                    skin: "sub1/ui/common/img_7.png"
                                },
                                compId: 26
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 27
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: -17,
                                width: 470,
                                var: "labelTag",
                                valign: "middle",
                                text: "免费金币",
                                height: 48,
                                fontSize: 34,
                                font: "SimHei",
                                color: "#ffffff",
                                centerX: 0,
                                align: "center"
                            },
                            compId: 29
                        }, {
                            type: "Image",
                            props: {
                                y: 375,
                                x: 485.5,
                                visible: !1,
                                var: "btnNo",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 30,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 31
                            }, {
                                type: "Label",
                                props: {
                                    y: 21.5,
                                    x: 43,
                                    text: "不了谢谢",
                                    fontSize: 27,
                                    color: "#ffffff"
                                },
                                compId: 32
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 10,
                            keyframes: {
                                x: [ {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "x",
                                    index: 40
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleY",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleY",
                                    index: 20
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleY",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleY",
                                    index: 40
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    key: "scaleX",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleX",
                                    index: 20
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleX",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 10,
                                    label: null,
                                    key: "scaleX",
                                    index: 40
                                } ]
                            }
                        }, {
                            target: 11,
                            keyframes: {
                                x: [ {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "x",
                                    index: 19
                                }, {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "x",
                                    index: 37
                                } ],
                                scaleY: [ {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleY",
                                    index: 10
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleY",
                                    index: 19
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleY",
                                    index: 27
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleY",
                                    index: 37
                                } ],
                                scaleX: [ {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    key: "scaleX",
                                    index: 10
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleX",
                                    index: 19
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleX",
                                    index: 27
                                }, {
                                    value: 1.8,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 11,
                                    label: null,
                                    key: "scaleX",
                                    index: 37
                                } ]
                            }
                        }, {
                            target: 12,
                            keyframes: {
                                x: [ {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "x",
                                    index: 9
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 23
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 33
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 44
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleY",
                                    index: 9
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 23
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 33
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 44
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleX",
                                    index: 9
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 23
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 33
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 44
                                } ]
                            }
                        }, {
                            target: 13,
                            keyframes: {
                                x: [ {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "x",
                                    index: 13
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 26
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 35
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 42
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleY",
                                    index: 13
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 26
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 35
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 42
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleX",
                                    index: 13
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 26
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 35
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 42
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 24,
                        action: 0
                    } ],
                    loadList: [ "private/img_32.png", "sub1/ui/common/img_17.png", "sub1/ui/common/img_13.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_10.png", "sub1/ui/common/img_15.png", "sub1/ui/common/img_7.png", "sub1/ui/scale9/img_normal_2.png" ],
                    loadList3D: []
                }, e.AddGoldViewUI = t, N("ui.view.gold.AddGoldViewUI", t);
            }(e.gold || (e.gold = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 130,
                        height: 130
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 67,
                            x: 67,
                            skin: "sub1/ui/guide/img_2.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            y: 67,
                            x: 67,
                            skin: "sub1/ui/guide/img_2.png",
                            scaleY: .5,
                            scaleX: .5,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 5
                    }, {
                        type: "Image",
                        props: {
                            y: 97,
                            x: 99.5,
                            width: 70,
                            visible: !1,
                            var: "imgFinger",
                            skin: "sub1/ui/guide/img_1.png",
                            rotation: -108,
                            height: 105
                        },
                        compId: 6
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 5,
                            keyframes: {
                                x: [ {
                                    value: 67,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "x",
                                    index: 0
                                } ],
                                scaleY: [ {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleY",
                                    index: 32
                                } ],
                                scaleX: [ {
                                    value: .5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "scaleX",
                                    index: 32
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 5,
                                    key: "alpha",
                                    index: 32
                                } ]
                            }
                        }, {
                            target: 3,
                            keyframes: {
                                x: [ {
                                    value: 67,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 67,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 32
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleY",
                                    index: 32
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1.1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "scaleX",
                                    index: 32
                                } ],
                                alpha: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "alpha",
                                    index: 32
                                } ]
                            }
                        }, {
                            target: 6,
                            keyframes: {
                                y: [ {
                                    value: 97,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 65,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "y",
                                    index: 20
                                }, {
                                    value: 97,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "y",
                                    index: 42
                                } ],
                                x: [ {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 134.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 6,
                                    label: null,
                                    key: "x",
                                    index: 42
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/guide/img_2.png", "sub1/ui/guide/img_1.png" ],
                    loadList3D: []
                }, e.ApertureGuideItemUI = t, N("ui.view.guide.ApertureGuideItemUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 50,
                        height: 50
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 19,
                            x: -20,
                            width: 70,
                            skin: "sub1/ui/guide/img_1.png",
                            rotation: -25,
                            height: 105
                        },
                        compId: 3
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 3,
                            keyframes: {
                                y: [ {
                                    value: 19,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 67,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "y",
                                    index: 23
                                }, {
                                    value: 19,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "y",
                                    index: 45
                                } ],
                                x: [ {
                                    value: -20,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 15,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    key: "x",
                                    index: 23
                                }, {
                                    value: -20,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 3,
                                    label: null,
                                    key: "x",
                                    index: 45
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/guide/img_1.png" ],
                    loadList3D: []
                }, e.FingerAniUI = i, N("ui.view.guide.FingerAniUI", i);
            }(e.guide || (e.guide = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/library/DetailView");
                    }
                }
                e.DetailViewUI = t, N("ui.view.library.DetailViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 380,
                        height: 165
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 380,
                            height: 165
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                var: "imgBg",
                                skin: "sub1/ui/library/img_arm_1.png"
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 15,
                                x: 44,
                                var: "imgIcon",
                                skin: "sub1/equip/arm/10.png"
                            },
                            compId: 5
                        }, {
                            type: "Label",
                            props: {
                                y: 134,
                                x: 11,
                                width: 118,
                                var: "txtName",
                                valign: "middle",
                                text: "label",
                                height: 30,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "left"
                            },
                            compId: 6
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 379,
                                var: "btnDetails",
                                height: 165
                            },
                            compId: 14
                        }, {
                            type: "Image",
                            props: {
                                y: 140,
                                x: 318,
                                var: "btnEquip",
                                skin: "sub1/ui/scale9/img_library_6.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 7,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 11.5,
                                    x: 36,
                                    skin: "sub1/ui/library/img_4.png"
                                },
                                compId: 8
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 9
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 140,
                                x: 318,
                                var: "btnRemove",
                                skin: "sub1/ui/scale9/img_library_7.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 10,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 11.5,
                                    x: 36,
                                    skin: "sub1/ui/library/img_2.png"
                                },
                                compId: 11
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 12
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 9,
                                x: 297,
                                var: "imgEquiped",
                                skin: "sub1/ui/library/img_3.png"
                            },
                            compId: 13
                        }, {
                            type: "Image",
                            props: {
                                y: 15,
                                x: 16,
                                var: "imgGrade",
                                skin: "sub1/ui/library/img_grade_1.png"
                            },
                            compId: 15
                        } ]
                    } ],
                    loadList: [ "sub1/ui/library/img_arm_1.png", "sub1/equip/arm/10.png", "sub1/ui/scale9/img_library_6.png", "sub1/ui/library/img_4.png", "sub1/ui/scale9/img_library_7.png", "sub1/ui/library/img_2.png", "sub1/ui/library/img_3.png", "sub1/ui/library/img_grade_1.png" ],
                    loadList3D: []
                }, e.LibraryArmItemUI = i, N("ui.view.library.LibraryArmItemUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/library/LibraryPartsItem");
                    }
                }
                e.LibraryPartsItemUI = a, N("ui.view.library.LibraryPartsItemUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(s.uiView);
                    }
                }
                s.uiView = {
                    type: "View",
                    props: {
                        width: 170,
                        height: 44
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 303,
                            height: 44
                        },
                        compId: 3,
                        child: [ {
                            type: "Label",
                            props: {
                                y: -1,
                                x: 0,
                                width: 134,
                                var: "txtAttribute",
                                valign: "middle",
                                text: "火力",
                                height: 26,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                bold: !0,
                                align: "left"
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 30,
                                x: 0,
                                width: 167,
                                skin: "sub1/ui/scale9/img_43.png",
                                height: 11,
                                sizeGrid: "4,4,5,3"
                            },
                            compId: 7
                        }, {
                            type: "Label",
                            props: {
                                y: 4,
                                x: 134,
                                width: 113,
                                var: "txtPro",
                                valign: "middle",
                                text: "100",
                                height: 18,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#7AD2FF",
                                bold: !0,
                                align: "left"
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 30,
                                x: 1,
                                width: 166,
                                var: "imgPro",
                                skin: "sub1/ui/scale9/img_44.png",
                                height: 11,
                                sizeGrid: "3,4,5,5"
                            },
                            compId: 6
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_43.png", "sub1/ui/scale9/img_44.png" ],
                    loadList3D: []
                }, e.LibraryPropertybarItemUI = s, N("ui.view.library.LibraryPropertybarItemUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(n.uiView);
                    }
                }
                n.uiView = {
                    type: "View",
                    props: {
                        width: 224,
                        height: 225
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 224,
                            height: 225
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 1,
                                x: 2,
                                width: 221,
                                var: "imgSelect",
                                skin: "sub1/ui/scale9/img_library_15.png",
                                sizeGrid: "8,12,8,10",
                                height: 224
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 3.5,
                                x: 4,
                                var: "imgGradeBg",
                                skin: "sub1/ui/library/img_14.png"
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 13.5,
                                x: 7,
                                var: "imgIcon",
                                skin: "sub1/role/001.png"
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 169,
                                x: 5,
                                width: 213,
                                var: "imgGradeBottom",
                                skin: "sub1/ui/library/img_11.png",
                                height: 51,
                                sizeGrid: "28,11,10,101"
                            },
                            compId: 9
                        }, {
                            type: "Image",
                            props: {
                                y: 191.5,
                                x: 13.5,
                                var: "imgGrade",
                                skin: "sub1/ui/library/img_grade_1.png"
                            },
                            compId: 49
                        }, {
                            type: "Box",
                            props: {
                                y: 196,
                                x: 156,
                                width: 116,
                                var: "btnUse",
                                height: 47,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 10,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 1,
                                    skin: "sub1/ui/scale9/img_library_14.png"
                                },
                                compId: 11
                            }, {
                                type: "Label",
                                props: {
                                    y: 6,
                                    x: 7.5,
                                    width: 103,
                                    valign: "middle",
                                    text: "使用",
                                    height: 33,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#000000",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 12
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 13
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 7.5,
                                x: 140,
                                var: "imgUsing",
                                skin: "sub1/ui/library/img_13.png"
                            },
                            compId: 18
                        }, {
                            type: "Box",
                            props: {
                                y: 196,
                                x: 156,
                                width: 116,
                                var: "btnBuy",
                                height: 47,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 19,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 1,
                                    width: 114,
                                    skin: "sub1/ui/scale9/img_normal_1.png",
                                    height: 47,
                                    sizeGrid: "24,92,27,91"
                                },
                                compId: 20
                            }, {
                                type: "Label",
                                props: {
                                    y: 6,
                                    x: 7.5,
                                    width: 103,
                                    valign: "middle",
                                    text: "购买",
                                    height: 33,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#000000",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 21
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 22
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 196,
                                x: 156,
                                width: 116,
                                visible: !1,
                                var: "btnAd",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 47,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 50,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 14,
                                    x: 14,
                                    width: 21,
                                    skin: "sub1/ui/common/img_10.png",
                                    height: 19
                                },
                                compId: 54
                            }, {
                                type: "Label",
                                props: {
                                    y: 7,
                                    x: 35,
                                    width: 79,
                                    valign: "middle",
                                    text: "碎片X1",
                                    height: 33,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#000000",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 52
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 53
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 9,
                                x: 103,
                                width: 111,
                                var: "boxCost",
                                height: 32
                            },
                            compId: 23,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 4,
                                    x: 23.5,
                                    var: "img_costType",
                                    skin: "sub1/ui/common/img_3.png",
                                    scaleY: .5,
                                    scaleX: .5
                                },
                                compId: 24
                            }, {
                                type: "Label",
                                props: {
                                    y: 4,
                                    x: 42,
                                    width: 75,
                                    var: "txtCost",
                                    text: "10000",
                                    height: 21,
                                    fontSize: 20,
                                    font: "SimHei",
                                    color: "#50FF21"
                                },
                                compId: 25
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 12,
                                x: 13.5,
                                width: 96,
                                var: "txtName",
                                valign: "middle",
                                text: "label",
                                height: 28,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "left"
                            },
                            compId: 26
                        }, {
                            type: "Image",
                            props: {
                                y: 45,
                                x: 2,
                                visible: !1,
                                var: "img_NewYearTag",
                                skin: "sub1/ui/library/img_15.png"
                            },
                            compId: 45
                        }, {
                            type: "HBox",
                            props: {
                                y: 12,
                                visible: !1,
                                var: "boxDebris",
                                right: 10,
                                height: 31
                            },
                            compId: 56,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "imgDebris",
                                    skin: "sub1/ui/getReward/img_debris_1.png"
                                },
                                compId: 55
                            }, {
                                type: "Label",
                                props: {
                                    text: "(",
                                    fontSize: 20,
                                    color: "#ffffff"
                                },
                                compId: 57
                            }, {
                                type: "Label",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "labelDebris",
                                    text: "0",
                                    fontSize: 20,
                                    color: "#ff0400"
                                },
                                compId: 58
                            }, {
                                type: "Label",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "labelDebrisAll",
                                    text: "/10)",
                                    fontSize: 20,
                                    color: "#ffffff"
                                },
                                compId: 59
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_library_15.png", "sub1/ui/library/img_14.png", "sub1/role/001.png", "sub1/ui/library/img_11.png", "sub1/ui/library/img_grade_1.png", "sub1/ui/scale9/img_library_14.png", "sub1/ui/library/img_13.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_10.png", "sub1/ui/common/img_3.png", "sub1/ui/library/img_15.png", "sub1/ui/getReward/img_debris_1.png" ],
                    loadList3D: []
                }, e.LibraryRoleItemUI = n, N("ui.view.library.LibraryRoleItemUI", n);
                class o extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/library/LibraryView");
                    }
                }
                e.LibraryViewUI = o, N("ui.view.library.LibraryViewUI", o);
            }(e.library || (e.library = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/load/LoadingFightView");
                    }
                }
                e.LoadingFightViewUI = t, N("ui.view.load.LoadingFightViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/load/LoadingMaskView");
                    }
                }
                e.LoadingMaskViewUI = i, N("ui.view.load.LoadingMaskViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(a.uiView);
                    }
                }
                a.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "loading/img_11.jpg",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 4
                    }, {
                        type: "Image",
                        props: {
                            top: -2,
                            skin: "loading/img_5.png",
                            sizeGrid: "2,2,2,2",
                            right: -2,
                            left: -2,
                            bottom: -2,
                            alpha: .2
                        },
                        compId: 11
                    }, {
                        type: "Box",
                        props: {
                            width: 914,
                            var: "boxLoading",
                            scaleY: 1,
                            scaleX: 1,
                            height: 588,
                            centerY: -79,
                            centerX: 0
                        },
                        compId: 6,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 122,
                                var: "imgLoading",
                                skin: "loading/img_3.png",
                                centerX: 0
                            },
                            compId: 5
                        }, {
                            type: "Label",
                            props: {
                                width: 708,
                                var: "txtPercent",
                                valign: "middle",
                                text: "玩命加载中，请耐心等待...(78%) ",
                                height: 55,
                                fontSize: 25,
                                color: "#000000",
                                centerY: 117,
                                centerX: 0,
                                align: "center"
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                y: 441,
                                width: 495,
                                skin: "loading/img_5.png",
                                sizeGrid: "8,15,9,11",
                                centerX: 0
                            },
                            compId: 8,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 1.25,
                                    x: 1,
                                    width: 492,
                                    var: "imgPro",
                                    skin: "loading/img_2.png",
                                    sizeGrid: "13,32,15,17"
                                },
                                compId: 9
                            } ]
                        } ]
                    }, {
                        type: "Label",
                        props: {
                            text: "抵制不良游戏，拒绝盗版游戏。  注意自我保护，谨防受骗上当。  适度游戏益脑，沉迷游戏伤身。  合理安排时间，享受健康生活。",
                            fontSize: 20,
                            color: "#cacaca",
                            centerX: 0,
                            bottom: 44
                        },
                        compId: 12
                    }, {
                        type: "Image",
                        props: {
                            y: 37,
                            width: 72,
                            skin: "loading/img_cadpa.png",
                            right: 37,
                            height: 92
                        },
                        compId: 13
                    } ],
                    loadList: [ "loading/img_11.jpg", "loading/img_5.png", "loading/img_3.png", "loading/img_2.png", "loading/img_cadpa.png" ],
                    loadList3D: []
                }, e.LoadingViewUI = a, N("ui.view.load.LoadingViewUI", a);
            }(e.load || (e.load = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        mouseEnabled: !0,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "loading/img_11.jpg",
                            right: 0,
                            mouseEnabled: !0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "sub1/ui/scale9/img_13.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .5,
                            sizeGrid: "2,4,3,2"
                        },
                        compId: 92
                    }, {
                        type: "Box",
                        props: {
                            width: 914,
                            var: "boxLoading",
                            scaleY: 1,
                            scaleX: 1,
                            height: 588,
                            centerY: 11,
                            centerX: 0
                        },
                        compId: 86,
                        child: [ {
                            type: "Box",
                            props: {
                                y: -54,
                                x: -142,
                                width: 1164,
                                height: 468
                            },
                            compId: 121,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 18,
                                    x: 152,
                                    width: 853,
                                    skin: "sub1/ui/scale9/img_load_3.png",
                                    sizeGrid: "0,71,0,55",
                                    height: 369
                                },
                                compId: 95
                            }, {
                                type: "Image",
                                props: {
                                    y: 33,
                                    x: 205,
                                    skin: "sub1/ui/loading/img_loading_bg.png"
                                },
                                compId: 94
                            }, {
                                type: "Image",
                                props: {
                                    y: 101,
                                    x: 276,
                                    width: 2,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 60,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 96
                            }, {
                                type: "Image",
                                props: {
                                    y: 99,
                                    x: 128,
                                    width: 150,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 97
                            }, {
                                type: "Image",
                                props: {
                                    y: 93,
                                    x: 120,
                                    skin: "sub1/ui/loading/img_11.png"
                                },
                                compId: 98
                            }, {
                                type: "Image",
                                props: {
                                    y: 97,
                                    x: 778,
                                    width: 2,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 60,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 99
                            }, {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 778,
                                    width: 238,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 2,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 100
                            }, {
                                type: "Image",
                                props: {
                                    y: 90,
                                    x: 1015,
                                    skin: "sub1/ui/loading/img_11.png"
                                },
                                compId: 101
                            }, {
                                type: "Image",
                                props: {
                                    y: 187,
                                    x: 882,
                                    width: 142,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 2,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 102
                            }, {
                                type: "Image",
                                props: {
                                    y: 181,
                                    x: 1022,
                                    skin: "sub1/ui/loading/img_11.png"
                                },
                                compId: 103
                            }, {
                                type: "Image",
                                props: {
                                    y: 259,
                                    x: 905,
                                    width: 142,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 2,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 104
                            }, {
                                type: "Image",
                                props: {
                                    y: 254,
                                    x: 1044,
                                    width: 13,
                                    skin: "sub1/ui/loading/img_11.png",
                                    height: 13
                                },
                                compId: 105
                            }, {
                                type: "Image",
                                props: {
                                    y: 274,
                                    x: 128,
                                    width: 157,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 2,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 106
                            }, {
                                type: "Image",
                                props: {
                                    y: 269,
                                    x: 121,
                                    width: 13,
                                    skin: "sub1/ui/loading/img_11.png",
                                    height: 13
                                },
                                compId: 107
                            }, {
                                type: "Image",
                                props: {
                                    y: 160,
                                    x: 250,
                                    width: 58,
                                    skin: "sub1/ui/loading/img_10.png",
                                    height: 58
                                },
                                compId: 108
                            }, {
                                type: "Image",
                                props: {
                                    y: 226,
                                    x: 278,
                                    skin: "sub1/ui/loading/img_10.png"
                                },
                                compId: 109
                            }, {
                                type: "Image",
                                props: {
                                    y: 155,
                                    x: 757,
                                    width: 45,
                                    skin: "sub1/ui/loading/img_10.png",
                                    height: 45
                                },
                                compId: 110
                            }, {
                                type: "Image",
                                props: {
                                    y: 165,
                                    x: 840,
                                    width: 45,
                                    skin: "sub1/ui/loading/img_10.png",
                                    height: 45
                                },
                                compId: 111
                            }, {
                                type: "Image",
                                props: {
                                    y: 238,
                                    x: 862,
                                    width: 45,
                                    skin: "sub1/ui/loading/img_10.png",
                                    height: 45
                                },
                                compId: 112
                            }, {
                                type: "Image",
                                props: {
                                    y: 304,
                                    x: 377,
                                    width: 387,
                                    skin: "sub1/ui/scale9/img_getReward_5.png",
                                    sizeGrid: "32,34,34,32",
                                    height: 77,
                                    alpha: .75
                                },
                                compId: 113
                            }, {
                                type: "Image",
                                props: {
                                    y: 217,
                                    x: 767,
                                    width: 72,
                                    skin: "sub1/ui/loading/img_10.png",
                                    height: 72
                                },
                                compId: 114
                            }, {
                                type: "Image",
                                props: {
                                    y: 419,
                                    x: 372,
                                    width: 100,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 2,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 115
                            }, {
                                type: "Image",
                                props: {
                                    y: 364,
                                    x: 470,
                                    width: 2,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 55,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 116
                            }, {
                                type: "Image",
                                props: {
                                    y: 414,
                                    x: 365,
                                    width: 13,
                                    skin: "sub1/ui/loading/img_11.png",
                                    height: 13
                                },
                                compId: 117
                            }, {
                                type: "Image",
                                props: {
                                    y: 284,
                                    x: 801,
                                    width: 2,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 134,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 119
                            }, {
                                type: "Image",
                                props: {
                                    y: 418,
                                    x: 801,
                                    width: 130,
                                    skin: "sub1/ui/scale9/img_load_4.png",
                                    height: 2,
                                    sizeGrid: "0,4,0,2"
                                },
                                compId: 120
                            }, {
                                type: "Image",
                                props: {
                                    y: 412,
                                    x: 928,
                                    width: 13,
                                    skin: "sub1/ui/loading/img_11.png",
                                    height: 13
                                },
                                compId: 118
                            }, {
                                type: "Label",
                                props: {
                                    y: 87,
                                    x: 12,
                                    text: "左手射击",
                                    fontSize: 24,
                                    color: "#ffffff"
                                },
                                compId: 122
                            }, {
                                type: "Label",
                                props: {
                                    y: 263,
                                    x: 60,
                                    text: "摇杆",
                                    fontSize: 24,
                                    color: "#ffffff"
                                },
                                compId: 123
                            }, {
                                type: "Label",
                                props: {
                                    y: 408,
                                    x: 261,
                                    text: "切换枪械",
                                    fontSize: 24,
                                    color: "#ffffff"
                                },
                                compId: 124
                            }, {
                                type: "Label",
                                props: {
                                    y: 407,
                                    x: 951,
                                    text: "右手射击",
                                    fontSize: 24,
                                    color: "#ffffff"
                                },
                                compId: 125
                            }, {
                                type: "Label",
                                props: {
                                    y: 249,
                                    x: 1068,
                                    text: "跳跃",
                                    fontSize: 24,
                                    color: "#ffffff"
                                },
                                compId: 126
                            }, {
                                type: "Label",
                                props: {
                                    y: 176,
                                    x: 1041,
                                    text: "装弹",
                                    fontSize: 24,
                                    color: "#ffffff"
                                },
                                compId: 127
                            }, {
                                type: "Label",
                                props: {
                                    y: 88,
                                    x: 1042,
                                    text: "快速切换",
                                    fontSize: 24,
                                    color: "#ffffff"
                                },
                                compId: 128
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 418,
                                x: 103,
                                width: 708,
                                var: "txtPercent",
                                valign: "middle",
                                text: "玩命加载中，请耐心等待...(78%) ",
                                height: 55,
                                fontSize: 25,
                                color: "#000000",
                                centerY: 151,
                                centerX: 0,
                                alpha: 0,
                                align: "center"
                            },
                            compId: 89
                        }, {
                            type: "Image",
                            props: {
                                y: 488,
                                x: 260,
                                width: 395,
                                skin: "sub1/ui/scale9/img_load_2.png",
                                sizeGrid: "0,4,0,4",
                                height: 21,
                                centerX: 0
                            },
                            compId: 90,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 1,
                                    x: 2,
                                    width: 391,
                                    var: "imgPro",
                                    skin: "sub1/ui/scale9/img_load_1.png",
                                    sizeGrid: "7,6,6,5",
                                    height: 19
                                },
                                compId: 91
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 541.5,
                                skin: "sub1/ui/loading/img_9.png",
                                centerX: 0
                            },
                            compId: 129
                        }, {
                            type: "Label",
                            props: {
                                y: 531,
                                x: -31,
                                width: 976,
                                var: "txtContent",
                                valign: "middle",
                                text: "小提示：率先获得60分队伍获胜",
                                height: 79,
                                fontSize: 26,
                                font: "SimHei",
                                color: "#FFFFFF",
                                centerX: 0,
                                align: "center"
                            },
                            compId: 27
                        }, {
                            type: "Label",
                            props: {
                                y: 406,
                                x: -16,
                                width: 976,
                                var: "labelLog",
                                valign: "middle",
                                text: "正在进入战斗...",
                                height: 79,
                                fontSize: 40,
                                font: "SimHei",
                                color: "#FFFFFF",
                                centerX: 15,
                                align: "center"
                            },
                            compId: 93
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 42,
                            keyframes: {
                                y: [ {
                                    value: -14,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 42,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -14,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 42,
                                    key: "y",
                                    index: 180
                                }, {
                                    value: -14,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 42,
                                    label: null,
                                    key: "y",
                                    index: 225
                                } ],
                                x: [ {
                                    value: -177,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 42,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 451,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 42,
                                    key: "x",
                                    index: 180
                                }, {
                                    value: 451,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 42,
                                    label: null,
                                    key: "x",
                                    index: 225
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 43,
                            keyframes: {
                                y: [ {
                                    value: 130,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    key: "y",
                                    index: 61
                                } ],
                                x: [ {
                                    value: 72,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    key: "x",
                                    index: 0
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 43,
                                    key: "rotation",
                                    index: 61
                                } ]
                            }
                        }, {
                            target: 57,
                            keyframes: {
                                y: [ {
                                    value: 198,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 57,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -120,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 57,
                                    key: "y",
                                    index: 70
                                } ],
                                x: [ {
                                    value: 133,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 57,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 133,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 57,
                                    key: "x",
                                    index: 70
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 57,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 57,
                                    key: "rotation",
                                    index: 70
                                } ]
                            }
                        }, {
                            target: 58,
                            keyframes: {
                                y: [ {
                                    value: 149,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 149,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    label: null,
                                    key: "y",
                                    index: 29
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    key: "y",
                                    index: 106
                                } ],
                                x: [ {
                                    value: 202,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 202,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    label: null,
                                    key: "x",
                                    index: 29
                                }, {
                                    value: 202,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    key: "x",
                                    index: 106
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 58,
                                    key: "rotation",
                                    index: 106
                                } ]
                            }
                        }, {
                            target: 60,
                            keyframes: {
                                y: [ {
                                    value: 130,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 130,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    label: null,
                                    key: "y",
                                    index: 4
                                }, {
                                    value: -110,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    key: "y",
                                    index: 81
                                } ],
                                x: [ {
                                    value: 316,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 316,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    label: null,
                                    key: "x",
                                    index: 4
                                }, {
                                    value: 316,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    key: "x",
                                    index: 81
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 60,
                                    key: "rotation",
                                    index: 81
                                } ]
                            }
                        }, {
                            target: 61,
                            keyframes: {
                                y: [ {
                                    value: 208,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 208,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    label: null,
                                    key: "y",
                                    index: 4
                                }, {
                                    value: -120,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    key: "y",
                                    index: 89
                                } ],
                                x: [ {
                                    value: 269,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 269,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    label: null,
                                    key: "x",
                                    index: 4
                                }, {
                                    value: 269,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    key: "x",
                                    index: 89
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 61,
                                    key: "rotation",
                                    index: 89
                                } ]
                            }
                        }, {
                            target: 62,
                            keyframes: {
                                y: [ {
                                    value: 149,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 149,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    label: null,
                                    key: "y",
                                    index: 18
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    key: "y",
                                    index: 119
                                } ],
                                x: [ {
                                    value: 438,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 438,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    label: null,
                                    key: "x",
                                    index: 18
                                }, {
                                    value: 438,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    key: "x",
                                    index: 119
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 62,
                                    key: "rotation",
                                    index: 119
                                } ]
                            }
                        } ],
                        name: "ani3",
                        id: 3,
                        frameRate: 24,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 63,
                            keyframes: {
                                y: [ {
                                    value: 196,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 63,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 63,
                                    key: "y",
                                    index: 73
                                } ],
                                x: [ {
                                    value: 52,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 63,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 52,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 63,
                                    key: "x",
                                    index: 73
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 63,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 63,
                                    key: "rotation",
                                    index: 73
                                } ]
                            }
                        }, {
                            target: 64,
                            keyframes: {
                                y: [ {
                                    value: 138,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 138,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    label: null,
                                    key: "y",
                                    index: 10
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    key: "y",
                                    index: 100
                                } ],
                                x: [ {
                                    value: 115,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 115,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    label: null,
                                    key: "x",
                                    index: 10
                                }, {
                                    value: 115,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    key: "x",
                                    index: 100
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 64,
                                    key: "rotation",
                                    index: 100
                                } ]
                            }
                        }, {
                            target: 65,
                            keyframes: {
                                y: [ {
                                    value: 235,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 235,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    label: null,
                                    key: "y",
                                    index: 22
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    key: "y",
                                    index: 92
                                } ],
                                x: [ {
                                    value: 178,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 178,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    label: null,
                                    key: "x",
                                    index: 22
                                }, {
                                    value: 178,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    key: "x",
                                    index: 92
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 65,
                                    key: "rotation",
                                    index: 92
                                } ]
                            }
                        }, {
                            target: 66,
                            keyframes: {
                                y: [ {
                                    value: 157,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 157,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    label: null,
                                    key: "y",
                                    index: 20
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    key: "y",
                                    index: 106
                                } ],
                                x: [ {
                                    value: 316,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 316,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    label: null,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 316,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    key: "x",
                                    index: 106
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 66,
                                    key: "rotation",
                                    index: 106
                                } ]
                            }
                        }, {
                            target: 67,
                            keyframes: {
                                y: [ {
                                    value: 275,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 275,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    label: null,
                                    key: "y",
                                    index: 33
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    key: "y",
                                    index: 89
                                } ],
                                x: [ {
                                    value: 258,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 258,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    label: null,
                                    key: "x",
                                    index: 33
                                }, {
                                    value: 258,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    key: "x",
                                    index: 89
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 67,
                                    key: "rotation",
                                    index: 89
                                } ]
                            }
                        }, {
                            target: 68,
                            keyframes: {
                                y: [ {
                                    value: 207,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 207,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    label: null,
                                    key: "y",
                                    index: 23
                                }, {
                                    value: -100,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    key: "y",
                                    index: 117
                                } ],
                                x: [ {
                                    value: 404,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 404,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    label: null,
                                    key: "x",
                                    index: 23
                                }, {
                                    value: 404,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    key: "x",
                                    index: 117
                                } ],
                                rotation: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    key: "rotation",
                                    index: 0
                                }, {
                                    value: 360,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 68,
                                    key: "rotation",
                                    index: 117
                                } ]
                            }
                        } ],
                        name: "ani4",
                        id: 4,
                        frameRate: 24,
                        action: 0
                    }, {
                        nodes: [ {
                            target: 32,
                            keyframes: {
                                y: [ {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 19,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    key: "y",
                                    index: 5
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "y",
                                    index: 10
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "y",
                                    index: 15
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "y",
                                    index: 20
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "y",
                                    index: 85
                                } ],
                                x: [ {
                                    value: 121,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 121,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "x",
                                    index: 10
                                }, {
                                    value: 121,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "x",
                                    index: 15
                                }, {
                                    value: 121,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 121,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 32,
                                    label: null,
                                    key: "x",
                                    index: 85
                                } ]
                            }
                        }, {
                            target: 35,
                            keyframes: {
                                y: [ {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 19,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    key: "y",
                                    index: 10
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    key: "y",
                                    index: 15
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    label: null,
                                    key: "y",
                                    index: 20
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    label: null,
                                    key: "y",
                                    index: 85
                                } ],
                                x: [ {
                                    value: 135,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 135,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    label: null,
                                    key: "x",
                                    index: 5
                                }, {
                                    value: 135,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    label: null,
                                    key: "x",
                                    index: 15
                                }, {
                                    value: 135,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    label: null,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 135,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 35,
                                    label: null,
                                    key: "x",
                                    index: 85
                                } ]
                            }
                        }, {
                            target: 36,
                            keyframes: {
                                y: [ {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: 19,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    key: "y",
                                    index: 15
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    label: null,
                                    key: "y",
                                    index: 20
                                }, {
                                    value: 26,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    label: null,
                                    key: "y",
                                    index: 85
                                } ],
                                x: [ {
                                    value: 149,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 149,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    label: null,
                                    key: "x",
                                    index: 5
                                }, {
                                    value: 149,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 36,
                                    label: null,
                                    key: "x",
                                    index: 10
                                } ]
                            }
                        } ],
                        name: "ani2",
                        id: 5,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "loading/img_11.jpg", "sub1/ui/scale9/img_13.png", "sub1/ui/scale9/img_load_3.png", "sub1/ui/loading/img_loading_bg.png", "sub1/ui/scale9/img_load_4.png", "sub1/ui/loading/img_11.png", "sub1/ui/loading/img_10.png", "sub1/ui/scale9/img_getReward_5.png", "sub1/ui/scale9/img_load_2.png", "sub1/ui/scale9/img_load_1.png", "sub1/ui/loading/img_9.png" ],
                    loadList3D: []
                }, e.MatchingViewUI = t, N("ui.view.matching.MatchingViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 97,
                        height: 95
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 97,
                            skin: "sub1/ui/scale9/img_37.png",
                            height: 95,
                            sizeGrid: "9,10,11,9"
                        },
                        compId: 3
                    }, {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 97,
                            var: "imgIcon",
                            height: 95
                        },
                        compId: 4
                    } ],
                    loadList: [ "sub1/ui/scale9/img_37.png" ],
                    loadList3D: []
                }, e.MatchItemUI = i, N("ui.view.matching.MatchItemUI", i);
            }(e.matching || (e.matching = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/mentor/MentorAvatarCell");
                    }
                }
                e.MentorAvatarCellUI = t, N("ui.view.mentor.MentorAvatarCellUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/mentor/MentorHistoryView");
                    }
                }
                e.MentorHistoryViewUI = i, N("ui.view.mentor.MentorHistoryViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/mentor/MentorView");
                    }
                }
                e.MentorViewUI = a, N("ui.view.mentor.MentorViewUI", a);
            }(e.mentor || (e.mentor = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/menu/MapMenuCellView");
                    }
                }
                e.MapMenuCellViewUI = t, N("ui.view.menu.MapMenuCellViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/menu/MapMenuView");
                    }
                }
                e.MapMenuViewUI = i, N("ui.view.menu.MapMenuViewUI", i);
            }(e.menu || (e.menu = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/mode/ModeCellView");
                    }
                }
                e.ModeCellViewUI = t, N("ui.view.mode.ModeCellViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "sub1/ui/mode/img_bg.png",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 20
                    }, {
                        type: "Panel",
                        props: {
                            y: 0,
                            width: 1625,
                            var: "panel",
                            right: 0,
                            left: 0,
                            height: 750
                        },
                        compId: 21,
                        child: [ {
                            type: "HBox",
                            props: {
                                y: 130,
                                x: 199,
                                var: "boxCell",
                                space: 30
                            },
                            compId: 22
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 39,
                            x: 188,
                            width: 77,
                            var: "btnClose",
                            height: 62,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 8,
                        child: [ {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/equip/img_5.png",
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 9
                        }, {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 10
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            width: 259,
                            var: "btnStart",
                            right: 169,
                            height: 106,
                            bottom: 90,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 29,
                        child: [ {
                            type: "Script",
                            props: {
                                runtime: "effect/ButtonEffect.ts"
                            },
                            compId: 30
                        }, {
                            type: "Image",
                            props: {
                                width: 215,
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                sizeGrid: "26,35,34,37",
                                height: 75,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 31
                        }, {
                            type: "Image",
                            props: {
                                width: 117,
                                visible: !0,
                                skin: "sub1/ui/menu/img_10.png",
                                height: 31,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 32
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            y: 27,
                            skin: "sub1/ui/mode/img_8.png",
                            centerX: 0
                        },
                        compId: 33,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 17,
                                x: 156,
                                width: 157,
                                scaleY: .5,
                                scaleX: .5,
                                height: 35
                            },
                            compId: 37,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -76,
                                    x: 72,
                                    width: 131,
                                    skin: "sub1/ui/end/img_30.png",
                                    rotation: 43,
                                    height: 134
                                },
                                compId: 38
                            }, {
                                type: "Image",
                                props: {
                                    width: 157,
                                    skin: "sub1/ui/scale9/img_13.png",
                                    renderType: "mask",
                                    height: 35,
                                    sizeGrid: "2,4,3,2"
                                },
                                compId: 39
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 17,
                                x: -88,
                                width: 157,
                                scaleY: .5,
                                scaleX: .5,
                                height: 35
                            },
                            compId: 34,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -76,
                                    x: 72,
                                    width: 131,
                                    skin: "sub1/ui/end/img_30.png",
                                    rotation: 43,
                                    height: 134
                                },
                                compId: 35
                            }, {
                                type: "Image",
                                props: {
                                    width: 157,
                                    skin: "sub1/ui/scale9/img_13.png",
                                    renderType: "mask",
                                    height: 35,
                                    sizeGrid: "2,4,3,2"
                                },
                                compId: 36
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/mode/img_bg.png", "sub1/ui/equip/img_5.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/menu/img_10.png", "sub1/ui/mode/img_8.png", "sub1/ui/end/img_30.png", "sub1/ui/scale9/img_13.png" ],
                    loadList3D: []
                }, e.ModeViewUI = i, N("ui.view.mode.ModeViewUI", i);
            }(e.mode || (e.mode = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 626,
                        height: 171
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 626,
                            var: "imgAd",
                            height: 171
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 33,
                                var: "btnClose",
                                skin: "sub1/ui/native/img_1.png",
                                scaleY: 1,
                                scaleX: 1,
                                right: 12,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/native/img_8.png",
                                left: 0,
                                bottom: 0
                            },
                            compId: 10
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 9,
                            keyframes: {
                                alpha: [ {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 60
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 120
                                } ]
                            }
                        } ],
                        name: "aniLight",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    }, {
                        nodes: [],
                        name: "aniScale",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/native/img_1.png", "sub1/ui/native/img_8.png" ],
                    loadList3D: []
                }, e.NativeBanner1ViewUI = t, N("ui.view.native.NativeBanner1ViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 626,
                        height: 171,
                        centerX: 0
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            width: 626,
                            var: "imgAd",
                            height: 171,
                            centerX: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 33,
                                var: "btnClose",
                                skin: "sub1/ui/native/img_1.png",
                                scaleY: 1,
                                scaleX: 1,
                                right: 12,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/native/img_8.png",
                                left: 0,
                                bottom: 0
                            },
                            compId: 10
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 9,
                            keyframes: {
                                alpha: [ {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 60
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 120
                                } ]
                            }
                        } ],
                        name: "aniLight",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    }, {
                        nodes: [],
                        name: "aniScale",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/native/img_1.png", "sub1/ui/native/img_8.png" ],
                    loadList3D: []
                }, e.NativeBanner2ViewUI = i, N("ui.view.native.NativeBanner2ViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(a.uiView);
                    }
                }
                a.uiView = {
                    type: "View",
                    props: {
                        width: 399,
                        height: 311
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 399,
                            var: "imgAd",
                            skin: "sub1/ui/scale9/img_14.png",
                            height: 311,
                            sizeGrid: "2,3,4,4"
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 24,
                                var: "btnClose",
                                skin: "sub1/ui/native/img_1.png",
                                scaleY: 1,
                                scaleX: 1,
                                right: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/native/img_8.png",
                                left: 0,
                                bottom: 0
                            },
                            compId: 10
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            y: 421,
                            x: 199.5,
                            width: 240,
                            var: "btnAd",
                            skin: "sub1/ui/scale9/img_normal_2.png",
                            height: 87,
                            anchorY: .5,
                            anchorX: .5,
                            sizeGrid: "21,80,30,79"
                        },
                        compId: 13,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 25,
                                x: 41,
                                skin: "sub1/ui/native/img_5.png"
                            },
                            compId: 14
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 9,
                            keyframes: {
                                alpha: [ {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 60
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 120
                                } ]
                            }
                        } ],
                        name: "aniLight",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    }, {
                        nodes: [],
                        name: "aniScale",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/scale9/img_14.png", "sub1/ui/native/img_1.png", "sub1/ui/native/img_8.png", "sub1/ui/scale9/img_normal_2.png", "sub1/ui/native/img_5.png" ],
                    loadList3D: []
                }, e.NativeBanner3ViewUI = a, N("ui.view.native.NativeBanner3ViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/native/NativeIcon1Cell");
                    }
                }
                e.NativeIcon1CellUI = s, N("ui.view.native.NativeIcon1CellUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(n.uiView);
                    }
                }
                n.uiView = {
                    type: "View",
                    props: {
                        width: 250,
                        height: 83
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 219,
                            skin: "sub1/ui/scale9/img_native_1.png",
                            height: 83,
                            sizeGrid: "12,13,13,13"
                        },
                        compId: 13,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 216,
                                var: "imgAd",
                                height: 79
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 14.5,
                                    var: "btnClose",
                                    skin: "sub1/ui/native/img_1.png",
                                    scaleY: .6,
                                    scaleX: .6,
                                    right: -30,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 11
                            }, {
                                type: "Image",
                                props: {
                                    skin: "sub1/ui/native/img_8.png",
                                    scaleY: .8,
                                    scaleX: .8,
                                    left: 0,
                                    bottom: -25
                                },
                                compId: 10
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 9,
                            keyframes: {
                                alpha: [ {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 0
                                }, {
                                    value: .3,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 60
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 9,
                                    key: "alpha",
                                    index: 120
                                } ]
                            }
                        } ],
                        name: "aniLight",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    }, {
                        nodes: [],
                        name: "aniScale",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/scale9/img_native_1.png", "sub1/ui/native/img_1.png", "sub1/ui/native/img_8.png" ],
                    loadList3D: []
                }, e.NativeIcon2CellUI = n, N("ui.view.native.NativeIcon2CellUI", n);
                class o extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(o.uiView);
                    }
                }
                o.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            width: 835,
                            var: "boxRoot",
                            height: 504,
                            centerY: -48,
                            centerX: -11
                        },
                        compId: 13,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 10,
                                x: 10,
                                var: "imgTouch",
                                top: 10,
                                skin: "sub1/ui/scale9/img_native_2.png",
                                sizeGrid: "32,28,39,39",
                                right: 10,
                                left: 10,
                                bottom: 10
                            },
                            compId: 10
                        }, {
                            type: "Image",
                            props: {
                                y: 29,
                                x: 30,
                                width: 777,
                                var: "imgAd",
                                height: 445
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 29,
                                var: "btnClose",
                                skin: "sub1/ui/native/img_1.png",
                                right: 30
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                skin: "sub1/ui/native/img_8.png",
                                left: 30,
                                bottom: 446
                            },
                            compId: 6
                        }, {
                            type: "Label",
                            props: {
                                y: 382,
                                x: 47,
                                visible: !1,
                                var: "txtTitle",
                                text: "title",
                                fontSize: 35,
                                font: "SimHei",
                                color: "#000000",
                                bold: !0
                            },
                            compId: 11
                        }, {
                            type: "Label",
                            props: {
                                y: 430,
                                x: 47,
                                wordWrap: !0,
                                width: 546,
                                visible: !1,
                                var: "txtContent",
                                text: "content",
                                height: 41,
                                fontSize: 30,
                                font: "SimHei",
                                color: "#000000",
                                bold: !0
                            },
                            compId: 12
                        }, {
                            type: "Image",
                            props: {
                                y: 560,
                                x: 419,
                                width: 316,
                                var: "btnAd",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 117,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 14,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 31.5,
                                    x: 35,
                                    skin: "sub1/ui/native/img_4.png"
                                },
                                compId: 16
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_native_2.png", "sub1/ui/native/img_1.png", "sub1/ui/native/img_8.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/native/img_4.png" ],
                    loadList3D: []
                }, e.NativeInterstitialViewUI = o, N("ui.view.native.NativeInterstitialViewUI", o);
            }(e.native || (e.native = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .7,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            width: 717,
                            var: "boxAll",
                            height: 506,
                            centerY: -52,
                            centerX: 0
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -14,
                                x: 57,
                                width: 610,
                                skin: "private/img_32.png",
                                sizeGrid: "73,11,10,9",
                                height: 428
                            },
                            compId: 5
                        }, {
                            type: "Box",
                            props: {
                                y: 130,
                                x: 234,
                                width: 257,
                                height: 217
                            },
                            compId: 9,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 34,
                                    x: 105,
                                    var: "imgStartGold",
                                    skin: "sub1/ui/offline/img_4.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 10
                            }, {
                                type: "Label",
                                props: {
                                    y: 128,
                                    var: "txtGold",
                                    valign: "middle",
                                    text: "800",
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#FFE400",
                                    centerX: 0,
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 11
                            }, {
                                type: "Image",
                                props: {
                                    y: -24,
                                    x: 47,
                                    skin: "sub1/ui/common/img_13.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: -39,
                                    x: 203,
                                    width: 7,
                                    skin: "sub1/ui/common/img_13.png",
                                    height: 13,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 13
                            }, {
                                type: "Image",
                                props: {
                                    y: 79,
                                    x: 198,
                                    width: 18,
                                    skin: "sub1/ui/common/img_13.png",
                                    pivotY: 13,
                                    pivotX: 9,
                                    height: 25
                                },
                                compId: 14
                            }, {
                                type: "Image",
                                props: {
                                    y: 61,
                                    x: 71,
                                    width: 18,
                                    skin: "sub1/ui/common/img_13.png",
                                    height: 22,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 15
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 365,
                                x: 355,
                                var: "btnGold",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 16,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 20.5,
                                    x: 26,
                                    skin: "sub1/ui/common/img_10.png"
                                },
                                compId: 17
                            }, {
                                type: "Image",
                                props: {
                                    y: 22.5,
                                    x: 74,
                                    skin: "sub1/ui/offline/img_3.png"
                                },
                                compId: 18
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 19
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 439,
                                x: 350,
                                width: 112,
                                var: "btnClose",
                                height: 33,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 20,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 22
                            }, {
                                type: "Label",
                                props: {
                                    y: 1,
                                    x: -4,
                                    text: "普通领取",
                                    fontSize: 30,
                                    color: "#ffffff"
                                },
                                compId: 26
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 0,
                                x: 287,
                                text: "离线收益",
                                fontSize: 34,
                                color: "#ffffff"
                            },
                            compId: 25
                        }, {
                            type: "Image",
                            props: {
                                y: 365,
                                x: 500,
                                width: 196,
                                visible: !1,
                                var: "btnNo",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                sizeGrid: "26,35,34,37",
                                pivotY: 34,
                                pivotX: 98,
                                height: 68
                            },
                            compId: 27,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 28
                            }, {
                                type: "Label",
                                props: {
                                    y: 21,
                                    x: 46,
                                    text: "普通领取",
                                    fontSize: 26,
                                    color: "#ffffff"
                                },
                                compId: 29
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 12,
                            keyframes: {
                                x: [ {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 20
                                }, {
                                    value: 61,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "x",
                                    index: 40
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleY",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 20
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleY",
                                    index: 40
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    key: "scaleX",
                                    index: 10
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 20
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 30
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 12,
                                    label: null,
                                    key: "scaleX",
                                    index: 40
                                } ]
                            }
                        }, {
                            target: 13,
                            keyframes: {
                                x: [ {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 21
                                }, {
                                    value: 217,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "x",
                                    index: 42
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleY",
                                    index: 11
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 21
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 32
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleY",
                                    index: 42
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    key: "scaleX",
                                    index: 11
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 21
                                }, {
                                    value: 2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 32
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 13,
                                    label: null,
                                    key: "scaleX",
                                    index: 42
                                } ]
                            }
                        }, {
                            target: 14,
                            keyframes: {
                                x: [ {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    key: "x",
                                    index: 9
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "x",
                                    index: 18
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "x",
                                    index: 29
                                }, {
                                    value: 212,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "x",
                                    index: 38
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    key: "scaleY",
                                    index: 9
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "scaleY",
                                    index: 18
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "scaleY",
                                    index: 29
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "scaleY",
                                    index: 38
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    key: "scaleX",
                                    index: 9
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "scaleX",
                                    index: 18
                                }, {
                                    value: .1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "scaleX",
                                    index: 29
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 14,
                                    label: null,
                                    key: "scaleX",
                                    index: 38
                                } ]
                            }
                        }, {
                            target: 15,
                            keyframes: {
                                x: [ {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    key: "x",
                                    index: 0
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    key: "x",
                                    index: 14
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "x",
                                    index: 26
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "x",
                                    index: 37
                                }, {
                                    value: 85,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "x",
                                    index: 42
                                } ],
                                scaleY: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    key: "scaleY",
                                    index: 14
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "scaleY",
                                    index: 26
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "scaleY",
                                    index: 37
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "scaleY",
                                    index: 42
                                } ],
                                scaleX: [ {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    key: "scaleX",
                                    index: 14
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "scaleX",
                                    index: 26
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "scaleX",
                                    index: 37
                                }, {
                                    value: .2,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 15,
                                    label: null,
                                    key: "scaleX",
                                    index: 42
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 24,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "private/img_32.png", "sub1/ui/offline/img_4.png", "sub1/ui/common/img_13.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_10.png", "sub1/ui/offline/img_3.png", "sub1/ui/scale9/img_normal_2.png" ],
                    loadList3D: []
                }, e.OfflineViewUI = t, N("ui.view.offline.OfflineViewUI", t);
            }(e.offline || (e.offline = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/record/RecordView");
                    }
                }
                e.RecordViewUI = t, N("ui.view.record.RecordViewUI", t);
            }(e.record || (e.record = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/review/ReviewEndRecreationView");
                    }
                }
                e.ReviewEndRecreationViewUI = t, N("ui.view.review.ReviewEndRecreationViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/review/ReviewGameView");
                    }
                }
                e.ReviewGameViewUI = i, N("ui.view.review.ReviewGameViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/review/ReviewLoadingFightView");
                    }
                }
                e.ReviewLoadingFightViewUI = a, N("ui.view.review.ReviewLoadingFightViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(s.uiView);
                    }
                }
                s.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "loading/img_12.jpg",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 4
                    }, {
                        type: "Image",
                        props: {
                            top: -2,
                            skin: "loading/img_5.png",
                            sizeGrid: "2,2,2,2",
                            right: -2,
                            left: -2,
                            bottom: -2,
                            alpha: .2
                        },
                        compId: 11
                    }, {
                        type: "Box",
                        props: {
                            width: 914,
                            var: "boxLoading",
                            scaleY: 1,
                            scaleX: 1,
                            height: 588,
                            centerY: -79,
                            centerX: 0
                        },
                        compId: 6,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 122,
                                var: "imgLoading",
                                skin: "loading/img_4.png",
                                centerX: 0
                            },
                            compId: 5
                        }, {
                            type: "Label",
                            props: {
                                width: 708,
                                var: "txtPercent",
                                valign: "middle",
                                text: "玩命加载中，请耐心等待...(78%) ",
                                height: 55,
                                fontSize: 25,
                                color: "#000000",
                                centerY: 117,
                                centerX: 0,
                                align: "center"
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                y: 441,
                                width: 495,
                                skin: "loading/img_5.png",
                                sizeGrid: "8,15,9,11",
                                centerX: 0
                            },
                            compId: 8,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 1.25,
                                    x: 1,
                                    width: 492,
                                    var: "imgPro",
                                    skin: "loading/img_13.png",
                                    sizeGrid: "13,32,15,17"
                                },
                                compId: 9
                            } ]
                        } ]
                    }, {
                        type: "Label",
                        props: {
                            text: "抵制不良游戏，拒绝盗版游戏。  注意自我保护，谨防受骗上当。  适度游戏益脑，沉迷游戏伤身。  合理安排时间，享受健康生活。",
                            fontSize: 20,
                            color: "#cacaca",
                            centerX: 0,
                            bottom: 44
                        },
                        compId: 12
                    }, {
                        type: "Image",
                        props: {
                            y: 37,
                            width: 72,
                            skin: "loading/img_cadpa.png",
                            right: 37,
                            height: 92
                        },
                        compId: 13
                    } ],
                    loadList: [ "loading/img_12.jpg", "loading/img_5.png", "loading/img_4.png", "loading/img_13.png", "loading/img_cadpa.png" ],
                    loadList3D: []
                }, e.ReviewLoadingViewUI = s, N("ui.view.review.ReviewLoadingViewUI", s);
                class n extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/review/ReviewMatchingView");
                    }
                }
                e.ReviewMatchingViewUI = n, N("ui.view.review.ReviewMatchingViewUI", n);
            }(e.review || (e.review = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .7,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 710,
                            height: 614,
                            centerY: -47,
                            centerX: 0
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 231,
                                x: 247.5,
                                skin: "sub1/ui/revive/img_7.png"
                            },
                            compId: 14
                        }, {
                            type: "Image",
                            props: {
                                y: 420,
                                x: 357,
                                var: "btnBack",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                sizeGrid: "24,92,27,91",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 17
                            }, {
                                type: "Label",
                                props: {
                                    y: 19,
                                    x: 38,
                                    width: 120,
                                    text: "退出战场",
                                    height: 39,
                                    fontSize: 30,
                                    font: "SimHei",
                                    color: "#ffffff"
                                },
                                compId: 18
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "sub1/ui/revive/img_7.png", "sub1/ui/scale9/img_normal_2.png" ],
                    loadList3D: []
                }, e.GameOverViewUI = t, N("ui.view.revive.GameOverViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .75,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            width: 1334,
                            var: "boxAll",
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 79,
                                x: 68,
                                width: 391,
                                skin: "sub1/ui/scale9/img_60.png",
                                height: 114,
                                alpha: .2,
                                sizeGrid: "3,4,5,5"
                            },
                            compId: 21
                        }, {
                            type: "Label",
                            props: {
                                y: 89,
                                x: 91,
                                width: 265,
                                valign: "middle",
                                text: "击败者：",
                                height: 41,
                                fontSize: 42,
                                font: "SimHei",
                                color: "#FEFEFE",
                                bold: !1,
                                align: "left"
                            },
                            compId: 15
                        }, {
                            type: "Label",
                            props: {
                                y: 93,
                                x: 243,
                                width: 265,
                                var: "txtKiller",
                                valign: "middle",
                                text: "罪魁祸首是",
                                height: 41,
                                fontSize: 30,
                                font: "SimHei",
                                color: "#FF3636",
                                bold: !0,
                                align: "left"
                            },
                            compId: 16
                        }, {
                            type: "Label",
                            props: {
                                y: 159,
                                x: 100,
                                width: 275,
                                var: "txtHit",
                                text: "对我造成伤害：100",
                                height: 21,
                                fontSize: 24,
                                color: "#FEFEFE"
                            },
                            compId: 22
                        }, {
                            type: "Image",
                            props: {
                                y: 147,
                                x: 304,
                                var: "imgArm",
                                skin: "sub1/equip/arm/1.png",
                                scaleY: .4,
                                scaleX: .4
                            },
                            compId: 23
                        }, {
                            type: "Label",
                            props: {
                                y: 446,
                                x: 848,
                                width: 312,
                                valign: "middle",
                                text: "观看视频后本局均可快速复活",
                                height: 40,
                                fontSize: 18,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: !1,
                                align: "center"
                            },
                            compId: 6
                        }, {
                            type: "Label",
                            props: {
                                y: 391,
                                x: 732,
                                width: 192,
                                var: "txtCountDown",
                                valign: "middle",
                                text: "10",
                                height: 198,
                                fontSize: 85,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: !0,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 398.5,
                                x: 1004,
                                width: 197,
                                var: "btnRevive",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 68,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 8,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 9
                            }, {
                                type: "Image",
                                props: {
                                    y: 22,
                                    x: 16,
                                    skin: "sub1/ui/common/img_10.png"
                                },
                                compId: 11
                            }, {
                                type: "Label",
                                props: {
                                    y: 20.5,
                                    x: 55,
                                    width: 120,
                                    text: "立即复活",
                                    height: 39,
                                    fontSize: 30,
                                    font: "SimHei",
                                    color: "#371E01",
                                    bold: !0
                                },
                                compId: 24
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 370,
                                x: 431,
                                width: 312,
                                valign: "middle",
                                text: "重生时间：",
                                height: 40,
                                fontSize: 44,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: !1,
                                align: "center"
                            },
                            compId: 14
                        }, {
                            type: "Image",
                            props: {
                                width: 512,
                                var: "img3DCenter",
                                height: 557,
                                centerY: 130,
                                centerX: -415
                            },
                            compId: 17
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "sub1/ui/scale9/img_60.png", "sub1/equip/arm/1.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_10.png" ],
                    loadList3D: []
                }, e.NewReviveViewUI = i, N("ui.view.revive.NewReviveViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(a.uiView);
                    }
                }
                a.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .75,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 8
                    }, {
                        type: "Box",
                        props: {
                            width: 710,
                            height: 614,
                            centerY: -77,
                            centerX: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Label",
                            props: {
                                y: 248,
                                x: 355,
                                width: 192,
                                var: "txtCountDown",
                                valign: "middle",
                                text: "10",
                                height: 198,
                                fontSize: 150,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: !0,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 443,
                                x: 355,
                                var: "btnRevive",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 11,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 12
                            }, {
                                type: "Image",
                                props: {
                                    y: 21.5,
                                    x: 22,
                                    skin: "sub1/ui/common/img_10.png"
                                },
                                compId: 14
                            }, {
                                type: "Label",
                                props: {
                                    y: 19.5,
                                    x: 60,
                                    width: 120,
                                    text: "立即复活",
                                    height: 39,
                                    fontSize: 30,
                                    font: "SimHei",
                                    color: "#371E01",
                                    bold: !0
                                },
                                compId: 22
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 528,
                                x: 355,
                                var: "btnBack",
                                text: "不了，谢谢",
                                fontSize: 32,
                                color: "#ffffff",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 16,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 17
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 56,
                                x: 202,
                                width: 265,
                                valign: "middle",
                                text: "击败者：",
                                height: 41,
                                fontSize: 42,
                                font: "SimHei",
                                color: "#FEFEFE",
                                bold: !1,
                                align: "left"
                            },
                            compId: 18
                        }, {
                            type: "Label",
                            props: {
                                y: 60,
                                x: 354,
                                width: 265,
                                var: "txtKiller",
                                valign: "middle",
                                text: "罪魁祸首是",
                                height: 41,
                                fontSize: 30,
                                font: "SimHei",
                                color: "#FF3636",
                                bold: !0,
                                align: "left"
                            },
                            compId: 19
                        }, {
                            type: "Label",
                            props: {
                                y: 126,
                                x: 211,
                                width: 275,
                                var: "txtHit",
                                text: "对我造成伤害：100",
                                height: 21,
                                fontSize: 24,
                                color: "#FEFEFE"
                            },
                            compId: 20
                        }, {
                            type: "Image",
                            props: {
                                y: 113,
                                x: 420,
                                var: "imgArm",
                                skin: "sub1/equip/arm/1.png",
                                scaleY: .4,
                                scaleX: .4
                            },
                            compId: 21
                        }, {
                            type: "Image",
                            props: {
                                y: 443,
                                x: 478,
                                width: 196,
                                visible: !1,
                                var: "btnNo",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                sizeGrid: "26,35,34,37",
                                pivotY: 34,
                                pivotX: 98,
                                height: 68
                            },
                            compId: 23,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 24
                            }, {
                                type: "Label",
                                props: {
                                    y: 21,
                                    x: 46,
                                    text: "不了谢谢",
                                    fontSize: 26,
                                    color: "#ffffff"
                                },
                                compId: 25
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_10.png", "sub1/equip/arm/1.png", "sub1/ui/scale9/img_normal_2.png" ],
                    loadList3D: []
                }, e.ReviveViewUI = a, N("ui.view.revive.ReviveViewUI", a);
            }(e.revive || (e.revive = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 200,
                        height: 229
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: -5,
                            x: -4,
                            width: 209,
                            var: "imgSelect",
                            skin: "sub1/ui/scale9/img_45.png",
                            height: 240,
                            sizeGrid: "34,31,28,30"
                        },
                        compId: 7
                    }, {
                        type: "Image",
                        props: {
                            width: 175,
                            var: "imgFrame",
                            skin: "sub1/ui/scale9/img_role_1.png",
                            sizeGrid: "40,69,15,17",
                            height: 204,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 33,
                                x: 5,
                                width: 164,
                                skin: "sub1/ui/scale9/img_role_common_1.png",
                                height: 164,
                                sizeGrid: "11,14,11,11"
                            },
                            compId: 17
                        }, {
                            type: "Image",
                            props: {
                                y: 31,
                                x: 7,
                                var: "imgIcon",
                                skin: "sub1/role/001.png",
                                scaleY: .8,
                                scaleX: .8
                            },
                            compId: 4
                        }, {
                            type: "Label",
                            props: {
                                y: 6,
                                x: 9,
                                width: 124,
                                var: "txtName",
                                valign: "middle",
                                text: "txtName",
                                height: 25,
                                fontSize: 20,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "left"
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 6,
                                x: 133,
                                var: "imgGrade",
                                skin: "sub1/ui/warehouse/img_pingji_1.png"
                            },
                            compId: 6
                        }, {
                            type: "Box",
                            props: {
                                y: 94,
                                x: 0,
                                width: 176,
                                var: "boxUsing",
                                height: 44
                            },
                            compId: 11,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 175,
                                    skin: "sub1/ui/scale9/img_28.png",
                                    height: 43,
                                    alpha: .7,
                                    sizeGrid: "2,3,2,2"
                                },
                                compId: 9
                            }, {
                                type: "Label",
                                props: {
                                    y: 3,
                                    x: 12,
                                    width: 151,
                                    valign: "middle",
                                    text: "使用中",
                                    height: 40,
                                    fontSize: 28,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    align: "center"
                                },
                                compId: 10
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 167,
                                x: 5,
                                width: 166,
                                var: "imgPrice",
                                skin: "sub1/ui/scale9/img_55.png",
                                sizeGrid: "15,10,12,12",
                                height: 31
                            },
                            compId: 14,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 4,
                                    x: 30,
                                    skin: "sub1/ui/common/img_3.png",
                                    scaleY: .55,
                                    scaleX: .55
                                },
                                compId: 15
                            }, {
                                type: "Label",
                                props: {
                                    y: 7,
                                    x: 56,
                                    width: 124,
                                    var: "txtPrice",
                                    valign: "middle",
                                    text: "100",
                                    stroke: 2,
                                    height: 19,
                                    fontSize: 22,
                                    color: "#ffffff",
                                    align: "left"
                                },
                                compId: 16
                            } ]
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_45.png", "sub1/ui/scale9/img_role_1.png", "sub1/ui/scale9/img_role_common_1.png", "sub1/role/001.png", "sub1/ui/warehouse/img_pingji_1.png", "sub1/ui/scale9/img_28.png", "sub1/ui/scale9/img_55.png", "sub1/ui/common/img_3.png" ],
                    loadList3D: []
                }, e.RoleItemUI = t, N("ui.view.role.RoleItemUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "loading/img_11.jpg",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            x: 29,
                            width: 438,
                            var: "boxLeft",
                            height: 650,
                            centerY: 29
                        },
                        compId: 4,
                        child: [ {
                            type: "Image",
                            props: {
                                top: 0,
                                skin: "sub1/ui/scale9/img_28.png",
                                right: 0,
                                left: 0,
                                bottom: 0,
                                alpha: .3,
                                sizeGrid: "2,3,2,2"
                            },
                            compId: 5
                        }, {
                            type: "List",
                            props: {
                                y: 34,
                                x: 17,
                                width: 408,
                                var: "list",
                                height: 586
                            },
                            compId: 6
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            y: 44,
                            x: 209,
                            width: 190,
                            height: 71,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 9,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 38,
                                x: 54,
                                width: 108,
                                var: "btnBack",
                                height: 76,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 11,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 15.5,
                                    x: 12,
                                    skin: "sub1/ui/equip/img_5.png"
                                },
                                compId: 12
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 13
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 18,
                                x: 108,
                                skin: "sub1/ui/common/img_12.png"
                            },
                            compId: 24
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            width: 271,
                            right: 56,
                            height: 111,
                            centerY: 0
                        },
                        compId: 20,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 55.5,
                                x: 135.5,
                                width: 259,
                                var: "btnBuy",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                height: 108,
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 14,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 15
                            }, {
                                type: "Label",
                                props: {
                                    y: 54,
                                    x: 98,
                                    width: 161,
                                    var: "txtPrice",
                                    valign: "middle",
                                    text: "label",
                                    height: 44,
                                    fontSize: 30,
                                    color: "#ffffff",
                                    align: "left"
                                },
                                compId: 18
                            }, {
                                type: "Image",
                                props: {
                                    y: 54,
                                    x: 44,
                                    skin: "sub1/ui/common/img_3.png"
                                },
                                compId: 19
                            }, {
                                type: "Image",
                                props: {
                                    y: 19,
                                    x: 98,
                                    skin: "sub1/ui/common/img_11.png"
                                },
                                compId: 23
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 22,
                                x: 10,
                                width: 251,
                                var: "txtUsing",
                                valign: "middle",
                                text: "已选择",
                                height: 67,
                                fontSize: 42,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 21
                        } ]
                    }, {
                        type: "Image",
                        props: {
                            width: 512,
                            var: "img3DCenter",
                            height: 557,
                            centerY: 0,
                            centerX: 56
                        },
                        compId: 22
                    }, {
                        type: "Label",
                        props: {
                            y: 0,
                            visible: !1,
                            var: "label4399",
                            text: "4399",
                            right: 50,
                            italic: !0,
                            fontSize: 60,
                            color: "#ffffff",
                            bottom: 52,
                            bold: !0,
                            alpha: .5
                        },
                        compId: 25
                    } ],
                    loadList: [ "loading/img_11.jpg", "sub1/ui/scale9/img_28.png", "sub1/ui/equip/img_5.png", "sub1/ui/common/img_12.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_3.png", "sub1/ui/common/img_11.png" ],
                    loadList3D: []
                }, e.RoleViewUI = i, N("ui.view.role.RoleViewUI", i);
            }(e.role || (e.role = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 464,
                        height: 153
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            x: 0,
                            width: 464,
                            height: 153
                        },
                        compId: 27,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                var: "imgContent",
                                top: 0,
                                skin: "sub1/ui/scale9/img_31.png",
                                right: 0,
                                left: 0,
                                bottom: 0,
                                sizeGrid: "30,185,7,12"
                            },
                            compId: 6,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 108,
                                    x: 231,
                                    width: 66,
                                    var: "txtLv",
                                    valign: "middle",
                                    text: "0",
                                    height: 62,
                                    fontSize: 24,
                                    color: "#162443",
                                    align: "center"
                                },
                                compId: 7,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 8.5,
                                        x: 15.5,
                                        width: 35,
                                        skin: "sub1/ui/equip/img_16.png",
                                        height: 31,
                                        sizeGrid: "8,8,10,8"
                                    },
                                    compId: 28
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 1,
                                    x: 10,
                                    width: 190,
                                    var: "txtName",
                                    valign: "middle",
                                    text: "label",
                                    height: 27,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !1,
                                    align: "left"
                                },
                                compId: 10
                            }, {
                                type: "Image",
                                props: {
                                    y: 113,
                                    x: 374,
                                    width: 160,
                                    var: "btnBuy",
                                    skin: "sub1/ui/scale9/img_normal_1.png",
                                    height: 55,
                                    anchorY: .5,
                                    anchorX: .5,
                                    sizeGrid: "24,92,27,91"
                                },
                                compId: 14,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "effect/ButtonEffect.ts"
                                    },
                                    compId: 15
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 160,
                                        var: "boxCanBuy",
                                        height: 56
                                    },
                                    compId: 18,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -54,
                                            x: 26,
                                            var: "imgBuyType",
                                            skin: "sub1/ui/common/img_3.png"
                                        },
                                        compId: 16
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: -54,
                                            x: 66,
                                            width: 185,
                                            var: "txtPrice",
                                            valign: "middle",
                                            text: "100",
                                            stroke: 0,
                                            height: 40,
                                            fontSize: 28,
                                            font: "SimHei",
                                            color: "#FFFFFF",
                                            bold: !1,
                                            align: "left"
                                        },
                                        compId: 17
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 13.5,
                                            x: 52.5,
                                            skin: "sub1/ui/equip/img_15.png"
                                        },
                                        compId: 30
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 161,
                                        var: "boxTry",
                                        height: 55
                                    },
                                    compId: 31,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 10.5,
                                            x: 18.5,
                                            width: 124,
                                            valign: "middle",
                                            text: "试用枪支",
                                            height: 36,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#000000",
                                            bold: !0,
                                            align: "center"
                                        },
                                        compId: 32
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 27,
                                    x: 279,
                                    width: 191,
                                    var: "boxLock",
                                    height: 49
                                },
                                compId: 22,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        width: 190,
                                        var: "txtUnlockLv",
                                        valign: "middle",
                                        text: "合成需要32级",
                                        height: 62,
                                        fontSize: 26,
                                        font: "SimHei",
                                        color: "#FF542C",
                                        centerY: 5,
                                        centerX: 0,
                                        bold: !0,
                                        align: "center"
                                    },
                                    compId: 24
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 73,
                                        x: 68,
                                        skin: "sub1/ui/equip/img_15.png"
                                    },
                                    compId: 29
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 42,
                                    x: 200,
                                    width: 348,
                                    var: "txtLock",
                                    valign: "middle",
                                    text: "label",
                                    height: 66,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center"
                                },
                                compId: 25
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 31,
                                x: 14,
                                var: "imgIcon",
                                skin: "sub1/equip/arm/1.png"
                            },
                            compId: 9
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_31.png", "sub1/ui/equip/img_16.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_3.png", "sub1/ui/equip/img_15.png", "sub1/equip/arm/1.png" ],
                    loadList3D: []
                }, e.ShopItemUI = t, N("ui.view.shop.ShopItemUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "sub1/ui/scale9/img_28.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .7,
                            sizeGrid: "2,3,2,2"
                        },
                        compId: 16
                    }, {
                        type: "Box",
                        props: {
                            width: 1027,
                            height: 636,
                            centerY: 0,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 17,
                        child: [ {
                            type: "Image",
                            props: {
                                top: 0,
                                skin: "sub1/ui/scale9/img_61.png",
                                right: 0,
                                left: 0,
                                bottom: 0,
                                sizeGrid: "67,10,10,10"
                            },
                            compId: 18
                        }, {
                            type: "Label",
                            props: {
                                y: 15,
                                x: 445,
                                text: "武器商店",
                                fontSize: 34,
                                font: "SimHei",
                                color: "#FFFFFF"
                            },
                            compId: 25
                        }, {
                            type: "Box",
                            props: {
                                y: 32,
                                x: 991.5,
                                width: 71,
                                var: "btnClose",
                                height: 59,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 21,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 13,
                                    x: 18.5,
                                    skin: "sub1/ui/common/img_7.png"
                                },
                                compId: 20
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 22
                            } ]
                        }, {
                            type: "List",
                            props: {
                                y: 82,
                                x: 36,
                                width: 954,
                                var: "list",
                                spaceY: 17,
                                spaceX: 24,
                                repeatX: 2,
                                height: 532,
                                elasticEnabled: !0
                            },
                            compId: 23
                        } ]
                    } ],
                    loadList: [ "sub1/ui/scale9/img_28.png", "sub1/ui/scale9/img_61.png", "sub1/ui/common/img_7.png" ],
                    loadList3D: []
                }, e.ShopViewUI = i, N("ui.view.shop.ShopViewUI", i);
            }(e.shop || (e.shop = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/sign/SignCellView");
                    }
                }
                e.SignCellViewUI = t, N("ui.view.sign.SignCellViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            width: 1282,
                            height: 682,
                            centerY: -14,
                            centerX: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 123.5,
                                x: 157,
                                skin: "sub1/ui/sign/img_24.png",
                                sizeGrid: "83,201,41,245"
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 75.5,
                                x: 461,
                                skin: "sub1/ui/sign/img_25.png"
                            },
                            compId: 32
                        }, {
                            type: "Image",
                            props: {
                                y: 47.5,
                                x: 158,
                                skin: "sub1/ui/sign/img_10.png"
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 78,
                                x: 492.5,
                                skin: "sub1/ui/sign/img_26.png"
                            },
                            compId: 35
                        }, {
                            type: "HBox",
                            props: {
                                y: 164.5,
                                x: 400,
                                var: "boxOne",
                                space: 11
                            },
                            compId: 8
                        }, {
                            type: "HBox",
                            props: {
                                y: 359.5,
                                x: 400,
                                var: "boxTwo",
                                space: 11
                            },
                            compId: 12
                        }, {
                            type: "Box",
                            props: {
                                y: 157,
                                x: 167,
                                width: 233,
                                sizeGrid: "0,52,0,53",
                                height: 382
                            },
                            compId: 17,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -102,
                                    x: -15,
                                    width: 525,
                                    var: "imgGunSeven",
                                    skin: "sub1/ui/sign/img_1.png",
                                    rotation: 55,
                                    height: 124
                                },
                                compId: 21
                            }, {
                                type: "Image",
                                props: {
                                    y: 7,
                                    x: 47,
                                    var: "imgGunTwo",
                                    skin: "sub1/ui/sign/img_2.png",
                                    rotation: 47
                                },
                                compId: 22
                            }, {
                                type: "Image",
                                props: {
                                    y: 4.5,
                                    x: 29,
                                    skin: "sub1/ui/sign/img_14.png"
                                },
                                compId: 18
                            }, {
                                type: "Image",
                                props: {
                                    y: -7,
                                    x: 113,
                                    var: "imgTwo",
                                    skin: "sub1/ui/sign/img_8.png"
                                },
                                compId: 19
                            }, {
                                type: "Image",
                                props: {
                                    y: -8,
                                    x: 116.5,
                                    var: "imgSeven",
                                    skin: "sub1/ui/sign/img_9.png"
                                },
                                compId: 20
                            }, {
                                type: "Image",
                                props: {
                                    y: 338,
                                    x: -25,
                                    skin: "sub1/ui/sign/img_20.png"
                                },
                                compId: 33,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 8,
                                        x: 30,
                                        var: "labelName",
                                        text: "AWM-123",
                                        fontSize: 25,
                                        color: "#ffffff"
                                    },
                                    compId: 34
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 105.5,
                                x: 1101.5,
                                width: 71,
                                var: "btnBack",
                                height: 59,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 28,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 13,
                                    x: 18,
                                    skin: "sub1/ui/common/img_7.png"
                                },
                                compId: 29
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 30
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 241,
                                x: 462,
                                width: 100,
                                var: "boxGuide",
                                height: 100
                            },
                            compId: 31
                        }, {
                            type: "Image",
                            props: {
                                y: 508,
                                x: 135,
                                skin: "sub1/ui/sign/img_22.png"
                            },
                            compId: 59
                        }, {
                            type: "Image",
                            props: {
                                y: 132,
                                x: 10,
                                skin: "sub1/ui/sign/img_21.png",
                                scaleY: 1.25,
                                scaleX: 1.25
                            },
                            compId: 58
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 22,
                            keyframes: {
                                y: [ {
                                    value: 7.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 22,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 22,
                                    key: "y",
                                    index: 75
                                }, {
                                    value: 7.5,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 22,
                                    label: null,
                                    key: "y",
                                    index: 150
                                } ]
                            }
                        }, {
                            target: 21,
                            keyframes: {
                                y: [ {
                                    value: -102,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 21,
                                    key: "y",
                                    index: 0
                                }, {
                                    value: -115,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 21,
                                    key: "y",
                                    index: 75
                                }, {
                                    value: -102,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 21,
                                    label: null,
                                    key: "y",
                                    index: 150
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    } ],
                    loadList: [ "sub1/ui/sign/img_24.png", "sub1/ui/sign/img_25.png", "sub1/ui/sign/img_10.png", "sub1/ui/sign/img_26.png", "sub1/ui/sign/img_1.png", "sub1/ui/sign/img_2.png", "sub1/ui/sign/img_14.png", "sub1/ui/sign/img_8.png", "sub1/ui/sign/img_9.png", "sub1/ui/sign/img_20.png", "sub1/ui/common/img_7.png", "sub1/ui/sign/img_22.png", "sub1/ui/sign/img_21.png" ],
                    loadList3D: []
                }, e.SignViewUI = i, N("ui.view.sign.SignViewUI", i);
            }(e.sign || (e.sign = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/standing/StandingHistoryCell");
                    }
                }
                e.StandingHistoryCellUI = t, N("ui.view.standing.StandingHistoryCellUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/standing/StandingHistoryView");
                    }
                }
                e.StandingHistoryViewUI = i, N("ui.view.standing.StandingHistoryViewUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/standing/StandingInfoView");
                    }
                }
                e.StandingInfoViewUI = a, N("ui.view.standing.StandingInfoViewUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/standing/StandingMainView");
                    }
                }
                e.StandingMainViewUI = s, N("ui.view.standing.StandingMainViewUI", s);
            }(e.standing || (e.standing = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/summer/SummerGiftView");
                    }
                }
                e.SummerGiftViewUI = t, N("ui.view.summer.SummerGiftViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/summer/SummerGunView");
                    }
                }
                e.SummerGunViewUI = i, N("ui.view.summer.SummerGunViewUI", i);
            }(e.summer || (e.summer = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        y: 0,
                        x: 0,
                        width: 1625,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Box",
                        props: {
                            y: 0,
                            width: 1535,
                            var: "boxBg",
                            scaleY: 1,
                            pivotX: 768,
                            height: 750,
                            centerX: 0
                        },
                        compId: 73,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 770,
                                width: 811,
                                skin: "sub1/ui/end/img_27.jpg",
                                skewY: 180,
                                pivotX: 811,
                                height: 750
                            },
                            compId: 74
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: -41,
                                skin: "sub1/ui/end/img_27.jpg",
                                scaleX: 1
                            },
                            compId: 75
                        }, {
                            type: "Image",
                            props: {
                                y: 87,
                                x: -72,
                                width: 50,
                                skin: "sub1/ui/getReward/img_x_2.png",
                                sizeGrid: "374,0,36,0",
                                rotation: -44,
                                height: 497
                            },
                            compId: 76
                        }, {
                            type: "Image",
                            props: {
                                y: 113,
                                x: 1601,
                                width: 50,
                                skin: "sub1/ui/getReward/img_x_2.png",
                                skewY: 180,
                                sizeGrid: "374,0,36,0",
                                rotation: -315,
                                height: 497
                            },
                            compId: 77
                        }, {
                            type: "Box",
                            props: {
                                x: -44,
                                scaleY: 1,
                                bottom: -3
                            },
                            compId: 80,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 811,
                                    width: 812,
                                    skin: "sub1/ui/scale9/img_superR_1.png",
                                    height: 181
                                },
                                compId: 78
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 815,
                                    width: 812,
                                    skin: "sub1/ui/scale9/img_superR_1.png",
                                    skewY: 180,
                                    height: 181
                                },
                                compId: 79
                            } ]
                        } ]
                    }, {
                        type: "Box",
                        props: {
                            width: 1334,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 3,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 37,
                                skin: "sub1/ui/superReward/img_6.png",
                                centerX: 0
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 50,
                                x: 544.5,
                                width: 255,
                                var: "imgLowerArm",
                                skin: "sub1/equip/arm/14.png",
                                scaleY: 1.5,
                                scaleX: -1.5,
                                rotation: 330,
                                height: 112
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 57,
                                x: 457,
                                width: 106,
                                skin: "sub1/ui/superReward/img_10.png",
                                height: 21
                            },
                            compId: 81
                        }, {
                            type: "Image",
                            props: {
                                y: 194,
                                x: 629.5,
                                skin: "sub1/ui/superReward/img_1.png"
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 194,
                                x: 650.5,
                                skin: "sub1/ui/superReward/img_2.png"
                            },
                            compId: 8
                        }, {
                            type: "Image",
                            props: {
                                y: 194,
                                x: 672,
                                skin: "sub1/ui/superReward/img_3.png"
                            },
                            compId: 9
                        }, {
                            type: "Box",
                            props: {
                                y: 299,
                                centerX: -266
                            },
                            compId: 87,
                            child: [ {
                                type: "Label",
                                props: {
                                    x: 56,
                                    var: "txtLowerName",
                                    valign: "middle",
                                    text: "label",
                                    height: 40,
                                    fontSize: 24,
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "left"
                                },
                                compId: 22
                            }, {
                                type: "Image",
                                props: {
                                    y: 2,
                                    width: 44,
                                    skin: "sub1/ui/scale9/img_getReward_4.png",
                                    height: 37
                                },
                                compId: 83,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 9,
                                        x: 8,
                                        width: 28,
                                        var: "txtLowerLv",
                                        valign: "middle",
                                        text: "2",
                                        height: 24,
                                        fontSize: 24,
                                        font: "fnt2",
                                        color: "#ffffff",
                                        bold: !0,
                                        align: "center"
                                    },
                                    compId: 21
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 37,
                                x: 766,
                                width: 335,
                                var: "boxSingle",
                                height: 391
                            },
                            compId: 10,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 190,
                                    x: 159,
                                    width: 260,
                                    skin: "sub1/ui/superReward/img_8.png",
                                    pivotY: 132,
                                    pivotX: 125,
                                    height: 244,
                                    blendMode: "lighter"
                                },
                                compId: 108
                            }, {
                                type: "Image",
                                props: {
                                    y: 173,
                                    x: 160,
                                    width: 258,
                                    skin: "sub1/ui/superReward/img_9.png",
                                    pivotY: 127,
                                    pivotX: 129,
                                    height: 254
                                },
                                compId: 109,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        rotateSpeed: -1,
                                        runtime: "effect/TurnEffect.ts"
                                    },
                                    compId: 111
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 173,
                                    x: 160,
                                    width: 258,
                                    skin: "sub1/ui/superReward/img_7.png",
                                    scaleY: .8,
                                    scaleX: .8,
                                    height: 254,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 110,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        rotateSpeed: 1,
                                        runtime: "effect/TurnEffect.ts"
                                    },
                                    compId: 112
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: -28,
                                    x: 278,
                                    width: 255,
                                    var: "imgSingleArm",
                                    skin: "sub1/equip/arm/14.png",
                                    scaleY: 1.5,
                                    scaleX: -1.5,
                                    rotation: 324,
                                    height: 112
                                },
                                compId: 11
                            }, {
                                type: "Box",
                                props: {
                                    y: 262,
                                    centerX: -18
                                },
                                compId: 88,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        x: 58,
                                        var: "txtSingleName",
                                        valign: "middle",
                                        text: "label",
                                        height: 40,
                                        fontSize: 24,
                                        color: "#ffffff",
                                        bold: !0,
                                        align: "left"
                                    },
                                    compId: 84
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 4,
                                        width: 44,
                                        skin: "sub1/ui/scale9/img_getReward_4.png",
                                        height: 37
                                    },
                                    compId: 85,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 10,
                                            x: 8,
                                            width: 28,
                                            var: "txtSingleLv",
                                            valign: "middle",
                                            text: "2",
                                            height: 24,
                                            fontSize: 24,
                                            font: "fnt2",
                                            color: "#ffffff",
                                            bold: !0,
                                            align: "center"
                                        },
                                        compId: 86
                                    } ]
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 774,
                                width: 384,
                                var: "boxDouble",
                                height: 646
                            },
                            compId: 14,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 115,
                                    x: 162.5,
                                    width: 260,
                                    skin: "sub1/ui/superReward/img_8.png",
                                    pivotY: 132,
                                    pivotX: 125,
                                    height: 244,
                                    blendMode: "lighter"
                                },
                                compId: 102
                            }, {
                                type: "Image",
                                props: {
                                    y: 358,
                                    x: 162.5,
                                    width: 260,
                                    skin: "sub1/ui/superReward/img_8.png",
                                    pivotY: 132,
                                    pivotX: 125,
                                    height: 244,
                                    blendMode: "lighter"
                                },
                                compId: 103
                            }, {
                                type: "Image",
                                props: {
                                    y: 115,
                                    x: 164.5,
                                    width: 258,
                                    skin: "sub1/ui/superReward/img_9.png",
                                    pivotY: 127,
                                    pivotX: 129,
                                    height: 254
                                },
                                compId: 33,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        rotateSpeed: -1,
                                        runtime: "effect/TurnEffect.ts"
                                    },
                                    compId: 34
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 358,
                                    x: 164.5,
                                    width: 258,
                                    skin: "sub1/ui/superReward/img_9.png",
                                    pivotY: 127,
                                    pivotX: 129,
                                    height: 254
                                },
                                compId: 35,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        rotateSpeed: -1,
                                        runtime: "effect/TurnEffect.ts"
                                    },
                                    compId: 36
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 115,
                                    x: 164,
                                    width: 258,
                                    skin: "sub1/ui/superReward/img_7.png",
                                    scaleY: .8,
                                    scaleX: .8,
                                    height: 254,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 104,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        rotateSpeed: 1,
                                        runtime: "effect/TurnEffect.ts"
                                    },
                                    compId: 106
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 358,
                                    x: 164,
                                    width: 258,
                                    skin: "sub1/ui/superReward/img_7.png",
                                    scaleY: .8,
                                    scaleX: .8,
                                    height: 254,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 105,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        rotateSpeed: 1,
                                        runtime: "effect/TurnEffect.ts"
                                    },
                                    compId: 107
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: -28,
                                    x: 278,
                                    width: 255,
                                    var: "imgDoubleArm1",
                                    skin: "sub1/equip/arm/14.png",
                                    scaleY: 1.2,
                                    scaleX: -1.2,
                                    rotation: 324,
                                    height: 112
                                },
                                compId: 15
                            }, {
                                type: "Image",
                                props: {
                                    y: 211,
                                    x: 278,
                                    width: 255,
                                    var: "imgDoubleArm2",
                                    skin: "sub1/equip/arm/14.png",
                                    scaleY: 1.2,
                                    scaleX: -1.2,
                                    rotation: 324,
                                    height: 112
                                },
                                compId: 18
                            }, {
                                type: "Box",
                                props: {
                                    y: 226,
                                    centerX: -16
                                },
                                compId: 93,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        x: 58,
                                        var: "txtDoubleName1",
                                        valign: "middle",
                                        text: "label",
                                        height: 40,
                                        fontSize: 24,
                                        color: "#ffffff",
                                        bold: !0,
                                        align: "left"
                                    },
                                    compId: 94
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 4,
                                        width: 44,
                                        skin: "sub1/ui/scale9/img_getReward_4.png",
                                        height: 37
                                    },
                                    compId: 95,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 10,
                                            x: 8,
                                            width: 28,
                                            var: "txtDoubleLv1",
                                            valign: "middle",
                                            text: "2",
                                            height: 24,
                                            fontSize: 24,
                                            font: "fnt2",
                                            color: "#ffffff",
                                            bold: !0,
                                            align: "center"
                                        },
                                        compId: 96
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 451,
                                    centerX: -16
                                },
                                compId: 97,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        x: 58,
                                        var: "txtDoubleName2",
                                        valign: "middle",
                                        text: "label",
                                        height: 40,
                                        fontSize: 24,
                                        color: "#ffffff",
                                        bold: !0,
                                        align: "left"
                                    },
                                    compId: 98
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 4,
                                        width: 44,
                                        skin: "sub1/ui/scale9/img_getReward_4.png",
                                        height: 37
                                    },
                                    compId: 99,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 10,
                                            x: 8,
                                            width: 28,
                                            var: "txtDoubleLv2",
                                            valign: "middle",
                                            text: "2",
                                            height: 24,
                                            fontSize: 24,
                                            font: "fnt2",
                                            color: "#ffffff",
                                            bold: !0,
                                            align: "center"
                                        },
                                        compId: 100
                                    } ]
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 57,
                                x: 774,
                                width: 106,
                                skin: "sub1/ui/superReward/img_10.png",
                                height: 21
                            },
                            compId: 82
                        }, {
                            type: "Label",
                            props: {
                                y: 319,
                                x: 470,
                                width: 392,
                                var: "txtContent",
                                valign: "middle",
                                text: "可立即获得2把17级武器",
                                height: 71,
                                fontSize: 22,
                                font: "SimHei",
                                color: "#FFFFFF",
                                align: "center"
                            },
                            compId: 23
                        }, {
                            type: "Image",
                            props: {
                                y: 413,
                                x: 668,
                                var: "btnLevelUp",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 24,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 20,
                                    x: 74,
                                    var: "imgLevelReward",
                                    skin: "sub1/ui/superReward/img_4.png"
                                },
                                compId: 25
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    x: 29,
                                    skin: "sub1/ui/common/img_10.png"
                                },
                                compId: 26
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 27
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 481,
                                x: 668,
                                width: 242,
                                var: "btnBack",
                                valign: "middle",
                                underline: !0,
                                text: "不了，谢谢",
                                height: 59,
                                fontSize: 30,
                                font: "SimHei",
                                color: "#ffffff",
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 28,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 29
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 120,
                                x: 169,
                                width: 986,
                                var: "box3d",
                                height: 402
                            },
                            compId: 31,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -98,
                                    x: 43.5,
                                    width: 899,
                                    var: "img3DCenter",
                                    height: 667
                                },
                                compId: 32
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 454,
                                x: 666,
                                visible: !1,
                                var: "btnNo",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 113,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 116
                            }, {
                                type: "Label",
                                props: {
                                    y: 21,
                                    x: 44,
                                    text: "不了谢谢",
                                    fontSize: 27,
                                    color: "#ffffff"
                                },
                                compId: 117
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 9,
                            keyframes: {
                                skin: [ {
                                    value: "sub1/ui/superReward/img_3.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 9,
                                    key: "skin",
                                    index: 0
                                }, {
                                    value: "sub1/ui/superReward/img_2.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 9,
                                    key: "skin",
                                    index: 10
                                }, {
                                    value: "sub1/ui/superReward/img_1.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 9,
                                    key: "skin",
                                    index: 20
                                }, {
                                    value: "sub1/ui/superReward/img_3.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 9,
                                    label: null,
                                    key: "skin",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 8,
                            keyframes: {
                                skin: [ {
                                    value: "sub1/ui/superReward/img_2.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 8,
                                    key: "skin",
                                    index: 0
                                }, {
                                    value: "sub1/ui/superReward/img_1.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 8,
                                    key: "skin",
                                    index: 10
                                }, {
                                    value: "sub1/ui/superReward/img_3.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 8,
                                    key: "skin",
                                    index: 20
                                }, {
                                    value: "sub1/ui/superReward/img_2.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 8,
                                    key: "skin",
                                    index: 30
                                } ]
                            }
                        }, {
                            target: 7,
                            keyframes: {
                                skin: [ {
                                    value: "sub1/ui/superReward/img_1.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 7,
                                    key: "skin",
                                    index: 0
                                }, {
                                    value: "sub1/ui/superReward/img_3.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 7,
                                    key: "skin",
                                    index: 10
                                }, {
                                    value: "sub1/ui/superReward/img_2.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 7,
                                    key: "skin",
                                    index: 20
                                }, {
                                    value: "sub1/ui/superReward/img_1.png",
                                    tweenMethod: "linearNone",
                                    tween: !1,
                                    target: 7,
                                    key: "skin",
                                    index: 30
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 2
                    } ],
                    loadList: [ "sub1/ui/end/img_27.jpg", "sub1/ui/getReward/img_x_2.png", "sub1/ui/scale9/img_superR_1.png", "sub1/ui/superReward/img_6.png", "sub1/equip/arm/14.png", "sub1/ui/superReward/img_10.png", "sub1/ui/superReward/img_1.png", "sub1/ui/superReward/img_2.png", "sub1/ui/superReward/img_3.png", "sub1/ui/scale9/img_getReward_4.png", "sub1/ui/superReward/img_8.png", "sub1/ui/superReward/img_9.png", "sub1/ui/superReward/img_7.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/superReward/img_4.png", "sub1/ui/common/img_10.png", "sub1/ui/scale9/img_normal_2.png" ],
                    loadList3D: []
                }, e.SuperRewardViewUI = t, N("ui.view.superReward.SuperRewardViewUI", t);
            }(e.superReward || (e.superReward = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 179,
                            x: 434,
                            skin: "sub1/ui/superStart/img_8.png",
                            scaleY: 1.25,
                            scaleX: 1.25
                        },
                        compId: 3
                    } ],
                    loadList: [ "sub1/ui/superStart/img_8.png" ],
                    loadList3D: []
                }, e.SuperStartItemUI = t, N("ui.view.superStart.SuperStartItemUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "sub1/ui/scale9/img_27.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            alpha: .5
                        },
                        compId: 3
                    }, {
                        type: "Box",
                        props: {
                            width: 1334,
                            var: "boxAll",
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 27,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 326,
                                x: 930,
                                width: 226,
                                scaleY: 1,
                                scaleX: 1,
                                height: 286,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 1
                            },
                            compId: 16,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    skin: "sub1/ui/superStart/img_8.png",
                                    scaleY: 1,
                                    scaleX: 1
                                },
                                compId: 4
                            }, {
                                type: "Image",
                                props: {
                                    y: 36,
                                    x: 23.5,
                                    skin: "sub1/ui/superStart/img_3.png"
                                },
                                compId: 5
                            }, {
                                type: "Label",
                                props: {
                                    y: 246,
                                    x: 44,
                                    width: 142,
                                    text: "护甲",
                                    height: 29,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0
                                },
                                compId: 6
                            }, {
                                type: "Label",
                                props: {
                                    y: 245,
                                    x: 112,
                                    width: 142,
                                    text: "+10%",
                                    height: 29,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#24EDFF",
                                    bold: !0
                                },
                                compId: 7
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 328,
                                x: 654,
                                width: 221,
                                scaleY: 1,
                                scaleX: 1,
                                height: 291,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 17,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    skin: "sub1/ui/superStart/img_8.png",
                                    scaleY: 1,
                                    scaleX: 1
                                },
                                compId: 18
                            }, {
                                type: "Image",
                                props: {
                                    y: 36,
                                    x: 23.5,
                                    var: "imgHead",
                                    skin: "sub1/ui/superStart/img_4.png"
                                },
                                compId: 19
                            }, {
                                type: "Label",
                                props: {
                                    y: 244,
                                    x: 33,
                                    width: 142,
                                    var: "labelHead",
                                    text: "爆头率",
                                    height: 29,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0
                                },
                                compId: 20
                            }, {
                                type: "Label",
                                props: {
                                    y: 244,
                                    x: 122,
                                    width: 142,
                                    text: "+10%",
                                    height: 29,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#FFEC15",
                                    bold: !0
                                },
                                compId: 21
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 326,
                                x: 387.5,
                                width: 224,
                                scaleY: 1,
                                scaleX: 1,
                                height: 290,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 22,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    skin: "sub1/ui/superStart/img_8.png",
                                    scaleY: 1,
                                    scaleX: 1
                                },
                                compId: 23
                            }, {
                                type: "Image",
                                props: {
                                    y: 35,
                                    x: 23.5,
                                    skin: "sub1/ui/superStart/img_2.png"
                                },
                                compId: 24
                            }, {
                                type: "Label",
                                props: {
                                    y: 243.5,
                                    x: 46,
                                    width: 142,
                                    text: "生命",
                                    height: 29,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#FFFFFF",
                                    bold: !0
                                },
                                compId: 25
                            }, {
                                type: "Label",
                                props: {
                                    y: 243.5,
                                    x: 112,
                                    width: 142,
                                    text: "+30%",
                                    height: 29,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#24EA10",
                                    bold: !0
                                },
                                compId: 26
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 79,
                                x: 530,
                                skin: "sub1/ui/superStart/img_7.png"
                            },
                            compId: 28
                        }, {
                            type: "Image",
                            props: {
                                y: 578,
                                x: 497.5,
                                width: 221,
                                var: "btnSuperStart",
                                skin: "sub1/ui/scale9/img_normal_1.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "24,92,27,91"
                            },
                            compId: 29,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 19.5,
                                    x: 31,
                                    skin: "sub1/ui/common/img_10.png"
                                },
                                compId: 31
                            }, {
                                type: "Script",
                                props: {
                                    runtime: "effect/ButtonEffect.ts"
                                },
                                compId: 32
                            }, {
                                type: "Image",
                                props: {
                                    y: 19,
                                    x: 72,
                                    skin: "sub1/ui/superStart/img_1.png"
                                },
                                compId: 33
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 578,
                                x: 796,
                                width: 223,
                                var: "btnChooseStart",
                                skin: "sub1/ui/scale9/img_normal_2.png",
                                anchorY: .5,
                                anchorX: .5,
                                sizeGrid: "21,80,30,79"
                            },
                            compId: 30,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 8,
                                    x: 15,
                                    width: 196,
                                    var: "boxNoAd",
                                    height: 52
                                },
                                compId: 34,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 13.5,
                                        x: 36.5,
                                        skin: "sub1/ui/superStart/img_6.png"
                                    },
                                    compId: 35
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 8,
                                    x: 15,
                                    width: 197,
                                    var: "boxAd",
                                    height: 46
                                },
                                compId: 36,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 12,
                                        x: 36,
                                        skin: "sub1/ui/superStart/img_5.png"
                                    },
                                    compId: 37
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 662,
                                x: 424,
                                width: 433,
                                var: "boxSuperStart",
                                height: 34
                            },
                            compId: 39,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 4,
                                    x: 97,
                                    width: 309,
                                    var: "txtBox",
                                    text: "观看视频使用超凡开局快速开始！",
                                    height: 25,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#FFFFFF"
                                },
                                compId: 40
                            }, {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 57,
                                    skin: "sub1/ui/common/img_common_3.png"
                                },
                                compId: 41
                            }, {
                                type: "Box",
                                props: {
                                    y: -2.5,
                                    x: 52.5,
                                    width: 38,
                                    var: "btnGet",
                                    height: 34
                                },
                                compId: 42,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 3,
                                        x: 4,
                                        skin: "sub1/ui/common/img_common_4.png"
                                    },
                                    compId: 43
                                } ]
                            } ]
                        } ]
                    } ],
                    animations: [ {
                        nodes: [ {
                            target: 16,
                            keyframes: {
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 16,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 16,
                                    key: "scaleY",
                                    index: 24
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 16,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 16,
                                    key: "scaleX",
                                    index: 24
                                } ]
                            }
                        }, {
                            target: 17,
                            keyframes: {
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "scaleY",
                                    index: 17
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 17,
                                    key: "scaleX",
                                    index: 17
                                } ]
                            }
                        }, {
                            target: 22,
                            keyframes: {
                                scaleY: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 22,
                                    key: "scaleY",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 22,
                                    key: "scaleY",
                                    index: 10
                                } ],
                                scaleX: [ {
                                    value: 0,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 22,
                                    key: "scaleX",
                                    index: 0
                                }, {
                                    value: 1,
                                    tweenMethod: "linearNone",
                                    tween: !0,
                                    target: 22,
                                    key: "scaleX",
                                    index: 10
                                } ]
                            }
                        } ],
                        name: "ani1",
                        id: 1,
                        frameRate: 60,
                        action: 0
                    } ],
                    loadList: [ "sub1/ui/scale9/img_27.png", "sub1/ui/superStart/img_8.png", "sub1/ui/superStart/img_3.png", "sub1/ui/superStart/img_4.png", "sub1/ui/superStart/img_2.png", "sub1/ui/superStart/img_7.png", "sub1/ui/scale9/img_normal_1.png", "sub1/ui/common/img_10.png", "sub1/ui/superStart/img_1.png", "sub1/ui/scale9/img_normal_2.png", "sub1/ui/superStart/img_6.png", "sub1/ui/superStart/img_5.png", "sub1/ui/common/img_common_3.png", "sub1/ui/common/img_common_4.png" ],
                    loadList3D: []
                }, e.SuperStartViewUI = i, N("ui.view.superStart.SuperStartViewUI", i);
            }(e.superStart || (e.superStart = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/task/TaskCellView");
                    }
                }
                e.TaskCellViewUI = t, N("ui.view.task.TaskCellViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/task/TaskView");
                    }
                }
                e.TaskViewUI = i, N("ui.view.task.TaskViewUI", i);
            }(e.task || (e.task = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 1334,
                        height: 750
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "sub1/ui/scale9/img_1.png",
                            right: 0,
                            left: 0,
                            bottom: 0,
                            sizeGrid: "7,10,8,11"
                        },
                        compId: 3
                    }, {
                        type: "Label",
                        props: {
                            width: 442,
                            var: "map1",
                            valign: "middle",
                            text: "运输船",
                            height: 127,
                            fontSize: 70,
                            color: "#ffffff",
                            centerY: -190,
                            centerX: 0,
                            align: "center"
                        },
                        compId: 4
                    }, {
                        type: "Label",
                        props: {
                            width: 442,
                            var: "map2",
                            valign: "middle",
                            text: "雪地",
                            height: 127,
                            fontSize: 70,
                            color: "#ffffff",
                            centerY: -35,
                            centerX: 0,
                            align: "center"
                        },
                        compId: 6
                    }, {
                        type: "Label",
                        props: {
                            width: 442,
                            var: "map3",
                            valign: "middle",
                            text: "地堡",
                            height: 127,
                            fontSize: 70,
                            color: "#ffffff",
                            centerY: 117,
                            centerX: 0,
                            align: "center"
                        },
                        compId: 7
                    } ],
                    loadList: [ "sub1/ui/scale9/img_1.png" ],
                    loadList3D: []
                }, e.TeamMatchMapViewUI = t, N("ui.view.teamMatchMap.TeamMatchMapViewUI", t);
            }(e.teamMatchMap || (e.teamMatchMap = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/turnTable/TurnTableCellView");
                    }
                }
                e.TurnTableCellViewUI = t, N("ui.view.turnTable.TurnTableCellViewUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/turnTable/TurnTableView");
                    }
                }
                e.TurnTableViewUI = i, N("ui.view.turnTable.TurnTableViewUI", i);
            }(e.turnTable || (e.turnTable = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {})), function(e) {
        !function(e) {
            !function(e) {
                class t extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(t.uiView);
                    }
                }
                t.uiView = {
                    type: "View",
                    props: {
                        width: 600,
                        height: 208
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            var: "imgBanner",
                            top: 0,
                            skin: "loading/banner.jpg",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 3
                    } ],
                    loadList: [ "loading/banner.jpg" ],
                    loadList3D: []
                }, e.WXChannelBannerUI = t, N("ui.view.wx.WXChannelBannerUI", t);
                class i extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(i.uiView);
                    }
                }
                i.uiView = {
                    type: "View",
                    props: {
                        width: 163,
                        height: 613
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "loading/img_5.png",
                            sizeGrid: "10,8,6,8",
                            right: 0,
                            left: 0,
                            bottom: 0
                        },
                        compId: 4
                    }, {
                        type: "List",
                        props: {
                            y: 0,
                            width: 161,
                            var: "list",
                            spaceY: 10,
                            selectEnable: !1,
                            repeatX: 1,
                            height: 611,
                            centerX: 0
                        },
                        compId: 3
                    } ],
                    loadList: [ "loading/img_5.png" ],
                    loadList3D: []
                }, e.WXChannelBarHUI = i, N("ui.view.wx.WXChannelBarHUI", i);
                class a extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.loadScene("view/wx/WXChannelIcon");
                    }
                }
                e.WXChannelIconUI = a, N("ui.view.wx.WXChannelIconUI", a);
                class s extends D {
                    constructor() {
                        super();
                    }
                    createChildren() {
                        super.createChildren(), this.createView(s.uiView);
                    }
                }
                s.uiView = {
                    type: "View",
                    props: {
                        width: 161,
                        height: 197
                    },
                    compId: 2,
                    child: [ {
                        type: "Image",
                        props: {
                            y: 0,
                            width: 161,
                            var: "imgIcon",
                            skin: "loading/banner.jpg",
                            height: 161,
                            centerX: 0
                        },
                        compId: 4
                    }, {
                        type: "Label",
                        props: {
                            y: 164,
                            width: 162,
                            var: "txtName",
                            valign: "middle",
                            text: "名称",
                            overflow: "hidden",
                            height: 31,
                            fontSize: 24,
                            color: "#ffffff",
                            centerX: 0,
                            align: "center"
                        },
                        compId: 5
                    } ],
                    loadList: [ "loading/banner.jpg" ],
                    loadList3D: []
                }, e.WXChannelIcon2UI = s, N("ui.view.wx.WXChannelIcon2UI", s);
            }(e.wx || (e.wx = {}));
        }(e.view || (e.view = {}));
    }(T || (T = {}));
    class M extends T.view.load.LoadingMaskViewUI {
        static getInstance() {
            return this._instance ? this._instance : (this._instance = new M(), this._instance);
        }
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height;
        }
        _show(e = null) {
            Laya.MouseManager.instance.disableMouseEvent = !0, Laya.stage.addChild(this), this.zOrder = S.LOADING, 
            this.aniLoading.play(), Laya.timer.once(7e3, this, function() {
                e && e(), M.hide();
            });
        }
        _hide() {
            Laya.MouseManager.instance.disableMouseEvent = !1, Laya.timer.clearAll(this), this.removeSelf(), 
            this.aniLoading.stop();
        }
        static show(e = null) {
            this.getInstance()._show(e);
        }
        static hide() {
            this.getInstance()._hide();
        }
    }
    let k = {
        DEFAULT: "默认",
        FIRST_VIEW: "首页",
        SKIN_VIEW: "皮肤界面",
        END_VIEW: "结束界面",
        GAME_VIEW: "游戏界面",
        FULL_SCREEN: "全屏导出界面",
        FLOAT: "插屏导出",
        NATIVE: "原生导出"
    };
    var O;
    !function(e) {
        e[e.SINGLE = 0] = "SINGLE", e[e.BAR = 1] = "BAR", e[e.FLOAT = 2] = "FLOAT", e[e.FULL_SCREEN = 3] = "FULL_SCREEN", 
        e[e.FRIEND = 4] = "FRIEND", e[e.NATIVE = 5] = "NATIVE", e[e.ANIMATION = 6] = "ANIMATION";
    }(O || (O = {}));
    class P {
        static random(e = 1, t = 0) {
            return P.seed = (9301 * P.seed + 49297) % 233280, (e - t) * (P.seed * P.randNum1) + t;
        }
        static clamp(e, t, i) {
            return Math.max(t, Math.min(i, e));
        }
        static toFixed(e, t) {
            return Number(e.toFixed(t));
        }
    }
    P.PI = Math.PI, P.seed = 888888, P.randNum1 = 1 / 233280;
    class V extends T.view.channel.ChannelSingleCellUI {
        constructor(e) {
            super(), this.channelType = O.SINGLE, this.functionTag = e, this.setChannel(), this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClick), 
            this.txtName.visible = !1, this.hideTag();
        }
        setView() {
            this.imgIcon.skin = this.dataSource.app_icon, this.txtName.text = this.dataSource.app_title;
        }
        showName() {
            this.txtName.visible = !0, this.txtName.text = this.dataSource.app_title;
        }
        hide() {
            this.destroy();
        }
        playShakeAni(e = null) {
            let t = this;
            Laya.Tween.to(t.imgRoot, {
                rotation: -10
            }, 70, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t.imgRoot, {
                    rotation: 10
                }, 70, null, Laya.Handler.create(this, function() {
                    Laya.Tween.to(t.imgRoot, {
                        rotation: -5
                    }, 50, null, Laya.Handler.create(this, function() {
                        Laya.Tween.to(t.imgRoot, {
                            rotation: 5
                        }, 50, null, Laya.Handler.create(this, function() {
                            Laya.Tween.to(t.imgRoot, {
                                rotation: 0
                            }, 20, null, Laya.Handler.create(this, function() {
                                e && e();
                            }));
                        }));
                    }));
                }));
            }));
        }
        showTag() {
            this.imgTag.visible = !0;
        }
        hideTag() {
            this.imgTag.visible = !1;
        }
        onBtnClick() {
            let e = this;
            U.navigate2Mini(this.dataSource, !0, this.functionTag, this.channelType, null, function() {
                U.requestChannelData(function() {
                    if (!e.parent) return;
                    let t = U.list[G.DEFAULT] ? U.list[G.DEFAULT] : [], i = Math.floor(Math.random() * t.length) % t.length;
                    e.dataSource.app_icon == t[i].app_icon && (i += 1, i %= t.length), e.dataSource = t[i], 
                    e.setView();
                });
            });
        }
        onDestroy() {
            Laya.timer.clearAll(this), this.off(Laya.Event.MOUSE_DOWN, this, this.onBtnClick), 
            this.imgIcon = null, this.imgTag = null, this.imgRoot = null;
        }
        setChannel() {
            var e = this;
            U.requestChannelData(function() {
                let t = U.list[G.DEFAULT] ? U.list[G.DEFAULT] : [];
                if (t && t.length > 0) {
                    let i = Math.floor(P.random(t.length, 0)), a = 1;
                    e.dataSource = t[i], e.setView();
                    let s = function() {
                        let s = (i += a) % t.length;
                        e.dataSource = t[s], e.setView(), e.playShakeAni();
                    };
                    Laya.timer.loop(3e3, this, s);
                }
            });
        }
    }
    let G = {
        DEFAULT: "promotion",
        BACK_AD: "backAd"
    };
    class U extends Laya.Script {
        static requestChannelData(e) {
            if (U.isRequest) e(); else {
                if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return U.isRequest = !0, 
                U.list = F, void e();
                if (hl.platform == v.WX || hl.platform == v.TT || hl.platform == v.NATIVE_IOS) {
                    if (!hl.navCtrl()) return U.list = {}, U.isRequest = !0, void e();
                    if (hl.isReviewVersion()) return U.isRequest = !0, U.list[G.DEFAULT] = [], void e();
                } else {
                    if (hl.platform != v.OPPO) return U.isRequest = !0, U.list[G.DEFAULT] = [], void e();
                    if (!U.zsNavCtrl()) return U.list = {}, U.isRequest = !0, void e();
                    if (U.isZSReviewVersion()) return U.isRequest = !0, U.list[G.DEFAULT] = [], void e();
                }
                U.requestChannelDataFromOwn(e);
            }
        }
        static requestChannelDataFromOwn(e) {
            B.request(C.CHANNEL, "GET", {
                appId: hl.appId
            }, function(t) {
                t = t.data, U.list[G.DEFAULT] = JSON.parse(t.channel.data), U.isRequest = !0, e();
            });
        }
        static getChannelDataSingle() {
            if (!U.list[G.DEFAULT]) return null;
            let e = U.list[G.DEFAULT].length, t = null;
            return e > 0 && (t = U.list[G.DEFAULT][U.listIdx], U.listIdx++, U.listIdx %= e), 
            t;
        }
        static jumpToMinAppRandom() {
            if (!tl.getInstance().ruleCtrl(3)) return;
            if (!U.list[G.DEFAULT]) return null;
            let e = U.list[G.DEFAULT].length, t = Math.floor(Math.random() * e);
            ol.navigateToMiniProgram(U.list[G.DEFAULT][t].appid);
        }
        static createFullScreenView(e = null) {}
        static createFloatView(e = null) {}
        static createInterstitialView() {}
        static navigate2Mini(e, t = !0, i = k.DEFAULT, a, s = null, n = null) {
            let o = {};
            for (let t in e) o[t] = e[t];
            if (hl.platform == v.OPPO) return U.navigateEventHandle(i, 0), void tl.getInstance().getPlatformUserId(function(e) {
                zs.sdk.navigate2Mini(o, e, function() {
                    U.navigateEventHandle(i, 1), U.setJump(o.appid, function() {
                        ol.reportAnalyise(_.NAV_SUCCESS), tl.getInstance().isNew && ol.reportAnalyise(_.NEW_NAV_SUCCESS);
                    }), s && s();
                }, function() {
                    t && U.createFullScreenView(null), n && n();
                }, function() {});
            });
            hl.platform == v.TT ? tl.getInstance().getPlatformUserId(function(t) {
                zs.sdk.showMoreGamesModal(e, t, function() {
                    s && s();
                }, function() {
                    n && n();
                });
            }) : hl.platform == v.WX ? (U.navigateEventHandle(i, 0), U.navigateEventHandle(i, 1), 
            ol.reportAnalyise(_.NAV_SUCCESS), tl.getInstance().isNew && ol.reportAnalyise(_.NEW_NAV_SUCCESS), 
            ol.navigateToMiniProgram(o.appid)) : n();
        }
        static navigateEventHandle(e, t) {
            0 == t ? ol.reportAnalyise(e + "跳转点击") : 1 == t && ol.reportAnalyise(e + "跳转成功");
        }
        static clearJump() {
            let t = Laya.LocalStorage.getItem(e.JUMPLIST);
            console.log("本地跳转列表:", t, typeof t), null != t && "" != t && (t = JSON.parse(t), 
            console.log("日期判断: ", U.getNowFormatDate(), t.date), U.getNowFormatDate() != t.date && (Laya.LocalStorage.removeItem(e.JUMPLIST), 
            console.log("跳转数据清除成功")));
        }
        static setJump(t, i = null) {
            let a = !1, s = Laya.LocalStorage.getItem(e.JUMPLIST);
            if (null != s && "" != s) {
                console.log("localData", JSON.parse(s).list), s = JSON.parse(s);
                for (let e = 0; e < s.list.length; e++) s.list[e] == t && (a = !0);
                if (!a) {
                    s.list.push(t);
                    let a = {
                        date: U.getNowFormatDate(),
                        list: s.list
                    };
                    Laya.LocalStorage.setItem(e.JUMPLIST, JSON.stringify(a)), i && i();
                }
            } else {
                console.log("localData无值：", s);
                let a = [];
                a.push(t);
                let n = {
                    date: U.getNowFormatDate(),
                    list: a
                };
                Laya.LocalStorage.setItem(e.JUMPLIST, JSON.stringify(n)), i && i();
            }
        }
        static getNowFormatDate() {
            var e = new Date(), t = e.getMonth() + 1 < 10 ? "0" + (e.getMonth() + 1) : e.getMonth() + 1, i = e.getDate() < 10 ? "0" + e.getDate() : e.getDate();
            return e.getFullYear() + "-" + t + "-" + i;
        }
        static zsInit(t = null) {
            if (hl.isZsCtrl) {
                {
                    let t = zs.sdk;
                    t.initSdkByConf({
                        channel: "wx",
                        appId: hl.appId,
                        secret: hl.secret
                    }), t.login(function(i) {
                        console.log("zsInit openId", i), Laya.LocalStorage.setItem(e.PLATFORM_USER_ID, i), 
                        t.init(i);
                    });
                }
                U.requestZSCtrl(t, t);
            } else t();
        }
        static requestZSCtrl(e, t) {
            if (hl.platform == v.VIVO) {
                let t = {
                    apk_id: hl.appId
                };
                B.requestWithUrl("https://platform.qwpo2018.com/api/list_config/index", "GET", [], t, function(t) {
                    console.log("requestZSCtrl", t), U.zsCtrl = t, e();
                });
            } else if (hl.platform == v.OPPO || hl.platform == v.WX) {
                zs.sdk.loadCfg(function(t) {
                    console.log("requestZSCtrl", t), U.zsCtrl = t, e();
                }, t);
            }
        }
        static isZSReviewVersion() {
            return !(!U.zsCtrl || U.zsCtrl.zs_version != hl.zsVer) && (console.log("zs sdk 版本审核中"), 
            !0);
        }
        static zsNativeCtrl() {
            return hl.platform != v.OPPO || (!(!U.zsCtrl || 1 != U.zsCtrl.zs_native_click_switch) || (console.log("zs sdk 原生广告已关"), 
            !1));
        }
        static zsNavCtrl() {
            return hl.platform != v.OPPO || (!(!U.zsCtrl || 1 != U.zsCtrl.zs_jump_switch) || (console.log("zsNavCtrl 导出开关已关"), 
            !1));
        }
        static showMoreGamesModal(e, t = null, i = null) {
            hl.platform == v.TT && tl.getInstance().getPlatformUserId(function(a) {
                zs.sdk.showMoreGamesModal(e, a, function() {
                    t && t();
                }, function() {
                    i && i();
                });
            });
        }
        static reportNativeAd(e, t, i = null) {}
        static creatSingleCell(e, t, i) {
            U.requestChannelData(function() {
                if (null != U.list[G.DEFAULT] && 0 != U.list[G.DEFAULT].length) {
                    let a = new V(i);
                    a.x = e, a.y = t;
                    let s = e + "_" + t + "_" + i;
                    U.singleCell[s] = a, Laya.stage.addChild(a);
                }
            });
        }
        static showSingleCell(e, t, i) {}
        static hideSingleCell(e, t, i) {
            let a = e + "_" + t + "_" + i;
            this.singleCell[a] && (this.singleCell[a].visible = !1, this.singleCell[a].removeSelf(), 
            this.singleCell[a] = null);
        }
        static bannerRefreshTime() {
            return hl.isZsCtrl && U.zsCtrl && U.zsCtrl.zs_banner_refresh_time ? U.zsCtrl.zs_banner_refresh_time ? Number(U.zsCtrl.zs_banner_refresh_time) : 3e4 : hl.getRefreshBannerTime();
        }
        static jumpBackGezi() {
            if (!hl.isZsCtrl) return hl.getJumpBackGezi();
            if (this.isZSReviewVersion()) return 0;
            if (U.zsCtrl && U.zsCtrl.zs_jump_back_gezi) {
                let e = Number(U.zsCtrl.zs_jump_back_gezi);
                return 0 == e ? 0 : -1 == e ? 1 : e + 1;
            }
            return 0;
        }
        static protogenesisRenovate() {
            if (U.zsCtrl && U.zsCtrl.zs_protogenesis_renovate) {
                let e = Number(U.zsCtrl.zs_protogenesis_renovate);
                return console.log("格子刷新次数" + e), e;
            }
            return 6;
        }
        static getIPCtrl() {
            if (U.zsCtrl && U.zsCtrl.ip_ctrl) {
                return 1 == Number(U.zsCtrl.ip_ctrl);
            }
            return !0;
        }
        static getViolenceCtrl() {
            if (U.zsCtrl && U.zsCtrl.violence_ctrl) {
                return 1 == Number(U.zsCtrl.violence_ctrl);
            }
            return !0;
        }
        static getSwitch() {
            if (U.zsCtrl && U.zsCtrl.zs_switch) {
                return 1 == Number(U.zsCtrl.zs_switch);
            }
            return !0;
        }
        static getbannerTouch() {
            if (U.zsCtrl && U.zsCtrl.banner_touch) {
                return 1 == Number(U.zsCtrl.banner_touch);
            }
            return !0;
        }
        static isZsBannerCtrl() {
            return !(!this.getSwitch() || !this.getbannerTouch());
        }
        static getGameAwardBannerCtrl() {
            if (U.zsCtrl && U.zsCtrl.zs_click_award_num) {
                let e = Number(U.zsCtrl.zs_click_award_num);
                return console.log("zs_click_award_num", e), e;
            }
            return 0;
        }
    }
    U.isRequest = !1, U.fullScreen = null, U.zsCtrl = null, U.list = {
        promotion: []
    }, U.singleCell = {}, U.listIdx = 0;
    var F = {
        promotion: [ {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车1",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车2",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车3",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车4",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车5",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车6",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车7",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车8",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车9",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        }, {
            app_desc: "1",
            app_icon: "https://txcdn.wqop2018.com/guanggao/628b546a2626219134503104fefbb9e1.png",
            app_icon_str: "",
            app_id: "14437",
            app_qrcode: "",
            app_title: "山坡越野车10",
            app_type: "2",
            appid: "wx111d5d0d7032b58e",
            link_path: "pages/index/index",
            link_text: "1",
            open_ad: "1",
            position_type: "2",
            type: "2"
        } ]
    };
    const H = {
        TAP: "qzryjy_android_tap",
        XM: "qzryjy_android_xm",
        C_233: "qzryjy_android_233",
        HYKB: "qzryjy_android_hykb",
        MMY: "qzryjy_android_mmy",
        TEST: "qzryjy_android_test",
        C233_ME: "qzryjy_android_233_me",
        VIVO: "qzryjy_android_vivo"
    };
    class W {
        static log(...e) {
            this._allDebug && this._logDebug && console.log(...e);
        }
        static get mapDebug() {
            return !!this._allDebug && this._mapDebug;
        }
        static get fightDebug() {
            return !!this._allDebug && this._fightDebug;
        }
        static get guideDebug() {
            return !!this._allDebug && this._guideDebug;
        }
        static get gmDebug() {
            return !!this._allDebug && this._gmDebug;
        }
        static get storageDebug() {
            return !!this._allDebug && this._storageDebug;
        }
        static get skillDebug() {
            return !!this._allDebug && this._skillDebug;
        }
        static get newMode() {
            return !!this._allDebug && this._newMode;
        }
    }
    W._allDebug = !1, W._mapDebug = !1, W._logDebug = !1, W._fightDebug = !1, W._guideDebug = !1, 
    W._gmDebug = !1, W._storageDebug = !1, W._skillDebug = !1, W._newMode = !1;
    var Y, X, K = Laya.Vector3, z = Laya.ShuriKenParticle3D;
    class q {
        static getTouch(e = 250, t = !0) {
            return hl.platform == v.WEB_4399 && window.focus(), q.isTouch ? (console.log("按钮点击过快"), 
            !1) : (q.isTouch = !0, setTimeout(function() {
                q.isTouch = !1;
            }, e), !0);
        }
        static findChildByName(e, t) {
            if (e.name == t) return e;
            if (!(e.numChildren > 0)) return null;
            for (let i = 0; i < e.numChildren; i++) {
                let a = q.findChildByName(e.getChildAt(i), t);
                if (a) return a;
            }
        }
        static checkParticle3DLive(e) {
            if (!(e instanceof z)) return !1;
            if (e.particleSystem.isAlive) return !0;
            if (!(e.numChildren > 0)) return !1;
            for (let t = 0; t < e.numChildren; t++) {
                let i = q.checkParticle3DLive(e.getChildAt(t));
                if (i) return i;
            }
        }
        static playParticel3D(e) {
            if (e instanceof z && e.particleSystem.play(), e.numChildren > 0) for (let t = 0; t < e.numChildren; t++) q.playParticel3D(e.getChildAt(t));
        }
        static pauseParticel3D(e) {
            if (e instanceof z && e.particleSystem.pause(), e.numChildren > 0) for (let t = 0; t < e.numChildren; t++) q.pauseParticel3D(e.getChildAt(t));
        }
        static angle3(e, t) {
            let i = K.dot(e, t);
            return i /= K.scalarLength(e) * K.scalarLength(t), Math.acos(i) / Math.PI * 180;
        }
        static angle2(e, t) {
            let i = e.x * t.y - t.x * e.y, a = e.x * t.x + e.y * t.y;
            return Math.atan2(i, a) * (180 / Math.PI);
        }
        static recordSec() {
            q.sec = new Date().getTime();
        }
        static getTimeCost() {
            return new Date().getTime() - q.sec;
        }
        static getComponents(e, t, i) {
            let a = e.getComponent(t);
            if (a && i.push(a), e.numChildren > 0) for (let a = 0; a < e.numChildren; a++) q.getComponents(e.getChildAt(a), t, i);
        }
        static getAllChildrenByName(e, t, i) {
            if (e.name == t && i.push(e), e.numChildren > 0) for (let a = 0; a < e.numChildren; a++) q.getAllChildrenByName(e.getChildAt(a), t, i);
        }
        static getAllChildrenContainName(e, t, i) {
            if (-1 != e.name.indexOf(t) && i.push(e), e.numChildren > 0) for (let a = 0; a < e.numChildren; a++) q.getAllChildrenContainName(e.getChildAt(a), t, i);
        }
        static GetRigidBodyInstance(e) {
            return e.getComponent(Laya.Rigidbody3D);
        }
        static GetPhysicsColliderInstance(e) {
            return e.getComponent(Laya.PhysicsCollider), e.getComponent(Laya.PhysicsCollider);
        }
        static SetColliderGroup(e, t) {
            e.collisionGroup = t;
        }
        static CanCollideWith(e, ...t) {
            let i = 0;
            for (let e of t) i |= e;
            e.canCollideWith = i;
        }
        static IgnoreCollision(e, ...t) {
            let i = Laya.Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER;
            for (let e of t) i ^= e;
            e.canCollideWith = i;
        }
        static getAllChildrenOfClass(e, t, i) {
            if (e instanceof t && i.push(e), e.numChildren > 0) for (let a = 0; a < e.numChildren; a++) q.getAllChildrenOfClass(e.getChildAt(a), t, i);
        }
        static getRandomInt(e, t) {
            var i = Math.abs(e - t);
            return i *= Math.random(), (i -= i % 1) + t > e ? e : i + t;
        }
        static getRandomIntArray(e, t, i) {
            if (i < 0 || i > e - t) return;
            let a = [], s = this.getRandomInt(e, t);
            a.push(s);
            for (let n = 1; n < i; n++) {
                for (s = this.getRandomInt(e, t); null != a.find(function(e) {
                    return s == e;
                }); ) s = this.getRandomInt(e, t);
                a.push(s);
            }
            return a.sort(function(e, t) {
                return e > t ? 1 : -1;
            }), a;
        }
        static delayShowButton(e, t = 2e3) {
            e.visible && (e.visible = !1, Laya.timer.once(t, e, function() {
                e.alpha = 0, Laya.Tween.to(e, {
                    alpha: 1
                }, 400), e.visible = !0;
            }));
        }
        static dateFormat(e, t) {
            let i;
            const a = {
                "Y+": t.getFullYear().toString(),
                "m+": (t.getMonth() + 1).toString(),
                "d+": t.getDate().toString(),
                "H+": t.getHours().toString(),
                "M+": t.getMinutes().toString(),
                "S+": t.getSeconds().toString()
            };
            for (let t in a) (i = new RegExp("(" + t + ")").exec(e)) && (e = e.replace(i[1], 1 == i[1].length ? a[t] : a[t].padStart(i[1].length, "0")));
            return e;
        }
    }
    q.sec = 0, q.isTouch = !1, q.Vector3 = {
        up: new K(0, 1, 0),
        down: new K(0, -1, 0),
        right: new K(1, 0, 0),
        left: new K(-1, 0, 0),
        forward: new K(0, 0, 1),
        back: new K(0, 0, -1),
        zero: new K()
    }, function(e) {
        e[e.AI = Laya.Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER2] = "AI", e[e.PLAYER = Laya.Physics3DUtils.COLLISIONFILTERGROUP_CHARACTERFILTER] = "PLAYER";
    }(Y || (Y = {}));
    class Q extends T.view.wx.WXChannelIconUI {
        onAwake() {
            this.on(Laya.Event.CLICK, this, this.onBtnJump);
        }
        onBtnJump() {
            q.getTouch() && ol.navigateToMiniProgram(this.data.appid);
        }
        onEnable() {
            console.log("WXChannelIconCtrl onDisplay");
            let e = U.getChannelDataSingle();
            e ? (this.zOrder = S.LOADING, this.visible = !0, this.data = e, this.setView(), 
            Laya.timer.loop(5e3, this, function() {
                this.data = U.getChannelDataSingle(), this.setView();
            })) : this.active = !1;
        }
        onDisable() {
            this.visible = !1, console.log("WXChannelIconCtrl onUnDisplay"), Laya.timer.clearAll(this);
        }
        setView() {
            this.imgIcon.skin = this.data.app_icon, this.txtName.text = this.data.app_title;
        }
    }
    class Z extends T.view.wx.WXChannelBannerUI {
        onAwake() {
            this.on(Laya.Event.CLICK, this, this.onBtnJump);
        }
        onBtnJump() {
            q.getTouch() && Z.data && ol.navigateToMiniProgram(Z.data.appid);
        }
        static getInstance() {
            return this.instance || (this.instance = new Z(), Laya.stage.addChild(this.instance), 
            Z.instance.zOrder = S.LOADING), this.instance;
        }
        static showBanner(e = null, t = null) {
            if (!tl.getInstance().ruleCtrl(3)) return;
            let i = U.getChannelDataSingle();
            if (i) {
                this.data = i;
                let a = this.getInstance();
                a.x = null == e ? .5 * (Laya.stage.width - a.width) : e, a.y = null == t ? Laya.stage.height - a.height : t, 
                console.log(a), a.visible = !0, a.zOrder = S.LOADING + 1, i.banner && (a.imgBanner.skin = i.banner);
            } else this.hideBanner();
        }
        static hideBanner() {
            tl.getInstance().ruleCtrl(3) && (this.getInstance().visible = !1);
        }
    }
    !function(e) {
        e[e.SHARE = 1] = "SHARE", e[e.AD = 2] = "AD";
    }(X || (X = {}));
    class j {
        static setButton(e, t, i = null) {
            if (!e) return;
            let a = hl.getRewardCtrl(t);
            if (tl.getInstance().isShareLimit() || !tl.getInstance().isAdLimit() && a.list[a.count % a.list.length] == s.AD) {
                let t = j.getImageByName(e, [ ul.IMG_SHARE_ICON ]);
                t && (t.skin = ul.IMG_AD_ICON);
                let a = j.getLabel(e);
                a && (a.text = a.text.replace(/分享/g, "视频")), i && i(X.AD);
            } else {
                let t = j.getImageByName(e, [ ul.IMG_AD_ICON ]);
                t && (t.skin = ul.IMG_SHARE_ICON);
                let a = j.getLabel(e);
                a && (a.text = a.text.replace(/视频/g, "分享")), i && i(X.SHARE);
            }
        }
        static getImageByName(e, t) {
            if (!e) return !1;
            if (!e.parent) return !1;
            for (let i = 0; i < e.numChildren; i++) {
                let a = e.getChildAt(i);
                if (a instanceof Laya.Image) {
                    for (let e in t) if (a.skin == t[e]) return a;
                } else a.numChildren && j.getImageByName(a, t);
            }
        }
        static getLabel(e) {
            if (!e) return !1;
            if (!e.parent) return !1;
            for (let t = 0; t < e.numChildren; t++) {
                let i = e.getChildAt(t);
                if (i instanceof Laya.Label) {
                    if (-1 != i.text.indexOf("视频") || -1 != i.text.indexOf("分享")) return i;
                } else i.numChildren && j.getLabel(i);
            }
        }
        static setEvent(e, t, i, a = null) {
            let s = hl.getRewardCtrl(i);
            if (hl.isCP) return void e();
            if (hl.isDebug) return void e();
            if (hl.getWhile()) return void e();
            if (hl.platform == v.WEB) return il.resumeBGM(), s.count++, j.setButton(a, i), void e();
            if (hl.platform == v.WEB_4399) return console.log("播放激励视频"), j.setButton(a, i), 
            M.hide(), void ol.createRewardedVideoAd(s.ad_id, function() {
                s.count++, console.log("观看视频成功"), j.setButton(a, i), e(X.AD), il.resumeBGM();
            }, function() {
                t(X.AD), il.resumeBGM();
            }, function() {
                t(X.AD), il.resumeBGM();
            });
            let n = function() {
                console.log("视频成功回调-----------------------------------");
                let t = {
                    "功能点": s.info,
                    "用户": tl.getInstance().isNew ? "新用户" : "老用户"
                };
                tl.getInstance().isNew ? t["功能点(新用户)"] = s.info : t["功能点(老用户)"] = s.info, ol.reportAnalyise(_.AD_SUCCESS, null, t), 
                s.count++, j.setButton(a, i), e(X.AD), il.resumeBGM(), M.hide();
            }.bind(this), o = function() {
                console.log("视频失败回调------------------------------------"), s.count++, j.setButton(a, i), 
                t(X.AD), il.resumeBGM(), M.hide();
            }.bind(this);
            tl.getInstance().isShareLimit();
            il.stopBGM(), M.show(), ol.createRewardedVideoAd(s.ad_id, n, function() {
                console.log("ad fail"), o(), hl.platform != v.WX && hl.platform != v.QQ || (ol.showModal("提示", "无可观看的广告", !1, null, null, "确定", null, "取消", null), 
                j.setButton(a, i));
            }.bind(this), o, function() {
                let e = {
                    "功能点": s.info,
                    "用户": tl.getInstance().isNew ? "新用户" : "老用户"
                };
                tl.getInstance().isNew ? e["功能点(新用户)"] = s.info : e["功能点(老用户)"] = s.info, ol.reportAnalyise(_.AD_START, null, e);
            });
        }
        static shareMessage(e = "", t = null, i = null, a = !1, s = null, n = null) {
            j.share.dialog = a, j.share.configSec = s || hl.getConfig().share_sec, j.share.cancel = n;
            let o = function() {
                hl.getShare(function(a) {
                    t && (j.startTimer(), j.share.success = function() {
                        setTimeout(function() {
                            t();
                        }, 500);
                    }), j.share.fail = i, ol.shareAppMessage(a.title, a.img, e);
                });
            };
            o(), j.share.exe = o;
        }
        static startTimer() {
            j.share.shareSec = Math.floor(new Date().getTime() / 1e3);
        }
        static triggerShareEvent() {
            let e = Math.floor(new Date().getTime() / 1e3), t = j.share.configSec;
            j.share.shareSec && e - j.share.shareSec > t ? j.share.success && (j.share.success(), 
            j.share.shareSec = null, j.share.success = null, j.share.fail = null, j.share.dialog = null, 
            j.share.exe = null, j.share.configSec = null, j.share.cancel = null) : j.share.fail && (j.share.fail(), 
            j.share.dialog && (j.share.configSec = 2, ol.showModal("提示", "分享失败，请分享给好友哦", !0, function() {
                j.share && j.share.exe && j.share.exe();
            }, function() {
                j.share.cancel && j.share.cancel(), j.share.shareSec = null, j.share.success = null, 
                j.share.fail = null, j.share.dialog = null, j.share.exe = null, j.share.configSec = null, 
                j.share.cancel = null;
            }, "确定", "#129330", "放弃奖励", "#000000")));
        }
        static createBannerAd() {
            if (this.isNoAd) return;
            n[j.bannerIdx % n.length] ? hl.platform == v.NATIVE_ANDRIOD && hl.isReviewVersion() || (ol.createBannerAd(n[j.bannerIdx % n.length], !1), 
            j.bannerIdx++) : console.log("没有可用banner id");
        }
        static preloadBannerAd(e = null) {
            if (!this.isNoAd && (hl.platform == v.QQ || hl.platform == v.WX || hl.platform == v.TT || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS)) {
                if (null == j.bannerIdx && (j.bannerIdx = Math.floor(100 * Math.random()) % n.length), 
                console.log("preloadBannerAd"), !n[j.bannerIdx % n.length] && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS) return void console.log("没有可用banner id");
                if (hl.platform == v.NATIVE_ANDRIOD && hl.isReviewVersion()) return;
                this.showBannerCount++, ol.createBannerAd(n[j.bannerIdx % n.length], !1, function(t) {
                    e && e(), t || (j.showBannerCount = 0, console.log("重置BANNER次数"));
                }), j.bannerIdx++;
            }
        }
        static loop() {
            hl.platform != v.WX && hl.platform != v.QQ || Laya.timer.loop(U.bannerRefreshTime(), null, function() {
                ol.isHideBanner || (ol.createBannerAd(n[j.bannerIdx % n.length], !0), j.bannerIdx++, 
                ol.pushBannerCommand(1, function() {
                    console.log("刷新banner");
                }), hl.platform == v.WX && ol.exeBannerCommand());
            }), Laya.timer.loop(70, this, function() {
                ol.exeCustomCommand(), hl.platform == v.QQ && ol.exeBannerCommand();
            });
        }
        static onHide() {
            hl.platform != v.WX && hl.platform != v.QQ || ol.isHideBanner || (ol.createBannerAd(n[j.bannerIdx % n.length], !0), 
            j.bannerIdx++, ol.pushBannerCommand(1, function() {
                console.log("刷新banner");
            }), ol.exeBannerCommand());
        }
        static hideBannerAd() {
            hl.platform != v.WX && hl.platform != v.WEB || Z.hideBanner(), ol.hideBannerAd(), 
            console.log("hideBannerAd"), hl.platform != v.TT && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || this.showBannerCount % hl.getBannerCount() == 0 && this.preloadBannerAd(function() {});
        }
        static showBannerAd(e = null, t = null, i = null, a = null) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return;
            if (hl.platform == v.NATIVE_ANDRIOD && hl.isReviewVersion()) return;
            let s = e, o = t;
            if (null != e) {
                if (hl.appId == H.C233_ME || hl.appId == H.MMY || hl.appId == H.HYKB || hl.appId == H.C_233) return;
                let t = ol.getSystemInfo();
                if (t) {
                    let i = t.windowWidth;
                    e = e / Laya.stage.width * i;
                }
            }
            if (null != t) {
                if (hl.appId == H.C233_ME || hl.appId == H.MMY || hl.appId == H.HYKB || hl.appId == H.C_233) return;
                let e = ol.getSystemInfo();
                if (e) {
                    let i = e.windowHeight;
                    t = t / Laya.stage.height * i;
                }
            }
            if (hl.platform == v.QQ || hl.platform == v.WX || hl.platform == v.TT || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS) ol.showBannerAd(e, t, function() {
                Z.hideBanner(), j.showBannerCount++;
                j.showBannerCount % hl.getBannerCount() == 0 ? hl.getBannerCount() : (j.showBannerCount, 
                hl.getBannerCount());
                a && a();
            }, function() {
                hl.platform == v.WX && Z.showBanner(s, o);
            }); else if (hl.platform == v.OPPO || hl.platform == v.VIVO) hl.platform == v.VIVO && (this.showBannerCount % hl.getBannerCount() == 0 && j.createBannerAd(), 
            j.showBannerCount++, ol.showBannerAd()); else {
                null == j.bannerIdx && (j.bannerIdx = Math.floor(100 * Math.random()) % n.length);
                let e = n[j.bannerIdx % n.length];
                if (!e) return void console.log("没有可用banner id");
                ol.createBannerAd(e, !1, a), j.bannerIdx++;
            }
        }
        static createInterstitialAd() {
            null == j.interstitialIdx && (j.interstitialIdx = Math.floor(100 * Math.random()) % o.length), 
            hl.platform == v.NATIVE_ANDRIOD && hl.isReviewVersion() || (v.WX == hl.platform ? ol.showInterstitialAd(o[j.interstitialIdx % o.length], function() {
                Laya.timer.once(2e3, this, function() {
                    j.preloadInterstitialAd();
                });
            }) : ol.createInterstitialAd(o[j.interstitialIdx % o.length]), j.interstitialIdx++);
        }
        static preloadInterstitialAd() {
            null == j.interstitialIdx && (j.interstitialIdx = Math.floor(100 * Math.random()) % o.length), 
            hl.platform == v.WX && ol.preloadInterstitialAd(o[j.interstitialIdx % o.length], function() {});
        }
        static createAppBox() {
            null == j.appBoxIdx && (j.appBoxIdx = Math.floor(100 * Math.random()) % l.length), 
            ol.createAppBox(l[j.appBoxIdx % l.length]), j.appBoxIdx++;
        }
        static createGirdAd() {
            null == j.girdIdx && (j.girdIdx = Math.floor(100 * Math.random()) % h.length), h[j.girdIdx % h.length] ? (ol.createGirdAd(h[j.girdIdx % n.length]), 
            j.girdIdx++) : console.log("没有可用gird id");
        }
        static hideGirdAd() {
            ol.hideGirdAd();
        }
        static createGamePortalAd() {
            null == j.oppoGamePortalIdx && (j.oppoGamePortalIdx = Math.floor(100 * Math.random()) % d.length), 
            ol.createGamePortalAd(d[j.oppoGamePortalIdx % d.length]), j.oppoGamePortalIdx++;
        }
        static preloadNativeAdExtend(e = null, t = null, a) {
            a == i.BANNER ? this.preloadNativeAdExtendBanner(e, t) : a == i.ICON && this.preloadNativeAdExtendIcon(e, t);
        }
        static preloadNativeAdExtendBanner(e = null, t = null) {
            if (!hl.getNativeCtrl()) return void t();
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) {
                j.nativeExtendList.ad = {
                    ad: ""
                }, j.nativeExtendList.data = {
                    imgUrlList: [ ul.IMG_SHARE_ICON ],
                    adId: 0
                }, W.gmDebug && (j.nativeExtendList.data = null, j.nativeExtendList.ad = null), 
                L.notify(w.REFRESH_NATIVE_AD), e && e(), Laya.timer.clearAll(this.preloadNativeAdExtendBanner);
                let a = tl.getInstance().getIsOnceGame() ? hl.getRefresh_nativeBanner_beforeOnceGame() : hl.getRefresh_nativeBanner_afterOnceGame();
                return void Laya.timer.once(a, this, function() {
                    j.preloadNativeAdExtend(e, t, i.BANNER), console.log("刷新banner原生广告");
                });
            }
            if (hl.platform != v.OPPO && hl.platform != v.VIVO) return;
            null == j.nativeIdx && (j.nativeIdx = Math.floor(100 * Math.random()) % g.length);
            let a = 2;
            j.nativeExtendList.data = null, j.nativeExtendList.ad = null;
            --a < 0 || (j.nativeIdx++, g[j.nativeIdx % g.length] ? ol.preLoadNativeAdExtend(g[0], function(t, i) {
                j.nativeExtendList.data = t, j.nativeExtendList.ad = i, L.notify(w.REFRESH_NATIVE_AD), 
                e && e();
            }, function() {
                j.nativeExtendList.data = null, j.nativeExtendList.ad = null, L.notify(w.REFRESH_NATIVE_AD), 
                t && t();
            }) : console.log("没有可用native id")), Laya.timer.clearAll(this.preloadNativeAdExtendBanner);
            let s = tl.getInstance().getIsOnceGame() ? hl.getRefresh_nativeBanner_beforeOnceGame() : hl.getRefresh_nativeBanner_afterOnceGame();
            Laya.timer.once(s, this, function() {
                j.preloadNativeAdExtend(e, t, i.BANNER), console.log("刷新banner原生广告");
            });
        }
        static preloadNativeAdExtendIcon(e = null, t = null) {
            if (!hl.getNativeCtrl()) return void t();
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) {
                j.nativeExtendIconList.ad = {
                    ad: ""
                }, j.nativeExtendIconList.data = {
                    imgUrlList: [ ul.IMG_SHARE_ICON ],
                    adId: 0
                }, W.gmDebug && (j.nativeExtendIconList.data = null, j.nativeExtendIconList.ad = null), 
                L.notify(w.REFRESH_NATIVE_AD), e && e(), Laya.timer.clearAll(this.preloadNativeAdExtendIcon);
                let a = tl.getInstance().getIsOnceGame() ? hl.getRefresh_nativeIcon_beforeOnceGame() : hl.getRefresh_nativeIcon_afterOnceGame();
                return void Laya.timer.once(a, this, function() {
                    j.preloadNativeAdExtend(e, t, i.ICON), console.log("刷新icon原生广告");
                });
            }
            if (hl.platform != v.OPPO && hl.platform != v.VIVO) return;
            null == j.nativeIdx && (j.nativeIdx = Math.floor(100 * Math.random()) % g.length);
            let a = 2;
            j.nativeExtendIconList.data = null, j.nativeExtendIconList.ad = null;
            --a < 0 || (j.nativeIdx++, g[j.nativeIdx % g.length] ? ol.preLoadNativeAdExtend(g[1], function(t, i) {
                j.nativeExtendIconList.data = t, j.nativeExtendIconList.ad = i, L.notify(w.REFRESH_NATIVE_AD), 
                e && e();
            }, function() {
                j.nativeExtendIconList.data = null, j.nativeExtendIconList.ad = null, L.notify(w.REFRESH_NATIVE_AD), 
                t && t();
            }) : console.log("没有可用native id")), Laya.timer.clearAll(this.preloadNativeAdExtendIcon);
            let s = tl.getInstance().getIsOnceGame() ? hl.getRefresh_nativeIcon_beforeOnceGame() : hl.getRefresh_nativeIcon_afterOnceGame();
            Laya.timer.once(s, this, function() {
                j.preloadNativeAdExtend(e, t, i.ICON), console.log("刷新icon原生广告");
            });
        }
        static getNativeAdData(e, t) {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 ? ol.showNativeAd(e, t) : e({}, {
                imgUrlList: [ ul.IMG_SHARE_ICON ],
                adId: 0
            });
        }
        static timerRefreshNativeBanner() {
            if (hl.platform != v.OPPO && hl.platform != v.WEB && hl.platform != v.VIVO && hl.platform != v.WEB_4399) return;
            console.log("刷新原生广告"), j.preloadNativeAdExtend(function(e, t) {}, function() {}, i.BANNER);
        }
        static timerRefreshNativIcon() {
            if (hl.platform != v.OPPO && hl.platform != v.WEB && hl.platform != v.VIVO && hl.platform != v.WEB_4399) return;
            console.log("刷新原生广告"), j.preloadNativeAdExtend(function(e, t) {}, function() {}, i.ICON);
        }
        static createFullscreenVideo(e, t, i = !0) {
            if (hl.appId == H.VIVO) return void (t && t());
            let a = new Date().getTime();
            if (hl.isReviewVersion()) return void (t && t());
            let s = hl.getFullscreedVideoTime();
            if (console.log("createFullscreenVideo" + s), 0 != s) if (a - this.fullscreenVideoTime < s && i) t && t(); else if (this.fullscreenVideoTime = a, 
            hl.isShowFullscreen) {
                let i = !0;
                M.show(function() {
                    i && t && t(), i = !1;
                }), ol.createFullscreenVideo(e, function() {
                    M.hide(), i && t && t(), i = !1;
                }, function() {
                    M.hide();
                });
            } else t(); else t && t();
        }
        static createCustomAd(e, t, i, a = !1) {
            if (this.isNoAd) return;
            if (v.NATIVE_ANDRIOD == hl.platform) return void (hl.appId == H.XM && ol.createCustomAd("andriod", e, t, i));
            if (!hl.carelessCtrl()) return;
            let s = u[j.customIdx % u.length];
            i == al.HORIZONTAL ? s = I[j.customIdx % I.length] : i == al.VERTICAL ? s = y[j.customIdx % y.length] : i == al.MATRIX ? s = f[j.customIdx % f.length] : i == al.SINGLE_1 && (s = m[j.customIdx % m.length]), 
            s ? (i == al.HORIZONTAL ? ol.createCustomAd(I[j.customIdx % I.length], e, t, i, null, null, a) : i == al.VERTICAL ? ol.createCustomAd(y[j.customIdx % y.length], e, t, i, null, null, a) : i == al.MATRIX ? ol.createCustomAd(f[j.customIdx % f.length], e, t, i, null, null, a) : i == al.SINGLE_1 ? ol.createCustomAd(m[j.customIdx % m.length], e, t, i, null, null, a) : ol.createCustomAd(u[j.customIdx % u.length], e, t, i, null, null, a), 
            j.customIdx++) : console.log("没有可用custom id");
        }
        static preloadCustom() {
            let e = ol.getCustomMatrixSize(), t = Laya.stage.width / 2 - e.w - 16, i = Laya.stage.height / 2 - e.h / 2, a = Laya.stage.width / 2 + 16;
            this.createCustomAd(t, i, al.MATRIX, !0), this.createCustomAd(a, i, al.MATRIX, !0);
        }
        static showCustom(e, t, i = al.SINGLE, a = null, s = null, n = null) {
            if (hl.platform != v.WX && hl.platform != v.QQ && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return;
            let o = u[j.customIdx % u.length];
            if (i == al.HORIZONTAL ? o = I[j.customIdx % I.length] : i == al.VERTICAL ? o = y[j.customIdx % y.length] : i == al.MATRIX ? o = f[j.customIdx % f.length] : i == al.SINGLE_1 ? o = m[j.customIdx % m.length] : i == al.SINGLE_2 && (o = p[j.customIdx % m.length]), 
            !o && v.NATIVE_ANDRIOD != hl.platform) return void console.log("没有可用custom id");
            let r = o;
            if (hl.platform == v.NATIVE_ANDRIOD && (r = "andriod", i != al.SINGLE)) return;
            let l = r + "_" + i + "_" + e + "_" + t;
            ol.showCustomAd(r, e, t, i, function() {
                a && a(), null != j.customCount[l] ? j.customCount[l]++ : j.customCount[l] = 0;
            }, function(a) {
                if (!a && (i == al.SINGLE || i == al.SINGLE_1 || i == al.VERTICAL || i == al.SINGLE_2) && tl.getInstance().ruleCtrl(3)) {
                    let i = j.getWXChannelIcon();
                    i.x = e, i.y = t;
                }
                s && s();
            });
        }
        static hideCustom(e, t, i = al.SINGLE, a = 0) {
            if (hl.platform != v.WX && hl.platform != v.QQ && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return;
            let s = u[j.customIdx % u.length];
            if (i == al.HORIZONTAL ? s = I[j.customIdx % I.length] : i == al.VERTICAL ? s = y[j.customIdx % y.length] : i == al.MATRIX ? s = f[j.customIdx % f.length] : i == al.SINGLE_1 ? s = m[j.customIdx % m.length] : i == al.SINGLE_2 && (s = p[j.customIdx % m.length]), 
            !s && v.NATIVE_ANDRIOD != hl.platform) return void console.log("没有可用custom id");
            let n = s;
            if (hl.platform == v.NATIVE_ANDRIOD && (n = "andriod", i != al.SINGLE)) return;
            if ((i == al.SINGLE || i == al.SINGLE_1 || i == al.VERTICAL || i == al.SINGLE_2) && tl.getInstance().ruleCtrl(3)) for (let i in this.wxChannelIconList) {
                let a = this.wxChannelIconList[i];
                a.x == e && a.y == t && (a.active = !1);
            }
            ol.hideCustomAd(n, e, t, i);
            let o = n + "_" + i + "_" + e + "_" + t;
            null != j.customCount[o] ? j.customCount[o] >= hl.getCustomCount() && (console.log("格子刷新" + o), 
            j.customCount[o] = 0, ol.createCustomAd(n, e, t, i)) : j.customCount[o] = 0;
        }
        static getWXChannelIcon() {
            for (let e = 0; e < this.wxChannelIconList.length; e++) {
                let t = this.wxChannelIconList[e];
                if (!t.active) return t.active = !0, t;
            }
            let e = new Q();
            return e.zOrder = S.LOADING, Laya.stage.addChild(e), this.wxChannelIconList.push(e), 
            e;
        }
    }
    j.share = {
        success: null,
        fail: null,
        shareSec: null,
        dialog: !1,
        exe: null,
        configSec: null,
        cancel: null
    }, j.interstitialIdx = null, j.bannerIdx = null, j.appBoxIdx = null, j.girdIdx = null, 
    j.oppoGamePortalIdx = null, j.nativeIdx = null, j.nativeExtendList = {
        data: null,
        ad: null
    }, j.nativeIconIdx = null, j.nativeExtendIconList = {
        data: null,
        ad: null
    }, j.isNoAd = !1, j.showBannerCount = 0, j.isOnceCreateBanner = !0, j.customIdx = null, 
    j.customCount = {}, j.fullscreenVideoTime = new Date().getTime(), j.interTouchCount = 0, 
    j.wxChannelIconList = [];
    class J {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new J();
                a.id = i.id, a.star = i.star, a.lv = i.lv, a.name = i.name, a.name2 = i.name2, a.icon = i.icon, 
                J.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (J.cache[e]) return J.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return J.cache[this.keys[e]] ? J.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return J.cache;
        }
        clear() {
            J.cache = {};
        }
    }
    J.cache = {}, J.keys = [];
    class $ extends Laya.Script {
        onAwake() {
            if (this.owner instanceof Laya.Image) {
                let e = this.owner;
                Laya.loader.load(e.skin, Laya.Handler.create(this, function() {
                    let t = new Laya.Image("sub1/ui/common/img_25.png");
                    t.x = 0, t.y = 0, t.zOrder = -100, this.imgLight = t, e.addChild(t);
                    let i = t.height / t.width;
                    t.height = e.height, t.width = t.height / i, t.x = -t.width, t.alpha = .2, t.blendMode = "lighter", 
                    Laya.Tween.to(t, {
                        x: e.width + 40
                    }, 600, null, null, 1e3).repeat = 0;
                    let a = new Laya.Image(e.skin);
                    a.width = e.width, a.height = e.height, a.x = 0, a.y = 0, a.sizeGrid = e.sizeGrid, 
                    e.mask = a;
                }));
            }
        }
        onDestroy() {
            Laya.timer.clearAll(this), this.imgLight && (Laya.Tween.clearAll(this.imgLight), 
            this.imgLight = null);
        }
    }
    class ee {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new ee();
                a.id = i.id, a.objName = i.objName, a.cnName = i.cnName, a.parentNode = i.parentNode, 
                a.partType = i.partType, a.cost = i.cost, a.grade = i.grade, a.icon = i.icon, a.costType = i.costType, 
                a.activityType = i.activityType, a.hd = i.hd, ee.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (ee.cache[e]) return ee.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return ee.cache[this.keys[e]] ? ee.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return ee.cache;
        }
        clear() {
            ee.cache = {};
        }
    }
    ee.cache = {}, ee.keys = [];
    let te = {
        PLAYER: "player",
        CAMREA: "Camera",
        AI: "cook",
        LIGHT: "Directional Light",
        NAV_MESH: "NavMesh",
        ROBOT: "robot",
        FIRE_EFFECT: "fireEffect",
        BULLET: "bullet",
        BUNKERPOINTS: "bunkerPoints",
        AIR_DROP_POINTS: "airDropPoints"
    }, ie = {
        BULLET3: "Bullet3",
        DRAGON_BULLET3: "bullet_zongzi",
        HALIMOBANG: "halimobang",
        DI_JIA: "dijia",
        SHIELD: "Shield",
        COMPOSE1: "compose1",
        COMPOSE2: "compose2",
        FIRE_END: "jida",
        OTHER_ARM: "huanrao",
        DROP_ARM_EFFECT: "baowei",
        JU_LONG: "julong",
        BIANBIAN: "bianbian",
        HUAYAN: "huoyan",
        RANSHAO: "ranshao"
    }, ae = {
        BODY: "BODY",
        HEAD: "HEAD",
        LEG: "LEG",
        ARM: "ARM"
    }, se = {
        NORMAL: 1,
        SPECIAL: 2
    };
    class ne {
        constructor() {}
        getKey() {
            return this.thisBody.onlyID > this.otherBody.onlyID ? this.otherBody.onlyID + "_" + this.thisBody.onlyID : this.thisBody.onlyID + "_" + this.otherBody.onlyID;
        }
        setBody(e, t) {
            this.thisBody = e, this.otherBody = t;
        }
    }
    class oe {
        constructor() {
            this.point = 0;
        }
        init(e) {
            this.pool = [], this.pool.length = e;
            for (var t = 0; t < e; t++) this.pool[t] || (this.pool[t] = new ne());
            this.point = e - 1;
        }
        get() {
            let e;
            return this.point < 0 ? (this.point = 0, e = new ne()) : e = this.pool[this.point], 
            this.point--, e;
        }
        giveBack(e) {
            this.point++, this.point == this.pool.length ? this.pool.push(e) : this.pool[this.point] = e;
        }
        static get instance() {
            return oe._instance || (oe._instance = new oe()), oe._instance;
        }
    }
    class re {
        static getOnlyID() {
            return re.currentID += 1, re.currentID;
        }
    }
    re.currentID = 0;
    class le {
        constructor(e = !1, t, i, a) {
            this.collider = t, this.point = i, this.succeeded = e, this.distance = a;
        }
    }
    var he, ce = Laya.BoundsOctree, de = Laya.BoundBox, ge = Laya.BoundSphere, ue = Laya.Vector3, me = Laya.MeshSprite3D, pe = Laya.SkinnedMeshSprite3D, ye = Laya.Sprite3D, Ie = Laya.Matrix4x4;
    class fe {
        constructor(e, t = !1, i = 0) {
            this._boundBox = new de(new ue(0, 0, 0), new ue(0, 0, 0)), this._boundSpheres = new ge(new ue(0, 0, 0), 0), 
            this._indexInOctreeMotionList = -1, this.isActive = !0, this.isStatic = t, this.layer = i, 
            this.owner = e, this.onlyID = re.getOnlyID();
        }
        static overwrite() {}
        isCollision(e) {
            return 0;
        }
        intersectsRay(e, t) {
            return -1;
        }
        static updataBoundBox() {
            fe.boundBox.setCenterAndExtent(fe.centerSprite, fe.extents);
        }
        static findAllMesh(e, t, i) {
            var a, s;
            if (t || (t = []), e instanceof ye) if (e instanceof me) {
                if ((a = e.meshFilter.sharedMesh) && t.push(a), i.push(e), 0 != e.numChildren) for (var n = 0; n < e.numChildren; n++) s = e.getChildAt(n), 
                fe.findAllMesh(s, t, i);
            } else if (e instanceof pe) {
                if ((a = e.meshFilter.sharedMesh) && t.push(a), i.push(e), 0 != e.numChildren) for (var o = 0; o < e.numChildren; o++) s = e.getChildAt(o), 
                fe.findAllMesh(s, t, i);
            } else if (0 != e.numChildren) for (var r = 0; r < e.numChildren; r++) s = e.getChildAt(r), 
            fe.findAllMesh(s, t, i);
        }
        _getOctreeNode() {
            return this._octreeNode;
        }
        _setOctreeNode(e) {
            this._octreeNode = e;
        }
        _getIndexInMotionList() {
            return this._indexInOctreeMotionList;
        }
        _setIndexInMotionList(e) {
            this._indexInOctreeMotionList = e;
        }
        get boundingSphere() {
            return this._boundSpheres;
        }
        get boundingBox() {
            return this._boundBox;
        }
        static isBoundsCollision(e, t) {
            return !!t._octreeNode.isCollidingWithBoundBox(e.boundingBox);
        }
        static rayCastAll(e, t, i) {
            let a = Ee.instance.staticList;
            for (let s in a) {
                let n = a[s];
                if (i == n.layer) {
                    let i = new ue(), a = n.intersectsRay(e, i);
                    if (-1 != a) {
                        let e = new le(!0, n, i, a);
                        t.push(e);
                    }
                }
            }
        }
        static rayCast(e, t) {
            let i = new Array();
            if (fe.rayCastAll(e, i, t), i.length > 0) {
                let e = 268435455, t = 0;
                for (let a = 0; a < i.length; a++) i[a].distance < e && (t = a, e = i[a].distance);
                return i[t];
            }
            return null;
        }
        static clamps(e, t, i, a, s = []) {
            if (e.x == t.x && e.y == t.y && e.z == t.z) return t.cloneTo(i), void t.cloneTo(a);
            let n = [];
            Laya.Vector3.subtract(t, e, this._ray1.direction), Laya.Vector3.normalize(this._ray1.direction, this._ray1.direction), 
            e.cloneTo(this._ray1.origin);
            let o = Laya.Vector3.distance(e, t);
            fe.getOCTree().getCollidingWithRay(this._ray1, n, o, -1);
            let r, l, h = 16777215;
            for (let e = 0, t = n.length; e < t; e++) {
                let t = !1;
                for (let i = 0; i < s.length; i++) {
                    let a = n[e];
                    if (a.onlyID == s[i]) {
                        t = !0;
                        break;
                    }
                    if (-1 != a.layer) {
                        t = !0;
                        break;
                    }
                }
                if (t) continue;
                let i = n[e].orientedBoundBox;
                ue.scale(i.extents, -1, this._tempV31), i.transformation.invert(this._tempM0), ue.TransformNormal(this._ray1.direction, this._tempM0, this._ray2.direction), 
                ue.transformCoordinate(this._ray1.origin, this._tempM0, this._ray2.origin), this._boxBound1.min = this._tempV31, 
                this._boxBound1.max = i.extents;
                let a = Laya.CollisionUtils.intersectsRayAndBoxRD(this._ray2, this._boxBound1);
                -1 != a && a < h && (h = a, this._ray2.direction.cloneTo(this._ray3.direction), 
                this._ray2.origin.cloneTo(this._ray3.origin), this._boxBound1.cloneTo(this._boxBound2), 
                this._tempM0.cloneTo(this._tempM1), r = i, l = n[e]);
            }
            if (h < 16777215) {
                if (h > o) return t.cloneTo(i), void t.cloneTo(a);
                if (ue.scale(this._ray3.direction, h, a), ue.add(this._ray3.origin, a, a), Math.abs(a.x - this._boxBound2.min.x) < 1e-5 ? (this._tempV32.setValue(-1, 0, 0), 
                this._tempV33.setValue(this._boxBound2.min.x, 0, 0)) : Math.abs(a.x - this._boxBound2.max.x) < 1e-5 ? (this._tempV32.setValue(1, 0, 0), 
                this._tempV33.setValue(this._boxBound2.max.x, 0, 0)) : Math.abs(a.y - this._boxBound2.min.y) < 1e-5 ? (this._tempV32.setValue(0, -1, 0), 
                this._tempV33.setValue(0, this._boxBound2.min.y, 0)) : Math.abs(a.y - this._boxBound2.max.y) < 1e-5 ? (this._tempV32.setValue(0, 1, 0), 
                this._tempV33.setValue(0, this._boxBound2.max.y, 0)) : Math.abs(a.z - this._boxBound2.min.z) < 1e-5 ? (this._tempV32.setValue(0, 0, -1), 
                this._tempV33.setValue(0, 0, this._boxBound2.min.z)) : Math.abs(a.z - this._boxBound2.max.z) < 1e-5 && (this._tempV32.setValue(0, 0, 1), 
                this._tempV33.setValue(0, 0, this._boxBound2.max.z)), 0 == h && ue.dot(this._tempV32, this._ray3.direction) >= 0) return t.cloneTo(i), 
                ue.transformV3ToV3(a, r.transformation, a), l;
                ue.transformV3ToV3(t, this._tempM1, this._tempV34);
                let e = ue.dot(this._tempV33, this._tempV32);
                ue.scale(this._tempV32, -1, this._tempV32);
                let s = -1 * (ue.dot(this._tempV32, this._tempV34) + e);
                return this._tempV32.cloneTo(i), ue.scale(i, s, i), ue.add(i, this._tempV34, i), 
                ue.transformV3ToV3(i, r.transformation, i), ue.transformV3ToV3(a, r.transformation, a), 
                l;
            }
            return t.cloneTo(i), void t.cloneTo(a);
        }
        static isCollisionFloor(e, t) {
            if (t.y > e.y) return {
                isCollise: !1,
                y: t.y
            };
            e.cloneTo(this._ray1.origin), this._ray1.direction.setValue(0, -1, 0), t.y -= .1;
            let i = 1, a = Math.abs(e.y - t.y);
            a > i && (i = a);
            let s = [];
            fe.getOCTree().getCollidingWithRayWithLayer(this._ray1, s, i, -1);
            let n, o, r = 16777215;
            for (let e = 0, t = s.length; e < t; e++) {
                let t = !1;
                if (-1 != s[e].layer) {
                    t = !0;
                    break;
                }
                if (t) continue;
                let i = s[e].orientedBoundBox;
                ue.scale(i.extents, -1, this._tempV31), i.transformation.invert(this._tempM0), ue.TransformNormal(this._ray1.direction, this._tempM0, this._ray2.direction), 
                ue.transformCoordinate(this._ray1.origin, this._tempM0, this._ray2.origin), this._boxBound1.min = this._tempV31, 
                this._boxBound1.max = i.extents;
                let l = Laya.CollisionUtils.intersectsRayAndBoxRD(this._ray2, this._boxBound1);
                ue.scale(this._ray2.direction, l, this._tempV32), ue.add(this._ray2.origin, this._tempV32, this._tempV32);
                let h = !1;
                Math.abs(this._tempV32.x - this._boxBound1.min.x) < 1e-5 || Math.abs(this._tempV32.x - this._boxBound1.max.x) < 1e-5 || Math.abs(this._tempV32.y - this._boxBound1.min.y) < 1e-5 || (Math.abs(this._tempV32.y - this._boxBound1.max.y) < 1e-5 ? h = !0 : Math.abs(this._tempV32.z - this._boxBound1.min.z) < 1e-5 || Math.abs(this._tempV32.z - this._boxBound1.max.z)), 
                l < r && l >= 0 && a >= l && h && (r = l, this._ray2.direction.cloneTo(this._ray3.direction), 
                this._ray2.origin.cloneTo(this._ray3.origin), this._boxBound1.cloneTo(this._boxBound2), 
                this._tempM0.cloneTo(this._tempM1), n = i, o = s[e]);
            }
            return r < 16777215 ? (ue.scale(this._ray3.direction, r, this._tempV35), ue.add(this._ray3.origin, this._tempV35, this._tempV35), 
            ue.transformV3ToV3(this._tempV35, n.transformation, this._tempV35), a = Math.abs(this._tempV35.y - e.y), 
            Math.abs(r - a) > 1e-4 ? {
                isCollise: !1,
                y: t.y
            } : {
                isCollise: !0,
                y: this._tempV35.y
            }) : {
                isCollise: !1,
                y: t.y
            };
        }
        enable() {
            this.isActive = !0, this.isStatic ? Ee.instance.addStatic(this) : Ee.instance.addDY(this);
        }
        disable() {
            this.isActive = !1, this.remove();
        }
        destory() {
            this._octreeNode && this._octreeNode.remove(this), this._localmatrix4x4 = null, 
            this._worldMatrix4x4 = null, this._boundBox = null, this._boundSpheres = null, this._octreeNode = null, 
            this.bounds = null, this.owner = null;
        }
        remove() {
            this.isStatic ? Ee.instance.removeStatic(this) : Ee.instance.removeDY(this);
        }
        setOwner(e) {
            this.owner = e;
        }
        static getOCTree() {
            return this._octree || this.createOCTree(), this._octree;
        }
        static createOCTree() {
            this._octree = new ce(this.octreeInitialSize, new ue(0, 0, 0), this.octreeMinNodeSize, this.octreeLooseness);
        }
    }
    fe.TYPE_BOX = 0, fe.TYPE_SPHERE = 1, fe.TYPE_CUBESPRIT3D = 2, fe.centerSprite = new ue(0, 0, 0), 
    fe.extents = new ue(8, 8, 8), fe.boundBox = new de(new ue(), new ue()), fe.octreeInitialSize = 64, 
    fe.octreeLooseness = 1.25, fe.octreeMinNodeSize = 2, fe._tempV31 = new ue(), fe._tempV32 = new ue(), 
    fe._tempV33 = new ue(), fe._tempV34 = new ue(), fe._tempV35 = new ue(), fe._tempM0 = new Ie(), 
    fe._tempM1 = new Ie(), fe._boxBound1 = new de(new ue(), new ue()), fe._boxBound2 = new de(new ue(), new ue()), 
    fe._ray1 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3()), fe._ray2 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3()), 
    fe._ray3 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3()), fe.VectorOne = new ue(1, 1, 1), 
    fe.isDebug = !1, fe.overwrite();
    class Le {
        constructor() {
            this._lastTriggerQueue = {}, this._triggerQueue = {}, oe.instance.init(10);
        }
        allTriggerDetection(e, t) {
            if (this._lastTriggerQueue = this._triggerQueue, this._triggerQueue = {}, t) {
                for (var i in t) {
                    (a = t[i]).isDetection = !1;
                }
                for (var i in t) {
                    var a = t[i];
                    let e = [];
                    fe.getOCTree().getCollidingWithBoundBox(a.boundingBox, e);
                    for (let t = 0, i = e.length; t < i; t++) e[t].isActive && this.singleTriggerDetection(a, e[t]);
                    for (var s in t) {
                        var n = t[s];
                        n.isDetection || this.singleTriggerDetection(a, n);
                    }
                    a.isDetection = !0;
                }
            }
        }
        singleTriggerDetection(e, t) {
            if (e.onlyID != t.onlyID && 0 != e.isCollision(t)) {
                var i = oe.instance.get();
                i.setBody(e, t);
                var a = this.getKey(e, t);
                this._triggerQueue[a] = i;
            }
        }
        getKey(e, t) {
            return e.onlyID > t.onlyID ? t.onlyID + "_" + e.onlyID : e.onlyID + "_" + t.onlyID;
        }
        get lastTriggerQueue() {
            return this._lastTriggerQueue;
        }
        get triggerQueue() {
            return this._triggerQueue;
        }
        clean() {
            this._lastTriggerQueue = {}, this._triggerQueue = {};
        }
    }
    class we {}
    we.TRIGGER_ENTER = "TriggerEnter", we.TRIGGER_STAY = "TriggerStay", we.TRIGGER_EXIT = "TriggerExit";
    class be {
        distributedAllEvent(e, t) {
            for (var i in t) {
                (a = e[i]) ? (this.distributedEvent(we.TRIGGER_STAY, t[i]), oe.instance.giveBack(a), 
                delete e[i]) : this.distributedEvent(we.TRIGGER_ENTER, t[i]);
            }
            for (var i in e) {
                var a = e[i];
                this.distributedEvent(we.TRIGGER_EXIT, a), oe.instance.giveBack(a);
            }
        }
        distributedEvent(e, t) {
            t.thisBody.owner.event(e, t.otherBody), t.otherBody.owner.event(e, t.thisBody);
        }
    }
    class Ee {
        constructor() {
            this._ray = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3()), this.staticSprite3D = {}, 
            this.dySprite3D = {}, this.triggerStateDetection = new Le(), this.distributedTriggerEvent = new be();
        }
        static get instance() {
            return Ee._instance || (Ee._instance = new Ee()), Ee._instance;
        }
        update() {
            this.detection();
        }
        detection() {
            for (let e in this.dySprite3D) this.dySprite3D[e].onUpdate();
        }
        addStatic(e) {
            this.staticSprite3D[e.onlyID] = e;
        }
        addDY(e) {
            this.dySprite3D[e.onlyID] = e;
        }
        get staticList() {
            return this.staticSprite3D;
        }
        get dyList() {
            return this.dySprite3D;
        }
        removeStatic(e) {
            delete this.staticSprite3D[e.onlyID];
        }
        removeDY(e) {
            delete this.dySprite3D[e.onlyID];
        }
        static clean() {
            if (Ee._instance) {
                Ee._instance.triggerStateDetection.clean();
                for (let e in Ee._instance.staticSprite3D) Ee._instance.staticSprite3D[e].destory();
                Ee._instance.staticSprite3D = {};
                for (let e in Ee._instance.dySprite3D) Ee._instance.dySprite3D[e].destory();
                Ee._instance.dySprite3D = {}, fe.createOCTree();
            }
        }
    }
    class Ce {
        constructor(e) {
            this.scale = 1, this.currTimer = 0, this.currFrame = 0, this._delta = 0, this._map = [], 
            this._handlers = [], this._temp = [], this._count = 0, this.fixDelta = 0, this.setFixDelta(e), 
            this.currTimer = new Date().getTime();
        }
        static create(e) {
            return Ce.gSysTimer ? Ce.gSysTimer : (Ce.gSysTimer = new Ce(e), Ce.gSysTimer);
        }
        get delta() {
            return this._delta;
        }
        setFixDelta(e) {
            this.fixDelta = e, this._delta = this.fixDelta * this.scale;
        }
        update() {
            if (this.scale <= 0) this._delta = 0; else {
                var e = this.currFrame = this.currFrame + this.scale;
                this._delta = this.fixDelta * this.scale;
                var t = this.currTimer = this.currTimer + this._delta, i = this._handlers;
                this._count = 0;
                for (var a = 0, s = i.length; a < s; a++) {
                    var n = i[a];
                    if (null !== n.method) {
                        var o = n.userFrame ? e : t;
                        if (o >= n.exeTime) if (n.repeat) for (;o >= n.exeTime; ) n.exeTime += n.delay, 
                        n.run(!1); else n.run(!0);
                    } else this._count++;
                }
                (this._count > 30 || e % 200 == 0) && this._clearHandlers();
            }
        }
        _clearHandlers() {
            for (var e = this._handlers, t = 0, i = e.length; t < i; t++) {
                var a = e[t];
                null !== a.method ? this._temp.push(a) : this._recoverHandler(a);
            }
            this._handlers = this._temp, e.length = 0, this._temp = e;
        }
        _recoverHandler(e) {
            this._map[e.key] == e && (this._map[e.key] = null), e.clear(), Ce._pool.push(e);
        }
        _create(e, t, i, a, s, n, o) {
            if (!i) return s.apply(a, n), null;
            if (o) {
                var r = this._getHandler(a, s);
                if (r) return r.repeat = t, r.userFrame = e, r.delay = i, r.caller = a, r.method = s, 
                r.args = n, r.exeTime = i + (e ? this.currFrame : this.currTimer), r;
            }
            return (r = Ce._pool.length > 0 ? Ce._pool.pop() : new ve()).repeat = t, r.userFrame = e, 
            r.delay = i, r.caller = a, r.method = s, r.args = n, r.exeTime = i + (e ? this.currFrame : this.currTimer), 
            this._indexHandler(r), this._handlers.push(r), r;
        }
        _indexHandler(e) {
            var t = e.caller, i = e.method, a = t ? t.$_GID || (t.$_GID = Laya.Utils.getGID()) : 0, s = i.$_TID || (i.$_TID = 1e5 * Ce._mid++);
            e.key = a + s, this._map[e.key] = e;
        }
        once(e, t, i, a = null, s = !0) {
            this._create(!1, !1, e, t, i, a, s);
        }
        loop(e, t, i, a = null, s = !0, n = !1) {
            var o = this._create(!1, !0, e, t, i, a, s);
            o && (o.jumpFrame = n);
        }
        frameOnce(e, t, i, a = null, s = !0) {
            this._create(!0, !1, e, t, i, a, s);
        }
        frameLoop(e, t, i, a = null, s = !0) {
            this._create(!0, !0, e, t, i, a, s);
        }
        toString() {
            return " handlers:" + this._handlers.length + " pool:" + Ce._pool.length;
        }
        clear(e, t) {
            var i = this._getHandler(e, t);
            i && (this._map[i.key] = null, i.key = 0, i.clear());
        }
        clearAll(e) {
            if (e) for (var t = 0, i = this._handlers.length; t < i; t++) {
                var a = this._handlers[t];
                a.caller === e && (this._map[a.key] = null, a.key = 0, a.clear());
            }
        }
        _getHandler(e, t) {
            var i = e ? e.$_GID || (e.$_GID = Laya.Utils.getGID()) : 0, a = t.$_TID || (t.$_TID = 1e5 * Ce._mid++);
            return this._map[i + a];
        }
        callLater(e, t, i = null) {
            Laya.CallLater.I.callLater(e, t, i);
        }
        runCallLater(e, t) {
            Laya.CallLater.I.runCallLater(e, t);
        }
        runTimer(e, t) {
            var i = this._getHandler(e, t);
            i && null != i.method && (this._map[i.key] = null, i.run(!0));
        }
        pause() {
            this.scale = 0;
        }
        resume() {
            this.scale = 1;
        }
    }
    Ce.gSysTimer = null, Ce._pool = [], Ce._mid = 1;
    class ve {
        clear() {
            this.caller = null, this.method = null, this.args = null;
        }
        run(e) {
            var t = this.caller;
            if (t && t.destroyed) return this.clear();
            var i = this.method, a = this.args;
            e && this.clear(), null != i && (a ? i.apply(t, a) : i.call(t));
        }
    }
    class xe {
        static downloadPackage(t, i, a) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return void i();
            xe.cleanOtherVer();
            let s = `${gl}/${t}`, n = wx.getFileSystemManager(), o = function() {
                q.recordSec(), wx.downloadFile({
                    url: `${xe.downloadUrl}/${hl.resVer}/${t}.zip`,
                    header: null,
                    success: function(o) {
                        console.log("download success", `${xe.downloadUrl}/${hl.resVer}/${t}.zip`);
                        let r = function() {
                            n.unzip({
                                zipFilePath: o.tempFilePath,
                                targetPath: s,
                                success: function() {
                                    xe.logUserPackage();
                                    let a = wx.getStorageSync(e.RES_VERTION + hl.resVer), s = JSON.parse(a);
                                    s[t] = 1, wx.setStorageSync(e.RES_VERTION + hl.resVer, JSON.stringify(s)), i && i();
                                },
                                fail: function(e) {
                                    console.log("upzip fail", e), a && a();
                                }
                            });
                        };
                        n.access({
                            path: s,
                            success: function() {
                                console.log(s + "is exist"), r();
                            },
                            fail: function() {
                                console.log(s + "is no"), n.mkdirSync(s, !0), r();
                            }
                        });
                    },
                    fail: function() {
                        console.log("download fail", `${xe.downloadUrl}/${hl.resVer}/${t}.zip`), a();
                    },
                    complete: null
                });
            }, r = wx.getStorageSync(e.RES_VERTION + hl.resVer);
            r && "" != r ? n.access({
                path: s,
                success: function() {
                    console.log(t + "is exist"), i();
                },
                fail: function() {
                    console.log(t + "is no"), o();
                }
            }) : (wx.setStorageSync(e.RES_VERTION + hl.resVer, JSON.stringify({})), o());
        }
        static unZip(t, i, a) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399 || !hl.isUnZip) return void i();
            let s = `${gl}/${t}/compress`, n = Laya.LocalStorage.getItem(e.RES_VERTION + hl.resVer);
            n && "" != n || Laya.LocalStorage.setItem(e.RES_VERTION + hl.resVer, JSON.stringify({})), 
            ol.accessFile(s, function() {
                console.log(`${gl}/${t} is exist`), i();
            }, function() {
                console.log(`${gl}/${t} no exist`), function() {
                    let n = function() {
                        ol.unzip(`/${t}/compress.zip`, s, function() {
                            console.log(`unzip ${t} success`);
                            let a = Laya.LocalStorage.getItem(e.RES_VERTION + hl.resVer), s = JSON.parse(a);
                            s[t] = 1, Laya.LocalStorage.setItem(e.RES_VERTION + hl.resVer, JSON.stringify(s)), 
                            i();
                        }, function() {
                            console.log(`unzip ${t} fail`), a();
                        });
                    };
                    ol.mkdir(s, function() {
                        n();
                    }, function() {
                        n();
                    });
                }();
            });
        }
        static deletePackage(t) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return;
            xe.logUserPackage();
            let i = `${gl}/${t}`;
            ol.rmdir(i, function() {
                console.log("deletePackage success"), xe.logUserPackage();
                let i = Laya.LocalStorage.getItem(e.RES_VERTION + hl.resVer);
                if (i && i.length > 0) {
                    let a = JSON.parse(i);
                    a[t] = null, delete a[t], Laya.LocalStorage.setItem(e.RES_VERTION + hl.resVer, JSON.stringify(a));
                }
            }, null);
        }
        static cleanOtherVer(t = null) {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && ol.readdir(dl, function(i) {
                if (console.log("cleanOtherVer readdir filse", i), hl.platform == v.VIVO) for (let e in i) {
                    let t = i[e].split(dl + "/");
                    i[e] = t[1];
                }
                let a = 0, s = 0;
                for (let n in i) i[n] != hl.resVer && (s++, Laya.LocalStorage.removeItem(e.RES_VERTION + i[n]), 
                ol.rmdir(dl + "/" + i[n], function() {
                    a++, console.log("cleanOtherVer success rmdir files = ", i[n]), a == s && t && t();
                }, function() {
                    console.log("cleanOtherVer fail rmdir");
                }));
                0 == s && t && t();
            }, function() {});
        }
        static logUserPackage() {
            ol.fileStat(dl, function(e) {
                console.log("logUserPackage", e);
            }, null);
        }
        static loadSubpackage(e, t, i, a = null) {
            hl.platform != v.WEB && hl.platform != v.OPPO && hl.platform != v.WEB_4399 ? ol.loadSubpackage(e, t, i, a) : t();
        }
        static loadRes(e, t, i = null) {
            if (hl.platform != v.WEB && hl.isUnZip) if (e instanceof Object) for (let t in e) e[t].type != Laya.Loader.ATLAS && e[t].type != Laya.Loader.JSON && (e[t].url = `${this.getUserPackageRoot()}/${e[t].url}`); else {
                let t = Laya.Loader.getTypeFromUrl(e);
                t != Laya.Loader.ATLAS && t != Laya.Loader.JSON && (e = `${this.getUserPackageRoot()}/${e}`);
            }
            let a = 0, s = 0, n = 0;
            e instanceof Object && (a = e.length, s = 1 / a), i && (i.once = !1);
            let o = function() {
                if (e instanceof Object) if (e.length > 0) {
                    let t = e.splice(0, 1);
                    Laya.loader.create(t, Laya.Handler.create(this, function() {
                        n++, o();
                    }), Laya.Handler.create(this, function(e) {
                        i && i.runWith(e * s + n / a);
                    }));
                } else i && i.recover(), t.run(); else Laya.loader.create(e, t, i);
            };
            o();
        }
        static getUserPackageRoot() {
            let e = "";
            return hl.platform == v.WX && (e = wx.env.USER_DATA_PATH), e;
        }
        static getRes(e) {
            let t = e;
            if (hl.platform != v.WEB && hl.isUnZip && hl.platform != v.WEB_4399) {
                let i = Laya.Loader.getTypeFromUrl(e);
                i != Laya.Loader.ATLAS && i != Laya.Loader.JSON && (t = `${gl}/${e}`);
            }
            return Laya.loader.getRes(t);
        }
        static cleanRes(e) {
            let t = e;
            hl.platform != v.WEB && hl.isUnZip && hl.platform != v.WEB_4399 && Laya.Loader.getTypeFromUrl(e) != Laya.Loader.ATLAS && (t = `${gl}/${e}`);
            let i = xe.getRes(e);
            i && i.destroy && (i.destroy(), console.log("清理模型与资源 path = ", e)), Laya.loader.clearRes(t), 
            Laya.Resource.destroyUnusedResources();
        }
    }
    xe.downloadUrl = "https://zombie-1255397116.file.myqcloud.com/";
    class Be {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new Be();
                a.id = i.id, a.objName = i.objName, a.cnName = i.cnName, a.cost = i.cost, a.grade = i.grade, 
                a.icon = i.icon, a.camp = i.camp, a.costType = i.costType, a.activityType = i.activityType, 
                a.hd = i.hd, Be.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (Be.cache[e]) return Be.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return Be.cache[this.keys[e]] ? Be.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Be.cache;
        }
        clear() {
            Be.cache = {};
        }
    }
    Be.cache = {}, Be.keys = [];
    class Ae {
        static onlyOneRandomInt(e, t) {
            return Math.floor(Math.random() * (e - t) + t);
        }
        static onlyOneRandomIntOrFloat(e, t) {
            return Math.random() * (e - t) + t;
        }
        static getRandomArrayElements(e, t) {
            for (var i, a, s = e.slice(0), n = e.length, o = n - t; n-- > o; ) i = s[a = Math.floor((n + 1) * Math.random())], 
            s[a] = s[n], s[n] = i;
            return s.slice(o);
        }
        static roa(e, t) {
            let i = [];
            for (let s = 0; s < t; s++) {
                var a = Math.floor(Math.random() * e.length);
                i.push(e[a]), e.splice(a, 1);
            }
            return i;
        }
    }
    !function(e) {
        e.IDLE = "idle", e.RUN = "run", e.DUNXIA = "dunxia", e.DEATH = "death", e.ATTACK = "attack", 
        e.RELOAD = "reload", e.UP = "up", e.MENU_IDLE = "shouye_idle", e.RUN_LEFT = "run_left", 
        e.RUN_RIGHT = "run_right", e.JUMP = "jump", e.SWITCH = "switch";
    }(he || (he = {}));
    class _e {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new _e();
                a.id = i.id, a.name = i.name, a.objName = i.objName, a.type = i.type, a.interval = i.interval, 
                a.attackSound = i.attackSound, a.magazineBullet = i.magazineBullet, a.bullets = i.bullets, 
                a.bulletChangeTimer = i.bulletChangeTimer, a.hit = i.hit, a.isCanOpMirror = i.isCanOpMirror, 
                a.cutScale = i.cutScale, a.attackDis = i.attackDis, a.icon = i.icon, a.recoilForce = JSON.parse(i.recoilForce), 
                a.reloadsound = i.reloadsound, a.firestarter = i.firestarter, a.ballistic = i.ballistic, 
                a.bullethole = i.bullethole, a.price = i.price, a.produce = i.produce, a.priceByDiamond = JSON.parse(i.priceByDiamond), 
                a.grade = i.grade, a.lv = i.lv, a.pierceThrough = i.pierceThrough, a.range = i.range, 
                a.sight = i.sight, a.movingSpeed = i.movingSpeed, a.biochemicalCharging = i.biochemicalCharging, 
                a.accurate = i.accurate, _e.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (_e.cache[e]) return _e.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return _e.cache[this.keys[e]] ? _e.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return _e.cache;
        }
        clear() {
            _e.cache = {};
        }
    }
    _e.cache = {}, _e.keys = [];
    class Se {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new Se();
                a.id = i.id, a.name = i.name, a.objName = i.objName, a.type = i.type, a.interval = i.interval, 
                a.attackSound = i.attackSound, a.magazineBullet = i.magazineBullet, a.bullets = i.bullets, 
                a.bulletChangeTimer = i.bulletChangeTimer, a.hit = i.hit, a.bodyMultiple = i.bodyMultiple, 
                a.headHit = i.headHit, a.limbMultiple = i.limbMultiple, a.limbHit = i.limbHit, a.maxBodyHit = i.maxBodyHit, 
                a.maxHeadHit = i.maxHeadHit, a.maxLimbHit = i.maxLimbHit, a.isCanOpMirror = i.isCanOpMirror, 
                a.icon = i.icon, a.recoilForce = JSON.parse(i.recoilForce), a.reloadsound = i.reloadsound, 
                a.firestarter = i.firestarter, a.beatEffect = i.beatEffect, a.ballistic = i.ballistic, 
                a.bullethole = i.bullethole, a.price = i.price, a.produce = i.produce, a.priceByDiamond = JSON.parse(i.priceByDiamond), 
                a.grade = i.grade, a.lv = i.lv, a.pierceThrough = i.pierceThrough, a.range = i.range, 
                a.sight = i.sight, a.movingSpeed = i.movingSpeed, a.biochemicalCharging = i.biochemicalCharging, 
                a.accurate = i.accurate, a.isNormal = i.isNormal, a.accurate_1 = i.accurate_1, a.isNormal_1 = i.isNormal_1, 
                Se.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (Se.cache[e]) return Se.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return Se.cache[this.keys[e]] ? Se.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Se.cache;
        }
        clear() {
            Se.cache = {};
        }
    }
    Se.cache = {}, Se.keys = [];
    class Te {
        static createSkin(e, t, i = !0, a, s = Ts.scene3d, n = !1, o = -1) {
            let r = tl.getInstance().getSelectRoleSkin();
            if (tl.getInstance().trialSkin && (r = tl.getInstance().trialSkin), !n && !i) {
                let e = [];
                if (1 == Rs.playerLogicalBaseLayer.skinType) if (o == Mr.TYPE_0) for (let t in Be.keys) {
                    let i = Be.getDataByKey(Be.keys[t]);
                    1 == i.camp && (i.hd && hl.platform != v.NATIVE_IOS && hl.platform != v.NATIVE_ANDRIOD || e.push(i));
                } else for (let t in Be.keys) {
                    let i = Be.getDataByKey(Be.keys[t]);
                    2 == i.camp && (i.hd && hl.platform != v.NATIVE_IOS && hl.platform != v.NATIVE_ANDRIOD || e.push(i));
                } else if (2 == Rs.playerLogicalBaseLayer.skinType) if (o == Mr.TYPE_0) for (let t in Be.keys) {
                    let i = Be.getDataByKey(Be.keys[t]);
                    2 == i.camp && (i.hd && hl.platform != v.NATIVE_IOS && hl.platform != v.NATIVE_ANDRIOD || e.push(i));
                } else for (let t in Be.keys) {
                    let i = Be.getDataByKey(Be.keys[t]);
                    1 == i.camp && (i.hd && hl.platform != v.NATIVE_IOS && hl.platform != v.NATIVE_ANDRIOD || e.push(i));
                }
                r = e[Ae.onlyOneRandomInt(0, e.length)].id;
            }
            i || n || Rs.drSkinList.push(r);
            let l = xe.getRes(ul.SKIN_PREFEB).getChildByName(Be.getDataByKey(r).objName), h = Laya.Sprite3D.instantiate(l, s);
            if (n || Mr.TYPE_0, i) {
                q.findChildByName(h, te.CAMREA);
            } else {
                let e = q.findChildByName(h, te.CAMREA);
                e && e.destroy();
            }
            return h.name = a, h.getChildAt(0).name = a, h.transform.position = e, tl.getInstance().trialSkin = null, 
            q.findChildByName(h, "jiaobiao").active = !1, q.findChildByName(h, "halo").active = !1, 
            h;
        }
        static createZombie(e, t, i = Ts.scene3d) {
            let a = xe.getRes(ul.SKIN_ZOMBIE).getChildByName("001");
            console.log("ZOMBIE" + a);
            let s, n = Laya.Sprite3D.instantiate(a, i), o = xe.getRes(ul.SKIN_PREFEB).getChildByName("life1");
            return (s = Laya.Sprite3D.instantiate(o, n.getChildAt(0))).transform.localPosition = new Laya.Vector3(0, 3.25, 0), 
            s.name = "life", n.name = t, n.getChildAt(0).name = t, n.transform.position = e, 
            n;
        }
        static createRoleViewSkin(e, t, i, a) {
            let s = xe.getRes(ul.SKIN_PREFEB).getChildByName(Be.getDataByKey(a).objName), n = Laya.Sprite3D.instantiate(s, t);
            if (!i) {
                let e = q.findChildByName(n, te.CAMREA);
                e && e.destroy();
            }
            return n.transform.position = e, q.findChildByName(n, "jiaobiao").active = !1, n;
        }
        static createMenuArm(e, t, i = 0) {
            let a = q.findChildByName(t, "buqiang"), s = q.findChildByName(t, "shouqiang"), n = q.findChildByName(t, "dao"), o = q.findChildByName(t, "shouliudan");
            a.destroyChildren(), s.destroyChildren(), n.destroyChildren(), o.destroyChildren();
            let r = q.findChildByName(t, "shouye_buqiang"), l = q.findChildByName(t, "shouye_shouqiang"), h = q.findChildByName(t, "shouye_dao"), c = q.findChildByName(t, "shouye_shouliudan");
            r.destroyChildren(), l.destroyChildren(), h.destroyChildren(), c.destroyChildren();
            let d, g = A.getDataByKey(e) ? A.getDataByKey(e) : _e.getDataByKey(e), u = xe.getRes(ul.WEAPON_PREFEB).getChildByName(g.objName);
            return (d = 2 == g.type ? Laya.Sprite3D.instantiate(u, h) : 4 == g.type ? Laya.Sprite3D.instantiate(u, l) : 8 == g.type ? Laya.Sprite3D.instantiate(u, c) : Laya.Sprite3D.instantiate(u, r)).transform.localPosition = new Laya.Vector3(), 
            d.transform.localRotationEuler = new Laya.Vector3(), t.getChildAt(0).getComponent(Laya.Animator).play(he.MENU_IDLE + (5 == g.type || 6 == g.type || 7 == g.type ? "1" : A.getDataByKey(e) ? A.getDataByKey(e).type : _e.getDataByKey(e).type)), 
            d;
        }
        static onLyToCreateArm(e, t, i = !1) {
            console.log("传入ID：", e);
            let a = xe.getRes(i ? ul.WEAPON_OTHER_PREFEB : ul.WEAPON_PREFEB).getChildByName(i ? Se.getDataByKey(e).objName : A.getDataByKey(e) ? A.getDataByKey(e).objName : _e.getDataByKey(e).objName);
            return Laya.Sprite3D.instantiate(a, t);
        }
        static getTrialArm(e) {
            tl.getInstance().trialArm = e;
        }
        static createParts(e, t, i, a = null, s = !0) {
            if (t) {
                if (null != e) {
                    let a = ee.getDataByKey(e);
                    if (a.hd && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS) return null;
                    if (s) for (let i = 0; i < ee.keys.length; i++) if (ee.getDataByKey(e).partType == ee.getDataByKey(ee.keys[i]).partType) {
                        let e = q.findChildByName(t, ee.getDataByKey(ee.keys[i]).parentNode);
                        e && e.destroyChildren();
                    }
                    let n = q.findChildByName(t, a.parentNode);
                    n || (n = t);
                    let o = xe.getRes(ul.PARTS_PREFEB).getChildByName(a.objName), r = Laya.Sprite3D.instantiate(o, n);
                    return r.transform.localPosition = new Laya.Vector3(0, 0, 0), r.transform.localRotationEuler = new Laya.Vector3(0, 0, 0), 
                    r.transform.localScale = i, console.log("父级：", r), r;
                }
                if (null == a) ; else if (1 == a || 3 == a) {
                    let e = q.findChildByName(t, "decorate1");
                    e && e.destroyChildren();
                } else if (2 == a) {
                    let e = q.findChildByName(t, "decorate2");
                    e && e.destroyChildren();
                }
                return null;
            }
        }
        static removePartsByTS(e, t) {
            console.log("num:", e, t);
            let i = q.findChildByName(t, "decorate1"), a = q.findChildByName(t, "decorate2");
            console.log("decorate1:", i, "decorate2:", a), 1 == e || 3 == e ? i.destroyChildren() : 2 == e && a.destroyChildren();
        }
        static createPartsByLocal(e, t = new Laya.Vector3(1, 1, 1)) {
            let i = q.findChildByName(e, "decorate1"), a = q.findChildByName(e, "decorate2");
            i.destroyChildren(), a.destroyChildren();
            let s = tl.getInstance().getTargetPart(1);
            null != s && this.createParts(s, e, t);
            let n = tl.getInstance().getTargetPart(2);
            null != n && this.createParts(n, e, t);
            let o = tl.getInstance().getTargetPart(3);
            null != o && this.createParts(o, e, t), console.log("获取本地数据：", s, n, o, tl.getInstance().getPartsSkin());
        }
        static createAirDrop() {
            return xe.getRes(ul.WEAPON_OTHER_PREFEB).getChildByName("kongtou").clone();
        }
    }
    var De, Re = Laya.Vector3, Ne = Laya.Matrix4x4, Me = Laya.Ray, ke = Laya.BoundBox, Oe = Laya.MathUtils3D, Pe = Laya.CollisionUtils;
    !function(e) {
        e[e.Intersects = 2] = "Intersects", e[e.Contains = 1] = "Contains", e[e.Disjoint = 0] = "Disjoint";
    }(De || (De = {}));
    class Ve {
        constructor(e, t) {
            this.extents = e, this.transformation = t;
        }
        static createByBoundBox(e, t) {
            var i = e.min, a = e.max;
            Re.subtract(a, i, Ve._tempV30), Re.scale(Ve._tempV30, .5, Ve._tempV30), Re.add(i, Ve._tempV30, Ve._tempV31), 
            Re.subtract(a, Ve._tempV31, Ve._tempV32), Ne.translation(Ve._tempV31, Ve._tempM0);
            var s = Ve._tempV32.clone(), n = Ve._tempM0.clone();
            t.extents = s, t.transformation = n;
        }
        static createByMinAndMaxVertex(e, t) {
            return Re.subtract(t, e, Ve._tempV30), Re.scale(Ve._tempV30, .5, Ve._tempV30), Re.add(e, Ve._tempV30, Ve._tempV31), 
            Re.subtract(t, Ve._tempV31, Ve._tempV32), Ne.translation(Ve._tempV31, Ve._tempM0), 
            new Ve(Ve._tempV32, Ve._tempM0);
        }
        getCorners(e) {
            var t = Ve._tempV30, i = Ve._tempV31, a = Ve._tempV32, s = this.extents;
            t.x = s.x, t.y = t.z = 0, i.y = s.y, i.x = i.z = 0, a.z = s.z, a.x = a.y = 0, Re.TransformNormal(Ve._tempV30, this.transformation, Ve._tempV30), 
            Re.TransformNormal(Ve._tempV31, this.transformation, Ve._tempV31), Re.TransformNormal(Ve._tempV32, this.transformation, Ve._tempV32);
            var n = Ve._tempV33;
            this.transformation.getTranslationVector(n), e.length = 8, Re.add(n, Ve._tempV30, Ve._tempV34), 
            Re.add(Ve._tempV34, Ve._tempV31, Ve._tempV34), Re.add(Ve._tempV34, Ve._tempV32, e[0]), 
            Re.add(n, Ve._tempV30, Ve._tempV34), Re.add(Ve._tempV34, Ve._tempV31, Ve._tempV34), 
            Re.subtract(Ve._tempV34, Ve._tempV32, e[1]), Re.subtract(n, Ve._tempV30, Ve._tempV34), 
            Re.add(Ve._tempV34, Ve._tempV31, Ve._tempV34), Re.subtract(Ve._tempV34, Ve._tempV32, e[2]), 
            Re.subtract(n, Ve._tempV30, Ve._tempV34), Re.add(Ve._tempV34, Ve._tempV31, Ve._tempV34), 
            Re.add(Ve._tempV34, Ve._tempV32, e[3]), Re.add(n, Ve._tempV30, Ve._tempV34), Re.subtract(Ve._tempV34, Ve._tempV31, Ve._tempV34), 
            Re.add(Ve._tempV34, Ve._tempV32, e[4]), Re.add(n, Ve._tempV30, Ve._tempV34), Re.subtract(Ve._tempV34, Ve._tempV31, Ve._tempV34), 
            Re.subtract(Ve._tempV34, Ve._tempV32, e[5]), Re.subtract(n, Ve._tempV30, Ve._tempV34), 
            Re.subtract(Ve._tempV34, Ve._tempV31, Ve._tempV34), Re.subtract(Ve._tempV34, Ve._tempV32, e[6]), 
            Re.subtract(n, Ve._tempV30, Ve._tempV34), Re.subtract(Ve._tempV34, Ve._tempV31, Ve._tempV34), 
            Re.add(Ve._tempV34, Ve._tempV32, e[7]);
        }
        transform(e) {
            Ne.multiply(this.transformation, e, this.transformation);
        }
        scale(e) {
            Re.multiply(this.extents, e, this.extents);
        }
        translate(e) {
            this.transformation.getTranslationVector(Ve._tempV30), Re.add(Ve._tempV30, e, Ve._tempV31), 
            this.transformation.setTranslationVector(Ve._tempV31);
        }
        Size(e) {
            Re.scale(this.extents, 2, e);
        }
        getSize(e) {
            var t = this.extents;
            Ve._tempV30.x = t.x, Ve._tempV31.y = t.y, Ve._tempV32.z = t.z, Re.TransformNormal(Ve._tempV30, this.transformation, Ve._tempV30), 
            Re.TransformNormal(Ve._tempV31, this.transformation, Ve._tempV31), Re.TransformNormal(Ve._tempV31, this.transformation, Ve._tempV32);
            var i = e;
            i.x = Re.scalarLength(Ve._tempV30), i.y = Re.scalarLength(Ve._tempV31), i.z = Re.scalarLength(Ve._tempV32);
        }
        getSizeSquared(e) {
            var t = this.extents;
            Ve._tempV30.x = t.x, Ve._tempV31.y = t.y, Ve._tempV32.z = t.z, Re.TransformNormal(Ve._tempV30, this.transformation, Ve._tempV30), 
            Re.TransformNormal(Ve._tempV31, this.transformation, Ve._tempV31), Re.TransformNormal(Ve._tempV31, this.transformation, Ve._tempV32);
            var i = e;
            i.x = Re.scalarLengthSquared(Ve._tempV30), i.y = Re.scalarLengthSquared(Ve._tempV31), 
            i.z = Re.scalarLengthSquared(Ve._tempV32);
        }
        getCenter(e) {
            this.transformation.getTranslationVector(e);
        }
        containsPoint(e) {
            var t = this.extents, i = t.x, a = t.y, s = t.z;
            this.transformation.invert(Ve._tempM0), Re.transformCoordinate(e, Ve._tempM0, Ve._tempV30);
            var n = Ve._tempV30, o = Math.abs(n.x), r = Math.abs(n.y), l = Math.abs(n.z);
            return Oe.nearEqual(o, i) && Oe.nearEqual(r, a) && Oe.nearEqual(l, s) ? De.Intersects : o < i && r < a && l < s ? De.Contains : De.Disjoint;
        }
        containsPoints(e) {
            var t = this.extents, i = t.x, a = t.y, s = t.z;
            this.transformation.invert(Ve._tempM0);
            for (var n = !0, o = !1, r = 0; r < e.length; r++) {
                Re.transformCoordinate(e[r], Ve._tempM0, Ve._tempV30);
                var l = Ve._tempV30, h = Math.abs(l[0]), c = Math.abs(l[1]), d = Math.abs(l[2]);
                Oe.nearEqual(h, i) && Oe.nearEqual(c, a) && Oe.nearEqual(d, s) && (o = !0), h < i && c < a && d < s ? o = !0 : n = !1;
            }
            return n ? De.Contains : o ? De.Intersects : De.Disjoint;
        }
        containsSphere(e, t = !1) {
            var i, a = this.extents, s = a.x, n = a.y, o = a.z, r = e.radius;
            if (this.transformation.invert(Ve._tempM0), Re.transformCoordinate(e.center, Ve._tempM0, Ve._tempV30), 
            t ? i = r : (Re.scale(Ve.UnitX, r, Ve._tempV31), Re.TransformNormal(Ve._tempV31, Ve._tempM0, Ve._tempV31), 
            i = Re.scalarLength(Ve._tempV31)), Re.scale(this.extents, -1, Ve._tempV32), Re.Clamp(Ve._tempV30, Ve._tempV32, this.extents, Ve._tempV33), 
            Re.distanceSquared(Ve._tempV30, Ve._tempV33) > i * i) return De.Disjoint;
            var l = Ve._tempV30, h = l.x, c = l.y, d = l.z, g = Ve._tempV32, u = g.x, m = g.y, p = g.z;
            return u + i <= h && h <= s - i && s - u > i && m + i <= c && c <= n - i && n - m > i && p + i <= d && d <= o - i && o - p > i ? De.Contains : De.Intersects;
        }
        static _getRows(e, t) {
            t.length = 3;
            var i = e.elements, a = t[0];
            a.x = i[0], a.y = i[1], a.z = i[2];
            var s = t[1];
            s.x = i[4], s.y = i[5], s.z = i[6];
            var n = t[2];
            n.x = i[8], n.y = i[9], n.z = i[10];
        }
        containsOrientedBoundBox(e) {
            var t, i;
            e.getCorners(Ve._corners);
            var a = this.containsPoints(Ve._corners);
            if (a != De.Disjoint) return a;
            var s = [ this.extents.x, this.extents.y, this.extents.z ];
            e.extents.cloneTo(Ve._tempV35);
            var n, o, r, l = [ Ve._tempV35.x, Ve._tempV35.y, Ve._tempV35.z ];
            for (Ve._getRows(this.transformation, Ve._rows1), Ve._getRows(e.transformation, Ve._rows2), 
            t = 0; t < 4; t++) for (i = 0; i < 4; i++) 3 == t || 3 == i ? (Ve._tempM0.setElementByRowColumn(t, i, 0), 
            Ve._tempM1.setElementByRowColumn(t, i, 0)) : (r = Re.dot(Ve._rows1[t], Ve._rows2[i]), 
            Ve._tempM0.setElementByRowColumn(t, i, r), Ve._tempM1.setElementByRowColumn(t, i, Math.abs(r)));
            e.getCenter(Ve._tempV34), this.getCenter(Ve._tempV36), Re.subtract(Ve._tempV34, Ve._tempV36, Ve._tempV30);
            var h = Ve._tempV31;
            h.x = Re.dot(Ve._tempV30, Ve._rows1[0]), h.y = Re.dot(Ve._tempV30, Ve._rows1[1]), 
            h.z = Re.dot(Ve._tempV30, Ve._rows1[2]);
            var c = Ve._tempV32, d = Ve._tempV33;
            for (t = 0; t < 3; t++) if (c.x = Ve._tempM1.getElementByRowColumn(t, 0), c.y = Ve._tempM1.getElementByRowColumn(t, 1), 
            c.z = Ve._tempM1.getElementByRowColumn(t, 2), n = s[t], o = Re.dot(Ve._tempV35, Ve._tempV32), 
            Math.abs(h[t]) > n + o) return De.Disjoint;
            for (i = 0; i < 3; i++) if (c.x = Ve._tempM1.getElementByRowColumn(0, i), c.y = Ve._tempM1.getElementByRowColumn(1, i), 
            c.z = Ve._tempM1.getElementByRowColumn(2, i), d.x = Ve._tempM0.getElementByRowColumn(0, i), 
            d.y = Ve._tempM0.getElementByRowColumn(1, i), d.z = Ve._tempM0.getElementByRowColumn(2, i), 
            n = Re.dot(this.extents, Ve._tempV32), o = l[i], Math.abs(Re.dot(Ve._tempV31, Ve._tempV33)) > n + o) return De.Disjoint;
            for (t = 0; t < 3; t++) for (i = 0; i < 3; i++) {
                var g = (t + 1) % 3, u = (t + 2) % 3, m = (i + 1) % 3, p = (i + 2) % 3;
                if (n = s[g] * Ve._tempM1.getElementByRowColumn(u, i) + s[u] * Ve._tempM1.getElementByRowColumn(g, i), 
                o = l[m] * Ve._tempM1.getElementByRowColumn(t, p) + l[p] * Ve._tempM1.getElementByRowColumn(t, m), 
                Math.abs(h[u] * Ve._tempM0.getElementByRowColumn(g, i) - h[g] * Ve._tempM0.getElementByRowColumn(u, i)) > n + o) return De.Disjoint;
            }
            return De.Intersects;
        }
        containsLine(e, t) {
            Ve._corners[0] = e, Ve._corners[1] = t;
            var i = this.containsPoints(Ve._corners);
            if (i != De.Disjoint) return i;
            var a = this.extents, s = a.x, n = a.y, o = a.z;
            this.transformation.invert(Ve._tempM0), Re.transformCoordinate(e, Ve._tempM0, Ve._tempV30), 
            Re.transformCoordinate(t, Ve._tempM0, Ve._tempV31), Re.add(Ve._tempV30, Ve._tempV31, Ve._tempV32), 
            Re.scale(Ve._tempV32, .5, Ve._tempV32), Re.subtract(Ve._tempV30, Ve._tempV32, Ve._tempV33);
            var r = Ve._tempV33, l = r.x, h = r.y, c = r.z, d = Ve._tempV34, g = d.x = Math.abs(r.x), u = d.y = Math.abs(r.y), m = d.z = Math.abs(r.z), p = Ve._tempV32, y = p.x, I = p.y, f = p.z;
            return Math.abs(y) > s + g ? De.Disjoint : Math.abs(I) > n + u ? De.Disjoint : Math.abs(f) > o + m ? De.Disjoint : Math.abs(I * c - f * h) > n * m + o * u ? De.Disjoint : Math.abs(y * c - f * l) > s * m + o * g ? De.Disjoint : Math.abs(y * h - I * l) > s * u + n * g ? De.Disjoint : De.Intersects;
        }
        containsBoundBox(e) {
            var t, i, a = e.min, s = e.max;
            e.getCorners(Ve._corners);
            var n = this.containsPoints(Ve._corners);
            if (n != De.Disjoint) return n;
            Re.subtract(s, a, Ve._tempV30), Re.scale(Ve._tempV30, .5, Ve._tempV30), Re.add(a, Ve._tempV30, Ve._tempV30), 
            Re.subtract(s, Ve._tempV30, Ve._tempV31);
            var o, r, l = [ this.extents.x, this.extents.y, this.extents.z ], h = [ Ve._tempV31.x, Ve._tempV31.y, Ve._tempV31.z ];
            for (Ve._getRows(this.transformation, Ve._rows1), this.transformation.invert(Ve._tempM0), 
            t = 0; t < 3; t++) for (i = 0; i < 3; i++) Ve._tempM1.setElementByRowColumn(t, i, Math.abs(Ve._tempM0.getElementByRowColumn(t, i)));
            this.getCenter(Ve._tempV35), Re.subtract(Ve._tempV30, Ve._tempV35, Ve._tempV32);
            var c = [ Ve._tempV31.x, Ve._tempV31.y, Ve._tempV31.z ];
            c[0] = Re.dot(Ve._tempV32, Ve._rows1[0]), c[1] = Re.dot(Ve._tempV32, Ve._rows1[1]), 
            c[2] = Re.dot(Ve._tempV32, Ve._rows1[2]);
            var d = [ Ve._tempV33.x, Ve._tempV33.y, Ve._tempV33.z ], g = [ Ve._tempV34.x, Ve._tempV34.y, Ve._tempV34.z ];
            for (t = 0; t < 3; t++) if (d[0] = Ve._tempM1.getElementByRowColumn(t, 0), d[1] = Ve._tempM1.getElementByRowColumn(t, 1), 
            d[2] = Ve._tempM1.getElementByRowColumn(t, 2), o = l[t], r = Re.dot(Ve._tempV31, Ve._tempV33), 
            Math.abs(c[t]) > o + r) return De.Disjoint;
            for (i = 0; i < 3; i++) if (d[0] = Ve._tempM1.getElementByRowColumn(0, i), d[1] = Ve._tempM1.getElementByRowColumn(1, i), 
            d[2] = Ve._tempM1.getElementByRowColumn(2, i), g[0] = Ve._tempM0.getElementByRowColumn(0, i), 
            g[1] = Ve._tempM0.getElementByRowColumn(1, i), g[2] = Ve._tempM0.getElementByRowColumn(2, i), 
            o = Re.dot(this.extents, Ve._tempV33), r = h[i], Math.abs(Re.dot(Ve._tempV31, Ve._tempV34)) > o + r) return De.Disjoint;
            for (t = 0; t < 3; t++) for (i = 0; i < 3; i++) {
                var u = (t + 1) % 3, m = (t + 2) % 3, p = (i + 1) % 3, y = (i + 2) % 3;
                if (o = l[u] * Ve._tempM1.getElementByRowColumn(m, i) + l[m] * Ve._tempM1.getElementByRowColumn(u, i), 
                r = h[p] * Ve._tempM1.getElementByRowColumn(t, y) + h[y] * Ve._tempM1.getElementByRowColumn(t, p), 
                Math.abs(c[m] * Ve._tempM0.getElementByRowColumn(u, i) - c[u] * Ve._tempM0.getElementByRowColumn(m, i)) > o + r) return De.Disjoint;
            }
            return De.Intersects;
        }
        intersectsRay(e, t) {
            Re.scale(this.extents, -1, Ve._tempV30), this.transformation.invert(Ve._tempM0), 
            Re.TransformNormal(e.direction, Ve._tempM0, Ve._ray.direction), Re.transformCoordinate(e.origin, Ve._tempM0, Ve._ray.origin), 
            Ve._boxBound1.min = Ve._tempV30, Ve._boxBound1.max = this.extents;
            var i = Pe.intersectsRayAndBoxRP(Ve._ray, Ve._boxBound1, t);
            return -1 !== i && Re.transformCoordinate(t, this.transformation, t), i;
        }
        clamp(e, t, i, a) {
            Re.scale(this.extents, -1, Ve._tempV30), this.transformation.invert(Ve._tempM0), 
            Re.subtract(t, e, Ve._ray.direction), e.cloneTo(Ve._ray.origin), Re.TransformNormal(Ve._ray.direction, Ve._tempM0, Ve._ray.direction), 
            Re.transformV3ToV3(Ve._ray.origin, Ve._tempM0, Ve._ray.origin), Ve._boxBound1.min = Ve._tempV30, 
            Ve._boxBound1.max = this.extents;
            var s = Pe.intersectsRayAndBoxRD(Ve._ray, Ve._boxBound1);
            if (-1 !== s) {
                if (s * s > Re.distanceSquared(e, t)) return De.Disjoint;
                Re.scale(Ve._ray.direction, s, a), Re.add(Ve._ray.origin, a, a), Math.abs(a.x - Ve._boxBound1.min.x) < .01 ? (Ve._tempV32.setValue(-1, 0, 0), 
                Ve._tempV33.setValue(Ve._boxBound1.min.x, 0, 0)) : Math.abs(a.x - Ve._boxBound1.max.x) < .01 ? (Ve._tempV32.setValue(1, 0, 0), 
                Ve._tempV33.setValue(Ve._boxBound1.max.x, 0, 0)) : Math.abs(a.y - Ve._boxBound1.min.y) < .01 ? (Ve._tempV32.setValue(0, -1, 0), 
                Ve._tempV33.setValue(0, Ve._boxBound1.min.y, 0)) : Math.abs(a.y - Ve._boxBound1.max.y) < .01 ? (Ve._tempV32.setValue(0, 1, 0), 
                Ve._tempV33.setValue(0, Ve._boxBound1.max.y, 0)) : Math.abs(a.z - Ve._boxBound1.min.z) < .01 ? (Ve._tempV32.setValue(0, 0, -1), 
                Ve._tempV33.setValue(0, 0, Ve._boxBound1.min.z)) : Math.abs(a.z - Ve._boxBound1.max.z) < .01 && (Ve._tempV32.setValue(0, 0, 1), 
                Ve._tempV33.setValue(0, 0, Ve._boxBound1.max.z)), Re.transformV3ToV3(t, Ve._tempM0, Ve._tempV34);
                let n = Re.dot(Ve._tempV33, Ve._tempV32);
                Re.scale(Ve._tempV32, -1, Ve._tempV32);
                let o = -1 * (Re.dot(Ve._tempV32, Ve._tempV34) + n);
                Ve._tempV32.cloneTo(i), Re.scale(i, o, i), Re.add(i, Ve._tempV34, i), Re.transformV3ToV3(i, this.transformation, i), 
                Re.transformV3ToV3(a, this.transformation, a);
            }
            return s;
        }
        _getLocalCorners(e) {
            e.length = 8;
            var t = this.extents;
            Ve._tempV30.x = t.x, Ve._tempV31.y = t.y, Ve._tempV32.z = t.z, Re.add(Ve._tempV30, Ve._tempV31, Ve._tempV33), 
            Re.add(Ve._tempV33, Ve._tempV32, e[0]), Re.add(Ve._tempV30, Ve._tempV31, Ve._tempV33), 
            Re.subtract(Ve._tempV33, Ve._tempV32, e[1]), Re.subtract(Ve._tempV31, Ve._tempV30, Ve._tempV33), 
            Re.subtract(Ve._tempV33, Ve._tempV30, e[2]), Re.subtract(Ve._tempV31, Ve._tempV30, Ve._tempV33), 
            Re.add(Ve._tempV33, Ve._tempV32, e[3]), Re.subtract(Ve._tempV30, Ve._tempV31, Ve._tempV33), 
            Re.add(Ve._tempV33, Ve._tempV32, e[4]), Re.subtract(Ve._tempV30, Ve._tempV31, Ve._tempV33), 
            Re.subtract(Ve._tempV33, Ve._tempV32, e[5]), Re.scale(e[0], -1, e[6]), Re.subtract(Ve._tempV32, Ve._tempV30, Ve._tempV33), 
            Re.subtract(Ve._tempV33, Ve._tempV31, e[7]);
        }
        static getObbtoObbMatrix4x4(e, t, i, a) {
            var s = e.transformation, n = t.transformation;
            if (i) {
                Ve._getRows(s, Ve._rows1), Ve._getRows(n, Ve._rows2);
                for (var o = 0; o < 3; o++) for (var r = 0; r < 3; r++) a.setElementByRowColumn(o, r, Re.dot(Ve._rows2[o], Ve._rows1[r]));
                t.getCenter(Ve._tempV30), e.getCenter(Ve._tempV31), Re.subtract(Ve._tempV30, Ve._tempV31, Ve._tempV32);
                var l = a.elements;
                l[12] = Re.dot(Ve._tempV32, Ve._rows1[0]), l[13] = Re.dot(Ve._tempV32, Ve._rows1[1]), 
                l[14] = Re.dot(Ve._tempV32, Ve._rows1[2]), l[15] = 1;
            } else s.invert(Ve._tempM0), Ne.multiply(n, Ve._tempM0, a);
        }
        static merge(e, t, i) {
            var a = e.extents, s = e.transformation;
            Ve.getObbtoObbMatrix4x4(e, t, i, Ve._tempM0), t._getLocalCorners(Ve._corners), Re.transformCoordinate(Ve._corners[0], Ve._tempM0, Ve._corners[0]), 
            Re.transformCoordinate(Ve._corners[1], Ve._tempM0, Ve._corners[1]), Re.transformCoordinate(Ve._corners[2], Ve._tempM0, Ve._corners[2]), 
            Re.transformCoordinate(Ve._corners[3], Ve._tempM0, Ve._corners[3]), Re.transformCoordinate(Ve._corners[4], Ve._tempM0, Ve._corners[4]), 
            Re.transformCoordinate(Ve._corners[5], Ve._tempM0, Ve._corners[5]), Re.transformCoordinate(Ve._corners[6], Ve._tempM0, Ve._corners[6]), 
            Re.transformCoordinate(Ve._corners[7], Ve._tempM0, Ve._corners[7]), Re.scale(a, -1, Ve._boxBound1.min), 
            a.cloneTo(Ve._boxBound1.max), ke.createfromPoints(Ve._corners, Ve._boxBound2), ke.merge(Ve._boxBound2, Ve._boxBound1, Ve._boxBound3);
            var n = Ve._boxBound3.min, o = Ve._boxBound3.max;
            Re.subtract(o, n, Ve._tempV30), Re.scale(Ve._tempV30, .5, Ve._tempV30), Re.add(n, Ve._tempV30, Ve._tempV32), 
            Re.subtract(o, Ve._tempV32, a), Re.transformCoordinate(Ve._tempV32, s, Ve._tempV33);
        }
        equals(e) {
            return this.extents == e.extents && this.transformation == e.transformation;
        }
        cloneTo(e) {
            var t = e;
            this.extents.cloneTo(t.extents), this.transformation.cloneTo(t.transformation);
        }
    }
    Ve._tempV30 = new Re(), Ve._tempV31 = new Re(), Ve._tempV32 = new Re(), Ve._tempV33 = new Re(), 
    Ve._tempV34 = new Re(), Ve._tempV35 = new Re(), Ve._tempV36 = new Re(), Ve._tempM0 = new Ne(), 
    Ve._tempM1 = new Ne(), Ve._corners = new Array(new Re(), new Re(), new Re(), new Re(), new Re(), new Re(), new Re(), new Re()), 
    Ve._rows1 = new Array(new Re(), new Re(), new Re()), Ve._rows2 = new Array(new Re(), new Re(), new Re()), 
    Ve._ray = new Me(new Re(), new Re()), Ve._boxBound1 = new ke(new Re(), new Re()), 
    Ve._boxBound2 = new ke(new Re(), new Re()), Ve._boxBound3 = new ke(new Re(), new Re()), 
    Ve.UnitX = new Re(1, 0, 0);
    var Ge = Laya.Vector3, Ue = Laya.Matrix4x4, Fe = Laya.PixelLineSprite3D, He = Laya.BoundBox, We = Laya.Color;
    class Ye extends fe {
        constructor(e, t, i = 0) {
            super(e, t, i), this.oriBoundCenter = new Ge(), this.position = new Ge(0, 0, 0), 
            this.scale = new Ge(2, 2, 2), this.privateScale = new Ge(0, 0, 0), this.lineActive = !1, 
            this.temp = new Ge(0, 0, 0), this._vec1 = new Ge(), this._vec2 = new Ge(), this.scaleMatrix = new Ue(), 
            this.W_minx = 9999, this.W_miny = 9999, this.W_minz = 9999, this.W_maxx = -9999, 
            this.W_maxy = -9999, this.W_maxz = -9999, this.OBBWorldPointList = [], this.orientedBoundBox = new Ve(new Ge(), new Ue()), 
            this._primitPosition = new Ge(), this._disparity = new Ge(), this.tempVector = new Ge(), 
            this.isUpdate = !0, this.OBBpoints = [], this.cubePoint = new Ge(), this.type = fe.TYPE_BOX;
            let a = this.owner.getChildByName("box");
            if (a) this._sprite3D = a, this._sprite3D.meshRenderer.enable = !1; else {
                if (!(this.owner instanceof Laya.MeshSprite3D)) throw new Error("is not MeshSprite3D");
                this._sprite3D = this.owner;
            }
            for (var s = 0; s < 8; s++) this.OBBWorldPointList.push(new Ge());
            this.tran = this._sprite3D.transform;
            let n = this._sprite3D.meshFilter.sharedMesh, o = new Ge(), r = new Ge();
            Ge.subtract(n.bounds.getCenter(), n.bounds.getExtent(), o), Ge.add(n.bounds.getCenter(), n.bounds.getExtent(), r);
            let l = new He(o, r), h = new Ge();
            Ge.subtract(this._sprite3D.transform.position, this._sprite3D.transform.localPosition, h), 
            Ge.add(l.max, h, l.max), Ge.add(l.min, h, l.min), Ve.createByBoundBox(l, this.orientedBoundBox);
            var c = this.orientedBoundBox.extents;
            this.privateScale.setValue(c.x, c.y, c.z);
            var d = new Ge();
            if (this.orientedBoundBox.getCenter(d), this._boundBox = l, this.enable(), this.updataMinMax(), 
            this.bounds = new Laya.Bounds(new Ge(this.W_minx, this.W_miny, this.W_minz), new Ge(this.W_maxx, this.W_maxy, this.W_maxz)), 
            this.isStatic) if (hl.platform == v.VIVO) {
                fe.getOCTree().add(this);
            } else fe.getOCTree().addRender(this);
            fe.isDebug && (this.pixelline = new Fe(20), this._sprite3D.scene.addChild(this.pixelline)), 
            fe.isDebug && this._showline();
        }
        onUpdate() {
            if (!this.isUpdate) return;
            if (fe.isDebug && this._showline(), this.isStatic) return;
            var e = this.orientedBoundBox.extents;
            let t = this._sprite3D.transform.position;
            this._boundBox.max.setValue(t.x + e.x, t.y + e.y, t.z + e.z), this._boundBox.min.setValue(t.x - e.x, t.y - e.y, t.z - e.z);
        }
        updataObbTranform() {
            var e = this.orientedBoundBox.transformation, t = this.tran.rotation, i = this.tran.getWorldLossyScale();
            let a = this.tran.position;
            Ge.add(this._primitPosition, this.position, this._disparity), Ue.createAffineTransformation(a, t, fe.VectorOne, e), 
            this.orientedBoundBox.transformation = e;
            var s = this.orientedBoundBox.extents;
            s.x = i.x * this.privateScale.x, s.y = i.y * this.privateScale.y, s.z = i.z * this.privateScale.z, 
            this.orientedBoundBox.extents = s;
            var n = this.orientedBoundBox.extents;
            this._boundBox.max.setValue(a.x + n.x, a.y + n.y, a.z + n.z), this._boundBox.min.setValue(a.x - n.x, a.y - n.y, a.z - n.z);
        }
        updateTransfrom() {
            var e = this.orientedBoundBox.extents;
            let t = this.tran.position;
            this._boundBox.max.setValue(t.x + e.x, t.y + e.y, t.z + e.z), this._boundBox.min.setValue(t.x - e.x, t.y - e.y, t.z - e.z);
        }
        isCollision(e) {
            switch (e.type) {
              case 0:
                return this.boxAndBox(e);

              case 1:
                return this.boxAndSphere(e);

              default:
                return 999;
            }
        }
        clamp(e, t, i, a) {
            return this.orientedBoundBox.clamp(e, t, i, a);
        }
        intersectsRay(e, t) {
            return this.orientedBoundBox.intersectsRay(e, t);
        }
        _showline() {
            this.pixelline.active = !0, this.drawBound();
        }
        _noShowLine() {
            this.pixelline.active = !1;
        }
        drawBound(e = We.BLACK) {
            this.pixelline.clear(), this.orientedBoundBox.getCorners(this.OBBWorldPointList), 
            this.pixelline.addLine(this.OBBWorldPointList[0], this.OBBWorldPointList[1], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[1], this.OBBWorldPointList[2], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[2], this.OBBWorldPointList[3], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[3], this.OBBWorldPointList[0], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[0], this.OBBWorldPointList[4], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[1], this.OBBWorldPointList[5], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[2], this.OBBWorldPointList[6], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[3], this.OBBWorldPointList[7], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[4], this.OBBWorldPointList[5], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[5], this.OBBWorldPointList[6], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[6], this.OBBWorldPointList[7], e, e), 
            this.pixelline.addLine(this.OBBWorldPointList[7], this.OBBWorldPointList[4], e, e);
        }
        boxAndSphere(e) {
            return this.orientedBoundBox.containsSphere(e._boundSphere, !0);
        }
        boxAndBox(e) {
            return this.orientedBoundBox.containsOrientedBoundBox(e.orientedBoundBox);
        }
        updataMinMax() {
            this.orientedBoundBox.getCorners(this.OBBWorldPointList);
            for (var e = 0; e < this.OBBWorldPointList.length; e++) this.OBBWorldPointList[e].x > this.W_maxx && (this.W_maxx = this.OBBWorldPointList[e].x), 
            this.OBBWorldPointList[e].x < this.W_minx && (this.W_minx = this.OBBWorldPointList[e].x), 
            this.OBBWorldPointList[e].y > this.W_maxy && (this.W_maxy = this.OBBWorldPointList[e].y), 
            this.OBBWorldPointList[e].y < this.W_miny && (this.W_miny = this.OBBWorldPointList[e].y), 
            this.OBBWorldPointList[e].z > this.W_maxz && (this.W_maxz = this.OBBWorldPointList[e].z), 
            this.OBBWorldPointList[e].z < this.W_minz && (this.W_minz = this.OBBWorldPointList[e].z);
        }
        initmaxmin() {
            this.W_minx = 9999, this.W_miny = 9999, this.W_minz = 9999, this.W_maxx = -9999, 
            this.W_maxy = -9999, this.W_maxz = -9999;
        }
        init2maxmin() {
            this.W_minx = Math.floor(this.W_minx), this.W_miny = Math.floor(this.W_miny), this.W_minz = Math.floor(this.W_minz), 
            this.W_maxx = Math.ceil(this.W_maxx), this.W_maxy = Math.ceil(this.W_maxy), this.W_maxz = Math.ceil(this.W_maxz);
        }
        destory() {
            this.clearLine(), super.destory(), this.isUpdate = !1;
        }
        disable() {
            super.disable(), this.pixelline && this._noShowLine(), this.isUpdate = !1;
        }
        enable() {
            super.enable(), this.updataObbTranform(), this.pixelline && (this.pixelline.active = !0), 
            this.isUpdate = !0;
        }
        remove() {
            super.remove(), this.pixelline && this._noShowLine(), this.isUpdate = !1;
        }
        clearLine() {
            this.pixelline && (this.pixelline.clear(), this.pixelline.destroy());
        }
        resizeBound() {
            var e = [], t = [];
            fe.findAllMesh(this._sprite3D, e, t);
            for (var i = [], a = 0, s = e.length; a < s; a++) {
                var n = [];
                e[a].getPositions(n);
                for (var o = t[a].transform.worldMatrix, r = 0; r < n.length; r++) Ge.transformCoordinate(n[r], o, n[r]), 
                i.push(n[r]);
            }
            var l = new He(new Ge(0, 0, 0), new Ge(0, 0, 0));
            He.createfromPoints(i, l), Ve.createByBoundBox(l, this.orientedBoundBox);
            var h = this.orientedBoundBox.extents;
            this.privateScale.setValue(h.x, h.y, h.z);
            var c = new Ge();
            this.orientedBoundBox.getCenter(c), Ge.subtract(c, this._sprite3D.transform.position, this._primitPosition);
        }
    }
    class Xe {
        constructor(e = 0, t = 0, i = 0) {
            this.c = i, this.b = t, this.a = e;
        }
    }
    class Ke {
        constructor() {
            this.faces = [], this.vertices = [];
        }
        static mergeVertices(e) {
            var t, i, a, s, n, o, r = {}, l = [], h = [];
            for (a = 0, s = e.vertices.length; a < s; a++) t = e.vertices[a], void 0 === r[i = Math.round(1e5 * t.x) + "_" + Math.round(1e5 * t.y) + "_" + Math.round(1e5 * t.z)] ? (r[i] = a, 
            l.push(t), h[a] = l.length - 1) : h[a] = h[r[i]];
            var c = [];
            for (a = 0, s = e.faces.length; a < s; a++) {
                (n = e.faces[a]).a = h[n.a], n.b = h[n.b], n.c = h[n.c], o = [ n.a, n.b, n.c ];
                for (var d = 0; d < 3; d++) if (o[d] === o[(d + 1) % 3]) {
                    c.push(a);
                    break;
                }
            }
            for (a = c.length - 1; a >= 0; a--) {
                var g = c[a];
                e.faces.splice(g, 1);
            }
            var u = e.vertices.length - l.length;
            return e.vertices = l, u;
        }
    }
    class ze {
        constructor(e = 0, t = 0, i = 0) {
            this.x = e, this.y = t, this.z = i;
        }
        clean() {
            this.x = null, this.y = null, this.z = null;
        }
        static add(e, t, i) {
            i.x = e.x + t.x, i.y = e.y + t.y, i.z = e.z + t.z;
        }
        static sub(e, t, i) {
            i.x = e.x - t.x, i.y = e.y - t.y, i.z = e.z - t.z;
        }
        static dot(e, t) {
            return e.x * t.x + e.y * t.y + e.z * t.z;
        }
        static scalar(e, t, i) {
            i.x = e.x * t, i.y = e.y * t, i.z = e.z * t;
        }
        static normalize(e, t) {
            ze.scalar(e, 1 / ze.scalarLength(e), t);
        }
        static scalarLength(e) {
            let t = ze.scalarLengthSquared(e);
            return Math.sqrt(t);
        }
        static distanceToSquared(e, t) {
            var i = e.x - t.x, a = e.y - t.y, s = e.z - t.z;
            return i * i + a * a + s * s;
        }
        static distanceTo(e, t) {
            var i = e.x - t.x, a = e.y - t.y, s = e.z - t.z;
            let n = i * i, o = a * a, r = s * s;
            return Math.sqrt(n + o + r);
        }
        static MagnitudeXZ(e, t) {
            var i = e.x - t.x, a = e.z - t.z;
            let s = i * i, n = a * a;
            return Math.sqrt(s + n);
        }
        static MagnitudeXZToSquared(e, t) {
            var i = e.x - t.x, a = e.z - t.z;
            return i * i + a * a;
        }
        static scalarLengthSquared(e) {
            return e.x * e.x + e.y * e.y + e.z * e.z;
        }
        static cross(e, t, i) {
            var a = e.x, s = e.y, n = e.z, o = t.x, r = t.y, l = t.z;
            i.x = s * l - n * r, i.y = n * o - a * l, i.z = a * r - s * o;
        }
        static angleTo(e, t) {
            const i = Math.sqrt(ze.scalarLengthSquared(e) * ze.scalarLengthSquared(t));
            if (0 == i) return P.PI / 2;
            const a = ze.dot(e, t) / i;
            let s = P.clamp(a, -1, 1);
            return Math.acos(s);
        }
        set(e, t, i) {
            this.x = e, this.y = t, this.z = i;
        }
        copy(e) {
            this.x = e.x, this.y = e.y, this.z = e.z;
        }
        clone() {
            return new ze(this.x, this.y, this.z);
        }
        log() {
            console.log(`{x = ${this.x}, y = ${this.y}, z = ${this.z}}`);
        }
        static isParallel(e, t) {
            return e.x * t.z - e.z * t.x == 0;
        }
        static angle(e, t) {
            let i = ze.dot(e, t);
            return i /= ze.scalarLength(e) * ze.scalarLength(t), Math.acos(i) / Math.PI * 180;
        }
    }
    ze.up = new ze(0, 1, 0);
    class qe {
        constructor(e) {
            this.content = [], this.scoreFunction = e;
        }
        push(e) {
            this.content.push(e), this.sinkDown(this.content.length - 1);
        }
        pop() {
            const e = this.content[0], t = this.content.pop();
            return this.content.length > 0 && (this.content[0] = t, this.bubbleUp(0)), e;
        }
        remove(e) {
            const t = this.content.indexOf(e), i = this.content.pop();
            t !== this.content.length - 1 && (this.content[t] = i, this.scoreFunction(i) < this.scoreFunction(e) ? this.sinkDown(t) : this.bubbleUp(t));
        }
        size() {
            return this.content.length;
        }
        rescoreElement(e) {
            this.sinkDown(this.content.indexOf(e));
        }
        sinkDown(e) {
            const t = this.content[e];
            for (;e > 0; ) {
                const i = (e + 1 >> 1) - 1, a = this.content[i];
                if (!(this.scoreFunction(t) < this.scoreFunction(a))) break;
                this.content[i] = t, this.content[e] = a, e = i;
            }
        }
        bubbleUp(e) {
            const t = this.content.length, i = this.content[e], a = this.scoreFunction(i);
            for (;;) {
                const s = e + 1 << 1, n = s - 1;
                let o, r = null;
                if (n < t) {
                    const e = this.content[n];
                    (o = this.scoreFunction(e)) < a && (r = n);
                }
                if (s < t) {
                    const e = this.content[s];
                    this.scoreFunction(e) < (null === r ? a : o) && (r = s);
                }
                if (null === r) break;
                this.content[e] = this.content[r], this.content[r] = i, e = r;
            }
        }
    }
    const Qe = new ze(), Ze = new ze(), je = new ze(), Je = new ze(), $e = 1e5, et = -1e5;
    class it {
        static computeCentroids(e) {
            var t, i, a;
            for (t = 0, i = e.faces.length; t < i; t++) (a = e.faces[t]).centroid = new ze(0, 0, 0), 
            ze.add(a.centroid, e.vertices[a.a], a.centroid), ze.add(a.centroid, e.vertices[a.b], a.centroid), 
            ze.add(a.centroid, e.vertices[a.c], a.centroid), ze.scalar(a.centroid, 1 / 3, a.centroid);
        }
        static roundNumber(e, t) {
            return P.toFixed(e, t);
        }
        static sample(e) {
            let t = P.random();
            return e[Math.floor(t) * e.length];
        }
        static mergeVertexIds(e, t) {
            var i = [];
            if (e.forEach(e => {
                t.indexOf(e) >= 0 && i.push(e);
            }), i.length < 2) return [];
            -1 != i.indexOf(e[0]) && -1 != i.indexOf(e[e.length - 1]) && e.push(e.shift()), 
            -1 != i.indexOf(t[0]) && -1 != i.indexOf(t[t.length - 1]) && t.push(t.shift()), 
            i = [], e.forEach(e => {
                t.includes(e) && i.push(e);
            });
            for (var a = i[1], s = i[0], n = e.slice(); n[0] !== a; ) n.push(n.shift());
            for (var o = 0, r = t.slice(); r[0] !== s; ) if (r.push(r.shift()), o++ > 10) throw new Error("Unexpected state");
            return r.shift(), r.pop(), n = n.concat(r);
        }
        static setPolygonCentroid(e, t) {
            var i = new ze(), a = t.vertices;
            e.vertexIds.forEach(e => {
                ze.add(i, a[e], i);
            }), ze.scalar(i, 1 / e.vertexIds.length, i), e.centroid.copy(i);
        }
        static cleanPolygon(e, t) {
            for (var i = [], a = t.vertices, s = 0; s < e.vertexIds.length; s++) {
                var n, o, r, l, h = a[e.vertexIds[s]];
                0 === s ? (n = e.vertexIds[1], o = e.vertexIds[e.vertexIds.length - 1]) : s === e.vertexIds.length - 1 ? (n = e.vertexIds[0], 
                o = e.vertexIds[e.vertexIds.length - 2]) : (n = e.vertexIds[s + 1], o = e.vertexIds[s - 1]), 
                r = a[n], l = a[o];
                var c = new ze();
                ze.sub(r.clone(), h, c);
                var d = new ze();
                ze.sub(l.clone(), h, d);
                var g = ze.angleTo(c, d);
                if (g > P.PI - .01 && g < P.PI + .01) {
                    var u = [];
                    e.neighbours.forEach(t => {
                        t.vertexIds.includes(e.vertexIds[s]) || u.push(t);
                    }), e.neighbours = u;
                } else i.push(e.vertexIds[s]);
            }
            e.vertexIds = i, this.setPolygonCentroid(e, t);
        }
        static isConvex(e, t) {
            var i = t.vertices;
            if (e.vertexIds.length < 3) return !1;
            for (var a = !0, s = [], n = 0; n < e.vertexIds.length; n++) {
                var o, r, l = i[e.vertexIds[n]];
                0 === n ? (o = i[e.vertexIds[1]], r = i[e.vertexIds[e.vertexIds.length - 1]]) : n === e.vertexIds.length - 1 ? (o = i[e.vertexIds[0]], 
                r = i[e.vertexIds[e.vertexIds.length - 2]]) : (o = i[e.vertexIds[n + 1]], r = i[e.vertexIds[n - 1]]);
                var h = o.clone().sub(l), c = r.clone().sub(l), d = ze.angleTo(h, c);
                if (d, d === Math.PI || 0 === d) return !1;
                ze.cross(h, c, h);
                var g = h.y;
                s.push(g);
            }
            return s.forEach(e => {
                0 === e && (a = !1);
            }), s[0] > 0 ? s.forEach(e => {
                e < 0 && (a = !1);
            }) : s.forEach(e => {
                e > 0 && (a = !1);
            }), a;
        }
        static distanceToSquared(e, t) {
            return ze.distanceToSquared(e, t);
        }
        static isPointInPoly(e, t) {
            for (var i = !1, a = -1, s = e.length, n = s - 1; ++a < s; n = a) (e[a].z <= t.z && t.z < e[n].z || e[n].z <= t.z && t.z < e[a].z) && t.x < (e[n].x - e[a].x) * (t.z - e[a].z) / (e[n].z - e[a].z) + e[a].x && (i = !i);
            return i;
        }
        static isVectorInPolygon(e, t, i) {
            var a = $e, s = et, n = [];
            return t.vertexIds.forEach(e => {
                a = Math.min(i[e].y, a), s = Math.max(i[e].y, s), n.push(i[e]);
            }), !!(e.y < s + .5 && e.y > a - .5 && this.isPointInPoly(n, e));
        }
        static triarea2(e, t, i) {
            var a = t.x - e.x, s = t.z - e.z;
            return (i.x - e.x) * s - a * (i.z - e.z);
        }
        static vequal(e, t) {
            return this.distanceToSquared(e, t) < 1e-5;
        }
        static pointinTriangle(e, t, i, a) {
            let s = Qe;
            ze.sub(i, e, s);
            let n = Ze;
            ze.sub(t, e, n);
            let o = je;
            ze.sub(a, e, o);
            let r = ze.dot(s, s), l = ze.dot(s, n), h = ze.dot(s, o), c = ze.dot(n, n), d = ze.dot(n, o), g = 1 / (r * c - l * l), u = (c * h - l * d) * g;
            if (u < 0 || u > 1) return !1;
            let m = (r * d - l * h) * g;
            return !(m < 0 || m > 1) && u + m <= 1;
        }
        static nearestPointStrictXZ(e, t, i, a) {
            ze.sub(t, e, Qe), Ze.copy(Qe), ze.normalize(Ze, je), ze.sub(i, e, Je);
            let s = ze.dot(Je, je);
            s = P.clamp(s, 0, ze.scalarLength(Ze)), ze.scalar(je, s, je), ze.add(e, je, a);
        }
        static projectPoint(e, t, i, a) {
            ze.sub(t, e, Qe), Ze.copy(Qe), ze.normalize(Ze, je), ze.sub(i, e, Je);
            let s = ze.dot(Je, je);
            ze.scalar(je, s, je), ze.add(e, je, a);
        }
    }
    it.vecTmp1 = new ze();
    class at {
        static init(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                i.f = 0, i.g = 0, i.h = 0, i.cost = 1, i.visited = !1, i.closed = !1, i.parent = null;
            }
        }
        static cleanUp(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                delete i.f, delete i.g, delete i.h, delete i.cost, delete i.visited, delete i.closed, 
                delete i.parent;
            }
        }
        static heap() {
            return new qe(function(e) {
                return e.f;
            });
        }
        static search(e, t, i) {
            this.init(e);
            const a = this.heap();
            for (a.push(t); a.size() > 0; ) {
                const t = a.pop();
                if (t === i) {
                    let e = t;
                    const i = [];
                    for (;e.parent; ) i.push(e), e = e.parent;
                    return this.cleanUp(i), i.reverse();
                }
                t.closed = !0;
                const s = this.neighbours(e, t);
                for (let e = 0, n = s.length; e < n; e++) {
                    const n = s[e];
                    if (n.closed) continue;
                    const o = t.g + n.cost, r = n.visited;
                    if (!r || o < n.g) {
                        if (n.visited = !0, n.parent = t, !n.centroid || !i.centroid) throw new Error("Unexpected state");
                        n.h = n.h || this.heuristic(n.centroid, i.centroid), n.g = o, n.f = n.h + n.g, r ? a.rescoreElement(n) : a.push(n);
                    }
                }
            }
            return [];
        }
        static heuristic(e, t) {
            return it.distanceToSquared(e, t);
        }
        static neighbours(e, t) {
            const i = [];
            for (let a = 0; a < t.neighbours.length; a++) i.push(e[t.neighbours[a]]);
            return i;
        }
    }
    let st = 1;
    class nt {
        static buildZone(e) {
            const t = this._buildNavigationMesh(e), i = {};
            t.vertices.forEach(e => {
                e.x = it.roundNumber(e.x, 2), e.y = it.roundNumber(e.y, 2), e.z = it.roundNumber(e.z, 2);
            }), i.vertices = t.vertices;
            const a = this._buildPolygonGroups(t);
            i.groups = [];
            const s = function(e, t) {
                for (let i = 0; i < e.length; i++) if (t === e[i]) return i;
            };
            return a.forEach(e => {
                const t = [];
                e.forEach(i => {
                    const a = i.neighbours.map(t => s(e, t)), n = i.neighbours.map(e => this._getSharedVerticesInOrder(i, e));
                    i.centroid.x = it.roundNumber(i.centroid.x, 2), i.centroid.y = it.roundNumber(i.centroid.y, 2), 
                    i.centroid.z = it.roundNumber(i.centroid.z, 2), t.push({
                        id: s(e, i),
                        neighbours: a,
                        vertexIds: i.vertexIds,
                        centroid: i.centroid,
                        portals: n
                    });
                }), i.groups.push(t);
            }), i;
        }
        static _buildNavigationMesh(e) {
            return it.computeCentroids(e), Ke.mergeVertices(e), this._buildPolygonsFromGeometry(e);
        }
        static _buildPolygonGroups(e) {
            const t = e.polygons, i = [];
            let a = 0;
            const s = function(e) {
                e.neighbours.forEach(t => {
                    void 0 === t.group && (t.group = e.group, s(t));
                });
            };
            return t.forEach(e => {
                void 0 === e.group && (e.group = a++, s(e)), i[e.group] || (i[e.group] = []), i[e.group].push(e);
            }), i;
        }
        static _buildPolygonNeighbours(e, t, i) {
            const a = new Set(), s = i.get(e.vertexIds[0]), n = i.get(e.vertexIds[1]), o = i.get(e.vertexIds[2]);
            s.forEach(i => {
                (n.has(i) || o.has(i)) && t.polygons[i].id != e.id && a.add(t.polygons[i]);
            }), n.forEach(i => {
                o.has(i) && t.polygons[i].id != e.id && a.add(t.polygons[i]);
            }), e.neighbours = Array.from(a);
        }
        static _buildPolygonsFromGeometry(e) {
            const t = [], i = e.vertices, a = new Map();
            for (let e = 0; e < i.length; e++) a.set(e, new Set());
            e.faces.forEach(e => {
                t.push({
                    id: st++,
                    vertexIds: [ e.a, e.b, e.c ],
                    centroid: e.centroid,
                    neighbours: []
                }), a.get(e.a).add(t.length - 1), a.get(e.b).add(t.length - 1), a.get(e.c).add(t.length - 1);
            });
            const s = {
                polygons: t,
                vertices: i
            };
            return t.forEach(e => {
                this._buildPolygonNeighbours(e, s, a);
            }), s;
        }
        static _getSharedVerticesInOrder(e, t) {
            const i = e.vertexIds, a = t.vertexIds, s = new Set();
            if (i.forEach(e => {
                a.includes(e) && s.add(e);
            }), s.size < 2) return [];
            s.has(i[0]) && s.has(i[i.length - 1]) && i.push(i.shift()), s.has(a[0]) && s.has(a[a.length - 1]) && a.push(a.shift());
            const n = [];
            return i.forEach(e => {
                a.includes(e) && n.push(e);
            }), n;
        }
        static setGeometryVertices(e) {
            let t = [];
            e.vertices.forEach(e => {
                t.push(new ze(e.x, e.y, e.z));
            }), e.vertices = t;
        }
    }
    class ot {
        constructor() {
            this.portals = [];
        }
        push(e, t) {
            this.portals.push({
                left: e,
                right: t
            });
        }
        stringPull() {
            const e = this.portals, t = [];
            let i, a, s, n = 0, o = 0, r = 0;
            i = e[0].left, a = e[0].left, s = e[0].right, t.push(i);
            for (let l = 1; l < e.length; l++) {
                const h = e[l].left, c = e[l].right;
                if (it.triarea2(i, s, c) <= 0) {
                    if (!(it.vequal(i, s) || it.triarea2(i, a, c) >= 0)) {
                        t.push(a), a = i = a, s = i, o = n = o, r = n, l = n;
                        continue;
                    }
                    s = c, r = l;
                }
                if (it.triarea2(i, a, h) >= 0) {
                    if (!(it.vequal(i, a) || it.triarea2(i, s, h) < 0)) {
                        t.push(s), a = i = s, s = i, o = n = r, r = n, l = n;
                        continue;
                    }
                    a = h, o = l;
                }
            }
            return 0 !== t.length && it.vequal(t[t.length - 1], e[e.length - 1].left) || t.push(e[e.length - 1].left), 
            this.path = t, t;
        }
    }
    const rt = new ze(), lt = new ze();
    class ht {
        constructor(e, t) {
            this.normal = e, this.constant = t;
        }
        clean() {
            this.normal.clean(), this.normal = null, this.constant = null;
        }
        setFromNormalAndCoplanarPoint(e, t) {
            return this.normal.copy(e), this.constant = -1 * ze.dot(t, this.normal), this;
        }
        setFromCoplanarPoints(e, t, i) {
            return ze.sub(i, t, rt), ze.sub(e, t, lt), ze.cross(rt, lt, rt), ze.normalize(rt, rt), 
            this.setFromNormalAndCoplanarPoint(rt, e), this;
        }
        distanceToPoint(e) {
            return ze.dot(this.normal, e) + this.constant;
        }
        projectPoint(e, t) {
            t.copy(this.normal);
            let i = -1 * this.distanceToPoint(e);
            ze.scalar(t, i, t), ze.add(t, e, t);
        }
    }
    const ct = new ze(), dt = new ze(), gt = new ze(), ut = new ze(), mt = new ze(), pt = new ze();
    class yt {
        constructor(e, t, i) {
            this.a = e, this.b = t, this.c = i;
        }
        clean() {
            this.a.clean(), this.b.clean(), this.c.clean(), this.a = null, this.b = null, this.c = null;
        }
        set(e, t, i) {
            return this.a.copy(e), this.b.copy(t), this.c.copy(i), this;
        }
        closestPointToPoint(e, t) {
            const i = this.a, a = this.b, s = this.c;
            let n, o;
            ze.sub(a, i, ct), ze.sub(s, i, dt), ze.sub(e, i, ut);
            const r = ze.dot(ct, ut), l = ze.dot(dt, ut);
            if (r <= 0 && l <= 0) return t.copy(i);
            ze.sub(e, a, mt);
            const h = ze.dot(ct, mt), c = ze.dot(dt, mt);
            if (h >= 0 && c <= h) return t.copy(a);
            const d = r * c - h * l;
            if (d <= 0 && r >= 0 && h <= 0) return n = r / (r - h), t.copy(i), ze.scalar(ct, n, ct), 
            ze.add(t, ct, t);
            ze.sub(e, s, pt);
            const g = ze.dot(ct, pt), u = ze.dot(dt, pt);
            if (u >= 0 && g <= u) return t.copy(s);
            const m = g * l - r * u;
            if (m <= 0 && l >= 0 && u <= 0) return o = l / (l - u), t.copy(i), ze.scalar(dt, o, dt), 
            ze.add(t, dt, t);
            const p = h * u - g * c;
            if (p <= 0 && c - h >= 0 && g - u >= 0) return ze.sub(s, a, gt), o = (c - h) / (c - h + (g - u)), 
            t.copy(a), ze.scalar(gt, o, gt), ze.add(t, gt, t);
            const y = 1 / (p + m + d);
            n = m * y, o = d * y, t.copy(i), ze.scalar(ct, n, ct), ze.scalar(dt, o, dt), ze.add(t, ct, t), 
            ze.add(t, dt, t);
        }
    }
    const It = new ze(), ft = new ze(), Lt = new ze(), wt = new ze();
    class bt {
        constructor() {
            this.zones = {}, this.point = new ze(), this.plane = new ht(new ze(), 0), this.triangle = new yt(new ze(), new ze(), new ze()), 
            this.closestPoint = new ze();
        }
        clean() {
            this.zones = null, this.point = null, this.plane = null, this.triangle = null, this.closestNode = null, 
            this.closestPoint = null;
        }
        static createZone(e) {
            return nt.buildZone(e);
        }
        setZoneData(e, t) {
            this.zones[e] = t;
        }
        getGroup(e, t) {
            if (!this.zones[e]) return null;
            let i, a, s, n, o, r = new ze(t.x, t.y, t.z), l = null, h = Math.pow(50, 2), c = this.zones[e].groups;
            for (n = 0; n < c.length; n++) for (a = c[n], o = 0; o < a.length; o++) i = a[o], 
            (s = it.distanceToSquared(i.centroid, r)) < h && (l = n, h = s);
            return l;
        }
        getRandomNode(e, t, i, a) {
            if (!this.zones[e]) return new ze();
            let s;
            a = a || 0, (i = i || null) && (s = new ze(i.x, i.y, i.z));
            const n = [], o = this.zones[e].groups[t];
            let r, l = a;
            for (let e = 0; e < o.length; e++) r = o[e], i && a ? it.distanceToSquared(s, r.centroid < l * l) && n.push(r.centroid) : n.push(r.centroid);
            return it.sample(n) || new ze();
        }
        getClosestNode(e, t, i, a = !1) {
            const s = this.zones[t].groups[i], n = this.zones[t].vertices;
            let o = null, r = 1 / 0;
            for (let t = 0; t < s.length; t++) {
                let i = s[t];
                const l = it.distanceToSquared(i.centroid, e);
                l < r && (!a || it.isVectorInPolygon(e, i, n)) && (o = i, r = l);
            }
            return o;
        }
        getClosestNodeFixed(e, t, i, a = !1) {
            const s = this.zones[t].groups[i], n = this.zones[t].vertices;
            let o, r = null, l = 1 / 0, h = new ze(e.x, e.y, e.z);
            for (let e = 0; e < s.length; e++) {
                o = s[e];
                const t = it.distanceToSquared(o.centroid, h);
                t < l && (!a || it.isVectorInPolygon(h, o, n)) && (r = o, l = t);
            }
            return r;
        }
        findPath(e, t, i, a) {
            let s = new ze(e.x, e.y, e.z), n = new ze(t.x, t.y, t.z);
            const o = this.zones[i].groups[a], r = this.zones[i].vertices, l = this.getClosestNode(s, i, a), h = this.getClosestNode(n, i, a, !0);
            if (!l || !h) return null;
            const c = at.search(o, l, h), d = function(e, t) {
                for (var i = 0; i < e.neighbours.length; i++) if (e.neighbours[i] === t.id) return e.portals[i];
            }, g = new ot();
            g.push(s, s);
            for (let e = 0; e < c.length; e++) {
                const t = c[e], i = c[e + 1];
                if (i) {
                    const e = d(t, i);
                    g.push(r[e[0]], r[e[1]]);
                }
            }
            return g.push(n, n), g.stringPull(), g.path.map(e => new ze(e.x, e.y, e.z));
        }
        findPathWithNode(e, t, i, a, s, n) {
            const o = this.zones[s].groups[n], r = this.zones[s].vertices;
            if (!i || !a) return null;
            const l = at.search(o, i, a), h = function(e, t) {
                for (var i = 0; i < e.neighbours.length; i++) if (e.neighbours[i] === t.id) return e.portals[i];
            }, c = new ot();
            c.push(e, e);
            for (let e = 0; e < l.length; e++) {
                const t = l[e], i = l[e + 1];
                if (i) {
                    const e = h(t, i);
                    c.push(r[e[0]], r[e[1]]);
                }
            }
            return c.push(t, t), c.stringPull(), c.path.map(e => new ze(e.x, e.y, e.z));
        }
        alongNavMesh(e, t, i, a, s, n) {
            let o, r = [], l = [], h = It, c = ft, d = 1 / 0, g = null, u = Lt, m = !1;
            ze.add(e, i, u), ze.scalar(u, .5, u);
            let p = .5 * ze.MagnitudeXZToSquared(e, i);
            h.copy(e), r[0] = t, l[0] = t;
            const y = this.zones[s].vertices, I = this.zones[s].groups[n];
            if (!t) return t;
            let f, L;
            for (;r.length > 0; ) {
                let e = r.shift(), t = e;
                if (it.isVectorInPolygon(i, t, y)) {
                    g = e, h.copy(i), m = !1;
                    break;
                }
                for (let a = 0, s = 2; a < 3; s = a++) {
                    let n = t.vertexIds[s], w = t.vertexIds[a], b = !0, E = null;
                    for (let t = 0; t < e.neighbours.length; t++) if (null != (E = I[e.neighbours[t]])) {
                        for (let e = 0, t = 2; e < 3; t = e++) {
                            let i = E.vertexIds[t], a = E.vertexIds[e];
                            if (i == n && a == w || i == w && a == n) {
                                b = !1;
                                break;
                            }
                        }
                        if (!b) break;
                    }
                    if (b) it.nearestPointStrictXZ(y[n], y[w], i, c), (o = ze.MagnitudeXZToSquared(c, i)) < d && (h.copy(c), 
                    d = o, g = e, m = !0, f = y[n], L = y[w]); else {
                        if (-1 != l.indexOf(E)) continue;
                        l[l.length] = E, it.nearestPointStrictXZ(y[n], y[w], u, c), (o = ze.MagnitudeXZToSquared(c, u)) <= p && (r[r.length] = E);
                    }
                }
            }
            return g || (console.error("alongMesh error"), g = t, h = e), this.plane.setFromCoplanarPoints(y[g.vertexIds[0]], y[g.vertexIds[1]], y[g.vertexIds[2]]), 
            this.plane.projectPoint(h, wt), a.x = wt.x, a.y = wt.y, a.z = wt.z, {
                node: g,
                isCollise: m,
                p1: f,
                p2: L
            };
        }
        getProjectByNode(e, t, i, a) {
            const s = this.zones[a].vertices;
            this.plane.setFromCoplanarPoints(s[t.vertexIds[0]], s[t.vertexIds[1]], s[t.vertexIds[2]]), 
            It.copy(e), this.plane.projectPoint(It, i);
        }
    }
    var Et;
    !function(e) {
        e[e.GAME_1 = 1] = "GAME_1", e[e.EQUIP = 2] = "EQUIP", e[e.BUY = 3] = "BUY", e[e.SYNTHESIS = 4] = "SYNTHESIS", 
        e[e.WAREHOUSE = 5] = "WAREHOUSE", e[e.CHOOSEARM = 6] = "CHOOSEARM", e[e.TOEQUIP = 7] = "TOEQUIP", 
        e[e.GAME_2 = 8] = "GAME_2", e[e.SIGN = 9] = "SIGN", e[e.GAME_3 = 10] = "GAME_3", 
        e[e.NEWGIFT = 11] = "NEWGIFT", e[e.GAME_4 = 12] = "GAME_4", e[e.SUPERARM = 13] = "SUPERARM", 
        e[e.GAME_5 = 14] = "GAME_5", e[e.GAME_6 = 15] = "GAME_6", e[e.UNLOCKFUNMODE = 16] = "UNLOCKFUNMODE", 
        e[e.FUNGAME_1 = 17] = "FUNGAME_1", e[e.FUNGAME_2 = 18] = "FUNGAME_2", e[e.UNLOCKSHMODE = 19] = "UNLOCKSHMODE", 
        e[e.SHMODEGAME_1 = 20] = "SHMODEGAME_1", e[e.FINISH = 21] = "FINISH", e[e.MAX = 999] = "MAX";
    }(Et || (Et = {}));
    let Ct = {};
    var vt;
    Ct[Et.GAME_1] = "1.第一局排位赛指引", Ct[Et.EQUIP] = "2.打开仓库", Ct[Et.BUY] = "3.指引购买", Ct[Et.SYNTHESIS] = "4.指引合成", 
    Ct[Et.WAREHOUSE] = "5.指引进入仓库", Ct[Et.CHOOSEARM] = "6.选择武器", Ct[Et.TOEQUIP] = "7.装备", 
    Ct[Et.GAME_2] = "8.第二局", Ct[Et.SIGN] = "9.打开签到", Ct[Et.GAME_3] = "10.第三局", Ct[Et.NEWGIFT] = "11.新人礼包", 
    Ct[Et.GAME_4] = "12.第四局", Ct[Et.SUPERARM] = "13.超级武器", Ct[Et.GAME_5] = "14.第五局", 
    Ct[Et.GAME_6] = "15.第六局", Ct[Et.UNLOCKFUNMODE] = "16.娱乐模式解锁", Ct[Et.FUNGAME_1] = "17.娱乐模式第一局", 
    Ct[Et.FUNGAME_2] = "18.娱乐模式第二局", Ct[Et.UNLOCKSHMODE] = "19.生化模式解锁", Ct[Et.SHMODEGAME_1] = "20.生化模式第一局", 
    Ct[Et.FINISH] = "21.完结", function(e) {
        e[e.SING = 1] = "SING", e[e.RANK = 2] = "RANK", e[e.MODE = 3] = "MODE", e[e.BIOCHEMISTRY = 4] = "BIOCHEMISTRY", 
        e[e.TASK = 5] = "TASK", e[e.EQUIP = 6] = "EQUIP", e[e.NEW_GIFT = 7] = "NEW_GIFT", 
        e[e.SUPER_EQUIP = 8] = "SUPER_EQUIP";
    }(vt || (vt = {}));
    class xt {
        static reportAnalyise(e, t = {}, i = 0, a = !1) {
            ol.reportAnalyise(e, null, t), a && (e = tl.getInstance().isNew ? "新用户" + e : "老用户" + e, 
            ol.reportAnalyise(e, null, t));
        }
        static reportOnLineTime() {
            let e = 0, t = function() {
                if (e > 300) return;
                let t = {};
                tl.getInstance().isNew && (t["新用户时长"] = e), ol.reportAnalyise(_.ONLINE_TIME, null, t), 
                e += 30;
            };
            t(), setInterval(t, 3e4);
        }
        static reportNewPlayrStart(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "状态": "开始"
            });
        }
        static reportNewPlayrWin(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "状态": "胜利"
            });
        }
        static reportNewPlayrLose(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "状态": "失败"
            });
        }
        static reportNewPlayerWinLoseView(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "页面": "胜利/失败页面"
            });
        }
        static reportNewPlayerMySlefView(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "页面": "个人胜利/失败页面"
            });
        }
        static reportNewPlayerDanView(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "页面": "段位"
            });
        }
        static reportNewPlayerEndBoxView(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "页面": "结算宝箱"
            });
        }
        static reportNewPlayerEndRewardSingleView(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "页面": "恭喜获得（单）"
            });
        }
        static reportNewPlayerEndRewardListView(e) {
            let t;
            1 == e ? t = _.NEW_GAME_ONE : 2 == e ? t = _.NEW_GAME_TWO : 3 == e && (t = _.NEW_GAME_THREE), 
            ol.reportAnalyise(t, null, {
                "页面": "恭喜获得（列表）"
            });
        }
        static reportGuide(e) {
            let t = {};
            t[Ct[e]] = 1, ol.reportAnalyise(_.GUIDE, null, t);
        }
    }
    class Bt {
        static init(e = null) {
            this.funcList = [], this.autoList = [], this.delayList = [], this.isAutoOpen = !1, 
            this.isOpening = !1, this.viewRoot = new Laya.View(), this.viewCommon = e, Laya.stage.addChild(this.viewRoot), 
            this.viewCommon && Laya.stage.addChild(this.viewCommon);
        }
        static clean() {
            for (let e = this.funcList.length - 1; e >= 0; e--) {
                let t = this.funcList[e];
                t.onDisbale(), t.onExit(), t.viewCtrl.destroy(), t.clean();
            }
            this.viewRoot.destroyChildren(), this.funcList = [], this.autoList = [], this.delayList = [], 
            this.newFunc = null;
        }
        static _openFunction(e, t, i, a, s = null) {
            if (this.isOpening) return this.delayList.push({
                funcTag: e,
                args: s,
                mode: t,
                type: i,
                commonMenuStyle: a
            }), void console.warn("当前有Function正在创建, 不创建新Function, 加入等待列表");
            for (let t = 0; t < this.funcList.length; t++) if (this.funcList[t].tag == e) return void console.warn("不能重复打开界面", this.funcList[t].tag);
            this.isOpening = !0;
            let n = new (Laya.ClassUtils.getRegClass(e))(t, e, i, a, s), o = n.createView();
            if (i == ur.WINDOW) {
                o.anchorX = .5, o.anchorY = .5, o.x = .5 * Laya.stage.width, o.y = .5 * Laya.stage.height;
                let e = new Laya.Box();
                e.width = Laya.stage.width, e.height = Laya.stage.height;
                let t = new Laya.Image(ul.IMG_MASK_BG);
                t.width = e.width, t.height = e.height, t.alpha = 0, t.sizeGrid = "2,4,3,2", e.addChild(t), 
                e.addChild(o), o.scale(0, 0), this.commonOpenWindowAnimation(t, o, .8), this.viewRoot.addChild(e);
            } else this.viewRoot.addChild(o);
            return this.newFunc = n, xt.reportAnalyise("打开界面", {
                "功能": this.newFunc.getFunctionName()
            }), o.active ? this.onViewCreated() : o.on("onViewCreated", this, this.onViewCreated), 
            n;
        }
        static openFunction(e, t, i, a, s = null, n = null) {
            return this.isAutoOpen = !1, this.openSuccessCB = n, this._openFunction(e, t, i, a, s);
        }
        static onViewCreated() {
            let e = Bt.newFunc;
            e.request(function() {
                e.setAllButtonAnalysePoint();
                let t = Bt.funcList[Bt.funcList.length - 1];
                if (e.mode == gr.COVER ? t && t.onDisbale() : t && Bt.cleanFunction(t), Bt.funcList.push(e), 
                e.onEnter(), e.onEnable(), Bt.viewCommon && Bt.viewCommon.setMenuStyle(e.commonStyle), 
                Bt.openSuccessCB && (Bt.openSuccessCB(), Bt.openSuccessCB = null), Bt.isOpening = !1, 
                W.log("onViewCreated UIManager.funcList", Bt.funcList), Bt.delayList.length > 0) {
                    let e = Bt.delayList.splice(0, 1)[0];
                    Bt._openFunction(e.funcTag, e.mode, e.type, e.commonMenuStyle, e.args);
                }
            });
        }
        static cleanFunction(e) {
            Bt.funcList.splice(Bt.funcList.length - 1, 1), e.onDisbale(), e.onExit(), e.type == ur.WINDOW || (e.viewCtrl.destroy(), 
            e.clean());
        }
        static closeFunction() {
            let e = Bt.funcList[Bt.funcList.length - 1];
            if (e) {
                let t = this, i = function() {
                    if (t.autoList.length > 0 && t.autoList[0].depth == t.funcList.length) {
                        let e = t.autoList.splice(0, 1)[0];
                        t.isAutoOpen = !0, t._openFunction(e.funcTag, e.mode, e.type, e.commonMenuStyle, e.args);
                    } else {
                        let e = Bt.funcList[Bt.funcList.length - 1];
                        e && (Bt.viewCommon && Bt.viewCommon.setMenuStyle(e.commonStyle), e.onEnable()), 
                        W.log("closeFunction UIManager.funcList", Bt.funcList);
                    }
                };
                if (e.type == ur.VIEW) this.cleanFunction(e), i(); else if (e.type == ur.WINDOW) {
                    let t = e.viewCtrl.parent, a = t.getChildAt(0);
                    this.commonCloseWindowAnimation(a, e.viewCtrl, function() {
                        t.destroy(), e.clean(), i();
                    }), this.cleanFunction(e);
                }
            } else console.warn("没有function可以关闭!");
        }
        static registerAutoOpenFunction(e, t, i, a, s = null, n = !1, o = !1) {
            if (!n) for (let t = 0; t < this.autoList.length; t++) if (this.autoList[t].funcTag == e) return void console.warn("不能重复注册相同的function!");
            let r = this.funcList.length;
            this.autoList.push({
                funcTag: e,
                args: s,
                mode: t,
                type: i,
                commonMenuStyle: a,
                depth: r,
                isCanRepetition: n
            });
            let l = null;
            for (let e = 0; e < this.autoList.length; e++) {
                this.autoList[e].funcTag == Er.GET_MODE_REWARD && (l = e);
            }
            if (null != l) {
                let e = this.autoList[l];
                this.autoList.splice(l, 1), this.autoList.push(e), console.log("模式选择最后弹出");
            }
            console.log(this.autoList);
        }
        static triggerAutoOpen() {
            if (this.autoList.length > 0) {
                let e = Bt.autoList.splice(0, 1)[0];
                this.isAutoOpen = !0, this._openFunction(e.funcTag, e.mode, e.type, e.commonMenuStyle, e.args);
            }
        }
        static getFunctionViewCtrl(e) {
            for (let t = 0; t < this.funcList.length; t++) if (this.funcList[t] instanceof Laya.ClassUtils.getRegClass(e)) return this.funcList[t].viewCtrl;
            return null;
        }
        static getFunction(e) {
            for (let t = 0; t < this.funcList.length; t++) if (this.funcList[t] instanceof Laya.ClassUtils.getRegClass(e)) return this.funcList[t];
            return null;
        }
        static commonOpenWindowAnimation(e, t, i = .8, a = null) {
            let s = t;
            e.alpha = 0, s.scale(0, 0), s.centerX = .5, s.centerY = .5, Laya.Tween.to(s, {
                scaleX: 1,
                scaleY: 1
            }, 300, Laya.Ease.backOut, Laya.Handler.create(this, function() {
                a && a();
            })), Laya.Tween.to(e, {
                alpha: i
            }, 300), a && a();
        }
        static commonCloseWindowAnimation(e, t, i = null) {
            let a = t;
            a.centerX = .5, a.centerY = .5, Laya.Tween.to(a, {
                scaleX: 0,
                scaleY: 0
            }, 300, Laya.Ease.backIn, Laya.Handler.create(this, function() {
                i && i();
            })), Laya.Tween.to(e, {
                alpha: 0
            }, 300);
        }
        static replaceAdIcon(e) {
            if (hl.platform == v.TT || hl.platform == v.WEB || hl.platform == v.WEB_4399) for (let t = 0; t < e.length; t++) {
                let i = e[t];
                1 == i.type ? i.img.skin = ul.ADICON.TT_AD_1 : i.img.skin = ul.ADICON.TT_AD_2;
            }
        }
    }
    class At {
        static autoUnlinkUIReference(e) {
            if (!e.viewUrl) return;
            let t = Laya.loader.getRes(e.viewUrl), i = [];
            this.getUIChildReference(t, i);
            let a = this.getUIAnimationReference(t);
            for (let t = 0; t < i.length; t++) e[i[t]] = null;
            for (let t = 0; t < a.length; t++) e[a[t]] && e[a[t]].stop(), e[a[t]] = null;
        }
        static getUIChildReference(e, t) {
            if (e.props && e.props.var && t.push(e.props.var), e.child) for (let i = 0; i < e.child.length; i++) this.getUIChildReference(e.child[i], t);
        }
        static getUIAnimationReference(e) {
            let t = [];
            if (e.animations) for (let i = 0; i < e.animations.length; i++) e.animations[i].name && t.push(e.animations[i].name);
            return t;
        }
        static overwrite() {
            this._loadScene(), this._collision();
        }
        static _loadScene() {
            Laya.Scene.prototype.loadScene = function(e) {
                var t = e.indexOf(".") > -1 ? e : e + ".scene", i = Laya.loader.getRes(t);
                if (this.viewUrl = t, i) this.createView(i), this.uiView = i; else {
                    this._setBit(Laya.Const.NOT_READY, !0), Laya.loader.resetProgress();
                    var a = new Laya.SceneLoader();
                    a.on(Laya.Event.COMPLETE, this, this._onSceneLoaded, [ t ]), a.load(t);
                }
            };
        }
        static _collision() {
            let e = Laya.BoundsOctreeNode;
            e.prototype.getCollidingWithRayWithLayer = function(e, t, i = Number.MAX_VALUE, a) {
                var s = Laya.CollisionUtils.intersectsRayAndBoxRD(e, this._bounds);
                if (!(-1 == s || s > i)) {
                    for (var n = 0, o = this._objects.length; n < o; n++) {
                        var r = this._objects[n];
                        r && r.layer == a && -1 !== (s = Laya.CollisionUtils.intersectsRayAndBoxRD(e, r.bounds._getBoundBox())) && s <= i && t.push(r);
                    }
                    if (null != this._children) for (n = 0; n < 8; n++) {
                        var l = this._children[n];
                        l && l.getCollidingWithRayWithLayer(e, t, i, a);
                    }
                }
            }, e.prototype.getCollidingWithRay = function(e, t, i = Number.MAX_VALUE) {
                var a = Laya.CollisionUtils.intersectsRayAndBoxRD(e, this._bounds);
                if (!(-1 == a || a > i)) {
                    for (var s = 0, n = this._objects.length; s < n; s++) {
                        var o = this._objects[s];
                        -1 !== (a = Laya.CollisionUtils.intersectsRayAndBoxRD(e, o.bounds._getBoundBox())) && a <= i && t.push(o);
                    }
                    if (null != this._children) for (s = 0; s < 8; s++) {
                        var r = this._children[s];
                        r && r.getCollidingWithRay(e, t, i);
                    }
                }
            }, e.prototype.isCollidingWithBoundBox = function(e) {
                if (!Laya.CollisionUtils.intersectsBoxAndBox(this._bounds, e)) return !1;
                for (var t = 0, i = this._objects.length; t < i; t++) {
                    var a = this._objects[t];
                    if (Laya.CollisionUtils.intersectsBoxAndBox(a.bounds._getBoundBox(), e)) return !0;
                }
                if (null != this._children) for (t = 0; t < 8; t++) {
                    var s = this._children[t];
                    if (s && s.isCollidingWithBoundBox(e)) return !0;
                }
                return !1;
            }, e.prototype.isCollidingWithRay = function(e, t = Number.MAX_VALUE) {
                var i = Laya.CollisionUtils.intersectsRayAndBoxRD(e, this._bounds);
                if (-1 == i || i > t) return !1;
                for (var a = 0, s = this._objects.length; a < s; a++) {
                    var n = this._objects[a];
                    if (-1 !== (i = Laya.CollisionUtils.intersectsRayAndBoxRD(e, n.bounds._getBoundBox())) && i <= t) return !0;
                }
                if (null != this._children) for (a = 0; a < 8; a++) {
                    var o = this._children[a];
                    if (o && o.isCollidingWithRay(e, t)) return !0;
                }
                return !1;
            }, e.prototype.isCollidingWithRayWithLayer = function(e, t = Number.MAX_VALUE, i) {
                var a = Laya.CollisionUtils.intersectsRayAndBoxRD(e, this._bounds);
                if (-1 == a || a > t) return !1;
                for (var s = 0, n = this._objects.length; s < n; s++) {
                    var o = this._objects[s];
                    if (o && o.layer == i && -1 !== (a = Laya.CollisionUtils.intersectsRayAndBoxRD(e, o.bounds._getBoundBox())) && a <= t) return !0;
                }
                if (null != this._children) for (s = 0; s < 8; s++) {
                    var r = this._children[s];
                    if (r && r.isCollidingWithRayWithLayer(e, t, i)) return !0;
                }
                return !1;
            };
            let t = Laya.BoundsOctree;
            t.prototype.getCollidingWithRayWithLayer = function(e, t, i = Number.MAX_VALUE, a) {
                this._rootNode.getCollidingWithRayWithLayer(e, t, i, a);
            }, t.prototype.isCollidingWithRayWithLayer = function(e, t = Number.MAX_VALUE, i) {
                return this._rootNode.isCollidingWithRayWithLayer(e, t, i);
            };
        }
    }
    let _t = {
        parseURI: function(e) {
            if (console.log("parseURI", e), "" == e || !e) return {};
            let t = e.split("?");
            if (!t[1]) return {};
            let i = t[1].split("&"), a = {};
            for (let e in i) {
                let t = i[e].split("=");
                a[t[0]] = t[1];
            }
            return a;
        },
        convertNum: function(e) {
            var t = 0, i = [];
            let a = 0;
            if (-1 == (e = new String(e)).indexOf("E") && -1 == e.indexOf("e")) return e + "";
            t = -1 != e.indexOf("E") ? e.indexOf("E") : e.indexOf("e");
            var s = e.substr(0, t).split(".", 2);
            -1 != e.indexOf("E") ? a = parseInt(e.split("E")[1]) : -1 != e.indexOf("e") && (a = parseInt(e.split("e")[1]));
            var n = e.substr(t + 1, a), o = n.substr(0, 1);
            if (n = n.substr(1, n.length), n *= 1, "+" == o) {
                for (n -= s[1].length; n > 0; ) i.unshift(0), n -= 1;
                i.unshift(1 * s[1]), i.unshift(1 * s[0]);
            } else {
                for (n -= s[1].length, (i = []).push(0), i.push("."); n > 0; ) i.push(0), n -= 1;
                i.push(s);
            }
            return i.join(""), (e = (i + "").replace(/,/g, "")).length < a + 1 && (e += "0"), 
            e;
        },
        parseGold: function(e) {
            let t = [ {
                unit: "K",
                length: 4
            }, {
                unit: "M",
                length: 7
            }, {
                unit: "G",
                length: 10
            }, {
                unit: "T",
                length: 13
            }, {
                unit: "P",
                length: 16
            }, {
                unit: "E",
                length: 19
            }, {
                unit: "Z",
                length: 22
            }, {
                unit: "Y",
                length: 25
            }, {
                unit: "∞",
                length: 28
            } ];
            e = new Number(e), e = Math.floor(e);
            let i = _t.convertNum(e);
            if (i.length < t[0].length) return e;
            let a = 1;
            for (let s = 0; s < t.length; s++) {
                if (!t[a]) return t[s].unit;
                if (i.length >= t[s].length && i.length < t[a].length) {
                    return (e / Math.pow(10, t[s].length - 1)).toFixed(2) + t[s].unit;
                }
                a++;
            }
        },
        parseTimeMS: function(e) {
            if ((e = parseInt(e)) < 0) return "00:00";
            let t = Math.floor(e / 60), i = "" + t, a = "" + (e - 60 * t);
            return 1 == i.length && (i = "0" + i), 1 == a.length && (a = "0" + a), i + ":" + a;
        },
        parseTimeHMS: function(e) {
            if ((e = parseInt(e)) < 0) return "00:00:00";
            let t = Math.floor(e / 3600), i = Math.floor((e - 3600 * t) / 60), a = "" + t, s = "" + i, n = "" + (e - 3600 * t - 60 * i);
            return 1 == a.length && (a = "0" + a), 1 == s.length && (s = "0" + s), 1 == n.length && (n = "0" + n), 
            a + ":" + s + ":" + n;
        },
        toQueryString: function(e, t = "=", i = "&") {
            return Object.keys(e).filter(function(t) {
                return "sign" != t && void 0 !== e[t] && "" !== e[t];
            }).sort().map(function(i) {
                return i + t + e[i];
            }).join(i);
        }
    };
    var St, Tt, Dt;
    !function(e) {
        e[e.HIDE = 0] = "HIDE", e[e.ALL_SHOW = 1] = "ALL_SHOW", e[e.DIAMOND = 2] = "DIAMOND", 
        e[e.GOLD = 3] = "GOLD";
    }(St || (St = {}));
    class Rt extends T.view.common.CommonMenuTopBarUI {
        constructor() {
            super(), this.diamondChangeDelay = 0, this.targetDiamondNum = 0, this.curDiamOndNum = 0, 
            this.goldChangeDelay = 0, this.targetGoldNum = 0, this.curGoldNum = 0;
        }
        onAwake() {
            this.setInfo(), this.curDiamOndNum = tl.getInstance().getDiamond(), this.targetDiamondNum = this.curDiamOndNum, 
            this.curGoldNum = tl.getInstance().getGold(), this.targetGoldNum = this.curGoldNum, 
            this.timer.loop(1, this, this.update), this.timer.loop(1e3, this, this.update1000ms), 
            this.viewDiamond.on(Laya.Event.CLICK, this, this.onBtnDiamond), this.viewGold.on(Laya.Event.CLICK, this, this.onBtnGold);
        }
        onDestroy() {
            Laya.timer.clearAll(this), At.autoUnlinkUIReference(this.viewDiamond), At.autoUnlinkUIReference(this);
        }
        setMenuStyle(e) {
            this.viewDiamond.visible = !1, this.viewGold.visible = !1, this.visible = !0, e == St.ALL_SHOW ? (this.viewDiamond.visible = !0, 
            this.viewGold.visible = !0) : e == St.DIAMOND ? this.viewDiamond.visible = !0 : e == St.HIDE ? this.visible = !1 : e == St.GOLD && (this.viewGold.visible = !0);
        }
        onBtnDiamond() {
            q.getTouch() && Bt.openFunction(Er.ADD_DIAMONDS, gr.COVER, ur.WINDOW, St.DIAMOND);
        }
        onBtnGold() {
            q.getTouch() && Bt.openFunction(Er.ADD_GOLD, gr.COVER, ur.WINDOW, St.GOLD);
        }
        setInfo() {
            this.viewDiamond.txtCount.text = tl.getInstance().getDiamond().toString(), this.viewGold.txtCount.text = tl.getInstance().getGold().toString();
        }
        update() {
            this.updateDiamondAni(), this.updateGoldAni();
        }
        update1000ms() {
            this.visible;
        }
        getDiamondPos() {
            return this.viewDiamond.imgDiamond.localToGlobal(new Laya.Point(this.viewDiamond.imgDiamond.width / 2, this.viewDiamond.imgDiamond.width / 2));
        }
        getDiamondIcon() {
            return this.viewDiamond.imgDiamond;
        }
        getGoldPos() {
            return this.viewGold.imgGold.localToGlobal(new Laya.Point(this.viewGold.imgGold.width / 2, this.viewGold.imgGold.width / 2));
        }
        getGoldIcon() {
            return this.viewGold.imgGold;
        }
        updateDiamondAni() {
            this.targetDiamondNum = tl.getInstance().getDiamond(), this.targetDiamondNum - this.curDiamOndNum > 1 ? (this.diamondChangeDelay += Laya.timer.delta, 
            this.diamondChangeDelay >= 1e3 && (this.curDiamOndNum = Math.ceil(this.curDiamOndNum + (this.targetDiamondNum - this.curDiamOndNum) * Laya.timer.delta * .005))) : (this.diamondChangeDelay = 0, 
            this.curDiamOndNum = this.targetDiamondNum);
            let e = _t.parseGold(this.curDiamOndNum);
            this.viewDiamond.txtCount.text != e && (this.viewDiamond.txtCount.text = e);
        }
        updateGoldAni() {
            this.targetGoldNum = tl.getInstance().getGold(), this.targetGoldNum - this.curGoldNum > 1 ? (this.goldChangeDelay += Laya.timer.delta, 
            this.goldChangeDelay >= 1e3 && (this.curGoldNum = Math.ceil(this.curGoldNum + (this.targetGoldNum - this.curGoldNum) * Laya.timer.delta * .005))) : (this.goldChangeDelay = 0, 
            this.curGoldNum = this.targetGoldNum);
            let e = _t.parseGold(this.curGoldNum);
            this.viewGold.txtCount.text != e && (this.viewGold.txtCount.text = e);
        }
    }
    class Nt {
        static pushScene(e) {
            this.curScene = new e(), Laya.stage.addChild(this.curScene), this.curScene.onEnter();
        }
        static getCurScene() {
            return Nt.curScene;
        }
    }
    Nt.curScene = null, function(e) {
        e[e.TEAMCOMPETITION = 1] = "TEAMCOMPETITION", e[e.BIOCHEMISTRY = 2] = "BIOCHEMISTRY", 
        e[e.SNIPERMODE = 3] = "SNIPERMODE", e[e.TWOVSTWOMODE = 4] = "TWOVSTWOMODE", e[e.KNIFEWARMODE = 5] = "KNIFEWARMODE", 
        e[e.ONEVSONEMODE = 6] = "ONEVSONEMODE", e[e.SKILL_MODE = 7] = "SKILL_MODE";
    }(Tt || (Tt = {})), function(e) {
        e[e.UN_MAP = -1] = "UN_MAP", e[e.RAND = 0] = "RAND", e[e.SHIP = 2] = "SHIP", e[e.SNOWFIELD = 1] = "SNOWFIELD", 
        e[e.FRORTRESS = 3] = "FRORTRESS", e[e.SNIPER_FIELD = 4] = "SNIPER_FIELD", e[e.BIOCHEMICAL_DESERT = 5] = "BIOCHEMICAL_DESERT", 
        e[e.BIOCHEMICAL_DESERT1 = 6] = "BIOCHEMICAL_DESERT1", e[e.NEW_YEAR = 7] = "NEW_YEAR", 
        e[e.SKILL_MAP = 8] = "SKILL_MAP";
    }(Dt || (Dt = {}));
    class Mt {
        static modeChoose(e) {
            this.mode = e;
        }
        static isCanOpenSniperMode() {
            let e = tl.getInstance().getSkinGameCurLib();
            for (let t = 0; t < e.length; t++) if (3 == A.getDataByKey(e[t]).type) return !0;
            return !1;
        }
        static isCanOpenKnifeMode() {
            let e = tl.getInstance().getGameCurPropLib();
            for (let t = 0; t < e.length; t++) if (console.log(_e.getDataByKey(e[t])), 2 == _e.getDataByKey(e[t]).type) return !0;
            return !1;
        }
        static modeLoad(e = !1) {
            Ts.synthesisViewCtrl && Ts.synthesisViewCtrl.removeSelf(), Bt.clean(), Bt.openFunction(Er.GAME, gr.COVER, ur.VIEW, St.HIDE);
            let t = 0;
            if (e) return this.mode = Tt.TEAMCOMPETITION, this.map = Ae.onlyOneRandomInt(1, 3), 
            void Mt.modeLoadSubPackage(function() {
                console.log("获取得地图：", Mt.map), t = this.map - 1;
                let e = Gt.mapList[t], i = "";
                hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || (i = "native/"), 
                Nt.getCurScene().createAllModeMap(i + e.path);
            }.bind(this));
            console.log("获取得地图：", Mt.map), t = this.map - 1;
            let i = Gt.mapList[t], a = "";
            hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || (a = "native/"), 
            Nt.getCurScene().createAllModeMap(a + i.path);
        }
        static modeLoadSubPackage(e) {
            let t = this.map - 1, i = Gt.mapList[t], a = [ i.sub ];
            Mt.mode != Tt.SKILL_MODE && Mt.mode != Tt.BIOCHEMISTRY || (a = [], Mt.mode == Tt.SKILL_MODE && xt.reportAnalyise(_.ENTER_SKILL)), 
            "sub14" != i.sub && "sub10" != i.sub && "sub16" != i.sub || (a = []);
            let s = 0, n = function() {
                Mt.mode == Tt.SKILL_MODE || Mt.mode == Tt.BIOCHEMISTRY ? (Mt.mode == Tt.SKILL_MODE && xe.loadRes([ {
                    url: Gt.mapList[7].path
                }, {
                    url: ul.WEAPON_OTHER_PREFEB
                } ], Laya.Handler.create(this, e), Laya.Handler.create(this, function(e) {})), Mt.mode == Tt.BIOCHEMISTRY && xe.loadRes([ {
                    url: ul.SKIN_ZOMBIE
                }, {
                    url: i.path
                } ], Laya.Handler.create(this, e), Laya.Handler.create(this, function(e) {}))) : "sub14" == i.sub || "sub10" == i.sub || "sub16" == i.sub ? xe.loadRes([ {
                    url: i.path
                } ], Laya.Handler.create(this, e), Laya.Handler.create(this, function(e) {})) : e();
            }.bind(this);
            this.isFristLoad && (a.push(pl.GAME_SOUND), hl.platform != v.WX && hl.platform != v.TT && a.push(pl.SUB13), 
            this.isFristLoad = !1);
            let o = function() {
                a[s] ? xe.loadSubpackage(a[s], function() {
                    s++, o();
                }, function(e) {}) : n();
            };
            o();
        }
    }
    Mt.mode = Tt.TEAMCOMPETITION, Mt.map = Dt.SHIP, Mt.isFristLoad = !0;
    class kt {}
    kt.isCloseAILogic = !1, kt.isCloseAI = !1, kt.isCloseAni = !1, kt.isCloseEffect = !1, 
    kt.isCloseSound = !1, kt.isCloseCharacterCtrl = !0, kt.isCloseAniCtrl = !1, kt.isCloseAttack = !1, 
    kt.isCloseAILogicBaseLayer = !1, kt.isCloseZD = !1, kt.isDebug = !1;
    var Ot, Pt, Vt = Laya.Vector3;
    class Gt {
        static loadMap() {
            if (Gt.curMap = Ts.scene3d.getChildByName("map"), Gt.curMap.name = "map", Gt.curObjNav = Ts.scene3d.getChildByName(te.NAV_MESH), 
            this.setNavMesh(), kt.isCloseCharacterCtrl) {
                let e = Gt.curMap.getChildByName("collide"), t = [];
                q.getAllChildrenOfClass(e, Laya.MeshSprite3D, t);
                for (let e = 0; e < t.length; e++) {
                    let i = t[e], a = Math.abs(i.transform.localScaleX), s = Math.abs(i.transform.localScaleZ);
                    i.transform.localScaleX = Math.abs(i.transform.localScaleX) + 1, i.transform.localScaleY = Math.abs(i.transform.localScaleY), 
                    i.transform.localScaleZ = Math.abs(i.transform.localScaleZ) + 1, i.meshRenderer.enable = !1, 
                    new Ye(i, !0, -1), i.transform.localScaleX = a, i.transform.localScaleZ = s, new Ye(i, !0, -2);
                }
                let i = [];
                for (let e = 0; e < i.length; e++) ;
            }
            if (this.diJiaList = [], Mt.mode == Tt.SKILL_MODE) {
                q.getAllChildrenByName(Gt.curMap, "dijia", this.diJiaList);
                for (let e = 0; e < this.diJiaList.length; e++) {
                    this.diJiaList[e].active = !1;
                }
            }
        }
        static cleanMap() {
            Ts.scene3d && (console.log("清除主场景"), Ts.scene3d.removeSelf(), Ts.scene3d = null);
        }
        static setNavMesh() {
            let e = Gt.curObjNav.meshFilter.sharedMesh, t = [], i = new Float32Array(e.getVertices()), a = e.getVertexDeclaration();
            for (var s = a.getVertexElementByIndex(0), n = a.vertexStride / 4, o = s.offset / 4, r = 0; r < e.vertexCount; r++) {
                var l = n * r + o;
                t[r] = new ze(i[l], i[l + 1], i[l + 2]);
            }
            let h = e.getIndices(), c = [];
            for (let e = 0; e < h.length; e += 3) {
                let t = parseInt(h[e].toString()), i = parseInt(h[e + 1].toString()), a = parseInt(h[e + 2].toString());
                c.push(new Xe(a, i, t));
            }
            let d = new Ke();
            d.faces = c, d.vertices = t;
            let g = bt.createZone(d), u = new bt();
            u.setZoneData(Gt.zoneID, g), Gt.pathfinder = u, Gt.navGroup = u.getGroup(Gt.zoneID, new Vt());
        }
        static drawNavMesh(e, t) {
            Gt.pixelline = new Laya.PixelLineSprite3D(3 * t.length), Ts.scene3d.addChild(Gt.pixelline);
            for (var i = 0; i < t.length; i++) {
                var a = new Vt(e[t[i].a].x, e[t[i].a].y, e[t[i].a].z), s = new Vt(e[t[i].b].x, e[t[i].b].y, e[t[i].b].z), n = new Vt(e[t[i].c].x, e[t[i].c].y, e[t[i].c].z);
                Gt.pixelline.addLine(a, s, Laya.Color.RED, Laya.Color.RED), Gt.pixelline.addLine(s, n, Laya.Color.RED, Laya.Color.RED), 
                Gt.pixelline.addLine(n, a, Laya.Color.RED, Laya.Color.RED);
            }
        }
    }
    Gt.scene = null, Gt.curMap = null, Gt.curObjNav = null, Gt.zoneID = "level", Gt.mapList = [ {
        sub: "sub8",
        path: "sub8/3d/LayaScene_map1/Conventional/map1.ls"
    }, {
        sub: "sub9",
        path: "sub9/3d/LayaScene_map2/Conventional/map2.ls"
    }, {
        sub: "sub10",
        path: "sub10/3d/LayaScene_map3/Conventional/map3.ls"
    }, {
        sub: "sub14",
        path: "sub14/3d/LayaScene_map4/Conventional/map4.ls"
    }, {
        sub: "sub15",
        path: "sub15/3d/LayaScene_map5/Conventional/map5.ls"
    }, {
        sub: "sub16",
        path: "sub16/3d/LayaScene_map6/Conventional/map6.ls"
    }, {
        sub: "sub17",
        path: "sub17/3d/LayaScene_map7/Conventional/map7.ls"
    }, {
        sub: "sub11",
        path: "sub11/3d/LayaScene_map8/Conventional/map8.ls"
    } ], Gt.diJiaList = [];
    class Ut extends T.view.load.LoadingViewUI {
        constructor(e = 1) {
            super(), this.startSec = 0, this.maxLen = 0, this.percent = 0, this.startSec = Laya.timer.currTimer, 
            this.height = Laya.stage.height, this.width = this.stage.width, this.maxLen = this.imgPro.width, 
            this.imgPro.width = 0, this.txtPercent.text = "玩命加载中，请耐心等待...(0%)", this.maxPart = e, 
            hl.gameType == rl.CYZQZRY ? this.imgLoading.skin = "loading/img_101.png" : hl.gameType == rl.QZRYJY ? this.imgLoading.skin = "loading/img_3.png" : hl.gameType == rl.QZHXJY ? this.imgLoading.skin = "loading/img_4.png" : hl.gameType == rl.CJRYZC && (this.imgLoading.skin = "loading/img_15.png");
        }
        onAwake() {
            hl.appId == H.C233_ME || hl.appId == H.MMY || hl.appId == H.HYKB || hl.platform == v.VIVO ? j.hideBannerAd() : j.showBannerAd(), 
            this.setPlatformStyle(), hl.platform == v.WX && (hl.gameType == rl.QZRYJY ? this.imgLoading.skin = "loading/img_3.png" : hl.gameType == rl.QZHXJY ? this.imgLoading.skin = "loading/img_4.png" : hl.gameType == rl.CYQZJY ? this.imgLoading.skin = "loading/img_14.png" : hl.gameType == rl.CJRYZC && (this.imgLoading.skin = "loading/img_15.png"));
        }
        close() {
            let e = Laya.timer.currTimer - this.startSec;
            e < 1500 ? this.timer.once(1500 - e, this, function() {
                this.destroy();
            }) : this.destroy();
        }
        setProgress(e, t = 1) {
            if (isNaN(e)) return;
            let i = (t - 1) / this.maxPart + e * (1 / this.maxPart);
            if (this.percent > i) return;
            this.percent = i, this.txtPercent.text = `玩命加载中，请耐心等待...(${Math.floor(100 * i)}%)`;
            let a = this.maxLen * i;
            Laya.Tween.clearAll(this.imgPro), Laya.Tween.to(this.imgPro, {
                width: a
            }, 200);
        }
        onDestroy() {
            Laya.timer.clearAll(this), this.txtPercent = null, Bt.newFunc.tag != Er.FIRST ? j.hideBannerAd() : hl.appId != v.WX && hl.platform != v.QQ && hl.appId != H.XM || j.showBannerAd(14, ol.getBannerCenterPos().y + (ol.isIOS() ? 30 : 0));
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.boxLoading.y -= 60);
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setWeb4399Platform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
    }
    class Ft extends Laya.Script3D {
        constructor(e, t, i = -1) {
            super(), this._type = 0, this.point = null, this._isUse = !1, this._camp = -1, this.vecFixedVector3 = new ze(), 
            this.firstFinish = !1, this.secondFinish = !1, this.thirdFinish = !1, this.myTran = null, 
            this.name = "", this._type = e, this._camp = i, this.point = t, this.myTran = this.point.transform, 
            this.name = this.point.name;
        }
        init() {
            this.firstFinish = !1, this.secondFinish = !1, this.thirdFinish = !1, this._isUse = !1;
        }
        getModeID() {
            return this.point.id;
        }
        initFinishData() {
            this.firstFinish = !1, this.secondFinish = !1, this.thirdFinish = !1;
        }
        turnPosFixedVector3(e) {
            return this.vecFixedVector3.x = e.position.x, this.vecFixedVector3.y = e.position.y, 
            this.vecFixedVector3.z = e.position.z, this.vecFixedVector3;
        }
        getNowPosFixedVector3() {
            return this.vecFixedVector3;
        }
        getPos() {
            return this.myTran.position;
        }
        initClosestNodeMySelf() {
            return Gt.pathfinder.getClosestNode(this.turnPosFixedVector3(this.point.transform), Gt.zoneID, Gt.navGroup, !0);
        }
        initClosestNodeChild1() {
            return Gt.pathfinder.getClosestNode(this.turnPosFixedVector3(this.point.getChildAt(0).transform), Gt.zoneID, Gt.navGroup, !0);
        }
        initClosestNodeChild2() {
            return Gt.pathfinder.getClosestNode(this.turnPosFixedVector3(this.point.getChildAt(1).transform), Gt.zoneID, Gt.navGroup, !0);
        }
        getPointName() {
            return this.name;
        }
        onDestroy() {
            this._type = null, this.point = null, this._isUse = null, this._camp = null;
        }
    }
    class Ht {
        static addBunkersList() {
            this.cleanBunkers();
            let e = Ts.scene3d.getChildByName(te.BUNKERPOINTS), t = e.numChildren - 2;
            for (let i = 0; i < t; i++) {
                let t = e.getChildByName("000" + (i + 1).toString());
                this.bunkersList.push(t);
                let a = t.addComponentIntance(new Ft(se.NORMAL, t));
                this.bunkersCtrlList.push(a);
            }
            let i = e.getChildByName("specialPoints1"), a = e.getChildByName("specialPoints2"), s = i.numChildren, n = a.numChildren, o = -1, r = -1;
            if (Rs.playerLogicalBaseLayer) {
                Laya.Vector3.distanceSquared(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3(), i.transform.position) > Laya.Vector3.distanceSquared(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3(), a.transform.position) ? (console.log("2近主角"), 
                o = Mr.TYPE_1) : (console.log("1近主角"), o = Mr.TYPE_0);
            }
            r = o == Mr.TYPE_0 ? Mr.TYPE_1 : Mr.TYPE_0;
            for (let e = 0; e < s; e++) {
                let t = i.getChildByName("000" + (e + 1).toString());
                this.bunkersList.push(t);
                let a = t.addComponentIntance(new Ft(se.SPECIAL, t, o));
                this.bunkersCtrlList.push(a);
            }
            for (let e = 0; e < n; e++) {
                let t = a.getChildByName("000" + (e + 1).toString());
                this.bunkersList.push(t);
                let i = t.addComponentIntance(new Ft(se.SPECIAL, t, r));
                this.bunkersCtrlList.push(i);
            }
        }
        static cleanBunkers() {
            this.bunkersList = [], this.bunkersCtrlList = [];
        }
        static getRangeBunkers(e) {
            let t = this.bunkersCtrlList[0], i = 0, a = !1;
            this.useData();
            for (let s = 0; s < this.bunkersCtrlList.length; s++) {
                let n = this.bunkersCtrlList[s];
                if (n) {
                    if (e.curPointCtrl && (e.curPointCtrl.getModeID() == n.getModeID() || this.checkOtherPoint(n, e))) continue;
                    if (Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), n.point.transform.position) < 100) if (n._type == se.SPECIAL) {
                        if (!n._isUse) {
                            console.log("获取特殊点"), i = s, n._isUse = !0, a = !0, t = n;
                            break;
                        }
                    } else if (n._camp == e.getRoleType() && !n._isUse) {
                        console.log("获取未使用的点"), i = s, n._isUse = !0, a = !0, t = n;
                        break;
                    }
                }
            }
            if (!a) for (let s = 0; s < this.bunkersCtrlList.length; s++) {
                let n = this.bunkersCtrlList[s];
                if (n) {
                    if (e.curPointCtrl && e.curPointCtrl.getModeID() == n.getModeID()) continue;
                    if (!n._isUse) {
                        i = s, n._isUse = !0, a = !0, t = n;
                        break;
                    }
                }
            }
            return e.getRoleType(), Mr.TYPE_0, e.curPointCtrl && e.curPointCtrl.init(), t;
        }
        static checkOtherPoint(e, t) {
            for (let i = 0; i < Rs.logicalBaseLayer.length; i++) {
                let a = Rs.logicalBaseLayer[i];
                if (a.getEventID() != t.getEventID() && a.getRoleType() != t.getRoleType() && a.curPointCtrl && a.curPointCtrl.getModeID() == e.getModeID()) return !1;
            }
            return !0;
        }
        static getBunkerNum() {
            let e = 0;
            for (let t = 0; t < this.bunkersCtrlList.length; t++) {
                this.bunkersCtrlList[0]._isUse || e++;
            }
            return e;
        }
        static getFarBunker(e) {
            if (!e.getPresentationBaseLayer()) return;
            let t = this.bunkersCtrlList[0], i = this.bunkersCtrlList[0].getPos(), a = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), i);
            for (let i = 0; i < this.bunkersList.length; i++) {
                let s = this.bunkersCtrlList[i], n = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), s.getPos());
                a < n && (a = n, t = s);
            }
            return t;
        }
        static resetAllNodeUse() {
            for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                Rs.logicalBaseLayer[e].curPointCtrl = null;
            }
            for (let e = 0; e < this.bunkersCtrlList.length; e++) {
                let t = this.bunkersCtrlList[e];
                t && (t._isUse = !1);
            }
        }
        static useData() {
            for (let e = 0; e < this.bunkersCtrlList.length; e++) {
                let t = this.bunkersCtrlList[e];
                t && (t._isUse || 0);
            }
        }
        static getRandBunker(e) {}
    }
    Ht.bunkersList = [], Ht.bunkersCtrlList = [];
    class Wt {
        static startGameTime(e) {
            this.fixedTime = this.gameTime, Laya.timer.loop(1e3, this, this.update, [ e ]);
        }
        static matchingShow() {
            Mt.mode == Tt.BIOCHEMISTRY && (this.gameTime = 300), Mt.mode == Tt.TWOVSTWOMODE ? this.gameTime = 200 : this.gameTime = 300, 
            this.fixedTime = this.gameTime;
        }
        static update(e) {
            if (!Rs.gameStop) if (Rs.gameOver) Laya.timer.clear(this, this.update); else {
                if (e && (e.text = (Mt.mode, Tt.BIOCHEMISTRY, _t.parseTimeMS(this.gameTime))), Bt.getFunctionViewCtrl(Er.GAME).setZomBieDownTimeBg(), 
                0 == this.gameTime) return Laya.timer.clear(this, this.update), void (Rs.gameOver = !0);
                this.gameTime--;
            }
        }
        static clear() {
            Laya.timer.clear(this, this.update);
        }
        static pause() {
            Laya.timer.pause();
        }
    }
    Wt.gameTime = 300, Wt.fixedTime = 300, function(e) {
        e.FIRSTVIEW = "FIRSTVIEW", e.GAMEVIEW = "GAMEVIEW", e.ENDVIEW = "ENDVIEW", e.EQUIPVIEW = "EQUIPVIEW", 
        e.NEWEQUIPUNLOCKVIEW = "NEWEQUIPUNLOCKVIEW", e.SHOPVIEW = "SHOPVIEW", e.SYNTHESISVIEW = "SYNTHESISVIEW", 
        e.MATCHINGVIEW = "MATCHINGVIEW", e.ROLEVIEW = "ROLEVIEW", e.SUPERREWARDVIEW = "SUPERREWARDVIEW", 
        e.ADDGOLDVIEW = "ADDGOLDVIEW", e.ADDDIAMONDSVIEW = "ADDDIAMONDSVIEW", e.GETGOLDREWARDVIEW = "GETGOLDREWARDVIEW", 
        e.GETDIAMONDSREWARDVIEW = "GETDIAMONDSREWARDVIEW", e.OFFLINEVIEW = "OFFLINEVIEW", 
        e.GAMEBOXVIEW = "GAMEBOXVIEW";
    }(Ot || (Ot = {})), function(e) {
        e[e.ONLYMOVE = 1] = "ONLYMOVE", e[e.ONLYROT = 2] = "ONLYROT", e[e.MOVEANDROT_TOUCHLEFTAFTER = 3] = "MOVEANDROT_TOUCHLEFTAFTER", 
        e[e.MOVEANDROT_TOUCHRIGHTAFTER = 4] = "MOVEANDROT_TOUCHRIGHTAFTER";
    }(Pt || (Pt = {}));
    let Yt = {
        ADD: 1,
        REMOVE: 2,
        NORMAL: 3
    };
    var Xt, Kt;
    !function(e) {
        e[e.DIAMOND = 0] = "DIAMOND", e[e.GOLD = 1] = "GOLD";
    }(Xt || (Xt = {}));
    class zt {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new zt();
                a.id = i.id, a.time = i.time, a.initialZombieNum = i.initialZombieNum, a.ronds = i.ronds, 
                zt.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (zt.cache[e]) return zt.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return zt.cache[this.keys[e]] ? zt.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return zt.cache;
        }
        clear() {
            zt.cache = {};
        }
    }
    zt.cache = {}, zt.keys = [];
    class qt extends Laya.Script3D {
        constructor() {
            super(), this.isGet = !1, this.model = null, this.idx = 0, this.tran = null, this.pos = new Laya.Vector3();
        }
        onAwake() {
            this.model = this.owner, this.idx = this.model.id, this.tran = this.model.transform, 
            this.pos = this.tran.position.clone();
        }
        onUpdate() {
            if (!Rs.gameOver && !this.isGet) {
                this.tran.localRotationEulerY++;
                for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                    let t = Rs.logicalBaseLayer[e];
                    t.isZombie || Laya.Vector3.distanceSquared(t.getPresentationBaseLayer().getModelPosByVector3(), this.pos) < 9 && (t.magazineBullet < t.getArmCtrl().getMagazineBullet() || t.bullets < t.getArmCtrl().getBullets()) && (this.isGet || (this.isGet = !0, 
                    this.getCtrl(t)));
                }
            }
        }
        onDestroy() {
            this.isGet = null, this.model = null, this.idx = null, this.tran = null;
        }
        getCtrl(e) {
            this.model.active = !1, e.bulletFill();
        }
    }
    class Qt extends Laya.Script3D {
        constructor() {
            super(), this.isGet = !1, this.model = null, this.idx = 0, this.tran = null, this.pos = new Laya.Vector3();
        }
        onAwake() {
            this.model = this.owner, this.idx = this.model.id, this.tran = this.model.transform, 
            this.pos = this.tran.position.clone();
        }
        onUpdate() {
            if (!Rs.gameOver && !this.isGet) {
                this.tran.localRotationEulerY++;
                for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                    let t = Rs.logicalBaseLayer[e];
                    t.isZombie || Laya.Vector3.distanceSquared(t.getPresentationBaseLayer().getModelPosByVector3(), this.pos) < 9 && t.getHP() < t.getMaxHP() && (this.isGet || (this.isGet = !0, 
                    this.getCtrl(t)));
                }
            }
        }
        onDestroy() {
            this.isGet = null, this.model = null, this.idx = null, this.tran = null;
        }
        getCtrl(e) {
            this.model.active = !1, e.setHP = 100;
        }
    }
    class Zt {
        static getDataByKey(e) {
            if (Zt.cache[e]) return Zt.cache[e];
            if (0 == e) {
                let t = new Zt();
                return t.id = 0, t.hitRate = .01, t.burstHeadRate = 0, t.teamHitRate = 50, t.teamBurstHeadRate = 30, 
                t.enemyCheckAngle = 160, t.teamCheckAngle = 270, t.normal = "1_500_500|2_1000000_2000", 
                t.track = "3_4000_6000", t.attack = "6_500_3000|7_3000000_5000", t.escape = "4_5000_6000", 
                t.die = "1_500_5000", t.search = "8_5000_5000", Zt.cache[e] = t, t;
            }
            if (1 == e) {
                let t = new Zt();
                return t.id = 1, t.hitRate = 5, t.burstHeadRate = 2, t.teamHitRate = 15, t.teamBurstHeadRate = 5, 
                t.enemyCheckAngle = 270, t.teamCheckAngle = 270, t.normal = "1_500_500|2_1000000_2000", 
                t.track = "3_4000_6000", t.attack = "6_500_3000|7_3000000_5000", t.escape = "4_5000_6000", 
                t.die = "1_500_5000", t.search = "8_5000_5000", Zt.cache[e] = t, t;
            }
            if (2 == e) {
                let t = new Zt();
                return t.id = 2, t.hitRate = 50, t.burstHeadRate = 5, t.teamHitRate = 5, t.teamBurstHeadRate = 2, 
                t.enemyCheckAngle = 300, t.teamCheckAngle = 270, t.normal = "1_500_500|2_1000000_2000", 
                t.track = "3_4000_6000", t.attack = "6_500_3000|7_3000000_5000", t.escape = "4_5000_6000", 
                t.die = "1_500_5000", t.search = "8_5000_5000", Zt.cache[e] = t, t;
            }
            if (3 == e) {
                let t = new Zt();
                return t.id = 3, t.hitRate = 60, t.burstHeadRate = 10, t.teamHitRate = 5, t.teamBurstHeadRate = 5, 
                t.enemyCheckAngle = 320, t.teamCheckAngle = 270, t.normal = "1_500_500|2_1000000_2000", 
                t.track = "3_4000_6000", t.attack = "6_500_3000|7_3000000_5000", t.escape = "4_5000_6000", 
                t.die = "1_500_5000", t.search = "8_5000_5000", Zt.cache[e] = t, t;
            }
        }
        static getDataByIndex(e) {
            return Zt.cache[this.keys[e]] ? Zt.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Zt.cache;
        }
        clear() {
            Zt.cache = {};
        }
    }
    Zt.cache = {}, Zt.keys = [ 0, 1, 2, 3 ], function(e) {
        e[e.EASILY = 0] = "EASILY", e[e.NORMAL = 1] = "NORMAL", e[e.SLIGHTLYDIFFICULTY = 2] = "SLIGHTLYDIFFICULTY", 
        e[e.DIFFICULTY = 3] = "DIFFICULTY";
    }(Kt || (Kt = {}));
    class jt {
        static setDifficulty() {
            if (Mt.mode != Tt.TEAMCOMPETITION) return void (this.curDifficult = Kt.NORMAL);
            if (tl.getInstance().getGuide() == Et.GAME_1) return void (this.curDifficult = Kt.EASILY);
            if (console.log("当前比赛列表：", this.matchList), 0 != this.matchList.length) for (let e = 0; e < this.matchList.length; e++) if (this.matchList[e].gameNum == this.curGamesNum && -1 == this.matchList[e].result) return console.log("前一局暂停退出了:", this.matchList[e]), 
            void (this.curDifficult = this.matchList[e].difficulty);
            let e = {
                gameNum: this.curGamesNum,
                result: -1,
                difficulty: Kt.NORMAL
            };
            if (this.curDifficult == Kt.NORMAL) if (0 == this.matchList.length) e.difficulty = Kt.NORMAL, 
            this.curDifficult = Kt.NORMAL; else if (1 == this.matchList.length) e.difficulty = Kt.NORMAL, 
            this.curDifficult = Kt.NORMAL; else {
                let t = 0;
                for (let e = 0; e < this.matchList.length; e++) {
                    let i = this.matchList[e];
                    i.difficulty == Kt.NORMAL && (1 == i.result ? t++ : t--);
                }
                console.log("赢得次数：", t), 0 == t || 1 == t ? (e.difficulty = Kt.NORMAL, this.curDifficult = Kt.NORMAL) : -1 == t || -2 == t ? (e.difficulty = Kt.EASILY, 
                this.curDifficult = Kt.EASILY, this.matchList = []) : (e.difficulty = Kt.SLIGHTLYDIFFICULTY, 
                this.curDifficult = Kt.SLIGHTLYDIFFICULTY, this.matchList = []);
            } else if (this.curDifficult == Kt.EASILY) {
                let t = !1;
                for (let e = 0; e < this.matchList.length; e++) {
                    let i = this.matchList[e];
                    if (i.difficulty == Kt.EASILY && 1 == i.result) {
                        t = !0;
                        break;
                    }
                }
                t && (e.difficulty = Kt.NORMAL, this.curDifficult = Kt.NORMAL, this.matchList = []);
            } else if (this.curDifficult == Kt.SLIGHTLYDIFFICULTY) {
                let t = !1;
                for (let e = 0; e < this.matchList.length; e++) {
                    let i = this.matchList[e];
                    i.difficulty == Kt.SLIGHTLYDIFFICULTY && 1 == i.result && (t = !0);
                }
                t ? (e.difficulty = Kt.DIFFICULTY, this.curDifficult = Kt.DIFFICULTY, this.matchList = []) : (e.difficulty = Kt.NORMAL, 
                this.curDifficult = Kt.NORMAL, this.matchList = []);
            } else if (this.curDifficult == Kt.DIFFICULTY) {
                let t = !1;
                for (let e = 0; e < this.matchList.length; e++) {
                    let i = this.matchList[e];
                    i.difficulty == Kt.DIFFICULTY && 0 == i.result && (t = !0);
                }
                t ? (e.difficulty = Kt.NORMAL, this.curDifficult = Kt.NORMAL, this.matchList = []) : (e.difficulty = Kt.DIFFICULTY, 
                this.curDifficult = Kt.DIFFICULTY, this.matchList = []);
            }
            this.matchList.push(e);
        }
        static setCurGamesResult() {
            if (Mt.mode == Tt.TEAMCOMPETITION && tl.getInstance().getGuide() != Et.EQUIP) {
                console.log("执行了吗----------:", this.matchList, this.curGamesNum, Rs._isWin);
                for (let e = 0; e < this.matchList.length; e++) {
                    let t = this.matchList[e];
                    t.gameNum == this.curGamesNum && (t.result = Rs._isWin ? 1 : 0, console.log("最终结果：", t.result));
                }
                this.curGamesNum++;
            }
        }
    }
    jt.matchList = [], jt.curGamesNum = 1, jt.curDifficult = Kt.NORMAL;
    class Jt {
        constructor(e, t) {
            this.isDone = !1, this.weight = e;
            let i = -1e3 + Math.floor(2e3 * Math.random());
            this.time = t - i;
        }
        clean() {
            this.character = null, this.context = null;
        }
        get type() {
            return this._type;
        }
        execute(e) {
            this.context = e, this.isDone = !1, this.character = e.aiLogic.character, this.preTime = Ce.gSysTimer.currTimer;
        }
        update() {
            Ce.gSysTimer.currTimer - this.preTime >= this.time && (this.isDone = !0);
        }
    }
    var $t = Laya.Vector3;
    class ei extends Jt {
        constructor(e, t) {
            super(e, t), this.findCoutDown = 0, this.paths = null, this.turnTo = new Laya.Quaternion(), 
            this.nextPos = new Laya.Vector3(), this.idx = 1, this.vecVel = new ze(), this.vecDir = new ze(), 
            this.testBoxList = [], this._type = Rr.AI_BEHAVIOUR_ATTACK;
        }
        clean() {
            super.clean(), this.target = null;
        }
        execute(e) {
            super.execute(e), this.target = e.target, this.character.isZombie && (this.time = 5e8), 
            this.character.setIsMoving = !1, this.character.setIsAttack = !0, this.character.isCrouch = !1, 
            this.character.getPresentationBaseLayer().toResetRandAttackData();
        }
        setPaths() {
            this.character.isZombie ? (this.target.getIsMySelf() && (kt.isCloseCharacterCtrl || this.target.getPresentationBaseLayer().initNavNode()), 
            this.idx = 1, this.target.getPresentationBaseLayer().navNode && (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.target.getPresentationBaseLayer().getModelPosByFixedVector(), this.character.getPresentationBaseLayer().navNode, this.target.getPresentationBaseLayer().navNode, Gt.zoneID, Gt.navGroup))) : 2 == this.character.getArmCtrl().getType() && (this.target.getIsMySelf() && this.target.getPresentationBaseLayer().initNavNode(), 
            this.idx = 1, this.target.getPresentationBaseLayer().navNode && (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.target.getPresentationBaseLayer().getModelPosByFixedVector(), this.character.getPresentationBaseLayer().navNode, this.target.getPresentationBaseLayer().navNode, Gt.zoneID, Gt.navGroup)));
        }
        testPoint(e) {
            let t = Ts.scene3d.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1)));
            t.transform.rotate(new Laya.Vector3(0, 45, 0), !1, !1);
            var i = new Laya.BlinnPhongMaterial();
            Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(null, function(e) {
                i.albedoTexture = e;
            })), t.transform.position = e, t.meshRenderer.material = i, this.character.getRoleType() == Mr.TYPE_0 && (t.meshRenderer.sharedMaterial.albedoColor = new Laya.Vector4(1, 0, 0, 1)), 
            this.testBoxList.push(t);
        }
        cleanTestBox() {
            for (let e = 0; e < this.testBoxList.length; e++) {
                let t = this.testBoxList[e];
                t.removeSelf(), t = null;
            }
            this.testBoxList = [];
        }
        update() {
            if (super.update(), this.character.getPresentationBaseLayer()) if (this.character && this.target) {
                if (this.character.getIsDie()) return this.target = null, void (this.isDone = !0);
                if (this.target.getIsDie()) return this.target = null, void (this.isDone = !0);
                if (this.target.isInvincible) return this.target = null, this.character.setIsAttack = !1, 
                void (this.isDone = !0);
                if (Mt.mode != Tt.BIOCHEMISTRY && 0 == this.character.armCtrlList.length) return this.target = null, 
                void (this.isDone = !0);
                if (this.findCoutDown -= Ce.gSysTimer.delta, this.findCoutDown < 0) {
                    if (this.findCoutDown = 500, this.setPaths(), kt.isDebug) {
                        this.cleanTestBox();
                        for (let e = 0; e < this.paths.length; e++) {
                            let t = new Laya.Vector3();
                            t.x = this.paths[e].x, t.z = this.paths[e].z, t.y = .5, this.testPoint(t);
                        }
                    }
                    if (Mt.mode == Tt.BIOCHEMISTRY) {
                        if (!this.character.getPresentationBaseLayer().sectorDetection()) return void (this.isDone = !0);
                    } else if (!this.character.getPresentationBaseLayer().sectorDetection()) return void (this.isDone = !0);
                }
                this.character.isStartHuaBullet ? this.isDone = !0 : this.armCtrl();
            } else this.isDone = !0;
        }
        armCtrl() {
            if (this.character.isZombie) {
                if (this.paths && this.paths[this.idx]) {
                    ze.sub(this.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                    ze.sub(this.paths[this.idx], this.paths[this.idx - 1], this.vecVel);
                    let e = new Laya.Vector3();
                    if (e.x = this.paths[this.idx].x, e.y = this.paths[this.idx].y, e.z = this.paths[this.idx].z, 
                    Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.target.getPresentationBaseLayer().getModelPosByVector3()) <= 4) {
                        this.target.getIsMoving() || (this.character.setIsMoving = !1);
                        let e = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.hitRate : this.context.aiLogic.aiData.teamHitRate, t = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.burstHeadRate : this.context.aiLogic.aiData.teamBurstHeadRate;
                        return this.character.getPresentationBaseLayer().setDirectionByTarget(this.target), 
                        void this.character.getPresentationBaseLayer().attack(e, this.target, t);
                    }
                    if (ze.dot(this.vecDir, this.vecVel) < 0 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z || Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), e) < .25) this.idx++; else if (this.character.setIsMoving = !0, 
                    this.character.getPresentationBaseLayer().jump(), ze.normalize(this.vecDir, this.vecDir), 
                    this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z), !this.character.getPresentationBaseLayer().isAIStartRandomRotate && $t.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.target.getPresentationBaseLayer().getModelPosByVector3()) > 9) {
                        let e = this.character.getPresentationBaseLayer().getModel().transform.rotation, t = q.Vector3.zero;
                        this.nextPos.x = this.vecDir.x, this.nextPos.z = this.vecDir.z, this.nextPos.x *= -1, 
                        this.nextPos.z *= -1, Laya.Quaternion.lookAt(t, this.nextPos, q.Vector3.up, this.turnTo), 
                        this.turnTo.invert(this.turnTo), Laya.Quaternion.lerp(e, this.turnTo, 1, e), this.character.setDirection(this.turnTo), 
                        this.character.getPresentationBaseLayer().setDirection();
                    }
                }
            } else if (2 == this.character.getArmCtrl().getType()) {
                if (this.paths && this.paths[this.idx]) {
                    ze.sub(this.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                    ze.sub(this.paths[this.idx], this.paths[this.idx - 1], this.vecVel);
                    let e = new Laya.Vector3();
                    if (e.x = this.paths[this.idx].x, e.y = this.paths[this.idx].y, e.z = this.paths[this.idx].z, 
                    Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.target.getPresentationBaseLayer().getModelPosByVector3()) <= this.character.getArmCtrl().getAttackDis() * this.character.getArmCtrl().getAttackDis()) {
                        this.character.getPresentationBaseLayer()._isCollise && (this.character.setIsMoving = !0, 
                        this.character.getPresentationBaseLayer().moveAttackRandomPos());
                        let e = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.hitRate : this.context.aiLogic.aiData.teamHitRate, t = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.burstHeadRate : this.context.aiLogic.aiData.teamBurstHeadRate;
                        return this.character.getPresentationBaseLayer().setDirectionByTarget(this.target), 
                        this.character.getPresentationBaseLayer().attack(e, this.target, t), void (this.target.getIsMoving() || (this.character.setIsMoving = !1));
                    }
                    if (ze.dot(this.vecDir, this.vecVel) < 0 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z || Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), e) < .25) this.idx++; else if (this.character.setIsMoving = !0, 
                    this.character.getPresentationBaseLayer().jump(), ze.normalize(this.vecDir, this.vecDir), 
                    this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z), !this.character.getPresentationBaseLayer().isAIStartRandomRotate) {
                        let e = this.character.getPresentationBaseLayer().getModel().transform.rotation, t = q.Vector3.zero;
                        this.nextPos.x = this.vecDir.x, this.nextPos.z = this.vecDir.z, this.nextPos.x *= -1, 
                        this.nextPos.z *= -1, Laya.Quaternion.lookAt(t, this.nextPos, q.Vector3.up, this.turnTo), 
                        this.turnTo.invert(this.turnTo), Laya.Quaternion.lerp(e, this.turnTo, 1, e), this.character.setDirection(this.turnTo), 
                        this.character.getPresentationBaseLayer().setDirection();
                    }
                }
            } else {
                this.character.getPresentationBaseLayer()._isCollise && (this.character.setIsMoving = !0, 
                this.character.getPresentationBaseLayer().moveAttackRandomPos());
                let e = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.hitRate : this.context.aiLogic.aiData.teamHitRate, t = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.burstHeadRate : this.context.aiLogic.aiData.teamBurstHeadRate;
                this.character.getPresentationBaseLayer().jump(), this.character.getPresentationBaseLayer().setDirectionByTarget(this.target), 
                8 == this.character.getArmCtrl().getType() ? this.character.getPresentationBaseLayer().isTouchBomb && (this.character.getPresentationBaseLayer().isTouchBomb = !1, 
                this.character.getPresentationBaseLayer().throwBomb()) : (this.character.getPresentationBaseLayer().isTouchBomb = !1, 
                this.character.getPresentationBaseLayer().attack(e, this.target, t));
            }
        }
    }
    class ti extends Jt {
        constructor(e, t) {
            super(e, t), this.findCoutDown = 0, this.targetList = [], this._type = Rr.AI_BEHAVIOUR_CROUCHATTACK;
        }
        clean() {
            super.clean(), this.target = null;
        }
        execute(e) {
            super.execute(e), this.target = e.target, this.character.setIsMoving = !1, this.character.setIsAttack = !0, 
            this.character.isCrouch = !0;
        }
        judgeTarget() {
            if (0 == this.targetList.length) for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                let t = Rs.logicalBaseLayer[e];
                t.getIsDie() || this.character.getIsDie() || t.getRoleType() == this.context.aiLogic.character.getRoleType() || this.targetList.push(t);
            }
            if (0 == this.targetList.length) return;
            let e = this.targetList[0], t = Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.targetList[0].getPresentationBaseLayer().getModelPosByVector3());
            for (let i = 0; i < this.targetList.length; i++) {
                let a = this.targetList[i], s = Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.targetList[i].getPresentationBaseLayer().getModelPosByVector3());
                t > s && (t = s, e = a);
            }
            this.target = e, this.character.attackLogicalBaseLayer = this.target;
        }
        setPaths() {
            if (this.idx = 1, this.paths) {
                for (let e = 0, t = this.paths.length; e < t; e++) this.paths[e].clean(), this.paths[e] = null;
                this.paths = null;
            }
            this.character && this.target && (this.paths = Gt.pathfinder.findPath(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.target.getPresentationBaseLayer().getModelPosByFixedVector(), Gt.zoneID, Gt.navGroup), 
            this.character.paths = this.paths);
        }
        update() {
            if (super.update(), !this.character || !this.target) return;
            if (this.findCoutDown -= Ce.gSysTimer.delta, this.findCoutDown < 0 && (this.findCoutDown = 500, 
            this.judgeTarget()), this.character.getIsDie()) return void (this.isDone = !0);
            if (this.target.getIsDie()) return void (this.isDone = !0);
            let e = this.context.aiLogic.aiData.hitRate, t = this.context.aiLogic.aiData.burstHeadRate;
            this.character.getPresentationBaseLayer().attack(e, this.target, t);
        }
    }
    class ii extends Jt {
        constructor(e, t) {
            super(e, t), this.vecVel = new ze(), this.vecPrePos = new ze(), this.vecDir = new ze(), 
            this.targetPointCtrl = null, this._type = Rr.AI_BEHAVIOUR_ESCAPE;
        }
        clean() {
            super.clean(), this.vecVel.clean(), this.vecVel = null, this.vecPrePos.clean(), 
            this.vecPrePos = null;
        }
        execute(e) {
            super.execute(e), this.target = e.target, this.character.isCrouch = !1, this.target && (this.setPaths(), 
            this.isDone = !1);
        }
        setPaths() {
            if (this.character && this.character.getPresentationBaseLayer() && (this.idx = 1, 
            this.targetPointCtrl = Ht.getFarBunker(this.target), this.targetPointCtrl)) {
                let e = this.targetPointCtrl.initClosestNodeMySelf();
                this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.targetPointCtrl.getNowPosFixedVector3(), this.character.getPresentationBaseLayer().navNode, e, Gt.zoneID, Gt.navGroup);
            }
        }
        update() {
            if (super.update(), this.character.getPresentationBaseLayer()) if (this.target) {
                if (this.character.getIsDie()) return this.paths = null, this.character.setMyOrientation(0, 0, 0), 
                void (this.isDone = !0);
                if (this.character.isStartHuaBullet) {
                    if (this.character.getPresentationBaseLayer()._isCollise) return this.character.setIsMoving = !0, 
                    this.character.getPresentationBaseLayer().moveAttackRandomPos(), void (this.isDone = !0);
                    if (this.paths && this.paths[this.idx]) if (ze.sub(this.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                    ze.sub(this.paths[this.idx], this.paths[this.idx - 1], this.vecVel), ze.dot(this.vecDir, this.vecVel) < 0 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z) this.idx++; else {
                        this.character.setIsMoving = !0;
                        this.character.getPresentationBaseLayer().startRanomRotate();
                        this.character.getPresentationBaseLayer().jump(), ze.normalize(this.vecDir, this.vecDir), 
                        this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z);
                    }
                } else this.isDone = !0;
            } else this.isDone = !0;
        }
    }
    class ai extends Jt {
        constructor(e, t) {
            super(e, t), this.findCoutDown = 0, this._type = Rr.AI_BEHAVIOUR_IDLE;
        }
        execute(e) {
            super.execute(e), this.character.setIsMoving = !1, this.character.setIsAttack = !1;
        }
        clean() {
            this.findCoutDown = null;
        }
        update() {
            super.update(), this.findCoutDown -= Ce.gSysTimer.delta, this.findCoutDown < 0 && (this.findCoutDown = 500, 
            this.character.getPresentationBaseLayer().sectorDetection()) && (this.isDone = !0);
        }
    }
    var si = Laya.Vector3;
    class ni extends Jt {
        constructor(e, t) {
            super(e, t), this.findCoutDown = 0, this.paths = null, this.turnTo = new Laya.Quaternion(), 
            this.nextPos = new Laya.Vector3(), this.idx = 1, this.vecVel = new ze(), this.vecDir = new ze(), 
            this._type = Rr.AI_BEHAVIOUR_MOVEATTACK;
        }
        clean() {
            super.clean(), this.target = null, this.findCoutDown = null;
        }
        execute(e) {
            super.execute(e), this.target = e.target, this.character.setIsMoving = !0, this.character.setIsAttack = !0, 
            this.character.isCrouch = !1;
        }
        setPaths() {
            this.character.isZombie ? (this.target.getIsMySelf() && (kt.isCloseCharacterCtrl || this.target.getPresentationBaseLayer().initNavNode()), 
            this.idx = 1, this.target.getPresentationBaseLayer().navNode && (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.target.getPresentationBaseLayer().getModelPosByFixedVector(), this.character.getPresentationBaseLayer().navNode, this.target.getPresentationBaseLayer().navNode, Gt.zoneID, Gt.navGroup))) : 2 == this.character.getArmCtrl().getType() && (this.target.getIsMySelf() && this.target.getPresentationBaseLayer().initNavNode(), 
            this.idx = 1, this.target.getPresentationBaseLayer().navNode && (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.target.getPresentationBaseLayer().getModelPosByFixedVector(), this.character.getPresentationBaseLayer().navNode, this.target.getPresentationBaseLayer().navNode, Gt.zoneID, Gt.navGroup)));
        }
        update() {
            if (super.update(), this.character.getPresentationBaseLayer()) {
                if (!this.character || !this.target) return this.character.setIsAttack = !1, void (this.isDone = !0);
                if (this.character.getIsDie()) return this.character.getPresentationBaseLayer().toResetRandAttackData(), 
                this.target = null, this.character.setIsAttack = !1, void (this.isDone = !0);
                if (this.target.getIsDie()) return this.character.getPresentationBaseLayer().toResetRandAttackData(), 
                this.target = null, this.character.setIsAttack = !1, void (this.isDone = !0);
                if (this.target.isInvincible) return this.target = null, this.character.setIsAttack = !1, 
                void (this.isDone = !0);
                if (Mt.mode != Tt.BIOCHEMISTRY && 0 == this.character.armCtrlList.length) return this.character.getPresentationBaseLayer().toResetRandAttackData(), 
                this.target = null, void (this.isDone = !0);
                if (this.findCoutDown -= Ce.gSysTimer.delta, this.findCoutDown < 0) if (this.findCoutDown = 500, 
                this.setPaths(), Mt.mode == Tt.BIOCHEMISTRY) {
                    if (!this.character.getPresentationBaseLayer().sectorDetection()) return void (this.isDone = !0);
                } else if (!this.character.getPresentationBaseLayer().sectorDetection()) return void (this.isDone = !0);
                this.character.isStartHuaBullet ? this.isDone = !0 : this.armCtrl();
            }
        }
        armCtrl() {
            if (this.character.isZombie) {
                if (this.paths && this.paths[this.idx]) {
                    ze.sub(this.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                    ze.sub(this.paths[this.idx], this.paths[this.idx - 1], this.vecVel);
                    let e = new Laya.Vector3();
                    if (e.x = this.paths[this.idx].x, e.y = this.paths[this.idx].y, e.z = this.paths[this.idx].z, 
                    Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.target.getPresentationBaseLayer().getModelPosByVector3()) <= 4) {
                        this.character.getPresentationBaseLayer().jump(), this.character.getPresentationBaseLayer().moveAttackRandomPos(), 
                        this.character.getPresentationBaseLayer().setDirectionByTarget(this.target);
                        let e = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.hitRate : this.context.aiLogic.aiData.teamHitRate, t = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.burstHeadRate : this.context.aiLogic.aiData.teamBurstHeadRate;
                        return void this.character.getPresentationBaseLayer().attack(e, this.target, t);
                    }
                    if (ze.dot(this.vecDir, this.vecVel) < 0 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z || Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), e) < .25) this.idx++; else if (this.character.setIsMoving = !0, 
                    this.character.getPresentationBaseLayer().jump(), ze.normalize(this.vecDir, this.vecDir), 
                    this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z), !this.character.getPresentationBaseLayer().isAIStartRandomRotate && si.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.target.getPresentationBaseLayer().getModelPosByVector3()) > 9) {
                        let e = this.character.getPresentationBaseLayer().getModel().transform.rotation, t = q.Vector3.zero;
                        this.nextPos.x = this.vecDir.x, this.nextPos.z = this.vecDir.z, this.nextPos.x *= -1, 
                        this.nextPos.z *= -1, Laya.Quaternion.lookAt(t, this.nextPos, q.Vector3.up, this.turnTo), 
                        this.turnTo.invert(this.turnTo), Laya.Quaternion.lerp(e, this.turnTo, 1, e), this.character.setDirection(this.turnTo), 
                        this.character.getPresentationBaseLayer().setDirection();
                    }
                }
            } else if (2 == this.character.getArmCtrl().getType()) {
                if (this.paths && this.paths[this.idx]) {
                    ze.sub(this.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                    ze.sub(this.paths[this.idx], this.paths[this.idx - 1], this.vecVel);
                    let e = new Laya.Vector3();
                    if (e.x = this.paths[this.idx].x, e.y = this.paths[this.idx].y, e.z = this.paths[this.idx].z, 
                    Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.target.getPresentationBaseLayer().getModelPosByVector3()) <= this.character.getArmCtrl().getAttackDis() * this.character.getArmCtrl().getAttackDis()) {
                        this.character.getPresentationBaseLayer().jump(), this.character.getPresentationBaseLayer().moveAttackRandomPos(), 
                        this.character.getPresentationBaseLayer().setDirectionByTarget(this.target);
                        let e = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.hitRate : this.context.aiLogic.aiData.teamHitRate, t = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.burstHeadRate : this.context.aiLogic.aiData.teamBurstHeadRate;
                        return void this.character.getPresentationBaseLayer().attack(e, this.target, t);
                    }
                    if (ze.dot(this.vecDir, this.vecVel) < 0 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z || Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), e) < .25) this.idx++; else if (this.character.setIsMoving = !0, 
                    this.character.getPresentationBaseLayer().jump(), ze.normalize(this.vecDir, this.vecDir), 
                    this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z), !this.character.getPresentationBaseLayer().isAIStartRandomRotate) {
                        let e = this.character.getPresentationBaseLayer().getModel().transform.rotation, t = q.Vector3.zero;
                        this.nextPos.x = this.vecDir.x, this.nextPos.z = this.vecDir.z, this.nextPos.x *= -1, 
                        this.nextPos.z *= -1, Laya.Quaternion.lookAt(t, this.nextPos, q.Vector3.up, this.turnTo), 
                        this.turnTo.invert(this.turnTo), Laya.Quaternion.lerp(e, this.turnTo, 1, e), this.character.setDirection(this.turnTo), 
                        this.character.getPresentationBaseLayer().setDirection();
                    }
                }
            } else {
                this.character.getPresentationBaseLayer().jump(), this.character.getPresentationBaseLayer().moveAttackRandomPos(), 
                this.character.getPresentationBaseLayer().setDirectionByTarget(this.target);
                let e = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.hitRate : this.context.aiLogic.aiData.teamHitRate, t = this.character.getRoleType() == Mr.TYPE_1 ? this.context.aiLogic.aiData.burstHeadRate : this.context.aiLogic.aiData.teamBurstHeadRate;
                8 == this.character.getArmCtrl().getType() ? this.character.getPresentationBaseLayer().isTouchBomb && (this.character.getPresentationBaseLayer().isTouchBomb = !1, 
                this.character.getPresentationBaseLayer().throwBomb()) : (this.character.getPresentationBaseLayer().isTouchBomb = !1, 
                this.character.getPresentationBaseLayer().attack(e, this.target, t));
            }
        }
    }
    class oi extends Jt {
        constructor(e, t) {
            super(e, t), this.findCoutDown = null, this._type = Rr.AI_BEHAVIOUR_NONE;
        }
        execute(e) {
            super.execute(e), this.character.setIsAttack = !1, this.character.isStartAttack = !1, 
            this.character.getPresentationBaseLayer().toResetRandAttackData();
        }
        update() {
            if (super.update(), !this.character.getPresentationBaseLayer()) return;
            if (this.character.setIsMoving = !1, this.findCoutDown < 0 && (this.findCoutDown = 500, 
            this.character.getPresentationBaseLayer().sectorDetection())) return void (this.isDone = !0);
            this.character.getPresentationBaseLayer().startRanomRotate();
            this.character.getPresentationBaseLayer().jump();
        }
    }
    class ri extends Jt {
        constructor(e, t) {
            super(e, t), this.pointCtrl = null, this.vecVel = new ze(), this.vecDir = new ze(), 
            this.findCoutDown = 0, this.idx = 1, this.turnTo = new Laya.Quaternion(), this.nextPos = new Laya.Vector3(), 
            this.onceStart = !1, this.isStartTime = !1, this.pointNavNode = null, this.finishNum = 0, 
            this.nextFinishNum = 0, this.timer = Ae.onlyOneRandomInt(200, 400), this.paths = null, 
            this.rotateType = [ "dy", "st" ], this.rotateData = [ .1, 99.9 ], this.myTempPos = new Laya.Vector3(), 
            this.testBoxList = [], this._type = Rr.AI_BEHAVIOUR_PATROL;
        }
        clean() {
            super.clean(), this.vecVel.clean(), this.vecVel = null, this.pointCtrl = null, this.vecDir.clean(), 
            this.vecDir = null, this.findCoutDown = null, this.idx = null, this.turnTo = null, 
            this.nextPos = null;
        }
        setPaths() {
            if (this.pointCtrl && this.pointCtrl.thirdFinish) {
                if (this.pointCtrl = null, this.paths) {
                    for (let e = 0, t = this.paths.length; e < t; e++) this.paths[e].clean(), this.paths[e] = null;
                    this.paths = null;
                }
                this.isDone = !0;
            } else {
                if (this.paths) {
                    if (this.paths.length != this.idx) return;
                    this.paths.length == this.idx && this.pointCtrl && (this.pointCtrl.firstFinish ? this.pointCtrl.secondFinish ? this.pointCtrl.thirdFinish || (this.pointCtrl.thirdFinish = !0, 
                    this.idx = 1, this.nextFinishNum = 0, this.finishNum = 0) : (this.pointCtrl.secondFinish = !0, 
                    this.idx = 1, this.nextFinishNum = 2) : (this.pointCtrl.firstFinish = !0, this.idx = 1, 
                    this.nextFinishNum = 1));
                }
                this.pointCtrl || (this.pointCtrl = Ht.getRangeBunkers(this.character), this.character.curPointCtrl = this.pointCtrl, 
                this.finishNum = 0, this.nextFinishNum = 0), this.pointCtrl && (this.pointCtrl.firstFinish || (this.pointNavNode = this.pointCtrl.initClosestNodeMySelf()), 
                this.pointCtrl.firstFinish && !this.pointCtrl.secondFinish && (this.pointNavNode = this.pointCtrl.initClosestNodeChild1()), 
                this.pointCtrl.firstFinish && this.pointCtrl.secondFinish && !this.pointCtrl.thirdFinish && (this.pointNavNode = this.pointCtrl.initClosestNodeChild2()), 
                this.pointNavNode && this.character.getPresentationBaseLayer().navNode && (0 == this.finishNum ? (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.pointCtrl.getNowPosFixedVector3(), this.character.getPresentationBaseLayer().navNode, this.pointNavNode, Gt.zoneID, Gt.navGroup), 
                this.finishNum = this.nextFinishNum) : this.finishNum != this.nextFinishNum && (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.pointCtrl.getNowPosFixedVector3(), this.character.getPresentationBaseLayer().navNode, this.pointNavNode, Gt.zoneID, Gt.navGroup), 
                this.finishNum = this.nextFinishNum)));
            }
        }
        execute(e) {
            super.execute(e), this.character.setIsAttack = !1, this.character.isStartAttack = !1, 
            this.character.getPresentationBaseLayer().toResetRandAttackData(), this.cleanTestBox(), 
            this.pointCtrl && (this.pointCtrl = null, this.idx = 1, this.nextFinishNum = 0, 
            this.paths = null), this.timer = Ae.onlyOneRandomInt(200, 400);
        }
        resetPointCtrl() {}
        testPoint(e) {
            let t = Ts.scene3d.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1)));
            t.transform.rotate(new Laya.Vector3(0, 45, 0), !1, !1);
            var i = new Laya.BlinnPhongMaterial();
            Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(null, function(e) {
                i.albedoTexture = e;
            })), t.transform.position = e, t.meshRenderer.material = i, this.character.getRoleType() == Mr.TYPE_0 && (t.meshRenderer.sharedMaterial.albedoColor = new Laya.Vector4(1, 0, 0, 1)), 
            this.testBoxList.push(t);
        }
        cleanTestBox() {
            for (let e = 0; e < this.testBoxList.length; e++) {
                let t = this.testBoxList[e];
                t.removeSelf(), t = null;
            }
            this.testBoxList = [];
        }
        update() {
            if (super.update(), this.character.getPresentationBaseLayer() && (this.findCoutDown -= Ce.gSysTimer.delta, 
            this.isStartTime || (this.isStartTime = !0, Laya.timer.once(this.timer, this, function cd() {
                this.onceStart = !0, Laya.timer.clear(this, cd);
            })), this.onceStart)) {
                if (this.character.getIsDie() || this.character.isRevive) return this.character.setMyOrientation(0, 0, 0), 
                void (this.isDone = !0);
                if (Mt.mode != Tt.BIOCHEMISTRY && 0 == this.character.armCtrlList.length) return this.character.setMyOrientation(0, 0, 0), 
                void (this.isDone = !0);
                if (this.findCoutDown < 0) {
                    if (this.findCoutDown = 500, this.character.getPresentationBaseLayer().sectorDetection()) return void (this.isDone = !0);
                    if (this.setPaths(), kt.isDebug) {
                        this.cleanTestBox();
                        for (let e = 0; e < this.paths.length; e++) {
                            let t = new Laya.Vector3();
                            t.x = this.paths[e].x, t.z = this.paths[e].z, t.y = .5, this.testPoint(t);
                        }
                    }
                    this.character.getPresentationBaseLayer().startRanomRotate();
                }
                if (this.paths && this.paths[this.idx]) if (ze.sub(this.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                ze.sub(this.paths[this.idx], this.paths[this.idx - 1], this.vecVel), this.myTempPos.x = this.paths[this.idx].x, 
                this.myTempPos.y = this.paths[this.idx].y, this.myTempPos.z = this.paths[this.idx].z, 
                ze.dot(this.vecDir, this.vecVel) < 0 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z || Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.myTempPos) < .25) this.idx++; else if (this.character.setIsMoving = !0, 
                this.character.getPresentationBaseLayer().jump(), ze.normalize(this.vecDir, this.vecDir), 
                this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z), !this.character.getPresentationBaseLayer().isAIStartRandomRotate) {
                    let e = this.character.getPresentationBaseLayer().getModel().transform.rotation, t = q.Vector3.zero;
                    this.nextPos.x = this.vecDir.x, this.nextPos.z = this.vecDir.z, this.nextPos.x *= -1, 
                    this.nextPos.z *= -1, Laya.Quaternion.lookAt(t, this.nextPos, q.Vector3.up, this.turnTo), 
                    this.turnTo.invert(this.turnTo), Laya.Quaternion.lerp(e, this.turnTo, 1, e), this.character.setDirection(this.turnTo), 
                    this.character.getPresentationBaseLayer().setDirection();
                }
            }
        }
    }
    class li extends Laya.Script3D {
        constructor(e = new Laya.Vector3(), t = 1) {
            super(), this.isGet = !1, this.model = null, this.idx = 0, this.pos = new Laya.Vector3(), 
            this.tran = null, this.type = 1, this.pos = e, this.type = t;
        }
        onAwake() {
            this.model = this.owner, this.idx = this.model.id, this.model.transform.position = this.pos, 
            this.tran = this.model.transform;
        }
        onUpdate() {
            if (!Rs.gameOver && !this.isGet) for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                let t = Rs.logicalBaseLayer[e];
                if (t.getIsMySelf()) {
                    if (Laya.Vector3.distanceSquared(t.getPresentationBaseLayer().getModelPosByVector3(), this.pos) < 9 && (0 == t.armCtrlList.length || 1 == t.armCtrlList.length && 8 != t.getArmCtrl().getType() && "8001" == this.model.name || 1 == t.armCtrlList.length && 8 == t.getArmCtrl().getType() && "8001" != this.model.name || 1 == t.armCtrlList.length && 8 == t.getArmCtrl().getType() && "8001" == this.model.name && 0 == t.getArmCtrl().curBullets) && !this.isGet) return this.isGet = !0, 
                    void this.getCtrl(t);
                } else if (Laya.Vector3.distanceSquared(t.getPresentationBaseLayer().getModelPosByVector3(), this.pos) < 9 && 0 == t.armCtrlList.length && !this.isGet) return this.isGet = !0, 
                void this.getCtrl(t);
            }
        }
        onDestroy() {
            this.isGet = null, this.model = null, this.idx = null, this.pos = null, this.tran = null, 
            this.type = null;
        }
        getCtrl(e) {
            this.model.active = !1, hi.addCacheArmList(this), e.pickUpTheGun(this.model.name), 
            Laya.timer.once(1500, this, function cd() {
                hi.resetGenerateArm(this), Laya.timer.clear(this, cd);
            });
        }
    }
    class hi {
        static addPlaceList() {
            if (Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.SNIPERMODE) return;
            this.clean();
            let e = null, t = (e = Mt.mode == Tt.SNIPERMODE ? Ts.scene3d.getChildByName("sniperGameObject") : Ts.scene3d.getChildByName("GameObject")).numChildren;
            for (let i = 0; i < t; i++) this.placeList.push(e.getChildAt(i));
            this.randomGenerateArms();
        }
        static randomGenerateArms() {
            if (Mt.mode == Tt.SNIPERMODE) for (let e in A.keys) 3 == A.getDataByKey(A.keys[e]).type && this.idList.push(A.keys[e]);
            for (let e = 0; e < this.placeList.length; e++) {
                let t = this.placeList[e], i = t.transform.position.clone();
                i.y += .2;
                let a = parseInt(t.name), s = null;
                if (Mt.mode == Tt.SNIPERMODE) s = Te.onLyToCreateArm(this.idList[Ae.onlyOneRandomInt(0, this.idList.length)], Ts.scene3d); else if (Mt.mode == Tt.ONEVSONEMODE) {
                    let e = [];
                    for (let i in A.keys) A.getDataByKey(A.keys[i]).type == parseInt(t.name) && e.push(A.keys[i]);
                    for (let i in _e.keys) _e.getDataByKey(_e.keys[i]).type == parseInt(t.name) && e.push(_e.keys[i]);
                    console.log("list:", e);
                    let i = e[Ae.onlyOneRandomInt(0, e.length)];
                    console.log("随机的枪械ID：", i), s = Te.onLyToCreateArm(i, Ts.scene3d);
                }
                s.addComponentIntance(new li(i, a)), this.armList.push(s);
            }
        }
        static resetGenerateArm(e) {
            let t = null;
            if (!t) {
                if (Mt.mode == Tt.SNIPERMODE) t = Te.onLyToCreateArm(this.idList[Ae.onlyOneRandomInt(0, this.idList.length)], Ts.scene3d); else {
                    let i = [];
                    for (let t in A.keys) A.getDataByKey(A.keys[t]).type == e.type && i.push(A.keys[t]);
                    for (let t in _e.keys) _e.getDataByKey(_e.keys[t]).type == e.type && i.push(_e.keys[t]);
                    t = Te.onLyToCreateArm(i[Ae.onlyOneRandomInt(0, i.length)], Ts.scene3d);
                }
                t.transform.position = e.pos, t.addComponentIntance(new li(e.model.transform.position.clone(), e.type));
            }
            t.transform.position = e.pos;
            for (let i = 0; i < this.armList.length; i++) {
                let a = this.armList[i].getComponent(li);
                if (e.idx == a.idx) {
                    this.armList[i] = t;
                    break;
                }
            }
        }
        static addCacheArmList(e) {
            for (let t = 0; t < this.cacheArmList.length; t++) {
                if (this.cacheArmList[t].getComponent(li).idx == e.idx) return;
            }
            this.cacheArmList.push(e.model);
        }
        static getNearArm(e) {
            let t = this.armList[0], i = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), this.armList[0].transform.position);
            for (let a = 0; a < this.armList.length; a++) {
                let s = this.armList[a], n = s.getComponent(li), o = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), s.transform.position.clone());
                if (e.isGetBombLast) {
                    if (8 == n.type) continue;
                    o < i && !n.isGet && (t = s, i = o);
                } else o < i && !n.isGet && (t = s, i = o);
            }
            return t;
        }
        static clean() {
            for (let e = 0; e < this.armList.length; e++) {
                let t = this.armList[e];
                t && (t.destroy(), t = null);
            }
            for (let e = 0; e < this.cacheArmList.length; e++) {
                let t = this.cacheArmList[e];
                t && (t.destroy(), t = null);
            }
            this.placeList = [], this.armList = [], this.cacheArmList = [], this.idList = [];
        }
    }
    hi.placeList = [], hi.armList = [], hi.cacheArmList = [], hi.idList = [];
    class ci extends Jt {
        constructor(e, t) {
            super(e, t), this.findCoutDown = 0, this.paths = null, this.turnTo = new Laya.Quaternion(), 
            this.nextPos = new Laya.Vector3(), this.idx = 1, this.vecVel = new ze(), this.vecDir = new ze(), 
            this.targetPos = new ze(), this.isSearchBullet = !1, this.isSearchHP = !1, this._type = Rr.AI_BEHAVIOUR_SEARCH;
        }
        execute(e) {
            super.execute(e), this.isSearchBullet = !1, this.isSearchHP = !1, this.character.setIsMoving = !0, 
            this.character.setIsAttack = !1, this.character.isStartAttack = !1;
        }
        setPaths() {
            if (Mt.mode != Tt.BIOCHEMISTRY) {
                let e = hi.getNearArm(this.character);
                this.targetPos.x = e.transform.position.x, this.targetPos.y = 0, this.targetPos.z = e.transform.position.z;
                let t = Gt.pathfinder.getClosestNode(this.targetPos, Gt.zoneID, Gt.navGroup, !0);
                this.idx = 1, this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.targetPos, this.character.getPresentationBaseLayer().navNode, t, Gt.zoneID, Gt.navGroup);
            } else {
                if (this.character.getHP() / this.character.getMaxHP() < .3) {
                    this.isSearchHP = !0;
                    let e = ja.getNearHPSupply(this.character);
                    this.targetPos.x = e.transform.position.x, this.targetPos.y = 0, this.targetPos.z = e.transform.position.z;
                    let t = Gt.pathfinder.getClosestNode(this.targetPos, Gt.zoneID, Gt.navGroup, !0);
                    return this.idx = 1, void (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.targetPos, this.character.getPresentationBaseLayer().navNode, t, Gt.zoneID, Gt.navGroup));
                }
                if (0 == this.character.bullets && 0 == this.character.magazineBullet) {
                    this.isSearchBullet = !0;
                    let e = ja.getNearBulletSupply(this.character);
                    this.targetPos.x = e.transform.position.x, this.targetPos.y = 0, this.targetPos.z = e.transform.position.z;
                    let t = Gt.pathfinder.getClosestNode(this.targetPos, Gt.zoneID, Gt.navGroup, !0);
                    return this.idx = 1, void (this.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.targetPos, this.character.getPresentationBaseLayer().navNode, t, Gt.zoneID, Gt.navGroup));
                }
            }
        }
        update() {
            if (super.update(), this.character.getPresentationBaseLayer()) {
                if ((Mt.mode == Tt.ONEVSONEMODE || Mt.mode == Tt.SNIPERMODE) && 0 != this.character.armCtrlList.length) return this.character.attackLogicalBaseLayer = null, 
                void (this.isDone = !0);
                if (Mt.mode == Tt.BIOCHEMISTRY) {
                    if (this.isSearchBullet && 0 != this.character.bullets && 0 != this.character.magazineBullet) return this.character.attackLogicalBaseLayer = null, 
                    void (this.isDone = !0);
                    if (this.isSearchHP && 100 == this.character.getHP()) return this.character.attackLogicalBaseLayer = null, 
                    void (this.isDone = !0);
                }
                if (this.findCoutDown -= Ce.gSysTimer.delta, this.findCoutDown < 0 && (this.findCoutDown = 500, 
                this.setPaths()), this.paths && this.paths[this.idx]) {
                    ze.sub(this.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                    ze.sub(this.paths[this.idx], this.paths[this.idx - 1], this.vecVel);
                    let e = new Laya.Vector3();
                    if (e.x = this.paths[this.idx].x, e.y = this.paths[this.idx].y, e.z = this.paths[this.idx].z, 
                    ze.dot(this.vecDir, this.vecVel) < 0 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z || Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), e) < .25) this.idx++; else if (this.character.setIsMoving = !0, 
                    this.character.getPresentationBaseLayer().jump(), ze.normalize(this.vecDir, this.vecDir), 
                    this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z), !this.character.getPresentationBaseLayer().isAIStartRandomRotate) {
                        let e = this.character.getPresentationBaseLayer().getModel().transform.rotation, t = q.Vector3.zero;
                        this.nextPos.x = this.vecDir.x, this.nextPos.z = this.vecDir.z, this.nextPos.x *= -1, 
                        this.nextPos.z *= -1, Laya.Quaternion.lookAt(t, this.nextPos, q.Vector3.up, this.turnTo), 
                        this.turnTo.invert(this.turnTo), Laya.Quaternion.lerp(e, this.turnTo, 1, e), this.character.setDirection(this.turnTo), 
                        this.character.getPresentationBaseLayer().setDirection();
                    }
                }
            }
        }
    }
    class di extends Jt {
        constructor(e, t) {
            super(e, t), this.vecVel = new ze(), this.vecDir = new ze(), this.findCoutDown = 0, 
            this.vecTarget = new ze(), this.isRevenge = !1, this.turnTo = new Laya.Quaternion(), 
            this.nextPos = new Laya.Vector3(), this.escapePoint = new ze(), this.targetList = [], 
            this.mayPos = new Laya.Vector3(), this.nextPath = new Laya.Vector3(), this.testBox = null, 
            this._type = Rr.AI_BEHAVIOUR_TRACK;
        }
        clean() {
            this.vecVel.clean(), this.vecVel = null, this.vecDir.clean(), this.vecDir = null, 
            this.target = null, this.vecTarget.clean(), this.vecTarget = null, this.targetList = null;
        }
        execute(e) {
            super.execute(e), this.isRevenge = e.isRevenge, this.target = e.target, this.findCoutDown = 0, 
            this.character.isCrouch = !1, this.character.setIsAttack = !1, this.isDone = !1;
        }
        testPoint(e) {
            if (this.testBox) this.testBox.transform.position = e; else {
                this.testBox = Ts.scene3d.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1))), 
                this.testBox.transform.rotate(new Laya.Vector3(0, 45, 0), !1, !1);
                var t = new Laya.BlinnPhongMaterial();
                Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(null, function(e) {
                    t.albedoTexture = e;
                })), this.testBox.transform.position = e, this.testBox.meshRenderer.material = t;
            }
        }
        setPaths() {
            if (this.idx = 1, this.character && this.target) {
                if (this.character.getIsDie() || this.target.getIsDie()) return void (this.character.paths = null);
                if (this.character.paths && this.character.paths.length <= 2) return;
                this.target.getIsMySelf() && this.target.getPresentationBaseLayer().initNavNode(), 
                this.character.paths = Gt.pathfinder.findPathWithNode(this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.target.getPresentationBaseLayer().getModelPosByFixedVector(), this.character.getPresentationBaseLayer().navNode, this.target.getPresentationBaseLayer().navNode, Gt.zoneID, Gt.navGroup);
            }
        }
        mySelfAndOtherDis() {
            if (0 == this.targetList.length) for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                let t = Rs.logicalBaseLayer[e];
                t.getIsDie() || this.character.getIsDie() || t.getRoleType() == this.context.aiLogic.character.getRoleType() || this.targetList.push(t);
            }
            if (0 == this.targetList.length) return !1;
            for (let e = 0; e < this.targetList.length; e++) {
                let t = this.targetList[e];
                if (Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), t.getPresentationBaseLayer().getModelPosByVector3()) < 900) return !0;
            }
            return !1;
        }
        judgeTarget() {
            if (0 == this.targetList.length) for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                let t = Rs.logicalBaseLayer[e];
                t.getIsDie() || this.character.getIsDie() || t.getRoleType() == this.context.aiLogic.character.getRoleType() || this.targetList.push(t);
            }
            if (0 == this.targetList.length) return !1;
            if (this.character.paths) {
                let e = this.targetList[0], t = Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.targetList[0].getPresentationBaseLayer().getModelPosByVector3());
                for (let i = 0; i < this.targetList.length; i++) {
                    let a = this.targetList[i], s = Laya.Vector3.distanceSquared(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.targetList[i].getPresentationBaseLayer().getModelPosByVector3());
                    t > s && !a.getIsDie() && (t = s, e = a);
                }
                if (e.getPresentationBaseLayer().getModelID() == this.target.getPresentationBaseLayer().getModelID()) return;
                this.character.attackLogicalBaseLayer = e, this.target = this.character.attackLogicalBaseLayer;
            }
        }
        update() {
            if (super.update(), this.character.getRoleType(), Mr.TYPE_1, this.target && this.character) {
                if (this.character.getIsDie()) return this.character.paths = null, this.character.setIsMoving = !1, 
                this.isDone = !0, void this.character.setMyOrientation(0, 0, 0);
                if (this.target.getIsDie()) return this.character.paths = null, this.character.setIsMoving = !1, 
                this.isDone = !0, void this.character.setMyOrientation(0, 0, 0);
                if (this.judgeTarget(), this.character.getRoleType(), Mr.TYPE_1, this.findCoutDown -= Ce.gSysTimer.delta, 
                this.findCoutDown < 0 && (this.findCoutDown = 1500, this.setPaths(), this.character.getRoleType(), 
                Mr.TYPE_1, this.character.paths && 2 == this.character.paths.length && this.mySelfAndOtherDis())) return this.idx = 0, 
                this.character.setIsMoving = !1, this.isDone = !0, void this.character.setMyOrientation(0, 0, 0);
                if (this.character.getRoleType(), Mr.TYPE_1, this.character.paths && this.character.paths[this.idx]) {
                    if (ze.sub(this.character.paths[this.idx], this.character.getPresentationBaseLayer().getModelPosByFixedVector(), this.vecDir), 
                    ze.sub(this.character.paths[this.idx], this.character.paths[this.idx - 1], this.vecVel), 
                    2 == this.character.paths.length && this.mySelfAndOtherDis()) return this.idx = 0, 
                    this.character.setIsMoving = !1, this.isDone = !0, void this.character.setMyOrientation(0, 0, 0);
                    this.character.getRoleType(), Mr.TYPE_1;
                    let e = this.character.getPresentationBaseLayer().getModelPosByVector3();
                    this.nextPath.x = this.character.paths[this.idx].x, this.nextPath.y = this.character.paths[this.idx].y, 
                    this.nextPath.z = this.character.paths[this.idx].z;
                    let t = Laya.Vector3.distance(e, this.nextPath);
                    if (ze.dot(this.vecDir, this.vecVel) < 0 || Math.abs(t) < 2 || 0 == this.vecVel.x && 0 == this.vecVel.y && 0 == this.vecVel.z) this.idx++; else {
                        this.mayPos.x = this.character.paths[this.idx].x, this.mayPos.y = this.character.paths[this.idx].y, 
                        this.mayPos.z = this.character.paths[this.idx].z, this.character.setIsMoving = !0, 
                        Math.abs(Laya.Vector3.distance(this.character.getPresentationBaseLayer().getModelPosByVector3(), this.mayPos)) < 1 && this.idx++, 
                        ze.normalize(this.vecDir, this.vecDir), this.character.getPresentationBaseLayer().jump();
                        let e = this.character.getPresentationBaseLayer().startRanomRotate();
                        if (this.character.setMyOrientation(this.vecDir.x, 0, this.vecDir.z), !e) {
                            let e = this.character.getPresentationBaseLayer().getModel().transform.rotation, t = q.Vector3.zero;
                            this.nextPos.x = this.vecDir.x, this.nextPos.z = this.vecDir.z, this.nextPos.x *= -1, 
                            this.nextPos.z *= -1, Laya.Quaternion.lookAt(t, this.nextPos, q.Vector3.up, this.turnTo), 
                            this.turnTo.invert(this.turnTo), Laya.Quaternion.lerp(e, this.turnTo, 1, e), this.character.setDirection(this.turnTo), 
                            this.character.getPresentationBaseLayer().setDirection();
                        }
                    }
                }
            }
        }
    }
    class gi {
        constructor(e, t) {
            this.behaviourList = [], this.weight = 0, this.context = t;
            let i = e.split("|");
            for (let e = 0, t = i.length; e < t; e++) {
                let t, a = i[e].split("_"), s = parseInt(a[1]), n = parseInt(a[2]);
                switch (parseInt(a[0])) {
                  case Rr.AI_BEHAVIOUR_NONE:
                    t = new oi(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_ATTACK:
                    t = new ei(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_IDLE:
                    t = new ai(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_PATROL:
                    t = new ri(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_TRACK:
                    t = new di(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_ESCAPE:
                    t = new ii(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_CROUCHATTACK:
                    t = new ti(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_MOVEATTACK:
                    t = new ni(n, s);
                    break;

                  case Rr.AI_BEHAVIOUR_SEARCH:
                    t = new ci(n, s);
                }
                this.behaviourList.push(t), this.weight += this.behaviourList[e].weight;
            }
        }
        setBehaviour() {
            let e = Math.floor(Math.random() * (this.weight - 1));
            for (let t = 0, i = this.behaviourList.length; t < i; t++) {
                if (this.behaviourList[t].weight >= e) {
                    this.curBehaviour = this.behaviourList[t];
                    break;
                }
                e -= this.behaviourList[t].weight;
            }
            this.curBehaviour.isDone = !1, this.curBehaviour.execute(this.context);
        }
        think() {}
        update() {
            this.curBehaviour && this.curBehaviour.update();
        }
        clean() {
            for (let e in this.behaviourList) this.behaviourList[e].clean(), this.behaviourList[e] = null;
            this.behaviourList = null, this.curBehaviour = null, this.context = null;
        }
    }
    class ui {}
    class mi extends ui {
        static pass(e) {
            let t = e.aiLogic.character;
            if (t.isZombie) return !1;
            if (Mt.mode == Tt.BIOCHEMISTRY && !t.isZombie) {
                if (!ja.isHasLifeSupply()) return !0;
                if (t.getHP() / t.getMaxHP() <= .3) return !1;
                if (!ja.isHasBulletSupply()) return !0;
                if (0 == t.bullets && 0 == t.magazineBullet) return !1;
            }
            return !!t.attackLogicalBaseLayer && (!(t.attackLogicalBaseLayer.getIsDie() || !t.isStartHuaBullet) && (e.target = t.attackLogicalBaseLayer, 
            !0));
        }
    }
    class pi extends ui {
        static pass(e) {
            let t = e.aiLogic.character;
            if (t.getIsDie()) return !1;
            if (!t.isZombie && 0 == t.armCtrlList.length) return !1;
            if (Mt.mode == Tt.BIOCHEMISTRY && !t.isZombie) {
                if (t.getHP() / t.getMaxHP() <= .3) return !1;
                if (0 == t.bullets && 0 == t.magazineBullet) return !1;
            }
            if (t.attackLogicalBaseLayer) if (t.attackLogicalBaseLayer.getIsDie()) t.attackLogicalBaseLayer.killerLogicalBaseLayer && (t.attackLogicalBaseLayer.killerLogicalBaseLayer = null), 
            e.target.killerLogicalBaseLayer && (e.target.killerLogicalBaseLayer = null), t.attackLogicalBaseLayer = null, 
            e.target = t.attackLogicalBaseLayer; else if (t.attackLogicalBaseLayer || e.target.isInvincible) return !0;
            return !(!t.isZombie || t.attackLogicalBaseLayer) || !t.isStartHuaBullet && (0 == t.bullets && 0 == t.magazineBullet || !!(null == t.attackLogicalBaseLayer || t.attackLogicalBaseLayer && t.attackLogicalBaseLayer.getIsDie()));
        }
    }
    class yi extends ui {
        static pass(e) {
            return !!e.aiLogic.character.getIsDie();
        }
    }
    class Ii extends ui {
        static pass(e) {
            let t = e.aiLogic.character;
            if (!t.isZombie && 0 == t.armCtrlList.length) return !0;
            if (Mt.mode == Tt.BIOCHEMISTRY && !t.isZombie) {
                if (!ja.isHasLifeSupply()) return !1;
                if (t.getHP() / t.getMaxHP() <= .3) return !0;
                if (!ja.isHasBulletSupply()) return !1;
                if (0 == t.bullets && 0 == t.magazineBullet) return !0;
            }
            return !1;
        }
    }
    class fi extends gi {
        enter() {
            this.context.isRevenge = !1, this.type = Nr.ATTACK, this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer;
        }
        exit() {}
        setBehaviour() {
            super.setBehaviour();
        }
        update() {
            if (super.update(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (yi.pass(this.context)) return void this.context.aiLogic.setState(Nr.DIE);
                if (pi.pass(this.context)) return void this.context.aiLogic.setState(Nr.NORMAL);
                mi.pass(this.context) && this.context.aiLogic.setState(Nr.ESCAPE);
            }
        }
        think() {
            if (super.think(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (yi.pass(this.context)) return void this.context.aiLogic.setState(Nr.DIE);
                if (pi.pass(this.context)) return void this.context.aiLogic.setState(Nr.NORMAL);
                mi.pass(this.context) && this.context.aiLogic.setState(Nr.ESCAPE);
            }
        }
    }
    class Li extends ui {
        static pass(e) {
            if (kt.isCloseAttack) return !1;
            let t = e.aiLogic.character;
            if (e.target = t.attackLogicalBaseLayer, t.getIsDie()) return !1;
            if (!t.isZombie && 0 == t.armCtrlList.length) return !1;
            if (Mt.mode == Tt.BIOCHEMISTRY && !t.isZombie) {
                if (t.getHP() / t.getMaxHP() <= .3) return !1;
                if (0 == t.bullets && 0 == t.magazineBullet) return !1;
            }
            return null != e.target && (t.isZombie ? !e.target.getIsDie() : 0 == t.magazineBullet ? 0 != t.bullets && (!e.target.getIsDie() && (!t.isStartHuaBullet && !e.target.isInvincible)) : !e.target.getIsDie() && (!t.isStartHuaBullet && !e.target.isInvincible));
        }
    }
    class wi extends gi {
        enter() {
            this.type = Nr.NORMAL, this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer;
        }
        exit() {}
        setBehaviour() {
            super.setBehaviour();
        }
        update() {
            if (super.update(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                yi.pass(this.context) && this.context.aiLogic.setState(Nr.DIE);
            }
        }
        think() {
            if (super.think(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                yi.pass(this.context) && this.context.aiLogic.setState(Nr.DIE);
            }
        }
    }
    class bi extends gi {
        enter() {
            this.type = Nr.TRACK, this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer;
        }
        exit() {}
        setBehaviour() {
            super.setBehaviour();
        }
        update() {
            super.update(), this.context.target && this.context.aiLogic.character.attackLogicalBaseLayer && this.context.target.getPresentationBaseLayer().getModelID() != this.context.aiLogic.character.attackLogicalBaseLayer.getPresentationBaseLayer().getModelID() && (this.context.target = this.context.aiLogic.character.attackLogicalBaseLayer), 
            this.curBehaviour.isDone && (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, 
            Li.pass(this.context)) && this.context.aiLogic.setState(Nr.ATTACK);
        }
        think() {
            super.think(), this.curBehaviour.isDone && (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer);
        }
    }
    class Ei {
        constructor(e) {
            this.isRevenge = !1, this.aiLogic = e;
        }
        clean() {
            this.target = null, this.aiLogic = null;
        }
    }
    class Ci extends gi {
        enter() {
            this.type = Nr.ESCAPE, this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer;
        }
        exit() {}
        setBehaviour() {
            super.setBehaviour();
        }
        update() {
            if (super.update(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                pi.pass(this.context) && this.context.aiLogic.setState(Nr.NORMAL);
            }
        }
        think() {
            if (super.think(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                pi.pass(this.context) && this.context.aiLogic.setState(Nr.NORMAL);
            }
        }
    }
    class vi extends ui {
        static pass(e) {
            let t = e.aiLogic.character, i = [];
            if (0 == i.length) for (let a = 0; a < Rs.logicalBaseLayer.length; a++) {
                let s = Rs.logicalBaseLayer[a];
                s.getIsDie() || t.getIsDie() || s.getRoleType() == e.aiLogic.character.getRoleType() || i.push(s);
            }
            if (0 == i.length) return !1;
            {
                if (0 == t.magazineBullet) {
                    if (0 == t.bullets) return !1;
                } else if (0 == t.bullets) return !1;
                let a = i[Ae.onlyOneRandomInt(0, i.length)];
                return e.target = a, e.target.killerLogicalBaseLayer = t, !0;
            }
        }
        static clean() {}
    }
    class xi extends gi {
        enter() {
            this.context.isRevenge = !0, this.type = Nr.SEARCH, this.setBehaviour();
        }
        exit() {
            this.context.isRevenge = !1;
        }
        setBehaviour() {
            super.setBehaviour();
        }
        update() {
            if (super.update(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), yi.pass(this.context)) return void this.context.aiLogic.setState(Nr.DIE);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                if (pi.pass(this.context)) return void this.context.aiLogic.setState(Nr.NORMAL);
            }
        }
        think() {
            if (super.think(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), yi.pass(this.context)) return void this.context.aiLogic.setState(Nr.DIE);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                if (pi.pass(this.context)) return void this.context.aiLogic.setState(Nr.NORMAL);
            }
        }
    }
    class Bi extends gi {
        enter() {
            this.type = Nr.DIE, this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer;
        }
        exit() {}
        setBehaviour() {
            super.setBehaviour();
        }
        update() {
            if (super.update(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                pi.pass(this.context) && this.context.aiLogic.setState(Nr.NORMAL);
            }
        }
        think() {
            if (super.think(), this.curBehaviour.isDone) {
                if (this.setBehaviour(), this.preTime = Ce.gSysTimer.currTimer, Ii.pass(this.context)) return void this.context.aiLogic.setState(Nr.SEARCH);
                if (Li.pass(this.context)) return void this.context.aiLogic.setState(Nr.ATTACK);
                pi.pass(this.context) && this.context.aiLogic.setState(Nr.NORMAL);
            }
        }
    }
    const Ai = 5e3;
    class _i {
        constructor(e, t) {
            this.stateList = {}, this.reviveCoutDown = Ai, this.aiData = t, this.character = e, 
            this.context = new Ei(this), Ce.gSysTimer.frameLoop(1, this, this.update), Ce.gSysTimer.frameLoop(20, this, this.think), 
            this.stateList[Nr.NORMAL] = new wi(t.normal, this.context), this.stateList[Nr.TRACK] = new bi(t.track, this.context), 
            this.stateList[Nr.ATTACK] = new fi(t.attack, this.context), this.stateList[Nr.ESCAPE] = new Ci(t.escape, this.context), 
            this.stateList[Nr.DIE] = new Bi(t.die, this.context), this.stateList[Nr.SEARCH] = new xi(t.search, this.context), 
            this.setState(Nr.NORMAL);
        }
        clean() {
            vi.clean(), Ce.gSysTimer.clearAll(this), this.context.clean(), this.context = null, 
            this.character = null, this.curState = null;
            for (let e in this.stateList) this.stateList[e].clean(), this.stateList[e] = null;
            this.stateList = null;
        }
        setState(e) {
            this.curState && this.curState.exit(), this.curState = this.stateList[e], this.curState.enter();
        }
        returnCurState() {
            return this.curState;
        }
        update() {
            Rs.gameOver || Rs.gameStop ? console.log("游戏结束停止状态更新") : this.character.getPresentationBaseLayer() && (this.character.getRoleType(), 
            Mr.TYPE_0, this.curState.update());
        }
        think() {
            Rs.gameOver || Rs.gameStop ? console.log("游戏结束停止状态思考") : this.character.getPresentationBaseLayer() && this.curState.think();
        }
    }
    const Si = [ {
        id: 1,
        avatar: "sub1/avatar/i1.jpg",
        nick: "逆光",
        type: 1
    }, {
        id: 2,
        avatar: "sub1/avatar/i2.jpg",
        nick: "暖风昔人",
        type: 1
    }, {
        id: 3,
        avatar: "sub1/avatar/i3.jpg",
        nick: "柠檬",
        type: 1
    }, {
        id: 4,
        avatar: "sub1/avatar/i4.jpg",
        nick: "格子的夏天",
        type: 1
    }, {
        id: 5,
        avatar: "sub1/avatar/i5.jpg",
        nick: "冰雨忧蓝",
        type: 1
    }, {
        id: 6,
        avatar: "sub1/avatar/i6.jpg",
        nick: "何以心动",
        type: 1
    }, {
        id: 7,
        avatar: "sub1/avatar/i7.jpg",
        nick: "眷恋",
        type: 1
    }, {
        id: 8,
        avatar: "sub1/avatar/i8.jpg",
        nick: "琼窗梦回",
        type: 1
    }, {
        id: 9,
        avatar: "sub1/avatar/i9.jpg",
        nick: "紫竹語嫣",
        type: 1
    }, {
        id: 10,
        avatar: "sub1/avatar/i10.jpg",
        nick: "终陌。",
        type: 1
    }, {
        id: 11,
        avatar: "sub1/avatar/i11.jpg",
        nick: "柒月。",
        type: 1
    }, {
        id: 12,
        avatar: "sub1/avatar/i12.jpg",
        nick: "三分注定",
        type: 1
    }, {
        id: 13,
        avatar: "sub1/avatar/i13.jpg",
        nick: "七分饶幸",
        type: 1
    }, {
        id: 14,
        avatar: "sub1/avatar/i14.jpg",
        nick: "琉璃梦幻",
        type: 1
    }, {
        id: 15,
        avatar: "sub1/avatar/i15.jpg",
        nick: "让我眼熟你.",
        type: 1
    }, {
        id: 16,
        avatar: "sub1/avatar/i16.jpg",
        nick: "傲娇萝莉攻",
        type: 1
    }, {
        id: 17,
        avatar: "sub1/avatar/i17.jpg",
        nick: "一笑百媚生",
        type: 1
    }, {
        id: 18,
        avatar: "sub1/avatar/i18.jpg",
        nick: "yoyo",
        type: 1
    }, {
        id: 19,
        avatar: "sub1/avatar/i19.jpg",
        nick: "厌世.",
        type: 1
    }, {
        id: 20,
        avatar: "sub1/avatar/i20.jpg",
        nick: "闲身",
        type: 1
    }, {
        id: 21,
        avatar: "sub1/avatar/i21.jpg",
        nick: "好甜",
        type: 1
    }, {
        id: 22,
        avatar: "sub1/avatar/i22.jpg",
        nick: "服软",
        type: 1
    }, {
        id: 23,
        avatar: "sub1/avatar/i23.jpg",
        nick: "矫情",
        type: 1
    }, {
        id: 24,
        avatar: "sub1/avatar/i24.jpg",
        nick: "人皮目录",
        type: 1
    }, {
        id: 25,
        avatar: "sub1/avatar/i25.jpg",
        nick: "水晶透心",
        type: 1
    }, {
        id: 26,
        avatar: "sub1/avatar/i26.jpg",
        nick: "海螺姑娘",
        type: 1
    }, {
        id: 27,
        avatar: "sub1/avatar/i27.jpg",
        nick: "懵逼小萝莉",
        type: 1
    }, {
        id: 28,
        avatar: "sub1/avatar/i28.jpg",
        nick: "无字情书",
        type: 1
    }, {
        id: 29,
        avatar: "sub1/avatar/i29.jpg",
        nick: "一世浮沉",
        type: 1
    }, {
        id: 30,
        avatar: "sub1/avatar/i30.jpg",
        nick: "与君绝",
        type: 1
    }, {
        id: 31,
        avatar: "sub1/avatar/i31.jpg",
        nick: "画骨i",
        type: 1
    }, {
        id: 32,
        avatar: "sub1/avatar/i32.jpg",
        nick: "初心",
        type: 1
    }, {
        id: 33,
        avatar: "sub1/avatar/i33.jpg",
        nick: "浪漫人生路",
        type: 2
    }, {
        id: 34,
        avatar: "sub1/avatar/i34.jpg",
        nick: "倾听者",
        type: 2
    }, {
        id: 35,
        avatar: "sub1/avatar/i35.jpg",
        nick: "荒人说梦",
        type: 2
    }, {
        id: 36,
        avatar: "sub1/avatar/i36.jpg",
        nick: "川水往事",
        type: 2
    }, {
        id: 37,
        avatar: "sub1/avatar/i37.jpg",
        nick: "羁客",
        type: 2
    }, {
        id: 38,
        avatar: "sub1/avatar/i38.jpg",
        nick: "征骨岁月",
        type: 2
    }, {
        id: 39,
        avatar: "sub1/avatar/i39.jpg",
        nick: "溺爱和你",
        type: 2
    }, {
        id: 40,
        avatar: "sub1/avatar/i40.jpg",
        nick: "杀生予夺",
        type: 2
    }, {
        id: 41,
        avatar: "sub1/avatar/i41.jpg",
        nick: "末日狂欢",
        type: 2
    }, {
        id: 42,
        avatar: "sub1/avatar/i42.jpg",
        nick: "老街孤人",
        type: 2
    }, {
        id: 43,
        avatar: "sub1/avatar/i43.jpg",
        nick: "痴意少年",
        type: 2
    }, {
        id: 44,
        avatar: "sub1/avatar/i44.jpg",
        nick: "高冷怪",
        type: 2
    }, {
        id: 45,
        avatar: "sub1/avatar/i45.jpg",
        nick: "一江月",
        type: 2
    }, {
        id: 46,
        avatar: "sub1/avatar/i46.jpg",
        nick: "小太阳",
        type: 2
    }, {
        id: 47,
        avatar: "sub1/avatar/i47.jpg",
        nick: "冰纨",
        type: 2
    }, {
        id: 48,
        avatar: "sub1/avatar/i48.jpg",
        nick: "倒影年华",
        type: 2
    }, {
        id: 49,
        avatar: "sub1/avatar/i49.jpg",
        nick: "玉婳",
        type: 2
    }, {
        id: 50,
        avatar: "sub1/avatar/i50.jpg",
        nick: "瀚海阑干",
        type: 2
    }, {
        id: 51,
        avatar: "sub1/avatar/i51.jpg",
        nick: "心未眠 ",
        type: 2
    }, {
        id: 52,
        avatar: "sub1/avatar/i52.jpg",
        nick: "岛未晴",
        type: 2
    }, {
        id: 53,
        avatar: "sub1/avatar/i53.jpg",
        nick: "紧扣心弦i ",
        type: 2
    }, {
        id: 54,
        avatar: "sub1/avatar/i54.jpg",
        nick: "活着好累!",
        type: 2
    }, {
        id: 55,
        avatar: "sub1/avatar/i55.jpg",
        nick: "承诺",
        type: 2
    }, {
        id: 56,
        avatar: "sub1/avatar/i56.jpg",
        nick: "冰冰",
        type: 2
    }, {
        id: 57,
        avatar: "sub1/avatar/i57.jpg",
        nick: "少年 舍我其谁。",
        type: 2
    }, {
        id: 58,
        avatar: "sub1/avatar/i58.jpg",
        nick: "蝶恋花つ",
        type: 2
    }, {
        id: 59,
        avatar: "sub1/avatar/i59.jpg",
        nick: "剩蛋姐",
        type: 2
    }, {
        id: 60,
        avatar: "sub1/avatar/i60.jpg",
        nick: "煽情戏子゛",
        type: 2
    }, {
        id: 61,
        avatar: "sub1/avatar/i61.jpg",
        nick: "薄荷凉@",
        type: 2
    }, {
        id: 62,
        avatar: "sub1/avatar/i62.jpg",
        nick: "迟月",
        type: 2
    }, {
        id: 63,
        avatar: "sub1/avatar/i63.jpg",
        nick: "凉凉",
        type: 2
    }, {
        id: 64,
        avatar: "sub1/avatar/i64.jpg",
        nick: "马上有对象",
        type: 2
    }, {
        id: 65,
        avatar: "sub1/avatar/i65.jpg",
        nick: "@倒带",
        type: 2
    }, {
        id: 66,
        avatar: "sub1/avatar/i66.jpg",
        nick: "三生一梦 ",
        type: 3
    }, {
        id: 67,
        avatar: "sub1/avatar/i67.jpg",
        nick: "情浅凉心 ",
        type: 3
    }, {
        id: 68,
        avatar: "sub1/avatar/i68.jpg",
        nick: "〃温暖了心ぐ ",
        type: 3
    }, {
        id: 69,
        avatar: "sub1/avatar/i69.jpg",
        nick: "鸢尾情人 ",
        type: 3
    }, {
        id: 70,
        avatar: "sub1/avatar/i70.jpg",
        nick: "会唱歌的小包子",
        type: 3
    }, {
        id: 71,
        avatar: "sub1/avatar/i71.jpg",
        nick: "ぴ安之若素°",
        type: 3
    }, {
        id: 72,
        avatar: "sub1/avatar/i72.jpg",
        nick: "小新愛蜡筆 ",
        type: 3
    }, {
        id: 73,
        avatar: "sub1/avatar/i73.jpg",
        nick: "缺1份矜持ゝ ",
        type: 3
    }, {
        id: 74,
        avatar: "sub1/avatar/i74.jpg",
        nick: "齐逐 〃 ",
        type: 3
    }, {
        id: 75,
        avatar: "sub1/avatar/i75.jpg",
        nick: "少根弦╮ ",
        type: 3
    }, {
        id: 76,
        avatar: "sub1/avatar/i76.jpg",
        nick: "好自为之、",
        type: 3
    }, {
        id: 77,
        avatar: "sub1/avatar/i77.jpg",
        nick: "苦情歌 ",
        type: 3
    }, {
        id: 78,
        avatar: "sub1/avatar/i78.jpg",
        nick: "瞎闹腾i",
        type: 3
    }, {
        id: 79,
        avatar: "sub1/avatar/i79.jpg",
        nick: "一干为尽 ",
        type: 3
    }, {
        id: 80,
        avatar: "sub1/avatar/i80.jpg",
        nick: "心酸",
        type: 3
    }, {
        id: 81,
        avatar: "sub1/avatar/i81.jpg",
        nick: "淘汰",
        type: 3
    }, {
        id: 82,
        avatar: "sub1/avatar/i82.jpg",
        nick: "飞",
        type: 3
    }, {
        id: 83,
        avatar: "sub1/avatar/i83.jpg",
        nick: "兜圈",
        type: 3
    }, {
        id: 84,
        avatar: "sub1/avatar/i84.jpg",
        nick: "小情歌",
        type: 3
    }, {
        id: 85,
        avatar: "sub1/avatar/i85.jpg",
        nick: "说谎",
        type: 3
    }, {
        id: 86,
        avatar: "sub1/avatar/i86.jpg",
        nick: "信我有鬼",
        type: 3
    }, {
        id: 87,
        avatar: "sub1/avatar/i87.jpg",
        nick: "蛋炒饭",
        type: 3
    }, {
        id: 88,
        avatar: "sub1/avatar/i88.jpg",
        nick: "肥仔快乐",
        type: 3
    }, {
        id: 89,
        avatar: "sub1/avatar/i89.jpg",
        nick: "一叶知秋",
        type: 3
    }, {
        id: 90,
        avatar: "sub1/avatar/i90.jpg",
        nick: "拾荒",
        type: 3
    }, {
        id: 91,
        avatar: "sub1/avatar/i91.jpg",
        nick: "勉强幸福",
        type: 3
    }, {
        id: 92,
        avatar: "sub1/avatar/i92.jpg",
        nick: "晚霞",
        type: 3
    }, {
        id: 93,
        avatar: "sub1/avatar/i93.jpg",
        nick: "看！飞碟",
        type: 3
    }, {
        id: 94,
        avatar: "sub1/avatar/i94.jpg",
        nick: "星晴",
        type: 3
    }, {
        id: 95,
        avatar: "sub1/avatar/i95.jpg",
        nick: "诱",
        type: 3
    }, {
        id: 96,
        avatar: "sub1/avatar/i96.jpg",
        nick: "歇斯底里",
        type: 3
    }, {
        id: 97,
        avatar: "sub1/avatar/i97.jpg",
        nick: "越反越爱",
        type: 3
    } ];
    class Ti {
        static setBuffGain(e = !1, t = 0, i = 0, a = 0) {
            this.defenseGain = 0, this.hpGain = 0, this.headshotGain = 0, e ? (this.defenseGain += t, 
            this.hpGain += i, this.headshotGain += a) : (this.defenseGain = 0, this.hpGain = 0, 
            this.headshotGain = 0);
        }
    }
    Ti.defenseGain = 0, Ti.hpGain = 0, Ti.headshotGain = 0;
    class Di extends Laya.Script3D {
        constructor() {
            super();
        }
        onAwake() {
            let e = this.owner;
            this.tran = e.transform, this.animator = e.getComponent(Laya.Animator), this.init(this.id);
        }
        onDestroy() {
            L.unregisterByEventId(w.POSITION + this._renderEventId), L.unregisterByEventId(w.PLAY_AIR_DROP_ANI + this._renderEventId), 
            L.unregisterByEventId(w.ACTIVE + this._renderEventId), L.unregisterByEventId(w.AIR_DROP_HALO + this._renderEventId), 
            this.tran = null, this.animator = null;
        }
        init(e) {
            this._renderEventId = e, L.register(w.POSITION + this._renderEventId, this.setPoition, this), 
            L.register(w.PLAY_AIR_DROP_ANI + this._renderEventId, this.playAni, this), L.register(w.ACTIVE + this._renderEventId, this.setActive, this), 
            L.register(w.AIR_DROP_HALO + this._renderEventId, this.isShowHalo, this);
        }
        playAni(e) {
            this.curAniName != e && (this.curAniName = e, this.animator.crossFade(e, .2, 0));
        }
        setPoition(e) {
            let t = this.tran.position;
            t.x = e.pos.x, t.y = e.pos.y, t.z = e.pos.z, this.tran.position = t;
        }
        get renderEventId() {
            return this._renderEventId;
        }
        setActive(e) {
            this.owner.active = e;
        }
        isShowHalo(e = !1) {
            this.owner.getChildByName("guangquan").active = e;
        }
    }
    class Ri {
        static getEffect(e, t = !1) {
            let i = this.effect[e];
            i || (i = [], this.effect[e] = i);
            for (let e = 0, t = i.length; e < t; e++) {
                let t = i[e];
                if (!t.active && t.transform) return t.active = !0, t;
            }
            let a = ul.EFFECT_PREFEB;
            t && (a = ul.WEAPON_OTHER_PREFEB);
            let s = xe.getRes(a).getChildByName(e).clone();
            return i.push(s), s;
        }
        static recycleEffect(e) {
            e.active = !1, e.removeSelf();
        }
        static playfire(e) {
            let t = this.getEffect(e.name, e.isOther), i = t.transform.localPosition;
            i.x = 0, i.y = 0, i.z = 0, t.transform.localPosition = i;
            let a = t.transform.localRotation;
            return a.x = 0, a.z = 0, a.y = 0, e.parent.addChild(t), t;
        }
        static playFireEnd(e) {
            if (hl.isReviewVersion()) return null;
            let t = this.getEffect(e.name, e.isOther);
            Ts.scene3d.addChild(t);
            let i = t.transform.localPosition;
            i.x = e.pos.x, i.y = e.pos.y, i.z = e.pos.z, t.transform.localPosition = i;
            let a = 1e3;
            return e.name == ie.JU_LONG && (a = 1800), e.name == ie.HUAYAN && (a = 2500), Laya.timer.once(a, Ts.scene3d, function() {
                t && Ri.recycleEffect(t);
            }), t;
        }
        static playFireEffect(e) {
            if (hl.isReviewVersion()) return null;
            let t = this.getEffect(ie.RANSHAO, !0);
            e.getPresentationBaseLayer().getModel().addChild(t);
            let i = t.transform.localPosition;
            i.x = 0, i.y = 0, i.z = 0, t.transform.localPosition = i;
            return Laya.timer.once(3e3, Ts.scene3d, function() {
                t && Ri.recycleEffect(t);
            }), t;
        }
        static playfireTrajectory(e) {}
        static playImpactSparks(e) {}
        static playBombs(e) {
            let t;
            (t = 1 == tl.getInstance().getDragonBoatBombState() ? this.getEffect(ie.DRAGON_BULLET3) : this.getEffect(ie.BULLET3)).transform.position = e, 
            Ts.scene3d.addChild(t), t.myCoutdown = 2e3;
        }
        static playShield(e) {
            if (!e) return;
            if (!e.parent) return;
            let t = this.getEffect(ie.SHIELD);
            return e.parent.addChild(t), t;
        }
        static playOtherArm(e) {
            if (!e) return;
            if (!e.parent) return;
            let t = this.getEffect(ie.OTHER_ARM, !1);
            return e.parent.addChild(t), t;
        }
        static playDropArm(e) {
            if (!e) return;
            if (!e.parent) return;
            let t = this.getEffect(ie.DROP_ARM_EFFECT, !0);
            return e.parent.addChild(t), t;
        }
        static playSynthesis1(e) {
            let t = xe.getRes(ul.EFFECT_PREFEB).getChildByName(ie.COMPOSE1), i = Laya.ShuriKenParticle3D.instantiate(t, e, !1);
            return i.particleSystem.play(), i;
        }
        static playSynthesis2(e) {
            let t = xe.getRes(ul.EFFECT_PREFEB).getChildByName(ie.COMPOSE2), i = Laya.ShuriKenParticle3D.instantiate(t, e, !1);
            return i.particleSystem.stop(), i;
        }
        static timer() {
            for (let e in this.effect) {
                let t = this.effect[e];
                for (let e = 0, i = t.length; e < i; e++) {
                    let i = t[e];
                    i.active && (i.myCoutdown -= 20, i.myCoutdown <= 0 && (i.active = !1, i.removeSelf()));
                }
            }
        }
        static clean() {
            for (let e in this.effect) {
                let t = this.effect[e];
                for (let e = 0, i = t.length; e < i; e++) {
                    let i = t[e];
                    i.myCoutdown = 0, i.active = !1, i.removeSelf();
                }
            }
        }
    }
    Ri.zeroVec = new Laya.Vector3(0, 0, 0), Ri.effect = {}, Ri.liveTimer = {};
    class Ni extends Laya.Script3D {
        constructor() {
            super();
        }
        onAwake() {
            let e = this.owner;
            this.tran = e.transform, this.init(this.id);
        }
        onDestroy() {
            L.unregisterByEventId(w.POSITION + this._renderEventId), L.unregisterByEventId(w.ACTIVE + this._renderEventId), 
            L.unregisterByEventId(w.DROP_ARM_CHANGE + this._renderEventId), this.tran = null, 
            this.armMode && this.armMode.removeSelf(), this.armMode = null, this.effect && this.effect.removeSelf(), 
            this.effect = null;
        }
        init(e) {
            this._renderEventId = e, L.register(w.POSITION + this._renderEventId, this.setPoition, this), 
            L.register(w.ACTIVE + this._renderEventId, this.setActive, this), L.register(w.DROP_ARM_CHANGE + this._renderEventId, this.initMode, this), 
            this.effect = Ri.playDropArm({
                parent: this.owner
            }), this.effect.transform.localPositionX = 0, this.effect.transform.localPositionZ = 0;
        }
        setPoition(e) {
            let t = this.tran.position;
            t.x = e.pos.x, t.y = e.pos.y, t.z = e.pos.z, this.tran.position = t;
        }
        get renderEventId() {
            return this._renderEventId;
        }
        setActive(e) {
            this.owner.active = e;
        }
        initMode(e) {
            this.armMode && (this.armMode.removeSelf(), this.armMode = null), this.armMode = Te.onLyToCreateArm(e, this.owner, !0), 
            this.armMode.transform.localPositionY = 1, this.armMode.transform.localPositionX = 0, 
            this.armMode.transform.localPositionZ = 0;
        }
        onUpdate() {
            this.armMode && (this.armMode.transform.localRotationEulerY += .25);
        }
    }
    class Mi extends T.view.common.LogViewUI {
        constructor(e) {
            super(), this.notificationView = e;
        }
        onDestroy() {
            this.imgBg = null, this.labelLog = null;
        }
        setContent(e, t = 2e3) {
            this.labelLog.text = e;
            let i = this.labelLog.width;
            this.imgBg.width = i + 20, this.alpha = 1, this.visible = !0, Laya.Tween.to(this, {
                alpha: 0
            }, 1e3, null, Laya.Handler.create(this, function() {
                this.notificationView.hide();
            }), t);
        }
    }
    class ki extends T.view.common.NotificationViewUI {
        constructor() {
            super(), this.items = [], this.height = this.stage.height, this.width = this.stage.width;
        }
        setContent(e, t = 2e3) {
            let i;
            this.visible = !0;
            for (let e in this.items) this.items[e].visible || ((i = this.items[e]).visible = !0);
            i || (i = new Mi(this), this.items.push(i)), i.setContent(e, t), this.boxContent.addChild(i);
            for (let e = this.boxContent.numChildren - 1; e >= 0; e--) {
                this.boxContent.getChildAt(e).y = 0 - 70 * (this.boxContent.numChildren - e - 1);
            }
        }
        onDestroy() {
            this.boxContent = null;
        }
        hide() {
            0 == this.boxContent.numChildren ? this.visible = !1 : this.visible = !0;
        }
    }
    class Oi {
        static init() {
            Oi.notificationView || (Oi.notificationView = Laya.stage.addChild(new ki()), Oi.notificationView.hide(), 
            Oi.notificationView.zOrder = S.NOTIFY);
        }
        static showNotification(e, t = 2e3) {
            Oi.notificationView || (Oi.notificationView = Laya.stage.addChild(new ki())), Oi.notificationView.zOrder = S.NOTIFY, 
            Oi.notificationView.setContent(e, t);
        }
        static showNotificationClick(e) {
            Bt.openFunction(Er.NOTIFY_CLICK, gr.COVER, ur.WINDOW, St.HIDE, e);
        }
        static showDebug(e) {
            this.isDebug ? this.showNotification(e) : console.log(e);
        }
    }
    var Pi;
    Oi.isDebug = !1, function(e) {
        e[e.FULL = 0] = "FULL", e[e.NORAML = 1] = "NORAML";
    }(Pi || (Pi = {}));
    class Vi extends T.view.gameAir.GameAirDropViewUI {
        constructor(e) {
            super(), this.cb = null, this.fail = null, this.cb = e.success, this.fail = e.fail, 
            this.width = this.stage.width, this.height = this.stage.height, hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock(), 
            Rs.gameStop = !0, this.imgBg1.visible = !1, this.imgBg2.visible = !1, this.imgFull1.visible = !1, 
            this.imgFull2.visible = !1, this.imgFull3.visible = !1, e.type == Pi.NORAML ? (this.imgBg2.visible = !0, 
            this.imgFull2.visible = !0) : (this.imgBg1.visible = !0, this.imgFull1.visible = !0, 
            this.imgFull3.visible = !0);
        }
        onAwake() {
            this.init(), this.setBtnEvent();
        }
        onDestroy() {
            if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                Bt.getFunctionViewCtrl(Er.GAME).onBtnDown(!0);
            }
            this.timer.clearAll(this);
        }
        init() {
            this.uiPlatformConfig();
        }
        setBtnEvent() {
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnClose), this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), 
            this.btnGet.addComponent($), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onBtnClose() {
            q.getTouch() && (Rs.gameStop = !1, this.fail && this.fail(), Bt.closeFunction());
        }
        onBtnGet() {
            if (!q.getTouch()) return;
            let e = this;
            this.timer.pause(), j.setEvent(function() {
                e.timer.resume(), Rs.gameStop = !1, e.cb && e.cb(), Bt.closeFunction();
            }, function() {
                e.timer.resume();
            }, t.GAMEAIR);
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnGet.getChildAt(0),
                type: 1
            } ]), hl.platform != v.TT && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.btnGet.centerX = -this.btnNo.centerX, 
            this.btnNo.visible = !0, this.btnBack.visible = !1);
        }
    }
    var Gi = Laya.Vector3;
    class Ui {
        constructor(e, t, i) {
            this.isActive = !0, this.vecPos = new Gi(), this.vecPos = e, this._renderEventId = t, 
            this.id = Laya.Utils.getGID(), this.radius2 = i * i, this.radius = i;
        }
        clean() {
            this.radius2 = null, this.vecPos = null;
        }
        get renderEventId() {
            return this._renderEventId;
        }
        set renderEventId(e) {
            this._renderEventId = e;
        }
        resetRadius(e) {
            this.radius = e, this.radius2 = e * e;
        }
    }
    var Fi, Hi = Laya.Vector3;
    !function(e) {
        e[e.FLY = 0] = "FLY", e[e.NORMAL = 1] = "NORMAL", e[e.HAVE = 2] = "HAVE", e[e.OPEN = 3] = "OPEN", 
        e[e.FAIL = 4] = "FAIL";
    }(Fi || (Fi = {}));
    let Wi = 2690, Yi = 1090, Xi = 6e4, Ki = 25e3, zi = [ 15, 25 ], qi = 12500, Qi = 10;
    class Zi extends Ui {
        constructor(e, t, i) {
            super(e, t, 1), this.createOtherAirTime = Ki, this.reviveTime = 0, this.openAniTime = 0, 
            this.effectTime = 0, this.flyTime = 0, this.flyHeight = 0, this.state = Fi.NORMAL, 
            L.notify(w.POSITION + this.renderEventId, {
                pos: this.vecPos
            }), this._index = i;
        }
        update() {
            if (this.isActive) if (this.state == Fi.FLY) this.flyTime > 0 && (this.flyTime -= Laya.timer.delta, 
            this.flyTime <= 0 ? (this.flyTime = 0, this.vecPos.y = this.flyHeight - Qi, this.state = Fi.NORMAL, 
            L.notify(w.AIR_DROP_HALO + this.renderEventId, !0)) : this.vecPos.y = this.flyHeight - Qi * (qi - this.flyTime) / qi, 
            L.notify(w.POSITION + this.renderEventId, {
                pos: this.vecPos
            })); else {
                if (Rs.playerLogicalBaseLayer && !Rs.playerLogicalBaseLayer.getIsDie() && this.state != Fi.OPEN) {
                    let t = Bt.getFunctionViewCtrl(Er.GAME);
                    if (!t) return;
                    let i = 4 * this.radius2 > Hi.distanceSquared(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModel().transform.position, this.vecPos);
                    if (this.state == Fi.NORMAL && i && (console.log("播放打开动画"), this.state = Fi.HAVE, 
                    this.openTime = Wi, this.openAniTime = 0), this.state == Fi.FAIL && (i || (this.state = Fi.NORMAL, 
                    t.openAirDropValue = 0)), this.state == Fi.HAVE) {
                        if (this.openTime > 0) if (this.openTime -= Laya.timer.delta, t.openAirDropValue = 1 - this.openTime / Wi, 
                        t.labelTime.text = Math.round(this.openTime / Wi * Wi / 100) / 10 + "s", this.effectTime >= 0 && (this.effectTime -= Laya.timer.delta, 
                        this.effectTime <= 0 && (this.effectTime = 263, il.play(ml.AIR_DROP_TURN))), i) {
                            if (this.openTime <= 0) if (0 == t.nonoArmCount) {
                                console.log("视频弹窗");
                                var e = this;
                                let i = t.addArmCount < qr ? Pi.FULL : Pi.NORAML;
                                Bt.openFunction(Er.GAME_AIR_DROP, gr.COVER, ur.WINDOW, St.HIDE, {
                                    success: function() {
                                        e.openAniTime = Yi, t.openAirDropValue = 0, t.addArmCount < qr && (t.addArmCount++, 
                                        t.nonoArmCount++), L.notify(w.PLAY_AIR_DROP_ANI + e.renderEventId, zr.OPEN);
                                    },
                                    fail: function() {
                                        e.state = Fi.FAIL, t.openAirDropValue = 0, e.setUnActive();
                                    },
                                    type: i
                                });
                            } else L.notify(w.PLAY_AIR_DROP_ANI + this.renderEventId, zr.OPEN), this.openAniTime = Yi, 
                            t.openAirDropValue = 0;
                        } else this.state = Fi.NORMAL, t.openAirDropValue = 0;
                        this.openAniTime > 0 && (this.openAniTime -= Laya.timer.delta, this.openAniTime <= 0 && this.open(Rs.playerLogicalBaseLayer));
                    }
                }
                this.state == Fi.NORMAL && (this.overTime -= Laya.timer.delta, this.overTime < 0 && (this.overTime = Xi, 
                this._index = na.instance.getRandAirDropIndex(), this.setPos(na.instance.getAirDropPos(this._index)), 
                console.log("超过", Math.floor(Xi / 1e3), ",重新刷新位置"), this.setActive()), this.createOtherAirTime > 0 && na.instance.airDropList.length < sa && (this.createOtherAirTime -= Laya.timer.delta, 
                this.createOtherAirTime <= 0 && (console.log("超过", Math.floor(Ki / 1e3), ",生成另一个空投"), 
                na.instance.createAirDrop(na.instance.getRandAirDropIndex()))));
            } else this.reviveTime > 0 && (this.reviveTime -= Laya.timer.delta, this.reviveTime <= 0 && (console.log("重新刷新位置"), 
            this._index = na.instance.getRandAirDropIndex(), this.setPos(na.instance.getAirDropPos(this._index)), 
            this.setActive()));
        }
        clean() {
            super.clean(), this.temPos = null;
        }
        open(e) {
            if (this.isActive) {
                if (e.getIsDie()) return;
                let t = [];
                for (let e = 0; e < Se.keys.length; e++) {
                    const i = Se.keys[e];
                    t.push(i);
                }
                for (let i = 0; i < e.armCtrlList.length; i++) {
                    const a = e.armCtrlList[i];
                    a.isOtherArm && t.indexOf(a.id) > -1 && (t.splice(t.indexOf(a.id), 1), console.log("排除当前武器", a.getArmName()), 
                    console.log("可用武器", t));
                }
                let i = Se.getDataByIndex(Math.floor(Math.random() * t.length));
                Oi.showNotification("恭喜获得" + i.name), e.pickUpTheGunById(i.id, !0), this.isActive = !1, 
                L.notify(w.ACTIVE + this.renderEventId, !1), this.state = Fi.OPEN, L.notify(w.PLAY_AIR_DROP_ANI + this.renderEventId, zr.CLOSE), 
                this.createOtherAirTime = Ki, this.reviveTime = 1e3 * Math.floor(Math.random() * (zi[1] - zi[0]) + zi[0]), 
                console.log("被拾取后", Math.floor(this.reviveTime / 1e3), "s刷新下一个"), na.instance.airDropOpenTimes += 1, 
                il.play(ml.AIR_DROP_OPEN);
            }
        }
        setActive() {
            this.isActive = !0, this.state = Fi.FLY, this.overTime = Xi, L.notify(w.ACTIVE + this.renderEventId, !0);
            let e = Bt.getFunctionViewCtrl(Er.GAME);
            e && e.airDropAni.play(0, !1), e && e.addAirDropInMap(this), il.playEffect(ml.AIR_DROP), 
            this.flyHeight = Qi + this.vecPos.y, this.flyTime = qi, L.notify(w.AIR_DROP_HALO + this.renderEventId, !1);
        }
        setPos(e) {
            this.vecPos = e.clone(), L.notify(w.POSITION + this.renderEventId, {
                pos: this.vecPos
            });
        }
        setUnActive() {
            this.isActive = !1, L.notify(w.ACTIVE + this.renderEventId, !1);
        }
        get index() {
            return this._index;
        }
    }
    var ji, Ji = Laya.Vector3;
    !function(e) {
        e[e.NORMAL = 0] = "NORMAL", e[e.OPEN = 1] = "OPEN";
    }(ji || (ji = {}));
    class $i extends Ui {
        constructor(e, t, i) {
            super(e, t, 1), this.mode = i, this.init(e);
        }
        init(e) {
            this.vecPos.x = e.x, this.vecPos.y = e.y, this.vecPos.z = e.z, this.state = ji.NORMAL, 
            this.show();
        }
        update() {
            if (this.isActive && Rs.playerLogicalBaseLayer && this.state == ji.NORMAL && !Rs.playerLogicalBaseLayer.getIsDie()) {
                if (!Bt.getFunctionViewCtrl(Er.GAME)) return;
                4 * this.radius2 > Ji.distanceSquared(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModel().transform.position, this.vecPos) && this.open(Rs.playerLogicalBaseLayer);
            }
        }
        clean() {
            super.clean();
        }
        open(e) {
            if (this.isActive) {
                if (e.getIsDie()) return;
                let t = () => {
                    this.getArm(e, Gr.DI_JIA);
                }, i = () => {
                    this.getArm(e, Gr.Fat);
                };
                Bt.openFunction(Er.GAME_DIJIA, gr.COVER, ur.VIEW, St.HIDE, {
                    enter: t,
                    no: i
                });
            }
        }
        getArm(e, t) {
            let i = Se.getDataByKey(t), a = !1;
            for (let t = 0; t < e.armCtrlList.length; t++) {
                e.armCtrlList[t].id == i.id && (a = !0);
            }
            let s = Bt.getFunctionViewCtrl(Er.GAME);
            if (a || s.addArmCount >= qr) e.pickUpTheGunById(i.id, !0), this.hide(), this.state = ji.OPEN, 
            il.play(ml.AIR_DROP_OPEN); else if (0 == a) if (0 == s.nonoArmCount) {
                Oi.showNotification("恭喜获得" + i.name), s.addArmCount < qr && (s.addArmCount++, s.nonoArmCount++), 
                e.pickUpTheGunById(i.id, !0), this.hide(), this.state = ji.OPEN, il.play(ml.AIR_DROP_OPEN);
            } else Oi.showNotification("恭喜获得" + i.name), e.pickUpTheGunById(i.id, !0), this.hide(), 
            this.state = ji.OPEN, il.play(ml.AIR_DROP_OPEN);
        }
        hide() {
            this.isActive = !1;
        }
        show() {
            this.isActive = !0, this.mode.active = !0;
        }
    }
    var ea, ta = Laya.Vector3;
    !function(e) {
        e[e.NORMAL = 0] = "NORMAL", e[e.OPEN = 1] = "OPEN", e[e.FAIL = 2] = "FAIL";
    }(ea || (ea = {}));
    let ia = 3e4;
    class aa extends Ui {
        constructor(e, t) {
            super(e, t, 1), this.dieTime = 0, this.canEatTime = 1500;
        }
        init(e, t, i) {
            this.vecPos.x = e.x, this.vecPos.y = e.y, this.vecPos.z = e.z, L.notify(w.POSITION + this.renderEventId, {
                pos: this.vecPos
            }), this.dieTime = ia, this.armId = t, this.state = ea.NORMAL, this.canEatTime = i, 
            this.show();
        }
        update() {
            if (this.isActive) if (this.state == ea.FAIL) {
                4 * this.radius2 > ta.distanceSquared(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModel().transform.position, this.vecPos) || (this.state = ea.NORMAL);
            } else if (Rs.playerLogicalBaseLayer && this.state == ea.NORMAL && (this.canEatTime > 0 && (this.canEatTime -= Laya.timer.delta), 
            this.canEatTime <= 0)) {
                if (this.dieTime > 0 && (this.dieTime -= Laya.timer.delta, this.dieTime <= 0)) return void this.hide();
                if (!Rs.playerLogicalBaseLayer.getIsDie()) {
                    if (!Bt.getFunctionViewCtrl(Er.GAME)) return;
                    4 * this.radius2 > ta.distanceSquared(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModel().transform.position, this.vecPos) && this.open(Rs.playerLogicalBaseLayer);
                }
            }
        }
        clean() {
            super.clean();
        }
        open(e) {
            if (this.isActive) {
                if (e.getIsDie()) return;
                let i = Se.getDataByKey(this.armId), a = !1;
                for (let t = 0; t < e.armCtrlList.length; t++) {
                    e.armCtrlList[t].id == i.id && (a = !0);
                }
                let s = Bt.getFunctionViewCtrl(Er.GAME);
                if (a || s.addArmCount >= qr) e.pickUpTheGunById(i.id, !0), this.hide(), this.state = ea.OPEN, 
                il.play(ml.AIR_DROP_OPEN); else if (0 == a) if (0 == s.nonoArmCount) {
                    var t = this;
                    Bt.openFunction(Er.GAME_ARM_FULL, gr.COVER, ur.WINDOW, St.HIDE, {
                        success: function() {
                            Oi.showNotification("恭喜获得" + i.name), s.addArmCount < qr && (s.addArmCount++, s.nonoArmCount++), 
                            e.pickUpTheGunById(i.id, !0), t.hide(), t.state = ea.OPEN, il.play(ml.AIR_DROP_OPEN);
                        },
                        fail: function() {
                            t.state = ea.FAIL, t.hide();
                        }
                    });
                } else Oi.showNotification("恭喜获得" + i.name), e.pickUpTheGunById(i.id, !0), this.hide(), 
                this.state = ea.OPEN, il.play(ml.AIR_DROP_OPEN);
            }
        }
        hide() {
            this.isActive = !1, L.notify(w.ACTIVE + this.renderEventId, !1);
        }
        show() {
            this.isActive = !0, L.notify(w.ACTIVE + this.renderEventId, !0), L.notify(w.DROP_ARM_CHANGE + this.renderEventId, this.armId);
        }
    }
    let sa = 3;
    class na {
        constructor() {
            this.airDropRefreshTime = 0, this.startAirDropTime = 0, this._maxAirDropIndex = 0, 
            this.airDropOpenTimes = 0;
        }
        static get instance() {
            return this._instance ? this._instance : (this._instance = new na(), this._instance);
        }
        init() {
            Laya.timer.frameLoop(1, this, this.update), this.dropArmInit(), this.airDropInit(), 
            this.diJiaInit();
        }
        clean() {
            na._instance = null, this.airDropclean(), this.dropArmClean(), this.diJiaClean(), 
            Laya.timer.clearAll(this);
        }
        update() {
            Rs.gameStop || (this.airPropUpdate(), this.dropArmUpdate(), this.diJiaUpdate());
        }
        airDropInit() {
            if (Mt.mode != Tt.SKILL_MODE) return;
            this.airDropList = [], this.airModel = [], this.lastAirDropIndexList = [];
            let e = Ts.scene3d.getChildByName(te.AIR_DROP_POINTS);
            this._maxAirDropIndex = e.numChildren, this.startAirDropTime = 1e3 * (10 * Math.random() + 10), 
            console.log("初始空投出现时间", Math.floor(this.startAirDropTime / 1e3));
        }
        createAirDrop(e) {
            if (this.airDropList.length > sa) return void console.log("已经存在,", sa, "，个空投，不再创建");
            let t = Te.createAirDrop();
            Ts.scene3d.addChild(t);
            let i = t.addComponent(Di);
            this.airModel.push(t);
            let a = new Zi(this.getAirDropPos(e), i.renderEventId, e);
            this.airDropList.push(a), a.setActive(), this.lastAirDropIndexList || (this.lastAirDropIndexList = []), 
            this.lastAirDropIndexList.push(e);
        }
        getAirDropPos(e) {
            let t = Ts.scene3d.getChildByName(te.AIR_DROP_POINTS);
            return e > t.numChildren ? (console.log("当前索引超出指定范围", e), t.getChildAt(0).transform.position.clone()) : t.getChildAt(e).transform.position.clone();
        }
        airPropUpdate() {
            if (Mt.mode == Tt.SKILL_MODE) {
                for (let e = 0; e < this.airDropList.length; e++) {
                    this.airDropList[e].update();
                }
                this.startAirDropTime > 0 && (this.startAirDropTime -= Laya.timer.delta, this.startAirDropTime <= 0 && (this.createAirDrop(0), 
                this.createAirDrop(this.getRandAirDropIndex())));
            }
        }
        airDropclean() {
            if (Mt.mode == Tt.SKILL_MODE) {
                if (this.airDropList) for (let e = 0; e < this.airDropList.length; e++) {
                    this.airDropList[e].clean();
                }
                if (this.airModel) for (let e = 0; e < this.airModel.length; e++) {
                    const t = this.airModel[e];
                    t.removeSelf(), t.destroy();
                }
                this.airModel = null, this.airDropList = null, this.lastAirDropIndexList = null;
            }
        }
        get maxAirDropIndex() {
            return this._maxAirDropIndex;
        }
        getRandAirDropIndex() {
            let e = [];
            for (let t = 0; t < this.maxAirDropIndex; t++) e.push(t);
            for (let t = 0; t < this.airDropList.length; t++) {
                const i = this.airDropList[t];
                e.indexOf(i.index) > -1 && e.splice(e.indexOf(i.index), 1);
            }
            for (let t = 0; t < this.lastAirDropIndexList.length; t++) {
                const i = this.lastAirDropIndexList[t];
                e.indexOf(i) > -1 && e.splice(e.indexOf(i), 1);
            }
            let t = Math.floor(Math.random() * e.length);
            return this.lastAirDropIndexList.length > this.airDropList.length && this.lastAirDropIndexList.shift(), 
            this.lastAirDropIndexList.push(e[t]), console.log(e), e[t];
        }
        createDropArm(e, t, i = 500) {
            if (null == this.dropArmList) return;
            let a;
            for (let e = 0; e < this.dropArmList.length; e++) {
                const t = this.dropArmList[e];
                if (!t.isActive) {
                    a = t;
                    break;
                }
            }
            if (a) return void a.init(t, e, i);
            let s = new Laya.Sprite3D();
            this.dropArmModel.push(s), Ts.scene3d.addChild(s);
            let n = s.addComponent(Ni);
            (a = new aa(t, n.renderEventId)).init(t, e, i), this.dropArmList.push(a);
        }
        dropArmUpdate() {
            if (null != this.dropArmList) for (let e = 0; e < this.dropArmList.length; e++) {
                this.dropArmList[e].update();
            }
        }
        dropArmInit() {
            Mt.mode == Tt.SKILL_MODE && (this.dropArmModel = [], this.dropArmList = []);
        }
        dropArmClean() {
            if (this.dropArmList) for (let e = 0; e < this.dropArmList.length; e++) {
                this.dropArmList[e].clean();
            }
            if (this.dropArmModel) for (let e = 0; e < this.dropArmModel.length; e++) {
                const t = this.dropArmModel[e];
                t.removeSelf(), t.destroy();
            }
            this.dropArmModel = null, this.dropArmList = null;
        }
        diJiaInit() {
            if (Mt.mode != Tt.SKILL_MODE) return;
            let e = Math.floor(Math.random() * Gt.diJiaList.length);
            console.log("第", e, "坐雕像");
            let t = Gt.diJiaList[e];
            this.diJiaCtrl = new $i(t.transform.position, t.id, t);
        }
        diJiaUpdate() {
            this.diJiaCtrl && this.diJiaCtrl.update();
        }
        diJiaClean() {
            this.diJiaCtrl && this.diJiaCtrl.clean(), this.diJiaCtrl = null;
        }
    }
    var oa;
    !function(e) {
        e.NORMAL = "NORMAL", e.CHOOSE = "CHOOSE", e.NONE = "NONE", e.ADD_ARM = "ADDARM";
    }(oa || (oa = {}));
    class ra extends T.view.game.GameArmItemUI {
        constructor() {
            super(), this.myIndex = 0, this.myView = null;
        }
        onAwake() {
            this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnTouch);
        }
        onDestroy() {
            this.imgFrame = null, this.imgIcon = null, this.imgTrue = null, this.txtData = null, 
            L.unregisterByEventId(w.REFRESH_MAIN_ARM);
        }
        onBtnTouch() {
            if (this.dataSource.state != oa.NONE) if (this.dataSource.state != oa.ADD_ARM) {
                if (Rs.playerLogicalBaseLayer) {
                    if (Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isThrowing) return;
                    if (Rs.playerLogicalBaseLayer.isOpenMioing) return;
                    Rs.playerLogicalBaseLayer.setIsTouchAttack = !1;
                }
                this.myView.onArmSelect(this.myIndex);
            } else {
                if (!q.getTouch()) return;
                j.setEvent(() => {
                    let e = this.myView.listAddArm.dataSource, t = {
                        state: oa.NONE
                    };
                    e.push(t), this.myView.nonoArmCount += 1, this.myView.addArmCount += 1, 2 == this.myView.addArmCount && e.splice(0, 1), 
                    this.myView.listAddArm.dataSource = e, this.myView.listAddArm.refresh(), this.myView.setListAddArmWight();
                }, () => {}, t.ADD_ARM);
            }
        }
        setView(e, t) {
            return this.myView = t, this.boxAdd.visible = !1, this.dataSource.state == oa.NONE ? (this.imgIcon.skin = "", 
            this.imgTrue.visible = !1, this.txtAll.visible = !1, void (this.txtData.visible = !1)) : this.dataSource.state == oa.ADD_ARM ? (this.imgIcon.skin = "", 
            this.imgTrue.visible = !1, this.txtAll.visible = !1, this.txtData.visible = !1, 
            void (this.boxAdd.visible = !0)) : (this.myIndex = e, this.imgIcon.skin = this.dataSource.icon, 
            void this.setState(this.dataSource.state));
        }
        setState(e) {
            e == oa.CHOOSE ? this.imgTrue.visible = !0 : this.imgTrue.visible = !1, this.txtData.visible = !0, 
            this.txtAll.visible = !0, this.txtData.text = this.dataSource.magazineBullet.toString(), 
            this.txtAll.text = "/" + this.dataSource.bullets.toString(), this.dataSource.type != Kr.KNIFE && this.dataSource.type != Kr.MAGIC || (this.txtAll.visible = !1, 
            this.txtData.text = "1"), this.dataSource.type == Kr.BOMB && (this.txtAll.visible = !1, 
            this.txtData.text = "1");
        }
    }
    class la extends T.view.gameAir.GameAirCrazyViewUI {
        constructor(e) {
            super(), this.time = 360, this.isDone = !1, this.cb = null, this.id = 1, this.percent = 0, 
            this.target = 1, this.isDie = !1, this.name = "GameAirCrazyView", this.cb = e.cb, 
            this.id = e.id, this.width = this.stage.width, this.height = this.stage.height, 
            this.fullPercentWidth = this.imgProgress.width, this.target = .5 * Math.random() + .5, 
            hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock();
        }
        onAwake() {
            this.ani1.play(0, !1), this.ani2.play(0, !0), this.init(), this.setBtnEvent();
        }
        onDestroy() {}
        onTap() {
            q.getTouch(1) && !this.isDie && (this.percent += .15, this.percent >= this.target && (this.percent > 1 && (this.percent = 1), 
            this.isDie = !0, this.get()));
        }
        init() {
            this.imgIcon.skin = A.getDataByKey(this.id).icon, this.txtName.text = A.getDataByKey(this.id).name, 
            this.timer.loop(1, this, this.update);
        }
        update() {
            if (this.isDie || (this.percent -= 3e-4 * Laya.timer.delta), this.percent < 0 && (this.percent = 0), 
            this.imgProgress.width = this.fullPercentWidth * this.percent, 0 == this.time) return this.back(), 
            void this.timer.clear(this, this.update);
            this.txtTime.text = _t.parseTimeMS(this.time), this.time--;
        }
        setBtnEvent() {
            this.btnGet.on(Laya.Event.CLICK, this, this.onTap);
        }
        onBtnGet() {
            if (!q.getTouch()) return;
            let e = this;
            Rs.gameStop = !0, this.timer.pause(), j.setEvent(function() {
                e.timer.resume(), e.get();
            }, function() {
                e.timer.resume(), Rs.gameStop = !1;
            }, t.GAMEAIR);
        }
        back() {
            this.isDone || (this.timer.resume(), this.isDone = !0, Ts.isShowRevivieCrazy = !0, 
            Rs.gameStop = !1, Laya.Tween.to(this.boxAll, {
                scaleX: 1.1,
                scaleY: 1.1
            }, 120, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this.boxAll, {
                    scaleX: 0,
                    scaleY: 0
                }, 80, null, Laya.Handler.create(this, () => {
                    this.destroy();
                }));
            })));
        }
        get() {
            this.isDone || (this.timer.resume(), this.isDone = !0, hl.platform != v.WEB && hl.platform != v.WEB_4399 || (Ts.isShowRevivieCrazy = !1), 
            Rs.gameStop = !1, this.cb && this.cb(), Laya.Tween.to(this.boxAll, {
                scaleX: 1.1,
                scaleY: 1.1
            }, 120, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this.boxAll, {
                    scaleX: 0,
                    scaleY: 0
                }, 80, null, Laya.Handler.create(this, () => {
                    this.destroy();
                }));
            })), Oi.showNotificationClick("恭喜试用"));
        }
    }
    class ha extends T.view.gameAir.GameAirViewUI {
        constructor(e) {
            super(), this.time = 360, this.isDone = !1, this.cb = null, this.id = 1, this.name = "GameAirView", 
            this.cb = e.cb, this.id = e.id, this.width = this.stage.width, this.height = this.stage.height, 
            hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock();
        }
        onAwake() {
            this.init(), this.setBtnEvent();
        }
        onDestroy() {
            if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                Bt.getFunctionViewCtrl(Er.GAME).onBtnDown(!0);
            }
            this.timer.clearAll(this);
        }
        init() {
            this.uiPlatformConfig(), Mt.mode == Tt.SKILL_MODE ? (this.imgIcon.skin = Se.getDataByKey(this.id).icon, 
            this.txtName.text = Se.getDataByKey(this.id).name) : (this.imgIcon.skin = A.getDataByKey(this.id).icon, 
            this.txtName.text = A.getDataByKey(this.id).name), this.timer.once(2e3, this, function() {
                this.on(Laya.Event.CLICK, this, this.onBtnStage);
            }), this.timer.loop(1, this, this.update), tl.getInstance().isBannerTouch() && hl.platform == v.WX && !hl.isZsCtrl && q.delayShowButton(this.btnBack, 2e3);
        }
        onBtnStage(e) {
            this.btnGet.hitTestPoint(e.stageX, e.stageY) || this.back();
        }
        update() {
            if (0 == this.time) return this.back(), void this.timer.clear(this, this.update);
            this.txtTime.text = _t.parseTimeMS(this.time), this.time--, this.imgPro.width = 370 * this.time / 360;
        }
        setBtnEvent() {
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnClose), this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), 
            this.btnGet.addComponent($), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        stageUp() {
            this.back();
        }
        onBtnClose() {
            q.getTouch() && this.back();
        }
        onBtnGet() {
            if (!q.getTouch()) return;
            let e = this;
            Rs.gameStop = !0, this.timer.pause(), j.setEvent(function() {
                e.timer.resume(), e.get();
            }, function() {
                e.timer.resume(), Rs.gameStop = !1;
            }, t.GAMEAIR);
        }
        back() {
            this.isDone || (this.timer.resume(), this.isDone = !0, Rs.gameStop = !1, Ts.isShowRevivieCrazy = !0, 
            Laya.Tween.to(this.boxAll, {
                scaleX: 1.1,
                scaleY: 1.1
            }, 120, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this.boxAll, {
                    scaleX: 0,
                    scaleY: 0
                }, 80, null, Laya.Handler.create(this, () => {
                    this.destroy();
                }));
            })));
        }
        get() {
            this.isDone || (this.timer.resume(), this.isDone = !0, Rs.gameStop = !1, this.cb && this.cb(), 
            Laya.Tween.to(this.boxAll, {
                scaleX: 1.1,
                scaleY: 1.1
            }, 120, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this.boxAll, {
                    scaleX: 0,
                    scaleY: 0
                }, 80, null, Laya.Handler.create(this, () => {
                    this.destroy();
                }));
            })));
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnGet.getChildAt(0),
                type: 1
            } ]), hl.platform != v.TT && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.btnGet.x = 235, 
            this.btnNo.visible = !0, this.btnBack.visible = !1);
        }
    }
    class ca {
        constructor(e, t, i = !0, a = !1) {
            this.logic = null, this.interval = 0, this.speed = 0, this.hit = 0, this.attackSound = "", 
            this.magazineBullet = 0, this.bullets = 0, this.bulletChangeTimer = 0, this.type = null, 
            this.attackDis = 0, this.name = "", this.icon = "", this.recoilForce = [], this.firestarter = "", 
            this.beatEffect = "", this.ballistic = "", this.bullethole = "", this.reloadsound = "", 
            this.isCanOpMirror = 0, this.curMagazineBullet = 0, this.curBullets = 0, this.isGetArmData = !1, 
            this.isWaitingRescue = !1, this.isOtherArm = !1, this.isInfinite = !1, this.id = 1, 
            this.headHit = 0, this.limbHit = 0, this.isGetArmData = i, this.logic = e, this.isOtherArm = a, 
            this.init(t);
        }
        init(e) {
            this.isOtherArm ? this.curBaseData = Se.getDataByKey(e) : this.curBaseData = this.isGetArmData ? A.getDataByKey(e) : _e.getDataByKey(e), 
            this.curBaseData.id == Gr.PROP_BOMB_ID && 1 == tl.getInstance().getDragonBoatBombState() && (this.curBaseData.objName = "8002", 
            this.curBaseData.icon = "sub1/equip/prop/3.png"), this.interval = this.curBaseData.interval, 
            this.speed = this.curBaseData.interval, this.hit = this.curBaseData.hit, this.id = this.curBaseData.id, 
            this.attackSound = ml.ATTACKSOUNDROOT + this.curBaseData.attackSound, this.magazineBullet = this.curBaseData.magazineBullet, 
            this.bullets = this.curBaseData.bullets, this.bulletChangeTimer = this.curBaseData.bulletChangeTimer, 
            this.type = this.curBaseData.type, this.attackDis = this.curBaseData.attackDis, 
            this.isOtherArm && (this.attackDis = this.curBaseData.range), this.name = this.curBaseData.name, 
            this.icon = this.curBaseData.icon, this.recoilForce = this.curBaseData.recoilForce, 
            this.firestarter = this.curBaseData.firestarter, this.beatEffect = this.curBaseData.beatEffect, 
            this.ballistic = this.curBaseData.ballistic, this.bullethole = this.curBaseData.bullethole, 
            this.reloadsound = ml.ATTACKSOUNDROOT + this.curBaseData.reloadsound, this.isCanOpMirror = this.curBaseData.isCanOpMirror, 
            this.curMagazineBullet = this.magazineBullet, this.curBullets = this.bullets, this.headHit = this.curBaseData.headHit ? this.curBaseData.headHit : 0, 
            this.limbHit = this.curBaseData.limbHit ? this.curBaseData.limbHit : 0, tl.getInstance().isNew && Ts.gameNum <= 2 && (this.isInfinite = !0);
        }
        getID() {
            return this.curBaseData.id;
        }
        getType() {
            return this.type;
        }
        getInterval() {
            return this.interval;
        }
        getSpeed() {
            return this.speed;
        }
        getHit() {
            return this.hit;
        }
        getAttackSound() {
            return this.attackSound;
        }
        getAttackDis() {
            return this.attackDis ? this.attackDis : 9;
        }
        clearArm() {
            if (0 != this.logic.getPresentationBaseLayer().getFireEffect().length) for (let e = 0; e < this.logic.getPresentationBaseLayer().getFireEffect().length; e++) {
                const t = this.logic.getPresentationBaseLayer().getFireEffect()[e];
                Ri.recycleEffect(t);
            }
            let e = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "buqiang"), t = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "shouqiang"), i = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "dao"), a = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "shouliudan");
            e.destroyChildren(), t.destroyChildren(), i.destroyChildren(), a.destroyChildren();
        }
        switchArm() {
            if (0 != this.logic.getPresentationBaseLayer().getFireEffect().length) for (let e = 0; e < this.logic.getPresentationBaseLayer().getFireEffect().length; e++) {
                const t = this.logic.getPresentationBaseLayer().getFireEffect()[e];
                Ri.recycleEffect(t);
            }
            let e, t, i = this.curBaseData.objName, a = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "buqiang"), s = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "shouqiang"), n = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "dao"), o = q.findChildByName(this.logic.getPresentationBaseLayer().getModel(), "shouliudan");
            if (a.destroyChildren(), s.destroyChildren(), n.destroyChildren(), o.destroyChildren(), 
            e = this.isOtherArm ? xe.getRes(ul.WEAPON_OTHER_PREFEB).getChildByName(i) : xe.getRes(ul.WEAPON_PREFEB).getChildByName(i), 
            (t = 2 == this.curBaseData.type || this.curBaseData.type == Kr.MAGIC ? Laya.Sprite3D.instantiate(e, n) : 8 == this.curBaseData.type ? Laya.Sprite3D.instantiate(e, o) : this.curBaseData.type == Kr.HAND_GUN ? Laya.Sprite3D.instantiate(e, s) : Laya.Sprite3D.instantiate(e, a)).transform.localPosition = new Laya.Vector3(), 
            t.transform.localRotationEuler = new Laya.Vector3(), this.logic.getPresentationBaseLayer().muzzleTran = [], 
            2 != this.type && 8 != this.type) {
                let e = [];
                q.getAllChildrenByName(t, "kou", e);
                for (let t = 0; t < e.length; t++) {
                    const i = e[t];
                    this.logic.getPresentationBaseLayer().muzzleTran[t] = i.transform;
                }
            }
            if (this.logic.getPresentationBaseLayer().perAttackTime = this.getInterval(), this.isOtherArm && this.id == Gr.FLY_GUN || (this.anim = t.getComponent(Laya.Animator)), 
            this.anim && (this.anim.speed = 0), this.logic.getIsMySelf()) {
                let e = Bt.getFunctionViewCtrl(Er.GAME);
                e && e.onlySniperClose();
            }
            return t;
        }
        getMagazineBullet() {
            return this.magazineBullet;
        }
        getBullets() {
            return this.bullets;
        }
        getBulletChangeTimer() {
            return this.bulletChangeTimer;
        }
        getArmName() {
            return this.name;
        }
        getIcon() {
            return this.icon;
        }
        getRecoilForce() {
            return this.recoilForce;
        }
        getFirestarter() {
            return this.firestarter;
        }
        getBallistic() {
            return this.ballistic;
        }
        getBeatEffect() {
            return this.beatEffect;
        }
        getBullethole() {
            return this.bullethole;
        }
        getReloadsound() {
            return this.reloadsound;
        }
        getIsCanOpMirror() {
            return this.isCanOpMirror;
        }
        clean() {
            console.log("清除装备数据"), this.curBaseData = null, this.interval = null, this.speed = null, 
            this.hit = null, this.attackSound = null, this.magazineBullet = null, this.bullets = null, 
            this.bulletChangeTimer = null, this.type = null, this.name = null, this.icon = null, 
            this.recoilForce = null, this.firestarter = null, this.ballistic = null, this.bullethole = null, 
            this.reloadsound = null, this.isCanOpMirror = null, this.curMagazineBullet = null, 
            this.curBullets = null, this.isWaitingRescue = null;
        }
    }
    var da = Laya.Vector3, ga = Laya.Matrix4x4, ua = Laya.BoundBox;
    class ma extends Laya.Script3D {
        constructor() {
            super(...arguments), this.vecDir = new da(), this.vecTarget = new da(), this.vecClamp = new da(), 
            this.vecClose = new da(), this.vecOrigin = new da(), this._isGrounded = !0, this.yVel = 0, 
            this.isResetYVel = !1, this.stepHeight = 0, this.gravity = 9, this.fowardVel = 1;
        }
        onAwake() {
            let e = this.owner;
            this.tran = e.transform, ol.isIOS() && (ma.fixDetal = 32);
        }
        move(e, t) {
            this.vecDir.x = e, this.vecDir.z = t;
        }
        stop() {
            this.vecDir.x = 0, this.vecDir.y = 0, this.vecDir.z = 0;
        }
        jump(e = 5) {
            0 == this.yVel && (hl.platform != v.TT && hl.platform != v.WX || !ol.isIOS() ? this.yVel = e : this.yVel = .75 * e);
        }
        resetPos(e) {
            this.tran.position = e, this.vecDir.setValue(0, 0, 0), this.vecOrigin.setValue(0, 0, 0), 
            this.vecTarget.setValue(0, 0, 0), this.yVel = 0, this.isResetYVel = !1;
        }
        onUpdate() {
            this.tran.position.cloneTo(this.vecOrigin);
            let e = this.vecOrigin.y;
            this.vecOrigin.y += .5, this.vecTarget.x = this.vecOrigin.x + this.vecDir.x * this.fowardVel * Laya.timer.delta * .01, 
            this.vecTarget.y = this.vecOrigin.y, this.vecTarget.z = this.vecOrigin.z + this.vecDir.z * this.fowardVel * Laya.timer.delta * .01;
            let t = [], i = fe.clamps(this.vecOrigin, this.vecTarget, this.vecClamp, this.vecClose, t);
            if (this.vecClamp.y -= .5, this.vecClamp.cloneTo(this.vecTarget), this.vecClose.cloneTo(this.vecOrigin), 
            i) {
                t.push(i.onlyID);
                fe.clamps(this.vecOrigin, this.vecTarget, this.vecClamp, this.vecClose, t);
            }
            this.vecClamp.cloneTo(this.vecTarget), this.vecClamp.cloneTo(this.vecOrigin), this.vecOrigin.y = e + .5, 
            this.vecTarget.y += this.yVel * ma.fixDetal * .005, this.isResetYVel && this.vecTarget.y < this.vecClamp.y && (this.yVel = 0, 
            this.isResetYVel = !1);
            let a = ma.isCollisionFloor(this.vecOrigin, this.vecTarget);
            a.isCollise ? (this._isGrounded = !0, this.isResetYVel = !0, this.yVel = 0) : (this.yVel -= this.gravity * ma.fixDetal * .0025, 
            this._isGrounded = !1);
            let s = this.tran.position;
            this.vecClamp.cloneTo(s), i && i.boundingBox.max.y - this.vecClose.y <= this.stepHeight ? s.y = e + .01 * ma.fixDetal : s.y = a.y, 
            this.tran.position = s;
        }
        static isCollisionFloor(e, t) {
            if (t.y > e.y) return {
                isCollise: !1,
                y: t.y
            };
            e.cloneTo(this._ray1.origin), t.y -= .1;
            let i = 1, a = Math.abs(e.y - t.y);
            a > i && (i = a);
            let s = [];
            fe.getOCTree().getCollidingWithRayWithLayer(this._ray1, s, i, -1);
            let n, o, r = 16777215;
            for (let e = 0, t = s.length; e < t; e++) {
                let t = !1;
                if (-1 != s[e].layer) {
                    t = !0;
                    break;
                }
                if (t) continue;
                let i = s[e].orientedBoundBox;
                da.scale(i.extents, -1, this._tempV31), i.transformation.invert(this._tempM0), da.TransformNormal(this._ray1.direction, this._tempM0, this._ray2.direction), 
                da.transformCoordinate(this._ray1.origin, this._tempM0, this._ray2.origin), this._boxBound1.min = this._tempV31, 
                this._boxBound1.max = i.extents;
                let l = Laya.CollisionUtils.intersectsRayAndBoxRD(this._ray2, this._boxBound1);
                da.scale(this._ray2.direction, l, this._tempV32), da.add(this._ray2.origin, this._tempV32, this._tempV32);
                let h = !1;
                Math.abs(this._tempV32.x - this._boxBound1.min.x) < 1e-5 || Math.abs(this._tempV32.x - this._boxBound1.max.x) < 1e-5 || Math.abs(this._tempV32.y - this._boxBound1.min.y) < 1e-5 || (Math.abs(this._tempV32.y - this._boxBound1.max.y) < 1e-5 ? h = !0 : Math.abs(this._tempV32.z - this._boxBound1.min.z) < 1e-5 || Math.abs(this._tempV32.z - this._boxBound1.max.z)), 
                l < r && l >= 0 && a >= l && h && (r = l, this._ray2.direction.cloneTo(this._ray3.direction), 
                this._ray2.origin.cloneTo(this._ray3.origin), this._boxBound1.cloneTo(this._boxBound2), 
                this._tempM0.cloneTo(this._tempM1), n = i, o = s[e]);
            }
            return r < 16777215 ? (da.scale(this._ray3.direction, r, this._tempV35), da.add(this._ray3.origin, this._tempV35, this._tempV35), 
            da.transformV3ToV3(this._tempV35, n.transformation, this._tempV35), a = Math.abs(this._tempV35.y - e.y), 
            Math.abs(r - a) > 1e-4 ? {
                isCollise: !1,
                y: t.y
            } : {
                isCollise: !0,
                y: this._tempV35.y
            }) : {
                isCollise: !1,
                y: t.y
            };
        }
        get isGrounded() {
            return this._isGrounded;
        }
    }
    ma.fixDetal = 16, ma._tempV31 = new da(), ma._tempV32 = new da(), ma._tempV33 = new da(), 
    ma._tempV34 = new da(), ma._tempV35 = new da(), ma._tempM0 = new ga(), ma._tempM1 = new ga(), 
    ma._boxBound1 = new ua(new da(), new da()), ma._boxBound2 = new ua(new da(), new da()), 
    ma._ray1 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3(0, -1, 0)), ma._ray2 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3()), 
    ma._ray3 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3());
    var pa = Laya.Vector3, ya = Laya.Matrix4x4, Ia = Laya.BoundBox;
    class fa extends Laya.Script3D {
        constructor() {
            super(...arguments), this.vecForwardDir = new pa(), this.vecTarget = new pa(), this.vecClamp = new pa(), 
            this.vecClose = new pa(), this.vecOrigin = new pa(), this._isGrounded = !0, this.yVel = 0, 
            this.xzVel = 0, this.isResetYVel = !1, this.gravity = 9, this.friction = 1;
        }
        onAwake() {
            let e = this.owner;
            this.tran = e.transform;
        }
        setVelocityDir(e) {
            this.yVel = e.y, this.vecForwardDir.x = e.x, this.vecForwardDir.z = e.z, this.xzVel = pa.scalarLength(this.vecForwardDir), 
            this.vecForwardDir.x /= this.xzVel, this.vecForwardDir.z /= this.xzVel, this.yVel = e.y;
        }
        getXZVel() {
            return this.xzVel;
        }
        onUpdate() {
            if (0 == this.vecForwardDir.x && 0 == this.vecForwardDir.z && this._isGrounded) return;
            this.tran.position.cloneTo(this.vecOrigin);
            let e = this.vecOrigin.y;
            this.vecOrigin.y += .01, this.vecTarget.x = this.vecOrigin.x + this.vecForwardDir.x * this.xzVel * Laya.timer.delta * .01, 
            this.vecTarget.y = this.vecOrigin.y, this.vecTarget.z = this.vecOrigin.z + this.vecForwardDir.z * this.xzVel * Laya.timer.delta * .01;
            let t = [], i = fe.clamps(this.vecOrigin, this.vecTarget, this.vecClamp, this.vecClose, t);
            if (this.vecClamp.cloneTo(this.vecTarget), this.vecClose.cloneTo(this.vecOrigin), 
            i) {
                t.push(i.onlyID);
                fe.clamps(this.vecOrigin, this.vecTarget, this.vecClamp, this.vecClose, t);
            }
            this.vecClamp.cloneTo(this.vecTarget), this.vecClamp.cloneTo(this.vecOrigin), this.vecOrigin.y = e + .5, 
            this.vecTarget.y += this.yVel * Laya.timer.delta * .005, this.isResetYVel && this.vecTarget.y < this.vecClamp.y && (this.yVel = 0, 
            this.isResetYVel = !1);
            let a = fe.isCollisionFloor(this.vecOrigin, this.vecTarget);
            a.isCollise ? (this._isGrounded = !0, this.isResetYVel = !0, this.yVel = 0, this.xzVel -= this.friction * Laya.timer.delta * .01, 
            this.xzVel <= 0 && (this.vecForwardDir.x = 0, this.vecForwardDir.z = 0)) : this.yVel -= this.gravity * Laya.timer.delta * .0025;
            let s = this.tran.position;
            this.vecClamp.cloneTo(s), s.y = a.y, this.tran.position = s;
        }
    }
    fa._tempV31 = new pa(), fa._tempV32 = new pa(), fa._tempV33 = new pa(), fa._tempV34 = new pa(), 
    fa._tempV35 = new pa(), fa._tempM0 = new ya(), fa._tempM1 = new ya(), fa._boxBound1 = new Ia(new pa(), new pa()), 
    fa._boxBound2 = new Ia(new pa(), new pa()), fa._ray1 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3(0, -1, 0)), 
    fa._ray2 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3()), fa._ray3 = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3());
    var La, wa, ba = Laya.Quaternion, Ea = Laya.Vector3;
    !function(e) {
        e[e.DIE = 0] = "DIE", e[e.LIVE = 1] = "LIVE";
    }(La || (La = {}));
    class Ca {
        clean() {
            this.tran.owner.destroy(), this.vecDir = null, this.vecEnd = null, this.tran = null;
        }
    }
    class va {
        static shot(e, t, i) {
            if (ol.isIOS()) return;
            let a;
            for (let e = 0, t = this.bullet.length; e < t; e++) {
                let t = this.bullet[e];
                if (t.state == La.DIE) {
                    a = t;
                    break;
                }
            }
            if (!a) {
                let e = xe.getRes(ul.EFFECT_PREFEB).getChildByName(te.BULLET).clone();
                Ts.scene3d.addChild(e), (a = new Ca()).tran = e.transform, a.vecDir = new Ea(), 
                a.vecEnd = new Ea(), this.bullet.push(a);
            }
            a.state = La.LIVE, e.cloneTo(a.vecDir), i.cloneTo(a.vecEnd);
            let s = a.tran.position;
            s.x = t.x, s.y = t.y, s.z = t.z, a.tran.position = s;
            let n = a.tran.rotation;
            ba.lookAt(q.Vector3.zero, e, q.Vector3.up, n), n.invert(n), a.tran.localRotation = n;
        }
        static update() {
            for (let e = 0, t = va.bullet.length; e < t; e++) {
                let t = va.bullet[e];
                if (t.state == La.LIVE) {
                    let e = t.tran.position;
                    e.x += t.vecDir.x * Laya.timer.delta * .1, e.y += t.vecDir.y * Laya.timer.delta * .1, 
                    e.z += t.vecDir.z * Laya.timer.delta * .1, va.vecTmp1, Ea.subtract(t.vecEnd, e, va.vecTmp1), 
                    va.vecTmp1.x * t.vecDir.x < 0 && (t.state = La.DIE, e.x = 16777215, e.y = 16777215, 
                    e.z = 16777215), t.tran.position = e;
                }
            }
        }
        static clean() {
            for (let e in this.bullet) this.bullet[e].clean();
            this.bullet = [];
        }
    }
    va.bullet = [], va.vecTmp1 = new Ea();
    class xa {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new xa();
                a.id = i.id, a.name = i.name, a.info = i.info, a.award = i.award, a.awardType = i.awardType, 
                a.taskType = i.taskType, xa.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (xa.cache[e]) return xa.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return xa.cache[this.keys[e]] ? xa.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return xa.cache;
        }
        clear() {
            xa.cache = {};
        }
    }
    xa.cache = {}, xa.keys = [], function(e) {
        e[e.COMPLETE_GAME = 1] = "COMPLETE_GAME", e[e.HEADSHOT = 2] = "HEADSHOT", e[e.KNIFE_KILL = 3] = "KNIFE_KILL", 
        e[e.DAN_UP = 4] = "DAN_UP", e[e.GAME_WIN = 5] = "GAME_WIN", e[e.MODE_KILL = 6] = "MODE_KILL", 
        e[e.SNIPE_KILL = 7] = "SNIPE_KILL";
    }(wa || (wa = {}));
    class Ba {
        static setModelTargetKillSore() {
            if (Mt.mode == Tt.ONEVSONEMODE) this.targetKillSore = 20; else if (Mt.mode == Tt.TWOVSTWOMODE) this.targetKillSore = 30; else if (Mt.mode == Tt.SNIPERMODE) this.targetKillSore = 80; else if (this.targetKillSore = 60, 
            tl.getInstance().getGuide() != Et.FINISH && tl.getInstance().getGuide() != Et.MAX) {
                let e = hl.getNewPlayerKill();
                1 == Ts.gameNum ? this.targetKillSore = e[0] ? e[0] : 25 : 2 == Ts.gameNum ? this.targetKillSore = e[1] ? e[1] : 40 : 3 == Ts.gameNum && (this.targetKillSore = e[2] ? e[2] : 40);
            }
        }
        static getTaskType(e) {
            let t = e.split("_");
            return {
                type: Number(t[0]),
                data: Number(t[1])
            };
        }
        static taskEntry() {
            let e = "";
            return e = Mt.mode == Tt.BIOCHEMISTRY ? Wt.fixedTime + "s内消灭" + ja.getTaskZombieNum() + "只僵尸" : Wt.fixedTime + "s内获取" + this.targetKillSore + "分";
        }
        static completeTask(e) {
            for (let t = 1; t <= 7; t++) Ba.getTaskType(xa.getDataByKey(t).taskType).type == e && tl.getInstance().doTaksByDay(t, 1);
        }
    }
    Ba.targetKillSore = 60, Ba.singleKillScore = 2;
    class Aa extends Laya.UnlitMaterial {
        constructor() {
            super(), this.setShaderName("CustomShader");
        }
        get diffuseTexture() {
            return this._shaderValues.getTexture(Aa.DIFFUSETEXTURE);
        }
        set diffuseTexture(e) {
            this._shaderValues.setTexture(Aa.DIFFUSETEXTURE, e);
        }
        set marginalColor(e) {
            this._shaderValues.setVector3(Aa.MARGINALCOLOR, e);
        }
        set customColor(e) {
            this._shaderValues.setNumber(Aa.CUSTOMCOLOE, e);
        }
    }
    Aa.DIFFUSETEXTURE = Laya.Shader3D.propertyNameToID("u_texture"), Aa.MARGINALCOLOR = Laya.Shader3D.propertyNameToID("u_marginalColor"), 
    Aa.CUSTOMCOLOE = Laya.Shader3D.propertyNameToID("u_custom_Color");
    class _a {
        static sum(e) {
            let t = this.obj, i = 0;
            for (let a in t) i += t[a][e];
            return i;
        }
        static getResult(e) {
            for (var t = 0, i = 0; i < e.length; i++) t += e[i];
            for (i = 0; i < e.length; i++) {
                if (Math.random() * t < e[i]) return i;
                t -= e[i];
            }
        }
    }
    _a.obj = [];
    class Sa extends T.view.game.BuoyUI {
        constructor(e, t) {
            super(), this.perPos = new Laya.Vector4(), this.tran = null, this.logicalBaseLayer = null, 
            this.tempPos2D = new Laya.Vector3(), this.vec2Tmp0 = new Laya.Vector2(), this.vec2Tmp1 = new Laya.Vector2(), 
            this.tran = e, this.logicalBaseLayer = t;
        }
        static create(e, t) {
            let i = new Sa(e, t);
            return this.list.push(i), i;
        }
        static clean() {
            Sa.list = [];
        }
        setTagPos() {
            if (Nt.getCurScene().getViewportPoint(this.tran.position).w >= .1 && Nt.getCurScene().getViewportPoint(this.tran.position).cloneTo(this.perPos), 
            this.visible = !1, this.vec2Tmp0.x = this.perPos.x - .5 * Laya.stage.width, this.vec2Tmp0.y = this.perPos.y - .5 * Laya.stage.height, 
            this.perPos.y >= Laya.stage.height ? (this.perPos.y = Laya.stage.height, this.visible = !0, 
            this.vec2Tmp1.x = 0, this.vec2Tmp1.y = 1) : this.perPos.y <= 0 && (this.perPos.y = 0, 
            this.visible = !0, this.vec2Tmp1.x = 0, this.vec2Tmp1.y = 1), this.perPos.x < 0 ? (this.vec2Tmp1.x = 0, 
            this.vec2Tmp1.y = -1, this.visible = !0, this.perPos.x = -30) : this.perPos.x >= Laya.stage.width - 50 && (this.vec2Tmp1.x = 0, 
            this.vec2Tmp1.y = -1, this.visible = !0, this.perPos.x = Laya.stage.width - 30), 
            this.visible) {
                if (this.perPos.x = this.perPos.x <= Laya.stage.width - this.width + 30 ? this.perPos.x : Laya.stage.width - this.width + 30, 
                this.perPos.y = this.perPos.y <= Laya.stage.height - this.height ? this.perPos.y : Laya.stage.height - this.height, 
                Math.abs(this.buoy.rotation) > 100 && Math.abs(this.buoy.rotation) <= 180 && 0 == this.perPos.y && (this.perPos.y -= 70), 
                this.pos(this.perPos.x, this.perPos.y), this.perPos.x >= Laya.stage.width - this.width && this.y >= Laya.stage.height - this.height) return void (this.buoy.rotation = -40);
                if (this.perPos.x <= 0 && this.y >= Laya.stage.height - this.height) return void (this.buoy.rotation = 40);
                if (this.y < Laya.stage.height - this.height) {
                    let e = q.angle2(this.vec2Tmp1, this.vec2Tmp0);
                    this.buoy.rotation = -e;
                } else {
                    let e = q.angle2(this.vec2Tmp1, this.vec2Tmp0);
                    this.buoy.rotation = -e;
                }
            }
        }
    }
    Sa.list = [];
    class Ta extends T.view.game.DoubleKillItemUI {
        constructor() {
            super(), this.isStart = !1, this.centerX = 0, this.bottom = 128;
        }
        onDestroy() {
            this.imgDouble = null, this.ani1 = null, this.ani2 = null, this.isStart = null;
        }
        onAwake() {}
        start(e) {
            this.isStart || (this.ani1.play(0, !1), this.isStart = !0, this.timer.once(1e3, this, () => {
                this.isStart = !1;
            })), this.update(e);
        }
        close() {
            this.isStart && this.ani2.play(0, !1);
        }
        update(e) {
            let t = this.getChildAt(0);
            console.log("当前阶级:", Rs.playerLogicalBaseLayer.doubleClasses, e), il.playEffect(ml.KILL_DOUBLE_ROOT + Rs.playerLogicalBaseLayer.doubleKill.toString() + ".mp3"), 
            1 == Rs.playerLogicalBaseLayer.doubleClasses ? this.imgDouble.skin = ul.DOUBLE_HIT_UI.CLASS_1 : 2 == Rs.playerLogicalBaseLayer.doubleClasses ? this.imgDouble.skin = ul.DOUBLE_HIT_UI.CLASS_2 : 3 == Rs.playerLogicalBaseLayer.doubleClasses && (this.imgDouble.skin = ul.DOUBLE_HIT_UI.CLASS_3);
            for (let i = 1; i <= 6; i++) {
                let a = t.getChildByName(i.toString());
                a.alpha = i <= e ? 1 : 0;
            }
        }
    }
    class Da {
        static loadFont(e, t, i = "") {
            var a = new Laya.BitmapFont();
            return a.loadFont(e, new Laya.Handler(this, this.onFontLoaded, [ a, t, i ])), a;
        }
        static onFontLoaded(e, t, i) {
            e.setSpaceWidth(10), Laya.Text.registerBitmapFont(i, e), t.wordWrap = !0, t.font = i;
        }
    }
    class Ra extends T.view.game.FloatingbloodItemUI {
        constructor() {
            super(), this.isPlaying = !1, Da.loadFont(ul.FNT.FNT5, this.txtHit);
        }
        onAwake() {
            this.ani1.on(Laya.Event.COMPLETE, this, () => {
                this.isPlaying = !1;
            });
        }
        onDestroy() {
            this.txtHit = null, this.ani1 = null;
        }
        play(e) {
            if (this.isPlaying) return;
            this.txtHit.text = e.toString(), this.isPlaying = !0, this.txtHit.x = -14.5, this.txtHit.y = 61, 
            this.txtHit.alpha = 1;
            const t = this.txtHit.x, i = this.txtHit.y;
            Ae.onlyOneRandomIntOrFloat(0, 1);
            Laya.Tween.to(this.txtHit, {
                x: t + 50,
                y: i - 15
            }, 150, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this.txtHit, {
                    y: i - 60,
                    alpha: 0
                }, 650, null, Laya.Handler.create(this, () => {
                    this.isPlaying = !1;
                }), 100);
            }));
        }
    }
    class Na extends T.view.game.HeadshotUI {
        constructor() {
            super(), this.isStart = !1, this.centerX = 0, this.bottom = 128;
        }
        onAwake() {
            this.baotou.on(Laya.Event.COMPLETE, this, () => {
                this.isStart = !1, this.visible = !1;
            });
        }
        onDestroy() {
            this.baotou = null;
        }
        playAni() {
            this.visible = !0, this.isStart = !0, this.update(), this.baotou.play(0, !1);
        }
        update() {
            let e = this.getChildAt(0);
            hl.platform == v.VIVO ? (console.log("播放爆头音效:", ml.KILL_HEADSHOT), il.playEffect(ml.KILL_HEADSHOT)) : (console.log("播放爆头音效:", ml.KILL_HEADSHOT_ROOT + Rs.playerLogicalBaseLayer.headShotHit.toString() + ".mp3"), 
            il.playEffect(ml.KILL_HEADSHOT_ROOT + Rs.playerLogicalBaseLayer.headShotHit.toString() + ".mp3")), 
            1 == Rs.playerLogicalBaseLayer.doubleClasses ? this.imgHeadShot.skin = ul.HEADSHOT_UI.CLASS_1 : 2 == Rs.playerLogicalBaseLayer.doubleClasses && (this.imgHeadShot.skin = ul.HEADSHOT_UI.CLASS_2);
            for (let t = 1; t <= 6; t++) {
                let i = e.getChildByName(t.toString());
                1 == Rs.playerLogicalBaseLayer.doubleClasses ? i.skin != ul.MARK_UI.PRIMARY && (i.skin = ul.MARK_UI.PRIMARY) : 2 == Rs.playerLogicalBaseLayer.doubleClasses && i.skin != ul.MARK_UI.INTERMEDIATE && (i.skin = ul.MARK_UI.INTERMEDIATE);
            }
            for (let t = 1; t <= 6; t++) {
                let i = e.getChildByName(t.toString());
                t <= Rs.playerLogicalBaseLayer.headShotHit ? i.alpha = 1 : i.alpha = 0;
            }
            if (!hl.getViolenceCtrl()) {
                let e = this.imgHeadShot.skin;
                e = e.replace(".png", "_4399.png"), this.imgHeadShot.skin = e;
            }
        }
    }
    class Ma extends T.view.game.InvincibleProUI {
        constructor() {
            super(), this.visible = !1, this.centerX = 0, this.centerY = 80, this.imgPro.width = 0;
        }
        onAwake() {}
        onDestroy() {
            this.imgPro = null;
        }
        setPro(e) {
            this.visible || (this.visible = !0), this.imgPro.width = e;
        }
        resetCtrl() {
            this.imgPro.width = 0, this.visible = !1;
        }
    }
    class ka extends T.view.game.WaitingforrescueViewUI {
        constructor() {
            super();
        }
    }
    class Oa extends Laya.Script3D {
        constructor(e = null) {
            super(), this.isThrow = !1, this.bombCount = 3e3, this.hit = 60, this.isBomb = !1, 
            this.logic = null, this.isResetGetArm = !1, this.logic = e;
        }
        onUpdate() {
            if (Rs.gameOver || Rs._isWin || !this.logic) this.owner.destroy(); else if (this.isThrow && (this.bombCount -= Ce.gSysTimer.delta, 
            this.isResetGetArm || (this.isResetGetArm = !0, this.logic.getPresentationBaseLayer().createBombModel()), 
            this.bombCount < 0 && !this.isBomb)) {
                this.isBomb = !0;
                let e = this.owner.transform.position.clone();
                il.playEffect(ml.BOMB), Ri.playBombs(e), Rs.bombHit(e, this.hit, this.logic), this.owner.destroy();
            }
        }
        onDestroy() {
            console.log("移除"), this.isThrow = null, this.bombCount = null, this.hit = null;
        }
    }
    var Pa = Laya.Vector3;
    let Va = {
        LEFT: 1,
        RIGHT: 2
    }, Ga = {
        STATIC: 1,
        DYNAMIC: 2
    }, Ua = {
        STATIC: 1,
        DYNAMIC: 2
    }, Fa = {
        HIT: 1,
        EMPTY: 2
    }, Ha = {
        HIT: 1,
        EMPTY: 2
    }, Wa = {
        BOX: "boxRoot",
        BODY: "boxBody",
        HEAD: "boxHead",
        AIM: "boxAim",
        FOOT: "foot"
    };
    class Ya {
        constructor(e, t, i) {
            this.model = null, this.aniCtrl = null, this.logicalBaseLayer = null, this.bombEffectPos = new Laya.Vector3(), 
            this.buoy = null, this.eventId = null, this.characterCtrl = null, this.point = new Laya.Vector2(), 
            this.myHitResult = new le(), this.perAttackTime = 0, this.lastPerAttackTime = 0, 
            this.upperlimbName = null, this.thelegsName = null, this.attackAniAfterOtherAniCount = 0, 
            this.isCanAttackAniAfterPlayOtherAni = !0, this.baseData = {
                tempJump: new Pa(0, 20, 0),
                startPos: new Pa(),
                forwardDir: new Pa(),
                forward: new Pa(),
                crossRide: new Pa(),
                forwardToAngle: new Pa(),
                angleOut: new Pa(),
                targetPos: new Pa(),
                tempFace: new Pa(),
                quaModel: new Laya.Quaternion(),
                curPos: new Laya.Vector3(),
                vecTmp: new Pa()
            }, this.fixedVector3Data = {
                startPos: new ze(),
                targetPos: new ze(),
                vecDir: new ze(),
                vecVel: new ze(),
                nextPos: new ze(),
                points: []
            }, this.isCanShowHitUI = !1, this.isCanShowHitScale = !1, this.boxGhost = null, 
            this.headshotCtrl = null, this.gamingHeadCtrl = null, this.invincibleProCtrl = null, 
            this.invincibleProCount = 3e3, this.invincibleProCountMax = 3e3, this.isCanPlayAttackAni = !1, 
            this.isStartJump = !1, this.isStartPlayAttackAni = !1, this.attackDownCount = 1e3, 
            this._isCollise = !1, this.fireEffect = [], this.fireRecycleCountDown = 50, this.vecShtoPos = new Laya.Vector3(), 
            this.vecShotEndPos = new Laya.Vector3(), this.muzzleTran = [], this.flyUp = .2, 
            this.flyDown = 0, this.isAIStartRandomRotate = !1, this.rotateRange = 0, this.isStartDeviation = !1, 
            this.bearing = null, this.curAngle = 0, this.isStartMoveAttackRandom = !1, this.moveAttackRandPosList = {
                curPos: new Laya.Vector3(),
                target1: new Laya.Vector3(),
                target2: new Laya.Vector3(),
                target1Finish: !1,
                target2Finish: !1,
                tempPos1: new Laya.Vector3(),
                tempPos2: new Laya.Vector3(),
                onceToType: 0,
                out1: new Laya.Vector3(),
                out2: new Laya.Vector3(),
                dis1: new Laya.Vector3(),
                dis2: new Laya.Vector3(),
                isCollideFinish1: !1,
                isCollideFinish2: !1,
                testCollideNum: 0
            }, this.randRotateType = [ Ga.DYNAMIC, Ga.STATIC ], this.randRotateData = [ 1, 99 ], 
            this.randJumpType = [ Ua.DYNAMIC, Ua.STATIC ], this.randJumpData = [ .01, 99.99 ], 
            this.randHitType = [ Fa.HIT, Fa.EMPTY ], this.randHitData = [ 20, 80 ], this.randHeadshotType = [ Ha.HIT, Ha.EMPTY ], 
            this.randHeadshotData = [ 10, 90 ], this.rhgt = new Laya.Vector3(), this.cosValue = 0, 
            this.lifeTran = null, this.lifeParentTran = null, this.doubleKillItemCtrl = null, 
            this.isTouchBomb = !1, this.isThrowBomb = !1, this.gravity = new Laya.Vector3(0, -50, 0), 
            this.mass = 10, this.linearVelocity = new Laya.Vector3(), this.throwTheArmCount = Ae.onlyOneRandomInt(12e3, 2e4), 
            this.floatingBloodList = [], this.waitingforrescueViewCtrl = null, this.waitingCount = 3e4, 
            this.isRescuing = !1, this.rescuingCount = 3e4, this.rescuingSp = null, this.isInterrupt = !1, 
            this.isBehit = !1, this.hitPoint = new Pa(), this.hitPoint1 = new Pa(), this.playTimeTheLegs = 0, 
            this.isCanQH = !0, this.isStartQH = !1, this.enemy = null, this.temVec4 = new Laya.Vector4(), 
            this.temVec3 = new Laya.Vector3(), this.albedoColor1 = new Laya.Vector4(.9905, .0887, .0887, 1), 
            this.albedoColor2 = new Laya.Vector4(1, 1, 1, 1), this.lastPoint = new Laya.Vector3(), 
            this.isThrowing = !1, this.isShowBulletInsufficient = !1, this.separation = null, 
            this.separationAniCtrl = null, this.spriteHole = null, this.isJump = !1, this.outs = [], 
            this.cubeList = [], this.shieldSp = null, this.isFist = !0, this.otherArmSp = null, 
            this.tst = !1, this.lineSprite1 = null, this.lineSprite2 = null, this.mySecondHitResult = new le(), 
            this.isFootSound = !1, this.footSoundIndex = 0, this.eventId = e, this.model = t, 
            this.logicalBaseLayer = i, this.getAniCtrl(), this.registerEvent(), this.registerCharacterCtrl(), 
            this.createRay(), this.setAttackDownCount(), this.initNavNode(), this.initRotate(), 
            this.addLifeTran(), this.model.transform.localRotationEuler.cloneTo(this.logicalBaseLayer.eulerAngle);
            let a = Zt.getDataByKey(jt.curDifficult ? jt.curDifficult : Kt.NORMAL), s = 0;
            s = this.logicalBaseLayer.getRoleType() == Mr.TYPE_0 ? a.teamCheckAngle : a.enemyCheckAngle, 
            this.cosValue = Math.cos(180 * Math.PI / s), Laya.timer.loop(Laya.timer.delta, this, this.update), 
            this.logicalBaseLayer.eulerAngle.y = this.getOnceChild().transform.localRotationEulerY, 
            this.logicalBaseLayer.isZombie && (this.perAttackTime = 3800), this.startGameCtrl(), 
            this.spriteHole = q.findChildByName(this.model, "halo"), this.spriteHole && (this.spriteHole.active = !0, 
            this.spriteHole.transform.localPositionY = .02), hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && ol.isIOS();
            let n = q.findChildByName(this.model, "Helmet");
            if (n && this.logicalBaseLayer.getIsMySelf() && (n.active = !1), !this.logicalBaseLayer.isZombie && this.logicalBaseLayer.getRoleType() == Mr.TYPE_1) {
                q.findChildByName(this.model, "jiaobiao").active = !0;
            }
            if (this.logicalBaseLayer.getIsMySelf() || (this.model.transform.localScale = new Laya.Vector3(1.14, 1.14, 1.14)), 
            this.initRayCollider(), Nt.getCurScene().isShowUnder || this.logicalBaseLayer.getIsMySelf() && (this.model.getChildAt(0).transform.localRotationEuler = new Laya.Vector3(0, -180, 0), 
            this.logicalBaseLayer.eulerAngle.y = this.getOnceChild().transform.localRotationEulerY), 
            !this.logicalBaseLayer.getIsMySelf() && Mt.mode == Tt.SKILL_MODE) {
                this.imgPoint = new Laya.Image(), this.logicalBaseLayer.getRoleType() == Mr.TYPE_0 ? this.imgPoint.skin = "sub1/ui/game/img_64.png" : this.imgPoint.skin = "sub1/ui/game/img_63.png", 
                this.imgPoint.anchorX = .5, this.imgPoint.anchorY = .5;
                let e = Bt.getFunctionViewCtrl(Er.GAME);
                e && e.imgMap.addChild(this.imgPoint);
            }
        }
        getSeparation() {
            hl.isRefinedVersion && (this.logicalBaseLayer.isZombie || (this.separation = q.findChildByName(this.model, "wudi"), 
            this.separation && (this.separation.active = !1), console.log("分身：", this.separation), 
            this.getSeparationAniCtrl()));
        }
        activeSeparation(e) {
            this.logicalBaseLayer.isZombie || hl.isRefinedVersion && this.separation && (this.separation.active = e);
        }
        setShader() {
            if (hl.isRefinedVersion) return;
            if (this.logicalBaseLayer.isZombie) return;
            this.logicalBaseLayer.initShader();
            let e = q.findChildByName(this.model, "npc_body"), t = q.findChildByName(this.model, "npc_head");
            if (e) {
                let t = e.skinnedMeshRenderer.sharedMaterial.albedoTexture;
                var i = new Aa();
                i.diffuseTexture = t, e.skinnedMeshRenderer.sharedMaterial = i;
            }
            if (t) {
                let e = t.skinnedMeshRenderer.sharedMaterial.albedoTexture;
                var a = new Aa();
                a.diffuseTexture = e, t.skinnedMeshRenderer.sharedMaterial = a;
            }
        }
        addOtherArm() {
            if (!this.otherArmSp) {
                this.otherArmSp = Ri.playOtherArm({
                    parent: this.model
                }), this.otherArmSp.transform.localPositionY = 1, this.otherArmSp.transform.localPositionX = 0, 
                this.otherArmSp.transform.localPositionZ = 0, this.otherArmSp.getChildAt(0).particleSystem.startSizeConstant = 1;
            }
        }
        setCustomColor(e = 0) {
            if (hl.isRefinedVersion) return;
            if (this.logicalBaseLayer.isZombie) return;
            let t = q.findChildByName(this.model, "npc_body"), i = q.findChildByName(this.model, "npc_head");
            t && (t.skinnedMeshRenderer.sharedMaterial.customColor = e), i && (i.skinnedMeshRenderer.sharedMaterial.customColor = e);
        }
        startGameCtrl() {
            if (Mt.mode == Tt.ONEVSONEMODE) {
                const e = this.model.getChildAt(0).transform.localPositionY;
                this.model.getChildAt(0).transform.localPositionY += 3, Laya.Tween.to(this.model.getChildAt(0).transform, {
                    localPositionY: e
                }, 150, null, Laya.Handler.create(this, () => {}), 300);
            }
        }
        addLifeTran() {
            this.logicalBaseLayer.isZombie && (this.lifeTran = q.findChildByName(this.model, "life").getChildByName("03").transform, 
            this.lifeParentTran = q.findChildByName(this.model, "life").transform, this.lifeParentTran.localPositionY -= 1);
        }
        scaleLifeTran() {
            if (this.lifeTran) {
                let e = this.logicalBaseLayer.getHP(), t = 0;
                e > 0 && (t = Math.floor(e / this.logicalBaseLayer.getMaxHP() * 100) / 100), t != this.lifeTran.localScaleX && (this.lifeTran.localScaleX = t);
            }
        }
        initRotate() {}
        registerEvent() {
            L.register(w.PLAY_UPPER_LIMB_ANI + this.eventId, this.playUpperlimbAni, this), L.register(w.PLAY_THE_LEGS_ANI + this.eventId, this.playThelegsAni, this), 
            L.register(w.PLAY_EFFECT + this.eventId, this.playEffect, this), L.register(w.PLAY_SOUND + this.eventId, this.playSound, this);
        }
        unregisterEvent() {
            L.unregisterByEventId(w.PLAY_UPPER_LIMB_ANI + this.eventId), L.unregisterByEventId(w.PLAY_THE_LEGS_ANI + this.eventId), 
            L.unregisterByEventId(w.PLAY_EFFECT + this.eventId), L.unregisterByEventId(w.PLAY_SOUND + this.eventId);
        }
        getFireEffect() {
            return this.fireEffect;
        }
        cleanFireEffect() {
            this.fireEffect = [];
        }
        initNavNode() {
            this.navNode = Gt.pathfinder.getClosestNode(this.getModelPosByFixedVector(), Gt.zoneID, Gt.navGroup, !0);
        }
        setAttackDownCount() {
            this.attackDownCount = 1200;
        }
        createInvincibleProCtrl() {
            this.logicalBaseLayer.getIsMySelf() && (console.log("创建进度条"), this.invincibleProCtrl = new Ma(), 
            Bt.getFunctionViewCtrl(Er.GAME).addChild(this.invincibleProCtrl));
        }
        createRay() {
            this._ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0)), 
            this.point.x = Laya.stage.width / 2, this.point.y = Laya.stage.height / 2, this._ray2 = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0));
        }
        setPos(e) {
            if (this.logicalBaseLayer.getIsMySelf() ? (Nt.getCurScene().isShowUnder ? (this.model.getChildAt(0).transform.localRotationEuler = new Laya.Vector3(0, 0, 0), 
            this.logicalBaseLayer.eulerAngle.y = this.getOnceChild().transform.localRotationEulerY) : this.logicalBaseLayer.getIsMySelf() && (this.model.getChildAt(0).transform.localRotationEuler = new Laya.Vector3(0, -180, 0), 
            this.logicalBaseLayer.eulerAngle.y = this.getOnceChild().transform.localRotationEulerY), 
            Rs.playerBeHitImg && (Rs.playerBeHitImg.visible = !1), this.characterCtrl.resetPos(e)) : this.model.transform.position = e, 
            this.logicalBaseLayer.attackLogicalBaseLayer = null, this.resetFowardVel(), this.initNavNode(), 
            Mt.mode == Tt.ONEVSONEMODE) {
                const e = this.model.getChildAt(0).transform.localPositionY;
                this.model.getChildAt(0).transform.localPositionY += 3, Laya.Tween.to(this.model.getChildAt(0).transform, {
                    localPositionY: e
                }, 150, null, Laya.Handler.create(this, () => {}));
            } else Mt.mode == Tt.BIOCHEMISTRY && (this.waitingCount = 3e4, this.lifeParentTran && (this.lifeParentTran.owner.active || (this.lifeParentTran.owner.active = !0)));
        }
        rayCtrl(e, t) {
            this._ray.direction = e, this._ray.origin;
        }
        getModelPosByFixedVector() {
            return this.model.transform.position.cloneTo(this.fixedVector3Data.startPos), this.fixedVector3Data.startPos;
        }
        getModelPosByVector3() {
            return this.model.transform.position.cloneTo(this.baseData.startPos), this.baseData.startPos;
        }
        radiographicTesting() {
            if (this.logicalBaseLayer.getArmCtrl() && !this.isTouchBomb && !this.logicalBaseLayer.isStartAttack) {
                if (Ts.camera.viewportPointToRay(this.point, this._ray), 3 == this.logicalBaseLayer.getArmCtrl().getType()) {
                    Ae.onlyOneRandomIntOrFloat(0, 1) > .2 ? this.getIntersectsRayAndEnemyExact(this._ray, this.myHitResult, !1) : this.getIntersectsRayAndEnemyExact(this._ray, this.myHitResult);
                } else this.getIntersectsRayAndEnemyExact(this._ray, this.myHitResult);
                if (this.logicalBaseLayer.getArmCtrl().getType() != Kr.KNIFE && Ts.handleType != Pt.ONLYMOVE && null != Ts.handleType) {
                    let e = Mt.mode == Tt.BIOCHEMISTRY ? this.getIntersectsRayAndEnemy(this._ray, !0) : this.getIntersectsRayAndEnemyAim(this._ray, !0);
                    if (e && !e.getIsDie()) {
                        Ts.camera.worldToViewportPoint(e.getModelPosByVector3(), this.temVec4), this.point.x = this.temVec4.x, 
                        Ts.camera.viewportPointToRay(this.point, this._ray);
                        let t = Pa.distance(e.getModelPosByVector3(), this.getModelPosByVector3());
                        this.isCollidingsRayAndWall(this._ray, t) ? this.enemy = null : this.enemy = e, 
                        this.point.x = Laya.stage.width / 2;
                    } else this.enemy = null;
                } else this.enemy = null;
                if (Rs.hitLocation = "", this.myHitResult.succeeded) {
                    let e = this.myHitResult.collider.owner;
                    if (e.name == Wa.BODY || e.name == Wa.HEAD) if (e.name == Wa.BODY ? (Rs.getTargetLogic({
                        ID: e.parent.parent.id
                    }), Rs.hitLocation = ae.BODY) : e.name == Wa.HEAD && (Rs.hitLocation = ae.HEAD, 
                    Rs.getTargetLogic({
                        ID: e.parent.parent.id
                    })), Rs.targetLogicalBaseLayer && Rs.targetLogicalBaseLayer.getIsDie()) this.logicalBaseLayer.getIsTouchAttack() || (this.logicalBaseLayer.setIsAttack = !1); else {
                        if (!this.logicalBaseLayer.getIsTouchAttack() && Rs.targetLogicalBaseLayer) {
                            if (Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0) return void (this.logicalBaseLayer.setIsAttack = !1);
                            if (!this.logicalBaseLayer.isAutoAttack) return void (this.logicalBaseLayer.setIsAttack = !1);
                        }
                        3 != this.logicalBaseLayer.getArmCtrl().getType() && (this.logicalBaseLayer.getArmCtrl().getType() != Kr.KNIFE ? this.logicalBaseLayer.setIsAttack = !0 : this.sectorDetectionByKnifeWar(Rs.targetLogicalBaseLayer) && (this.logicalBaseLayer.setIsAttack = !0));
                    } else this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getType() != Kr.KNIFE && this.logicalBaseLayer.getIsMySelf() && (Rs.targetLogicalBaseLayer = null) : this.logicalBaseLayer.getIsMySelf() && (Rs.targetLogicalBaseLayer = null), 
                    this.logicalBaseLayer.getIsTouchAttack() || (this.logicalBaseLayer.setIsAttack = !1);
                } else this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getType() != Kr.KNIFE && this.logicalBaseLayer.getIsMySelf() && (Rs.targetLogicalBaseLayer = null) : this.logicalBaseLayer.getIsMySelf() && (Rs.targetLogicalBaseLayer = null), 
                this.logicalBaseLayer.getIsTouchAttack() || (this.logicalBaseLayer.setIsAttack = !1);
            }
        }
        set setPerAttackTime(e) {
            this.perAttackTime = e;
        }
        manualAmmunitionChange(e, t) {
            this.logicalBaseLayer.getArmCtrl() && (this.logicalBaseLayer.getIsDie() || this.logicalBaseLayer.magazineBullet != this.logicalBaseLayer.getArmCtrl().getMagazineBullet() && (this.logicalBaseLayer.isStartHuaBullet || 0 != this.logicalBaseLayer.bullets && (this.logicalBaseLayer.isStartHuaBullet = !0, 
            this.logicalBaseLayer.armCtrl.anim && (this.logicalBaseLayer.armCtrl.anim.speed = 0), 
            this.logicalBaseLayer.getIsMySelf() && L.notify(w.PLAY_SOUND + this.eventId, {
                url: this.logicalBaseLayer.getArmCtrl().getReloadsound()
            }), e(), Laya.timer.once(this.logicalBaseLayer.getArmCtrl().getBulletChangeTimer(), this, function cd() {
                this.logicalBaseLayer.getArmCtrl() ? (this.logicalBaseLayer.bullets >= this.logicalBaseLayer.getArmCtrl().getMagazineBullet() ? (this.logicalBaseLayer.bullets -= this.logicalBaseLayer.getArmCtrl().getMagazineBullet() - this.logicalBaseLayer.magazineBullet, 
                this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets, this.logicalBaseLayer.magazineBullet = this.logicalBaseLayer.getArmCtrl().getMagazineBullet(), 
                this.logicalBaseLayer.getArmCtrl().curMagazineBullet = this.logicalBaseLayer.getArmCtrl().getMagazineBullet()) : (this.logicalBaseLayer.magazineBullet += this.logicalBaseLayer.bullets, 
                this.logicalBaseLayer.getArmCtrl().curMagazineBullet += this.logicalBaseLayer.bullets, 
                this.logicalBaseLayer.bullets = 0, this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets), 
                this.logicalBaseLayer.isStartHuaBullet = !1, t(), L.notify(w.REFRESH_MAIN_ARM), 
                Laya.timer.clear(this, cd)) : Laya.timer.clear(this, cd);
            }))));
        }
        idleCtrl() {
            this.logicalBaseLayer.isStartHuaBullet || (this.logicalBaseLayer.getIsMoving() ? this.isStartMoveAttackRandom ? this.logicalBaseLayer.isZombie ? L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN
            }) : this.moveAttackRandPosList.target1Finish || this.moveAttackRandPosList.target2Finish ? this.moveAttackRandPosList.target1Finish && !this.moveAttackRandPosList.target2Finish && L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN_RIGHT
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN_LEFT
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN
            }) : (L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.IDLE
            }), this.logicalBaseLayer.getIsMySelf() && console.log("重置为普通状态")));
        }
        setRecoilForce() {
            if (Laya.Tween.clearAll(this.model.transform), Mt.mode != Tt.SKILL_MODE) if (3 == this.logicalBaseLayer.getArmCtrl().getType() || 7 == this.logicalBaseLayer.getArmCtrl().getType()) {
                let e = this.logicalBaseLayer.getArmCtrl().getRecoilForce();
                Ae.onlyOneRandomIntOrFloat(0, 1) > .5 && (e[0] *= -1), Ae.onlyOneRandomIntOrFloat(0, 1) > .5 && (e[1] *= -1), 
                Ts.camera.transform.localRotationEulerX = Nt.getCurScene().camreaData.rot.x, Ts.camera.transform.localRotationEulerY = Nt.getCurScene().camreaData.rot.y, 
                Ts.camera.transform.localPositionZ = Nt.getCurScene().camreaData.pos.z;
                const t = Ts.camera.transform.localRotationEulerX, i = Ts.camera.transform.localRotationEulerY;
                Laya.Tween.to(Ts.camera.transform, {
                    localRotationEulerX: t + e[0],
                    localRotationEulerY: i + e[1]
                }, 20, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(Ts.camera.transform, {
                        localRotationEulerX: t,
                        localRotationEulerY: i
                    }, 400, null, Laya.Handler.create(this, () => {
                        Laya.Tween.clearAll(Ts.camera.transform);
                    }));
                }));
            } else {
                this.logicalBaseLayer.getArmCtrl().getRecoilForce();
                Ts.camera.transform.localRotationEulerX = Nt.getCurScene().camreaData.rot.x, Ts.camera.transform.localRotationEulerY = Nt.getCurScene().camreaData.rot.y, 
                Ts.camera.transform.localPositionZ = Nt.getCurScene().camreaData.pos.z, Laya.Tween.to(Ts.camera.transform, {
                    localPositionZ: Nt.getCurScene().camreaData.pos.z + .1
                }, 30, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(Ts.camera.transform, {
                        localPositionZ: Nt.getCurScene().camreaData.pos.z
                    }, 200, null, Laya.Handler.create(this, () => {
                        Laya.Tween.clearAll(Ts.camera.transform);
                    }));
                }));
            }
        }
        attack(e = 0, t = null, i = 0) {
            this.model && (this.logicalBaseLayer.isSwitching || Rs.gameOver || (this.logicalBaseLayer.isZombie ? this.attackFromZomBie(e, t, i) : this.attackFromHuman(e, t, i)));
        }
        attackFromZomBie(e = 0, t = null, i = 0) {
            this.logicalBaseLayer.getIsDie() || (this.logicalBaseLayer.getIsAttack() && (this.toAttack(e, t, i), 
            this.isCanAttackAniAfterPlayOtherAni && (this.logicalBaseLayer.isZombie || this.idleCtrl())), 
            this.logicalBaseLayer.isStartAttack ? (this.perAttackTime -= Laya.timer.delta, this.attackAniAfterOtherAniCount -= Laya.timer.delta, 
            this.attackAniAfterOtherAniCount < 0 && (this.isCanAttackAniAfterPlayOtherAni || (this.isCanAttackAniAfterPlayOtherAni = !0)), 
            this.perAttackTime < 0 && (this.perAttackTime = this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() : 3800, 
            this.logicalBaseLayer.isStartAttack = !1)) : this.perAttackTime != (this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() : 3800) && (this.perAttackTime = this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() : 3800, 
            this.isCanAttackAniAfterPlayOtherAni = !0));
        }
        attackFromHuman(e = 0, t = null, i = 0) {
            if (this.logicalBaseLayer.getArmCtrl() && (this.isCanShowHitScale = !1, this.logicalBaseLayer.getIsAttack() ? this.isCanPlayAttackAni = !1 : this.isCanShowHitUI = !1, 
            !this.isTouchBomb && !this.isThrowBomb && !this.logicalBaseLayer.getIsDie())) if (0 == this.logicalBaseLayer.magazineBullet && 0 == this.logicalBaseLayer.bullets || (this.isShowBulletInsufficient = !1), 
            this.logicalBaseLayer.getIsMySelf() && 0 == this.logicalBaseLayer.magazineBullet && 0 == this.logicalBaseLayer.bullets && (this.isShowBulletInsufficient || (this.isShowBulletInsufficient = !0, 
            Oi.showNotification("子弹不足"))), this.logicalBaseLayer.isStartHuaBullet || 0 != this.logicalBaseLayer.magazineBullet) this.logicalBaseLayer.isStartHuaBullet || (this.logicalBaseLayer.getIsAttack() ? (this.toAttack(e, t, i), 
            this.isCanAttackAniAfterPlayOtherAni ? this.idleCtrl() : this.logicalBaseLayer.getArmCtrl() && this.logicalBaseLayer.getArmCtrl().anim && (this.logicalBaseLayer.getArmCtrl().anim.speed = 1)) : this.logicalBaseLayer.getArmCtrl() && this.logicalBaseLayer.getArmCtrl().anim && (this.logicalBaseLayer.getArmCtrl().anim.speed = 0), 
            this.logicalBaseLayer.isStartAttack ? (this.perAttackTime -= Laya.timer.delta, this.attackAniAfterOtherAniCount -= Laya.timer.delta, 
            this.attackAniAfterOtherAniCount < 0 && (this.isCanAttackAniAfterPlayOtherAni || (this.isCanAttackAniAfterPlayOtherAni = !0)), 
            this.perAttackTime < 0 && (this.perAttackTime = this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() : 2e3, 
            this.logicalBaseLayer.isStartAttack = !1)) : this.perAttackTime != (this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() : 2e3) && (this.perAttackTime = this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() : 2e3, 
            this.isCanAttackAniAfterPlayOtherAni = !0)); else if (0 != this.logicalBaseLayer.bullets) {
                this.logicalBaseLayer.isStartHuaBullet = !0, this.logicalBaseLayer.armCtrl.anim && (this.logicalBaseLayer.armCtrl.anim.speed = 0), 
                this.logicalBaseLayer.getIsMySelf() && this.playSound({
                    url: this.logicalBaseLayer.getArmCtrl().getReloadsound()
                });
                var a = this;
                Laya.timer.once(this.logicalBaseLayer.getArmCtrl().getBulletChangeTimer(), this, function cd() {
                    this.logicalBaseLayer.getArmCtrl() ? (this.logicalBaseLayer.bullets >= this.logicalBaseLayer.getArmCtrl().getMagazineBullet() ? (a.logicalBaseLayer.getArmCtrl().isInfinite || (this.logicalBaseLayer.bullets -= this.logicalBaseLayer.getArmCtrl().getMagazineBullet() - this.logicalBaseLayer.magazineBullet), 
                    this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets, this.logicalBaseLayer.magazineBullet = this.logicalBaseLayer.getArmCtrl().getMagazineBullet(), 
                    this.logicalBaseLayer.getArmCtrl().curMagazineBullet = this.logicalBaseLayer.getArmCtrl().getMagazineBullet()) : (this.logicalBaseLayer.magazineBullet += this.logicalBaseLayer.bullets, 
                    this.logicalBaseLayer.getArmCtrl().curMagazineBullet += this.logicalBaseLayer.bullets, 
                    this.logicalBaseLayer.bullets = 0, this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets), 
                    this.logicalBaseLayer.isStartHuaBullet = !1, L.notify(w.REFRESH_MAIN_ARM)) : Laya.timer.clear(this, cd);
                });
            }
        }
        toAttack(e = 0, t = null, i = 0) {
            if (!this.logicalBaseLayer.isStartAttack) {
                this.logicalBaseLayer.isStartAttack = !0;
                let a = 50;
                if (this.logicalBaseLayer.isZombie ? a = 2e3 : 3 == this.logicalBaseLayer.getArmCtrl().getType() || 7 == this.logicalBaseLayer.getArmCtrl().getType() ? a = 1e3 : 1 == this.logicalBaseLayer.getArmCtrl().getType() || 5 == this.logicalBaseLayer.getArmCtrl().getType() || 6 == this.logicalBaseLayer.getArmCtrl().getType() ? a = 50 : 2 != this.logicalBaseLayer.getArmCtrl().getType() && this.logicalBaseLayer.getArmCtrl().getType() != Kr.MAGIC || (a = 200), 
                this.attackAniAfterOtherAniCount = this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() - a : 2e3, 
                this.isCanAttackAniAfterPlayOtherAni = !1, this.isCanShowHitScale = !0, this.logicalBaseLayer.isZombie || (hl.platform != v.TT && hl.platform != v.WX && hl.platform != v.QQ || ol.isIOS(), 
                this.playSound({
                    url: this.logicalBaseLayer.getArmCtrl().getAttackSound()
                })), this.logicalBaseLayer.isZombie) {
                    let a = this;
                    this.perAttackTime = this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getInterval() : 3800, 
                    Laya.timer.once(700, this, function cd() {
                        if (a.model && t.getPresentationBaseLayer()) {
                            if (a.sectorDetectionByKnifeWar(t)) {
                                if (this.randHitData[0] = 100, this.randHitData[1] = 100 - e, this.randHeadshotData[0] = 30, 
                                this.randHeadshotData[1] = 100 - i, t && t.isInvincible) return;
                                this.data = this.randHitType[_a.getResult(this.randHitData)], this.data2 = this.randHeadshotType[_a.getResult(this.randHeadshotData)], 
                                Rs.hit({
                                    isMySelf: !1,
                                    killer: this.logicalBaseLayer,
                                    target: t,
                                    hit: this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getHit() : 20,
                                    isHitLocation: !1
                                });
                            }
                            Laya.timer.clear(this, cd);
                        }
                    });
                } else if (this.logicalBaseLayer.getIsMySelf()) {
                    if (this.logicalBaseLayer.getArmCtrl().getType() == Kr.KNIFE) {
                        let e = this;
                        Laya.timer.once(200, this, function cd() {
                            if (e.model) {
                                if (e.sectorDetectionByKnifeWar(Rs.targetLogicalBaseLayer)) {
                                    if (this.setRecoilForce(), this.perAttackTime = this.logicalBaseLayer.getArmCtrl().getInterval(), 
                                    this.sendEffectNotify(!1), il.vibrateShort(), Rs.targetLogicalBaseLayer && Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0) return;
                                    if (Rs.targetLogicalBaseLayer && Rs.targetLogicalBaseLayer.isInvincible) return;
                                    this.isCanShowHitUI = !0, Rs.hit({
                                        isMySelf: !0,
                                        hit: this.logicalBaseLayer.getArmCtrl().getHit()
                                    });
                                }
                                Laya.timer.clear(this, cd);
                            }
                        });
                    } else this.setRecoilForce(), this.perAttackTime = this.logicalBaseLayer.getArmCtrl().getInterval(), 
                    this.upperlimbName = null, il.vibrateShort();
                    if (this.logicalBaseLayer.getIsMySelf() && this.logicalBaseLayer.getArmCtrl() && L.notify(w.PLAY_EFFECT + this.eventId, {
                        name: this.logicalBaseLayer.getArmCtrl().getFirestarter(),
                        pos: null,
                        isBulletHole: !1
                    }), this.isCanPlayAttackAni = !0, this.logicalBaseLayer.getArmCtrl().getType() == Kr.BOMB) this.logicalBaseLayer.magazineBullet--, 
                    this.logicalBaseLayer.getArmCtrl().curMagazineBullet--; else {
                        let e = [];
                        q.getAllChildrenByName(this.model, "kou", e), this.logicalBaseLayer.magazineBullet -= e.length, 
                        this.logicalBaseLayer.getArmCtrl().curMagazineBullet -= e.length;
                    }
                    L.notify(w.REFRESH_MAIN_ARM);
                } else if (this.isCanPlayAttackAni = !0, 2 == this.logicalBaseLayer.getArmCtrl().getType()) {
                    let a = this;
                    this.perAttackTime = this.logicalBaseLayer.getArmCtrl().getInterval(), Laya.timer.once(400, this, function cd() {
                        if (a.sectorDetectionByKnifeWar(t)) {
                            if (this.sendEffectNotify(!1), this.randHitData[0] = 100, this.randHitData[1] = 100 - e, 
                            this.randHeadshotData[0] = 30, this.randHeadshotData[1] = 100 - i, t && t.isInvincible) return;
                            this.data = this.randHitType[_a.getResult(this.randHitData)], this.data2 = this.randHeadshotType[_a.getResult(this.randHeadshotData)], 
                            this.data2 == Ha.HIT ? Rs.hit({
                                isMySelf: !1,
                                killer: this.logicalBaseLayer,
                                target: t,
                                hit: Mt.mode == Tt.SKILL_MODE ? this.logicalBaseLayer.getArmCtrl().getHit() : 2 * this.logicalBaseLayer.getArmCtrl().getHit(),
                                isHitLocation: !0,
                                isDoubleHit: !0
                            }) : this.data == Fa.HIT && Rs.hit({
                                isMySelf: !1,
                                killer: this.logicalBaseLayer,
                                target: t,
                                hit: Mt.mode == Tt.SKILL_MODE ? .5 * this.logicalBaseLayer.getArmCtrl().getHit() : this.logicalBaseLayer.getArmCtrl().getHit(),
                                isHitLocation: !1,
                                isDoubleHit: !1
                            });
                        }
                        Laya.timer.clear(this, cd);
                    });
                } else {
                    if (this.logicalBaseLayer.magazineBullet--, this.logicalBaseLayer.getArmCtrl().curMagazineBullet--, 
                    this.perAttackTime = this.logicalBaseLayer.getArmCtrl().getInterval(), this.sendEffectNotify(!1), 
                    this.randHitData[0] = Mt.mode == Tt.SNIPERMODE ? 40 : e, Mt.mode == Tt.ONEVSONEMODE && (this.randHitData[0] = 50), 
                    this.randHitData[1] = 100 - this.randHitData[0], this.randHeadshotData[0] = Mt.mode == Tt.SNIPERMODE ? 20 : i, 
                    Mt.mode == Tt.ONEVSONEMODE && (this.randHeadshotData[0] = 10), this.randHeadshotData[1] = 100 - this.randHeadshotData[0], 
                    t && t.isInvincible) return;
                    this.data = this.randHitType[_a.getResult(this.randHitData)], this.data2 = this.randHeadshotType[_a.getResult(this.randHeadshotData)], 
                    this.data2 == Ha.HIT ? Rs.hit({
                        isMySelf: !1,
                        killer: this.logicalBaseLayer,
                        target: t,
                        hit: 2 * this.logicalBaseLayer.getArmCtrl().getHit(),
                        isHitLocation: !0,
                        isDoubleHit: !0
                    }) : this.data == Fa.HIT && Rs.hit({
                        isMySelf: !1,
                        killer: this.logicalBaseLayer,
                        target: t,
                        hit: this.logicalBaseLayer.getArmCtrl().getHit(),
                        isHitLocation: !1,
                        isDoubleHit: !1
                    });
                }
                if (Laya.timer.once(10, this, () => {
                    L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                        name: he.ATTACK
                    });
                }), !this.logicalBaseLayer.isZombie && this.logicalBaseLayer.getIsMySelf() && this.logicalBaseLayer.getArmCtrl().getType() != Kr.KNIFE) {
                    if (this.getOnceChild().transform.getForward(this.baseData.forwardDir), Pa.scale(this.baseData.forwardDir, -1, this.baseData.forwardDir), 
                    !this.muzzleTran) {
                        let e = [];
                        q.getAllChildrenByName(this.model, "kou", e);
                        for (let t = 0; t < e.length; t++) {
                            const i = e[t];
                            this.muzzleTran[t] = i.transform;
                        }
                    }
                    if (1 == this.muzzleTran.length) {
                        if (this.myHitResult.succeeded) {
                            let e = this.myHitResult.collider.owner;
                            if ((e.name == Wa.BODY || e.name == Wa.HEAD) && (e.name == Wa.BODY ? (Rs.getTargetLogic({
                                ID: e.parent.parent.id
                            }), Rs.hitLocation = ae.BODY) : e.name == Wa.HEAD && (Rs.hitLocation = ae.HEAD, 
                            Rs.getTargetLogic({
                                ID: e.parent.parent.id
                            })), Rs.targetLogicalBaseLayer && Rs.targetLogicalBaseLayer.getRoleType() != Mr.TYPE_0)) {
                                this.isCanShowHitUI = !0;
                                let e = this.logicalBaseLayer.getArmCtrl().getHit();
                                if (Rs.hitLocation == ae.HEAD ? e = this.logicalBaseLayer.getArmCtrl().headHit : Rs.hitLocation == ae.ARM ? e = this.logicalBaseLayer.getArmCtrl().limbHit : Rs.hitLocation == ae.BODY ? e *= 1 : Rs.hitLocation == ae.LEG && (e = this.logicalBaseLayer.getArmCtrl().limbHit), 
                                e = Math.floor(e), console.log("击中敌人", e), this.logicalBaseLayer.getArmCtrl().id != Gr.TANK && this.logicalBaseLayer.getArmCtrl().id != Gr.RPG && this.logicalBaseLayer.getArmCtrl().getType() != Kr.MAGIC || !this.logicalBaseLayer.getArmCtrl().isOtherArm) L.notify(w.PLAY_EFFECT + this.eventId, {
                                    name: this.logicalBaseLayer.getArmCtrl().getBeatEffect(),
                                    pos: this.hitPoint1,
                                    isBulletHole: !0
                                }), Rs.hit({
                                    isMySelf: !0,
                                    hit: e
                                }); else {
                                    let t = this.hitPoint1.clone(), i = ie.BULLET3, a = !1;
                                    this.logicalBaseLayer.getArmCtrl().getType() == Kr.MAGIC && (i = ie.HALIMOBANG, 
                                    a = !0, this.logicalBaseLayer.getArmCtrl().id == Gr.DI_JIA && (i = ie.DI_JIA), this.logicalBaseLayer.getArmCtrl().id == Gr.JU_LONG && (i = ie.JU_LONG), 
                                    this.logicalBaseLayer.getArmCtrl().id == Gr.Fat && (i = ie.BIANBIAN), this.logicalBaseLayer.getArmCtrl().id == Gr.SNOW && (i = ie.HUAYAN)), 
                                    Laya.timer.once(300, this, () => {
                                        this.logicalBaseLayer.getIsMySelf() && Ri.playFireEnd({
                                            name: i,
                                            pos: t,
                                            isOther: a
                                        }), Rs.aoeHit(t, e, this.logicalBaseLayer, i), a || this.camreaShake(500), il.vibrateLong();
                                    });
                                }
                            }
                        } else if ((this.logicalBaseLayer.getArmCtrl().id == Gr.TANK || this.logicalBaseLayer.getArmCtrl().id == Gr.RPG || this.logicalBaseLayer.getArmCtrl().getType() == Kr.MAGIC) && this.logicalBaseLayer.getArmCtrl().isOtherArm) {
                            const e = this.muzzleTran[0];
                            if (e.position.cloneTo(this.vecShtoPos), e.owner && 1 == e.owner.numChildren) {
                                let t = e.owner.getChildAt(0);
                                t.transform.localPositionZ = .2, this.vecShotEndPos.x = t.transform.position.x - e.position.x, 
                                this.vecShotEndPos.y = t.transform.position.y - e.position.y, this.vecShotEndPos.z = t.transform.position.z - e.position.z, 
                                Laya.Vector3.normalize(this.vecShotEndPos, this.vecShotEndPos);
                            } else this.vecShotEndPos.cloneTo(this.baseData.forwardDir);
                            if (this.point.x = Laya.stage.width / 2, this.point.y = Laya.stage.height / 2, Ts.camera.viewportPointToRay(this.point, this._ray2), 
                            this.isCollidingsRayAndWallNear(this._ray2, 100)) {
                                let e = this.logicalBaseLayer.getArmCtrl().getHit();
                                e = Math.floor(e), console.log("击中敌人", e);
                                let t = this.hitPoint.clone();
                                console.log(t);
                                let i = ie.BULLET3, a = !1;
                                if (this.logicalBaseLayer.getArmCtrl().getType() == Kr.MAGIC) {
                                    i = ie.HALIMOBANG, a = !0, this.logicalBaseLayer.getArmCtrl().id == Gr.DI_JIA && (i = ie.DI_JIA), 
                                    this.logicalBaseLayer.getArmCtrl().id == Gr.JU_LONG && (i = ie.JU_LONG), this.logicalBaseLayer.getArmCtrl().id == Gr.Fat && (i = ie.BIANBIAN), 
                                    this.logicalBaseLayer.getArmCtrl().id == Gr.SNOW && (i = ie.HUAYAN), this.vecShtoPos.x = t.x, 
                                    this.vecShtoPos.y = t.y, this.vecShtoPos.z = t.z;
                                    let e = Pa.distance(this.vecShtoPos, this.getModelPosByVector3());
                                    Pa.subtract(this.vecShtoPos, this.getModelPosByVector3(), this.vecShtoPos), Pa.normalize(this.vecShtoPos, this.vecShtoPos), 
                                    this.vecShtoPos.x = this.getModelPosByVector3().x + this.vecShtoPos.x * e * .8, 
                                    this.vecShtoPos.y = this.getModelPosByVector3().y + this.vecShtoPos.y * e * 1.3, 
                                    this.vecShtoPos.z = this.getModelPosByVector3().z + this.vecShtoPos.z * e * .8, 
                                    this.vecShotEndPos.x = this.vecShtoPos.x, this.vecShotEndPos.y = this.vecShtoPos.y - 300, 
                                    this.vecShotEndPos.z = this.vecShtoPos.z, this._ray2.origin = this.vecShtoPos, this._ray2.direction = this.vecShotEndPos, 
                                    this.isCollidingsRayAndWallNear(this._ray2, 100), t.x = this.hitPoint.x, t.y = this.hitPoint.y, 
                                    t.z = this.hitPoint.z;
                                }
                                Laya.timer.once(300, this, () => {
                                    if (this.logicalBaseLayer.getIsMySelf()) {
                                        let e = Ri.playFireEnd({
                                            name: i,
                                            pos: t,
                                            isOther: a
                                        });
                                        if (i == ie.DI_JIA || i == ie.JU_LONG || i == ie.BIANBIAN) {
                                            e.transform.localRotationEuler = this.logicalBaseLayer.getEulerAngle(), e.transform.localRotationEuler.x = 0;
                                            let t = e.getChildAt(0).getComponent(Laya.Animator);
                                            t.play(), i == ie.DI_JIA && (t.speed = .5);
                                        }
                                    }
                                    Rs.aoeHit(t, e, this.logicalBaseLayer, i), a || this.camreaShake(500), il.vibrateLong();
                                });
                            }
                        }
                        if (!kt.isCloseEffect) {
                            const e = this.muzzleTran[0];
                            if (e.position.cloneTo(this.vecShtoPos), e.owner && 1 == e.owner.numChildren) {
                                let t = e.owner.getChildAt(0);
                                t.transform.localPositionZ = .2, this.vecShotEndPos.x = t.transform.position.x - e.position.x, 
                                this.vecShotEndPos.y = t.transform.position.y - e.position.y, this.vecShotEndPos.z = t.transform.position.z - e.position.z, 
                                Laya.Vector3.normalize(this.vecShotEndPos, this.vecShotEndPos);
                            } else this.vecShotEndPos.cloneTo(this.baseData.forwardDir);
                            this._ray2.origin = this.vecShtoPos, this._ray2.direction = this.vecShotEndPos, 
                            this.isCollidingsRayAndWall(this._ray2, 100), Laya.Vector3.equals(this.lastPoint, this.hitPoint) ? va.shot(this.vecShotEndPos, this.vecShtoPos, this.lastPoint) : (this._ray2.origin = this.vecShtoPos, 
                            this._ray2.direction = this.vecShotEndPos, this.isCollidingsRayAndWall(this._ray2, 100), 
                            this.lastPoint.x = this.hitPoint.x, this.lastPoint.y = this.hitPoint.y, this.lastPoint.z = this.hitPoint.z, 
                            va.shot(this.vecShotEndPos, this.vecShtoPos, this.lastPoint));
                        }
                    } else for (let e = 0; e < this.muzzleTran.length; e++) {
                        const t = this.muzzleTran[e];
                        if (t.position.cloneTo(this.vecShtoPos), t.owner && 1 == t.owner.numChildren) {
                            let e = t.owner.getChildAt(0);
                            e.transform.localPositionZ = .2, this.vecShotEndPos.x = e.transform.position.x - t.position.x, 
                            this.vecShotEndPos.y = e.transform.position.y - t.position.y, this.vecShotEndPos.z = e.transform.position.z - t.position.z, 
                            Laya.Vector3.normalize(this.vecShotEndPos, this.vecShotEndPos);
                        } else this.vecShotEndPos.cloneTo(this.baseData.forwardDir);
                        if (kt.isCloseEffect || (this._ray2.origin = this.vecShtoPos, this._ray2.direction = this.vecShotEndPos, 
                        this.isCollidingsRayAndWall(this._ray2, 100), Laya.Vector3.equals(this.lastPoint, this.hitPoint) ? va.shot(this.vecShotEndPos, this.vecShtoPos, this.lastPoint) : (this.lastPoint.x = this.hitPoint.x, 
                        this.lastPoint.y = this.hitPoint.y, this.lastPoint.z = this.hitPoint.z, va.shot(this.vecShotEndPos, this.vecShtoPos, this.lastPoint))), 
                        this._ray2.origin = this.vecShtoPos, this._ray2.direction = this.vecShotEndPos, 
                        3 == this.logicalBaseLayer.getArmCtrl().getType()) {
                            Ae.onlyOneRandomIntOrFloat(0, 1) > .2 ? this.getIntersectsRayAndEnemyExact(this._ray2, this.myHitResult, !1) : this.getIntersectsRayAndEnemyExact(this._ray2, this.myHitResult);
                        } else this.getIntersectsRayAndEnemyExact(this._ray2, this.myHitResult);
                        if (this.myHitResult.succeeded) {
                            let e = this.myHitResult.collider.owner;
                            if (e.name == Wa.BODY || e.name == Wa.HEAD) {
                                if (e.name == Wa.BODY ? (Rs.getTargetLogic({
                                    ID: e.parent.parent.id
                                }), Rs.hitLocation = ae.BODY) : e.name == Wa.HEAD && (Rs.hitLocation = ae.HEAD, 
                                Rs.getTargetLogic({
                                    ID: e.parent.parent.id
                                })), Rs.targetLogicalBaseLayer && Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0) continue;
                                this.isCanShowHitUI = !0;
                                let t = this.logicalBaseLayer.getArmCtrl().getHit();
                                Rs.hitLocation == ae.HEAD ? t = this.logicalBaseLayer.getArmCtrl().headHit : Rs.hitLocation == ae.ARM ? t = this.logicalBaseLayer.getArmCtrl().limbHit : Rs.hitLocation == ae.BODY ? t *= 1 : Rs.hitLocation == ae.LEG && (t = this.logicalBaseLayer.getArmCtrl().limbHit), 
                                t = Math.floor(t), console.log("击中敌人", t), Rs.hit({
                                    isMySelf: !0,
                                    hit: t
                                }), this.logicalBaseLayer.getIsMySelf() && L.notify(w.PLAY_EFFECT + this.eventId, {
                                    name: this.logicalBaseLayer.getArmCtrl().getBeatEffect(),
                                    pos: this.hitPoint1,
                                    isBulletHole: !0
                                });
                            }
                        }
                    }
                }
            }
        }
        TransformPoint(e, t) {
            var i = new Laya.Vector3();
            return Laya.Vector3.transformQuat(t, e.rotation, i), Laya.Vector3.add(i, e.position, i), 
            i;
        }
        testPoint(e, t) {
            if (2 == this.cubeList.length) {
                for (let e = 0; e < this.cubeList.length; e++) {
                    this.cubeList[e].removeSelf();
                }
                this.cubeList = [];
            }
            let i = null;
            i = Ts.scene3d.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(.3, .3, .3)));
            var a = new Laya.BlinnPhongMaterial();
            Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(null, function(e) {
                a.albedoTexture = e;
            })), i.transform.position = e, i.meshRenderer.material = a, 1 == t && (i.meshRenderer.sharedMaterial.albedoColor = new Laya.Vector4(1, 0, 0, 1)), 
            this.cubeList.push(i);
        }
        sendEffectNotify(e) {
            this.logicalBaseLayer.getArmCtrl();
        }
        addBuoy() {
            this.logicalBaseLayer.getIsMySelf() || (this.buoy && (this.buoy.destroy(), this.buoy = null), 
            this.buoy = Sa.create(this.model.transform, this.logicalBaseLayer), Bt.getFunctionViewCtrl(Er.GAME).floatingLayer.addChild(this.buoy));
        }
        getModel() {
            return this.model;
        }
        getModelID() {
            return this.model.id;
        }
        getAniCtrl() {
            this.aniCtrl = this.model.getChildAt(0).getComponent(Laya.Animator);
        }
        getSeparationAniCtrl() {
            hl.isRefinedVersion && (this.logicalBaseLayer.isZombie || (this.separation && (this.separationAniCtrl = this.separation.getChildAt(0).getComponent(Laya.Animator)), 
            console.log("分身控制器：", this.separationAniCtrl)));
        }
        setDirection() {
            if (this.logicalBaseLayer.getIsMySelf()) {
                this.logicalBaseLayer.assistAim();
                let e = this.logicalBaseLayer.getEulerAngle();
                this.model.getChildAt(0).transform.localRotationEuler = e;
            } else {
                let e = this.logicalBaseLayer.getRotatingQuaternion();
                this.model.transform.rotation = e;
            }
        }
        setDirectionByTarget(e) {
            if (!e.getPresentationBaseLayer()) return;
            let t = this.model.transform.position, i = e.getPresentationBaseLayer().getModelPosByVector3();
            i.y = t.y, Laya.Vector3.subtract(i, t, this.baseData.forwardDir), Laya.Vector3.normalize(this.baseData.forwardDir, this.baseData.forwardDir), 
            this.baseData.forward.x = 0, this.baseData.forward.y = 0, this.baseData.forward.z = 0, 
            this.model.transform.getForward(this.baseData.forward), this.baseData.forward.x *= -1, 
            this.baseData.forward.z *= -1, Laya.Vector3.normalize(this.baseData.forward, this.baseData.forward);
            const a = Laya.Vector3.dot(this.baseData.forwardDir, this.baseData.forward);
            let s = 180 * Math.acos(a) / Math.PI;
            Laya.Vector3.cross(this.baseData.forward, this.baseData.forwardDir, this.baseData.crossRide), 
            this.baseData.crossRide.y < 0 && (s = -s), this.baseData.forwardToAngle.x = 0, this.baseData.forwardToAngle.z = 0, 
            this.baseData.forwardToAngle.y = s, isNaN(this.baseData.forwardToAngle.y) || this.model.transform.rotate(this.baseData.forwardToAngle, !0, !1);
        }
        updateBuoy() {
            this.logicalBaseLayer.getIsMySelf() || this.buoy.setTagPos();
        }
        forceSetPos() {}
        playUpperlimbAni(e) {
            if (kt.isCloseAni) return;
            if (!this.aniCtrl) return;
            if (this.isThrowing && e.name != he.RELOAD && e.name != he.ATTACK && e.name != he.DEATH) return;
            if (this.logicalBaseLayer.isSwitching && e.name != he.RELOAD && e.name != he.ATTACK && e.name != he.SWITCH && e.name != he.DEATH) return;
            let t = this.logicalBaseLayer.getArmCtrl() ? 5 == this.logicalBaseLayer.getArmCtrl().getType() || 6 == this.logicalBaseLayer.getArmCtrl().getType() ? "1" : this.logicalBaseLayer.getArmCtrl().getType() : "2";
            if (this.logicalBaseLayer.getArmCtrl() && this.logicalBaseLayer.getArmCtrl().getType() == Kr.MAGIC && (t = "2", 
            this.logicalBaseLayer.getArmCtrl().id == Gr.JU_LONG && e.name == he.ATTACK && (t = "2_1")), 
            this.logicalBaseLayer.isZombie ? e.name = e.name : e.name = e.name + t, (this.logicalBaseLayer.isZombie || this.logicalBaseLayer.getArmCtrl() && 2 == this.logicalBaseLayer.getArmCtrl().getType() && this.logicalBaseLayer.getIsMySelf()) && e.name != he.SWITCH + t && !this.isCanAttackAniAfterPlayOtherAni) if (this.logicalBaseLayer.isZombie) {
                if (e.name != he.ATTACK && !this.logicalBaseLayer.isStartHuaBullet) return;
            } else if (e.name != he.ATTACK + t && !this.logicalBaseLayer.isStartHuaBullet) return;
            this.upperlimbName != e.name && (ol.isIOS() && this.aniCtrl.speed <= 1 && (this.aniCtrl.speed *= 1), 
            this.aniCtrl.play(e.name, 1, 0), this.separationAniCtrl && this.separationAniCtrl.play(e.name, 1, 0), 
            this.upperlimbName = e.name, this.logicalBaseLayer.getIsMySelf() && console.log(e.name));
        }
        playUpperlimbAniQZ(e) {
            let t = this.logicalBaseLayer.getArmCtrl() ? 5 == this.logicalBaseLayer.getArmCtrl().getType() || 6 == this.logicalBaseLayer.getArmCtrl().getType() || 7 == this.logicalBaseLayer.getArmCtrl().getType() ? "1" : this.logicalBaseLayer.getArmCtrl().getType() : "2";
            this.logicalBaseLayer.isZombie ? e = e : (this.logicalBaseLayer.getArmCtrl() && this.logicalBaseLayer.getArmCtrl().getType() == Kr.MAGIC && (t = "2", 
            this.logicalBaseLayer.getArmCtrl().id == Gr.JU_LONG && e == he.ATTACK && (t = "2_1")), 
            e += t), this.upperlimbName != e && (ol.isIOS() && this.aniCtrl.speed <= 1 && (this.aniCtrl.speed *= 1), 
            this.aniCtrl.play(e, 1, 0), this.separationAniCtrl && this.separationAniCtrl.play(e, 1, 0), 
            this.upperlimbName = e);
        }
        playThelegsAni(e) {
            if (this.isStartJump && e.name != he.JUMP) return;
            if (this.playTimeTheLegs -= Ce.gSysTimer.delta, this.playTimeTheLegs < 0 && (this.isCanQH = !0, 
            this.isStartQH = !1), (e.name == he.IDLE || e.name == he.RUN || e.name == he.RUN_LEFT || e.name == he.RUN_RIGHT) && !this.isCanQH) return;
            if (kt.isCloseAni) return;
            if (!this.aniCtrl) return;
            let t = this.logicalBaseLayer.getArmCtrl() ? 5 == this.logicalBaseLayer.getArmCtrl().getType() || 6 == this.logicalBaseLayer.getArmCtrl().getType() || 7 == this.logicalBaseLayer.getArmCtrl().getType() ? "1" : this.logicalBaseLayer.getArmCtrl().getType() : "2";
            this.logicalBaseLayer.getArmCtrl() && this.logicalBaseLayer.getArmCtrl().getType() == Kr.MAGIC && (t = "2", 
            this.logicalBaseLayer.getArmCtrl().id == Gr.JU_LONG && e.name == he.ATTACK && (t = "2_1")), 
            this.thelegsName != he.IDLE + t && this.thelegsName != he.RUN + t && this.thelegsName != he.RUN_LEFT + t && this.thelegsName != he.RUN_RIGHT + t || this.thelegsName == e.name || this.isStartQH || (this.isStartQH = !0, 
            this.playTimeTheLegs = 400, this.isCanQH = !1);
            let i = e.name;
            this.logicalBaseLayer.isZombie ? e.name = e.name : e.name = e.name + t, this.thelegsName != e.name && (this.logicalBaseLayer.getIsMySelf() && (i == he.RUN ? (this.aniCtrl.speed = .8, 
            this.separationAniCtrl && (this.separationAniCtrl.speed = .8)) : (this.aniCtrl.speed = 1, 
            this.separationAniCtrl && (this.separationAniCtrl.speed = 1))), ol.isIOS() && this.aniCtrl.speed <= 1 && (this.aniCtrl.speed *= 1), 
            this.aniCtrl.play(e.name, 0, 0), this.separationAniCtrl && this.separationAniCtrl.play(e.name, 0, 0), 
            this.thelegsName = e.name);
        }
        playEffect(e) {
            if (!kt.isCloseEffect && this.logicalBaseLayer.getArmCtrl().getType() != Kr.KNIFE) if (e.isBulletHole) {
                if (!this.myHitResult.collider) return;
                if (!this.myHitResult.collider.owner) return;
                this.logicalBaseLayer.getIsMySelf() && Ri.playFireEnd({
                    name: e.name,
                    pos: e.pos
                });
            } else {
                if (!this.model) return;
                let t = [];
                q.getAllChildrenByName(this.model, "kou", t);
                for (let i = 0; i < t.length; i++) {
                    let a = t[i];
                    if (!a) continue;
                    if (this.fireEffect[i] && this.fireEffect[i].parent) {
                        let e = this.fireEffect[i].transform.localPosition;
                        e.x = 0, e.y = 0, e.z = 0, this.fireEffect[i].transform.localPosition = e;
                    } else {
                        a.transform.localRotationEulerX = 0, this.fireEffect[i] = Ri.playfire({
                            name: this.logicalBaseLayer.armCtrl.getFirestarter(),
                            parent: a,
                            isOther: Mt.mode == Tt.SKILL_MODE
                        });
                        let e = this.fireEffect[i].transform.localPosition;
                        e.x = 0, e.y = 0, e.z = .1, this.fireEffect[i].transform.localPosition = e;
                    }
                    let s = this.fireEffect[i].transform.localScale;
                    s.x = 0, s.y = 0, s.z = 0, this.fireEffect[i].transform.localScale = s, this.fireEffect[i].transform.localRotationEulerZ = 45 * Math.random(), 
                    this.fireRecycleCountDown = 50, 4 != this.logicalBaseLayer.getArmCtrl().getType() && Ri.playfireTrajectory({
                        name: e.name,
                        parent: a
                    });
                }
            }
        }
        playSound(e) {
            if (!kt.isCloseSound) if (e.url != ml.HEADSHOT && e.url != ml.DEATH && e.url != ml.DOUBLE.FIFTH && e.url != ml.DOUBLE.FIRST && e.url != ml.DOUBLE.FOURTH && e.url != ml.DOUBLE.SEDOND && e.url != ml.DOUBLE.THIRD) {
                let t = this.getModelPosByVector3();
                if (this.logicalBaseLayer.getIsMySelf() && (t = null), hl.platform == v.VIVO && Ya.sound3dCount > 8) return;
                il.playEffect3D(e.url, t, 1), Ya.sound3dCount += 1, Laya.timer.once(1e3, this, () => {
                    Ya.sound3dCount -= 1, Ya.sound3dCount < 0 && (Ya.sound3dCount = 0);
                });
            } else this.logicalBaseLayer.getIsMySelf() && il.play(e.url, 1, !0, 5);
        }
        registerCharacterCtrl() {
            if (!this.logicalBaseLayer.getIsMySelf()) return;
            if (kt.isCloseCharacterCtrl) return this.characterCtrl = this.model.addComponent(ma), 
            this.characterCtrl.stepHeight = 1.5, this.characterCtrl.gravity = 1, void (this.characterCtrl.fowardVel = .6);
            let e = Laya.Physics3DUtils.COLLISIONFILTERGROUP_CHARACTERFILTER;
            this.logicalBaseLayer.getIsMySelf() || (e = Laya.Physics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER2);
            var t = this.model.addComponentIntance(new Laya.CharacterController(.1, null, e)), i = new Laya.CapsuleColliderShape(.5, 2);
            i.localOffset = new Laya.Vector3(0, 1, 0), t.colliderShape = i, t.gravity = new Laya.Vector3(0, -80, 0), 
            console.log("当前重力：", t.gravity), this.characterCtrl = t, this.characterCtrl.simulation.continuousCollisionDetection = !1, 
            this.characterCtrl.stepHeight = 2, q.IgnoreCollision(t, Y.AI, Y.PLAYER);
        }
        judgeIsGrounded() {
            return !!this.characterCtrl.isGrounded;
        }
        speedCtrl() {
            if (this.logicalBaseLayer.getIsMySelf() && !this.isBehit) {
                console.log("速度减慢"), this.isBehit = !0, this.characterCtrl.fowardVel = .3;
                let e = this;
                Laya.timer.once(500, this, function() {
                    Rs.gameOver || e.characterCtrl && (e.characterCtrl.fowardVel = .6, e.isBehit = !1);
                });
            }
        }
        resetFowardVel() {
            this.logicalBaseLayer.getIsMySelf() && (this.characterCtrl.fowardVel = .6);
        }
        move() {
            if (Rs.gameOver) return void (this.logicalBaseLayer.getIsMySelf() && (kt.isCloseCharacterCtrl ? this.characterCtrl.stop() : this.characterCtrl.move(this.logicalBaseLayer.getMyOrientation())));
            if (!this.model) return;
            if (this.lifeParentTran && this.lifeParentTran.lookAt(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3(), q.Vector3.up, !1), 
            this.scaleLifeTran(), this.AIToThrowTheArm(), 0 == this.logicalBaseLayer.getHP() && (this.logicalBaseLayer.getIsDie() || (this.logicalBaseLayer.setIsMoving = !1, 
            this.logicalBaseLayer.setDie(), this.logicalBaseLayer.getIsMySelf() && L.notify(w.PLAY_SOUND + this.eventId, {
                url: ml.DEATH
            }), this.upperlimbName != he.DEATH && L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.DEATH
            }), this.thelegsName != he.DEATH && L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.DEATH
            }))), this.logicalBaseLayer.isZombie && this.logicalBaseLayer.getIsDie()) return;
            this.setInvincible(), this.floatingBloodMove(), this.logicalBaseLayer.getIsDie() || this.logicalBaseLayer.getIsMySelf() && !this.isCanAttackAniAfterPlayOtherAni && !this.logicalBaseLayer.isStartHuaBullet && !this.logicalBaseLayer.isSwitching || (this.logicalBaseLayer.getIsMoving() ? (this.logicalBaseLayer.getIsAttack() ? (0 != this.logicalBaseLayer.magazineBullet ? this.logicalBaseLayer.isStartHuaBullet && L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.RELOAD
            }) : this.logicalBaseLayer.isStartHuaBullet ? L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.RELOAD
            }) : L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.IDLE
            }), this.logicalBaseLayer.isCrouch ? L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.DUNXIA
            }) : this.isStartMoveAttackRandom ? this.logicalBaseLayer.isZombie ? L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN
            }) : this.moveAttackRandPosList.target1Finish || this.moveAttackRandPosList.target2Finish ? this.moveAttackRandPosList.target1Finish && !this.moveAttackRandPosList.target2Finish && L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN_RIGHT
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN_LEFT
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN
            })) : (this.logicalBaseLayer.isStartHuaBullet ? L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.RELOAD
            }) : L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.IDLE
            }), this.logicalBaseLayer.isCrouch ? L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.DUNXIA
            }) : this.isStartMoveAttackRandom ? this.logicalBaseLayer.isZombie ? L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN
            }) : this.moveAttackRandPosList.target1Finish || this.moveAttackRandPosList.target2Finish ? this.moveAttackRandPosList.target1Finish && !this.moveAttackRandPosList.target2Finish && L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN_RIGHT
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN_LEFT
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.RUN
            })), this.playFootSound()) : this.logicalBaseLayer.getIsAttack() ? (0 != this.logicalBaseLayer.magazineBullet ? this.logicalBaseLayer.isStartHuaBullet && L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.RELOAD
            }) : this.logicalBaseLayer.isStartHuaBullet ? L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.RELOAD
            }) : L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.IDLE
            }), this.logicalBaseLayer.isCrouch ? L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.DUNXIA
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.IDLE
            })) : (this.logicalBaseLayer.isStartHuaBullet ? L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.RELOAD
            }) : L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.IDLE
            }), this.logicalBaseLayer.isCrouch ? L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.DUNXIA
            }) : L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                name: he.IDLE
            })));
            let e = this;
            if (Mt.mode != Tt.BIOCHEMISTRY ? this.logicalBaseLayer.isZombie || (this.logicalBaseLayer.getIsMySelf() ? Rs.isWarmUp && this.logicalBaseLayer.revive(function() {
                e.setPos(e.logicalBaseLayer.getInitPos()), e.logicalBaseLayer.isStartHuaBullet ? L.notify(w.PLAY_UPPER_LIMB_ANI + e.eventId, {
                    name: he.RELOAD
                }) : L.notify(w.PLAY_UPPER_LIMB_ANI + e.eventId, {
                    name: he.IDLE
                }), L.notify(w.PLAY_THE_LEGS_ANI + e.eventId, {
                    name: he.IDLE
                });
            }) : this.logicalBaseLayer.revive(function() {
                e.setPos(e.logicalBaseLayer.getInitPos()), e.logicalBaseLayer.isStartHuaBullet ? L.notify(w.PLAY_UPPER_LIMB_ANI + e.eventId, {
                    name: he.RELOAD
                }) : L.notify(w.PLAY_UPPER_LIMB_ANI + e.eventId, {
                    name: he.IDLE
                }), L.notify(w.PLAY_THE_LEGS_ANI + e.eventId, {
                    name: he.IDLE
                });
            })) : this.logicalBaseLayer.getIsMySelf(), this.logicalBaseLayer.getIsDie()) this.logicalBaseLayer.getIsMySelf() && (kt.isCloseCharacterCtrl ? this.characterCtrl && this.characterCtrl.stop() : this.characterCtrl && this.characterCtrl.move(this.logicalBaseLayer.getMyOrientation())); else if (this.logicalBaseLayer.getIsMySelf()) if (kt.isCloseCharacterCtrl) if (this.characterCtrl) this.logicalBaseLayer.getIsMoving() ? this.characterCtrl.move(.7 * this.logicalBaseLayer.vecDir.x, .7 * this.logicalBaseLayer.vecDir.z) : this.characterCtrl.stop(); else {
                let e = .062 * Laya.timer.delta;
                this.fixedVector3Data.targetPos.x = this.getModelPosByFixedVector().x + this.logicalBaseLayer.getMyOrientation().x * e, 
                this.fixedVector3Data.targetPos.y = this.getModelPosByFixedVector().y + this.logicalBaseLayer.getMyOrientation().y * e, 
                this.fixedVector3Data.targetPos.z = this.getModelPosByFixedVector().z + this.logicalBaseLayer.getMyOrientation().z * e;
                let t = Gt.pathfinder.alongNavMesh(this.getModelPosByFixedVector(), this.navNode, this.fixedVector3Data.targetPos, this.fixedVector3Data.nextPos, Gt.zoneID, Gt.navGroup);
                this.navNode = t.node, this.baseData.targetPos.x = this.fixedVector3Data.nextPos.x, 
                this.baseData.targetPos.y = this.fixedVector3Data.nextPos.y, this.baseData.targetPos.z = this.fixedVector3Data.nextPos.z, 
                this.model.transform.position = this.baseData.targetPos, this._isCollise = t.isCollise;
            } else this.characterCtrl.move(this.logicalBaseLayer.getMyOrientation()); else {
                let e = .062 * Laya.timer.delta;
                this.fixedVector3Data.targetPos.x = this.getModelPosByFixedVector().x + this.logicalBaseLayer.getMyOrientation().x * e, 
                this.fixedVector3Data.targetPos.y = this.getModelPosByFixedVector().y + this.logicalBaseLayer.getMyOrientation().y * e, 
                this.fixedVector3Data.targetPos.z = this.getModelPosByFixedVector().z + this.logicalBaseLayer.getMyOrientation().z * e;
                let t = Gt.pathfinder.alongNavMesh(this.getModelPosByFixedVector(), this.navNode, this.fixedVector3Data.targetPos, this.fixedVector3Data.nextPos, Gt.zoneID, Gt.navGroup);
                this.navNode = t.node, this.baseData.targetPos.x = this.fixedVector3Data.nextPos.x, 
                this.baseData.targetPos.y = this.fixedVector3Data.nextPos.y, this.baseData.targetPos.z = this.fixedVector3Data.nextPos.z, 
                this.model.transform.position = this.baseData.targetPos, this._isCollise = t.isCollise;
            }
        }
        setAuxiliaryShooting() {
            this.logicalBaseLayer.getIsMySelf() && (console.log("主角是否扫描到：", this.sectorDetection()), 
            this.sectorDetection() && this.logicalBaseLayer.attackLogicalBaseLayer && console.log("扫描到的敌人：", this.logicalBaseLayer.attackLogicalBaseLayer.getRoleType(), this.logicalBaseLayer.attackLogicalBaseLayer.gameName));
        }
        setKillingSituation(e) {
            if (!Rs.isWarmUp && Mt.mode != Tt.BIOCHEMISTRY) return this.logicalBaseLayer.getRoleType() == Mr.TYPE_0 && (Rs.updateEnemyScore(), 
            Ba.targetKillSore - Rs.enemyKillScore != 5 && Ba.targetKillSore - Rs.enemyKillScore != 3 && Ba.targetKillSore - Rs.enemyKillScore != 1 || L.notify(w.MATCH_KILL, {
                type: Wr.ENEMY
            }), L.notify(w.KILL, {
                role: Mr.TYPE_1
            })), this.logicalBaseLayer.getRoleType() == Mr.TYPE_1 && (Rs.updateWeScore(), Ba.targetKillSore - Rs.ourKillScore != 5 && Ba.targetKillSore - Rs.ourKillScore != 3 && Ba.targetKillSore - Rs.ourKillScore != 1 || L.notify(w.MATCH_KILL, {
                type: Wr.FRIEND
            }), L.notify(w.KILL, {
                role: Mr.TYPE_0
            })), Rs.ourKillScore >= Ba.targetKillSore ? (console.log("我方胜利"), Rs.gameOver = !0, 
            void (Rs._isWin = !0)) : Rs.enemyKillScore >= Ba.targetKillSore ? (console.log("敌方胜利"), 
            Rs.gameOver = !0, void (Rs._isWin = !1)) : void 0;
        }
        setGamimgHead(e) {
            this.gamingHeadCtrl = e;
        }
        setGamingHeadState() {
            this.gamingHeadCtrl && this.gamingHeadCtrl.setState();
        }
        playHeadshot() {
            this.headshotCtrl || (this.headshotCtrl = new Na(), Bt.getFunctionViewCtrl(Er.GAME).addChild(this.headshotCtrl)), 
            this.headshotCtrl.playAni();
        }
        setGhostUICtrl() {
            if (!this.boxGhost) return;
            let e = this.boxGhost.getChildAt(0);
            e.y = 0, e.alpha = 1;
        }
        dieGhostUI() {
            if (!this.logicalBaseLayer.getIsDie()) {
                if (this.boxGhost) {
                    let e = this.boxGhost.getChildAt(0);
                    0 != e.alpha && (e.alpha = 0);
                }
                return;
            }
            if (!this.boxGhost) {
                this.boxGhost = new Laya.Box();
                let e = new Laya.Image(ul.FLOATING_UP_GHOST_UI);
                Bt.getFunctionViewCtrl(Er.GAME).addChild(this.boxGhost);
                let t = this.getModelPosByVector3();
                t.x += 1, t.y += 3;
                let i = Nt.getCurScene().getViewportPoint(t);
                this.boxGhost.x = i.x, this.boxGhost.y = i.y, this.boxGhost.addChild(e);
            }
            let e = this.boxGhost.getChildAt(0);
            if (e.alpha <= 0) return;
            let t = this.getModelPosByVector3();
            t.x += 1, t.y += 3;
            let i = Nt.getCurScene().getViewportPoint(t);
            this.boxGhost.x = i.x, this.boxGhost.y = i.y;
            let a = Laya.Vector3.distance(Ts.camera.transform.position, this.getModelPosByVector3());
            this.boxGhost.scaleX = this.boxGhost.scaleY = 1 / (1 * a / 2) * 10 <= 1 ? 1 / (1 * a / 2) * 10 : 1, 
            e.y--, e.alpha -= .015;
        }
        setInvincible() {
            if (this.logicalBaseLayer.isInvincible) {
                this.invincibleProCount -= Ce.gSysTimer.delta;
                let e = 320 - 320 * this.invincibleProCount / this.invincibleProCountMax;
                this.activeSeparation(!0), this.logicalBaseLayer.getIsMySelf() || this.shieldSp || (this.shieldSp = Ri.playShield({
                    parent: this.model
                }), this.shieldSp.transform.localPositionY = 1), this.logicalBaseLayer.getIsMySelf() && this.invincibleProCtrl.setPro(e), 
                this.invincibleProCount < 0 && (this.activeSeparation(!1), this.invincibleProCount = this.invincibleProCountMax, 
                this.logicalBaseLayer.getIsMySelf() && this.invincibleProCtrl.resetCtrl(), this.shieldSp && Ri.recycleEffect(this.shieldSp), 
                this.shieldSp = null, this.logicalBaseLayer.isInvincible = !1);
            }
        }
        openMirror() {
            Ts.camera && this.logicalBaseLayer.getIsMySelf();
        }
        init(e) {
            this.model = e, this.getAniCtrl();
        }
        update() {
            if (!Rs.gameOver) {
                if (this.fireRecycleCountDown > -1e3) if (this.fireRecycleCountDown -= Laya.timer.delta, 
                this.fireRecycleCountDown < 0) for (let e = 0; e < this.fireEffect.length; e++) {
                    const t = this.fireEffect[e];
                    if (t) {
                        if (!t.parent) continue;
                        let e = t.transform.localPosition;
                        e.x = -1e5, e.y = -1e5, e.z = -1e5, t.transform.localPosition = e;
                    }
                } else for (let e = 0; e < this.fireEffect.length; e++) {
                    const t = this.fireEffect[e];
                    if (t) {
                        if (!t.parent) continue;
                        let e = t.transform.localScale;
                        e.x += .02 * Laya.timer.delta, e.y += .02 * Laya.timer.delta, e.z += .02 * Laya.timer.delta, 
                        e.x > 1 && (e.x = 1, e.y = 1, e.z = 1), t.transform.localScale = e;
                    }
                }
                this.rayBox.updateTransfrom(), this.isJump && this.judgeIsGrounded() && (this.isJump = !1, 
                il.playEffect(ml.DROP)), this.setPosInMap();
            }
        }
        setAirDropArrow() {
            if (Mt.mode == Tt.SKILL_MODE) {
                this.arrowSp && (this.arrowSp.active = !1);
                for (let e = 0; e < na.instance.airDropList.length; e++) {
                    const t = na.instance.airDropList[e];
                    if (t.isActive && this.arrowSp) {
                        this.arrowSp && (this.arrowSp.active = !0), Pa.subtract(t.vecPos, this.model.transform.position, this.temVec3), 
                        Pa.normalize(this.temVec3, this.temVec3), q.Vector3.forward.x = 0, q.Vector3.forward.y = 0, 
                        q.Vector3.forward.z = 1, this.arrowSp.transform.localRotationEulerY = q.angle3(this.temVec3, q.Vector3.forward), 
                        Pa.dot(this.temVec3, q.Vector3.left) > 0 && (this.arrowSp.transform.localRotationEulerY = q.angle3(this.temVec3, q.Vector3.back) + 180, 
                        console.log(this.arrowSp.transform.localRotationEulerY));
                        break;
                    }
                }
            }
        }
        setPosInMap() {
            if (Mt.mode != Tt.SKILL_MODE) return;
            if (this.logicalBaseLayer.getIsMySelf()) return;
            if (!this.imgPoint) return;
            this.getIsDie() ? this.imgPoint.visible = !1 : this.imgPoint.visible = !0;
            let e = Bt.getFunctionViewCtrl(Er.GAME);
            if (!e) return;
            let t = e.imgMap;
            this.imgPoint.x = -this.getModelPosByVector3().x / 44 * t.width / 2 + t.width / 2, 
            this.imgPoint.y = -this.getModelPosByVector3().z / 46 * t.height / 2 + t.height / 2;
        }
        startRanomRotate() {
            if (this.randRotateType[_a.getResult(this.randRotateData)] == Ga.STATIC) return !1;
            if (!this.isAIStartRandomRotate) {
                this.isAIStartRandomRotate = !0, this.isStartDeviation = !0;
                let e = Ae.onlyOneRandomInt(-60, 60);
                this.bearing == Va.LEFT ? e = Math.abs(e) : this.bearing == Va.RIGHT && e > 0 && (e = -e), 
                this.rotateRange = this.model.transform.localRotationEulerY + e, this.bearing = e > 0 ? Va.RIGHT : Va.LEFT, 
                this.curAngle = this.model.transform.localRotationEulerY;
            }
            return !0;
        }
        toRandomRotate() {
            this.isAIStartRandomRotate && (this.isStartDeviation ? this.bearing == Va.LEFT ? this.rotateRange < this.model.transform.localRotationEulerY ? this.model.transform.localRotationEulerY -= 2 : this.isStartDeviation = !1 : this.rotateRange > this.model.transform.localRotationEulerY ? this.model.transform.localRotationEulerY += 2 : this.isStartDeviation = !1 : this.model.transform.localRotationEulerY != this.curAngle ? this.bearing == Va.LEFT ? this.model.transform.localRotationEulerY < this.curAngle ? this.model.transform.localRotationEulerY += 2 : this.isAIStartRandomRotate = !1 : this.model.transform.localRotationEulerY > this.curAngle ? this.model.transform.localRotationEulerY -= 2 : this.isAIStartRandomRotate = !1 : this.isAIStartRandomRotate = !1);
        }
        jump() {
            if (!this.logicalBaseLayer.getIsDie() && !this.logicalBaseLayer.isZombie && (this.logicalBaseLayer.getIsMySelf() || this.randJumpType[_a.getResult(this.randJumpData)] != Ua.STATIC)) if (this.characterCtrl) {
                if (this.isJump) return;
                this.logicalBaseLayer.getIsMySelf() && il.playEffect(ml.JUMP), this.isJump = !0, 
                kt.isCloseCharacterCtrl ? this.characterCtrl.jump(2.2) : this.characterCtrl.jump(this.baseData.tempJump);
            } else this.isStartJump || (this.flyUp = .2, this.flyDown = 0, this.isStartJump = !0);
        }
        toJump() {
            if (this.isStartJump && !this.characterCtrl) {
                L.notify(w.PLAY_THE_LEGS_ANI + this.eventId, {
                    name: he.JUMP
                });
                let e = this.model.getChildAt(0), t = .0555 * Laya.timer.delta;
                this.spriteHole && (this.spriteHole.transform.localScaleX = Math.min(.5, 1.3 - e.transform.localPositionY), 
                this.spriteHole.transform.localScaleZ = Math.min(.5, 1.3 - e.transform.localPositionY)), 
                this.flyUp > 0 ? (e.transform.localPositionY += this.flyUp * t, this.flyUp -= .01 * t) : e.transform.localPositionY > 0 ? (e.transform.localPositionY -= this.flyDown * t, 
                this.flyDown += .01 * t) : (this.spriteHole && (this.spriteHole.transform.localScaleX = 1.3, 
                this.spriteHole.transform.localScaleZ = 1.3), this.flyUp = .2 * t, this.flyDown = 0, 
                this.isStartJump = !1, e.transform.localPositionY = 0);
            }
        }
        moveAttackRandomPos() {
            if (!this.isStartMoveAttackRandom) {
                this.isStartMoveAttackRandom = !0, this.moveAttackRandPosList.onceToType = 0, this.moveAttackRandPosList.curPos.x = this.model.transform.position.x, 
                this.moveAttackRandPosList.curPos.y = this.model.transform.position.y, this.moveAttackRandPosList.curPos.z = this.model.transform.position.z, 
                this.moveAttackRandPosList.target1.x = 0, this.moveAttackRandPosList.target1.y = 0, 
                this.moveAttackRandPosList.target1.z = 0, this.moveAttackRandPosList.target2.x = 0, 
                this.moveAttackRandPosList.target2.y = 0, this.moveAttackRandPosList.target2.z = 0, 
                this.moveAttackRandPosList.tempPos1.x = 0, this.moveAttackRandPosList.tempPos1.y = 0, 
                this.moveAttackRandPosList.tempPos1.z = 0, this.moveAttackRandPosList.tempPos2.x = 0, 
                this.moveAttackRandPosList.tempPos2.y = 0, this.moveAttackRandPosList.tempPos2.z = 0, 
                this.moveAttackRandPosList.target1Finish = !1, this.moveAttackRandPosList.target2Finish = !1, 
                this.moveAttackRandPosList.isCollideFinish1 = !1, this.moveAttackRandPosList.isCollideFinish2 = !1, 
                this.moveAttackRandPosList.testCollideNum = 0, this.model.transform.getForward(this.baseData.forwardDir), 
                Laya.Vector3.scale(this.baseData.forwardDir, -1, this.baseData.forwardDir), this.model.transform.position.cloneTo(this.moveAttackRandPosList.curPos), 
                this.model.transform.position.cloneTo(this.baseData.curPos), this.baseData.curPos.x += this.baseData.forwardDir.x * Laya.timer.delta * .1, 
                this.baseData.curPos.z += this.baseData.forwardDir.z * Laya.timer.delta * .1;
                let e = this.baseData.curPos.x / this.baseData.curPos.z;
                Math.abs(this.model.transform.localRotationEulerY) >= 45 && Math.abs(this.model.transform.localRotationEulerY) <= 120 && (e = this.baseData.curPos.z / this.baseData.curPos.x);
                let t = -e, i = Ae.onlyOneRandomInt(3, 6);
                Ae.onlyOneRandomIntOrFloat(0, 1) > .5 && (i = -i), this.moveAttackRandPosList.onceToType = i > 0 ? 1 : 2;
                let a = t * i;
                this.moveAttackRandPosList.tempPos1.x = i, this.moveAttackRandPosList.tempPos1.z = a, 
                this.model.transform.position.cloneTo(this.moveAttackRandPosList.target1), this.moveAttackRandPosList.target1.x += this.moveAttackRandPosList.tempPos1.x, 
                this.moveAttackRandPosList.target1.z += this.moveAttackRandPosList.tempPos1.z, this.moveAttackRandPosList.target1.y = .5, 
                a = t * (i = -i), this.moveAttackRandPosList.tempPos2.x = i, this.moveAttackRandPosList.tempPos2.z = a, 
                this.model.transform.position.cloneTo(this.moveAttackRandPosList.target2), this.moveAttackRandPosList.target2.x += this.moveAttackRandPosList.tempPos2.x, 
                this.moveAttackRandPosList.target2.z += this.moveAttackRandPosList.tempPos2.z, this.moveAttackRandPosList.target2.y = .5;
            }
            this.toRandAttackMove();
        }
        toRandAttackMove() {
            if (this.isStartMoveAttackRandom) if (this.moveAttackRandPosList.target1Finish) {
                if (this.moveAttackRandPosList.target2Finish) this.moveAttackRandPosList.target1Finish && this.moveAttackRandPosList.target2Finish && this.toResetRandAttackData(), 
                this.moveAttackRandPosList.target1Finish = !1, this.moveAttackRandPosList.target2Finish = !1, 
                this.logicalBaseLayer.setMyOrientation(0, 0, 0); else if (this.moveAttackRandPosList.out2.x = 0, 
                this.moveAttackRandPosList.out2.y = 0, this.moveAttackRandPosList.out2.z = 0, this.moveAttackRandPosList.dis2.x = 0, 
                this.moveAttackRandPosList.dis2.y = 0, this.moveAttackRandPosList.dis2.z = 0, Laya.Vector3.subtract(this.moveAttackRandPosList.target2, this.model.transform.position, this.moveAttackRandPosList.out2), 
                Laya.Vector3.normalize(this.moveAttackRandPosList.out2, this.moveAttackRandPosList.out2), 
                Laya.Vector3.scale(this.moveAttackRandPosList.out2, .1, this.moveAttackRandPosList.out2), 
                this.moveAttackRandPosList.dis2.x = this.model.transform.position.x + this.moveAttackRandPosList.out2.x, 
                this.moveAttackRandPosList.dis2.y = this.model.transform.position.y + this.moveAttackRandPosList.out2.y, 
                this.moveAttackRandPosList.dis2.z = this.model.transform.position.z + this.moveAttackRandPosList.out2.z, 
                this.moveAttackRandPosList.out2.y = 0, Laya.Vector3.scale(this.moveAttackRandPosList.out2, .001, this.moveAttackRandPosList.out2), 
                this._isCollise && this.moveAttackRandPosList.testCollideNum++, this.logicalBaseLayer.setMyOrientation(this.moveAttackRandPosList.out2.x, this.moveAttackRandPosList.out2.y, this.moveAttackRandPosList.out2.z), 
                this.moveAttackRandPosList.testCollideNum >= 5 && (this.moveAttackRandPosList.target2Finish = !0, 
                this.moveAttackRandPosList.isCollideFinish2 = !1, this.logicalBaseLayer.setMyOrientation(0, 0, 0)), 
                Laya.Vector3.distanceSquared(this.moveAttackRandPosList.target2, this.moveAttackRandPosList.dis2) < .7 * .7) return this.moveAttackRandPosList.target2Finish = !0, 
                this.moveAttackRandPosList.isCollideFinish2 = !1, void this.logicalBaseLayer.setMyOrientation(0, 0, 0);
            } else {
                if (this.moveAttackRandPosList.out1.x = 0, this.moveAttackRandPosList.out1.y = 0, 
                this.moveAttackRandPosList.out1.z = 0, this.moveAttackRandPosList.dis1.x = 0, this.moveAttackRandPosList.dis1.y = 0, 
                this.moveAttackRandPosList.dis1.z = 0, Laya.Vector3.subtract(this.moveAttackRandPosList.target1, this.model.transform.position, this.moveAttackRandPosList.out1), 
                Laya.Vector3.normalize(this.moveAttackRandPosList.out1, this.moveAttackRandPosList.out1), 
                Laya.Vector3.scale(this.moveAttackRandPosList.out2, .1, this.moveAttackRandPosList.out2), 
                this.moveAttackRandPosList.dis1.x = this.model.transform.position.x + this.moveAttackRandPosList.out1.x, 
                this.moveAttackRandPosList.dis1.y = this.model.transform.position.y + this.moveAttackRandPosList.out1.y, 
                this.moveAttackRandPosList.dis1.z = this.model.transform.position.z + this.moveAttackRandPosList.out1.z, 
                this.moveAttackRandPosList.out1.y = 0, Laya.Vector3.scale(this.moveAttackRandPosList.out1, .001, this.moveAttackRandPosList.out1), 
                this.logicalBaseLayer.setMyOrientation(this.moveAttackRandPosList.out1.x, this.moveAttackRandPosList.out1.y, this.moveAttackRandPosList.out1.z), 
                Laya.Vector3.distanceSquared(this.moveAttackRandPosList.target1, this.moveAttackRandPosList.dis1) < .7 * .7) return this._isCollise = !1, 
                this.moveAttackRandPosList.target1Finish = !0, this.moveAttackRandPosList.isCollideFinish1 = !1, 
                this.moveAttackRandPosList.isCollideFinish2 = !1, void this.logicalBaseLayer.setMyOrientation(0, 0, 0);
                if (!this.moveAttackRandPosList.isCollideFinish2 && this._isCollise) return this._isCollise = !1, 
                this.moveAttackRandPosList.target1Finish = !0, this.moveAttackRandPosList.isCollideFinish1 = !0, 
                this.moveAttackRandPosList.isCollideFinish2 = !1, void this.logicalBaseLayer.setMyOrientation(0, 0, 0);
                if (Laya.Vector3.distanceSquared(this.model.transform.position, this.moveAttackRandPosList.target2) > 4 && this._isCollise) return this._isCollise = !1, 
                this.moveAttackRandPosList.target1Finish = !0, this.moveAttackRandPosList.isCollideFinish1 = !0, 
                void this.logicalBaseLayer.setMyOrientation(0, 0, 0);
            }
        }
        toResetRandAttackData() {
            this.isStartMoveAttackRandom = !1;
        }
        sectorDetectionByKnifeWar(e) {
            return !!e && (!!e.getPresentationBaseLayer() && (this.model.transform.getForward(this.baseData.forwardDir), 
            Pa.scale(this.baseData.forwardDir, -1, this.baseData.forwardDir), this.model.transform.position.cloneTo(this.baseData.curPos), 
            !e.getIsDie() && Pa.distanceSquared(this.getModelPosByVector3(), e.getPresentationBaseLayer().getModelPosByVector3()) < (this.logicalBaseLayer.getArmCtrl() ? this.logicalBaseLayer.getArmCtrl().getAttackDis() * this.logicalBaseLayer.getArmCtrl().getAttackDis() : 81)));
        }
        sectorDetection() {
            if (this.logicalBaseLayer.getIsDie()) return;
            if (!this.logicalBaseLayer.isZombie && 0 == this.logicalBaseLayer.bullets && 0 == this.logicalBaseLayer.magazineBullet) return !1;
            this.model.transform.getForward(this.baseData.forwardDir), Pa.scale(this.baseData.forwardDir, -1, this.baseData.forwardDir), 
            this.model.transform.position.cloneTo(this.baseData.curPos);
            let e = null, t = null;
            for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                let i = Rs.logicalBaseLayer[e];
                if (i.getIsDie() && i.killerLogicalBaseLayer && (i.killerLogicalBaseLayer = null), 
                i.getRoleType() != this.logicalBaseLayer.getRoleType() && !i.getIsDie() && !i.isInvincible) {
                    let e = i.getPresentationBaseLayer().getModelPosByVector3(), a = this.getModelPosByVector3();
                    if (Pa.subtract(e, a, this.baseData.vecTmp), 0 == this.baseData.vecTmp.x && 0 == this.baseData.vecTmp.y) {
                        t = i;
                        break;
                    }
                    Pa.dot(this.baseData.vecTmp, this.baseData.forwardDir) / (Pa.scalarLength(this.baseData.vecTmp) * Pa.scalarLength(this.baseData.forwardDir)) > this.cosValue && (null == t ? t = i : Pa.distanceSquared(a, t.getPresentationBaseLayer().getModelPosByVector3()) > Pa.distanceSquared(a, e) && (t = i));
                }
            }
            return null == (e = t) ? (this.logicalBaseLayer.attackLogicalBaseLayer = null, !1) : this.lineDetection(e) ? (this.logicalBaseLayer.attackLogicalBaseLayer = e, 
            e.killerLogicalBaseLayer = this.logicalBaseLayer, !0) : (this.logicalBaseLayer.attackLogicalBaseLayer = null, 
            e.killerLogicalBaseLayer && (e.killerLogicalBaseLayer = null), !1);
        }
        startPlayDoubleKill() {
            this.doubleKillItemCtrl || (this.doubleKillItemCtrl = new Ta(), Nt.getCurScene().addChild(this.doubleKillItemCtrl)), 
            this.doubleKillItemCtrl.start(this.logicalBaseLayer.doubleKill);
        }
        closeDoubleKill() {
            this.doubleKillItemCtrl && this.doubleKillItemCtrl.close();
        }
        getOnceChild() {
            return this.model.getChildAt(0);
        }
        lineDetection(e) {
            let t = this.getModelPosByVector3(), i = e.getPresentationBaseLayer().getModelPosByVector3();
            t.cloneTo(this._ray.origin), Laya.Vector3.subtract(i, t, this._ray.direction), this._ray.direction.y += 1, 
            this._ray.origin.y += 1;
            let a = Pa.distance(t, i);
            return this._ray.direction.x /= a, this._ray.direction.y /= a, this._ray.direction.z /= a, 
            !this.isCollidingsRayAndWall(this._ray, a);
        }
        getBomb() {
            if (this.logicalBaseLayer.magazineBullet >= 0 && !this.isTouchBomb) if (this.isTouchBomb = !0, 
            this.cacheBombSp) this.cacheBombSp.addComponentIntance(new Oa(this.logicalBaseLayer)), 
            this.bombSp = this.cacheBombSp; else {
                let e = this.logicalBaseLayer.getArmCtrl().switchArm();
                e.addComponentIntance(new Oa(this.logicalBaseLayer)), this.bombSp = e;
            }
        }
        throwBomb() {
            L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.ATTACK
            }), this.isThrowing = !0, Laya.timer.once(600, this, () => {
                if (this.isThrowing = !1, this.isTouchBomb = !1, this.logicalBaseLayer.getArmCtrl() && !(this.logicalBaseLayer.getArmCtrl() && 8 != this.logicalBaseLayer.getArmCtrl().getType() || this.logicalBaseLayer.magazineBullet <= 0 || this.isThrowBomb)) {
                    if (0 != this.logicalBaseLayer.bullets ? (this.logicalBaseLayer.isInfiniteBomb ? this.isTouchBomb = !0 : this.logicalBaseLayer.bullets--, 
                    this.logicalBaseLayer.magazineBullet = 1, this.logicalBaseLayer.getArmCtrl().curMagazineBullet = this.logicalBaseLayer.magazineBullet, 
                    this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets) : (this.logicalBaseLayer.bullets = 0, 
                    this.logicalBaseLayer.magazineBullet = 0, this.logicalBaseLayer.getArmCtrl().curMagazineBullet = this.logicalBaseLayer.magazineBullet, 
                    this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets, this.isThrowBomb = !0), 
                    this.logicalBaseLayer.isInfiniteBomb ? (this.logicalBaseLayer.bullets = 1, this.logicalBaseLayer.magazineBullet = 1, 
                    this.logicalBaseLayer.getArmCtrl().curMagazineBullet = this.logicalBaseLayer.magazineBullet, 
                    this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets) : (this.logicalBaseLayer.bullets = 0, 
                    this.logicalBaseLayer.magazineBullet = 0, this.logicalBaseLayer.getArmCtrl().curMagazineBullet = this.logicalBaseLayer.magazineBullet, 
                    this.logicalBaseLayer.getArmCtrl().curBullets = this.logicalBaseLayer.bullets), 
                    this.isThrowBomb = !0, !this.bombSp.parent) if (this.cacheBombSp && this.cacheBombSp.parent) this.cacheBombSp.addComponentIntance(new Oa(this.logicalBaseLayer)), 
                    this.bombSp = this.cacheBombSp; else {
                        let e = this.logicalBaseLayer.getArmCtrl().switchArm();
                        e.addComponentIntance(new Oa(this.logicalBaseLayer)), this.bombSp = e;
                    }
                    let e = this.bombSp;
                    e.getComponent(Oa).isThrow = !0;
                    let t = e.transform.position.clone();
                    if (Ts.scene3d.addChild(e), e.transform.position = t, this.logicalBaseLayer.getPresentationBaseLayer().getOnceChild().transform.getForward(q.Vector3.forward), 
                    Laya.Vector3.scale(q.Vector3.forward, 17, q.Vector3.forward), q.Vector3.forward.x *= -1, 
                    q.Vector3.forward.z *= -1, q.Vector3.forward.y = this.logicalBaseLayer.getPresentationBaseLayer().getOnceChild().transform.rotationEuler.x - 12, 
                    q.Vector3.forward.y *= -1, console.log("CommonUtil.Vector3.forward:", q.Vector3.forward), 
                    this.linearVelocity.x = .3 * q.Vector3.forward.x, this.linearVelocity.y = .3 * q.Vector3.forward.y, 
                    this.linearVelocity.z = .3 * q.Vector3.forward.z, e.addComponent(fa).setVelocityDir(this.linearVelocity), 
                    L.notify(w.REFRESH_MAIN_ARM), this.logicalBaseLayer.isInfiniteBomb ? Laya.timer.once(1e3, this, () => {
                        this.isThrowBomb = !1, this.isTouchBomb = !1, this.getBomb();
                    }) : (this.logicalBaseLayer.switchArm(), Laya.timer.once(1e3, this, () => {
                        this.isThrowBomb = !1;
                    })), this.logicalBaseLayer.getIsMySelf()) {
                        Rs.destoryZDArm();
                        let e = {
                            index: 1e12,
                            icon: ""
                        };
                        for (let t = 0; t < this.logicalBaseLayer.armCtrlList.length; t++) for (let i = 0; i < Rs.curFRArmList.length; i++) t != Rs.curFRArmList[i].index && (e.index = t, 
                        e.icon = this.logicalBaseLayer.armCtrlList[t].getIcon());
                        Rs.pushZDArm(e.index, e.icon);
                    }
                }
            });
        }
        createBombModel() {
            if (!this.logicalBaseLayer.getArmCtrl()) return;
            let e = this.logicalBaseLayer.getArmCtrl().switchArm();
            e.addComponentIntance(new Oa(this.logicalBaseLayer)), this.cacheBombSp = e;
        }
        resetBomb() {}
        AIToThrowTheArm() {
            if (Mt.mode == Tt.ONEVSONEMODE && !this.logicalBaseLayer.getIsMySelf() && 0 != this.logicalBaseLayer.armCtrlList.length) {
                if (this.throwTheArmCount -= Ce.gSysTimer.delta, this.logicalBaseLayer.getArmCtrl() && 0 == this.logicalBaseLayer.bullets) return this.throwTheArmCount = Ae.onlyOneRandomInt(12e3, 2e4), 
                void this.logicalBaseLayer.removeTheGun();
                this.throwTheArmCount < 0 && (this.throwTheArmCount = Ae.onlyOneRandomInt(12e3, 2e4), 
                this.logicalBaseLayer.removeTheGun());
            }
        }
        modelSink(e) {
            Rs.gameOver || (Laya.Tween.to(this.getOnceChild().transform, {
                localPositionY: this.getOnceChild().transform.localPositionY - 2
            }, 200, null, Laya.Handler.create(this, () => {
                Rs.gameOver || this.model && this.model.parent && (this.model.active = !1);
            }), 3e3), Laya.timer.once(5e3, this, () => {
                Rs.gameOver || e();
            }));
        }
        setloatingBlood(e) {
            if (hl.isReviewVersion()) return;
            let t = null;
            for (let e = 0; e < this.floatingBloodList.length; e++) {
                let i = this.floatingBloodList[e];
                if (!i.isPlaying) {
                    let e = this.getModelPosByVector3(), a = Laya.Vector3.distance(Ts.camera.transform.position, this.getModelPosByVector3());
                    e.x += a > 10 ? 2 : 0, e.y += a > 10 ? 4.5 : 3;
                    let s = Nt.getCurScene().getViewportPoint(e);
                    s.w > .1 && (i.x = s.x, i.y = s.y, i.scaleX = i.scaleY = 1 / (1 * a / 2) * 10 <= 1 ? 1 / (1 * a / 2) * 10 : 1), 
                    t = i;
                    break;
                }
            }
            if (!t) {
                t = new Ra(), Bt.getFunctionViewCtrl(Er.GAME).addChild(t);
                let e = this.getModelPosByVector3(), i = Laya.Vector3.distance(Ts.camera.transform.position, this.getModelPosByVector3());
                e.x += i > 10 ? 2 : 0, e.y += i > 10 ? 3.5 : 3;
                let a = Nt.getCurScene().getViewportPoint(e);
                a.w > .1 && (t.x = a.x, t.y = a.y, t.scaleX = t.scaleY = 1 / (1 * i / 2) * 10 <= 1 ? 1 / (1 * i / 2) * 10 : 1), 
                this.floatingBloodList.push(t);
            }
            t.play(e);
        }
        floatingBloodMove() {
            let e = this.getModelPosByVector3(), t = Laya.Vector3.distance(Ts.camera.transform.position, this.getModelPosByVector3());
            e.x += t > 10 ? 2 : 0, e.y += t > 10 ? 3.5 : 3;
            for (let i = 0; i < this.floatingBloodList.length; i++) {
                let a = this.floatingBloodList[i];
                if (a.isPlaying) {
                    let i = Nt.getCurScene().getViewportPoint(e);
                    i.w > .1 && (a.x = i.x, a.y = i.y, a.scaleX = a.scaleY = 1 / (1 * t / 2) * 10 <= 1 ? 1 / (1 * t / 2) * 10 : 1);
                }
            }
        }
        setWaitingforrescueViewCtrl() {
            if (Mt.mode != Tt.BIOCHEMISTRY) return;
            this.waitingforrescueViewCtrl || (this.waitingforrescueViewCtrl = new ka(), Bt.getFunctionViewCtrl(Er.GAME).addChild(this.waitingforrescueViewCtrl));
            let e = this.getModelPosByVector3();
            e.y += 3, e.x += 2;
            let t = Nt.getCurScene().getViewportPoint(e);
            if (t.w > .1) {
                this.waitingforrescueViewCtrl.x = t.x, this.waitingforrescueViewCtrl.y = t.y;
                let e = Laya.Vector3.distance(Ts.camera.transform.position, this.getModelPosByVector3());
                this.waitingforrescueViewCtrl.scaleX = this.waitingforrescueViewCtrl.scaleY = 1 / (1 * e / 2) * 10 <= 1 ? 1 / (1 * e / 2) * 10 : 1;
            }
        }
        setVisibleWaitingforrescueViewCtrl(e) {
            Mt.mode == Tt.BIOCHEMISTRY && this.waitingforrescueViewCtrl && (this.waitingforrescueViewCtrl.visible = e);
        }
        zombieModeTeamDie() {
            if (Mt.mode == Tt.BIOCHEMISTRY && !this.logicalBaseLayer.isZombie && !this.logicalBaseLayer.getIsMySelf()) if (this.logicalBaseLayer.dieRealFromZombie) this.setVisibleWaitingforrescueViewCtrl(!1); else {
                if (!this.logicalBaseLayer.getIsDie()) return this.rescuingSp && (this.rescuingSp.active = !1), 
                void this.setVisibleWaitingforrescueViewCtrl(!1);
                if (this.lifeParentTran && this.lifeParentTran.owner.active && (this.lifeParentTran.owner.active = !1), 
                this.waitingCount -= Ce.gSysTimer.delta, this.setResueDownCountDown(), this.waitingCount < 0) return this.rescuingSp && (this.rescuingSp.active = !1), 
                this.logicalBaseLayer.dieRealFromZombie = !0, this.setWaitingforrescueViewCtrl(), 
                void this.setVisibleWaitingforrescueViewCtrl(!1);
                this && this.getModel() && (Pa.distanceSquared(this.getModelPosByVector3(), Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3()) > 25 ? (this.isRescuing = !1, 
                this.isInterrupt = !1, this.setWaitingforrescueViewCtrl(), this.setVisibleWaitingforrescueViewCtrl(!0)) : this.isInterrupt ? (this.setWaitingforrescueViewCtrl(), 
                this.setVisibleWaitingforrescueViewCtrl(!0)) : (this.setWaitingforrescueViewCtrl(), 
                this.setVisibleWaitingforrescueViewCtrl(!1)));
            }
        }
        setResueDownCountDown() {
            if (!this.rescuingSp) {
                let e = xe.getRes(ul.SKIN_PREFEB).getChildByName("life1");
                this.rescuingSp = Laya.Sprite3D.instantiate(e, this.getOnceChild()), this.rescuingSp.transform.localPosition = new Laya.Vector3(0, 3.25, 0), 
                this.rescuingSp.name = "resueSp";
            }
            this.rescuingSp.active = !0, this.rescuingSp.transform.lookAt(Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3(), q.Vector3.up, !1), 
            this.rescuingSp.getChildAt(1).transform.localScaleX = this.waitingCount >= 0 ? this.waitingCount / 3e4 : 0;
        }
        setAnimatorDelay(e) {
            this.aniCtrl.lowUpdateDelty = e, this.separationAniCtrl && (this.separationAniCtrl.lowUpdateDelty = e);
        }
        initRayCollider() {
            let e = [];
            q.getAllChildrenByName(this.model, Wa.BOX, e), this.rayBox = new Ye(e[0], !1);
            let t = [];
            q.getAllChildrenByName(this.model, Wa.BODY, t), this.rayBody = new Ye(t[0], !1);
            let i = [];
            q.getAllChildrenByName(this.model, Wa.HEAD, i), this.rayHead = new Ye(i[0], !1);
            let a = [];
            q.getAllChildrenByName(this.model, Wa.AIM, a), this.rayAim = new Ye(a[0], !1);
        }
        getIntersectsRayAndEnemy(e, t = !0) {
            let i = Laya.MathUtils3D.MaxValue, a = null;
            for (let t = 0, s = Rs.logicalBaseLayer.length; t < s; t++) {
                let s = Rs.logicalBaseLayer[t];
                if (this.logicalBaseLayer.getRoleType() != s.getRoleType() && !s.getIsDie()) {
                    let t = s.getPresentationBaseLayer(), n = Laya.CollisionUtils.intersectsRayAndBoxRD(e, t.rayBox.boundingBox);
                    n > 0 && n < i && (a = t, i = n);
                }
            }
            if (a && t) {
                let t = [];
                fe.getOCTree().getCollidingWithRayWithLayer(e, t, i, -2);
                for (let i = 0, a = t.length; i < a; i++) {
                    if (t[i].intersectsRay(e, this.hitPoint) > 0) return null;
                }
            }
            return a;
        }
        getIntersectsRayAndEnemyExact(e, t, i = !0) {
            let a = this.getIntersectsRayAndEnemy(e, i);
            if (a) {
                if (a.rayHead.updateTransfrom(), Laya.CollisionUtils.intersectsRayAndBoxRP(e, a.rayBody.boundingBox, this.hitPoint) > 0) return this.myHitResult.collider = a.rayHead, 
                this.myHitResult.succeeded = !0, Rs.hitLocation = ae.HEAD, this.hitPoint1.x = this.hitPoint.x, 
                this.hitPoint1.y = this.hitPoint.y, this.hitPoint1.z = this.hitPoint.z, !0;
                if (a.rayBody.updateTransfrom(), Laya.CollisionUtils.intersectsRayAndBoxRP(e, a.rayBody.boundingBox, this.hitPoint) > 0) {
                    this.myHitResult.collider = a.rayBody, this.myHitResult.succeeded = !0;
                    let e = a.rayBody.owner.transform.position, t = e.y + .2, i = e.y + .6;
                    return this.hitPoint.y > i ? Rs.hitLocation = ae.ARM : this.hitPoint.y > t ? Rs.hitLocation = ae.BODY : Rs.hitLocation = ae.LEG, 
                    this.hitPoint1.x = this.hitPoint.x, this.hitPoint1.y = this.hitPoint.y, this.hitPoint1.z = this.hitPoint.z, 
                    !0;
                }
                return this.myHitResult.succeeded = !1, this.myHitResult.collider = null, !1;
            }
            return this.myHitResult.succeeded = !1, this.myHitResult.collider = null, !1;
        }
        getIntersectsRayAndEnemyAim(e, t = !0) {
            let i = Laya.MathUtils3D.MaxValue, a = null;
            for (let t = 0, s = Rs.logicalBaseLayer.length; t < s; t++) {
                let s = Rs.logicalBaseLayer[t];
                if (this.logicalBaseLayer.getRoleType() != s.getRoleType() && !s.getIsDie()) {
                    let t = s.getPresentationBaseLayer();
                    if (!t.logicalBaseLayer.getIsDie()) {
                        t.rayAim.updateTransfrom();
                        let s = Laya.CollisionUtils.intersectsRayAndBoxRD(e, t.rayAim.boundingBox);
                        s > 0 && s < i && (a = t, i = s);
                    }
                }
            }
            if (a && t) {
                let t = [];
                fe.getOCTree().getCollidingWithRayWithLayer(e, t, i, -2);
                for (let i = 0, a = t.length; i < a; i++) {
                    if (t[i].intersectsRay(e, this.hitPoint) > 0) return null;
                }
            }
            return a;
        }
        isCollidingsRayAndWall(e, t) {
            let i = [];
            fe.getOCTree().getCollidingWithRayWithLayer(e, i, t, -2);
            for (let t = 0, a = i.length; t < a; t++) {
                if (i[t].intersectsRay(e, this.hitPoint) > 0) return !0;
            }
            return !1;
        }
        isCollidingsRayAndWallNear(e, t) {
            let i = [];
            fe.getOCTree().getCollidingWithRayWithLayer(e, i, t, -2);
            let a = 11111, s = 0;
            for (let t = 0, n = i.length; t < n; t++) {
                let n = i[t];
                if (n) {
                    let i = n.intersectsRay(e, this.hitPoint);
                    i > 0 && i < a && (a = Number(i), s = t);
                }
            }
            return !!(i[s] && i[s].intersectsRay(e, this.hitPoint) > 0);
        }
        clean() {
            Laya.timer.clearAll(this), this.unregisterEvent(), this.doubleKillItemCtrl && this.doubleKillItemCtrl.destroy(), 
            this.gamingHeadCtrl && this.gamingHeadCtrl.destroy(), this.headshotCtrl && this.headshotCtrl.destroy(), 
            this.boxGhost && this.boxGhost.destroy(), this.invincibleProCtrl && this.invincibleProCtrl.destroy(), 
            this.aniCtrl = null, this.bombEffectPos = null, this.buoy = null, this.eventId = null, 
            this.characterCtrl && this.characterCtrl.destroy(), this.characterCtrl = null, this.point = null, 
            this._ray = null, this.myHitResult = null, this.perAttackTime = null, this.upperlimbName = null, 
            this.thelegsName = null, this.boxGhost = null, this.headshotCtrl = null, this.gamingHeadCtrl = null, 
            this.invincibleProCtrl = null, this.invincibleProCount = null, this.invincibleProCountMax = null, 
            this.shieldSp = null, this.isCanPlayAttackAni = null, this.isStartJump = null, this.isStartPlayAttackAni = null, 
            this.attackDownCount = null, this.navNode = null, this._isCollise = null, this.flyUp = null, 
            this.flyDown = null;
            for (let e = 0; e < this.fireEffect.length; e++) {
                const t = this.fireEffect[e];
                t && Ri.recycleEffect(t);
            }
            this.fireEffect = [], this.fireRecycleCountDown = null, this.vecShtoPos = null, 
            this.vecShotEndPos = null, this.muzzleTran = null, this.isTouchBomb = null, this.isThrowBomb = null, 
            this.bombSp && this.bombSp.destroy(), this.cacheBombSp && this.cacheBombSp.destroy(), 
            this.gravity = null, this.mass = null, this.linearVelocity = null, this.bombSp = null, 
            this.cacheBombSp = null, this.doubleKillItemCtrl = null, this.model = null, this.floatingBloodList = null;
        }
        getIsDie() {
            return this.logicalBaseLayer.getIsDie();
        }
        playFootSound() {
            if (this.isFootSound) return;
            this.isFootSound = !0;
            let e = 772;
            this.footSoundIndex % ml.FOOT.length == 1 && (e = 872), Laya.timer.once(e, this, () => {
                this.isFootSound = !1;
            }), il.playEffect3D(ml.FOOT[this.footSoundIndex % ml.FOOT.length], this.getModelPosByVector3()), 
            this.footSoundIndex += 1;
        }
        closeMark() {
            if (this.logicalBaseLayer.getRoleType() == Mr.TYPE_1) {
                q.findChildByName(this.model, "jiaobiao").active = !1;
            }
        }
        openMark() {
            if (this.logicalBaseLayer.getRoleType() == Mr.TYPE_1) {
                q.findChildByName(this.model, "jiaobiao").active = !0;
            }
        }
        showOtherArmEffect() {
            this.otherArmSp && (this.otherArmSp.active = !0);
        }
        hideOtherArmEffect() {
            this.otherArmSp && (this.otherArmSp.active = !1);
        }
        camreaShake(e, t = .15) {
            let i = Nt.getCurScene().cameraMoveCtrl;
            i && i.shake(e, t);
        }
        playFireEffect() {}
    }
    Ya.sound3dCount = 0;
    var Xa = Laya.Vector3, Ka = Laya.Quaternion;
    class za {
        constructor(e = !1, t, i, a = 1e3, s = !1) {
            if (this.eventId = null, this.speed = 0, this.initPos = new Xa(), this.myOrientation = new Xa(), 
            this.isDie = !1, this.eulerAngle = new Xa(), this.rotatingQuaternion = new Ka(), 
            this.oldX = 0, this.oldY = null, this.isMoving = !1, this.HP = 100, this.maxHP = 100, 
            this.curArmor = 100, this.maxArmor = 100, this.isTouchAttack = !1, this.isAttack = !1, 
            this._isMySelf = !1, this.presentationBaseLayer = null, this.armCtrl = null, this.paths = null, 
            this.attackLogicalBaseLayer = null, this.killerLogicalBaseLayer = null, this.magazineBullet = 0, 
            this.bullets = 0, this.isStartHuaBullet = !1, this.isRevive = !1, this.isCrouch = !1, 
            this.isAutoAttack = !0, this.isFirstGun = !0, this.gameName = "精英", this.isInvincible = !1, 
            this.isStartAttack = !1, this.isOpenMioing = !1, this.armCtrlList = [], this.playerKillCount = 0, 
            this.playerBeKillCount = 0, this.score = 0, this.head = "", this.doubleHit = 0, 
            this.intoID = 0, this.isResetSearched = !1, this.curPointCtrl = null, this.skinType = 1, 
            this.doubleKill = 0, this.isResetDoubleKill = !1, this.doubleKillTime = 1e4, this.maxDoubleKill = 0, 
            this.isStartDoubleKill = !1, this.knifePropList = [], this.curKnifeProp = null, 
            this.isZombie = !1, this.isGetBombLast = !1, this.dieRealFromZombie = !1, this.freeReviveNum = 3, 
            this.vecDir = new Xa(), this.aimAssistCount = 2e3, this.curSkin = "001", this.doubleClasses = 1, 
            this.headShotHit = 0, this.headShotClasses = 1, this.isStartHeadShotDoubleKill = !1, 
            this.headKillTime = 1e4, this.temV3 = new Xa(), this.isSwitching = !1, this.isStartSwitchCount = 750, 
            this.randID = null, this.tar = 3, this.isInfiniteBomb = !1, this.testV = new Laya.Quaternion(), 
            i.transform.localRotationEuler = new Laya.Vector3(0, 0, 0), e || (this.speed = 1e-6, 
            this.isAutoAttack = !0), this.intoID = a, this.eventId = Laya.Utils.getGID(), this.curSkin = Rs.drSkinList[this.intoID] ? Rs.drSkinList[this.intoID] : "001", 
            e) this.gameName = "我", this.skinType = Be.getDataByKey(tl.getInstance().getSelectRoleSkin()).camp; else {
                let e = Ae.onlyOneRandomInt(0, Si.length - 1);
                if (Si[e]) this.gameName = Si[e].nick, this.head = Si[e].avatar; else {
                    let e = Ae.onlyOneRandomInt(0, this.cacheAvatar().length - 1);
                    this.gameName = this.cacheAvatar()[e].nick, this.head = this.cacheAvatar()[e].avatar;
                }
            }
            this.isZombie = s, this._isMySelf = e, this.roleType = t, this.isStartHuaBullet = !1, 
            this.isZombie ? (this.HP = 700, this.maxHP = 700) : this._isMySelf && (this.HP = 100 + Math.floor(100 * Ti.hpGain / 100), 
            this.maxHP = 100 + Math.floor(100 * Ti.hpGain / 100)), Rs.addLogicalBaseLayer(this), 
            this.setInitPos(i.transform.position.clone()), this.presentationBaseLayer = new Ya(this.eventId, i, this), 
            this.armsCtrl(), this.addNameAndHead(), tl.getInstance().isNew && Ts.gameNum <= 3 && (this.freeReviveNum = 16777215);
        }
        cacheAvatar() {
            return [ {
                id: 1,
                avatar: "sub1/avatar/i1.jpg",
                nick: "逆光",
                type: 1
            }, {
                id: 2,
                avatar: "sub1/avatar/i2.jpg",
                nick: "暖风昔人",
                type: 1
            }, {
                id: 3,
                avatar: "sub1/avatar/i3.jpg",
                nick: "柠檬",
                type: 1
            }, {
                id: 4,
                avatar: "sub1/avatar/i4.jpg",
                nick: "格子的夏天",
                type: 1
            }, {
                id: 5,
                avatar: "sub1/avatar/i5.jpg",
                nick: "冰雨忧蓝",
                type: 1
            }, {
                id: 6,
                avatar: "sub1/avatar/i6.jpg",
                nick: "何以心动",
                type: 1
            }, {
                id: 7,
                avatar: "sub1/avatar/i7.jpg",
                nick: "眷恋",
                type: 1
            }, {
                id: 8,
                avatar: "sub1/avatar/i8.jpg",
                nick: "琼窗梦回",
                type: 1
            }, {
                id: 9,
                avatar: "sub1/avatar/i9.jpg",
                nick: "紫竹語嫣",
                type: 1
            }, {
                id: 10,
                avatar: "sub1/avatar/i10.jpg",
                nick: "终陌。",
                type: 1
            }, {
                id: 11,
                avatar: "sub1/avatar/i11.jpg",
                nick: "柒月。",
                type: 1
            }, {
                id: 12,
                avatar: "sub1/avatar/i12.jpg",
                nick: "三分注定",
                type: 1
            }, {
                id: 13,
                avatar: "sub1/avatar/i13.jpg",
                nick: "七分饶幸",
                type: 1
            }, {
                id: 14,
                avatar: "sub1/avatar/i14.jpg",
                nick: "琉璃梦幻",
                type: 1
            }, {
                id: 15,
                avatar: "sub1/avatar/i15.jpg",
                nick: "让我眼熟你.",
                type: 1
            }, {
                id: 16,
                avatar: "sub1/avatar/i16.jpg",
                nick: "傲娇萝莉攻",
                type: 1
            }, {
                id: 17,
                avatar: "sub1/avatar/i17.jpg",
                nick: "一笑百媚生",
                type: 1
            }, {
                id: 18,
                avatar: "sub1/avatar/i18.jpg",
                nick: "yoyo",
                type: 1
            }, {
                id: 19,
                avatar: "sub1/avatar/i19.jpg",
                nick: "厌世.",
                type: 1
            }, {
                id: 20,
                avatar: "sub1/avatar/i20.jpg",
                nick: "闲身",
                type: 1
            }, {
                id: 21,
                avatar: "sub1/avatar/i21.jpg",
                nick: "好甜",
                type: 1
            }, {
                id: 22,
                avatar: "sub1/avatar/i22.jpg",
                nick: "服软",
                type: 1
            }, {
                id: 23,
                avatar: "sub1/avatar/i23.jpg",
                nick: "矫情",
                type: 1
            }, {
                id: 24,
                avatar: "sub1/avatar/i24.jpg",
                nick: "人皮目录",
                type: 1
            }, {
                id: 25,
                avatar: "sub1/avatar/i25.jpg",
                nick: "水晶透心",
                type: 1
            }, {
                id: 26,
                avatar: "sub1/avatar/i26.jpg",
                nick: "海螺姑娘",
                type: 1
            }, {
                id: 27,
                avatar: "sub1/avatar/i27.jpg",
                nick: "懵逼小萝莉",
                type: 1
            }, {
                id: 28,
                avatar: "sub1/avatar/i28.jpg",
                nick: "无字情书",
                type: 1
            }, {
                id: 29,
                avatar: "sub1/avatar/i29.jpg",
                nick: "一世浮沉",
                type: 1
            }, {
                id: 30,
                avatar: "sub1/avatar/i30.jpg",
                nick: "与君绝",
                type: 1
            }, {
                id: 31,
                avatar: "sub1/avatar/i31.jpg",
                nick: "画骨i",
                type: 1
            }, {
                id: 32,
                avatar: "sub1/avatar/i32.jpg",
                nick: "初心",
                type: 1
            }, {
                id: 33,
                avatar: "sub1/avatar/i33.jpg",
                nick: "浪漫人生路",
                type: 2
            }, {
                id: 34,
                avatar: "sub1/avatar/i34.jpg",
                nick: "倾听者",
                type: 2
            }, {
                id: 35,
                avatar: "sub1/avatar/i35.jpg",
                nick: "荒人说梦",
                type: 2
            }, {
                id: 36,
                avatar: "sub1/avatar/i36.jpg",
                nick: "川水往事",
                type: 2
            }, {
                id: 37,
                avatar: "sub1/avatar/i37.jpg",
                nick: "羁客",
                type: 2
            } ];
        }
        addNameAndHead() {
            if (this._isMySelf) hl.platform == v.WEB_4399 && (this.head = "sub1/ui/common/img_4399_1.png"); else {
                if (this.roleType == Mr.TYPE_0) {
                    let e = Rs.outDataList[this.intoID];
                    if (e) e.isUse || (e.isUse = !0, this.head = e.data.avatar, this.gameName = e.data.nick); else {
                        let e = Ae.onlyOneRandomInt(0, Si.length - 1);
                        Si[e] && (this.head = Si[e].avatar, this.gameName = Si[e].nick);
                    }
                } else if (this.roleType == Mr.TYPE_1) {
                    let e = Rs.enemyDataList[this.intoID];
                    if (e) e.isUse || (e.isUse = !0, this.head = e.data.avatar, this.gameName = e.data.nick); else {
                        let e = Ae.onlyOneRandomInt(0, Si.length - 1);
                        Si[e] && (this.head = Si[e].avatar, this.gameName = Si[e].nick);
                    }
                }
                hl.platform == v.WEB_4399 && (this.gameName = "4399玩家" + Laya.Utils.getGID(), this.head = "sub1/ui/common/img_4399_" + Math.floor(P.random(4, 1)).toString() + ".png");
            }
        }
        init() {
            this.magazineBullet = this.armCtrl.getMagazineBullet(), this.bullets = this.armCtrl.getBullets();
        }
        getEventID() {
            return this.eventId;
        }
        setInitPos(e) {
            this.initPos = e;
        }
        getInitPos() {
            if (this.presentationBaseLayer) return Mt.mode == Tt.ONEVSONEMODE ? this.roleType == Mr.TYPE_0 ? Za.rolePos.team[Ae.onlyOneRandomInt(0, Za.rolePos.team.length)] : Za.rolePos.enemy[Ae.onlyOneRandomInt(0, Za.rolePos.enemy.length)] : Mt.mode != Tt.BIOCHEMISTRY || this._isMySelf ? this.initPos : this.presentationBaseLayer.getModelPosByVector3();
        }
        pickUpTheGun(e) {
            if (!Rs.gameOver) {
                if (this._isMySelf && il.playEffect(ml.COMPOND), 1 == this.armCtrlList.length && 8 == this.getArmCtrl().getType() && 0 == this.getArmCtrl().curBullets && "8001" == e) {
                    let e = this.armCtrl.switchArm();
                    return this.magazineBullet = this.getArmCtrl().getMagazineBullet(), this.bullets = this.getArmCtrl().getBullets(), 
                    this.getArmCtrl().curMagazineBullet = this.getArmCtrl().getMagazineBullet(), this.getArmCtrl().curBullets = this.getArmCtrl().getBullets(), 
                    this.presentationBaseLayer.isThrowBomb = !1, this.presentationBaseLayer.isTouchBomb = !0, 
                    this.presentationBaseLayer.cacheBombSp ? (this.presentationBaseLayer.cacheBombSp.addComponentIntance(new Oa(this)), 
                    this.presentationBaseLayer.bombSp = this.presentationBaseLayer.cacheBombSp) : (e.addComponentIntance(new Oa(this)), 
                    this.presentationBaseLayer.bombSp = e), void L.notify(w.REFRESH_MAIN_ARM);
                }
                for (let t = 0; t < A.keys.length; t++) {
                    if (A.getDataByKey(A.keys[t]).objName == e) {
                        let e = new ca(this, A.keys[t], !0);
                        this.armCtrlList.push(e);
                    }
                }
                for (let t = 0; t < _e.keys.length; t++) {
                    if (_e.getDataByKey(_e.keys[t]).objName == e) {
                        let e = new ca(this, _e.keys[t], !1);
                        this.armCtrlList.push(e);
                    }
                }
                if (2 == this.armCtrlList.length && 8 == this.armCtrlList[0].getType()) {
                    const e = this.armCtrlList[1];
                    this.armCtrlList[1] = this.armCtrlList[0], this.armCtrlList[0] = e;
                }
                if (0 != this.armCtrlList.length) {
                    this.armCtrl = this.armCtrlList[0];
                    let e = this.armCtrl.switchArm();
                    this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets, 
                    8 == this.armCtrl.getType() ? (this.isGetBombLast = !0, this.presentationBaseLayer.isThrowBomb = !1, 
                    this.presentationBaseLayer.isTouchBomb = !0, this.presentationBaseLayer.cacheBombSp ? (this.presentationBaseLayer.cacheBombSp.addComponentIntance(new Oa(this)), 
                    this.presentationBaseLayer.bombSp = this.presentationBaseLayer.cacheBombSp) : (e.addComponentIntance(new Oa(this)), 
                    this.presentationBaseLayer.bombSp = e)) : (this.presentationBaseLayer.isThrowBomb = !1, 
                    this.presentationBaseLayer.isTouchBomb = !1, this.isGetBombLast = !1), this._isMySelf && (3 == this.armCtrl.getType() ? Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !1 : Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !0, 
                    Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun(), Bt.getFunctionViewCtrl(Er.GAME).btnRightAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                    Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH);
                }
            }
        }
        switchArm() {
            if (this.armCtrlList.length >= 2) {
                if (8 == this.getArmCtrl().getType() && 0 == this.getArmCtrl().curBullets) {
                    for (let e = 0; e < this.armCtrlList.length; e++) 8 == this.armCtrlList[e].getType() && (this.armCtrlList.splice(e, 1), 
                    this._isMySelf && (Bt.getFunctionViewCtrl(Er.GAME).curIndex = 0, Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun(), 
                    Bt.getFunctionViewCtrl(Er.GAME).onArmSelect(Bt.getFunctionViewCtrl(Er.GAME).curIndex)));
                    for (let e in this.armCtrlList) {
                        let t = this.armCtrlList[e];
                        if (8 != t.getType()) {
                            this.armCtrl = t, this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets, 
                            this._isMySelf && (Bt.getFunctionViewCtrl(Er.GAME).curIndex = parseInt(e), Bt.getFunctionViewCtrl(Er.GAME).onArmSelect(Bt.getFunctionViewCtrl(Er.GAME).curIndex));
                            break;
                        }
                    }
                }
            } else if (Mt.mode == Tt.ONEVSONEMODE) for (let e = 0; e < this.armCtrlList.length; e++) 8 == this.armCtrlList[e].getType() && (this.getArmCtrl().clearArm(), 
            this.armCtrlList.splice(e, 1), this._isMySelf && (Bt.getFunctionViewCtrl(Er.GAME).curIndex = 0, 
            Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun()));
        }
        pickUpTheGunById(e, t = !1) {
            this._isMySelf && il.playEffect(ml.COMPOND);
            let i = Bt.getFunctionViewCtrl(Er.GAME);
            if (!i) return;
            let a = 0, s = null, n = !1;
            for (let i = 0; i < this.armCtrlList.length; i++) {
                const o = this.armCtrlList[i];
                o.getType() != Kr.BOMB && (o.id == this.armCtrl.id && (a = i), o.isOtherArm || (s = i), 
                o.id == e && t == o.isOtherArm && (console.log("捡到相同枪支"), n = !0, this.armCtrlList[i] = new ca(this, e, !0, t)));
            }
            if (!n) if (i.nonoArmCount > 0) {
                i.nonoArmCount -= 1;
                let a = [];
                for (let e = 0; e < i.nonoArmCount; e++) a.push({
                    state: oa.NONE
                });
                i.pickUpTheGun(), i.listAddArm.dataSource = a, i.listAddArm.refresh(), i.setListAddArmWight();
                let s = new ca(this, e, !0, t);
                this.armCtrlList.unshift(s);
            } else if (s) {
                let i = new ca(this, e, !0, t);
                this.armCtrlList[s] = i;
            } else {
                let i = new ca(this, e, !0, t);
                this.armCtrlList[a] = i;
            }
            for (let i = 0; i < this.armCtrlList.length; i++) {
                const s = this.armCtrlList[i];
                s.id == e && t == s.isOtherArm && (a = i);
            }
            if (0 != this.armCtrlList.length) {
                this.armCtrl = this.armCtrlList[a];
                let e = this.armCtrl.switchArm();
                this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets, 
                8 == this.armCtrl.getType() ? (this.isGetBombLast = !0, this.presentationBaseLayer.isThrowBomb = !1, 
                this.presentationBaseLayer.isTouchBomb = !0, this.presentationBaseLayer.cacheBombSp ? (this.presentationBaseLayer.cacheBombSp.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = this.presentationBaseLayer.cacheBombSp) : (e.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = e)) : (this.presentationBaseLayer.isThrowBomb = !1, 
                this.presentationBaseLayer.isTouchBomb = !1, this.isGetBombLast = !1), this._isMySelf && (3 == this.armCtrl.getType() ? Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !1 : Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !0, 
                Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun(a), Bt.getFunctionViewCtrl(Er.GAME).btnRightAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH);
            }
            this.chooseArm(a);
        }
        removeTheGun() {
            this.getArmCtrl().clearArm(), this.armCtrlList = [], this.armCtrl = null;
        }
        removeTheGunByJudge() {
            if (this.armCtrlList.length >= 2) {
                for (let e = 0; e < this.armCtrlList.length; e++) this.armCtrlList[e].id == this.armCtrl.id && (this.armCtrlList.splice(e, 1), 
                Bt.getFunctionViewCtrl(Er.GAME).curIndex = 0, Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun(), 
                Bt.getFunctionViewCtrl(Er.GAME).onArmSelect(Bt.getFunctionViewCtrl(Er.GAME).curIndex));
                this.armCtrl = this.armCtrlList[0];
                let e = this.armCtrl.switchArm();
                this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets, 
                8 == this.armCtrl.getType() ? (this.isGetBombLast = !0, this.presentationBaseLayer.isThrowBomb = !1, 
                this.presentationBaseLayer.isTouchBomb = !0, this.presentationBaseLayer.cacheBombSp ? (this.presentationBaseLayer.cacheBombSp.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = this.presentationBaseLayer.cacheBombSp) : (e.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = e)) : (this.presentationBaseLayer.isThrowBomb = !1, 
                this.presentationBaseLayer.isTouchBomb = !1, this.isGetBombLast = !1);
            } else this.getArmCtrl().clearArm(), this.armCtrlList = [], this.armCtrl = null;
        }
        armsCtrl() {
            this.modeCtrl();
        }
        modeCtrl() {
            if (Mt.mode == Tt.SNIPERMODE || Mt.mode == Tt.KNIFEWARMODE ? this.doubleKillTime = 4e4 : this.doubleKillTime = 1e4, 
            this._isMySelf) {
                let t = tl.getInstance().getSkinGameCurLib();
                for (var e = 0; e < t.length; e++) if (t[e] === tl.getInstance().getSelectSkin()) {
                    t.splice(e, 1);
                    break;
                }
                t.push(tl.getInstance().getSelectSkin());
                let i = tl.getInstance().getGameCurPropLib();
                if (Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.TWOVSTWOMODE || Mt.mode == Tt.BIOCHEMISTRY) {
                    Mt.mode == Tt.TEAMCOMPETITION && this._isMySelf && tl.getInstance().getGuide() == Et.GAME_1 && (tl.getInstance().trialArm = 43);
                    let e = 0;
                    for (let e = 0; e < i.length; e++) {
                        let t = new ca(this, i[e], !1);
                        this.armCtrlList.unshift(t);
                    }
                    for (let i = 0; i < t.length - e; i++) {
                        let e = new ca(this, t[i], !0);
                        this.armCtrlList.unshift(e);
                    }
                    if (null != tl.getInstance().trialArm) if (1 == t.length) {
                        let e = new ca(this, tl.getInstance().trialArm, !0);
                        this.armCtrlList.unshift(e), tl.getInstance().trialArm = null;
                    } else {
                        e = 1;
                        let t = new ca(this, tl.getInstance().trialArm, !0);
                        this.armCtrlList.unshift(t), tl.getInstance().trialArm = null;
                    }
                } else if (Mt.mode == Tt.SNIPERMODE) ; else if (Mt.mode == Tt.KNIFEWARMODE) {
                    for (let e = 0; e < i.length; e++) if (2 == _e.getDataByKey(i[e]).type) {
                        let t = new ca(this, i[e], !1);
                        this.armCtrlList.push(t);
                    }
                } else if (Mt.mode == Tt.SKILL_MODE) {
                    let e = new ca(this, Nt.getCurScene().skillModeArmData.id, !0, Nt.getCurScene().skillModeArmData instanceof Se);
                    this.armCtrlList.push(e);
                }
                0 != this.armCtrlList.length && (this.armCtrl = this.armCtrlList[0], this.armCtrl.switchArm(), 
                this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets);
            } else {
                if (Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.TWOVSTWOMODE) {
                    let e = A.keys[Ae.onlyOneRandomInt(0, A.keys.length)], t = new ca(this, e);
                    this.armCtrlList.push(t);
                } else if (Mt.mode == Tt.SNIPERMODE) ; else if (Mt.mode == Tt.BIOCHEMISTRY) {
                    if (this.getRoleType() == Mr.TYPE_0) {
                        let e = new ca(this, A.keys[Ae.onlyOneRandomInt(0, A.keys.length)]);
                        this.armCtrlList.push(e);
                    }
                } else if (Mt.mode == Tt.KNIFEWARMODE) {
                    let e = new ca(this, 2001, !1);
                    this.armCtrlList.push(e);
                } else if (Mt.mode == Tt.SKILL_MODE) if (Rs.isHaveOtherArm || this.roleType != Mr.TYPE_1) {
                    let e = A.keys[Ae.onlyOneRandomInt(0, A.keys.length)], t = new ca(this, e);
                    this.armCtrlList.push(t);
                } else {
                    Rs.isHaveOtherArm = !0;
                    let e = new ca(this, Se.keys[Ae.onlyOneRandomInt(0, Se.keys.length)], !1, !0);
                    this.armCtrlList.push(e), this.getPresentationBaseLayer().addOtherArm();
                }
                0 != this.armCtrlList.length && (this.armCtrl = this.armCtrlList[0], this.armCtrl.switchArm(), 
                this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets);
            }
        }
        resetArmList() {
            for (let e in this.armCtrlList) this.armCtrlList[e].curMagazineBullet = this.armCtrlList[e].getMagazineBullet(), 
            this.armCtrlList[e].curBullets = this.armCtrlList[e].getBullets();
        }
        chooseArm(e) {
            this.presentationBaseLayer.playUpperlimbAniQZ(he.IDLE), this.isStartSwitchCount = 30, 
            this.armCtrl = this.armCtrlList[e], this.magazineBullet = this.armCtrl.curMagazineBullet, 
            this.bullets = this.armCtrl.curBullets;
            let t = this.armCtrl.getType();
            1 != t && 2 != t && 4 != t && 8 != t && 9 != t && (t = 1), il.playEffect(ml.SWITCH_ARM.ROOT + t + ".mp3"), 
            this.isSwitching || (console.log("开始换枪倒计时"), Laya.timer.loop(1, this, function cd1() {
                0 == this.isStartSwitchCount && (this.isSwitching = !1, console.log("换枪结束"), Laya.timer.clear(this, cd1)), 
                this.isStartSwitchCount--;
            })), Laya.timer.once(100, this, function cd() {
                let e = this.armCtrl.switchArm();
                3 == this.armCtrl.getType() ? Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !1 : Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !0, 
                (!hl.isReviewVersion() || hl.gameType != rl.CJRYZC && hl.gameType != rl.QZHXJY) && (this.armCtrl.getType() == Kr.HAND_GUN ? (Bt.getFunctionViewCtrl(Er.GAME).quasiCenter1.visible = !0, 
                Bt.getFunctionViewCtrl(Er.GAME).quasiCenter.visible = !1) : (Bt.getFunctionViewCtrl(Er.GAME).quasiCenter1.visible = !1, 
                Bt.getFunctionViewCtrl(Er.GAME).quasiCenter.visible = !0)), 8 == this.armCtrl.getType() && (this.presentationBaseLayer.isTouchBomb = !0, 
                this.presentationBaseLayer.cacheBombSp ? (this.presentationBaseLayer.cacheBombSp.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = this.presentationBaseLayer.cacheBombSp) : (e.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = e)), Laya.timer.clear(this, cd);
            }), this.isSwitching = !0, console.log("当前更换枪支：", this.armCtrl.getType()), L.notify(w.PLAY_UPPER_LIMB_ANI + this.eventId, {
                name: he.SWITCH
            });
        }
        getIsMySelf() {
            return this._isMySelf;
        }
        getRoleType() {
            return this.roleType;
        }
        getSpeed() {
            return this.speed;
        }
        getArmCtrl() {
            return this.armCtrl;
        }
        getIsTouchAttack() {
            return this.isTouchAttack;
        }
        getIsAttack() {
            return this.isAttack;
        }
        getPresentationBaseLayer() {
            return this.presentationBaseLayer;
        }
        getIsDie() {
            return this.isDie;
        }
        set setIsTouchAttack(e) {
            this.isTouchAttack = e;
        }
        set setIsAttack(e) {
            this._isMySelf && console.log("attack", e), this.isAttack = e;
        }
        set IsDie(e) {
            this.isDie = e;
        }
        set setHP(e) {
            this.HP = e < 0 ? 0 : e, this._isMySelf && L.notify(w.REFRESH_PLAYER_HP_UI);
        }
        set setCurArmor(e) {
            this.curArmor = e < 0 ? 0 : e, this._isMySelf && L.notify(w.REFRESH_PLAYER_ARMOR_UI);
        }
        set setSpeed(e) {
            this.speed = e;
        }
        getHP() {
            return this.HP;
        }
        getArmor() {
            return this.curArmor;
        }
        getMaxArmor() {
            return this.maxArmor;
        }
        getMaxHP() {
            return this.maxHP;
        }
        set setMouseX(e) {
            this.oldX = e;
        }
        set setMouseY(e) {
            this.oldY = e;
        }
        assistAim() {
            if (this.presentationBaseLayer.enemy && Ts.handleType != Pt.ONLYMOVE && null != Ts.handleType) {
                if (this.presentationBaseLayer.enemy.getIsDie()) return void (this.presentationBaseLayer.enemy = null);
                let e = this.getPresentationBaseLayer().getOnceChild().transform, t = this.presentationBaseLayer.enemy.getOnceChild().transform;
                if (this.eulerAngle = e.localRotationEuler.clone(), Xa.subtract(t.position, e.position, this.temV3), 
                this.temV3.x = -this.temV3.x, this.temV3.y = -this.temV3.y, this.temV3.z = -this.temV3.z, 
                Ka.lookAt(q.Vector3.zero, this.temV3, q.Vector3.up, this.testV), this.temV3 = this.eulerAngle.clone(), 
                this.testV.invert(this.testV), e.localRotation = this.testV.clone(), this.eulerAngle = e.localRotationEuler, 
                this.eulerAngle.z = 0, this.eulerAngle.x += 3, this.eulerAngle.y -= 1.6, Math.abs(this.eulerAngle.y - this.temV3.y) > 30) return this.eulerAngle = this.temV3.clone(), 
                void console.log("bug特殊处理");
                Xa.lerp(this.temV3, this.eulerAngle, .001 * Ce.gSysTimer.delta, this.eulerAngle);
            }
        }
        setDirection(e = null, t = null) {
            if (this._isMySelf) {
                if (this.temV3 = this.eulerAngle.clone(), hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                    if (this.eulerAngle = this.getPresentationBaseLayer().getOnceChild().transform.localRotationEuler, 
                    t.stageX != this.oldX) {
                        null == this.oldX && (this.oldX = t.stageX);
                        let e = -t.stageX;
                        this.oldX = t.stageX;
                        let i = .2;
                        this.isOpenMioing && (i = .08), this.eulerAngle.y += e * i, this.eulerAngle.y >= 180 && (this.eulerAngle.y -= 360, 
                        this.temV3.y -= 360), this.eulerAngle.y <= -180 && (this.eulerAngle.y += 360, this.temV3.y += 360);
                    }
                    if (t.stageY != this.oldY) {
                        null == this.oldY && (this.oldY = t.stageY);
                        let e = t.stageY, i = .2;
                        this.isOpenMioing && (i = .08);
                        let a = this.eulerAngle.x + e * i;
                        Math.abs(a) > 70 && (a = a < 0 ? -70 : 70), this.oldY = t.stageY, this.eulerAngle.x = a;
                    }
                } else {
                    if (this.eulerAngle = this.getPresentationBaseLayer().getOnceChild().transform.localRotationEuler, 
                    t.stageX != this.oldX && Ts.handleType != Pt.ONLYMOVE && null != Ts.handleType && t.stageX > Laya.stage.width / 2) {
                        null == this.oldX && (this.oldX = t.stageX);
                        let e = this.oldX - t.stageX;
                        this.oldX = t.stageX;
                        let i = .2;
                        this.isOpenMioing && (i = .08), this.eulerAngle.y += e * i, this.eulerAngle.y >= 180 && (this.eulerAngle.y -= 360, 
                        this.temV3.y -= 360), this.eulerAngle.y <= -180 && (this.eulerAngle.y += 360, this.temV3.y += 360);
                    }
                    if (t.stageY != this.oldY && Ts.handleType != Pt.ONLYMOVE && null != Ts.handleType && t.stageX > Laya.stage.width / 2) {
                        null == this.oldY && (this.oldY = t.stageY);
                        let e = t.stageY - this.oldY, i = .2;
                        this.isOpenMioing && (i = .08);
                        let a = this.eulerAngle.x + e * i;
                        Math.abs(a) > 70 && (a = a < 0 ? -70 : 70), this.oldY = t.stageY, this.eulerAngle.x = a;
                    }
                }
                Xa.lerp(this.temV3, this.eulerAngle, .04 * Laya.timer.delta, this.eulerAngle);
            } else this.rotatingQuaternion = e;
        }
        getEulerAngle() {
            return this.eulerAngle;
        }
        getRotatingQuaternion() {
            return this.rotatingQuaternion;
        }
        setMyOrientation(e = 0, t = 0, i = 0) {
            this.isDie || (this.myOrientation.x = e, this.myOrientation.z = i, Xa.normalize(this.myOrientation, this.myOrientation), 
            this.myOrientation.cloneTo(this.vecDir), this.myOrientation.x *= .14, this.myOrientation.z *= .14, 
            this._isMySelf || (this.myOrientation.x *= .6, this.myOrientation.z *= .6), this.isAttack && (this.myOrientation.x *= .7, 
            this.myOrientation.z *= .7), this.isCrouch && (this.myOrientation.x *= .5, this.myOrientation.z *= .5), 
            this.myOrientation.x *= .6, this.myOrientation.z *= .6, this.isZombie);
        }
        set setIsMoving(e) {
            this.isMoving = e;
        }
        getIsMoving() {
            return this.isMoving;
        }
        getMyOrientation() {
            let e = this.myOrientation;
            return (this.isDie || !this.isMoving || Rs.gameOver || Rs.gameStop) && (e.x = 0, 
            e.y = 0, e.z = 0), this._isMySelf || this.isCrouch && (e.x = 0, e.y = 0, e.z = 0), 
            e;
        }
        setDie() {
            if (this.isDie = !0, this.presentationBaseLayer.enemy = null, this.presentationBaseLayer.setGhostUICtrl(), 
            this.isZombie) {
                let e = this;
                ja.setEliminateZomBieNum(), this.presentationBaseLayer.modelSink(function() {
                    Rs.cleanTargetLogic(e.eventId);
                });
            } else if (this._isMySelf) if (this.armCtrl && this.armCtrl.anim && (this.armCtrl.anim.speed = 0), 
            this.isAttack = !1, Mt.mode == Tt.BIOCHEMISTRY) hl.isShowReviewUI() ? Rs.gameOver = !0 : Bt.openFunction(Er.REVIVE, gr.COVER, ur.VIEW, St.HIDE, !1); else {
                if (!Rs.isWarmUp) if (Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirView") && Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirView").destroy(), 
                Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirCrazyView") && Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirCrazyView").destroy(), 
                0 == this.freeReviveNum) this.createRevive(); else if (Mt.mode == Tt.KNIFEWARMODE || Mt.mode == Tt.ONEVSONEMODE) this.freeReviveNum = 0, 
                this.presentationBaseLayer.invincibleProCount = 3e3, this.presentationBaseLayer.invincibleProCountMax = 3e3, 
                Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirView") && Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirView").destroy(), 
                Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirCrazyView") && Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirCrazyView").destroy(), 
                Bt.openFunction(Er.REVIVE, gr.COVER, ur.VIEW, St.HIDE, !1); else if (Mt.mode == Tt.SKILL_MODE) {
                    if (na.instance.dropArmList) {
                        let e = null, t = null;
                        for (let i = 0; i < this.armCtrlList.length; i++) {
                            const a = this.armCtrlList[i];
                            a.isOtherArm && (t = i, e = a.id);
                        }
                        if (e) {
                            this.armCtrl && this.armCtrl.id == this.armCtrlList[t].id && this.armCtrl.isOtherArm && (this.armCtrl.clearArm(), 
                            this.armCtrl = null), this.armCtrlList.splice(t, 1), null == this.armCtrl && this.armCtrlList[0] && (this.armCtrl = this.armCtrlList[0], 
                            this.armCtrl.switchArm());
                            let i = Bt.getFunctionViewCtrl(Er.GAME);
                            i.nonoArmCount = i.addArmCount + 1 - this.armCtrlList.length;
                            let a = [];
                            for (let e = 0; e < i.nonoArmCount; e++) a.push({
                                state: oa.NONE
                            });
                            i.pickUpTheGun(), i.listAddArm.dataSource = a, i.listAddArm.refresh(), i.setListAddArmWight(), 
                            e && na.instance.createDropArm(e, this.getPresentationBaseLayer().getModelPosByVector3().clone(), 5e3);
                        }
                    }
                    this.resetReviveData(() => {
                        this.createGameAir();
                    });
                } else this.getAriArm() && 0 != this.armCtrlList.length ? this.reviveBeforeThree() : this.createAutoRevive();
            } else this.presentationBaseLayer.closeMark(), this.presentationBaseLayer.hideOtherArmEffect(), 
            this.armCtrl && this.armCtrl.isOtherArm && na.instance.createDropArm(this.armCtrl.id, this.presentationBaseLayer.getModelPosByVector3().clone());
        }
        resetReviveData(e) {
            this.presentationBaseLayer.invincibleProCount = 1e4, this.presentationBaseLayer.invincibleProCountMax = 1e4, 
            Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirView") && Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirView").destroy(), 
            Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirCrazyView") && Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirCrazyView").destroy(), 
            Rs.gameStop = !0, Rs.gameStop && Laya.timer.once(1e3, this, () => {
                Rs.gameStop = !1, Rs.playerLogicalBaseLayer.freeReviveNum > 0 && Mt.mode != Tt.SKILL_MODE && Rs.playerLogicalBaseLayer.freeReviveNum--, 
                Rs.playerLogicalBaseLayer.directRevive(function() {
                    Rs.playerLogicalBaseLayer.getPresentationBaseLayer().setPos(Rs.playerLogicalBaseLayer.getInitPos());
                }), e();
            });
        }
        reviveBeforeThree() {
            let e = this;
            this.resetReviveData(function() {
                hl.platform == v.WX || hl.platform == v.WEB ? tl.getInstance().isNew ? e.createGameAir() : (!hl.isZsCtrl && tl.getInstance().isBannerTouch() || hl.isZsCtrl && tl.getInstance().isCanGameAwardBannerCtrl()) && Ts.isShowRevivieCrazy ? e.createGameAirCrazy() : e.createGameAir() : e.createGameAir();
            });
        }
        createGameAir() {
            let e = this, t = e.getAriArm();
            Bt.getFunctionViewCtrl(Er.GAME).addChild(new ha({
                id: t,
                cb: () => {
                    e.ariArmCallBack(t);
                }
            }));
        }
        createGameAirCrazy() {
            let e = this, t = e.getAriArm();
            Bt.getFunctionViewCtrl(Er.GAME).addChild(new la({
                id: t,
                cb: () => {
                    e.ariArmCallBack(t);
                }
            }));
        }
        createRevive() {
            this.presentationBaseLayer.invincibleProCount = 3e3, this.presentationBaseLayer.invincibleProCountMax = 3e3, 
            Bt.openFunction(Er.REVIVE, gr.COVER, ur.VIEW, St.HIDE, !1);
        }
        createAutoRevive() {
            Bt.openFunction(Er.AUTOREVIVE, gr.COVER, ur.VIEW, St.HIDE, {
                cb: function() {}
            });
        }
        getSuperArmByNew(e) {
            Rs.gameStop = !1, Bt.getFunctionViewCtrl(Er.GAME).curIndex = 0;
            let t = new ca(this, e);
            this.armCtrlList[0] = t, this.armCtrl = this.armCtrlList[0], this.armCtrl.switchArm(), 
            this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets, 
            Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun(), Bt.getFunctionViewCtrl(Er.GAME).onArmSelect(Bt.getFunctionViewCtrl(Er.GAME).curIndex), 
            Bt.getFunctionViewCtrl(Er.GAME).btnRightAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
            Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
            Rs.replaceZDArm(0, this.armCtrl.getIcon());
        }
        getSuperArm(e) {
            Rs.gameStop = !1, Bt.getFunctionViewCtrl(Er.GAME).curIndex = 0;
            let t = new ca(this, e);
            t.isInfinite = !0, this.armCtrlList.unshift(t), this.armCtrl = this.armCtrlList[0], 
            this.armCtrl.switchArm(), this.armCtrl.isInfinite = !0, this.magazineBullet = this.armCtrl.curMagazineBullet, 
            this.bullets = this.armCtrl.curBullets, Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun(), 
            Bt.getFunctionViewCtrl(Er.GAME).onArmSelect(Bt.getFunctionViewCtrl(Er.GAME).curIndex), 
            Bt.getFunctionViewCtrl(Er.GAME).btnRightAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
            Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
            Rs.replaceZDArm(0, this.armCtrl.getIcon());
        }
        getAriArm() {
            if (Mt.mode == Tt.SKILL_MODE) {
                let e = [];
                for (let t = 0; t < Se.keys.length; t++) {
                    const i = Se.getDataByIndex(t);
                    i.isNormal && e.push(i.id);
                }
                let t = e[Ae.onlyOneRandomInt(0, e.length)];
                return this.randID = t, t;
            }
            let e = tl.getInstance().getSkinLib(), t = [];
            for (let i = 0; i < e.length; i++) t.push(e[i]);
            for (let e = 0; e < this.armCtrlList.length; e++) t.push(this.armCtrlList[e].id);
            if (console.log("当前已经拥有得武器：", t), this.getArmCtrl()) {
                let e = [];
                for (let i = 0; i < A.keys.length; i++) {
                    let a = !1, s = A.getDataByKey(A.keys[i]);
                    if (s.type == this.getArmCtrl().getType() && s.id > this.getArmCtrl().getID()) {
                        for (let e = 0; e < t.length; e++) s.id == t[e] && (a = !0);
                        a || e.push(A.keys[i]);
                    }
                }
                if (2 != this.getArmCtrl().getType() && 8 != this.getArmCtrl().getType()) {
                    if (0 == e.length || 1 == e.length || 2 == e.length) {
                        for (let i = 0; i < A.keys.length; i++) {
                            let a = !1, s = A.getDataByKey(A.keys[i]);
                            if (s.type == this.getArmCtrl().getType()) {
                                for (let e = 0; e < t.length; e++) s.id == t[e] && (a = !0);
                                a || e.push(A.keys[i]);
                            }
                        }
                        if (0 == e.length) for (let t = 0; t < A.keys.length; t++) {
                            let i = A.getDataByKey(A.keys[t]);
                            i.type == this.getArmCtrl().getType() && i.id != this.getArmCtrl().getID() && e.push(A.keys[t]);
                        }
                        0 == this.tar && (this.tar = e.length);
                        let i = e.length - this.tar;
                        i <= 0 && (i = e.length - 1);
                        let a = e[i];
                        return this.randID = a, this.tar--, this.randID;
                    }
                    {
                        0 == this.tar && (this.tar = e.length);
                        let t = e.length - this.tar;
                        t <= 0 && (t = e.length - 1);
                        let i = e[t];
                        return this.randID = i, this.tar--, this.randID;
                    }
                }
                {
                    for (let i = 0; i < A.keys.length; i++) {
                        let a = !1, s = A.getDataByKey(A.keys[i]);
                        if (s.type == this.armCtrlList[0].getType()) {
                            for (let e = 0; e < t.length; e++) s.id == t[e] && (a = !0);
                            a || e.push(A.keys[i]);
                        }
                    }
                    if (0 == e.length) for (let t = 0; t < A.keys.length; t++) {
                        let i = A.getDataByKey(A.keys[t]);
                        i.type == this.armCtrlList[0].getType() && i.id != this.armCtrlList[0].getID() && e.push(A.keys[t]);
                    }
                    0 == this.tar && (this.tar = e.length);
                    let i = e.length - this.tar;
                    i <= 0 && (i = e.length - 1);
                    let a = e[i];
                    return this.randID = a, this.tar--, this.randID;
                }
            }
            if (console.log("没有武器----"), Mt.mode == Tt.SNIPERMODE) {
                let e = [];
                if (0 == e.length || 1 == e.length || 2 == e.length) {
                    for (let i = 0; i < A.keys.length; i++) {
                        let a = !1, s = A.getDataByKey(A.keys[i]);
                        if (3 == s.type) {
                            for (let e = 0; e < t.length; e++) s.id == t[e] && (a = !0);
                            a || e.push(A.keys[i]);
                        }
                    }
                    if (0 == e.length) for (let t = 0; t < A.keys.length; t++) {
                        3 == A.getDataByKey(A.keys[t]).type && e.push(A.keys[t]);
                    }
                    0 == this.tar && (this.tar = e.length);
                    let i = e.length - this.tar;
                    i <= 0 && (i = e.length - 1);
                    let a = e[i];
                    return this.randID = a, this.tar--, this.randID;
                }
                {
                    0 == this.tar && (this.tar = e.length);
                    let t = e.length - this.tar;
                    t <= 0 && (t = e.length - 1);
                    let i = e[t];
                    return this.randID = i, this.tar--, this.randID;
                }
            }
            {
                let e = A.keys[Ae.onlyOneRandomInt(0, A.keys.length)];
                return this.randID = e, this.randID;
            }
        }
        ariArmCallBack(e) {
            if (Mt.mode == Tt.SKILL_MODE) return void this.pickUpTheGunById(this.randID, !0);
            let t = null, i = null, a = !1;
            for (let s = 0; s < this.armCtrlList.length; s++) {
                const n = this.armCtrlList[s];
                n.getType() != Kr.KNIFE && n.getType() != Kr.BOMB && (n.id == this.armCtrl.id && (t = s), 
                n.isOtherArm || (i = s), n.id == e && (console.log("捡到相同枪支"), a = !0, this.armCtrlList[s] = new ca(this, e, !0)));
            }
            a || (t || (t = i), this.armCtrlList[t] = new ca(this, e, !0));
            for (let i = 0; i < this.armCtrlList.length; i++) {
                this.armCtrlList[i].id == e && (t = i);
            }
            if (0 != this.armCtrlList.length) {
                this.armCtrl = this.armCtrlList[t];
                let e = this.armCtrl.switchArm();
                this.magazineBullet = this.armCtrl.curMagazineBullet, this.bullets = this.armCtrl.curBullets, 
                8 == this.armCtrl.getType() ? (this.isGetBombLast = !0, this.presentationBaseLayer.isThrowBomb = !1, 
                this.presentationBaseLayer.isTouchBomb = !0, this.presentationBaseLayer.cacheBombSp ? (this.presentationBaseLayer.cacheBombSp.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = this.presentationBaseLayer.cacheBombSp) : (e.addComponentIntance(new Oa(this)), 
                this.presentationBaseLayer.bombSp = e)) : (this.presentationBaseLayer.isThrowBomb = !1, 
                this.presentationBaseLayer.isTouchBomb = !1, this.isGetBombLast = !1), this._isMySelf && (3 == this.armCtrl.getType() ? Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !1 : Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.visible = !0, 
                Bt.getFunctionViewCtrl(Er.GAME).pickUpTheGun(t), Bt.getFunctionViewCtrl(Er.GAME).btnRightAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                Bt.getFunctionViewCtrl(Er.GAME).btnLeftAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH);
            }
        }
        resetDouble() {
            this.isStartDoubleKill = !1, this.isStartHeadShotDoubleKill = !1, this.doubleKill = 0, 
            this.doubleClasses = 1, this.headShotHit = 0, this.headShotClasses = 1, this.maxDoubleKill = 0;
        }
        revive(e) {
            if (this.isDie && !this.isRevive) {
                this.freeReviveNum--;
                let t = this;
                this.isRevive = !0, this.isStartDoubleKill = !1, this.isStartHeadShotDoubleKill = !1, 
                this.presentationBaseLayer.enemy = null, this.resetDoubleKillTime(), this.doubleKill = 0, 
                this.doubleClasses = 1, this.isStartHuaBullet = !1, this._isMySelf && this.getPresentationBaseLayer().closeDoubleKill();
                let i = 2e3;
                Mt.mode == Tt.ONEVSONEMODE && (i = 3e3), Laya.timer.once(i, this, function cd() {
                    if (Nt.getCurScene().state == _s.START && t.getPresentationBaseLayer()) {
                        if (t.isInvincible = !0, t.isDie = !1, t.isRevive = !1, t.setHP = t.maxHP, t.setCurArmor = t.maxArmor, 
                        t.armCtrl && (t.magazineBullet = t.armCtrl.getMagazineBullet(), t.bullets = t.armCtrl.getBullets()), 
                        t.resetArmList(), t.presentationBaseLayer.setGamingHeadState(), t.armCtrl && 8 == t.armCtrl.getType() && (t.presentationBaseLayer.isTouchBomb = !0), 
                        t.presentationBaseLayer.isThrowBomb = !1, t._isMySelf && (L.notify(w.REFRESH_PLAYER_ARMOR_UI), 
                        L.notify(w.REFRESH_PLAYER_HP_UI), L.notify(w.REFRESH_MAIN_ARM)), e(), Mt.mode == Tt.SKILL_MODE && t.armCtrl.isOtherArm && !t._isMySelf) {
                            let e = [];
                            for (let i = 0; i < Se.keys.length; i++) {
                                const a = Se.getDataByIndex(i);
                                a.id != t.armCtrl.id && e.push(a.id);
                            }
                            let i = new ca(t, e[Ae.onlyOneRandomInt(0, e.length)], !1, !0);
                            t.armCtrlList = [], t.armCtrlList.push(i), t.armCtrl = t.armCtrlList[0], t.armCtrl.switchArm();
                        }
                        t.presentationBaseLayer.openMark(), t.presentationBaseLayer.showOtherArmEffect(), 
                        Laya.timer.clear(t, cd);
                    }
                });
            }
        }
        directRevive(e) {
            if (this.getPresentationBaseLayer() && this.isDie && !this.isRevive) {
                if (this.isRevive = !0, this.isStartDoubleKill = !1, this.isStartHeadShotDoubleKill = !1, 
                this.resetDoubleKillTime(), this.doubleKill = 0, this.doubleClasses = 1, this._isMySelf && this.getPresentationBaseLayer().closeDoubleKill(), 
                Nt.getCurScene().state != _s.START) return;
                this.isInvincible = !0, this.isDie = !1, this.isRevive = !1, this.setHP = this.maxHP, 
                this.setCurArmor = this.maxArmor, this.isStartHuaBullet = !1, this.armCtrl && (this.magazineBullet = this.armCtrl.getMagazineBullet(), 
                this.bullets = this.armCtrl.getBullets()), this.resetArmList(), this.presentationBaseLayer.setGamingHeadState(), 
                this.armCtrl && 8 == this.armCtrl.getType() && (this.presentationBaseLayer.isTouchBomb = !0), 
                this.presentationBaseLayer.isThrowBomb = !1, this._isMySelf && (L.notify(w.REFRESH_PLAYER_ARMOR_UI), 
                L.notify(w.REFRESH_PLAYER_HP_UI), L.notify(w.REFRESH_MAIN_ARM)), e();
            }
        }
        bulletFill() {
            this.armCtrl && (this.magazineBullet = this.armCtrl.getMagazineBullet(), this.bullets = this.armCtrl.getBullets()), 
            this.resetArmList(), this.presentationBaseLayer.isThrowBomb = !1, this._isMySelf && L.notify(w.REFRESH_MAIN_ARM);
        }
        setDoubleKill() {
            if (this.doubleClasses >= 3) {
                if (!this.isStartDoubleKill) return;
                this.doubleKillTime -= Ce.gSysTimer.delta, this.doubleKillTime < 0 && (this.isStartDoubleKill = !1, 
                this.doubleKill = 0, this.doubleClasses = 1, this._isMySelf && this.getPresentationBaseLayer().closeDoubleKill());
            }
            if (this.headShotClasses >= 2) {
                if (!this.isStartHeadShotDoubleKill) return;
                this.doubleKillTime -= Ce.gSysTimer.delta, this.doubleKillTime < 0 && (this.isStartHeadShotDoubleKill = !1, 
                this.headShotHit = 0, this.headShotClasses = 1);
            }
        }
        resetDoubleKill() {
            this.isStartDoubleKill = !0, this.resetDoubleKillTime(), this.addDoubleKill();
        }
        resetDoubleKillTime() {
            Mt.mode == Tt.SNIPERMODE || Mt.mode == Tt.KNIFEWARMODE ? this.doubleKillTime = 4e4 : this.doubleKillTime = 1e4;
        }
        addDoubleKill() {
            7 != this.doubleKill && (this.doubleKill++, this._isMySelf, this.maxDoubleKill < this.doubleKill && (this.maxDoubleKill = this.doubleKill)), 
            7 == this.doubleKill && this.doubleClasses < 3 && (this.doubleClasses++, this.doubleKill = 1);
        }
        resetHeadKill() {
            this.isStartHeadShotDoubleKill = !0, this.resetHeadTime(), this.addHeadKill();
        }
        resetHeadTime() {
            Mt.mode == Tt.SNIPERMODE || Mt.mode == Tt.KNIFEWARMODE ? this.headKillTime = 4e4 : this.headKillTime = 1e4;
        }
        addHeadKill() {
            7 != this.headShotHit && (this.headShotHit++, this._isMySelf), 7 == this.headShotHit && this.headShotClasses < 2 && (this.headShotClasses++, 
            this.headShotHit = 1);
        }
        playerDoubleHitUIAndSound() {}
        resetPointCtrl() {
            this.curPointCtrl && this.curPointCtrl.init();
        }
        initShader() {
            var e = {
                a_Position: Laya.VertexMesh.MESH_POSITION0,
                a_Normal: Laya.VertexMesh.MESH_NORMAL0,
                a_Texcoord: Laya.VertexMesh.MESH_TEXTURECOORDINATE0,
                a_BoneWeights: Laya.VertexMesh.MESH_BLENDWEIGHT0,
                a_BoneIndices: Laya.VertexMesh.MESH_BLENDINDICES0
            }, t = {
                u_Bones: Laya.Shader3D.PERIOD_CUSTOM,
                u_CameraPos: Laya.Shader3D.PERIOD_CAMERA,
                u_MvpMatrix: Laya.Shader3D.PERIOD_SPRITE,
                u_WorldMat: Laya.Shader3D.PERIOD_SPRITE,
                u_texture: Laya.Shader3D.PERIOD_MATERIAL,
                u_marginalColor: Laya.Shader3D.PERIOD_MATERIAL,
                "u_SunLight.color": Laya.Shader3D.PERIOD_SCENE,
                u_custom_Color: Laya.Shader3D.PERIOD_MATERIAL
            }, i = Laya.Shader3D.add("CustomShader"), a = new Laya.SubShader(e, t);
            i.addSubShader(a), a.addShaderPass('\n        #include "Lighting.glsl";\n        attribute vec4 a_Position;\n        attribute vec2 a_Texcoord;\n        attribute vec3 a_Normal;\n        uniform mat4 u_MvpMatrix;\n        uniform mat4 u_WorldMat;\n        varying vec2 v_Texcoord;\n        varying vec3 v_Normal;\n        #ifdef BONE\n        attribute vec4 a_BoneIndices;\n        attribute vec4 a_BoneWeights;\n        const int c_MaxBoneCount = 24;\n        uniform mat4 u_Bones[c_MaxBoneCount];\n        #endif\n        #if defined(DIRECTIONLIGHT)\n        varying vec3 v_PositionWorld;\n        #endif\n        void main()\n        {\n        #ifdef BONE\n        mat4 skinTransform=mat4(0.0);\n        skinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n        skinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n        skinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n        skinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n        vec4 position = skinTransform * a_Position;\n        gl_Position=u_MvpMatrix * position;\n        mat3 worldMat=mat3(u_WorldMat * skinTransform);\n        #else\n        gl_Position=u_MvpMatrix * a_Position;\n        mat3 worldMat=mat3(u_WorldMat);\n        #endif\n        v_Texcoord=a_Texcoord;\n        v_Normal=worldMat*a_Normal;\n        #if defined(DIRECTIONLIGHT)\n        #ifdef BONE\n        v_PositionWorld=(u_WorldMat*position).xyz;\n        #else\n        v_PositionWorld=(u_WorldMat*a_Position).xyz;\n        #endif\n        #endif\n        gl_Position=remapGLPositionZ(gl_Position); \n        }', '\n        #ifdef FSHIGHPRECISION\n            precision highp float;\n        #else\n            precision mediump float;\n        #endif\n        #include "Lighting.glsl";\n        varying vec2 v_Texcoord;\n        uniform sampler2D u_texture;\n        uniform vec3 u_marginalColor;\n        uniform float u_custom_Color;\n        varying vec3 v_Normal;\n        #if defined(DIRECTIONLIGHT)\n            uniform vec3 u_CameraPos;\n            varying vec3 v_PositionWorld;\n            uniform DirectionLight u_SunLight;\n        #endif\n        void main()\n        {\n            gl_FragColor = texture2D(u_texture, v_Texcoord) + vec4(u_custom_Color, 0.0, 0.0, 1.0);\n        }');
        }
        clean() {
            console.log("清除逻辑类"), Laya.timer.clearAll(this), this.armCtrl && this.armCtrl.clean(), 
            this.presentationBaseLayer.clean(), this.armCtrl = null, this.presentationBaseLayer = null, 
            this.eventId = null, this.speed = 0, this.initPos = null, this.myOrientation = null, 
            this.isDie = null, this.eulerAngle = null, this.rotatingQuaternion = null, this.oldX = null, 
            this.oldY = null, this.isMoving = null, this.roleType = null, this.HP = null, this.isTouchAttack = null, 
            this.isAttack = null, this._isMySelf = null, this.presentationBaseLayer = null, 
            this.armCtrl = null, this.paths = null, this.attackLogicalBaseLayer = null, this.magazineBullet = null, 
            this.bullets = null, this.isStartHuaBullet = null, this.isRevive = null, this.isCrouch = null, 
            this.isAutoAttack = null, this.gameName = null, this.isFirstGun = null, this.isInvincible = null, 
            this.playerBeKillCount = null, this.playerKillCount = null, this.score = null, this.head = null, 
            this.doubleHit = null, this.intoID = null, this.isZombie = null, this.isGetBombLast = null;
        }
    }
    class qa extends Laya.Script3D {
        constructor(e, t, i = !1) {
            super(), this.logicalBaseLayer = null, this.intoID = 0, this.isZombie = !1, this.roleType = e, 
            this.intoID = t, this.isZombie = i;
        }
        onAwake() {
            let e = this.owner;
            if (kt.isCloseAILogicBaseLayer) return;
            console.log("当前AI等级：", jt.curDifficult, "当前指引进度:", tl.getInstance().getGuide());
            let t = Zt.getDataByKey(jt.curDifficult ? jt.curDifficult : Kt.NORMAL);
            this.logicalBaseLayer = new za(!1, this.roleType, e, this.intoID, this.isZombie), 
            kt.isCloseAILogic || (this.aiLogic = new _i(this.logicalBaseLayer, t));
        }
        onDestroy() {
            this.aiLogic.clean(), this.logicalBaseLayer.clean(), this.logicalBaseLayer = null, 
            this.roleType = null, this.aiLogic = null, this.intoID = null;
        }
    }
    class Qa extends Laya.Script3D {
        constructor() {
            super(), this.logicalBaseLayer = null;
        }
        onAwake() {
            let e = this.owner;
            this.logicalBaseLayer = new za(!0, Mr.TYPE_0, e);
        }
        onDestroy() {
            this.logicalBaseLayer.clean(), this.logicalBaseLayer = null;
        }
    }
    class Za {
        static getRolePos() {
            this.rolePos.team = [], this.rolePos.enemy = [], this.rolePos.team.push(Ts.scene3d.getChildByName("playerPos").transform.position.clone()), 
            this.rolePos.team.push(Ts.scene3d.getChildByName("myTeam1Pos").transform.position.clone()), 
            this.rolePos.team.push(Ts.scene3d.getChildByName("myTeam2Pos").transform.position.clone()), 
            this.rolePos.team.push(Ts.scene3d.getChildByName("myTeam3Pos").transform.position.clone()), 
            this.rolePos.enemy.push(Ts.scene3d.getChildByName("robot1Pos").transform.position.clone()), 
            this.rolePos.enemy.push(Ts.scene3d.getChildByName("robot2Pos").transform.position.clone()), 
            this.rolePos.enemy.push(Ts.scene3d.getChildByName("robot3Pos").transform.position.clone()), 
            this.rolePos.enemy.push(Ts.scene3d.getChildByName("robot4Pos").transform.position.clone());
        }
        static createPlayer() {
            let e = Nt.getCurScene(), t = Ts.scene3d.getChildByName("playerPos").transform.position.clone(), i = [ "under", "up" ][_a.getResult([ 60, 40 ])];
            Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.BIOCHEMISTRY || (i = "under"), e.isShowUnder = !0, 
            "up" == i && (e.isShowUnder = !1, t = Ts.scene3d.getChildByName("robot1Pos").transform.position.clone());
            let a = Te.createSkin(t, "001", !0, te.PLAYER);
            a.name = te.PLAYER, e.playerCtrl = a.addComponentIntance(new Qa());
        }
        static createAI() {
            let e = Nt.getCurScene();
            if (kt.isCloseAI) return;
            let t = Ts.scene3d.getChildByName("robot1Pos").transform.position.clone(), i = Ts.scene3d.getChildByName("robot2Pos").transform.position.clone(), a = Ts.scene3d.getChildByName("myTeam1Pos").transform.position.clone(), s = Ts.scene3d.getChildByName("myTeam2Pos").transform.position.clone(), n = Ts.scene3d.getChildByName("myTeam3Pos").transform.position.clone(), o = Ts.scene3d.getChildByName("robot3Pos").transform.position.clone(), r = Ts.scene3d.getChildByName("robot4Pos").transform.position.clone();
            e.isShowUnder || (t = Ts.scene3d.getChildByName("playerPos").transform.position.clone(), 
            i = Ts.scene3d.getChildByName("myTeam1Pos").transform.position.clone(), a = Ts.scene3d.getChildByName("robot2Pos").transform.position.clone(), 
            s = Ts.scene3d.getChildByName("robot3Pos").transform.position.clone(), n = Ts.scene3d.getChildByName("robot4Pos").transform.position.clone(), 
            o = Ts.scene3d.getChildByName("myTeam2Pos").transform.position.clone(), r = Ts.scene3d.getChildByName("myTeam3Pos").transform.position.clone());
            let l = 9;
            Mt.mode == Tt.ONEVSONEMODE ? l = 1 : Mt.mode == Tt.TWOVSTWOMODE ? l = 3 : Mt.mode == Tt.SNIPERMODE && (l = 9);
            let h = 0, c = 0;
            if (Mt.mode != Tt.BIOCHEMISTRY) for (let e = 0; e < l; e++) {
                let l;
                if (Mt.mode != Tt.TWOVSTWOMODE) if (4 == e || 5 == e || 6 == e || 7 == e) {
                    let t = a;
                    5 == e ? t = s : 6 == e ? t = n : 7 == e && (t = n), (l = Te.createSkin(t, "001", !1, te.ROBOT, Ts.scene3d, !1, Mr.TYPE_0)).addComponentIntance(new qa(Mr.TYPE_0, h)), 
                    h++;
                } else {
                    let a = t;
                    0 == e && (a = i), 2 == e && (a = o), 3 == e && (a = r), (l = Te.createSkin(a, "002", !1, te.ROBOT, Ts.scene3d, !1, Mr.TYPE_1)).addComponentIntance(new qa(Mr.TYPE_1, c)), 
                    c++;
                } else if (1 == e) {
                    let e = a;
                    (l = Te.createSkin(e, "001", !1, te.ROBOT, Ts.scene3d, !1, Mr.TYPE_0)).addComponentIntance(new qa(Mr.TYPE_0, h)), 
                    h++;
                } else {
                    let a = t;
                    0 == e && (a = i), 2 == e && (a = o), 3 == e && (a = r), (l = Te.createSkin(a, "002", !1, te.ROBOT, Ts.scene3d, !1, Mr.TYPE_1)).addComponentIntance(new qa(Mr.TYPE_1, c)), 
                    c++;
                }
            } else for (let e = 0; e < l; e++) {
                let n, o = t;
                1 == e ? o = i : 2 == e ? o = a : 3 == e && (o = s), (n = Te.createSkin(o, "001", !1, te.ROBOT, Ts.scene3d, !1, Mr.TYPE_0)).addComponentIntance(new qa(Mr.TYPE_0, h)), 
                h++;
            }
            Rs.createAIParts();
        }
        static createZombie(e, t) {
            Te.createZombie(e, te.ROBOT, Ts.scene3d).addComponentIntance(new qa(Mr.TYPE_1, t, !0));
        }
    }
    Za.rolePos = {
        team: [],
        enemy: []
    };
    class ja {
        static addZombieBirthList() {
            if (Mt.mode != Tt.BIOCHEMISTRY) return;
            this.zombieBirthList = [];
            let e = Ts.scene3d.getChildByName("ZombieBirth"), t = e.numChildren;
            for (let i = 0; i < t; i++) {
                let t = e.getChildAt(i);
                this.zombieBirthList.push(t);
            }
            this.init(), this.addBulletSupplyList(), this.addLifeSupplyList();
        }
        static init() {
            let e = tl.getInstance().getLevel(), t = zt.getDataByKey(e);
            this.eachRound = t.initialZombieNum, this.rondNum = t.ronds, this.maxRound = this.eachRound + (this.round - 1) * this.eachRound, 
            Bt.getFunctionViewCtrl(Er.GAME).setZomBieNum();
        }
        static matchingShow() {
            let e = tl.getInstance().getLevel(), t = zt.getDataByKey(e);
            this.eachRound = t.initialZombieNum, this.rondNum = t.ronds;
            let i = t.ronds, a = 0;
            for (let e = 0; e < i; e++) console.log("获取僵尸个数：", a), a += this.eachRound + e * this.eachRound;
            return a;
        }
        static getTaskZombieNum() {
            let e = tl.getInstance().getLevel(), t = zt.getDataByKey(e).ronds, i = 0;
            for (let e = 0; e < t; e++) i += this.eachRound + e * this.eachRound;
            return i;
        }
        static generateZombies() {
            if (Rs.gameOver) return;
            if (Mt.mode != Tt.BIOCHEMISTRY) return;
            this.isFinish = !1;
            let e = this.eachRound + (this.round - 1) * this.eachRound;
            this.maxRound = e;
            let t = Math.floor(e / this.zombieBirthList.length), i = t + (e - t * this.zombieBirthList.length > 0 ? e - t * this.zombieBirthList.length : 0);
            for (let e = 0; e < i; e++) Za.createZombie(this.zombieBirthList[0].transform.position.clone(), 1);
            for (let e = 1; e < this.zombieBirthList.length; e++) for (let i = 0; i < t; i++) Za.createZombie(this.zombieBirthList[e].transform.position.clone(), 1);
        }
        static setEliminateZomBieNum() {
            Mt.mode == Tt.BIOCHEMISTRY && (0 != this.maxRound ? (this.maxRound--, Bt.getFunctionViewCtrl(Er.GAME).setZomBieNum()) : Bt.getFunctionViewCtrl(Er.GAME).setZomBieNum());
        }
        static finishCtrl() {
            if (Mt.mode == Tt.BIOCHEMISTRY && 0 == this.maxRound && !this.isFinish) {
                if (this.isFinish = !0, console.log("完成"), Bt.getFunctionViewCtrl(Er.GAME).zomBieEliminate(), 
                this.round == this.rondNum) return Rs.gameOver = !0, void (Rs._isWin = !0);
                this.round++, Bt.getFunctionViewCtrl(Er.GAME).zomBieComingDownTime(5e3);
            }
        }
        static addCacheDieZomBieList(e) {
            for (let t = 0; t < this.cacheDieZomBieList.length; t++) if (e.getEventID() == this.cacheDieZomBieList[t].getEventID()) return;
            this.cacheDieZomBieList.push(e), console.log("当前保存的cacheDieZomBieList：", this.cacheDieZomBieList);
        }
        static createBulletModel(e) {
            let t = xe.getRes(ul.WEAPON_PREFEB).getChildByName("ammo"), i = Laya.Sprite3D.instantiate(t, Ts.scene3d);
            return i.transform.position = e, i;
        }
        static createHpModel(e) {
            let t = xe.getRes(ul.WEAPON_PREFEB).getChildByName("health"), i = Laya.Sprite3D.instantiate(t, Ts.scene3d);
            return i.transform.position = e, i;
        }
        static addBulletSupplyList() {
            let e = Ts.scene3d.getChildByName("bulletSupplyPoint"), t = e.numChildren;
            for (let i = 0; i < t; i++) {
                let t = e.getChildAt(i).transform.position.clone();
                t.y = 1;
                let a = this.createBulletModel(t);
                a.addComponentIntance(new qt()), this.bulletSupplyList.push(a);
            }
        }
        static isHasBulletSupply() {
            for (let e = 0; e < this.bulletSupplyList.length; e++) {
                if (!this.bulletSupplyList[e].getComponent(qt).isGet) return !0;
            }
            return !1;
        }
        static addLifeSupplyList() {
            let e = Ts.scene3d.getChildByName("lifeSupplyPoint"), t = e.numChildren;
            for (let i = 0; i < t; i++) {
                let t = e.getChildAt(i).transform.position.clone();
                t.y = 1;
                let a = this.createHpModel(t);
                a.addComponentIntance(new Qt()), this.lifeSupplyList.push(a);
            }
        }
        static isHasLifeSupply() {
            for (let e = 0; e < this.lifeSupplyList.length; e++) {
                if (!this.lifeSupplyList[e].getComponent(Qt).isGet) return !0;
            }
            return !1;
        }
        static resetGenerateBulletSupply() {
            if (Mt.mode != Tt.BIOCHEMISTRY) return;
            let e = 0;
            for (let t in this.bulletSupplyList) this.bulletSupplyList[t].getComponent(qt).isGet || e++;
            if (3 != e && (this.bulletSupplyCount -= Ce.gSysTimer.delta, this.bulletSupplyCount < 0)) {
                this.bulletSupplyCount = 4e3;
                for (let e in this.bulletSupplyList) this.bulletSupplyList[e].getComponent(qt).isGet && (this.bulletSupplyList[e].getComponent(qt).isGet = !1, 
                this.bulletSupplyList[e].getComponent(qt).model.active = !0);
            }
        }
        static resetGenerateLifeSupply() {
            if (Mt.mode != Tt.BIOCHEMISTRY) return;
            let e = 0;
            for (let t in this.lifeSupplyList) this.lifeSupplyList[t].getComponent(Qt).isGet || e++;
            if (3 != e && (this.lifeSupplyCount -= Ce.gSysTimer.delta, this.lifeSupplyCount < 0)) {
                this.lifeSupplyCount = 4e3;
                for (let e in this.lifeSupplyList) this.lifeSupplyList[e].getComponent(Qt).isGet && (this.lifeSupplyList[e].getComponent(Qt).isGet = !1, 
                this.lifeSupplyList[e].getComponent(Qt).model.active = !0);
            }
        }
        static getNearBulletSupply(e) {
            let t = this.bulletSupplyList[0], i = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), this.bulletSupplyList[0].transform.position);
            for (let a = 0; a < this.bulletSupplyList.length; a++) {
                let s = this.bulletSupplyList[a], n = s.getComponent(qt);
                if (Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), this.bulletSupplyList[a].transform.position) < i && !n.isGet) {
                    t = s;
                    break;
                }
            }
            return t;
        }
        static getNearHPSupply(e) {
            let t = this.lifeSupplyList[0], i = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), this.lifeSupplyList[0].transform.position);
            for (let a = 0; a < this.lifeSupplyList.length; a++) {
                let s = this.lifeSupplyList[a], n = s.getComponent(Qt);
                if (Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), this.lifeSupplyList[a].transform.position) < i && !n.isGet) {
                    t = s;
                    break;
                }
            }
            return t;
        }
        static clean() {
            this.zombieBirthList = [], this.cacheDieZomBieList = [], this.birthCount = 1500, 
            this.eachRound = 5, this.round = 1, this.isFinish = !1, this.bulletSupplyCount = 4e3, 
            this.lifeSupplyCount = 7e3, this.maxRound = 5, this.rondNum = 1;
            for (let e = 0; e < this.bulletSupplyList.length; e++) this.bulletSupplyList[e] && (this.bulletSupplyList[e].destroy(), 
            this.bulletSupplyList[e] = null);
            for (let e = 0; e < this.lifeSupplyList.length; e++) this.lifeSupplyList[e] && (this.lifeSupplyList[e].destroy(), 
            this.lifeSupplyList[e] = null);
            this.bulletSupplyList = [], this.lifeSupplyList = [];
        }
    }
    ja.zombieBirthList = [], ja.birthCount = 5e3, ja.eachRound = 5, ja.maxRound = 5, 
    ja.round = 1, ja.cacheDieZomBieList = [], ja.isFinish = !1, ja.bulletSupplyList = [], 
    ja.bulletSupplyCount = 4e3, ja.lifeSupplyList = [], ja.lifeSupplyCount = 7e3, ja.taskZombieNum = 0, 
    ja.rondNum = 1;
    class Ja extends T.view.native.NativeBanner2ViewUI {
        constructor() {
            super(), this.isCanRefresh = !0, this.isFirstTouch = !0, this.isCanAutoShow = !0;
        }
        onAwake() {
            this.left = 0, this.bottom = 10, this.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), this.funcId = L.register(w.REFRESH_NATIVE_AD, this.refresh, this), 
            this.refresh();
        }
        onDestroy() {
            Laya.timer.clearAll(this), L.unregisterByFuncId(this.funcId), At.autoUnlinkUIReference(this), 
            j.hideBannerAd();
        }
        onBtnAd() {
            if (q.getTouch() && (hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdClick({
                adId: j.nativeExtendList.data.adId.toString()
            }), hl.platform == v.VIVO)) {
                j.preloadNativeAdExtend(function() {}, function() {}, i.BANNER);
            }
        }
        onBtnClose() {
            this.destroy();
        }
        refresh() {
            this.isCanRefresh && this.imgAd && (j.nativeExtendList.ad ? (j.hideBannerAd(), this.isCanAutoShow && this.show(), 
            hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdShow({
                adId: j.nativeExtendList.data.adId.toString()
            }), this.imgAd.skin = j.nativeExtendList.data.imgUrlList[0]) : (this.autoHide(), 
            j.showBannerAd()));
        }
        hide() {
            this.destroyed || (this.isCanAutoShow = !1, this.mouseEnabled = !1, this.visible = !1);
        }
        autoHide() {
            this.mouseEnabled = !1, this.visible = !1;
        }
        show() {
            this.destroyed || (this.isCanAutoShow = !0, j.nativeExtendList.ad && (this.mouseEnabled = !0, 
            this.visible = !0));
        }
    }
    class $a extends T.view.matching.MatchingViewUI {
        constructor() {
            super(), this.maxLen = 0, this.playerList = [], this.playerNum = 0, this.dataList = [], 
            this.ready = {
                resReady: !1,
                matching: !1,
                mapUrl: null
            }, this.activeTime = 0, this.step = 0, this.width = this.stage.width, this.height = this.stage.height, 
            this.maxLen = this.imgPro.width, this.imgPro.width = 0;
        }
        onAwake() {
            this.init(), this.setPlatformStyle();
            var e = this;
            this.timer.loop(100, this, function() {
                e.activeTime += 100, 2500 == e.activeTime && e.doStep();
            });
        }
        doStep() {
            this.step++, this.step >= 2 && (this.imgPro.width = 0, Laya.Tween.clearAll(this.imgPro), 
            Laya.Tween.to(this.imgPro, {
                width: this.maxLen
            }, 200, null, Laya.Handler.create(this, function() {
                this.destroy();
            })));
        }
        onDestroy() {
            this.timer.clearAll(this), this.maxLen = null, this.playerList = null, this.playerNum = null, 
            this.ready = null, this.txtContent = null, this.txtPercent = null, this.ani1 = null, 
            this.ani2 = null, this.ani3 = null, this.ani4 = null, this.dataList = null, Bt.getFunctionViewCtrl(Er.GAME).setNewPlayerArm();
        }
        init() {
            hl.platform != v.OPPO && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.nativeBanner = new Ja(), 
            this.addChild(this.nativeBanner), this.nativeBanner && this.nativeBanner.show()), 
            j.hideBannerAd(), Rs.cleanDataList(), this.ani2.play(0, !0), this.ani1.play(0, !0), 
            this.ani3.play(0, !1), this.ani3.on(Laya.Event.COMPLETE, this, () => {
                this.ani4.play(0, !1);
            }), this.ani4.on(Laya.Event.COMPLETE, this, () => {
                this.ani3.play(0, !1);
            }), Ba.setModelTargetKillSore(), Wt.matchingShow(), Mt.mode == Tt.BIOCHEMISTRY ? this.txtContent.text = "目标：" + Wt.fixedTime + "s内清除" + ja.matchingShow() + "只僵尸" : this.txtContent.text = "目标：率先获得" + Ba.targetKillSore + "分队伍获胜";
        }
        onBtnClose() {
            q.getTouch() && (this.ready.matching && this.ready.resReady && null != this.ready.mapUrl || this.destroy());
        }
        setProgress(e) {
            this.txtPercent.text = Math.floor(100 * e) + "%";
            let t = this.maxLen * e;
            Laya.Tween.clearAll(this.imgPro), Laya.Tween.to(this.imgPro, {
                width: t
            }, 200);
        }
        close() {
            this.doStep();
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {}
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
    }
    class es extends T.view.equip.ProduceGoldUI {
        constructor(e, t = !0) {
            super(), this.price = null, this.isAddGold = !0, this.price = e, this.txtProduce.text = this.price.toString(), 
            this.anchorX = .5, this.anchorY = .5, this.isAddGold = t;
        }
        onAwake() {}
        onDestroy() {
            this.txtProduce = null, this.price = null;
        }
        updateGold() {
            this.price < 0 ? this.visible = !1 : (this.visible = !0, this.isAddGold && (tl.getInstance().rewardGold(this.price), 
            Bt.getFunctionViewCtrl(Er.FIRST) && (Bt.getFunctionViewCtrl(Er.FIRST).price += this.price)));
        }
        setSpecial(e) {
            this.txtProduce.text = "+" + this.price.toString();
        }
        resetSetData(e) {
            this.price = e, this.price || (this.price = 0), this.price <= 0 && (this.visible = !1), 
            this.txtProduce.text = "+" + this.price.toString();
        }
    }
    class ts extends T.view.equip.SynthesisCellUI {
        constructor(e) {
            super(), this.curData = null, this.productGold = null, this.countDown = 1e3, this.synthesisAni = null, 
            this.curData = e, console.log("当前数据ID：", this.curData), this.init();
        }
        onAwake() {}
        onDestroy() {
            this.curData = null, this.productGold = null, this.countDown = null, this.synthesisAni = null, 
            this.imgBg = null, this.imgLock = null, this.imgSelect = null, this.imgTarget = null, 
            this.txtLv = null, this.txtName = null;
        }
        init() {
            Da.loadFont(ul.FNT.FNT2, this.txtLv), this.addEffect(), this.setState(), this.createProductGold();
        }
        addEffect() {
            this.synthesisAni = new Laya.Animation(), this.synthesisAni.loadAnimation(ul.SYNTHESIS_UI.SYNTHESIS_ANI), 
            this.synthesisAni.x = this.width / 2, this.synthesisAni.y = this.height / 2, this.synthesisAni.visible = !1, 
            this.synthesisAni.on(Laya.Event.COMPLETE, this, () => {
                this.synthesisAni.visible = !1;
            }), this.addChild(this.synthesisAni);
        }
        playAni() {
            this.synthesisAni && (this.synthesisAni.visible = !0, this.synthesisAni.play(0, !1));
        }
        sameSelect() {
            this.imgSelect.visible = !0, this.imgTarget.alpha = 1, this.imgBg.skin = ul.SYNTHESIS_UI.CELL_TOUCHED, 
            this.ani2.play(0, !0);
        }
        unSameAsh() {
            this.imgBg.disabled = !0, this.imgTarget.disabled = !0;
        }
        exitAsh() {
            this.imgBg.disabled = !1, this.imgTarget.disabled = !1;
        }
        select() {
            this.imgSelect.visible = !0, this.imgTarget.alpha = .3, this.imgBg.skin = ul.SYNTHESIS_UI.CELL_TOUCHED;
        }
        unSelect() {
            this.imgSelect.visible = !1, this.imgTarget.alpha = 1, this.ani2.stop(), this.imgTarget.rotation = 0, 
            this.imgBg.disabled = !1, this.imgTarget.disabled = !1, this.imgBg.skin = ul.SYNTHESIS_UI.CELL_TOUCH;
        }
        autoToLight() {
            this.imgBg.skin = ul.SYNTHESIS_UI.CELL_TOUCHED, this.timer.once(1e3, this, () => {
                this.imgBg.skin = ul.SYNTHESIS_UI.CELL_TOUCH;
            });
        }
        autoToLightNoAn() {
            this.imgBg.skin = ul.SYNTHESIS_UI.CELL_TOUCHED;
        }
        autoToAn() {
            this.imgBg.skin = ul.SYNTHESIS_UI.CELL_TOUCH;
        }
        createProductGold() {
            this.productGold = new es(null != this.curData && -1 != this.curData && -2 != this.curData ? A.getDataByKey(this.curData).produce : -100), 
            this.productGold.alpha = 0, this.productGold.x = this.width / 2, this.productGold.y = this.height / 2, 
            this.addChild(this.productGold);
        }
        setState(e = !1) {
            if (this.imgSelect.visible = !1, this.imgLock.visible = !1, this.imgSelect.visible = !1, 
            this.imgTarget.visible = !1, this.txtLv.visible = !1, this.txtName.visible = !1, 
            this.imgBg.alpha = 1, -1 == this.curData) this.imgBg.disabled = !1; else if (null == this.curData) this.imgBg.disabled = !0, 
            this.imgLock.visible = !0, this.imgBg.alpha = .6; else {
                this.imgBg.disabled = !1, this.imgTarget.visible = !0, this.txtLv.visible = !0, 
                this.txtName.visible = !0;
                let t = A.getDataByKey(this.curData);
                t ? (this.imgTarget.scale(.2, .2), Laya.Tween.clearAll(this.imgTarget), e ? Laya.Tween.to(this.imgTarget, {
                    scaleX: 1.3,
                    scaleY: 1.3
                }, 300, Laya.Ease.backOut, Laya.Handler.create(this, () => {
                    Laya.Tween.to(this.imgTarget, {
                        scaleX: 1,
                        scaleY: 1
                    }, 300, Laya.Ease.backOut, Laya.Handler.create(this, () => {
                        this.imgTarget.scale(1, 1);
                    }));
                })) : Laya.Tween.to(this.imgTarget, {
                    scaleX: 1,
                    scaleY: 1
                }, 300, Laya.Ease.backOut, Laya.Handler.create(this, () => {
                    this.imgTarget.scale(1, 1);
                })), this.imgTarget.skin = t.icon, this.txtName.text = t.name, this.txtLv.text = t.id.toString()) : (this.imgBg.disabled = !1, 
                this.imgTarget.visible = !1, this.txtLv.visible = !1, this.txtName.visible = !1);
            }
        }
        playProductGoldAni() {
            -1 != this.curData && null != this.curData && (this.countDown -= Ce.gSysTimer.delta, 
            this.countDown < 0 && (this.countDown = 5e3, Laya.Tween.clearAll(this.productGold), 
            this.parent.parent.parent && (this.productGold.y = this.height / 2, this.productGold.alpha = 1, 
            this.ani1.play(0, !1), Laya.Tween.to(this.productGold, {
                y: 0
            }, 500, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this.productGold, {
                    y: -5,
                    alpha: 0
                }, 800, null, Laya.Handler.create(this, () => {
                    Laya.Tween.clearAll(this.productGold);
                }));
            }), 200)), this.productGold.updateGold()));
        }
    }
    class is extends T.view.equip.AirdropItemUI {
        constructor(e) {
            super(), this.data = null, this.isUse = !1, this.data = e, this.isUse = this.data.isUse;
        }
        resetData(e) {
            this.visible = !0, this.data = e, this.isUse = this.data.isUse;
        }
        onAwake() {
            this.ani1.play(0, !0), this.ani2.play(0, !0), this.on(Laya.Event.CLICK, this, this.onBtnTouch);
        }
        onDestroy() {
            this.ani1 = null, this.ani2 = null;
        }
        onBtnTouch() {
            console.log("点击宝箱:", this.data);
            let e = this;
            if (il.play(ml.TOUCHBOX), this.data.type == rs.DIRECT_OPEN) this.data.direct(), 
            this.visible = !1, this.isUse = !0; else {
                1 == ls.getInstance().getEmptyPosNum() && (this.data.type = rs.SUPERREWARD_SINGLE);
                let t = {
                    data: this.data,
                    commonCb: function() {
                        e.visible = !1, e.isUse = !0;
                    }
                };
                Bt.openFunction(Er.SUPER_REWARD, gr.COVER, ur.VIEW, St.HIDE, t);
            }
        }
    }
    class as extends T.view.guide.ApertureGuideItemUI {
        constructor() {
            super(), this.visible = !1;
        }
        onDestroy() {
            this.ani1 = null;
        }
        play(e) {
            this.visible || (this.visible = !0), this.ani1.play(0, !0), e && (this.imgFinger.visible || (this.imgFinger.visible = !0));
        }
        stop() {
            this.visible && (this.visible = !1), this.ani1.stop();
        }
    }
    class ss extends T.view.guide.FingerAniUI {
        constructor() {
            super(), this.visible = !1;
        }
        onDestroy() {
            this.ani1 = null;
        }
        play() {
            this.visible || (this.visible = !0), this.ani1.play(0, !0);
        }
        stop() {
            this.visible && (this.visible = !1), this.ani1.stop();
        }
    }
    class ns {
        static createCommonAperture(e) {
            let t = new as();
            return e.addChild(t), t;
        }
        static createFinger(e) {
            let t = new Laya.Image("sub1/ui/guide/img_1.png");
            return e.addChild(t), t;
        }
        static createFingerAniCtrl(e) {
            let t = new ss();
            return e.addChild(t), t;
        }
    }
    ns.synthesisGuidanceSteps = 1, ns.curEquiplLibraryStep = Et.BUY;
    let os = {
        EMPTY_BOX: -1,
        AIRDROP_BOX: -2
    }, rs = {
        DIRECT_OPEN: 1,
        SUPERREWARD_SINGLE: 2,
        SUPERREWARD_DOUBLE: 3
    };
    class ls extends Laya.Script {
        constructor() {
            super(), this.container = null, this.arrCache = [], this.isSynthesising = !1, this.airdropNum = 0, 
            this.maxAirdropNum = 3, this.isCanShowTwoSuperNum = !1, this.superRewardNum = 0, 
            this.airDropList = [], this.newID = 1, this.imgDailyGuideFinger = null, this.dailyAperture = null, 
            this.newcacheList = [], this.isDailyGudeCompounding = !1, this.isDailyGudeToBuy = !1;
        }
        static getInstance() {
            return ls.instance || (ls.instance = new ls()), ls.instance;
        }
        setContent(e, t, i) {
            this.container = e, this.arrCache = [], this.init(t, i);
        }
        init(e, t) {
            let i = tl.getInstance().getMatrix(), a = 0;
            for (let s = 0; s < t; s++) for (let t = 0; t < e; t++) {
                let e = new ts(i[++a - 1]);
                e.x = 20 + 284 * t, e.y = 23 + 163.5 * s, this.arrCache.push(e), this.container.addChild(e);
            }
            this.initAirDrop();
        }
        addArm(e, t, i, a = !1) {
            if (console.log("当前格子的武器ID:", e), !e) return;
            e.curData = i, console.log("当前格子的武器ID:", e.curData), e.setState(a);
            let s = tl.getInstance().getMatrix();
            s[t] = i, e.sameSelect(), Laya.timer.once(500, this, function() {
                e.unSelect();
            }), e.productGold && e.productGold.resetSetData(A.getDataByKey(i).produce), tl.getInstance().updateMatrix(s), 
            (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) && this.stopDailyGuideCompound();
        }
        createImgDailyGuideFinger(e) {
            this.imgDailyGuideFinger || (this.imgDailyGuideFinger = ns.createFinger(e), this.imgDailyGuideFinger.visible = !1, 
            this.imgDailyGuideFinger.rotation = -45);
        }
        createDailyAperture(e) {
            this.dailyAperture || (this.dailyAperture = ns.createCommonAperture(e), this.dailyAperture.visible = !1, 
            this.dailyAperture.anchorX = .5, this.dailyAperture.anchorY = .5, this.dailyAperture.centerX = 0, 
            this.dailyAperture.centerY = 0);
        }
        setDailyGuideCompound() {
            if (!this.isDailyGudeCompounding) {
                let e = this;
                this.newcacheList = [];
                for (let t = 0; t < this.arrCache.length; t++) {
                    let i = this.arrCache[t];
                    if (null != i.curData && i.curData != os.AIRDROP_BOX && i.curData != os.EMPTY_BOX) {
                        for (let t = 0; t < this.newcacheList.length; t++) if (this.newcacheList[t].curData == i.curData) {
                            i.autoToLightNoAn(), this.newcacheList[t].autoToLightNoAn(), this.imgDailyGuideFinger.visible = !0;
                            let a = function() {
                                e.imgDailyGuideFinger.x = e.newcacheList[t].x + e.newcacheList[t].width / 2, e.imgDailyGuideFinger.y = e.newcacheList[t].y + e.newcacheList[t].height / 2, 
                                Laya.Tween.to(e.imgDailyGuideFinger, {
                                    x: i.x + i.width / 2,
                                    y: i.y + i.height / 2
                                }, 2e3, Laya.Ease.cubicOut, Laya.Handler.create(e, a));
                            };
                            return a(), void (this.isDailyGudeCompounding = !0);
                        }
                        this.newcacheList.push(i);
                    }
                }
                this.isDailyGudeCompounding = !1;
            }
        }
        getIsHasSame() {
            let e = [];
            for (let t = 0; t < this.arrCache.length; t++) {
                let i = this.arrCache[t];
                if (null != i.curData && i.curData != os.AIRDROP_BOX && i.curData != os.EMPTY_BOX) {
                    for (let t = 0; t < e.length; t++) if (e[t].curData == i.curData) return !0;
                    e.push(i);
                }
            }
            return !1;
        }
        stopDailyGuideCompound() {
            this.imgDailyGuideFinger.visible = !1, this.isDailyGudeCompounding = !1;
            for (let e = 0; e < this.arrCache.length; e++) {
                this.arrCache[e].autoToAn();
            }
            Laya.Tween.clearAll(this.imgDailyGuideFinger);
        }
        guideDailyGuideToBuy() {
            console.log("是否还有空位：", this.checkEmptyPos(), this.isDailyGudeCompounding), this.checkEmptyPos() ? this.isDailyGudeCompounding ? (this.isDailyGudeToBuy = !1, 
            this.dailyAperture.stop()) : this.isDailyGudeToBuy || (this.isDailyGudeToBuy = !0, 
            this.imgDailyGuideFinger.visible = !1, this.dailyAperture.play(!0)) : this.isDailyGudeCompounding || (this.isDailyGudeToBuy = !1, 
            this.imgDailyGuideFinger.visible = !1, this.dailyAperture.stop());
        }
        action(e, t) {
            Laya.Tween.to(this.imgDailyGuideFinger, {
                x: this.imgDailyGuideFinger.x + 30,
                y: this.imgDailyGuideFinger.y + 30
            }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function() {
                Laya.Tween.to(this.imgDailyGuideFinger, {
                    x: e,
                    y: t
                }, 400, Laya.Ease.cubicOut, Laya.Handler.create(this, function() {
                    this.action(e, t);
                }));
            }));
        }
        checkEmptyPos() {
            let e = tl.getInstance().getMatrix();
            for (let t = 0; t < e.length; t++) if (e[t] == os.EMPTY_BOX) return !0;
            return !1;
        }
        getLowerArm() {
            let e = tl.getInstance().getSkinLib(), t = e[0];
            for (let i = 0; i < e.length; i++) t > e[i] && (t = e[i]);
            return t;
        }
        getMaxArm() {
            return tl.getInstance().getSynthesisMaxId();
        }
        initAirDrop() {
            let e = tl.getInstance().getMatrix();
            for (let t = 0; t < e.length; t++) {
                let i = 0;
                if (e[t] == os.AIRDROP_BOX) {
                    this.airdropNum++, i = t;
                    let e = new is(this.airDropData(this.arrCache[i], i));
                    e.x = this.arrCache[i].width / 2, e.y = this.arrCache[i].height / 2, e.anchorX = .5, 
                    e.anchorY = .5, this.arrCache[i].addChild(e), this.arrCache[i].curData = os.AIRDROP_BOX, 
                    this.airDropList.push(e);
                }
            }
        }
        getRandomEmptyPosToAddAirDrop() {
            if (!this.isSynthesising && !(this.getEmptyPosNum() <= 3) && !Bt.getFunction(Er.SUPER_REWARD) && this.checkEmptyPos() && this.airdropNum < this.maxAirdropNum) {
                this.airdropNum++;
                let e = 0, t = tl.getInstance().getMatrix();
                for (let i = 0; i < t.length; i++) if (t[i] == os.EMPTY_BOX) {
                    e = i;
                    break;
                }
                let i = null, a = !1;
                for (let e = 0; e < this.airDropList.length; e++) {
                    let t = this.airDropList[e];
                    t.isUse && (i = t, a = !0);
                }
                null == i ? i = new is(this.airDropData(this.arrCache[e], e)) : i.resetData(this.airDropData(this.arrCache[e], e)), 
                i.x = this.arrCache[e].width / 2, i.y = this.arrCache[e].height / 2, i.anchorX = .5, 
                i.anchorY = .5, this.arrCache[e].addChild(i), this.arrCache[e].curData = os.AIRDROP_BOX, 
                a || this.airDropList.push(i), t[e] = os.AIRDROP_BOX, tl.getInstance().updateMatrix(t);
            }
        }
        getEmptyPosNum() {
            let e = 0, t = tl.getInstance().getMatrix();
            for (let i = 0; i < t.length; i++) t[i] == os.EMPTY_BOX && e++;
            return e;
        }
        getTwoEmptyPos(e) {
            let t = [], i = tl.getInstance().getMatrix();
            for (let a = 0; a < i.length; a++) if (i[a] == os.EMPTY_BOX && 0 != e) {
                e--;
                let i = {
                    cell: this.arrCache[a],
                    index: a
                };
                t.push(i);
            }
            return t;
        }
        airDropData(e, t) {
            let i = this.getLowerArm(), a = this.getMaxArm();
            console.log("当前合成最高武器等级：", a, i);
            let s = this;
            if (1 == a || 2 == a) {
                return {
                    type: rs.DIRECT_OPEN,
                    showMax: null,
                    showLower: null,
                    direct: function() {
                        s.addArm(e, t, i, !1), e.autoToLight(), 0 != s.airdropNum && s.airdropNum--;
                    },
                    isUse: !1,
                    viewSuccess: null,
                    viewFail: null
                };
            }
            {
                let n = rs.SUPERREWARD_SINGLE;
                console.log("第几次获取数据：", this.superRewardNum), this.superRewardNum % 4 == 0 && (this.isCanShowTwoSuperNum = !0), 
                this.superRewardNum++, this.getEmptyPosNum() > 1 && this.isCanShowTwoSuperNum && (n = rs.SUPERREWARD_DOUBLE, 
                this.isCanShowTwoSuperNum = !1);
                let o = Ae.onlyOneRandomIntOrFloat(0, 1) > .5 ? 2 : 3, r = 3 == a ? a : Ae.onlyOneRandomInt(3, a), l = 3 == r ? i : r - o;
                return {
                    type: n,
                    direct: null,
                    showMax: r,
                    showLower: l,
                    isUse: !1,
                    viewSuccess: function() {
                        if (n == rs.SUPERREWARD_SINGLE) console.log("单个超级武器奖励格子：", e), s.addArm(e, t, r, !1), 
                        e.autoToLight(); else {
                            let i = s.getTwoEmptyPos(1);
                            console.log("多个超级武器奖励格子：", e, i, i.length), i.length > 0 ? (s.addArm(i[0].cell, i[0].index, r, !1), 
                            s.addArm(e, t, r, !1), i[0].cell.autoToLight(), e.autoToLight()) : (s.addArm(e, t, r, !1), 
                            e.autoToLight());
                        }
                        0 != s.airdropNum && s.airdropNum--;
                    },
                    viewFail: function() {
                        s.addArm(e, t, l, !1), e.autoToLight(), 0 != s.airdropNum && s.airdropNum--;
                    }
                };
            }
        }
        removeAirDrop() {}
        removeArm(e, t, i) {
            e.curData = i, console.log("移除武器：", e.curData), e.setState();
            let a = tl.getInstance().getMatrix();
            a[t] = i, tl.getInstance().updateMatrix(a), e.productGold.resetSetData(-100);
        }
        getArrCache() {
            return this.arrCache;
        }
        checkUpgrade(e) {
            let t = tl.getInstance().getMatrix(), i = t[0];
            for (let e = 0; e < t.length; e++) {
                let a = t[e];
                a > i && (i = a);
            }
            e > tl.getInstance().getSynthesisMaxId() && (console.log("解锁了新的枪支"), this.refreshMatrix(), 
            tl.getInstance().setSkinLib(e), this.addNewArmQuality(e), tl.getInstance().updateWarehouseGroove(), 
            this.newID = e, Bt.openFunction(Er.NEW_EQUIP_UNLOCK, gr.COVER, ur.VIEW, St.HIDE, e), 
            tl.getInstance().updateSkinGameCurLib(e));
        }
        getEquip(e, t = null, i = null, a = !0) {
            console.log("解锁了新的枪支:", e), i ? (console.log("获得非永久枪支"), tl.getInstance().setEquipHaveTime(e, i)) : tl.getInstance().getEquipHaveTime(e) && (console.log("设置为永久枪支"), 
            tl.getInstance().setEquipHaveTime(e)), tl.getInstance().setSkinLib(e), this.addNewArmQuality(e), 
            tl.getInstance().updateSkinGameCurLib(e), tl.getInstance().updateWarehouseGroove();
            let s = Ur.EQUIP.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e);
            a ? Bt.openFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                id: s,
                cb: t
            }) : Bt.registerAutoOpenFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                id: s,
                cb: t
            });
        }
        addNewArmQuality(e) {
            let t = {
                id: e,
                lv: 1,
                fire: A.getDataByKey(e).hit,
                pierceThrough: A.getDataByKey(e).pierceThrough,
                firingRate: A.getDataByKey(e).interval,
                numberOfBullets: A.getDataByKey(e).magazineBullet,
                range: A.getDataByKey(e).range,
                accurate: 100,
                ammunitionChange: A.getDataByKey(e).bullets,
                sight: A.getDataByKey(e).sight,
                movingSpeed: A.getDataByKey(e).movingSpeed,
                biochemicalCharging: A.getDataByKey(e).biochemicalCharging,
                bodyMultiple: A.getDataByKey(e).bodyMultiple,
                headHit: A.getDataByKey(e).headHit,
                limbMultiple: A.getDataByKey(e).limbMultiple,
                limbHit: A.getDataByKey(e).limbHit,
                maxBodyHit: A.getDataByKey(e).maxBodyHit,
                maxHeadHit: A.getDataByKey(e).maxHeadHit,
                maxLimbHit: A.getDataByKey(e).maxLimbHit
            };
            tl.getInstance().addNewArmQuality(t);
        }
        refreshMatrix() {
            tl.getInstance().openNewMatrix();
            let e = tl.getInstance().getMatrix();
            console.log("matrix:", e);
            for (let t in this.arrCache) {
                let i = this.arrCache[t];
                i.curData = e[t], i.setState();
            }
        }
        synthesis(e, t, i, a) {
            if (!e) return;
            if (!t) return;
            if (this.isSynthesising) return;
            this.isSynthesising = !0;
            let s = new Laya.Image(e.imgTarget.skin), n = new Laya.Image(e.imgTarget.skin);
            e.addChild(s), e.addChild(n), s.anchorX = .5, s.anchorY = .5, n.anchorX = .5, n.anchorY = .5, 
            s.x = e.width / 2 - 20, s.y = e.height / 2 + 10, n.x = e.width / 2 + 20, n.y = e.height / 2 + 10, 
            Laya.Tween.to(s, {
                x: e.width / 2
            }, 250, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                Laya.Tween.clearAll(s), s.destroy();
            })), Laya.Tween.to(n, {
                x: e.width / 2
            }, 250, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                Laya.Tween.clearAll(n), n.destroy();
                let s = e.curData + 1;
                s = Math.min(s, A.keys[A.keys.length - 1]), console.log("合成时候的当前矩阵：", tl.getInstance().getMatrix()), 
                console.log("合成时候的目标ID：", s, "第几个:", i), il.playEffect(ml.COMPOND), this.isSynthesising = !1, 
                e.playAni(), this.checkUpgrade(s), this.addArm(e, i, s), this.removeArm(t, a, os.EMPTY_BOX), 
                Ts.synthesisViewCtrl.updateGuide(), tl.getInstance().refreshCanbuyArm(), tl.getInstance().updateSynthesisMaxId(s);
            })), (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) && this.stopDailyGuideCompound();
        }
        exchange(e, t, i, a) {
            if (this.isSynthesising) return;
            if (!e) return;
            if (!t) return;
            let s = t.curData, n = a;
            this.addArm(t, n, e.curData), this.addArm(e, i, s), (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) && this.stopDailyGuideCompound();
        }
        moveToEmptyEquip(e, t, i, a) {
            this.isSynthesising || e && t && (this.addArm(e, i, t.curData), this.removeArm(t, a, os.EMPTY_BOX), 
            (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) && this.stopDailyGuideCompound());
        }
        getAirData() {
            if (this.getEmptyPosNum() <= 3) return null;
            if (!this.checkEmptyPos()) return null;
            if (this.getMaxArm() < 3) return null;
            let e = 0, t = tl.getInstance().getMatrix();
            for (let i = 0; i < t.length; i++) if (t[i] == os.EMPTY_BOX) {
                e = i;
                break;
            }
            return this.airDropData(this.arrCache[e], e);
        }
    }
    class hs {
        static setRewardForInsufficientGoldCoins() {
            this.curLackGoldRewards = Math.floor(A.getDataByKey(this.id).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())) * this.lackGoldMultiple;
        }
        static reduceLackGoldMultiple() {
            1 != this.lackGoldMultiple && this.lackGoldMultiple--;
        }
        static setRewardForInsufficientDiamonds() {
            let e = tl.getInstance().getSynthesisMaxId() > 2 ? tl.getInstance().getSynthesisMaxId() - 2 : tl.getInstance().getSynthesisMaxId();
            this.curLackDiamondsRewards = (A.getDataByKey(e).priceByDiamond - 10 <= 0 ? 10 : A.getDataByKey(e).priceByDiamond) * this.lackDiamondsMultiple;
        }
        static reduceLackDiamondsMultiple() {
            1 != this.lackDiamondsMultiple && this.lackDiamondsMultiple--;
        }
        static setfreeRewardForGoldCoins() {
            this.curFreeGoldRewards = Math.floor(A.getDataByKey(this.id).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum()) * 2 - 10 + tl.getInstance().getSynthesisMaxId() * (tl.getInstance().getBuyByGoldNum() - tl.getInstance().getSynthesisMaxId()));
        }
        static setfreeDiamondsRewards() {
            let e = tl.getInstance().getSynthesisMaxId() > 2 ? tl.getInstance().getSynthesisMaxId() - 2 : tl.getInstance().getSynthesisMaxId();
            this.curFreeDiamondsRewards = A.getDataByKey(e).priceByDiamond - 10 <= 0 ? 10 : A.getDataByKey(e).priceByDiamond - 10;
        }
        static setOflineReawrd() {
            this.offlineReawrds = Math.floor(Math.floor(A.getDataByKey(this.id).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum()) * 5 + tl.getInstance().getGold()) * tl.getInstance().curOffinetime / 5);
        }
        static setSettlementWinDiamondsRewards() {
            let e = tl.getInstance().getSynthesisMaxId() > 2 ? tl.getInstance().getSynthesisMaxId() - 2 : tl.getInstance().getSynthesisMaxId();
            this.settlementWinDiamondsRewards = A.getDataByKey(e).priceByDiamond - 10 <= 0 ? 20 : 2 * A.getDataByKey(e).priceByDiamond;
        }
        static setSettlementFailDiamondsRewards() {
            let e = tl.getInstance().getSynthesisMaxId() > 2 ? tl.getInstance().getSynthesisMaxId() - 2 : tl.getInstance().getSynthesisMaxId();
            this.settlementFailDiamondsRewards = A.getDataByKey(e).priceByDiamond - 10 <= 0 ? Math.floor(5) : Math.floor(A.getDataByKey(e).priceByDiamond / 2);
        }
        static setSettlementWinGoldsRewards() {
            this.settlementWinGoldsRewards = Math.floor(2 * Math.floor(A.getDataByKey(this.id).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())));
        }
        static setSettlementFailGoldsRewards() {
            this.settlementFailGoldsRewards = Math.floor(Math.floor(A.getDataByKey(this.id).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())) / 2);
        }
        static getSeniorBoxReward() {
            let e = tl.getInstance().getMaxUnLockArm();
            return console.log("maxArm:", e), e >= 3 && e < 4 ? (this.seniorBoxReward.gold = Math.floor(A.getDataByKey(e - 2).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
            this.seniorBoxReward.diamonds = Math.floor(Math.floor(A.getDataByKey(e - 1).priceByDiamond * Math.pow(hl.costDiamond, tl.getInstance().getBuyByDiamondNum())) / 2)) : e >= 4 ? (this.seniorBoxReward.gold = Math.floor(A.getDataByKey(e - 3).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
            console.log("当前金币奖励：", this.seniorBoxReward.gold, A.getDataByKey(e - 3).price, hl.costGold, tl.getInstance().getBuyByGoldNum()), 
            this.seniorBoxReward.diamonds = Math.floor(Math.floor(A.getDataByKey(e - 1).priceByDiamond * Math.pow(hl.costDiamond, tl.getInstance().getBuyByDiamondNum())) / 2)) : (this.seniorBoxReward.diamonds = 10, 
            this.seniorBoxReward.gold = Math.floor(A.getDataByKey(e).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum()))), 
            this.seniorBoxReward;
        }
        static getPrimaryBoxReward() {
            let e = tl.getInstance().getMaxUnLockArm();
            return this.primaryBoxReward.gold = e >= 5 ? this.seniorBoxReward.gold = Math.floor(A.getDataByKey(e - 4).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())) : 150, 
            this.primaryBoxReward;
        }
    }
    hs.id = 1, hs.lackGoldMultiple = 10, hs.curLackGoldRewards = 0, hs.lackDiamondsMultiple = 3, 
    hs.curLackDiamondsRewards = 0, hs.curFreeGoldRewards = 0, hs.curFreeDiamondsRewards = 0, 
    hs.offlineReawrds = 0, hs.settlementWinDiamondsRewards = 0, hs.settlementFailDiamondsRewards = 0, 
    hs.settlementWinGoldsRewards = 0, hs.settlementFailGoldsRewards = 0, hs.seniorBoxReward = {
        gold: 0,
        diamonds: 0
    }, hs.primaryBoxReward = {
        gold: 0
    };
    class cs extends T.view.native.NativeIcon1CellUI {
        constructor() {
            super(), this.isCanRefresh = !0, this.isFirstTouch = !0, this.isCanAutoShow = !0;
        }
        onAwake() {
            this.on(Laya.Event.CLICK, this, this.onBtnAd), this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), 
            this.funcId = L.register(w.REFRESH_NATIVE_AD, this.refresh, this), this.refresh();
        }
        onDestroy() {
            Laya.timer.clearAll(this), L.unregisterByFuncId(this.funcId), At.autoUnlinkUIReference(this), 
            j.hideBannerAd();
        }
        onBtnAd() {
            if (q.getTouch() && (hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendIconList.ad && j.nativeExtendIconList.ad.reportAdClick({
                adId: j.nativeExtendIconList.data.adId.toString()
            }), hl.platform == v.VIVO)) {
                j.preloadNativeAdExtend(function() {}, function() {}, i.BANNER);
            }
        }
        onBtnClose() {
            this.destroy();
        }
        refresh() {
            this.isCanRefresh && this.imgAd && (j.nativeExtendIconList.ad ? (j.hideBannerAd(), 
            this.isCanAutoShow && this.show(), hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendIconList.ad && j.nativeExtendIconList.ad.reportAdShow({
                adId: j.nativeExtendIconList.data.adId.toString()
            }), this.imgAd.skin = j.nativeExtendIconList.data.imgUrlList[0]) : (this.autoHide(), 
            j.showBannerAd()));
        }
        hide() {
            this.destroyed || (this.isCanAutoShow = !1, this.mouseEnabled = !1, this.visible = !1);
        }
        autoHide() {
            this.mouseEnabled = !1, this.visible = !1;
        }
        show() {
            this.destroyed || (this.isCanAutoShow = !0, j.nativeExtendIconList.ad && (this.mouseEnabled = !0, 
            this.visible = !0));
        }
    }
    class ds extends T.view.equip.SynthesisViewUI {
        constructor() {
            super(), this.preTouchXY = {
                x: 0,
                y: 0
            }, this.curImgData = {
                img: null,
                ID: -1,
                curIndex: -1,
                curCell: null
            }, this.price = 0, this.curBuyID = 1, this.btnDorpAir = null, this.step = 1, this.isCheckNoLocal = !1, 
            this.normalCount = 5e3, this.isOpen = !1, this.onceHC = !1, this.warehouseAperture = null, 
            this.centerX = 108, hl.platform != v.WEB_4399 && Laya.Browser.clientWidth / Laya.Browser.clientHeight < 1.5 && hl.adpaterIpad && (this.boxContentRoot.bottom = 276), 
            this.bottom = 0, this.zOrder = S.SYNTESIS, this.setGameEvent(), this.init(), this.setBtnEvent(), 
            this.boxContentRoot.centerX = -50;
        }
        onAwake() {}
        onDestroy() {
            this.preTouchXY = null, this.curImgData = null, this.price = null, this.curBuyID = null, 
            this.imgCurArm = null, this.txtLv = null, this.txtPrice = null, this.boxContentRoot = null, 
            this.btnBuy = null, this.btnRecovery = null, this.btnShop = null, L.unregisterByEventId(w.REFRESH_CANBUY_ARM), 
            L.unregisterByEventId(w.ADDARM_BY_SHOP);
        }
        onDisable() {
            (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) && ls.getInstance().stopDailyGuideCompound(), 
            this.isOpen = !1;
        }
        init() {
            this.adCtrl(), this.step = ns.synthesisGuidanceSteps, Da.loadFont(ul.FNT.FNT2, this.txtLv), 
            ls.getInstance().setContent(this.boxContentRoot, 4, 3), this.timer.frameLoop(1, this, this.updateTimer), 
            tl.getInstance().refreshCanbuyArm(), ls.getInstance().createImgDailyGuideFinger(this), 
            ls.getInstance().createDailyAperture(this.btnBuy);
            let e = tl.getInstance().getGuide();
            ns.curEquiplLibraryStep > e && (console.log("本地比较大--------------"), e = ns.curEquiplLibraryStep, 
            this.isCheckNoLocal = !0), console.log("这个guide-------------------------------:", e), 
            e < Et.TOEQUIP && this.createWarehouseAperture(this.btnWarehouse), this.timer.frameLoop(1, this, this.update);
        }
        createWarehouseAperture(e) {
            this.warehouseAperture ? (this.warehouseAperture.visible = !1, this.warehouseAperture.stop()) : (this.warehouseAperture = ns.createCommonAperture(e), 
            this.warehouseAperture.visible = !1, this.warehouseAperture.anchorX = .5, this.warehouseAperture.anchorY = .5, 
            this.warehouseAperture.centerX = 0, this.warehouseAperture.centerY = 0, this.warehouseAperture.stop());
        }
        unlockNewArm() {
            let e = A.getDataByKey(ls.getInstance().newID).icon, t = new Laya.Image(e);
            this.addChild(t), t.anchorX = .5, t.anchorY = .5, t.x = this.width / 2, t.y = this.height / 2, 
            t.scale(0, 0);
            let i = new Laya.Point(this.btnWarehouse.width / 2, this.btnWarehouse.height / 2);
            ol.isFullScreen() ? i.x -= 270 : i.x -= 130, i.y -= 80;
            let a = this.btnWarehouse.localToGlobal(i);
            Laya.Tween.to(t, {
                scaleX: 1,
                scaleY: 1
            }, 200, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(t, {
                    x: a.x,
                    y: a.y,
                    scaleX: .2,
                    scaleY: .2
                }, 1e3, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                    t && t.destroy();
                }));
            }));
            let s = this.btnWarehouse.getChildAt(0);
            Laya.Tween.to(s, {
                alpha: 1
            }, 200, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(s, {
                    alpha: 0
                }, 200, null, Laya.Handler.create(this, () => {}));
            }));
        }
        adCtrl() {
            hl.platform != v.OPPO && hl.platform != v.WEB || (console.log("创建合成格子"), this.nativeIcon1 = new cs(), 
            this.addChild(this.nativeIcon1), this.nativeIcon2 = new cs(), this.addChild(this.nativeIcon2), 
            this.nativeIcon1.x = this.width / 2 + 200, this.nativeIcon2.x = this.width / 2 - 290, 
            this.nativeIcon1.bottom = 30, this.nativeIcon2.bottom = 30, this.nativeIcon1.scale(.8, .8), 
            this.nativeIcon2.scale(.8, .8));
        }
        update() {
            if (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) {
                if (!this.isOpen) return;
                this.normalCount -= Laya.timer.delta, this.normalCount < 0 && (this.normalCount = 5e3, 
                (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) && ls.getInstance().setDailyGuideCompound());
            }
        }
        setGuide() {
            console.log("合成界面指引:", ns.curEquiplLibraryStep, tl.getInstance().getGuide(), this.step);
            let e = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > e && (e = ns.curEquiplLibraryStep, this.isCheckNoLocal = !0), 
            e) {
              case Et.BUY:
                if (console.log("购买指引"), 1 == this.step) ls.getInstance().dailyAperture.play(!0); else switch (e) {
                  case Et.BUY:
                    console.log("更新购买指引"), ls.getInstance().dailyAperture.stop(), 2 == this.step ? (console.log("一次合成"), 
                    ls.getInstance().setDailyGuideCompound()) : 3 == this.step ? (console.log("二次购买"), 
                    ls.getInstance().stopDailyGuideCompound(), ls.getInstance().dailyAperture.play(!0)) : 4 == this.step ? (console.log("三次购买"), 
                    ls.getInstance().stopDailyGuideCompound(), ls.getInstance().dailyAperture.play(!0)) : 5 == this.step ? (console.log("二次合成"), 
                    ls.getInstance().stopDailyGuideCompound(), ls.getInstance().setDailyGuideCompound()) : (console.log("最后一次合成指引"), 
                    ls.getInstance().stopDailyGuideCompound(), tl.getInstance().setGuide(), this.setGuide());
                    break;

                  case Et.SYNTHESIS:
                    console.log("更新合成指引"), ls.getInstance().stopDailyGuideCompound(), tl.getInstance().setGuide();
                }
                break;

              case Et.SYNTHESIS:
                console.log("合成指引"), 6 == this.step && ls.getInstance().setDailyGuideCompound();
                break;

              case Et.WAREHOUSE:
                console.log("指引进入仓库"), this.btnWarehouse && this.warehouseAperture.play(!0);
            }
        }
        updateGuide() {
            if (!this.onceHC && 2 == this.step) return;
            this.step++, 4 == this.step && ls.getInstance().getIsHasSame() && this.step++, ns.synthesisGuidanceSteps = this.step;
            let e = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > e && (e = ns.curEquiplLibraryStep), e) {
              case Et.BUY:
                console.log("更新购买指引"), ls.getInstance().dailyAperture.stop(), 2 == this.step ? (console.log("一次合成"), 
                ls.getInstance().setDailyGuideCompound()) : 3 == this.step ? (console.log("二次购买"), 
                ls.getInstance().stopDailyGuideCompound(), ls.getInstance().dailyAperture.play(!0)) : 4 == this.step ? (console.log("三次购买"), 
                ls.getInstance().stopDailyGuideCompound(), ls.getInstance().dailyAperture.play(!0)) : 5 == this.step ? (console.log("二次合成"), 
                ls.getInstance().stopDailyGuideCompound(), ls.getInstance().setDailyGuideCompound()) : (console.log("最后一次合成指引"), 
                ls.getInstance().stopDailyGuideCompound(), this.isCheckNoLocal ? ns.curEquiplLibraryStep++ : tl.getInstance().setGuide(), 
                this.setGuide());
                break;

              case Et.SYNTHESIS:
                console.log("更新合成指引"), ls.getInstance().stopDailyGuideCompound(), this.isCheckNoLocal ? ns.curEquiplLibraryStep++ : tl.getInstance().setGuide(), 
                this.setGuide();
            }
        }
        moveButNoHC() {
            tl.getInstance().getGuide() == Et.BUY ? 2 == this.step ? (ls.getInstance().stopDailyGuideCompound(), 
            ls.getInstance().setDailyGuideCompound()) : 5 == this.step && (ls.getInstance().stopDailyGuideCompound(), 
            ls.getInstance().setDailyGuideCompound()) : tl.getInstance().getGuide() == Et.SYNTHESIS && (ls.getInstance().stopDailyGuideCompound(), 
            ls.getInstance().setDailyGuideCompound());
        }
        updateTimer() {
            for (let e = 0; e < tl.getInstance().getMatrix().length; e++) {
                let t = tl.getInstance().getMatrix()[e];
                t != os.EMPTY_BOX && t != os.AIRDROP_BOX && ls.getInstance().getArrCache()[e] && ls.getInstance().getArrCache()[e].playProductGoldAni();
            }
            this.btnDorpAir && this.btnDorpAir.visible;
        }
        setGameEvent() {
            L.register(w.REFRESH_CANBUY_ARM, this.refreshCanBuyArm, this), L.register(w.ADDARM_BY_SHOP, this.refreshAddArm, this);
        }
        refreshAddArm(e) {
            if (!q.getTouch()) return;
            if (A.getDataByKey(this.curBuyID).price > tl.getInstance().getGold()) return;
            let t = null, i = 0;
            for (let e in ls.getInstance().getArrCache()) {
                let a = ls.getInstance().getArrCache()[e];
                if (a.curData == os.EMPTY_BOX) {
                    t = a, i = parseInt(e);
                    break;
                }
            }
            t && ls.getInstance().addArm(t, i, e.id);
        }
        setBtnEvent() {
            this.on(Laya.Event.MOUSE_DOWN, this, this.touchBegin), this.on(Laya.Event.MOUSE_MOVE, this, this.touchMove), 
            this.on(Laya.Event.MOUSE_UP, this, this.touchEnd), this.btnBuy.on(Laya.Event.CLICK, this, this.onBtnBuy), 
            this.btnShop.on(Laya.Event.CLICK, this, this.onBtnShop), this.btnWarehouse.on(Laya.Event.MOUSE_DOWN, this, this.onBtnWarehouseDown), 
            this.btnWarehouse.on(Laya.Event.MOUSE_OUT, this, this.onBtnWarehouseOut), this.btnWarehouse.on(Laya.Event.CLICK, this, this.onBtnWarehouse);
        }
        onBtnWarehouseDown() {
            this.btnWarehouse.getChildAt(0).alpha = 1;
        }
        onBtnWarehouseOut() {
            this.btnWarehouse.getChildAt(0).alpha = 0;
        }
        onBtnWarehouse() {
            Bt.openFunction(Er.LIBRARY, gr.COVER, ur.VIEW, St.ALL_SHOW);
        }
        refreshCanBuyArm(e) {
            hs.id = e.id, this.imgCurArm.skin = A.getDataByKey(e.id).icon, this.txtPrice.text = _t.parseGold(Math.floor(A.getDataByKey(e.id).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum()))).toString(), 
            this.txtLv.text = A.getDataByKey(e.id).id.toString(), this.price = Math.floor(A.getDataByKey(e.id).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
            this.curBuyID = e.id, console.log("刷新购买枪支--:", this.curBuyID, "\n当前枪支价格：", A.getDataByKey(e.id).price, "\n人物消耗倍数：", hl.costGold, "\n当前购买次数：", tl.getInstance().getBuyByGoldNum(), "\n最终所需价格：", this.price, "\n文本显示：", this.txtPrice.text);
        }
        recovery() {
            if (!this.curImgData.curCell) return;
            console.log("当前移除枪支:", this.curImgData);
            let e = new es(this.price, !0);
            this.addChild(e), e.setSpecial(this.price);
            let t = new Laya.Point(-this.btnRecovery.width, -this.btnRecovery.height), i = this.btnRecovery.localToGlobal(t);
            e.x = i.x, e.y = i.y, e.x -= 70, e.alpha = 1, il.playEffect(ml.COMPOND), Laya.Tween.to(e, {
                y: e.y - 7
            }, 500, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(e, {
                    y: e.y - 5,
                    alpha: 0
                }, 800, null, Laya.Handler.create(this, () => {
                    Laya.Tween.clearAll(e), e.updateGold(), e.destroy();
                }));
            })), ls.getInstance().removeArm(this.curImgData.curCell, this.curImgData.curIndex, os.EMPTY_BOX);
        }
        onBtnShop() {
            q.getTouch() && (this.normalCount = 5e3, Bt.openFunction(Er.SHOP, gr.COVER, ur.VIEW, St.HIDE));
        }
        onBtnBuy() {
            console.log("金币价格" + this.price);
            let e = ls.getInstance().getAirData();
            if (e && Math.random() > .7 && (!tl.getInstance().isNew || tl.onlineSec > 300)) {
                1 == ls.getInstance().getEmptyPosNum() && (e.type = rs.SUPERREWARD_SINGLE);
                let t = {
                    data: e,
                    commonCb: function() {}
                };
                return void Bt.openFunction(Er.SUPER_REWARD, gr.COVER, ur.VIEW, St.HIDE, t);
            }
            if (this.price > tl.getInstance().getGold()) return void Bt.openFunction(Er.ADD_GOLD, gr.COVER, ur.WINDOW, St.GOLD, 1);
            let t = null, i = 0;
            for (let e in ls.getInstance().getArrCache()) {
                let a = ls.getInstance().getArrCache()[e];
                if (a.curData == os.EMPTY_BOX) {
                    t = a, i = parseInt(e);
                    break;
                }
            }
            t ? (tl.getInstance().costGold(this.price), il.playEffect(ml.COMPOND), tl.getInstance().updateBuyByGoldNum(), 
            this.txtPrice.text = _t.parseGold(Math.floor(A.getDataByKey(this.curBuyID).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum()))).toString(), 
            this.price = Math.floor(A.getDataByKey(this.curBuyID).price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
            ls.getInstance().addArm(t, i, this.curBuyID, !0), console.log("当前购买次数：", tl.getInstance().getBuyByGoldNum()), 
            this.step < 5 && this.updateGuide()) : Oi.showNotificationClick("卡槽已满，请合成或回收枪械");
        }
        touchBegin(e) {
            console.log("touchBegin"), this.normalCount = 5e3;
            let t = null;
            this.preTouchXY.x = e.stageX, this.preTouchXY.y = e.stageY;
            for (let i in ls.getInstance().getArrCache()) {
                let a = ls.getInstance().getArrCache()[i];
                a.hitTestPoint(e.stageX, e.stageY) && a.curData != os.EMPTY_BOX && a.curData != os.AIRDROP_BOX && null != a.curData && (this.curImgData.img ? this.curImgData.img.skin = a.imgTarget.skin : (this.curImgData.img = new Laya.Image(a.imgTarget.skin), 
                this.curImgData.img.anchorX = .5, this.curImgData.img.anchorY = .5, this.boxContentRoot.addChild(this.curImgData.img)), 
                this.curImgData.img.x = a.x + a.width / 2, this.curImgData.img.y = a.y + a.height / 2, 
                this.curImgData.ID = a.curData, t = a.curData, this.curImgData.curIndex = parseInt(i), 
                this.curImgData.curCell = a, a.select(), this.btnRecovery.getChildAt(0).alpha = 1);
            }
            if (null != t) for (let e in ls.getInstance().getArrCache()) {
                let i = ls.getInstance().getArrCache()[e];
                this.curImgData.curIndex != parseInt(e) && t == i.curData ? i.sameSelect() : this.curImgData.curIndex != parseInt(e) && t != i.curData && i.curData != os.EMPTY_BOX && i.unSameAsh();
            }
        }
        touchMove(e) {
            if (console.log("touchMove"), this.normalCount = 5e3, this.curImgData.img) {
                let t = new Laya.Point(e.stageX, e.stageY), i = this.boxContentRoot.globalToLocal(t);
                this.curImgData.img.x = i.x, this.curImgData.img.y = i.y;
            }
        }
        touchEnd(e) {
            this.normalCount = 5e3, this.btnRecovery.getChildAt(0).alpha = .3, console.log("touchEnd");
            let t = !1, i = null, a = 0;
            for (let e in ls.getInstance().getArrCache()) {
                let t = ls.getInstance().getArrCache()[e];
                console.log("当前item.curData：", t.curData), t.curData == this.curImgData.ID ? t.unSelect() : t.curData != this.curImgData.ID && null != t.curData && t.exitAsh();
            }
            for (let s in ls.getInstance().getArrCache()) {
                let n = ls.getInstance().getArrCache()[s];
                n.hitTestPoint(e.stageX, e.stageY) && (a = parseInt(s), i = n, t = !0);
            }
            if (this.btnRecovery.hitTestPoint(e.stageX, e.stageY)) return this.recovery(), this.curImgData.ID = os.EMPTY_BOX, 
            this.curImgData.curIndex = os.EMPTY_BOX, this.curImgData.img && this.curImgData.img.destroy(), 
            this.curImgData.img = null, void (this.curImgData.curCell = null);
            t ? this.curImgData.ID == i.curData && this.curImgData.ID != os.EMPTY_BOX && this.curImgData.ID != os.AIRDROP_BOX && null != this.curImgData.ID && a != this.curImgData.curIndex ? (2 == this.step && (this.onceHC = !0), 
            ls.getInstance().synthesis(i, this.curImgData.curCell, a, this.curImgData.curIndex), 
            this.curImgData.ID = os.EMPTY_BOX, this.curImgData.curIndex = os.EMPTY_BOX, this.curImgData.img && this.curImgData.img.destroy(), 
            this.curImgData.img = null, this.curImgData.curCell = null) : this.curImgData.ID != i.curData && i.curData != os.EMPTY_BOX && i.curData != os.AIRDROP_BOX && null != i.curData ? (ls.getInstance().exchange(i, this.curImgData.curCell, a, this.curImgData.curIndex), 
            this.moveButNoHC(), this.curImgData.ID = os.EMPTY_BOX, this.curImgData.curIndex = os.EMPTY_BOX, 
            this.curImgData.img && this.curImgData.img.destroy(), this.curImgData.img = null, 
            this.curImgData.curCell = null) : this.curImgData.ID != i.curData && i.curData == os.EMPTY_BOX ? (ls.getInstance().moveToEmptyEquip(i, this.curImgData.curCell, a, this.curImgData.curIndex), 
            this.moveButNoHC(), this.curImgData.ID = os.EMPTY_BOX, this.curImgData.curIndex = os.EMPTY_BOX, 
            this.curImgData.img && this.curImgData.img.destroy(), this.curImgData.img = null, 
            this.curImgData.curCell = null) : (this.curImgData.ID = os.EMPTY_BOX, this.curImgData.curIndex = os.EMPTY_BOX, 
            this.curImgData.img && this.curImgData.img.destroy(), this.curImgData.img = null, 
            this.curImgData.curCell = null) : (this.curImgData.ID = os.EMPTY_BOX, this.curImgData.curIndex = os.EMPTY_BOX, 
            this.curImgData.img && this.curImgData.img.destroy(), this.curImgData.img = null, 
            this.curImgData.curCell = null);
        }
        onBtnDropAir() {
            let e = null, t = 0;
            for (let i in ls.getInstance().getArrCache()) {
                let a = ls.getInstance().getArrCache()[i];
                if (a.curData == os.EMPTY_BOX) {
                    e = a, t = parseInt(i);
                    break;
                }
            }
            if (e) ls.getInstance().addArm(e, t, tl.getInstance().getMaxUnLockArm(), !0); else {
                hs.setfreeRewardForGoldCoins();
                let e = hs.curFreeGoldRewards;
                Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.GOLD, e);
            }
        }
        onEnable() {
            this.isOpen = !0, this.normalCount = 5e3, (ns.curEquiplLibraryStep >= Et.TOEQUIP || tl.getInstance().getGuide() >= Et.TOEQUIP) && ls.getInstance().stopDailyGuideCompound();
            let e = tl.getInstance().getGuide();
            ns.curEquiplLibraryStep > e && (e = ns.curEquiplLibraryStep, this.isCheckNoLocal = !0), 
            e > Et.TOEQUIP && this.warehouseAperture && (this.warehouseAperture.stop(), this.warehouseAperture.visible = !1), 
            this.setPlatformStyle();
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            this.btnRecovery.x = 39, this.btnShop.x = 914, this.centerX = 21, this.btnWarehouse.x = -36;
        }
        setQQPlatform() {
            this.btnRecovery.x = 39, this.btnShop.x = 914, this.centerX = 21, this.btnWarehouse.x = -36;
        }
        setWebPlatform() {
            this.nativeIcon1 && this.nativeIcon1.show(), this.nativeIcon2 && this.nativeIcon2.show();
        }
        setVIVOPlatform() {
            this.btnRecovery.x = 39, this.btnShop.x = 914, this.btnWarehouse.x = -36, this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show();
        }
        setWeb4399Platform() {
            this.centerX = 21, this.bottom = 0;
        }
        setOPPOPlatform() {
            this.btnRecovery.x = 39, this.boxBtn.centerX = -38, this.btnWarehouse.x = -36, this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show();
        }
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {
            hl.appId == H.XM && (this.btnRecovery.x = 39, this.btnShop.x = 914, this.centerX = 21, 
            this.btnWarehouse.x = -36);
        }
        setTTPlatform() {}
        onMyEnable() {
            if (v.QQ == hl.platform || v.WX == hl.platform || hl.appId == H.XM) {
                let e = new Laya.Point(0, 0);
                this.btnBuy.localToGlobal(e);
                let t = e.x - ol.getCustomSize().w - 5, i = e.x + this.btnBuy.width + 5, a = Laya.stage.height - ol.getCustomSize().h;
                j.showCustom(t, a), j.showCustom(i, a), j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL);
            }
        }
        onMyDisable() {
            if (v.QQ == hl.platform || v.WX == hl.platform || hl.appId == H.XM) {
                let e = new Laya.Point(0, 0);
                this.btnBuy.localToGlobal(e);
                let t = e.x - ol.getCustomSize().w - 5, i = e.x + this.btnBuy.width + 5, a = Laya.stage.height - ol.getCustomSize().h;
                j.hideCustom(t, a), j.hideCustom(i, a), j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL);
            }
        }
    }
    let gs = {
        VIDEO: 0,
        NATIVE: 1
    };
    class us {
        static init() {
            us.count = hl.getOppo_end_count(), us.isDone = !1;
        }
        static adDown() {
            hl.platform != v.OPPO && hl.platform != v.VIVO && hl.platform != v.WEB && hl.platform != v.WEB_4399 || this.isStartCountDown || (this.isStartCountDown = !0, 
            Laya.timer.frameLoop(1, this, this.update));
        }
        static update() {
            this.count -= Laya.timer.delta, this.count < 0 ? this.isDone || (this.isDone = !0) : this.isDone && (this.isDone = !1);
        }
        static register(e) {
            if (hl.platform != v.OPPO && hl.platform != v.VIVO && hl.platform != v.WEB && hl.platform != v.WEB_4399) return;
            let t = L.register(w.REFRESH_OV_AD, e, this);
            this.funId = t;
        }
        static unregisterByFuncId() {
            hl.platform != v.OPPO && hl.platform != v.VIVO && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.funId && L.unregisterByFuncId(this.funId), 
            this.funId = null);
        }
        static setAdType(e) {
            if (this.isFirst && (this.isFirst = !1, this.prior = hl.getOppo_prior_ad(), 0 == this.prior ? console.log("当前广告类型优先为视频") : console.log("当前广告类型优先为原生")), 
            this.prior == gs.VIDEO) {
                if (this.forceToChange) return console.log("1当前为强制转, 不可接受其他转化"), void (this.forceToChange = !1);
                this.curAdType = e ? gs.VIDEO : gs.NATIVE;
            } else if (this.prior == gs.NATIVE) {
                if (this.forceToChange) return console.log("2当前为强制转, 不可接受其他转化"), void (this.forceToChange = !1);
                console.log("当前选择的原生次数：", this.nativeNum), this.nativeNum > 2 ? (this.nativeNum = 0, 
                this.curAdType = gs.VIDEO) : this.curAdType = gs.NATIVE, this.nativeNum++;
            }
        }
        static setAdTypeInNext() {
            this.isFirst && (this.isFirst = !1, this.prior = hl.getOppo_prior_ad(), 0 == this.prior ? console.log("当前广告类型优先为视频") : console.log("当前广告类型优先为原生"), 
            this.curAdType = this.prior, this.prior == gs.NATIVE && this.nativeNum++);
        }
        static forceToSetAdType() {
            this.curAdType = gs.NATIVE, this.forceToChange = !0, console.log("强制转为原生");
        }
        static execute(e, i = !1, a = !1) {
            if (!hl.getoOppo_end_adTotal() && tl.getInstance().isBannerTouch()) return console.log("处于屏蔽状态, 不可执行误触事件"), 
            void e();
            if (i) this.adDown(), this.reset(), j.setEvent(function() {
                us.reset(), L.notify(w.REFRESH_OV_AD), us.setAdType(!0);
            }, function() {
                us.reset(), us.setAdType(!0), a && e();
            }, t.MTOUCH); else {
                if (!this.isDone) return console.log("倒计时未结束"), void e();
                this.curAdType == gs.VIDEO ? (console.log("当前为视频误触"), us.reset(), j.setEvent(function() {
                    us.setAdType(!0), us.reset(), L.notify(w.REFRESH_OV_AD);
                }, function() {
                    us.reset(), us.setAdType(!1), us.forceToSetAdType(), a && e();
                }, t.MTOUCH)) : (console.log("当前为原生误触"), us.setAdType(!0), us.reset(), hl.platform != v.WEB && hl.platform != v.WEB_4399 && j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdClick({
                    adId: j.nativeExtendList.data.adId.toString()
                }), Laya.timer.once(200, this, () => {
                    us.reset(), L.notify(w.REFRESH_OV_AD);
                }));
            }
        }
        static reset() {
            us.count = hl.getOppo_end_count(), us.isDone = !1;
        }
    }
    us.isStartCountDown = !1, us.isDone = !1, us.count = 2e3, us.curAdType = gs.VIDEO, 
    us.isFirst = !0, us.funId = null, us.prior = 0, us.nativeNum = 0, us.forceToChange = !1;
    class ms extends T.view.common.PrivateDetailViewUI {
        constructor(e) {
            super(), this.isFunction = e;
        }
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.txtClose1.on(Laya.Event.CLICK, this, this.onBtnCloseDetail), 
            this.txtClose2.on(Laya.Event.CLICK, this, this.onBtnCloseDetail), this.panel.vScrollBarSkin = "", 
            this.panel.width = 1334, this.txtContent.width = this.panel.width;
        }
        onBtnCloseDetail() {
            q.getTouch() && (this.isFunction ? Bt.closeFunction() : this.destroy());
        }
    }
    class ps extends T.view.common.PrivateDialogViewUI {
        constructor(e) {
            super(), this.cb = e;
        }
        static create(t) {
            if (hl.platform == v.WEB || hl.platform == v.QQ || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.VIVO || hl.platform == v.OPPO) {
                let i = Laya.LocalStorage.getItem(e.PRIVATE_STATE);
                if (console.log("shishtis-------", i), hl.appId == H.C233_ME && (i = "1"), "1" == i) {
                    let e = window.PlatformClass;
                    e && e.createClass("demo.JSBridge").call("onBtnPrivateOK"), t && t();
                } else Laya.timer.once(100, this, function() {
                    let e = new ps(t);
                    e.zOrder = S.MAX, Laya.stage.addChild(e);
                });
            } else t && t();
        }
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.btnCancel.on(Laya.Event.CLICK, this, this.onBtnRefuse), 
            this.btnOK.on(Laya.Event.CLICK, this, this.onBtnOK), this.txtDetail.on(Laya.Event.CLICK, this, this.onBtnDetail), 
            j.hideBannerAd();
        }
        onDestroy() {
            this.cb = null;
        }
        onBtnRefuse() {
            if (q.getTouch()) {
                if (hl.platform == v.QQ) {
                    qq.exitMiniProgram({});
                } else if (hl.platform == v.VIVO || hl.platform == v.OPPO) {
                    qg.exitApplication({});
                } else {
                    let e = window.PlatformClass;
                    e && e.createClass("demo.JSBridge").call("onBtnPrivateRefuse");
                }
                this.destroy();
            }
        }
        onBtnOK() {
            if (!q.getTouch()) return;
            Laya.LocalStorage.setItem(e.PRIVATE_STATE, "1");
            let t = window.PlatformClass;
            t && t.createClass("demo.JSBridge").call("onBtnPrivateOK"), this.cb && this.cb(), 
            this.aniOpen.wrapMode = Laya.AnimationBase.WRAP_REVERSE, this.aniOpen.play(0, !1), 
            this.aniOpen.on(Laya.Event.COMPLETE, this, function() {
                this.destroy();
            });
        }
        onBtnDetail() {
            if (q.getTouch()) if (hl.platform, v.QQ, window.conch) {
                var e = window.innerWidth - 0, t = window.innerHeight - 0;
                hl.appId == H.C_233 ? window.conch.setExternalLinkEx("https://webgame-1255397116.cos.ap-guangzhou.myqcloud.com/AppPrivateWeb/233.html", 0, 0, e, t, !0) : hl.appId == H.XM ? window.conch.setExternalLinkEx("https://webgame-1255397116.cos.ap-guangzhou.myqcloud.com/AppPrivateWeb/xm.html", 0, 0, e, t, !0) : window.conch.setExternalLinkEx("https://webgame-1255397116.cos.ap-guangzhou.myqcloud.com/AppPrivateWeb/privacy.html", 0, 0, e, t, !0);
            } else {
                let e = new ms(!1);
                e.x = 0, e.y = 0, this.addChild(e);
            }
        }
    }
    class ys extends T.view.common.LoseFocusViewUI {
        constructor() {
            super(), this.width = Laya.stage.width, this.height = Laya.stage.height;
        }
        onAwake() {
            var e = this;
            this.btnEnter.on(Laya.Event.CLICK, this, function() {
                window.focus(), Laya.timer.scale = 1, e.destroy(), Ts.loseFocusViewCtrl && (Ts.loseFocusViewCtrl = null);
            });
        }
        onDestroy() {
            this.btnEnter = null, this.txtGold = null;
        }
    }
    class Is {
        static getDataByKey(e) {
            if (Is.cache[e]) return Is.cache[e];
            if ("1001" == e) {
                let t = new Is();
                return t.id = "1001", t.name = "金币", t.type = 1, t.quality = 0, t.icon = "1001.png", 
                t.extra = function() {
                    return null;
                }, Is.cache[e] = t, t;
            }
            if ("1002" == e) {
                let t = new Is();
                return t.id = "1002", t.name = "金币", t.type = 1, t.quality = 0, t.icon = "1001.png", 
                t.extra = function() {
                    return null;
                }, Is.cache[e] = t, t;
            }
            if ("1003" == e) {
                let t = new Is();
                return t.id = "1003", t.name = "金币", t.type = 1, t.quality = 0, t.icon = "1002.png", 
                t.extra = function() {
                    return null;
                }, Is.cache[e] = t, t;
            }
            if ("2001" == e) {
                let t = new Is();
                return t.id = "2001", t.name = "钻石", t.type = 2, t.quality = 0, t.icon = "2001.png", 
                t.extra = function() {
                    return null;
                }, Is.cache[e] = t, t;
            }
            if ("3001" == e) {
                let t = new Is();
                return t.id = "3001", t.name = "经验", t.type = 3, t.quality = 0, t.icon = "3001.png", 
                t.extra = function() {
                    return null;
                }, Is.cache[e] = t, t;
            }
            if ("5001" == e) {
                let t = new Is();
                return t.id = "5001", t.name = "猎荒者", t.type = 5, t.quality = 4, t.icon = "001.png", 
                t.extra = function() {
                    return 1;
                }, Is.cache[e] = t, t;
            }
            if ("5002" == e) {
                let t = new Is();
                return t.id = "5002", t.name = "潘多拉", t.type = 5, t.quality = 4, t.icon = "002.png", 
                t.extra = function() {
                    return 2;
                }, Is.cache[e] = t, t;
            }
            if ("5003" == e) {
                let t = new Is();
                return t.id = "5003", t.name = "极地战狼", t.type = 5, t.quality = 4, t.icon = "003.png", 
                t.extra = function() {
                    return 3;
                }, Is.cache[e] = t, t;
            }
            if ("5004" == e) {
                let t = new Is();
                return t.id = "5004", t.name = "复仇女神", t.type = 5, t.quality = 3, t.icon = "004.png", 
                t.extra = function() {
                    return 4;
                }, Is.cache[e] = t, t;
            }
            if ("5005" == e) {
                let t = new Is();
                return t.id = "5005", t.name = "幽灵猎手", t.type = 5, t.quality = 4, t.icon = "005.png", 
                t.extra = function() {
                    return 5;
                }, Is.cache[e] = t, t;
            }
            if ("5006" == e) {
                let t = new Is();
                return t.id = "5006", t.name = "东方兰", t.type = 5, t.quality = 1, t.icon = "006.png", 
                t.extra = function() {
                    return 6;
                }, Is.cache[e] = t, t;
            }
            if ("5007" == e) {
                let t = new Is();
                return t.id = "5007", t.name = "琪琪", t.type = 5, t.quality = 2, t.icon = "007.png", 
                t.extra = function() {
                    return 7;
                }, Is.cache[e] = t, t;
            }
            if ("5008" == e) {
                let t = new Is();
                return t.id = "5008", t.name = "暗夜玫瑰", t.type = 5, t.quality = 3, t.icon = "008.png", 
                t.extra = function() {
                    return 8;
                }, Is.cache[e] = t, t;
            }
            if ("5009" == e) {
                let t = new Is();
                return t.id = "5009", t.name = "正义先锋", t.type = 5, t.quality = 2, t.icon = "009.png", 
                t.extra = function() {
                    return 9;
                }, Is.cache[e] = t, t;
            }
            if ("5010" == e) {
                let t = new Is();
                return t.id = "5010", t.name = "末日掠夺者", t.type = 5, t.quality = 2, t.icon = "010.png", 
                t.extra = function() {
                    return 10;
                }, Is.cache[e] = t, t;
            }
            if ("5011" == e) {
                let t = new Is();
                return t.id = "5011", t.name = "神秘少女", t.type = 5, t.quality = 1, t.icon = "011.png", 
                t.extra = function() {
                    return 11;
                }, Is.cache[e] = t, t;
            }
            if ("5012" == e) {
                let t = new Is();
                return t.id = "5012", t.name = "混沌骑士", t.type = 5, t.quality = 1, t.icon = "012.png", 
                t.extra = function() {
                    return 12;
                }, Is.cache[e] = t, t;
            }
            if ("5013" == e) {
                let t = new Is();
                return t.id = "5013", t.name = "鬼面修罗", t.type = 5, t.quality = 1, t.icon = "013.png", 
                t.extra = function() {
                    return 13;
                }, Is.cache[e] = t, t;
            }
            if ("6001" == e) {
                let t = new Is();
                return t.id = "6001", t.name = "猎荒者碎片", t.type = 6, t.quality = 4, t.icon = "001.png", 
                t.extra = function() {
                    return 1;
                }, Is.cache[e] = t, t;
            }
            if ("6002" == e) {
                let t = new Is();
                return t.id = "6002", t.name = "潘多拉碎片", t.type = 6, t.quality = 4, t.icon = "002.png", 
                t.extra = function() {
                    return 2;
                }, Is.cache[e] = t, t;
            }
            if ("6003" == e) {
                let t = new Is();
                return t.id = "6003", t.name = "极地战狼碎片", t.type = 6, t.quality = 4, t.icon = "003.png", 
                t.extra = function() {
                    return 3;
                }, Is.cache[e] = t, t;
            }
            if ("6004" == e) {
                let t = new Is();
                return t.id = "6004", t.name = "复仇女神碎片", t.type = 6, t.quality = 3, t.icon = "004.png", 
                t.extra = function() {
                    return 4;
                }, Is.cache[e] = t, t;
            }
            if ("6005" == e) {
                let t = new Is();
                return t.id = "6005", t.name = "幽灵猎手碎片", t.type = 6, t.quality = 4, t.icon = "005.png", 
                t.extra = function() {
                    return 5;
                }, Is.cache[e] = t, t;
            }
            if ("6006" == e) {
                let t = new Is();
                return t.id = "6006", t.name = "东方兰碎片", t.type = 6, t.quality = 1, t.icon = "006.png", 
                t.extra = function() {
                    return 6;
                }, Is.cache[e] = t, t;
            }
            if ("6007" == e) {
                let t = new Is();
                return t.id = "6007", t.name = "琪琪碎片", t.type = 6, t.quality = 2, t.icon = "007.png", 
                t.extra = function() {
                    return 7;
                }, Is.cache[e] = t, t;
            }
            if ("6008" == e) {
                let t = new Is();
                return t.id = "6008", t.name = "暗夜玫瑰碎片", t.type = 6, t.quality = 3, t.icon = "008.png", 
                t.extra = function() {
                    return 8;
                }, Is.cache[e] = t, t;
            }
            if ("6009" == e) {
                let t = new Is();
                return t.id = "6009", t.name = "正义先锋碎片", t.type = 6, t.quality = 2, t.icon = "009.png", 
                t.extra = function() {
                    return 9;
                }, Is.cache[e] = t, t;
            }
            if ("6010" == e) {
                let t = new Is();
                return t.id = "6010", t.name = "末日掠夺者碎片", t.type = 6, t.quality = 2, t.icon = "010.png", 
                t.extra = function() {
                    return 10;
                }, Is.cache[e] = t, t;
            }
            if ("6011" == e) {
                let t = new Is();
                return t.id = "6011", t.name = "神秘少女碎片", t.type = 6, t.quality = 1, t.icon = "011.png", 
                t.extra = function() {
                    return 11;
                }, Is.cache[e] = t, t;
            }
            if ("6012" == e) {
                let t = new Is();
                return t.id = "6012", t.name = "混沌骑士碎片", t.type = 6, t.quality = 1, t.icon = "012.png", 
                t.extra = function() {
                    return 12;
                }, Is.cache[e] = t, t;
            }
            if ("6013" == e) {
                let t = new Is();
                return t.id = "6013", t.name = "鬼面修罗碎片", t.type = 6, t.quality = 1, t.icon = "013.png", 
                t.extra = function() {
                    return 13;
                }, Is.cache[e] = t, t;
            }
            if ("4001" == e) {
                let t = new Is();
                return t.id = "4001", t.name = "QBZ92", t.type = 4, t.quality = 1, t.icon = "1.png", 
                t.extra = function() {
                    return 1;
                }, Is.cache[e] = t, t;
            }
            if ("4002" == e) {
                let t = new Is();
                return t.id = "4002", t.name = "9A91", t.type = 4, t.quality = 1, t.icon = "2.png", 
                t.extra = function() {
                    return 2;
                }, Is.cache[e] = t, t;
            }
            if ("4003" == e) {
                let t = new Is();
                return t.id = "4003", t.name = "PP2000", t.type = 4, t.quality = 1, t.icon = "3.png", 
                t.extra = function() {
                    return 3;
                }, Is.cache[e] = t, t;
            }
            if ("4004" == e) {
                let t = new Is();
                return t.id = "4004", t.name = "Famas", t.type = 4, t.quality = 1, t.icon = "4.png", 
                t.extra = function() {
                    return 4;
                }, Is.cache[e] = t, t;
            }
            if ("4005" == e) {
                let t = new Is();
                return t.id = "4005", t.name = "M700", t.type = 4, t.quality = 1, t.icon = "5.png", 
                t.extra = function() {
                    return 5;
                }, Is.cache[e] = t, t;
            }
            if ("4006" == e) {
                let t = new Is();
                return t.id = "4006", t.name = "UMP45", t.type = 4, t.quality = 1, t.icon = "6.png", 
                t.extra = function() {
                    return 6;
                }, Is.cache[e] = t, t;
            }
            if ("4007" == e) {
                let t = new Is();
                return t.id = "4007", t.name = "MP5", t.type = 4, t.quality = 1, t.icon = "7.png", 
                t.extra = function() {
                    return 7;
                }, Is.cache[e] = t, t;
            }
            if ("4008" == e) {
                let t = new Is();
                return t.id = "4008", t.name = "G36", t.type = 4, t.quality = 1, t.icon = "8.png", 
                t.extra = function() {
                    return 8;
                }, Is.cache[e] = t, t;
            }
            if ("4009" == e) {
                let t = new Is();
                return t.id = "4009", t.name = "QBU88", t.type = 4, t.quality = 1, t.icon = "9.png", 
                t.extra = function() {
                    return 9;
                }, Is.cache[e] = t, t;
            }
            if ("4010" == e) {
                let t = new Is();
                return t.id = "4010", t.name = "Vector", t.type = 4, t.quality = 1, t.icon = "10.png", 
                t.extra = function() {
                    return 10;
                }, Is.cache[e] = t, t;
            }
            if ("4011" == e) {
                let t = new Is();
                return t.id = "4011", t.name = "P90", t.type = 4, t.quality = 1, t.icon = "11.png", 
                t.extra = function() {
                    return 11;
                }, Is.cache[e] = t, t;
            }
            if ("4012" == e) {
                let t = new Is();
                return t.id = "4012", t.name = "沙漠之鹰-黄金", t.type = 4, t.quality = 1, t.icon = "12.png", 
                t.extra = function() {
                    return 12;
                }, Is.cache[e] = t, t;
            }
            if ("4013" == e) {
                let t = new Is();
                return t.id = "4013", t.name = "M4A1", t.type = 4, t.quality = 1, t.icon = "13.png", 
                t.extra = function() {
                    return 13;
                }, Is.cache[e] = t, t;
            }
            if ("4014" == e) {
                let t = new Is();
                return t.id = "4014", t.name = "AK47", t.type = 4, t.quality = 1, t.icon = "14.png", 
                t.extra = function() {
                    return 14;
                }, Is.cache[e] = t, t;
            }
            if ("4015" == e) {
                let t = new Is();
                return t.id = "4015", t.name = "SVD", t.type = 4, t.quality = 1, t.icon = "15.png", 
                t.extra = function() {
                    return 15;
                }, Is.cache[e] = t, t;
            }
            if ("4016" == e) {
                let t = new Is();
                return t.id = "4016", t.name = "气锤", t.type = 4, t.quality = 1, t.icon = "16.png", 
                t.extra = function() {
                    return 16;
                }, Is.cache[e] = t, t;
            }
            if ("4017" == e) {
                let t = new Is();
                return t.id = "4017", t.name = "M60", t.type = 4, t.quality = 1, t.icon = "17.png", 
                t.extra = function() {
                    return 17;
                }, Is.cache[e] = t, t;
            }
            if ("4018" == e) {
                let t = new Is();
                return t.id = "4018", t.name = "AUG", t.type = 4, t.quality = 1, t.icon = "18.png", 
                t.extra = function() {
                    return 18;
                }, Is.cache[e] = t, t;
            }
            if ("4019" == e) {
                let t = new Is();
                return t.id = "4019", t.name = "QBZ03", t.type = 4, t.quality = 1, t.icon = "19.png", 
                t.extra = function() {
                    return 19;
                }, Is.cache[e] = t, t;
            }
            if ("4020" == e) {
                let t = new Is();
                return t.id = "4020", t.name = "AWP", t.type = 4, t.quality = 1, t.icon = "20.png", 
                t.extra = function() {
                    return 20;
                }, Is.cache[e] = t, t;
            }
            if ("4021" == e) {
                let t = new Is();
                return t.id = "4021", t.name = "汤姆逊", t.type = 4, t.quality = 1, t.icon = "21.png", 
                t.extra = function() {
                    return 21;
                }, Is.cache[e] = t, t;
            }
            if ("4022" == e) {
                let t = new Is();
                return t.id = "4022", t.name = "MP5-X", t.type = 4, t.quality = 1, t.icon = "22.png", 
                t.extra = function() {
                    return 22;
                }, Is.cache[e] = t, t;
            }
            if ("4023" == e) {
                let t = new Is();
                return t.id = "4023", t.name = "RPK", t.type = 4, t.quality = 2, t.icon = "23.png", 
                t.extra = function() {
                    return 23;
                }, Is.cache[e] = t, t;
            }
            if ("4024" == e) {
                let t = new Is();
                return t.id = "4024", t.name = "QBZ95-红星", t.type = 4, t.quality = 2, t.icon = "24.png", 
                t.extra = function() {
                    return 24;
                }, Is.cache[e] = t, t;
            }
            if ("4025" == e) {
                let t = new Is();
                return t.id = "4025", t.name = "沙漠双子星", t.type = 4, t.quality = 2, t.icon = "25.png", 
                t.extra = function() {
                    return 25;
                }, Is.cache[e] = t, t;
            }
            if ("4026" == e) {
                let t = new Is();
                return t.id = "4026", t.name = "雷明顿-MSR", t.type = 4, t.quality = 2, t.icon = "26.png", 
                t.extra = function() {
                    return 26;
                }, Is.cache[e] = t, t;
            }
            if ("4027" == e) {
                let t = new Is();
                return t.id = "4027", t.name = "SCAR-刺杀者", t.type = 4, t.quality = 2, t.icon = "27.png", 
                t.extra = function() {
                    return 27;
                }, Is.cache[e] = t, t;
            }
            if ("4028" == e) {
                let t = new Is();
                return t.id = "4028", t.name = "AK47-火焰", t.type = 4, t.quality = 2, t.icon = "28.png", 
                t.extra = function() {
                    return 28;
                }, Is.cache[e] = t, t;
            }
            if ("4029" == e) {
                let t = new Is();
                return t.id = "4029", t.name = "KSG-暗影猎手", t.type = 4, t.quality = 2, t.icon = "29.png", 
                t.extra = function() {
                    return 29;
                }, Is.cache[e] = t, t;
            }
            if ("4030" == e) {
                let t = new Is();
                return t.id = "4030", t.name = "AN94-战龙", t.type = 4, t.quality = 2, t.icon = "30.png", 
                t.extra = function() {
                    return 30;
                }, Is.cache[e] = t, t;
            }
            if ("4031" == e) {
                let t = new Is();
                return t.id = "4031", t.name = "MG3-白金杀手", t.type = 4, t.quality = 2, t.icon = "31.png", 
                t.extra = function() {
                    return 31;
                }, Is.cache[e] = t, t;
            }
            if ("4032" == e) {
                let t = new Is();
                return t.id = "4032", t.name = "AWP-雷霆", t.type = 4, t.quality = 2, t.icon = "32.png", 
                t.extra = function() {
                    return 32;
                }, Is.cache[e] = t, t;
            }
            if ("4033" == e) {
                let t = new Is();
                return t.id = "4033", t.name = "AK47-R", t.type = 4, t.quality = 2, t.icon = "33.png", 
                t.extra = function() {
                    return 33;
                }, Is.cache[e] = t, t;
            }
            if ("4034" == e) {
                let t = new Is();
                return t.id = "4034", t.name = "SCAR-X", t.type = 4, t.quality = 2, t.icon = "34.png", 
                t.extra = function() {
                    return 34;
                }, Is.cache[e] = t, t;
            }
            if ("4035" == e) {
                let t = new Is();
                return t.id = "4035", t.name = "AK47-黄金", t.type = 4, t.quality = 2, t.icon = "35.png", 
                t.extra = function() {
                    return 35;
                }, Is.cache[e] = t, t;
            }
            if ("4036" == e) {
                let t = new Is();
                return t.id = "4036", t.name = "M4A1-黄金", t.type = 4, t.quality = 3, t.icon = "36.png", 
                t.extra = function() {
                    return 36;
                }, Is.cache[e] = t, t;
            }
            if ("4037" == e) {
                let t = new Is();
                return t.id = "4037", t.name = "巴雷特-M82A1", t.type = 4, t.quality = 3, t.icon = "37.png", 
                t.extra = function() {
                    return 37;
                }, Is.cache[e] = t, t;
            }
            if ("4038" == e) {
                let t = new Is();
                return t.id = "4038", t.name = "M249-战龙", t.type = 4, t.quality = 3, t.icon = "38.png", 
                t.extra = function() {
                    return 38;
                }, Is.cache[e] = t, t;
            }
            if ("4039" == e) {
                let t = new Is();
                return t.id = "4039", t.name = "AN94-时光", t.type = 4, t.quality = 3, t.icon = "39.png", 
                t.extra = function() {
                    return 39;
                }, Is.cache[e] = t, t;
            }
            if ("4040" == e) {
                let t = new Is();
                return t.id = "4040", t.name = "凉爽风暴", t.type = 4, t.quality = 3, t.icon = "40.png", 
                t.extra = function() {
                    return 40;
                }, Is.cache[e] = t, t;
            }
            if ("4041" == e) {
                let t = new Is();
                return t.id = "4041", t.name = "MP5-白虎", t.type = 4, t.quality = 3, t.icon = "41.png", 
                t.extra = function() {
                    return 41;
                }, Is.cache[e] = t, t;
            }
            if ("4042" == e) {
                let t = new Is();
                return t.id = "4042", t.name = "气锤-白驹", t.type = 4, t.quality = 3, t.icon = "42.png", 
                t.extra = function() {
                    return 42;
                }, Is.cache[e] = t, t;
            }
            if ("4043" == e) {
                let t = new Is();
                return t.id = "4043", t.name = "AWP-时空", t.type = 4, t.quality = 3, t.icon = "43.png", 
                t.extra = function() {
                    return 43;
                }, Is.cache[e] = t, t;
            }
            if ("4044" == e) {
                let t = new Is();
                return t.id = "4044", t.name = "AK47-霎时", t.type = 4, t.quality = 3, t.icon = "44.png", 
                t.extra = function() {
                    return 44;
                }, Is.cache[e] = t, t;
            }
            if ("4045" == e) {
                let t = new Is();
                return t.id = "4045", t.name = "Vector-巨蟹座", t.type = 4, t.quality = 4, t.icon = "45.png", 
                t.extra = function() {
                    return 45;
                }, Is.cache[e] = t, t;
            }
            if ("4046" == e) {
                let t = new Is();
                return t.id = "4046", t.name = "P90-天蝎座", t.type = 4, t.quality = 4, t.icon = "46.png", 
                t.extra = function() {
                    return 46;
                }, Is.cache[e] = t, t;
            }
            if ("4047" == e) {
                let t = new Is();
                return t.id = "4047", t.name = "QBZ95-玄武", t.type = 4, t.quality = 4, t.icon = "47.png", 
                t.extra = function() {
                    return 47;
                }, Is.cache[e] = t, t;
            }
            if ("4048" == e) {
                let t = new Is();
                return t.id = "4048", t.name = "巴雷特-刺杀者", t.type = 4, t.quality = 4, t.icon = "48.png", 
                t.extra = function() {
                    return 48;
                }, Is.cache[e] = t, t;
            }
            if ("4049" == e) {
                let t = new Is();
                return t.id = "4049", t.name = "RPK-金牛座", t.type = 4, t.quality = 4, t.icon = "49.png", 
                t.extra = function() {
                    return 49;
                }, Is.cache[e] = t, t;
            }
            if ("4050" == e) {
                let t = new Is();
                return t.id = "4050", t.name = "M4AI-青龙", t.type = 4, t.quality = 4, t.icon = "50.png", 
                t.extra = function() {
                    return 50;
                }, Is.cache[e] = t, t;
            }
            if ("4051" == e) {
                let t = new Is();
                return t.id = "4051", t.name = "SCAR-狮子座", t.type = 4, t.quality = 4, t.icon = "51.png", 
                t.extra = function() {
                    return 51;
                }, Is.cache[e] = t, t;
            }
            if ("4052" == e) {
                let t = new Is();
                return t.id = "4052", t.name = "AK47-魔麒麟", t.type = 4, t.quality = 4, t.icon = "52.png", 
                t.extra = function() {
                    return 52;
                }, Is.cache[e] = t, t;
            }
            if ("4053" == e) {
                let t = new Is();
                return t.id = "4053", t.name = "QBU88-地爆天星", t.type = 4, t.quality = 4, t.icon = "53.png", 
                t.extra = function() {
                    return 53;
                }, Is.cache[e] = t, t;
            }
            if ("4054" == e) {
                let t = new Is();
                return t.id = "4054", t.name = "P90-刺杀者", t.type = 4, t.quality = 1, t.icon = "54.png", 
                t.extra = function() {
                    return 54;
                }, Is.cache[e] = t, t;
            }
            if ("4055" == e) {
                let t = new Is();
                return t.id = "4055", t.name = "G36-幻蝶", t.type = 4, t.quality = 1, t.icon = "55.png", 
                t.extra = function() {
                    return 55;
                }, Is.cache[e] = t, t;
            }
            if ("4056" == e) {
                let t = new Is();
                return t.id = "4056", t.name = "M4A1-紫狐", t.type = 4, t.quality = 1, t.icon = "56.png", 
                t.extra = function() {
                    return 56;
                }, Is.cache[e] = t, t;
            }
            if ("4057" == e) {
                let t = new Is();
                return t.id = "4057", t.name = "M4A1-赤狐", t.type = 4, t.quality = 1, t.icon = "57.png", 
                t.extra = function() {
                    return 57;
                }, Is.cache[e] = t, t;
            }
            if ("4058" == e) {
                let t = new Is();
                return t.id = "4058", t.name = "QBZ95-虎虎生威", t.type = 4, t.quality = 2, t.icon = "58.png", 
                t.extra = function() {
                    return 58;
                }, Is.cache[e] = t, t;
            }
            if ("4059" == e) {
                let t = new Is();
                return t.id = "4059", t.name = "QBZ03-燃烧之魂", t.type = 4, t.quality = 1, t.icon = "59.png", 
                t.extra = function() {
                    return 59;
                }, Is.cache[e] = t, t;
            }
            if ("4060" == e) {
                let t = new Is();
                return t.id = "4060", t.name = "QBU88-红星", t.type = 4, t.quality = 1, t.icon = "60.png", 
                t.extra = function() {
                    return 60;
                }, Is.cache[e] = t, t;
            }
            if ("4061" == e) {
                let t = new Is();
                return t.id = "4061", t.name = "巴雷特-朱雀", t.type = 4, t.quality = 4, t.icon = "61.png", 
                t.extra = function() {
                    return 61;
                }, Is.cache[e] = t, t;
            }
            if ("4062" == e) {
                let t = new Is();
                return t.id = "4062", t.name = "USP-魑魅", t.type = 4, t.quality = 1, t.icon = "62.png", 
                t.extra = function() {
                    return 62;
                }, Is.cache[e] = t, t;
            }
            if ("4063" == e) {
                let t = new Is();
                return t.id = "4063", t.name = "AWP-魑魅", t.type = 4, t.quality = 2, t.icon = "63.png", 
                t.extra = function() {
                    return 63;
                }, Is.cache[e] = t, t;
            }
            if ("4064" == e) {
                let t = new Is();
                return t.id = "4064", t.name = "RPK-雷霆", t.type = 4, t.quality = 2, t.icon = "64.png", 
                t.extra = function() {
                    return 64;
                }, Is.cache[e] = t, t;
            }
            if ("4065" == e) {
                let t = new Is();
                return t.id = "4065", t.name = "巴雷特-雷霆", t.type = 4, t.quality = 4, t.icon = "65.png", 
                t.extra = function() {
                    return 65;
                }, Is.cache[e] = t, t;
            }
            if ("4066" == e) {
                let t = new Is();
                return t.id = "4066", t.name = "M4A1-夏日", t.type = 4, t.quality = 4, t.icon = "66.png", 
                t.extra = function() {
                    return 66;
                }, Is.cache[e] = t, t;
            }
            if ("4067" == e) {
                let t = new Is();
                return t.id = "4067", t.name = "AK47-霜龙", t.type = 4, t.quality = 4, t.icon = "67.png", 
                t.extra = function() {
                    return 67;
                }, Is.cache[e] = t, t;
            }
            if ("10001" == e) {
                let t = new Is();
                return t.id = "10001", t.name = "爆竹", t.type = 10, t.quality = 0, t.icon = "10001.png", 
                t.extra = function() {
                    return null;
                }, Is.cache[e] = t, t;
            }
            if ("8001" == e) {
                let t = new Is();
                return t.id = "8001", t.name = "先锋之翼", t.type = 8, t.quality = 4, t.icon = "01.png", 
                t.extra = function() {
                    return 1;
                }, Is.cache[e] = t, t;
            }
            if ("8002" == e) {
                let t = new Is();
                return t.id = "8002", t.name = "无畏之翼", t.type = 8, t.quality = 4, t.icon = "02.png", 
                t.extra = function() {
                    return 2;
                }, Is.cache[e] = t, t;
            }
            if ("8003" == e) {
                let t = new Is();
                return t.id = "8003", t.name = "守护者飞行器", t.type = 8, t.quality = 4, t.icon = "03.png", 
                t.extra = function() {
                    return 3;
                }, Is.cache[e] = t, t;
            }
            if ("8004" == e) {
                let t = new Is();
                return t.id = "8004", t.name = "强袭之翼", t.type = 8, t.quality = 3, t.icon = "04.png", 
                t.extra = function() {
                    return 4;
                }, Is.cache[e] = t, t;
            }
            if ("8005" == e) {
                let t = new Is();
                return t.id = "8005", t.name = "阿尔法之翼", t.type = 8, t.quality = 2, t.icon = "05.png", 
                t.extra = function() {
                    return 5;
                }, Is.cache[e] = t, t;
            }
            if ("8006" == e) {
                let t = new Is();
                return t.id = "8006", t.name = "审判者之翼", t.type = 8, t.quality = 2, t.icon = "06.png", 
                t.extra = function() {
                    return 6;
                }, Is.cache[e] = t, t;
            }
            if ("8007" == e) {
                let t = new Is();
                return t.id = "8007", t.name = "光辉之翼", t.type = 8, t.quality = 1, t.icon = "07.png", 
                t.extra = function() {
                    return 7;
                }, Is.cache[e] = t, t;
            }
            if ("8008" == e) {
                let t = new Is();
                return t.id = "8008", t.name = "传说之翼", t.type = 8, t.quality = 1, t.icon = "08.png", 
                t.extra = function() {
                    return 8;
                }, Is.cache[e] = t, t;
            }
            if ("8009" == e) {
                let t = new Is();
                return t.id = "8009", t.name = "堕天使之翼", t.type = 8, t.quality = 1, t.icon = "09.png", 
                t.extra = function() {
                    return 9;
                }, Is.cache[e] = t, t;
            }
            if ("8010" == e) {
                let t = new Is();
                return t.id = "8010", t.name = "神盾之翼", t.type = 8, t.quality = 1, t.icon = "10.png", 
                t.extra = function() {
                    return 10;
                }, Is.cache[e] = t, t;
            }
            if ("8011" == e) {
                let t = new Is();
                return t.id = "8011", t.name = "守护者之刃", t.type = 8, t.quality = 4, t.icon = "11.png", 
                t.extra = function() {
                    return 11;
                }, Is.cache[e] = t, t;
            }
            if ("8012" == e) {
                let t = new Is();
                return t.id = "8012", t.name = "离子斩魄刀", t.type = 8, t.quality = 3, t.icon = "12.png", 
                t.extra = function() {
                    return 12;
                }, Is.cache[e] = t, t;
            }
            if ("8013" == e) {
                let t = new Is();
                return t.id = "8013", t.name = "冰息之刃", t.type = 8, t.quality = 3, t.icon = "13.png", 
                t.extra = function() {
                    return 13;
                }, Is.cache[e] = t, t;
            }
            if ("8014" == e) {
                let t = new Is();
                return t.id = "8014", t.name = "金龙", t.type = 8, t.quality = 3, t.icon = "14.png", 
                t.extra = function() {
                    return 14;
                }, Is.cache[e] = t, t;
            }
            if ("8015" == e) {
                let t = new Is();
                return t.id = "8015", t.name = "炽天使之翼", t.type = 8, t.quality = 2, t.icon = "15.png", 
                t.extra = function() {
                    return 15;
                }, Is.cache[e] = t, t;
            }
            if ("8016" == e) {
                let t = new Is();
                return t.id = "8016", t.name = "狱天使之翼", t.type = 8, t.quality = 2, t.icon = "16.png", 
                t.extra = function() {
                    return 16;
                }, Is.cache[e] = t, t;
            }
            if ("8017" == e) {
                let t = new Is();
                return t.id = "8017", t.name = "零式之翼", t.type = 8, t.quality = 4, t.icon = "17.png", 
                t.extra = function() {
                    return 17;
                }, Is.cache[e] = t, t;
            }
            if ("8018" == e) {
                let t = new Is();
                return t.id = "8018", t.name = "火流星之翼", t.type = 8, t.quality = 4, t.icon = "18.png", 
                t.extra = function() {
                    return 18;
                }, Is.cache[e] = t, t;
            }
            if ("7001" == e) {
                let t = new Is();
                return t.id = "7001", t.name = "先锋之翼碎片", t.type = 7, t.quality = 4, t.icon = "01.png", 
                t.extra = function() {
                    return 1;
                }, Is.cache[e] = t, t;
            }
            if ("7002" == e) {
                let t = new Is();
                return t.id = "7002", t.name = "无畏之翼碎片", t.type = 7, t.quality = 4, t.icon = "02.png", 
                t.extra = function() {
                    return 2;
                }, Is.cache[e] = t, t;
            }
            if ("7003" == e) {
                let t = new Is();
                return t.id = "7003", t.name = "守护者飞行器碎片", t.type = 7, t.quality = 4, t.icon = "03.png", 
                t.extra = function() {
                    return 3;
                }, Is.cache[e] = t, t;
            }
            if ("7004" == e) {
                let t = new Is();
                return t.id = "7004", t.name = "强袭之翼碎片", t.type = 7, t.quality = 3, t.icon = "04.png", 
                t.extra = function() {
                    return 4;
                }, Is.cache[e] = t, t;
            }
            if ("7005" == e) {
                let t = new Is();
                return t.id = "7005", t.name = "阿尔法之翼碎片", t.type = 7, t.quality = 2, t.icon = "05.png", 
                t.extra = function() {
                    return 5;
                }, Is.cache[e] = t, t;
            }
            if ("7006" == e) {
                let t = new Is();
                return t.id = "7006", t.name = "审判者之翼碎片", t.type = 7, t.quality = 2, t.icon = "06.png", 
                t.extra = function() {
                    return 6;
                }, Is.cache[e] = t, t;
            }
            if ("7007" == e) {
                let t = new Is();
                return t.id = "7007", t.name = "光辉之翼碎片", t.type = 7, t.quality = 1, t.icon = "07.png", 
                t.extra = function() {
                    return 7;
                }, Is.cache[e] = t, t;
            }
            if ("7008" == e) {
                let t = new Is();
                return t.id = "7008", t.name = "传说之翼碎片", t.type = 7, t.quality = 1, t.icon = "08.png", 
                t.extra = function() {
                    return 8;
                }, Is.cache[e] = t, t;
            }
            if ("7009" == e) {
                let t = new Is();
                return t.id = "7009", t.name = "堕天使之翼碎片", t.type = 7, t.quality = 1, t.icon = "09.png", 
                t.extra = function() {
                    return 9;
                }, Is.cache[e] = t, t;
            }
            if ("7010" == e) {
                let t = new Is();
                return t.id = "7010", t.name = "神盾之翼碎片", t.type = 7, t.quality = 1, t.icon = "10.png", 
                t.extra = function() {
                    return 10;
                }, Is.cache[e] = t, t;
            }
            if ("7011" == e) {
                let t = new Is();
                return t.id = "7011", t.name = "守护者之刃碎片", t.type = 7, t.quality = 4, t.icon = "11.png", 
                t.extra = function() {
                    return 11;
                }, Is.cache[e] = t, t;
            }
            if ("7012" == e) {
                let t = new Is();
                return t.id = "7012", t.name = "离子斩魄刀碎片", t.type = 7, t.quality = 3, t.icon = "12.png", 
                t.extra = function() {
                    return 12;
                }, Is.cache[e] = t, t;
            }
            if ("7013" == e) {
                let t = new Is();
                return t.id = "7013", t.name = "冰息之刃碎片", t.type = 7, t.quality = 3, t.icon = "13.png", 
                t.extra = function() {
                    return 13;
                }, Is.cache[e] = t, t;
            }
            if ("7014" == e) {
                let t = new Is();
                return t.id = "7014", t.name = "金龙碎片", t.type = 7, t.quality = 3, t.icon = "14.png", 
                t.extra = function() {
                    return 14;
                }, Is.cache[e] = t, t;
            }
            if ("7015" == e) {
                let t = new Is();
                return t.id = "7015", t.name = "炽天使之翼碎片", t.type = 7, t.quality = 2, t.icon = "15.png", 
                t.extra = function() {
                    return 15;
                }, Is.cache[e] = t, t;
            }
            if ("7016" == e) {
                let t = new Is();
                return t.id = "7016", t.name = "狱天使之翼碎片", t.type = 7, t.quality = 2, t.icon = "16.png", 
                t.extra = function() {
                    return 16;
                }, Is.cache[e] = t, t;
            }
            if ("7017" == e) {
                let t = new Is();
                return t.id = "7017", t.name = "零式之翼碎片", t.type = 7, t.quality = 4, t.icon = "17.png", 
                t.extra = function() {
                    return 17;
                }, Is.cache[e] = t, t;
            }
            if ("7018" == e) {
                let t = new Is();
                return t.id = "7018", t.name = "火流星之翼碎片", t.type = 7, t.quality = 4, t.icon = "18.png", 
                t.extra = function() {
                    return 18;
                }, Is.cache[e] = t, t;
            }
            if ("10002" == e) {
                let t = new Is();
                return t.id = "10002", t.name = "初级宝箱", t.type = 10, t.quality = 1, t.icon = "10002.png", 
                t.extra = function() {
                    return [ {
                        itemId: 1003,
                        count: null
                    } ];
                }, Is.cache[e] = t, t;
            }
            if ("10003" == e) {
                let t = new Is();
                return t.id = "10003", t.name = "高级宝箱", t.type = 10, t.quality = 1, t.icon = "10003.png", 
                t.extra = function() {
                    return [ {
                        itemId: 2001,
                        count: 158
                    } ];
                }, Is.cache[e] = t, t;
            }
        }
        static getDataByIndex(e) {
            return Is.cache[this.keys[e]] ? Is.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Is.cache;
        }
        clear() {
            Is.cache = {};
        }
    }
    Is.cache = {}, Is.keys = [ "1001", "1002", "1003", "2001", "3001", "5001", "5002", "5003", "5004", "5005", "5006", "5007", "5008", "5009", "5010", "5011", "5012", "5013", "6001", "6002", "6003", "6004", "6005", "6006", "6007", "6008", "6009", "6010", "6011", "6012", "6013", "4001", "4002", "4003", "4004", "4005", "4006", "4007", "4008", "4009", "4010", "4011", "4012", "4013", "4014", "4015", "4016", "4017", "4018", "4019", "4020", "4021", "4022", "4023", "4024", "4025", "4026", "4027", "4028", "4029", "4030", "4031", "4032", "4033", "4034", "4035", "4036", "4037", "4038", "4039", "4040", "4041", "4042", "4043", "4044", "4045", "4046", "4047", "4048", "4049", "4050", "4051", "4052", "4053", "4054", "4055", "4056", "4057", "4058", "4059", "4060", "4061", "4062", "4063", "4064", "4065", "4066", "4067", "10001", "8001", "8002", "8003", "8004", "8005", "8006", "8007", "8008", "8009", "8010", "8011", "8012", "8013", "8014", "8015", "8016", "8017", "8018", "7001", "7002", "7003", "7004", "7005", "7006", "7007", "7008", "7009", "7010", "7011", "7012", "7013", "7014", "7015", "7016", "7017", "7018", "10002", "10003" ];
    class fs extends T.view.review.ReviewLoadingViewUI {
        constructor(e = 1) {
            super(), this.startSec = 0, this.maxLen = 0, this.percent = 0, this.startSec = Laya.timer.currTimer, 
            this.height = Laya.stage.height, this.width = this.stage.width, this.maxLen = this.imgPro.width, 
            this.imgPro.width = 0, this.txtPercent.text = "玩命加载中，请耐心等待...(0%)", this.maxPart = e;
        }
        onAwake() {
            hl.appId == H.C233_ME || hl.appId == H.MMY || hl.appId == H.HYKB || hl.platform == v.VIVO ? j.hideBannerAd() : j.showBannerAd(), 
            this.setPlatformStyle(), hl.platform != v.WX && hl.platform != v.WEB && hl.platform != v.QQ || (hl.gameType == rl.QZRYJY ? this.imgLoading.skin = "loading/img_3.png" : hl.gameType == rl.QZHXJY ? this.imgLoading.skin = "loading/img_4.png" : hl.gameType == rl.CYQZJY ? this.imgLoading.skin = "loading/img_14.png" : hl.gameType == rl.CYZQZRY ? this.imgLoading.skin = "loading/img_101.png" : hl.gameType == rl.CJRYZC && (this.imgLoading.skin = "loading/img_15.png"));
        }
        close() {
            let e = Laya.timer.currTimer - this.startSec;
            e < 1500 ? this.timer.once(1500 - e, this, function() {
                this.destroy();
            }) : this.destroy();
        }
        setProgress(e, t = 1) {
            if (isNaN(e)) return;
            let i = (t - 1) / this.maxPart + e * (1 / this.maxPart);
            if (this.percent > i) return;
            this.percent = i, this.txtPercent.text = `玩命加载中，请耐心等待...(${Math.floor(100 * i)}%)`;
            let a = this.maxLen * i;
            Laya.Tween.clearAll(this.imgPro), Laya.Tween.to(this.imgPro, {
                width: a
            }, 200);
        }
        onDestroy() {
            Laya.timer.clearAll(this), this.txtPercent = null, Bt.newFunc.tag != Er.FIRST ? j.hideBannerAd() : hl.appId != v.WX && hl.platform != v.QQ && hl.appId != H.XM || j.showBannerAd(14, ol.getBannerCenterPos().y + (ol.isIOS() ? 30 : 0));
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.boxLoading.y -= 60);
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setWeb4399Platform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
    }
    class Ls extends T.view.review.ReviewMatchingViewUI {
        constructor() {
            super(), this.maxLen = 0, this.playerList = [], this.playerNum = 0, this.dataList = [], 
            this.ready = {
                resReady: !1,
                matching: !1,
                mapUrl: null
            }, this.activeTime = 0, this.step = 0, this.width = this.stage.width, this.height = this.stage.height, 
            this.maxLen = this.imgPro.width, this.imgPro.width = 0;
        }
        onAwake() {
            this.init(), this.setPlatformStyle(), hl.platform != v.WX && hl.platform != v.WEB && hl.platform != v.QQ || (hl.gameType == rl.QZRYJY ? this.imgLoading.skin = "loading/img_3.png" : hl.gameType == rl.QZHXJY ? this.imgLoading.skin = "loading/img_4.png" : hl.gameType == rl.CYQZJY ? this.imgLoading.skin = "loading/img_14.png" : hl.gameType == rl.CYZQZRY ? this.imgLoading.skin = "loading/img_101.png" : hl.gameType == rl.CJRYZC && (this.imgLoading.skin = "loading/img_15.png"));
            var e = this;
            this.timer.loop(100, this, function() {
                e.activeTime += 100, 2500 == e.activeTime && e.doStep();
            });
        }
        doStep() {
            this.step++, this.step >= 2 && (this.imgPro.width = 0, Laya.Tween.clearAll(this.imgPro), 
            Laya.Tween.to(this.imgPro, {
                width: this.maxLen
            }, 200, null, Laya.Handler.create(this, function() {
                this.destroy();
            })));
        }
        onDestroy() {
            this.timer.clearAll(this), this.maxLen = null, this.playerList = null, this.playerNum = null, 
            this.ready = null, this.txtPercent = null, this.dataList = null, Bt.getFunctionViewCtrl(Er.GAME).setNewPlayerArm();
        }
        init() {
            hl.platform != v.OPPO && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.nativeBanner = new Ja(), 
            this.addChild(this.nativeBanner), this.nativeBanner && this.nativeBanner.show()), 
            j.hideBannerAd(), Rs.cleanDataList(), Ba.setModelTargetKillSore(), Wt.matchingShow();
        }
        onBtnClose() {
            q.getTouch() && (this.ready.matching && this.ready.resReady && null != this.ready.mapUrl || this.destroy());
        }
        setProgress(e) {
            this.txtPercent.text = Math.floor(100 * e) + "%";
            let t = this.maxLen * e;
            Laya.Tween.clearAll(this.imgPro), Laya.Tween.to(this.imgPro, {
                width: t
            }, 200);
        }
        close() {
            this.doStep();
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {}
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
    }
    var ws = Laya.Vector3;
    class bs extends Laya.Script3D {
        constructor() {
            super(), this.vecTarget = new ws(), this.time = 0, this.shakeAmount = .15, this.decreaseFactor = 1, 
            this.originalPos = new ws(), this.vecDir = new ws();
        }
        onAwake() {
            let e = this.owner;
            this.transform = e.transform, this.camera = e, this.tranCamrea = this.camera.transform;
        }
        onEnable() {
            this.originalPos = this.transform.localPosition.clone(), console.log("SceneManager.getCurScene<GameScene>().camreaData.pos", Nt.getCurScene().camreaData.pos);
        }
        shake(e, t = .15) {
            this.time = e, this.shakeAmount = t;
        }
        onUpdate() {
            if (this.time > 0) {
                let e = 2 * Math.random() - 1, t = 2 * Math.random() - 1;
                this.tranCamrea.localPositionX = this.originalPos.x + e * this.shakeAmount, this.tranCamrea.localPositionZ = this.originalPos.z + t * this.shakeAmount, 
                this.time -= Laya.timer.delta * this.decreaseFactor, this.time <= 0 && (this.time = 0, 
                this.tranCamrea.localPositionZ = Nt.getCurScene().camreaData.pos.z, this.tranCamrea.localPositionX = Nt.getCurScene().camreaData.pos.x, 
                console.log(Nt.getCurScene().camreaData.pos));
            }
        }
    }
    class Es {
        static getAllInviteData(e) {
            this.allInviteData ? e(this.allInviteData) : this.requestAllInviteData(e);
        }
        static requestAllInviteData(e) {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399) tl.getInstance().getPlatformUserId(function(t) {
                B.request(C.INVITE_ALL_DATA, "GET", {
                    openId: t,
                    appId: hl.appId
                }, function(t) {
                    if (1 == t.result) {
                        Es.allInviteData = t.data;
                        for (let e in Es.allInviteData) Es.allInviteData[e].list = JSON.parse(Es.allInviteData[e].list), 
                        Es.allInviteData[e].id == tl.getInstance().getInviteId() && (Es.curInviteData = Es.allInviteData[e]);
                        e();
                    }
                }, null, !0);
            }); else {
                this.allInviteData = [];
                for (let e = 0; e < 2; e++) this.allInviteData.push({
                    list: [],
                    state: 1,
                    num: 1,
                    id: e + 1
                });
                for (let e in this.allInviteData) if (this.allInviteData[e].id == tl.getInstance().getInviteId()) {
                    this.curInviteData = this.allInviteData[e];
                    break;
                }
                e();
            }
        }
        static requestCreateInivteData(e) {
            hl.platform == v.WEB || hl.platform == v.WEB_4399 ? e() : tl.getInstance().getPlatformUserId(function(t) {
                B.request(C.INVITE, "POST", {
                    opt: 0,
                    appId: hl.appId,
                    openId: t,
                    id: tl.getInstance().getInviteId()
                }, function() {
                    e();
                }, null, !0);
            });
        }
        static requestInviteEnter(e, t) {
            tl.getInstance().getPlatformUserId(function(i) {
                B.request(C.INVITE, "POST", {
                    opt: 1,
                    appId: hl.appId,
                    openId: t,
                    myOpenId: i,
                    id: e,
                    avatar: "",
                    nick: ""
                }, function() {
                    console.log("拜师成功");
                }, null, !0);
            });
        }
        static requestGetReward(e, t) {
            hl.platform != v.WEB ? tl.getInstance().getPlatformUserId(function(i) {
                B.request(C.INVITE, "POST", {
                    opt: 2,
                    appId: hl.appId,
                    openId: i,
                    id: e
                }, function(e) {
                    1 == e.result ? t() : 3 == e.result ? Oi.showNotification("已领取") : 5 == e.result && Oi.showNotification("人数未满");
                }, null, !0);
            }) : t();
        }
    }
    Es.allInviteData = [];
    class Cs {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new Cs();
                a.id = i.id, a.num = i.num, a.award = JSON.parse(i.award), a.title = i.title, Cs.cache[a.id] = a, 
                this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (Cs.cache[e]) return Cs.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return Cs.cache[this.keys[e]] ? Cs.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Cs.cache;
        }
        clear() {
            Cs.cache = {};
        }
    }
    Cs.cache = {}, Cs.keys = [];
    class vs {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new vs();
                a.id = i.id, a.name = i.name, a.english = i.english, a.info = i.info, vs.cache[a.id] = a, 
                this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (vs.cache[e]) return vs.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return vs.cache[this.keys[e]] ? vs.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return vs.cache;
        }
        clear() {
            vs.cache = {};
        }
    }
    vs.cache = {}, vs.keys = [];
    class xs {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new xs();
                a.id = i.id, a.info = i.info, a.award = i.award, a.awardType = i.awardType, a.cost = i.cost, 
                a.armTime = i.armTime, xs.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (xs.cache[e]) return xs.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return xs.cache[this.keys[e]] ? xs.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return xs.cache;
        }
        clear() {
            xs.cache = {};
        }
    }
    xs.cache = {}, xs.keys = [];
    class Bs {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new Bs();
                a.id = i.id, a.exp = i.exp, a.bonus = JSON.parse(i.bonus), Bs.cache[a.id] = a, this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (Bs.cache[e]) return Bs.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return Bs.cache[this.keys[e]] ? Bs.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Bs.cache;
        }
        clear() {
            Bs.cache = {};
        }
    }
    Bs.cache = {}, Bs.keys = [];
    class As {
        static initData(e) {
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new As();
                a.id = i.id, a.objName = i.objName, a.cnName = i.cnName, a.speed = i.speed, As.cache[a.id] = a, 
                this.keys.push(a.id);
            }
        }
        static getDataByKey(e) {
            if (As.cache[e]) return As.cache[e];
            console.error("没有初始化数据");
        }
        static getDataByIndex(e) {
            return As.cache[this.keys[e]] ? As.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return As.cache;
        }
        clear() {
            As.cache = {};
        }
    }
    As.cache = {}, As.keys = [];
    var _s, Ss = Laya.Vector3;
    !function(e) {
        e[e.MENU = 0] = "MENU", e[e.START = 1] = "START", e[e.OVER = 2] = "OVER", e[e.PAUSE = 3] = "PAUSE";
    }(_s || (_s = {}));
    class Ts extends T.scene.GameSceneUI {
        constructor() {
            super(), this.isFailLogin = !1, this.isPause = !1, this.cameraMoveCtrl = null, this.outPos = new Laya.Vector4(), 
            this.menuPlayer = null, this.isShowUnder = !1, this.isPlayMove = !1, this.imgBg = null, 
            this.camreaData = {
                rot: new Laya.Vector3(),
                pos: new Laya.Vector3()
            }, this.lastSceneType = null;
            let e = "https://game-res-1255397116.file.myqcloud.com/limit/qzryjy/";
            if (hl.platform == v.WX || hl.platform == v.TT) {
                let t = [ "prefab/", "main/", "other/", "sub1/", "sub2/", "sub3/", "sub8/", "sub9/", "sub15/", "sub18/", "ani/", "loading/", "gameSound/", "private/" ];
                hl.platform == v.WX && (Laya.MiniAdpter.AutoCacheDownFile = !0, Laya.MiniAdpter.nativefiles = t, 
                Laya.URL.basePath = `${e}wx/${hl.resVer}/`), hl.platform == v.TT && (Laya.TTMiniAdapter.AutoCacheDownFile = !0, 
                Laya.TTMiniAdapter.nativefiles = t, Laya.URL.basePath = `${e}tt/${hl.resVer}/`);
            }
            CosUtil.init("game-res-1255397116.file.myqcloud.com", "game-res-1255397116", "ap-guangzhou"), 
            this.timerOnce(100, this, function() {
                this.height = Laya.stage.height, this.width = Laya.stage.width;
            }, null, !1);
        }
        onExit() {}
        onEnter() {
            let t;
            (t = hl.gameType == rl.QZHXJY || hl.gameType == rl.CJRYZC ? new fs(9) : new Ut(9)).zOrder = S.LOADING, 
            this.stage.addChild(t);
            let i = this, s = 0, n = function() {
                console.log("加载步骤：", s), 3 == ++s && (i.init(), t.close());
            };
            if (i.requestConfig(n), i.requestUserId(n), this.loadMainSub(t, function() {
                let a = [];
                a = W.newMode ? [ {
                    url: ul.PFB_UI_BREAK_STAR,
                    type: Laya.Loader.PREFAB
                }, {
                    url: ul.JSON_UI_MAP,
                    type: Laya.Loader.JSON
                }, {
                    url: ul.EFFECT_PREFEB
                }, {
                    url: "sub1/sky_box/sky.lmat",
                    type: Laya.Loader.MATERIAL
                }, {
                    url: ul.WEAPON_PREFEB
                }, {
                    url: ul.SKIN_PREFEB
                }, {
                    url: ul.MENU_SCENE
                } ] : [ {
                    url: ul.PFB_UI_BREAK_STAR,
                    type: Laya.Loader.PREFAB
                }, {
                    url: ul.JSON_UI_MAP,
                    type: Laya.Loader.JSON
                }, {
                    url: ul.EFFECT_PREFEB
                }, {
                    url: ul.PARTS_PREFEB
                }, {
                    url: "sub1/sky_box/sky.lmat",
                    type: Laya.Loader.MATERIAL
                }, {
                    url: ul.WEAPON_PREFEB
                }, {
                    url: ul.SKIN_PREFEB
                }, {
                    url: ul.MENU_SCENE
                } ];
                let s = Gt.mapList[1], o = Laya.LocalStorage.getItem(hl.appId + e.ROLE_INFO);
                o && "" != o || a.push({
                    url: s.path
                }), i.loadMainRes(n, t, a);
            }), hl.platform == v.NATIVE_ANDRIOD) {
                let e = window.PlatformClass;
                e && e.createClass("demo.JSBridge").call("setChannelId"), e && e.createClass("demo.JSBridge").call("setSystemInfo");
            }
            hl.platform != v.WX && hl.platform != v.QQ || (j.preloadBannerAd(), ol.preloadRewardVideoAd(a[0].ad_id), 
            j.preloadCustom());
        }
        requestUserId(t) {
            let i = this;
            const a = [ "ARM.json", "ArmSpecial.json", "Dan.json", "Invite.json", "Mode.json", "NewYearGift.json", "parts.json", "PlayerLevel.json", "PROP.json", "ROLE.json", "skin.json", "Task.json", "ZombiePass.json" ], s = [ A, Se, J, Cs, vs, xs, ee, Bs, _e, Be, As, xa, zt ];
            if (hl.platform == v.WX || hl.platform == v.TT) B.requestToken(function() {
                ImageUtil.loadJsonRes(!0, a, s, function() {
                    i.requestRoleInfo(t);
                });
            }, function() {
                ol.showModal("网络错误", "请求失败，请刷新游戏", !1, function() {});
            }); else if (hl.platform == v.QQ) t(); else {
                "1" == Laya.LocalStorage.getItem(e.CLEAN_USER_INFO) && Laya.LocalStorage.clear(), 
                ImageUtil.loadJsonRes(!0, a, s, function() {
                    tl.getInstance().initData(), t();
                });
            }
        }
        requestRoleInfo(t) {
            let i = Laya.LocalStorage.getItem(e.ROLE_INFO);
            if ("1" == Laya.LocalStorage.getItem(e.CLEAN_USER_INFO) && Laya.LocalStorage.clear(), 
            i && "" != i) tl.getInstance().initData(), t(); else {
                let i = Laya.LocalStorage.getItem(e.PLATFORM_USER_ID);
                B.request(C.ROLE_INFO, "GET", {
                    appId: hl.appId,
                    openId: i
                }, function(e) {
                    console.log("ROLE_INFO", e), 1 == e.result ? tl.getInstance().initData(JSON.parse(e.data.roleInfo)) : tl.getInstance().initData(), 
                    t();
                }, function() {
                    tl.getInstance().initData(), t();
                });
            }
        }
        requestConfig(e) {
            let t = this;
            U.zsInit(function() {
                B.request(C.CONFIG, "GET", {
                    appId: hl.appId
                }, function(i) {
                    if (console.log("data", i.data.config), i = i.data, hl.setData(JSON.parse(i.share), i.config, i.region), 
                    1 == hl.exitCtrl()) {
                        let e = window.PlatformClass;
                        e && e.createClass("demo.JSBridge").call("onBtnPrivateRefuse");
                    }
                    if (hl.platform == v.NATIVE_ANDRIOD && hl.isReviewVersion()) {
                        let e = window.PlatformClass;
                        e && e.createClass("demo.JSBridge").call("setReview");
                    }
                    if (hl.platform == v.NATIVE_ANDRIOD) {
                        let e = window.PlatformClass;
                        e && e.createClass("demo.JSBridge").call("setSplashTime", hl.getNativeSplashTime().toString());
                    }
                    j.loop(), hl.platform != v.WX && hl.platform != v.WEB || U.requestChannelData(function() {
                        L.notify(w.CHANNEL_DATA);
                    }), t.isFailLogin || ps.create(function() {
                        e();
                    });
                }, function() {
                    if (t.isFailLogin) return;
                    t.isFailLogin = !0;
                    let i = [];
                    i[0] = {
                        title: "【你的好友@了你一下】在吗，一起来山坡上竞个速",
                        img: "main/share/1.jpg"
                    }, hl.setData(i, null, null), console.log("登录失败---"), hl.platform != v.WX && hl.platform != v.WEB || U.requestChannelData(function() {
                        L.notify(w.CHANNEL_DATA);
                    }), j.loop(), ps.create(function() {
                        e();
                    });
                });
            });
        }
        loadMainRes(e, t, i = []) {
            console.log("加载资源"), xe.loadRes(i, Laya.Handler.create(this, function() {
                console.log("加载成功——----------------------1"), Laya.Scene.setUIMap(ul.JSON_UI_MAP), 
                console.log("加载成功——----------------------2"), e();
            }), Laya.Handler.create(this, function(e) {
                t.setProgress(e, 9);
            }));
        }
        loadSub(e, t, i) {
            return new Promise((t, a) => {
                xe.loadSubpackage(e, t, function(e) {
                    i.setProgress(e);
                });
            });
        }
        loadMainSub(t, i) {
            let a = [ pl.SUB1, pl.SUB2, pl.SUB3 ];
            W.newMode || a.push(pl.SUB18);
            let s = Laya.LocalStorage.getItem(hl.appId + e.ROLE_INFO);
            s && "" != s || a.push(pl.GAME_SOUND, pl.SUB9);
            let n = 0;
            for (let e in a) xe.loadSubpackage(a[e], function() {
                ++n == a.length && i();
            }, function(e) {
                t.setProgress(e, n + 1);
            });
        }
        init() {
            if (xt.reportOnLineTime(), hl.platform == v.NATIVE_ANDRIOD) {
                j.preloadBannerAd();
                let e = window.PlatformClass;
                e && e.createClass("demo.JSBridge").call("setChannelId");
            }
            this.reSetDataName(), us.init(), this.adCtrl(), Ce.create(32);
            let e = new Rt();
            ol.isFullScreen() ? e.pos(934, 21) : e.pos(734, 21), Bt.init(e);
            let t = !1;
            tl.getInstance().isNew && !hl.isShowReviewUI() && (t = !0), t || this.setGameState(_s.MENU), 
            this.setFrame(), this.createFirstImgBg();
            if (Oi.init(), L.register(w.REFRESH_SKIN, this.updateMenuScene3D, this), hs.id = tl.getInstance().getSynthesisMaxId(), 
            hs.setfreeRewardForGoldCoins(), hs.setfreeDiamondsRewards(), hs.setOflineReawrd(), 
            hl.platform == v.WEB_4399) Laya.stage.on(Laya.Event.BLUR, Ts, function() {
                if (!Ts.loseFocusViewCtrl) {
                    let e = new ys();
                    Laya.stage.addChild(e), e.zOrder = S.MAX + 100, Ts.loseFocusViewCtrl = e, e && (Nt.getCurScene().state == _s.START && Nt.getCurScene().pause(), 
                    Laya.timer.scale = 0);
                }
            }); else if (hl.platform == v.WX) {
                let e = tl.getInstance().options.query;
                1 == e.opt && e.id && e.openId && Es.requestInviteEnter(e.id, e.openId);
            }
            if (t) {
                Bt.openFunction(Er.GAME, gr.COVER, ur.VIEW, St.HIDE);
                let e = Gt.mapList[1];
                Ba.setModelTargetKillSore(), Wt.matchingShow(), Rs.cleanDataList(), this.startByClassicMode(e.path), 
                Bt.getFunctionViewCtrl(Er.GAME).setNewPlayerArm();
            }
        }
        adCtrl() {
            hl.platform != v.OPPO && hl.platform != v.WEB || (j.timerRefreshNativeBanner(), 
            j.timerRefreshNativIcon());
        }
        createFirstImgBg() {
            this.imgBg || (this.imgBg = new Laya.Image("sub1/ui/first/img_19.jpg"), this.imgBg.width = Laya.stage.width, 
            this.imgBg.height = Laya.stage.height, Laya.stage.addChildAt(this.imgBg, 0));
        }
        removeFirstImgBg() {}
        createSynthesis() {
            Ts.synthesisViewCtrl || (Ts.synthesisViewCtrl = new ds());
        }
        updateMenuScene3D() {
            this.isPlayMove || (this.menuPlayer && this.menuPlayer.destroy(), this.menuPlayer = null, 
            console.log("刷新主界面角色"), this.createMenuPlayer());
        }
        createMenu(e = 0, t = null, i = null) {
            if (this.lastSceneType != e) {
                if (this.menuPlayer && this.menuPlayer.destroy(), Ts.scene3d && Ts.scene3d.removeSelf(), 
                1 == e) return Gt.cleanMap(), Ts.scene3d = xe.getRes(ul.MENU_SCENE), console.log("菜单摄像机：", Ts.scene3d.getChildByName("Main Camera").enableHDR), 
                Ts.scene3d.getChildByName("Main Camera").enableHDR = !1, t ? t.addChild(Ts.scene3d) : Laya.stage.addChild(Ts.scene3d), 
                this.createMenuPlayer(e), void (this.lastSceneType = e);
                if (2 == e) return Gt.cleanMap(), Ts.scene3d = xe.getRes(ul.MENU_SCENE), console.log("菜单摄像机：", Ts.scene3d.getChildByName("Main Camera").enableHDR), 
                Ts.scene3d.getChildByName("Main Camera").enableHDR = !1, Laya.stage.addChild(Ts.scene3d), 
                this.lastSceneType = e, void this.createMenuPlayer(e, i);
                Ri.clean(), this.menuPlayer = null, this.isPlayMove = !1, Wt.gameTime = 300, il.cleanEffect(), 
                Rs.clean(), Gt.cleanMap(), va.clean(), hi.clean(), ja.clean(), Gt.cleanMap(), this.lastSceneType = e, 
                Ts.scene3d = xe.getRes(ul.MENU_SCENE), console.log("菜单摄像机：", Ts.scene3d.getChildByName("Main Camera").enableHDR), 
                Ts.scene3d.getChildByName("Main Camera").enableHDR = !1, hl.isShowReviewUI() ? Laya.stage.addChild(Ts.scene3d) : this.addChild(Ts.scene3d), 
                this.createMenuPlayer();
            }
        }
        cleanMenu() {
            this.menuPlayer && this.menuPlayer.destroy(), Ts.scene3d && Ts.scene3d.removeSelf();
        }
        createMenuPlayer(e = 0, t = null) {
            let i = Te.createSkin(new Laya.Vector3(0, 0, 0), "001", !1, te.PLAYER, Ts.scene3d, !0);
            this.menuPlayer = i, this.menuPlayer.transform.localRotationEulerY = 25, this.menuPlayer.transform.localPositionX = -2.5, 
            this.menuPlayer.transform.localPositionY = -5.5, this.menuPlayer.transform.localScale = new Ss(6, 6, 6);
            let a = tl.getInstance().getSelectSkin();
            2 == e && (this.menuPlayer.transform.localPositionX = 0, this.menuPlayer.transform.localPositionY = -2.5, 
            this.menuPlayer.transform.localScale = new Ss(4.5, 4.5, 4.5)), Te.createMenuArm(a, this.menuPlayer), 
            Te.createPartsByLocal(this.menuPlayer), this.resetPlayMenuPlayerAni(e);
        }
        resetPlayMenuPlayerAni(e = 0) {
            let t = tl.getInstance().getSelectSkin();
            1 == e && (t = Rs.playerLogicalBaseLayer.armCtrl ? Rs.playerLogicalBaseLayer.armCtrl.id : tl.getInstance().getSelectSkin());
            let i = Te.createMenuArm(t, this.menuPlayer);
            i.transform.localScale = new Ss(1, 1, 1), 67 != t && 40 != t || (i.transform.localScale = new Ss(.8, .8, .8));
        }
        createMap(e) {
            Rs.clean(), Gt.cleanMap(), console.log("添加主场景"), Ts.scene3d = xe.getRes(e), this.lastSceneType = -1, 
            Laya.stage.addChildAt(Ts.scene3d, 0), hi.addPlaceList(), ja.addZombieBirthList();
        }
        createObj() {
            Gt.loadMap(), this.createSky(), Za.getRolePos(), this.createPlayer(), Ht.addBunkersList(), 
            this.createAI(), this.cameraCtrl();
        }
        createSky() {
            let e = xe.getRes("sub1/sky_box/sky.lmat");
            Ts.scene3d.skyRenderer.material = e;
        }
        getViewportPoint(e) {
            let t = Ts.camera;
            return t.viewport.project(e, t.projectionViewMatrix, this.outPos), this.outPos.x = this.outPos.x / Laya.stage.clientScaleX, 
            this.outPos.y = this.outPos.y / Laya.stage.clientScaleY, this.outPos;
        }
        setLightShadow() {
            let e = Ts.scene3d.getChildByName(te.LIGHT);
            e.shadowMode = Laya.ShadowMode.Hard, e.shadowDistance = 33, e.shadowResolution = 2048, 
            e.shadowCascadesMode = Laya.ShadowCascadesMode.NoCascades, e.shadowNormalBias = 5, 
            e.shadowStrength = .5;
        }
        cameraCtrl() {
            let e = q.findChildByName(Ts.scene3d.getChildByName(te.PLAYER), te.CAMREA);
            Ts.camera = e, Ts.camera.nearPlane = .1, e.enableHDR = !1, this.camreaData.pos = Ts.camera.transform.localPosition.clone(), 
            this.camreaData.rot = Ts.camera.transform.localRotationEuler.clone(), this.cameraMoveCtrl = e.addComponent(bs);
        }
        createPlayer() {
            Za.createPlayer();
        }
        createAI() {
            Za.createAI();
        }
        update() {
            if (Rs.gameStop) Rs.playerLogicalBaseLayer && Rs.playerLogicalBaseLayer.getPresentationBaseLayer() && (kt.isCloseCharacterCtrl ? Rs.playerLogicalBaseLayer.getPresentationBaseLayer().characterCtrl.stop() : Rs.playerLogicalBaseLayer.getPresentationBaseLayer().characterCtrl.move(Rs.playerLogicalBaseLayer.getMyOrientation())); else {
                if (Rs.gameOver) return this.state != _s.OVER && (Ts.isOpenOverView || (Ts.isOpenOverView = !0, 
                na.instance.clean(), Laya.timer.once(1500, this, () => {
                    console.log("创建结算界面"), jt.setCurGamesResult(), this.setGameState(_s.OVER);
                }))), void (Rs.playerLogicalBaseLayer && Rs.playerLogicalBaseLayer.getPresentationBaseLayer() && (kt.isCloseCharacterCtrl ? Rs.playerLogicalBaseLayer.getPresentationBaseLayer().characterCtrl.stop() : Rs.playerLogicalBaseLayer.getPresentationBaseLayer().characterCtrl.move(Rs.playerLogicalBaseLayer.getMyOrientation())));
                Ce.gSysTimer.update(), this.state == _s.START && (Rs.attack(), Rs.move(), Rs.jump(), 
                Rs.randomRotate(), Rs.setDoubleKill(), Rs.countDownBeHit(), ja.finishCtrl(), ja.resetGenerateBulletSupply(), 
                ja.resetGenerateLifeSupply(), Rs.zombieModeTeamDie(), Rs.getzomBieModeNearDieTeam(), 
                Rs.rescueNearTeam(), va.update(), Rs.playerLogicalBaseLayer.getPresentationBaseLayer().sectorDetection() && Bt.getFunctionViewCtrl(Er.GAME) && (Bt.getFunctionViewCtrl(Er.GAME).isToGudeAttack || (Bt.getFunctionViewCtrl(Er.GAME).isToGudeAttack = !0, 
                Bt.getFunctionViewCtrl(Er.GAME).setGuide())));
            }
        }
        setFrame() {
            Laya.timer.frameLoop(1, this, this.update);
        }
        pause() {
            this.isPause = !0;
        }
        resume() {
            this.isPause = !1;
        }
        setGameState(e, t = null) {
            if (this.state == e) return;
            this.preState = this.state, this.state = e;
            switch (ol.setPreferredFramesPerSecond(60), e) {
              case _s.MENU:
                this.preState == _s.OVER && Rs._isWin && (hl.appId, H.XM), Ts.isGaming = !1, this.createSynthesis(), 
                this.imgBg && (this.imgBg.visible = !0), hl.isShowReviewUI() ? Bt.openFunction(Er.FIRST, gr.COVER, ur.VIEW, St.HIDE, {}) : Bt.openFunction(Er.FIRST, gr.COVER, ur.VIEW, St.ALL_SHOW, {});
                break;

              case _s.START:
                ol.isIOS() && ol.setPreferredFramesPerSecond(30), this.imgBg && (this.imgBg.visible = !1), 
                Ts.isGaming = !0, Bt.getFunctionViewCtrl(Er.GAME).start();
                break;

              case _s.OVER:
                {
                    Ba.completeTask(wa.COMPLETE_GAME), Ts.realGameNum++, tl.getInstance().updatePopUpRuleGameNum(), 
                    ol.endRecordGame(function(e) {
                        ol.path = e;
                    }), Rs._isWin && Ba.completeTask(wa.GAME_WIN);
                    let e = function() {
                        hl.isShowReviewUI() ? Bt.openFunction(Er.END_RECREATION, gr.REPLACE, ur.VIEW, St.HIDE) : (Bt.clean(), 
                        Bt.openFunction(Er.END_ANI, gr.COVER, ur.VIEW, St.HIDE, function() {
                            Mt.mode == Tt.TEAMCOMPETITION ? Bt.openFunction(Er.END, gr.REPLACE, ur.VIEW, St.HIDE, null, function() {
                                Bt.openFunction(Er.END_MYSELF, gr.COVER, ur.VIEW, St.HIDE), Bt.registerAutoOpenFunction(Er.DAN_ANI, gr.COVER, ur.VIEW, St.HIDE, Rs._isWin);
                                let e = tl.getInstance().getSuperEquipId();
                                if (e && !hl.isReviewVersion()) {
                                    (function() {
                                        tl.getInstance().getGuide() >= Et.FINISH && Bt.registerAutoOpenFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                                            id: e,
                                            isEndOpen: !0
                                        });
                                    })();
                                }
                                hl.platform == v.OPPO ? Bt.registerAutoOpenFunction(Er.OPPOGAMEBOX, gr.COVER, ur.VIEW, St.HIDE) : Bt.registerAutoOpenFunction(Er.ENDGAMEBOX, gr.COVER, ur.VIEW, St.HIDE, {
                                    viewType: 1
                                });
                            }) : Bt.openFunction(Er.END_RECREATION, gr.REPLACE, ur.VIEW, St.HIDE, null, function() {
                                Bt.openFunction(Er.END_MYSELF, gr.COVER, ur.VIEW, St.HIDE);
                                let e = tl.getInstance().getSuperEquipId();
                                if (e && !hl.isReviewVersion()) {
                                    (function() {
                                        tl.getInstance().getGuide() >= Et.FINISH && Bt.registerAutoOpenFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                                            id: e,
                                            isEndOpen: !0
                                        });
                                    })();
                                }
                                hl.platform == v.OPPO ? Bt.registerAutoOpenFunction(Er.OPPOGAMEBOX, gr.COVER, ur.VIEW, St.HIDE) : Bt.registerAutoOpenFunction(Er.ENDGAMEBOX, gr.COVER, ur.VIEW, St.HIDE, {
                                    viewType: 1
                                });
                            });
                        }));
                    };
                    this.clean(), hl.appId == v.NATIVE_IOS && Mt.mode != Tt.TEAMCOMPETITION || hl.appId == H.C_233 ? j.createFullscreenVideo(null, function() {
                        e();
                    }, !1) : Mt.mode != Tt.TEAMCOMPETITION && hl.appId == H.XM ? j.createFullscreenVideo(null, function() {
                        e();
                    }, !1) : e();
                    break;
                }
            }
        }
        getCurView() {
            return this.view;
        }
        clean() {}
        createAllModeMap(e) {
            let t;
            (t = hl.isShowReviewUI() ? new Ls() : new $a()).zOrder = S.LOADING, Laya.stage.addChild(t);
            let i = this, a = [ {
                url: e,
                type: null
            } ];
            Mt.mode == Tt.BIOCHEMISTRY && a.push({
                url: ul.SKIN_ZOMBIE,
                type: null
            }), this.loadMainRes(function() {
                t.ready.resReady = !0, t.ready.mapUrl = e, t.close(), i.startByClassicMode(e);
            }, t, a);
        }
        createClassicModeMap(e, t) {
            let i = new $a();
            i.zOrder = S.LOADING, Laya.stage.addChild(i);
            this.loadMainRes(function() {
                i.ready.resReady = !0, i.ready.mapUrl = t;
            }, i, [ {
                url: t,
                type: null
            } ]);
        }
        createBiochemicalModelMap(e, t) {
            let i = new $a();
            i.zOrder = S.LOADING, Laya.stage.addChild(i);
            this.loadMainRes(function() {
                i.ready.resReady = !0, i.ready.mapUrl = t;
            }, i, [ {
                url: t,
                type: null
            } ]);
        }
        createSniperModeMap(e, t) {
            let i = new $a();
            i.zOrder = S.LOADING, Laya.stage.addChild(i);
            this.loadMainRes(function() {
                i.ready.resReady = !0, i.ready.mapUrl = t;
            }, i, [ {
                url: t,
                type: null
            } ]);
        }
        createKnifeWarMode(e, t) {
            let i = new $a();
            i.zOrder = S.LOADING, Laya.stage.addChild(i);
            this.loadMainRes(function() {
                i.ready.resReady = !0, i.ready.mapUrl = t;
            }, i, [ {
                url: t,
                type: null
            } ]);
        }
        createTwoVSTwoMode(e, t) {
            let i = new $a();
            i.zOrder = S.LOADING, Laya.stage.addChild(i);
            this.loadMainRes(function() {
                i.ready.resReady = !0, i.ready.mapUrl = t;
            }, i, [ {
                url: t,
                type: null
            } ]);
        }
        createOneVsOneMode(e, t) {
            (void 0).zOrder = S.LOADING, Laya.stage.addChild(void 0);
            this.loadMainRes(function() {
                (void 0).ready.resReady = !0, (void 0).ready.mapUrl = t;
            }, void 0, [ {
                url: t,
                type: null
            } ]);
        }
        startByClassicMode(e) {
            jt.setDifficulty(), this.createMap(e), this.createObj(), this.setGameState(_s.START), 
            Ya.sound3dCount = 0;
        }
        static touchCtrl(e, t) {
            if (t == Yt.ADD) {
                let t = !1, i = 0;
                for (let a = 0; a < this.touchIDs.length; a++) if (e == this.touchIDs[a]) {
                    t = !0, i = a;
                    break;
                }
                t || this.touchIDs.length < 2 && this.touchIDs.push(e);
            } else if (t == Yt.REMOVE) {
                let t = !1, i = 0;
                for (let a = 0; a < this.touchIDs.length; a++) if (e == this.touchIDs[a]) {
                    t = !0, i = a;
                    break;
                }
                t && this.touchIDs.splice(i, 1);
            }
            1 == this.touchIDs.length ? t == Yt.ADD && (Laya.MouseManager.instance.mouseX < Laya.stage.width / 2 ? this.handleType = Pt.ONLYMOVE : this.handleType = Pt.ONLYROT) : 2 == this.touchIDs.length ? this.curX != Laya.MouseManager.instance.mouseX && (Laya.MouseManager.instance.mouseX <= Laya.stage.width / 2 ? this.handleType = Pt.MOVEANDROT_TOUCHLEFTAFTER : this.handleType = Pt.MOVEANDROT_TOUCHRIGHTAFTER, 
            this.curX = Laya.MouseManager.instance.mouseX) : this.handleType = null;
        }
        reSetDataName() {
            if (!hl.getViolenceCtrl() && hl.platform == v.WEB_4399) {
                for (let e = 0; e < Is.keys.length; e++) {
                    const t = Is.getDataByIndex(e);
                    t.extra() == Gr.RED_TASSEL_EQUIP && (t.name = "P90-突击者", console.log(t.name));
                    let i = t.name;
                    i = i.replace("杀", ""), t.name = i;
                }
                for (let e = 0; e < A.keys.length; e++) {
                    const t = A.getDataByIndex(e);
                    t.id == Gr.RED_TASSEL_EQUIP && (t.name = "P90-突击者", console.log(t.name));
                    let i = t.name;
                    i = i.replace("杀", ""), t.name = i;
                }
            }
        }
    }
    Ts.myPhyworld = null, Ts.touchLeft = !1, Ts.touchRight = !1, Ts.leftPointX = null, 
    Ts.rightPointX = null, Ts.touchIDs = [], Ts.firstPoints = {
        id: 0,
        pointX: 0
    }, Ts.secondPoints = {
        id: 0,
        pointX: 0
    }, Ts.curX = 0, Ts.isGaming = !1, Ts.synthesisViewCtrl = null, Ts.isReading = !1, 
    Ts.isOpenOverView = !1, Ts.gameNum = 1, Ts.isShowRevivieCrazy = !1, Ts.isLevelUp = !1, 
    Ts.realGameNum = 0, Ts.nowGameNum = 0, Ts.popNum = 0;
    class Ds extends T.view.game.RevengeItemUI {
        constructor() {
            if (super(), this.centerX = 0, this.bottom = 128, !hl.getViolenceCtrl()) {
                let e = this.imgIcon.skin;
                e = e.replace(".png", "_4399.png"), this.imgIcon.skin = e;
            }
        }
        play() {
            this.ani1.play(0, !1), il.playEffect(ml.REVENGE);
        }
    }
    class Rs {
        static addLogicalBaseLayer(e) {
            e.getIsMySelf() && (this.playerLogicalBaseLayer = e), this.logicalBaseLayer.push(e);
        }
        static clean() {
            Laya.timer.clearAll(this), Ee.clean(), this.nextHpTime = 0;
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                this.logicalBaseLayer[e].getPresentationBaseLayer().getModel().destroy();
            }
            this.logicalBaseLayer = [], this.playerLogicalBaseLayer = null, this.fisrtPoint = null, 
            this.targetLogicalBaseLayer = null, this.ourKillScore = 0, this.enemyKillScore = 0, 
            this.hitLocation = "", this.gameOver = !1, this._isWin = !1, this.killerLogic = null, 
            this.playerBeHitImg && this.playerBeHitImg.destroy(), this.playerBeHitImg = null, 
            this.isOpenBeHitImg = !1, this.countDown = 1e3, this.drSkinList = [], this.isWarmUp = !0, 
            this.revengeItemCtrl = null, this.curFRArmList = [], this.curTargetNum = {
                index: 0,
                icon: ""
            }, this.isHaveOtherArm = !1;
        }
        static createAIParts() {
            if (Mt.mode != Tt.KNIFEWARMODE && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.TEAMCOMPETITION) return;
            let e = 2, t = 2;
            Ae.onlyOneRandomIntOrFloat(0, 1) > .5 && (e = 3, t = 1);
            let i = [], a = [];
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                t.getRoleType() != Mr.TYPE_0 || t.getIsMySelf() ? t.getRoleType() == Mr.TYPE_1 && a.push(t) : i.push(t);
            }
            if (i.length > 2) {
                let t = i[0].getPresentationBaseLayer().getModel(), a = i[1].getPresentationBaseLayer().getModel(), s = i[2].getPresentationBaseLayer().getModel(), n = [], o = [];
                for (let e = 0; e < ee.keys.length; e++) 1 == ee.getDataByKey(ee.keys[e]).partType || 3 == ee.getDataByKey(ee.keys[e]).partType ? n.push(ee.keys[e]) : 2 == ee.getDataByKey(ee.keys[e]).partType && o.push(ee.keys[e]);
                2 == e ? (Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], t, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(o[Ae.onlyOneRandomInt(0, o.length)], t, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], a, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(o[Ae.onlyOneRandomInt(0, o.length)], a, new Laya.Vector3(1, 1, 1))) : 3 == e && (Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], t, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(o[Ae.onlyOneRandomInt(0, o.length)], t, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], a, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(o[Ae.onlyOneRandomInt(0, o.length)], a, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], s, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(o[Ae.onlyOneRandomInt(0, o.length)], s, new Laya.Vector3(1, 1, 1)));
            }
            if (a.length > 2) {
                let e = a[0].getPresentationBaseLayer().getModel(), i = a[1].getPresentationBaseLayer().getModel(), s = [], n = [];
                for (let e = 0; e < ee.keys.length; e++) 1 == ee.getDataByKey(ee.keys[e]).partType || 3 == ee.getDataByKey(ee.keys[e]).partType ? s.push(ee.keys[e]) : 2 == ee.getDataByKey(ee.keys[e]).partType && n.push(ee.keys[e]);
                2 == t ? (Te.createParts(s[Ae.onlyOneRandomInt(0, s.length)], e, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], e, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(s[Ae.onlyOneRandomInt(0, s.length)], i, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], i, new Laya.Vector3(1, 1, 1))) : 1 == t && (Te.createParts(s[Ae.onlyOneRandomInt(0, s.length)], e, new Laya.Vector3(1, 1, 1)), 
                Te.createParts(n[Ae.onlyOneRandomInt(0, n.length)], e, new Laya.Vector3(1, 1, 1)));
            }
        }
        static cleanTargetLogic(e) {
            for (let t = 0; t < this.logicalBaseLayer.length; t++) {
                let i = this.logicalBaseLayer[t];
                e == i.getEventID() && (i.getPresentationBaseLayer().getModel().destroy(), this.logicalBaseLayer.splice(t, 1));
            }
        }
        static destoryZDArm() {
            for (let e = 0; e < this.curFRArmList.length; e++) this.curFRArmList[e].index == this.curTargetNum.index && this.curFRArmList.splice(e, 1);
        }
        static pushZDArm(e, t = "") {
            Mt.mode != Tt.ONEVSONEMODE && ("" != t && this.curFRArmList.push({
                index: e,
                icon: t
            }), this.curTargetNum.index = "" != t ? e : this.curFRArmList[0].index, this.curTargetNum.icon = "" != t ? t : this.curFRArmList[0].icon, 
            Bt.getFunctionViewCtrl(Er.GAME).imgArm.skin = this.curTargetNum.icon);
        }
        static replaceZDArm(e, t = "") {
            for (let i = 0; i < this.curFRArmList.length; i++) this.curFRArmList[i].index == e && (this.curFRArmList[i].icon = t);
        }
        static pushFRArmList(e, t = "", i = !1) {
            if (this.judgeSame(e)) {
                let i = {
                    index: e,
                    icon: t
                };
                return this.curTargetNum = this.getUnSame(e) ? this.getUnSame(e) : i, void (Bt.getFunctionViewCtrl(Er.GAME).imgArm.skin = this.curTargetNum.icon);
            }
            if (2 == this.curFRArmList.length) for (let e = 0; e < this.curFRArmList.length; e++) this.curFRArmList[e].index == this.curTargetNum.index && this.curFRArmList.splice(e, 1);
            if (this.curFRArmList.push({
                index: e,
                icon: t
            }), i) this.curTargetNum.index = e, this.curTargetNum.icon = t; else {
                let i = {
                    index: e,
                    icon: t
                };
                this.curTargetNum = this.getUnSame(e) ? this.getUnSame(e) : i, Bt.getFunctionViewCtrl(Er.GAME).imgArm.skin = this.curTargetNum.icon;
            }
            console.log("添加：", e, this.curFRArmList);
        }
        static convenientSelectArm() {
            let e = null;
            console.log("this.curTargetNum:", this.curTargetNum, this.curFRArmList), 2 == this.curFRArmList.length && (this.curTargetNum.index == this.curFRArmList[0].index ? (this.curTargetNum = this.curFRArmList[1], 
            e = this.curFRArmList[0].index) : this.curTargetNum.index == this.curFRArmList[1].index && (this.curTargetNum = this.curFRArmList[0], 
            e = this.curFRArmList[1].index)), null != e && (Bt.getFunctionViewCtrl(Er.GAME).imgArm.skin = this.curTargetNum.icon, 
            Bt.getFunctionViewCtrl(Er.GAME).updateSelectArm(e));
        }
        static judgeSame(e) {
            for (let t = 0; t < this.curFRArmList.length; t++) if (this.curFRArmList[t].index == e) return !0;
            return !1;
        }
        static getUnSame(e) {
            for (let t = 0; t < this.curFRArmList.length; t++) if (this.curFRArmList[t].index != e) return this.curFRArmList[t];
            return null;
        }
        static cleanDataList() {
            this.outDataList = [], this.enemyDataList = [];
        }
        static updateWeScore() {
            this.ourKillScore = 0;
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                t.getRoleType() == Mr.TYPE_0 && (this.ourKillScore += t.score);
            }
        }
        static updateEnemyScore() {
            this.enemyKillScore = 0;
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                t.getRoleType() == Mr.TYPE_1 && (this.enemyKillScore += t.score);
            }
        }
        static addHead() {
            Rs.playerLogicalBaseLayer.getPresentationBaseLayer().createInvincibleProCtrl();
        }
        static addBuoy() {
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                this.logicalBaseLayer[e].getPresentationBaseLayer().addBuoy();
            }
        }
        static zombieModeTeamDie() {
            if (Mt.mode == Tt.BIOCHEMISTRY) for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                t.getPresentationBaseLayer() && t.getPresentationBaseLayer().zombieModeTeamDie();
            }
        }
        static warmUpAfterToSetPos() {
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                t.getIsMySelf() ? t.getPresentationBaseLayer().setPos(t.getInitPos()) : t.setDie();
            }
        }
        static getzomBieModeNearDieTeam() {
            if (Mt.mode != Tt.BIOCHEMISTRY) return;
            if (this.gameOver) return;
            let e = Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3(), t = null;
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let i = this.logicalBaseLayer[e];
                if (!i.getIsMySelf() && !i.isZombie && i.getIsDie()) {
                    t = i;
                    break;
                }
            }
            if (t) {
                let i = Laya.Vector3.distanceSquared(t.getPresentationBaseLayer().getModelPosByVector3(), e);
                for (let a = 0; a < this.logicalBaseLayer.length; a++) {
                    let s = this.logicalBaseLayer[a];
                    if (!s.getIsMySelf() && !s.dieRealFromZombie) {
                        let a = s.getPresentationBaseLayer().getModelPosByVector3(), n = Laya.Vector3.distanceSquared(e, a);
                        s.getIsDie() && n < i && n < 25 && (t = s, i = n);
                    }
                }
            }
            return t && Laya.Vector3.distanceSquared(t.getPresentationBaseLayer().getModelPosByVector3(), e) < 25 ? t : null;
        }
        static rescueNearTeam() {
            if (Mt.mode != Tt.BIOCHEMISTRY) return;
            let e = this.getzomBieModeNearDieTeam();
            if (this.zombieModeRescueLogic = e, e) {
                if (!e.getPresentationBaseLayer()) return;
                if (e.isZombie) return;
                if (e.dieRealFromZombie) return Bt.getFunctionViewCtrl(Er.GAME).rescuingItemCtrl.resetCoutDown(), 
                Bt.getFunctionViewCtrl(Er.GAME).rescuingItemCtrl.isInterrupt = !0, Bt.getFunctionViewCtrl(Er.GAME).setRescuingVisible(!1), 
                void Bt.getFunctionViewCtrl(Er.GAME).setBtnRescueVisible(!1);
                Rs.zombieModeRescueLogic.getPresentationBaseLayer().isInterrupt ? (Bt.getFunctionViewCtrl(Er.GAME).rescuingItemCtrl.resetCoutDown(), 
                Bt.getFunctionViewCtrl(Er.GAME).rescuingItemCtrl.isInterrupt = !0, Bt.getFunctionViewCtrl(Er.GAME).setRescuingVisible(!1), 
                Bt.getFunctionViewCtrl(Er.GAME).setBtnRescueVisible(!0)) : (Bt.getFunctionViewCtrl(Er.GAME).rescuingItemCtrl.isInterrupt = !1, 
                Bt.getFunctionViewCtrl(Er.GAME).rescuing.visible ? Bt.getFunctionViewCtrl(Er.GAME).setBtnRescueVisible(!1) : Bt.getFunctionViewCtrl(Er.GAME).setBtnRescueVisible(!0));
            } else Bt.getFunctionViewCtrl(Er.GAME).rescuingItemCtrl.resetCoutDown(), Bt.getFunctionViewCtrl(Er.GAME).rescuingItemCtrl.isInterrupt = !0, 
            Bt.getFunctionViewCtrl(Er.GAME).setRescuingVisible(!1), Bt.getFunctionViewCtrl(Er.GAME).setBtnRescueVisible(!1);
        }
        static getZombieModeSurvivalWeNum() {
            let e = 0, t = null;
            for (let i = 0; i < this.logicalBaseLayer.length; i++) this.logicalBaseLayer[i].isZombie || this.logicalBaseLayer[i].getIsDie() || (e++, 
            t = this.logicalBaseLayer[i]);
            return {
                len: e,
                tar: t
            };
        }
        static attack() {
            Rs.playerLogicalBaseLayer.getPresentationBaseLayer().radiographicTesting(), Rs.playerLogicalBaseLayer.getPresentationBaseLayer().attack();
        }
        static move() {
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                null != t && (t.getPresentationBaseLayer().move(), t.getIsMySelf() && t.getPresentationBaseLayer().setDirection());
            }
        }
        static jump() {
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                null != t && t.getPresentationBaseLayer().toJump();
            }
        }
        static randomRotate() {
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                null != t && (t.getIsMySelf() || t.getPresentationBaseLayer().toRandomRotate());
            }
        }
        static hit(e) {
            if (e.isMySelf) {
                if (!this.targetLogicalBaseLayer) return;
                if (!this.targetLogicalBaseLayer.getPresentationBaseLayer()) return;
                if (this.targetLogicalBaseLayer.getIsDie()) return;
                if (this.targetLogicalBaseLayer.isInvincible) return;
                if (0 == this.targetLogicalBaseLayer.getHP()) return;
                let t = e.hit;
                this.targetLogicalBaseLayer.setCurArmor = this.targetLogicalBaseLayer.getArmor() - Math.floor(30 * t / 100) < 0 ? 0 : this.targetLogicalBaseLayer.getArmor() - Math.floor(30 * t / 100), 
                this.targetLogicalBaseLayer.setHP = this.targetLogicalBaseLayer.getHP() - Math.floor(70 * t / 100) < 0 ? 0 : this.targetLogicalBaseLayer.getHP() - Math.floor(70 * t / 100), 
                console.log("目标血量", this.targetLogicalBaseLayer.getHP()), this.nextHpTime += 100;
                let i = this.targetLogicalBaseLayer;
                if (Laya.timer.once(Math.max(this.nextHpTime, 0), this, () => {
                    this.nextHpTime -= 100, i.getPresentationBaseLayer().setloatingBlood(t);
                }), 0 == this.targetLogicalBaseLayer.getHP()) {
                    il.vibrateShort("heavy"), this.targetLogicalBaseLayer && this.targetLogicalBaseLayer.isZombie && il.play(ml.ZOMBIEBEATTACK), 
                    this.playerLogicalBaseLayer.resetDoubleKill(), Rs.isWarmUp || (this.playerLogicalBaseLayer.playerKillCount++, 
                    this.targetLogicalBaseLayer.playerBeKillCount++, this.playerLogicalBaseLayer.score = this.playerLogicalBaseLayer.playerKillCount * Ba.singleKillScore), 
                    this.targetLogicalBaseLayer.getPresentationBaseLayer().setKillingSituation(this.playerLogicalBaseLayer), 
                    this.targetLogicalBaseLayer.getPresentationBaseLayer().setGamingHeadState();
                    let e = !1, t = !1;
                    Mt.mode != Tt.BIOCHEMISTRY && this.targetLogicalBaseLayer.gameName == this.killerName && (t = !0, 
                    this.killerName = null), this.playerLogicalBaseLayer.getArmCtrl() && 3 == this.playerLogicalBaseLayer.getArmCtrl().getType() && Ba.completeTask(wa.SNIPE_KILL), 
                    Mt.mode != Tt.KNIFEWARMODE && Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.TWOVSTWOMODE || Ba.completeTask(wa.MODE_KILL), 
                    this.hitLocation == ae.HEAD && Ba.completeTask(wa.HEADSHOT), t && (this.revengeItemCtrl || (this.revengeItemCtrl = new Ds(), 
                    Bt.getFunctionViewCtrl(Er.GAME).addChild(this.revengeItemCtrl)), this.revengeItemCtrl.play()), 
                    this.hitLocation == ae.HEAD && (e = !0, this.playerLogicalBaseLayer.resetHeadKill(), 
                    t || this.playerLogicalBaseLayer.getPresentationBaseLayer().playHeadshot()), t || (e ? Laya.timer.once(900, this, function cd() {
                        this.playerLogicalBaseLayer.getPresentationBaseLayer().startPlayDoubleKill(), Laya.timer.clear(this, cd);
                    }) : this.playerLogicalBaseLayer.getPresentationBaseLayer().startPlayDoubleKill()), 
                    L.notify(w.PLAYER_WAR_SITUATION);
                    let i = this.hitLocation == ae.HEAD, a = !0, s = !1;
                    L.notify(w.PLAYER_KILL_DETAILS), L.notify(w.KILL_BROADCAST, {
                        killerIsPlayer: a,
                        beKillerIsPlayer: s,
                        killer: Rs.playerLogicalBaseLayer.gameName,
                        beKiller: this.targetLogicalBaseLayer.gameName,
                        armType: 1,
                        isHitLocation: i,
                        killerLogic: Rs.playerLogicalBaseLayer
                    }), this.targetLogicalBaseLayer = null, Mt.mode != Tt.KNIFEWARMODE && Rs.playerLogicalBaseLayer && Rs.playerLogicalBaseLayer.getArmCtrl().getType() == Kr.KNIFE && Ba.completeTask(wa.KNIFE_KILL), 
                    Mt.mode == Tt.ONEVSONEMODE && Laya.timer.once(2e3, this, function cd() {
                        Rs.gameOver || (this.playerLogicalBaseLayer.getPresentationBaseLayer().setPos(this.playerLogicalBaseLayer.getInitPos()), 
                        Laya.timer.clear(this, cd));
                    });
                }
            } else {
                if (!e.target) return;
                if (!e.target.getPresentationBaseLayer()) return;
                if (e.target.getIsDie()) return;
                if (!Bt.getFunctionViewCtrl(Er.GAME).isStaring) return;
                let t = e.hit, i = 30;
                e.target.getIsMySelf() && (i = Ti.defenseGain);
                let a = 100 - i, s = tl.getInstance().isNew && Ts.gameNum <= 2 && e.target.getIsMySelf();
                if (s && (t *= .1), e.target.setCurArmor = e.target.getArmor() - Math.floor(t * i / 100) < 0 ? 0 : e.target.getArmor() - Math.floor(t * i / 100), 
                e.target.setHP = e.target.getHP() - Math.floor(t * a / 100) < 0 ? 0 : e.target.getHP() - Math.floor(t * a / 100), 
                e.target.getHP() <= 10 && s && (e.target.setHP = 10), e.target.getIsMySelf() && (e.isDoubleHit && (il.playEffect3D(ml.BULLETHIT), 
                e.target.getPresentationBaseLayer().speedCtrl()), 0 == e.target.getHP() && (this.killerName = e.killer.gameName, 
                this.killerSkin = e.killer.curSkin, this.killerLogic = e.killer, L.notify(w.PLAYER_WAR_SITUATION)), 
                Bt.getFunctionViewCtrl(Er.GAME).beZomBieHit(), this.playerBeHit(e.killer)), 0 == e.target.getHP() && (e.killer.resetDoubleKill(), 
                e.killer.paths = null, Rs.isWarmUp || (e.killer.playerKillCount++, e.target.playerBeKillCount++, 
                e.killer.score = e.killer.playerKillCount * Ba.singleKillScore), e.target.getPresentationBaseLayer().setKillingSituation(e.killer), 
                e.target.getPresentationBaseLayer().setGamingHeadState(), L.notify(w.PLAYER_WAR_SITUATION), 
                Mt.mode == Tt.ONEVSONEMODE && (Laya.timer.once(3e3, this, function cd() {
                    Rs.gameOver || (e.killer.getPresentationBaseLayer().setPos(e.killer.getInitPos()), 
                    Laya.timer.clear(this, cd));
                }), Bt.getFunctionViewCtrl(Er.GAME).toGiveUp()), e.target && e.target.isZombie && il.play(ml.ZOMBIEBEATTACK)), 
                0 == e.target.getHP()) {
                    let t = e.killer.getRoleType() == Mr.TYPE_0, i = e.target.getRoleType() == Mr.TYPE_0;
                    L.notify(w.KILL_BROADCAST, {
                        killerIsPlayer: t,
                        beKillerIsPlayer: i,
                        killer: e.killer.gameName,
                        beKiller: e.target.gameName,
                        armType: 1,
                        isHitLocation: e.isHitLocation,
                        killerLogic: e.killer
                    });
                }
            }
        }
        static bombHit(e, t, i) {
            for (let a = 0; a < this.logicalBaseLayer.length; a++) {
                let s = this.logicalBaseLayer[a];
                if (Laya.Vector3.distanceSquared(e, s.getPresentationBaseLayer().getModelPosByVector3()) < 100 && i.getRoleType() != s.getRoleType() && (s.setHP = s.getHP() - t < 0 ? 0 : s.getHP() - t, 
                0 === s.getHP())) {
                    let e = !1, t = !1, a = i.gameName, n = s.gameName;
                    Rs.isWarmUp || (i.playerKillCount++, s.playerBeKillCount++, i.score = i.playerKillCount * Ba.singleKillScore), 
                    s.getPresentationBaseLayer().setKillingSituation(i), s.getPresentationBaseLayer().setGamingHeadState(), 
                    i.getRoleType() == Mr.TYPE_0 && (e = !0), s.getRoleType() == Mr.TYPE_0 && (t = !0), 
                    Mt.mode == Tt.ONEVSONEMODE && (Laya.timer.once(3e3, this, function cd() {
                        Rs.gameOver || (i.getPresentationBaseLayer().setPos(i.getInitPos()), Laya.timer.clear(this, cd));
                    }), Laya.timer.once(500, this, function cb() {
                        Rs.gameOver || (Bt.getFunctionViewCtrl(Er.GAME).toGiveUp(), Laya.timer.clear(this, cb));
                    })), i.getIsMySelf() && (L.notify(w.PLAYER_KILL_DETAILS, {
                        armName: "炸弹",
                        targetName: n
                    }), this.playerLogicalBaseLayer.getPresentationBaseLayer().startPlayDoubleKill()), 
                    Mt.mode != Tt.KNIFEWARMODE && Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.TWOVSTWOMODE || Ba.completeTask(wa.MODE_KILL), 
                    L.notify(w.PLAYER_WAR_SITUATION), e = i.getRoleType() == Mr.TYPE_0, t = s.getRoleType() == Mr.TYPE_0, 
                    L.notify(w.KILL_BROADCAST, {
                        killerIsPlayer: e,
                        beKillerIsPlayer: t,
                        killer: a,
                        beKiller: n,
                        armType: Kr.BOMB,
                        isHitLocation: !1,
                        killerLogic: i
                    });
                }
            }
        }
        static aoeHit(e, t, i, a) {
            for (let s = 0; s < this.logicalBaseLayer.length; s++) {
                let n = this.logicalBaseLayer[s];
                if (Laya.Vector3.distanceSquared(e, n.getPresentationBaseLayer().getModelPosByVector3()) < 100 && i.getRoleType() != n.getRoleType() && (n.setHP = n.getHP() - t < 0 ? 0 : n.getHP() - t, 
                a == ie.HUAYAN && Ri.playFireEffect(n), 0 === n.getHP())) {
                    let e = !1, t = !1, a = i.gameName, s = n.gameName;
                    Rs.isWarmUp || (i.playerKillCount++, n.playerBeKillCount++, i.score = i.playerKillCount * Ba.singleKillScore), 
                    n.getPresentationBaseLayer().setKillingSituation(i), n.getPresentationBaseLayer().setGamingHeadState(), 
                    i.getRoleType() == Mr.TYPE_0 && (e = !0), n.getRoleType() == Mr.TYPE_0 && (t = !0), 
                    Mt.mode == Tt.ONEVSONEMODE && (Laya.timer.once(3e3, this, function cd() {
                        Rs.gameOver || (i.getPresentationBaseLayer().setPos(i.getInitPos()), Laya.timer.clear(this, cd));
                    }), Laya.timer.once(500, this, function cb() {
                        Rs.gameOver || (Bt.getFunctionViewCtrl(Er.GAME).toGiveUp(), Laya.timer.clear(this, cb));
                    })), i.getIsMySelf() && (this.playerLogicalBaseLayer.resetDoubleKill(), L.notify(w.PLAYER_KILL_DETAILS, {
                        armName: i.armCtrl.getArmName(),
                        targetName: s
                    }), this.playerLogicalBaseLayer.getPresentationBaseLayer().startPlayDoubleKill()), 
                    Mt.mode != Tt.KNIFEWARMODE && Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.TWOVSTWOMODE || Ba.completeTask(wa.MODE_KILL), 
                    L.notify(w.PLAYER_WAR_SITUATION), e = i.getRoleType() == Mr.TYPE_0, t = n.getRoleType() == Mr.TYPE_0, 
                    L.notify(w.KILL_BROADCAST, {
                        killerIsPlayer: e,
                        beKillerIsPlayer: t,
                        killer: a,
                        beKiller: s,
                        armType: i.armCtrl.getType(),
                        isHitLocation: !1,
                        killerLogic: i
                    }), i.getIsMySelf() && L.notify(w.PLAYER_KILL_DETAILS, {
                        armName: "炸弹",
                        targetName: s
                    }), Mt.mode != Tt.KNIFEWARMODE && Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.TWOVSTWOMODE || Ba.completeTask(wa.MODE_KILL), 
                    L.notify(w.PLAYER_WAR_SITUATION), e = i.getRoleType() == Mr.TYPE_0, t = n.getRoleType() == Mr.TYPE_0, 
                    L.notify(w.KILL_BROADCAST, {
                        killerIsPlayer: e,
                        beKillerIsPlayer: t,
                        killer: a,
                        beKiller: s,
                        armType: Kr.BOMB,
                        isHitLocation: !1,
                        killerLogic: i
                    });
                }
            }
        }
        static resetGetArm(e) {
            e.getArmCtrl().switchArm();
        }
        static getTargetLogic(e) {
            for (let t = 0; t < this.logicalBaseLayer.length; t++) {
                let i = this.logicalBaseLayer[t];
                i.getPresentationBaseLayer().getModelID() == e.ID && (this.targetLogicalBaseLayer = i);
            }
        }
        static setDoubleKill() {
            for (let e = 0; e < this.logicalBaseLayer.length; e++) {
                let t = this.logicalBaseLayer[e];
                null != t && t.setDoubleKill();
            }
        }
        static aiResetGetTargetLogic(e, t) {
            let i = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), t.getPresentationBaseLayer().getModelPosByVector3()), a = t;
            for (let s = 0; s < this.logicalBaseLayer.length; s++) {
                let n = this.logicalBaseLayer[s];
                if (n.getRoleType() != e.getRoleType() && n.getPresentationBaseLayer().getModelID() != t.getPresentationBaseLayer().getModelID()) {
                    let t = Laya.Vector3.distanceSquared(e.getPresentationBaseLayer().getModelPosByVector3(), n.getPresentationBaseLayer().getModelPosByVector3());
                    i > t && (i = t, a = n);
                }
            }
            return a;
        }
        static playerBeHit(e) {
            if (!hl.getViolenceCtrl()) return;
            if (this.playerBeHitImg || (this.playerBeHitImg = new Laya.Image(ul.BEHIT_UI), Nt.getCurScene().addChild(this.playerBeHitImg), 
            this.playerBeHitImg.x = Laya.stage.width / 2, this.playerBeHitImg.y = Laya.stage.height / 2, 
            this.playerBeHitImg.anchorY = 1, this.playerBeHitImg.anchorX = 0), e && e.isInvincible) return void (this.playerBeHitImg.visible = !1);
            this.countDown = 1e3, this.isOpenBeHitImg = !0, this.playerBeHitImg.visible = !0;
            let t = Nt.getCurScene().getViewportPoint(e.getPresentationBaseLayer().getModelPosByVector3()), i = Math.atan(t.y / t.x), a = 180 / Math.PI * i;
            a += 70, this.playerBeHitImg.rotation = a;
        }
        static countDownBeHit() {
            this.isOpenBeHitImg && (this.countDown -= Ce.gSysTimer.delta, this.countDown < 0 && (this.playerBeHitImg && (this.playerBeHitImg.visible = !1), 
            this.isOpenBeHitImg = !1));
        }
        static moveToEnemyCamp() {}
        static setEndMyselfData() {
            let e = 0, t = 0, i = !1, a = 0;
            for (let i = 0; i < Rs.logicalBaseLayer.length; i++) {
                let s = Rs.logicalBaseLayer[i];
                s.getIsMySelf() && (e = s.playerKillCount, t = s.maxDoubleKill), s.getRoleType() == Mr.TYPE_0 && a < s.playerKillCount && (a = s.playerKillCount);
            }
            a == e && Mt.mode != Tt.ONEVSONEMODE && (i = !0), tl.getInstance().setStandingData({
                type: Mt.mode,
                time: new Date().getTime() / 1e3,
                result: Rs._isWin ? 1 : 0,
                kill: e,
                dan: {
                    id: tl.getInstance().getDanInfo().id,
                    star: tl.getInstance().getDanInfo().star
                },
                doubleHit: a,
                isMvp: i
            });
        }
    }
    Rs.playerLogicalBaseLayer = null, Rs.logicalBaseLayer = [], Rs._isWin = !1, Rs.fisrtPoint = null, 
    Rs.targetLogicalBaseLayer = null, Rs.ourKillScore = 0, Rs.enemyKillScore = 0, Rs.hitLocation = "", 
    Rs.gameOver = !1, Rs.outDataList = [], Rs.enemyDataList = [], Rs.playerBeHitImg = null, 
    Rs.isOpenBeHitImg = !1, Rs.countDown = 1e3, Rs.zombieModeRescueLogic = null, Rs.gameStop = !1, 
    Rs.killerName = "", Rs.drSkinList = [], Rs.killerSkin = "001", Rs.killerLogic = null, 
    Rs.isWarmUp = !0, Rs.revengeItemCtrl = null, Rs.curFRArmList = [], Rs.curTargetNum = {
        index: 0,
        icon: ""
    }, Rs.nextHpTime = 0, Rs.isHaveOtherArm = !1;
    class Ns extends T.view.ani.DanAniViewUI {
        constructor(e) {
            super(), this.isWin = null, this.colorMatrix = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ], 
            this.rewardGold = 200, this.width = Laya.stage.width, this.height = Laya.stage.height, 
            this.isWin = e, this.init(e), this.setPlatformStyle(), Rs.setEndMyselfData(), this.btnNext.alpha = 0, 
            this.btnAd.alpha = 0;
        }
        onAwake() {
            Laya.timer.loop(20, this, this.setBtnAdVisable), this.btnAd.getChildAt(0).addComponent($), 
            Bt.replaceAdIcon([ {
                img: this.btnAd.getChildAt(0).getChildAt(0),
                type: 1
            } ]), tl.getInstance().isNew && Ts.gameNum - 1 <= 3 && xt.reportNewPlayerDanView(Ts.gameNum - 1);
        }
        onDestroy() {
            this.timer.clearAll(this);
        }
        init(e) {
            this.btnNext.visible = !0, hl.platform != v.OPPO && hl.platform != v.VIVO && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.btnNext.getChildAt(0).skin = e ? "sub1/ui/scale9/img_normal_1.png" : "sub1/ui/scale9/img_normal_2.png"), 
            this.setPreDan(), this.setDanInfo(e), this.setBtnAdVisable();
        }
        onBtnClose() {
            if (!q.getTouch()) return;
            hs.setSettlementWinGoldsRewards();
            hs.settlementWinGoldsRewards;
            Bt.closeFunction();
        }
        setBtnAdVisable() {
            let e = tl.getInstance().getDanInfo();
            J.getDataByKey(e.id).star > e.star ? (this.btnAd.visible = !0, this.btnNext.centerX = -this.btnAd.centerX) : (this.btnAd.visible = !1, 
            this.btnNext.centerX = 0);
        }
        onBtnAd() {
            q.getTouch(1e3) && j.setEvent(() => {
                tl.getInstance().increaseStar(), this.setDan(), this.setStar(!1), this.playStarAni(), 
                this.ani4.play(0, !0);
            }, () => {}, t.DAN_UP);
        }
        setDanInfo(e) {
            let t = this;
            if (this.imgLightWin.visible = !1, this.imgLightLose.visible = !1, this.imgWinBg.visible = e, 
            this.imgLoseBg.visible = !e, e) {
                let e = tl.getInstance().increaseStar();
                this.imgLightWin.visible = !0, this.ani4.play(0, !0), e ? (this.ani1.play(0, !1), 
                this.setDan(), this.ani1.on(Laya.Event.COMPLETE, this, function() {
                    t.setStar(!1), t.playStarAni(), t.ani4.play(0, !0), t.playDropDebris();
                }), this.imgWin1.visible = !0) : (this.aniWin.play(0, !1), t.setDan(), this.aniWin.on(Laya.Event.COMPLETE, this, function() {
                    t.setStar(!1), t.playStarAni(), t.ani4.play(0, !0), t.playDropDebris();
                }), this.imgWin.visible = !0);
            } else {
                let e = tl.getInstance().reduceStar();
                t.setDan(), this.imgLightLose.visible = !0, this.imgLose.visible = !0, e ? (this.ani1.play(0, !1), 
                this.ani1.on(Laya.Event.COMPLETE, this, function() {
                    t.setStar(!0), t.playDropStarAni();
                })) : (this.aniWin.play(0, !1), this.aniWin.on(Laya.Event.COMPLETE, this, function() {
                    t.setStar(!0), t.playDropStarAni();
                }));
            }
        }
        setStar(e = !1) {
            let i = tl.getInstance().getDanInfo(), a = i.id, s = i.star, n = J.getDataByKey(a);
            if (n.star > 5) this.boxStarN.visible = !0, this.txtStarNum.text = "x" + s; else {
                let t = this["boxStar" + n.star];
                if (this["boxStar" + (n.star - 1)] && this["boxStar" + (n.star - 1)].visible && (this["boxStar" + (n.star - 1)].visible = !1), 
                !t) return;
                t.visible = !0;
                for (let i = 0, a = t.numChildren; i < a; i++) {
                    let a = t.getChildAt(i), n = a.getChildAt(0);
                    if (i < s) {
                        if (n.visible = !0, i == s - 1 && !e) {
                            il.vibrateShort();
                            let e = xe.getRes(ul.PFB_UI_BREAK_STAR).create();
                            e.ani1.wrapMode = Laya.Animation.WRAP_REVERSE, e.ani1.play(0, !1), this.starAniPrefab = e, 
                            a.addChild(e), n.visible = !1, e.x = -2, e.y = -2;
                        }
                    } else {
                        if (i == s && e) {
                            il.vibrateShort();
                            let e = xe.getRes(ul.PFB_UI_BREAK_STAR).create();
                            e.ani1.wrapMode = Laya.Animation.WRAP_PINGPONG, e.ani1.play(0, !1), this.starAniPrefab = e, 
                            a.addChild(e), n.visible = !1, e.x = -2, e.y = -2;
                        }
                        n.visible = !1;
                    }
                }
            }
            var o = this;
            this.starAniPrefab ? this.starAniPrefab.ani1.on(Laya.Event.COMPLETE, this, function() {
                console.log("gameNum" + Ts.gameNum), tl.getInstance().isNew && 2 == Ts.gameNum || (hl.appId != H.XM && hl.appId != H.C233_ME && hl.platform != v.NATIVE_IOS && hl.appId != H.C_233 || j.createFullscreenVideo(0, function() {}), 
                hl.appId != H.MMY && hl.appId != H.HYKB || !o.isWin || j.createFullscreenVideo(0, function() {})), 
                hl.platform == v.TT && Ts.gameNum % hl.getAutoPlayVideo() == 0 && tl.getInstance().isBannerTouch() && j.setEvent(function() {}, function() {}, t.DEFAULT), 
                o.btnNext.off(Laya.Event.CLICK, o, o.onBtnClose), o.btnNext.on(Laya.Event.CLICK, o, o.onBtnClose), 
                o.btnAd.off(Laya.Event.CLICK, o, o.onBtnAd), o.btnAd.on(Laya.Event.CLICK, o, o.onBtnAd), 
                Laya.Tween.to(this.btnAd, {
                    alpha: 1
                }, 500), Laya.Tween.to(this.btnNext, {
                    alpha: 1
                }, 500);
            }) : (tl.getInstance().isNew && 2 == Ts.gameNum || (hl.appId != H.XM && hl.appId != H.C233_ME && hl.platform != v.NATIVE_IOS && hl.appId != H.C_233 || j.createFullscreenVideo(0, function() {}), 
            hl.appId != H.MMY && hl.appId != H.HYKB || !o.isWin || j.createFullscreenVideo(0, function() {})), 
            hl.platform == v.TT && Ts.gameNum % hl.getAutoPlayVideo() == 0 && tl.getInstance().isBannerTouch() && j.setEvent(function() {}, function() {}, t.DEFAULT), 
            o.btnNext.off(Laya.Event.CLICK, o, o.onBtnClose), o.btnNext.on(Laya.Event.CLICK, o, o.onBtnClose), 
            o.btnAd.off(Laya.Event.CLICK, o, o.onBtnAd), o.btnAd.on(Laya.Event.CLICK, o, o.onBtnAd), 
            Laya.Tween.to(this.btnAd, {
                alpha: 1
            }, 500), Laya.Tween.to(this.btnNext, {
                alpha: 1
            }, 500));
        }
        setDan() {
            let e = tl.getInstance().getDanInfo(), t = J.getDataByKey(e.id);
            for (let e = 1; e < 10 && this["boxStar" + e]; e++) this["boxStar" + e].visible = !1;
            this.boxStarN.visible = !1, this.imgIcon.skin = ul.IMG_DAN_ROOT + t.icon;
            let i = new Laya.Image(ul.IMG_DAN_ROOT + t.icon);
            this.imgIcon.mask = i, this.txtName.text = t.name, t.lv ? (this.imgLv.visible = !0, 
            this.imgLv.skin = "sub1/ui/dan/img_lv_" + t.lv + ".png") : this.imgLv.visible = !1;
        }
        setPreDan() {
            let e = tl.getInstance().getDanInfo(), t = J.getDataByKey(e.id), i = this.boxPreDan.getChildAt(0).getChildByName("imgIcon"), a = this.boxPreDan.getChildAt(0).getChildByName("imgLv");
            i.skin = ul.IMG_DAN_ROOT + t.icon, t.lv ? (a.visible = !0, a.skin = "sub1/ui/dan/img_lv_" + t.lv + ".png") : a.visible = !1;
        }
        playStarAni(e = null) {
            var t = new Laya.ColorFilter(this.colorMatrix);
            this.boxDanRoot.filters = [ t ], Laya.Tween.to(this.colorMatrix, {
                4: 255,
                9: 255,
                14: 255
            }, 300, null, null, 500).update = Laya.Handler.create(this, function() {
                t.setByMatrix(this.colorMatrix);
            }, null, !1), Laya.Tween.to(this.colorMatrix, {
                4: 0,
                9: 0,
                14: 0
            }, 300, null, null, 800).update = Laya.Handler.create(this, function() {
                t.setByMatrix(this.colorMatrix);
            }, null, !1), Laya.Tween.to(this.boxDanRoot, {
                scaleX: 1.1,
                scaleY: 1.1
            }, 300, Laya.Ease.backOut, null, 500), Laya.Tween.to(this.boxDanRoot, {
                scaleX: 1,
                scaleY: 1
            }, 300, null, Laya.Handler.create(this, function() {
                e && e();
            }), 800);
        }
        playDropStarAni(e = null) {
            this.colorMatrix[0] = 1, this.colorMatrix[6] = 1, this.colorMatrix[12] = 1;
            var t = new Laya.ColorFilter(this.colorMatrix);
            this.boxDanRoot.filters = [ t ], Laya.Tween.to(this.colorMatrix, {
                0: 0,
                6: 0,
                12: 0
            }, 300, null, null, 500).update = Laya.Handler.create(this, function() {
                t.setByMatrix(this.colorMatrix);
            }, null, !1), Laya.Tween.to(this.colorMatrix, {
                0: 1,
                6: 1,
                12: 1
            }, 300, null, null, 800).update = Laya.Handler.create(this, function() {
                t.setByMatrix(this.colorMatrix);
            }, null, !1), Laya.Tween.to(this.boxDanRoot, {
                scaleX: .9,
                scaleY: .9
            }, 300, Laya.Ease.backIn, null, 500), Laya.Tween.to(this.boxDanRoot, {
                scaleX: 1,
                scaleY: 1
            }, 300, null, Laya.Handler.create(this, function() {
                e && e();
            }), 800);
        }
        playDropDebris() {
            this.boxSnow.visible = !0;
            for (let e = 0; e < this.boxSnow.numChildren; e++) {
                const t = this.boxSnow.getChildAt(e);
                t.alpha = 0, this.dropAni(t);
            }
        }
        dropAni(e) {
            e.alpha = .5 * Math.random() + .5;
            let t = 2 * Laya.stage.height / 7, i = 2 * Laya.stage.height / 5 * Math.random() + Laya.stage.height / 5, a = Laya.stage.width / 2, s = 2 * Laya.stage.width / 7 * Math.random() + 5 * Laya.stage.width / 14;
            e.y = t, e.x = a, e.alpha = 1;
            let n = 360 * Math.random();
            e.rotation = n;
            let o = 40 * Math.random() + n - 10;
            Laya.Tween.to(e, {
                alpha: 1,
                y: i,
                x: s,
                rotation: o
            }, 800, Laya.Ease.strongOut, Laya.Handler.create(e, function() {
                Laya.Tween.to(e, {
                    alpha: 0,
                    y: i + 50
                }, 1e3, null, Laya.Handler.create(e, function() {
                    e.alpha = 0;
                }));
            }));
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.boxDanRoot.centerY -= 30);
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setWeb4399Platform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
    }
    class Ms {
        constructor(e, t, i, a, s) {
            this._mode = e, this._args = s, this._tag = t, this._type = i, this.style = a;
        }
        clean() {
            At.autoUnlinkUIReference(this._viewCtrl), this._viewCtrl = null, this._args = null;
        }
        setButtonAnalysePoint(e, t = null) {
            let i = [];
            q.getAllChildrenOfClass(e, Laya.Label, i), t || (t = i.length > 0 ? i[0].text : "按钮未设置事件");
            let a = this.getFunctionName() + "按钮事件:" + t;
            e.on(Laya.Event.MOUSE_UP, null, function() {
                console.log(a);
            });
        }
        get tag() {
            return this._tag;
        }
        get viewCtrl() {
            return this._viewCtrl;
        }
        get mode() {
            return this._mode;
        }
        get args() {
            return this._args;
        }
        get type() {
            return this._type;
        }
        get commonStyle() {
            return this.style;
        }
    }
    class ks extends T.view.award.NewGiftViewUI {
        constructor(e = null) {
            super(), this.list = [ 12, 7, 14, 5 ], this.isDown = !1, this.cb = null, this.width = this.stage.width, 
            this.height = this.stage.height, this.cb = e, this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), Bt.replaceAdIcon([ {
                img: this.btnGet.getChildAt(1),
                type: 1
            } ]);
        }
        onAwake() {}
        onDestroy() {
            this.cb && this.cb();
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
        onBtnGet() {
            if (q.getTouch() && !this.isDown) {
                this.isDown = !0;
                var e = this;
                j.setEvent(function() {
                    e.isDown = !1, Bt.closeFunction(), e.getEggHero(), tl.getInstance().reciveNewGift();
                }, function() {
                    e.isDown = !1;
                }, t.NEW_GIFT);
            }
        }
        getEggHero() {
            let e = this.list.pop();
            if (e) {
                var t = this;
                ls.getInstance().getEquip(e, function() {
                    t.getEggHero();
                });
            }
        }
    }
    class Os extends T.view.award.SuperEquipViewUI {
        constructor(e) {
            super(), this.isDown = !1, this.isEndOpen = !1, this.width = this.stage.width, this.height = this.stage.height, 
            this.superEquipId = e.id, this.isEndOpen = !!e.isEndOpen && e.isEndOpen, this.adCtrl(), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnBack1.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnBack2.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnClose.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), this.btnGet1.on(Laya.Event.CLICK, this, this.onBtnGet), 
            this.btnGet2.on(Laya.Event.CLICK, this, this.onBtnGet), this.btnGet1.addComponent($), 
            this.btnGet2.addComponent($), this.btnGet.addComponent($), this.box1.visible = !1, 
            this.box2.visible = !1, this.box0.visible = !1, this.superEquipId == Gr.RED_TASSEL_EQUIP ? this.box0.visible = !0 : this.superEquipId == Gr.RED_SPIRIT_EQUIP ? (this.box1.visible = !0, 
            this.btnBack.visible = !1, this.btnClose.visible = !0) : this.superEquipId == Gr.RED_SPIRIT_EQUIP1 && (this.box2.visible = !0);
            if (this.isEndOpen && us.adDown(), !hl.getViolenceCtrl() && hl.platform == v.WEB_4399) {
                let e = this.imgName.skin;
                e = e.replace(".png", "_4399.png"), this.imgName.skin = e;
            }
            this.uiPlatformConfig();
        }
        adCtrl() {
            let e = this;
            us.register(function() {
                console.log("oppoSuperEquip广告关闭"), e.isDown = !1;
                let t = e.superEquipId;
                Bt.closeFunction(), ls.getInstance().getEquip(t);
            });
        }
        onAwake() {}
        onDestroy() {
            us.unregisterByFuncId();
        }
        onBtnBack() {
            q.getTouch() && ((hl.platform == v.OPPO || hl.platform == v.WEB) && this.isEndOpen ? (console.log("结算关闭"), 
            us.execute(function() {
                console.log("进入超级武器结算正常回调"), Bt.getFunction(Er.SUPER_EQUIP) && Bt.closeFunction();
            }, !0, !0)) : Bt.closeFunction());
        }
        onBtnGet() {
            if (q.getTouch() && !this.isDown) {
                this.isDown = !0;
                var e = this;
                j.setEvent(function() {
                    e.isDown = !1;
                    let t = e.superEquipId;
                    Bt.closeFunction(), ls.getInstance().getEquip(t);
                }, function() {
                    e.isDown = !1;
                }, t.SUPER_EQUIP);
            }
        }
        onMyEnable() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || (this.box0.visible ? j.showBannerAd() : this.box2.visible && j.showBannerAd());
        }
        onMyDisable() {
            j.hideBannerAd();
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnGet.getChildAt(0),
                type: 1
            } ]), Bt.replaceAdIcon([ {
                img: this.btnGet1.getChildAt(0),
                type: 1
            } ]), Bt.replaceAdIcon([ {
                img: this.btnGet2.getChildAt(0),
                type: 1
            } ]);
        }
    }
    class Ps extends T.view.diamonds.AddDiamondsViewUI {
        constructor(e) {
            super(), this.type = 0, this.reward = 20, this.height = this.stage.height, this.width = this.stage.width, 
            this.type = e, this.name = "AddDiamondsViewCtrl";
        }
        onAwake() {
            this.uiPlatformConfig(), this.init(), this.setEvent();
        }
        onDestroy() {
            this.type = null, this.reward = null, this.btnClose = null, this.btnGold = null, 
            this.ani1 = null;
        }
        init() {
            this.ani1.play(0, !0), hs.setfreeDiamondsRewards(), hs.setRewardForInsufficientDiamonds(), 
            1 == this.type ? (this.labelTag.text = "钻石不足!", this.labelTag.color = "#FF3B3B", 
            this.reward = hs.curLackDiamondsRewards) : this.reward = hs.curFreeDiamondsRewards, 
            0 == this.reward && (this.reward = 10), this.txtGold.text = "钻石x" + _t.parseGold(this.reward.toString());
        }
        setEvent() {
            this.btnGold.on(Laya.Event.CLICK, this, this.onBtnGold), this.btnGold.addComponent($), 
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onBtnGold() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                1 == e.type && hs.reduceLackDiamondsMultiple(), Bt.openFunction(Er.GET_DIAMONDS_REWARD, gr.COVER, ur.VIEW, St.DIAMOND, {
                    reward: e.reward,
                    cb: null
                });
            }, function() {}, t.DIAMOND_REWARD);
        }
        onBtnClose() {
            q.getTouch() && Bt.closeFunction();
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnGold.getChildAt(0),
                type: 1
            } ]), hl.platform != v.TT && hl.platform != v.WEB || (this.btnGold.x = 235, this.btnNo.visible = !0);
        }
    }
    class Vs extends T.view.end.EndItemUI {
        constructor(e, t) {
            super(), this.data = null, this.index = 0, this.isActive = !1, this.random = 0, 
            this.num = 0, this.data = e, this.index = t, this.btnSend.on(Laya.Event.CLICK, this, this.onBtnSend), 
            this.btnGood.on(Laya.Event.CLICK, this, this.onBtnGood), this.setView();
        }
        onDestroy() {
            this.data.getIsMySelf() && tl.getInstance().setStandingLikeNum(this.num), this.timer.clearAll(this), 
            this.data = null, this.index = null, this.imgFist = null, this.imgHead = null, this.imgPlayerBg = null, 
            this.txtBeBeat = null, this.txtBeat = null, this.txtName = null, this.txtScore = null;
        }
        setGood() {
            this.ani1.play(0, !1), this.txtGoodNum.text = this.num.toString(), 0 == this.num ? (this.txtGoodNum.visible = !1, 
            this.imgGood.skin = "sub1/ui/end/img_25.png") : (this.txtGoodNum.visible = !0, this.imgGood.skin = "sub1/ui/end/img_24.png");
        }
        passiveGood() {
            this.random = Ae.onlyOneRandomInt(2, 7);
            let e = Ae.onlyOneRandomInt(400, 1200);
            if (this.data.playerKillCount - this.data.playerBeKillCount < -4) return;
            let t = this, i = function() {
                if (0 != t.random) {
                    {
                        t.num++, t.setGood();
                        let e = Ae.onlyOneRandomInt(400, 1200);
                        t.timer.once(e, t, i);
                    }
                    this.random--;
                }
            };
            this.timer.once(e, this, i);
        }
        onBtnGood() {
            this.isActive || (this.isActive = !0, this.num++, this.setGood());
        }
        onBtnSend() {
            Oi.showNotificationClick("已发送申请");
        }
        setView() {
            if (this.imgFist.visible = !1, this.data) {
                if (this.imgPlayerBg.visible = !1, this.txtName.text = this.data.gameName, this.txtBeat.text = this.data.playerKillCount.toString(), 
                this.txtBeBeat.text = this.data.playerBeKillCount.toString(), this.txtScore.text = this.data.score.toString(), 
                3 == this.data.maxDoubleKill ? this.imgDouble.skin = ul.END_UI.DOUBLE_UI.THREE : 4 == this.data.maxDoubleKill ? this.imgDouble.skin = ul.END_UI.DOUBLE_UI.FOUR : 5 == this.data.maxDoubleKill ? this.imgDouble.skin = ul.END_UI.DOUBLE_UI.FIVE : this.data.maxDoubleKill >= 6 && (this.imgDouble.skin = ul.END_UI.DOUBLE_UI.SIX), 
                this.data.getIsMySelf()) {
                    this.imgPlayerBg.visible = !0, this.btnSend.visible = !1;
                    let e = tl.getInstance().getPlatfromUserInfo();
                    e && (this.txtName.text = e.nickName, this.imgHead.skin = e.avatarUrl), hl.platform == v.WEB_4399 && (this.imgHead.skin = this.data.head);
                } else this.imgHead.skin = this.data.head;
                0 == this.index && (this.imgFist.visible = !0, Rs._isWin ? this.data.getRoleType() == Mr.TYPE_0 ? this.imgFist.skin = ul.END_UI.MVP_UI.FIRST : this.imgFist.skin = ul.END_UI.MVP_UI.SECOND : this.data.getRoleType() == Mr.TYPE_0 ? this.imgFist.skin = ul.END_UI.MVP_UI.SECOND : this.imgFist.skin = ul.END_UI.MVP_UI.FIRST);
            }
        }
    }
    class Gs extends T.view.end.EndViewUI {
        constructor() {
            super(), this.weCellList = [], this.enemyCellList = [], this.rewardGold = 200, this.rewardExp = 100, 
            this.rewardDiamonds = 10, this.myScore = 0, this.isDown = !1, this.height = Laya.stage.height, 
            this.width = Laya.stage.width, this.boxBg.scaleX = this.stage.width / this.boxBg.width, 
            ol.isFullScreen() || (this.boxMain.scaleX = .9);
        }
        onAwake() {
            this.init(), this.setBtnEvent(), hl.platform != v.WX && hl.platform != v.QQ && (this.btnShare.visible = !1), 
            tl.getInstance().isNew && Ts.gameNum <= 2 ? (this.btnAgain.visible = !0, this.btnBack.visible = !1) : (this.btnAgain.visible = !1, 
            this.btnBack.visible = !0);
        }
        onDestroy() {
            this.btnFailBack = null, this.btnWinBack = null, this.weCellList = null, this.enemyCellList = null, 
            this.rewardGold = null, this.rewardExp = null, this.imgType = null, this.txtEnemyScore = null, 
            this.txtRewardExp = null, this.txtRewardGold = null, this.txtWeScore = null, L.unregisterByEventId(w.REFRESH_AI_GOOD);
        }
        init() {
            tl.getInstance().updateOnceGame(1), Ts.gameNum++, tl.getInstance().getGuide() != Et.GAME_1 && tl.getInstance().getGuide() != Et.GAME_2 && tl.getInstance().getGuide() != Et.GAME_3 && tl.getInstance().getGuide() != Et.GAME_4 && tl.getInstance().getGuide() != Et.GAME_5 && tl.getInstance().getGuide() != Et.GAME_6 && tl.getInstance().getGuide() != Et.FUNGAME_1 && tl.getInstance().getGuide() != Et.FUNGAME_2 && tl.getInstance().getGuide() != Et.SHMODEGAME_1 || tl.getInstance().setGuide(), 
            Ts.isOpenOverView = !1;
            let e = [], t = [];
            if (Mt.mode != Tt.BIOCHEMISTRY) {
                Rs.updateWeScore(), Rs.updateEnemyScore();
                let e = Rs.ourKillScore <= Ba.targetKillSore ? Rs.ourKillScore : Ba.targetKillSore;
                this.txtWeScore.text = e.toString();
                let t = Rs.enemyKillScore <= Ba.targetKillSore ? Rs.enemyKillScore : Ba.targetKillSore;
                this.txtEnemyScore.text = t.toString();
            }
            if (this.btnWinBack.visible = !1, this.btnFailBack.visible = !1, this.btnBack.visible = !1, 
            this.btnShare.visible = !1, Mt.mode != Tt.BIOCHEMISTRY) {
                for (let i = 0; i < Rs.logicalBaseLayer.length; i++) {
                    let a = Rs.logicalBaseLayer[i];
                    a.getIsMySelf() && (this.myScore = a.score), a.getRoleType() == Mr.TYPE_0 ? e.push(a) : t.push(a);
                }
                let i = this.sort(e), a = this.sort(t);
                for (let e = 0; e < 5; e++) {
                    let t = new Vs(i[e], e);
                    t.y = 87 * e, this.boxWe.addChild(t), this.weCellList.push(t);
                }
                for (let e = 0; e < 5; e++) {
                    let t = new Vs(a[e], e);
                    t.y = 87 * e, this.boxEnemy.addChild(t), this.enemyCellList.push(t);
                }
            }
            Rs._isWin ? (this.btnBack.visible = !0, this.btnShare.visible = !0, this.imgType.skin = ul.END_UI.THIME_UI.WIN, 
            this.rewardGold = 50 * (this.myScore + 2), this.rewardExp = 8 * (this.myScore + 2), 
            hs.setSettlementWinDiamondsRewards(), hs.setSettlementWinGoldsRewards(), this.rewardGold = hs.settlementWinGoldsRewards, 
            this.rewardDiamonds = hs.settlementWinDiamondsRewards) : (this.rewardGold = 50 * (this.myScore + 2), 
            this.rewardExp = 8 * (this.myScore + 2), this.btnBack.visible = !0, this.btnShare.visible = !0, 
            this.imgType.skin = ul.END_UI.THIME_UI.FAIL, hs.setSettlementFailDiamondsRewards(), 
            hs.setSettlementFailGoldsRewards(), this.rewardGold = hs.settlementFailGoldsRewards, 
            this.rewardDiamonds = hs.settlementFailDiamondsRewards), this.txtRewardGold.text = this.rewardGold.toString(), 
            this.txtRewardExp.text = this.rewardExp.toString(), L.register(w.REFRESH_AI_GOOD, this.aiShowGood, this);
        }
        aiShowGood() {
            if (this.weCellList && this.enemyCellList) {
                for (let e = 0; e < this.weCellList.length; e++) {
                    this.weCellList[e].passiveGood();
                }
                for (let e = 0; e < this.enemyCellList.length; e++) {
                    this.enemyCellList[e].passiveGood();
                }
            }
        }
        sort(e) {
            for (var t, i = 0, a = e.length; i < a; i++) for (var s = 0; s <= i; s++) e[i].score > e[s].score && (t = e[i], 
            e[i] = e[s], e[s] = t);
            return e;
        }
        setBtnEvent() {
            this.btnBack.on(Laya.Event.CLICK, this, function() {
                q.getTouch() && (Bt.clean(), Nt.getCurScene().setGameState(_s.MENU));
            }), this.btnShare.on(Laya.Event.CLICK, this, function() {
                q.getTouch() && j.shareMessage();
            }), this.btnAgain.on(Laya.Event.CLICK, this, function() {
                Bt.openFunction(Er.LOADING_FIGHT, gr.COVER, ur.VIEW, St.HIDE);
            });
        }
        onBtnFailBack() {
            if (!q.getTouch()) return;
            let e = this.myScore, t = this.rewardGold, i = this.rewardDiamonds;
            Bt.closeFunction(), hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || j.createInterstitialAd(), 
            Nt.getCurScene().setGameState(_s.MENU), console.log("玩家分数" + e), e += 2, Bt.openFunction(Er.GET_THREE_REWARD, gr.COVER, ur.VIEW, St.HIDE, [ {
                itemId: "1001",
                count: t
            }, {
                itemId: "2001",
                count: i
            }, {
                itemId: "3001",
                count: 8 * e
            } ]);
        }
        onBtnWinBack() {
            if (!q.getTouch()) return;
            let e = this.myScore, t = this.rewardGold, i = this.rewardDiamonds;
            Bt.closeFunction(), hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || j.createInterstitialAd(), 
            Nt.getCurScene().setGameState(_s.MENU), console.log("玩家分数" + e), e += 2, Bt.openFunction(Er.GET_THREE_REWARD, gr.COVER, ur.VIEW, St.HIDE, [ {
                itemId: "1001",
                count: t
            }, {
                itemId: "2001",
                count: i
            }, {
                itemId: "3001",
                count: 8 * e
            } ]);
        }
        onBtnWinMoreReward() {
            if (!q.getTouch()) return;
            if (this.isDown) return;
            this.isDown = !0;
            var e = this;
            j.setEvent(function() {
                e.isDown = !1;
                let t = e.rewardGold;
                Bt.closeFunction(), Nt.getCurScene().setGameState(_s.MENU), Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.GOLD, t);
            }, function() {
                e.isDown = !1;
            }, t.END_DOUBLE_REWARD);
        }
        onBtnBack() {
            Bt.closeFunction(), Nt.getCurScene().setGameState(_s.MENU);
        }
    }
    class Us extends T.view.end.EndRecreationViewUI {
        constructor() {
            super(), this.rewardGold = 200, this.rewardExp = 100, this.goldReward = 0, this.diamondsReward = 0, 
            this.height = this.stage.height, this.width = this.stage.width, this.boxBg.scaleX = this.stage.width / this.boxBg.width;
        }
        onAwake() {
            this.init(), this.setBtnEvent(), hl.platform != v.WX && hl.platform != v.QQ && (this.btnShare.visible = !1), 
            Rs.setEndMyselfData();
        }
        onDestroy() {
            this.rewardGold = null, this.rewardExp = null;
        }
        init() {
            tl.getInstance().updateOnceGame(1), Ts.gameNum++, tl.getInstance().getGuide() != Et.GAME_1 && tl.getInstance().getGuide() != Et.GAME_2 && tl.getInstance().getGuide() != Et.GAME_3 && tl.getInstance().getGuide() != Et.GAME_4 && tl.getInstance().getGuide() != Et.GAME_5 && tl.getInstance().getGuide() != Et.GAME_6 && tl.getInstance().getGuide() != Et.FUNGAME_1 && tl.getInstance().getGuide() != Et.FUNGAME_2 && tl.getInstance().getGuide() != Et.SHMODEGAME_1 || tl.getInstance().setGuide(), 
            Ts.isOpenOverView = !1, this.imgWin.visible = !1, this.imgLogBgWin.visible = !1, 
            this.imgLose.visible = !1, this.imgLogBgLose.visible = !1, this.btnShare.visible = !1, 
            this.btnBack.visible = !0, this.boxWin.visible = !1, this.boxLose.visible = !1, 
            Rs._isWin ? (this.boxWin.visible = !0, this.btnBack.skin = "sub1/ui/scale9/img_normal_1.png", 
            this.imgBack.skin = "sub1/ui/end/img_22.png", this.imgWin.visible = !0, this.imgLogBgWin.visible = !0, 
            hl.platform == v.WX && (this.btnShare.visible = !0), hs.setSettlementWinDiamondsRewards(), 
            hs.setSettlementWinGoldsRewards(), this.goldReward = hs.settlementWinGoldsRewards, 
            this.diamondsReward = hs.settlementWinDiamondsRewards) : (this.btnBack.skin = "sub1/ui/scale9/img_normal_2.png", 
            this.imgBack.skin = "sub1/ui/end/img_35.png", this.imgLose.visible = !0, this.boxLose.visible = !0, 
            this.imgLogBgLose.visible = !0, hs.setSettlementFailDiamondsRewards(), hs.setSettlementFailGoldsRewards(), 
            this.goldReward = hs.settlementFailGoldsRewards, this.diamondsReward = hs.settlementFailDiamondsRewards), 
            this.labelInfo.text = Ba.taskEntry(), this.boxTagBg.width = this.boxInfo.x + this.boxInfo.width;
        }
        setBtnEvent() {
            var e = this;
            Laya.timer.once(1e3, this, function() {
                e.btnBack.on(Laya.Event.CLICK, e, e.onBtnBack), e.btnShare.on(Laya.Event.CLICK, e, e.onBtnShare);
            }), hl.platform == v.TT && (e.btnShare.visible = !1);
        }
        onBtnShare() {
            j.shareMessage();
        }
        onBtnBack() {
            q.getTouch() && (Bt.clean(), hl.appId == H.XM && j.createInterstitialAd(), Nt.getCurScene().setGameState(_s.MENU));
        }
    }
    class Fs extends T.view.review.ReviewEndRecreationViewUI {
        constructor() {
            super(), this.rewardGold = 200, this.rewardExp = 100, this.goldReward = 0, this.diamondsReward = 0, 
            this.height = this.stage.height, this.width = this.stage.width, this.boxBg.scaleX = this.stage.width / this.boxBg.width;
        }
        onAwake() {
            this.init(), this.setBtnEvent(), hl.platform != v.WX && hl.platform != v.QQ && (this.btnShare.visible = !1);
        }
        onDestroy() {
            this.rewardGold = null, this.rewardExp = null;
        }
        init() {
            tl.getInstance().updateOnceGame(1), Ts.gameNum++, tl.getInstance().getGuide() != Et.GAME_1 && tl.getInstance().getGuide() != Et.GAME_2 && tl.getInstance().getGuide() != Et.GAME_3 && tl.getInstance().getGuide() != Et.GAME_4 && tl.getInstance().getGuide() != Et.GAME_5 && tl.getInstance().getGuide() != Et.GAME_6 && tl.getInstance().getGuide() != Et.FUNGAME_1 && tl.getInstance().getGuide() != Et.FUNGAME_2 && tl.getInstance().getGuide() != Et.SHMODEGAME_1 || tl.getInstance().setGuide(), 
            Ts.isOpenOverView = !1, this.imgWin.visible = !1, this.imgLogBgWin.visible = !1, 
            this.imgLose.visible = !1, this.imgLogBgLose.visible = !1, this.btnShare.visible = !1, 
            this.btnBack.visible = !0, this.boxWin.visible = !1, this.boxLose.visible = !1, 
            Rs._isWin ? (this.boxWin.visible = !0, this.btnBack.skin = "sub1/ui/scale9/img_normal_1.png", 
            this.imgBack.skin = "sub1/ui/end/img_22.png", this.imgWin.visible = !0, this.imgLogBgWin.visible = !0, 
            hl.platform == v.WX && (this.btnShare.visible = !0), hs.setSettlementWinDiamondsRewards(), 
            hs.setSettlementWinGoldsRewards(), this.goldReward = hs.settlementWinGoldsRewards, 
            this.diamondsReward = hs.settlementWinDiamondsRewards) : (this.btnBack.skin = "sub1/ui/scale9/img_normal_2.png", 
            this.imgBack.skin = "sub1/ui/end/img_35.png", this.imgLose.visible = !0, this.boxLose.visible = !0, 
            this.imgLogBgLose.visible = !0, hs.setSettlementFailDiamondsRewards(), hs.setSettlementFailGoldsRewards(), 
            this.goldReward = hs.settlementFailGoldsRewards, this.diamondsReward = hs.settlementFailDiamondsRewards), 
            this.labelInfo.text = Ba.taskEntry(), this.boxTagBg.width = this.boxInfo.x + this.boxInfo.width;
        }
        setBtnEvent() {
            var e = this;
            Laya.timer.once(1e3, this, function() {
                e.btnBack.on(Laya.Event.CLICK, e, e.onBtnBack), e.btnShare.on(Laya.Event.CLICK, e, e.onBtnShare);
            }), hl.platform == v.TT && (e.btnShare.visible = !1);
        }
        onBtnShare() {
            j.shareMessage();
        }
        onBtnBack() {
            q.getTouch() && (Bt.clean(), hl.appId == H.XM && j.createInterstitialAd(), Nt.getCurScene().setGameState(_s.MENU));
        }
    }
    var Hs;
    !function(e) {
        e[e.RECREATION = 0] = "RECREATION", e[e.BIOCHEMISTRY = 1] = "BIOCHEMISTRY";
    }(Hs || (Hs = {}));
    let Ws = [ "娱乐模式包含：狙击模式，双人模式，单人挑战。 全新的玩法，体验不一样的刺激战场！", "生化模式，全新的玩法，体验不一样的刺激战场！" ];
    class Ys extends T.view.getReward.GetModeRewardViewUI {
        constructor(e, t) {
            super(), this.type = Hs.RECREATION, this.width = this.stage.width, this.height = this.stage.height, 
            this.type = e, this.cb = t;
        }
        onAwake() {
            this.init(), this.setEvent(), this.setView();
        }
        onDestroy() {
            this.timer.clearAll(this), this.ani1 = null;
        }
        setView() {
            this.labelInfo.text = Ws[this.type], this.type == Hs.RECREATION ? this.imgIcon1.visible = !0 : this.type == Hs.BIOCHEMISTRY && (this.imgIcon2.visible = !0);
        }
        init() {
            this.ani1.play(0, !1);
        }
        setEvent() {
            var e = this;
            Laya.timer.once(500, this, function() {
                e.on(Laya.Event.CLICK, e, e.onBtnBack);
            });
        }
        onBtnBack() {
            q.getTouch() && (Bt.closeFunction(), this.cb && this.cb());
        }
        pointCtrl(e, t) {}
    }
    let Xs = {
        1: 7,
        2: 3,
        3: 1,
        4: 4,
        5: 2,
        6: 5
    };
    class Ks extends T.view.mode.ModeCellViewUI {
        constructor(e) {
            super(), this.setView(e), this.type = e, this.imgSelect.visible = !1;
        }
        onAwake() {
            this.on(Laya.Event.CLICK, this, this.onBtnDown);
        }
        select() {
            this.imgSelect.visible = !0;
        }
        unSelect() {
            this.imgSelect.visible = !1;
        }
        onDestroy() {
            this.boxMain = null, this.imgIcon = null;
        }
        setView(e) {
            this.imgIcon.skin = "sub1/ui/mode/img_" + Xs[e] + ".png";
            let t = vs.getDataByKey(Number(e));
            this.labelInfo.text = t.info, this.labelName.text = t.english, this.labelMode.text = t.name, 
            this.imgTag.width = this.labelName.width + 30;
        }
        onBtnDown() {
            if (q.getTouch()) {
                switch (this.type = Number(this.type), this.type) {
                  case Tt.SNIPERMODE:
                    break;

                  case Tt.KNIFEWARMODE:
                    if (!Mt.isCanOpenKnifeMode()) return void Oi.showNotification("至少携带一把近身武器");
                }
                Mt.modeChoose(this.type), Bt.getFunctionViewCtrl(Er.MODE).updateSelect();
            }
        }
    }
    var qs, Qs, Zs, js, Js;
    !function(e) {
        e[e.ALL = 0] = "ALL", e[e.RECREATION = 1] = "RECREATION";
    }(qs || (qs = {}));
    class $s extends T.view.mode.ModeViewUI {
        constructor(e = qs.ALL) {
            super(), this.cellCtrlList = [], this.width = this.stage.width, this.height = this.stage.height, 
            this.type = e, this.setView();
        }
        onAwake() {
            this.btnClose.on(Laya.Event.CLICK, this, () => {
                Bt.closeFunction();
            });
        }
        onDestroy() {}
        setView() {
            if (this.panel.hScrollBarSkin = "", this.type == qs.ALL) {
                for (const e in Xs) if (Object.prototype.hasOwnProperty.call(Xs, e)) {
                    let t = new Ks(e);
                    this.boxCell.addChild(t), this.cellCtrlList.push(t);
                }
            } else for (let e = 1; e < 6; e++) for (const t in Xs) if (Object.prototype.hasOwnProperty.call(Xs, t)) {
                if (Xs[t] == e) {
                    if (Number(t) == Tt.BIOCHEMISTRY) continue;
                    let e = new Ks(t);
                    this.boxCell.addChild(e), this.cellCtrlList.push(e);
                }
            }
            let e = new Laya.Box();
            e.width = 199, this.boxCell.addChild(e), this.updateSelect(), this.btnStart.on(Laya.Event.CLICK, this, this.onBtnStart);
        }
        updateSelect() {
            for (let e = 0; e < this.cellCtrlList.length; e++) {
                const t = this.cellCtrlList[e];
                t.type == Mt.mode ? t.select() : t.unSelect();
            }
            $s.setMap();
        }
        onBtnStart() {
            q.getTouch() && ($s.setMap(), hl.platform != v.TT ? Bt.openFunction(Er.ROLETRY, gr.REPLACE, ur.WINDOW, St.HIDE, {
                cb: function() {
                    Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }) : hl.isReviewVersion() ? Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.ROLETRY, gr.REPLACE, ur.WINDOW, St.HIDE, {
                cb: function() {
                    Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }));
        }
        static setMap() {
            let e = [];
            switch (Mt.mode) {
              case Tt.TEAMCOMPETITION:
                e.push(1), e.push(2), e.push(3), e.push(4), hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && hl.platform != v.WEB && hl.platform != v.WEB_4399 || e.push(5), 
                e.push(6), tl.getInstance().isNew && Ts.gameNum <= 3 && (e = [], 1 == Ts.gameNum ? e.push(2) : 2 == Ts.gameNum ? e.push(2) : 3 == Ts.gameNum && e.push(4));
                break;

              case Tt.KNIFEWARMODE:
              case Tt.TWOVSTWOMODE:
                e.push(1), e.push(2), e.push(3), e.push(4), hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && hl.platform != v.WEB && hl.platform != v.WEB_4399 || e.push(5), 
                e.push(6);
                break;

              case Tt.ONEVSONEMODE:
                e.push(1);
                break;

              case Tt.BIOCHEMISTRY:
                e.push(7);
                break;

              case Tt.SNIPERMODE:
                e.push(1);
                break;

              case Tt.SKILL_MODE:
                e.push(8);
            }
            console.log("地图列表：", e), Mt.map = e[Math.floor(P.random(e.length, 0))];
        }
    }
    !function(e) {
        e[e.DOUBLE_FOX = 0] = "DOUBLE_FOX", e[e.BARRETT = 1] = "BARRETT";
    }(Qs || (Qs = {}));
    class en extends T.view.award.ActivityEquipViewUI {
        constructor(e) {
            if (super(), this.isDown = !1, this.list = [], this.width = this.stage.width, this.height = this.stage.height, 
            this.activityType = e, this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnBack1.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), 
            this.btnGet1.on(Laya.Event.CLICK, this, this.onBtnGet), this.btnGet.addComponent($), 
            this.box0.visible = !1, this.box1.visible = !1, !hl.getViolenceCtrl() && hl.platform == v.WEB_4399) {
                let e = this.imgName1.skin;
                e = e.replace(".png", "_4399.png"), this.imgName1.skin = e;
            }
            switch (this.activityType) {
              case Qs.DOUBLE_FOX:
                this.box0.visible = !0, this.list.push(Gr.ACTIVITY_EQUIP1), this.list.push(Gr.ACTIVITY_EQUIP2);
                break;

              case Qs.BARRETT:
                this.box1.visible = !0, this.list.push(Gr.ACTIVITY_BARRETT);
            }
            Bt.replaceAdIcon([ {
                img: this.btnGet.getChildAt(0),
                type: 1
            } ]);
        }
        onAwake() {}
        onDestroy() {}
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
        onBtnGet() {
            if (q.getTouch() && !this.isDown) {
                this.isDown = !0;
                var e = this;
                j.setEvent(function() {
                    e.isDown = !1, Bt.closeFunction(), null != e.list && 0 != e.list.length && e.getEggHero();
                }, function() {
                    e.isDown = !1;
                }, t.SUPER_EQUIP);
            }
        }
        getEggHero() {
            let e = this.list.pop();
            if (e) {
                var t = this;
                ls.getInstance().getEquip(e, function() {
                    t.getEggHero();
                });
            }
        }
    }
    class tn extends T.view.native.NativeBanner1ViewUI {
        constructor() {
            super(), this.isCanRefresh = !0, this.isFirstTouch = !0, this.isCanAutoShow = !0;
        }
        onAwake() {
            this.bottom = 10, this.on(Laya.Event.CLICK, this, this.onBtnAd), this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), 
            this.funcId = L.register(w.REFRESH_NATIVE_AD, this.refresh, this), this.refresh();
        }
        onDestroy() {
            Laya.timer.clearAll(this), L.unregisterByFuncId(this.funcId), At.autoUnlinkUIReference(this), 
            j.hideBannerAd();
        }
        onBtnAd() {
            if (q.getTouch() && (hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdClick({
                adId: j.nativeExtendList.data.adId.toString()
            }), hl.platform == v.VIVO)) {
                j.preloadNativeAdExtend(function() {}, function() {}, i.BANNER);
            }
        }
        onBtnClose() {
            this.destroy();
        }
        refresh() {
            this.isCanRefresh && this.imgAd && (j.nativeExtendList.ad ? (j.hideBannerAd(), this.isCanAutoShow && this.show(), 
            hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdShow({
                adId: j.nativeExtendList.data.adId.toString()
            }), this.imgAd.skin = j.nativeExtendList.data.imgUrlList[0]) : (this.autoHide(), 
            j.showBannerAd()));
        }
        hide() {
            this.destroyed || (this.isCanAutoShow = !1, this.mouseEnabled = !1, this.visible = !1);
        }
        autoHide() {
            this.mouseEnabled = !1, this.visible = !1;
        }
        show() {
            this.destroyed || (this.isCanAutoShow = !0, j.nativeExtendList.ad && (this.mouseEnabled = !0, 
            this.visible = !0));
        }
    }
    class an extends Ms {
        createView() {
            return this._viewCtrl = new nn(), this._viewCtrl;
        }
        getFunctionName() {
            return "首页界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new tn();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), this.nativeIcon = new cs(), e.addChild(this.nativeIcon), 
                this.nativeIcon.x = 540, this.nativeIcon.y = 10, this.nativeBanner.x = 20;
            }
        }
        onExit() {}
        onEnable() {
            let e = this.viewCtrl;
            j.hideBannerAd(), e.onMyEnable(), Ts.isReading ? this.nativeBanner && (this.nativeBanner.x = Laya.stage.width / 2 - this.nativeBanner.width / 2, 
            this.nativeBanner.show()) : (this.nativeBanner && (this.nativeBanner.x = 20, this.nativeBanner.show()), 
            this.nativeIcon && this.nativeIcon.show());
        }
        onDisbale() {
            this.viewCtrl.onMyDisable(), this.nativeBanner && this.nativeBanner.hide(), this.nativeIcon && this.nativeIcon.hide(), 
            hl.platform != v.WX && hl.platform != v.QQ && hl.appId != H.XM || j.hideBannerAd();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }
    an.jumpBackCount = 0;
    class sn {
        static getDataByKey(e) {
            if (sn.cache[e]) return sn.cache[e];
            if (1 == e) {
                let t = new sn();
                return t.id = 1, t.time = 300, t.type = 5, t.itemId = "4012", t.count = 1, t.extra = function() {
                    return 300;
                }, sn.cache[e] = t, t;
            }
            if (2 == e) {
                let t = new sn();
                return t.id = 2, t.time = 420, t.type = 2, t.itemId = "2001", t.count = 50, t.extra = function() {
                    return null;
                }, sn.cache[e] = t, t;
            }
            if (3 == e) {
                let t = new sn();
                return t.id = 3, t.time = 600, t.type = 10, t.itemId = "10002", t.count = 1, t.extra = function() {
                    return null;
                }, sn.cache[e] = t, t;
            }
            if (4 == e) {
                let t = new sn();
                return t.id = 4, t.time = 900, t.type = 10, t.itemId = "10003", t.count = 1, t.extra = function() {
                    return null;
                }, sn.cache[e] = t, t;
            }
            if (5 == e) {
                let t = new sn();
                return t.id = 5, t.time = 1800, t.type = 5, t.itemId = "4036", t.count = 1, t.extra = function() {
                    return 900;
                }, sn.cache[e] = t, t;
            }
        }
        static getDataByIndex(e) {
            return sn.cache[this.keys[e]] ? sn.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return sn.cache;
        }
        clear() {
            sn.cache = {};
        }
    }
    sn.cache = {}, sn.keys = [ 1, 2, 3, 4, 5 ], function(e) {
        e[e.NEW_GIFT = 1] = "NEW_GIFT", e[e.EQUIP_1 = 2] = "EQUIP_1", e[e.EQUIP_2 = 3] = "EQUIP_2", 
        e[e.EQUIP_3 = 4] = "EQUIP_3", e[e.ACTIVITY_EQUIP_1 = 5] = "ACTIVITY_EQUIP_1", e[e.ACTIVITY_EQUIP_2 = 6] = "ACTIVITY_EQUIP_2", 
        e[e.NEW_YEAR_GIFT = 7] = "NEW_YEAR_GIFT", e[e.DFL = 8] = "DFL";
    }(Zs || (Zs = {}));
    class nn extends T.view.fisrt.FirstViewUI {
        constructor() {
            super(), this.rotMouseX = 0, this.progressWight = 0, this.lastExpWight = null, this.apertureCtrl = null, 
            this.fingerCtrl = null, this.point = new Laya.Point(), this.a = new Laya.Point(), 
            this.isFisrt = !0, this.isFirstOnEnable = !0, this.isInOther = !1, this.price = 0, 
            this.isProductAniPlay = !1, this.activityList = [], this.activityIndex = 0, this.isTouchBoxLeft = !1, 
            this.showInterstitialAdTime = 0, this.isMouseDown = !1, this.height = this.stage.height, 
            this.width = this.stage.width;
        }
        onAwake() {
            if (W.gmDebug) {
                for (let e = 0; e < Be.keys.length; e++) {
                    const t = Be.getDataByIndex(e);
                    tl.getInstance().setRoleSkinLib(t.id);
                }
                for (let e = 0; e < A.keys.length; e++) {
                    const t = A.getDataByIndex(e);
                    tl.getInstance().setSkinLib(t.id);
                }
            }
            ol.isFullScreen() || (this.btnGameCommunity.x -= 150, this.boxLeft.x -= 100, this.boxTop.x -= 100, 
            this.boxDan.centerX -= 70);
        }
        onEnable() {
            this.init(), this.setBtnEvent();
        }
        onDestroy() {
            this.btnGameCommunity = null, this.btnMode = null, this.btnEquip = null, this.btnSign = null, 
            this.btnTask = null, this.btnTreasureChest = null;
        }
        init() {
            Ts.isShowRevivieCrazy = !1, this.point.x = 0, this.point.y = 0, this.a.x = 0, this.a.y = 0, 
            this.progressWight = this.imgExp.width, this.fingerCtrl = ns.createFingerAniCtrl(this), 
            this.apertureCtrl = ns.createCommonAperture(this), this.setPlatformStyle(), this.fingerCtrl.stop(), 
            this.apertureCtrl.stop(), this.setGuide(), il.playBGM(ml.BGM), this.setRoleInfo(), 
            Wt.clear(), Laya.timer.loop(1e3, this, this.update), this.update(), this.createProductGold(), 
            this.btnConfigCtrl(), hl.isShowReviewUI() && (this.boxReview.visible = !0), hl.getViolenceCtrl() || (this.imgSkillMode.skin = "sub1/ui/first/img_42_1.png"), 
            this.btnPrivate.visible = !1;
        }
        btnConfigCtrl() {
            hl.platform == v.TT && hl.isReviewVersion() && (this.btnSign.visible = !1);
        }
        hideGuide() {
            this.fingerCtrl && this.apertureCtrl && (this.fingerCtrl.visible = !1, this.apertureCtrl.visible = !1);
        }
        visibleGuide() {
            tl.getInstance().getGuide() != Et.FINISH && tl.getInstance().getGuide() != Et.MAX && this.fingerCtrl && this.apertureCtrl && (tl.getInstance().getGuide() == Et.GAME_1 || tl.getInstance().getGuide() == Et.EQUIP || tl.getInstance().getGuide() == Et.GAME_2 || tl.getInstance().getGuide() == Et.BUY || tl.getInstance().getGuide() == Et.SYNTHESIS || tl.getInstance().getGuide() == Et.WAREHOUSE || tl.getInstance().getGuide() == Et.CHOOSEARM || tl.getInstance().getGuide() == Et.TOEQUIP || tl.getInstance().getGuide() == Et.FUNGAME_1 ? (this.fingerCtrl.visible = !0, 
            this.apertureCtrl.visible = !0) : tl.getInstance().getGuide() == Et.GAME_3 && (this.apertureCtrl.visible = !0));
        }
        resetData() {
            this.isFisrt && (this.isFisrt = !1, this.point.x = 0, this.point.y = 0, this.a.x = 0, 
            this.a.y = 0);
        }
        setGuide() {
            console.log("首页新手教程：", ns.curEquiplLibraryStep, tl.getInstance().getGuide());
            let e = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > tl.getInstance().getGuide() && tl.getInstance().getGuide() > Et.GAME_1 && (e = ns.curEquiplLibraryStep), 
            e) {
              case Et.GAME_1:
                this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                0 == this.a.x && 0 == this.a.y && (console.log("新手第一步"), this.point = new Laya.Point(this.btnRanking.width / 2, this.btnRanking.height / 2), 
                this.a = this.btnRanking.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnRanking));
                break;

              case Et.EQUIP:
                this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                0 == this.a.x && 0 == this.a.y && (console.log("新手指引进入仓库"), this.point = new Laya.Point(this.btnEquip.width / 2, this.btnEquip.height / 2), 
                this.a = this.btnEquip.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnEquip));
                break;

              case Et.GAME_2:
                this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                0 == this.a.x && 0 == this.a.y && (console.log("新手指引第二局"), this.point = new Laya.Point(this.isFisrt ? this.btnRanking.width / 2 : this.btnRanking.width, this.isFisrt ? this.btnRanking.height / 2 : this.btnRanking.height), 
                this.a = this.btnRanking.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnRanking));
                break;

              case Et.BUY:
              case Et.SYNTHESIS:
                this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                0 == this.a.x && 0 == this.a.y && (console.log("新手指引进入合成"), this.point = new Laya.Point(this.btnEquip.width / 2, this.btnEquip.height / 2), 
                this.a = this.btnEquip.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnEquip));
                break;

              case Et.WAREHOUSE:
                this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                0 == this.a.x && 0 == this.a.y && (console.log("新手指引进入仓库1"), this.point = new Laya.Point(this.btnWarehouse.width / 2, this.btnWarehouse.height / 2), 
                this.a = this.btnWarehouse.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnWarehouse));
                break;

              case Et.CHOOSEARM:
                this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                0 == this.a.x && 0 == this.a.y && (console.log("新手指引进入仓库2"), this.point = new Laya.Point(this.btnWarehouse.width / 2, this.btnWarehouse.height / 2), 
                this.a = this.btnWarehouse.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnWarehouse));
                break;

              case Et.TOEQUIP:
                this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                0 == this.a.x && 0 == this.a.y && (console.log("新手指引进入仓库3"), this.point = new Laya.Point(this.btnWarehouse.width / 2, this.btnWarehouse.height / 2), 
                this.a = this.btnWarehouse.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnWarehouse));
                break;

              case Et.GAME_3:
                console.log("新手指引第三局"), this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, 
                this.btnRecreation.gray = !0, 0 == this.a.x && 0 == this.a.y && (console.log("新手指引第三局"), 
                this.point = new Laya.Point(this.isFisrt ? this.btnRanking.width / 2 : this.btnRanking.width, this.isFisrt ? this.btnRanking.height / 2 : this.btnRanking.height), 
                this.a = this.btnRanking.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnRanking, !1));
                break;

              case Et.GAME_4:
                console.log("新手指引第四局"), this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, 
                this.btnRecreation.gray = !0;
                break;

              case Et.GAME_5:
                console.log("新手指引第五局"), this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, 
                this.btnRecreation.gray = !0;
                break;

              case Et.GAME_6:
                console.log("新手指引第六局"), this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, 
                this.btnRecreation.gray = !0;
                break;

              case Et.UNLOCKFUNMODE:
                {
                    console.log("娱乐模式解锁");
                    let e = this;
                    this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !0, 
                    Bt.registerAutoOpenFunction(Er.GET_MODE_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                        mode: Hs.RECREATION,
                        cb: function() {
                            console.log("关闭界面"), e.updateGuide();
                        }
                    });
                    break;
                }

              case Et.FUNGAME_1:
                console.log("新手指引娱乐模式第一局"), this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, 
                this.btnRecreation.gray = !1, 0 == this.a.x && 0 == this.a.y && (console.log("新手指引娱乐模式第一局"), 
                this.point = new Laya.Point(this.isFisrt ? this.btnRecreation.width / 2 : this.btnRecreation.width, this.isFisrt ? this.btnMode.height / 2 : this.btnMode.height), 
                this.isFisrt ? this.point.y += this.btnRecreation.height / 2 - 50 : this.point.y += this.btnRecreation.height / 2, 
                this.a = this.btnRecreation.localToGlobal(this.point), this.setGudePos(this.a, this.a, this.btnRecreation));
                break;

              case Et.SIGN:
                {
                    let e = this;
                    this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !1, 
                    console.log("新手指引打开签到"), e.updateGuide();
                    break;
                }

              case Et.FUNGAME_2:
                console.log("新手指引娱乐模式第二局"), this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, 
                this.btnRecreation.gray = !1, this.fingerCtrl.stop(), this.apertureCtrl.stop();
                break;

              case Et.NEWGIFT:
                {
                    console.log("新手指引打开新手礼包");
                    let e = this;
                    this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !1, 
                    e.updateGuide();
                    break;
                }

              case Et.UNLOCKSHMODE:
                {
                    console.log("新手指引生化模式解锁");
                    let e = this;
                    this.btnBiochemistry.gray = !0, this.btnMode.gray = !0, this.btnRecreation.gray = !1, 
                    Bt.registerAutoOpenFunction(Er.GET_MODE_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                        mode: Hs.BIOCHEMISTRY,
                        cb: function() {
                            console.log("关闭界面"), e.updateGuide();
                        }
                    });
                    break;
                }

              case Et.SHMODEGAME_1:
                this.fingerCtrl.stop(), this.apertureCtrl.stop(), this.btnBiochemistry.gray = !1, 
                this.btnMode.gray = !1, this.btnRecreation.gray = !1;
                break;

              case Et.SUPERARM:
                {
                    console.log("新手指引超级武器");
                    let e = this;
                    tl.getInstance().getSuperEquipId();
                    e.updateGuide(), e.updateGuide();
                    break;
                }
            }
        }
        updateGuide() {
            switch (tl.getInstance().getGuide()) {
              case Et.GAME_1:
                break;

              case Et.EQUIP:
                tl.getInstance().setGuide();
                break;

              case Et.UNLOCKFUNMODE:
                this.point.x = 0, this.point.y = 0, this.a.x = 0, this.a.y = 0, this.resetData(), 
                tl.getInstance().setGuide(), this.setGuide();
                break;

              case Et.SIGN:
                this.resetData(), tl.getInstance().setGuide(), this.setGuide();
                break;

              case Et.NEWGIFT:
              case Et.UNLOCKSHMODE:
              case Et.SUPERARM:
                this.point.x = 0, this.point.y = 0, this.a.x = 0, this.a.y = 0, tl.getInstance().setGuide(), 
                this.setGuide();
            }
        }
        setGudePos(e, t, i, a = !0) {
            i.mouseEnabled = !0, a ? (this.fingerCtrl.visible = !0, this.fingerCtrl.play(), 
            this.fingerCtrl.x = e.x - i.width / 2, this.fingerCtrl.y = e.y - i.height / 2) : this.fingerCtrl.stop(), 
            this.apertureCtrl.visible = !0, this.apertureCtrl.play(!1), this.apertureCtrl.x = t.x - i.width / 2 - this.apertureCtrl.width / 2, 
            this.apertureCtrl.y = t.y - i.height / 2 - this.apertureCtrl.height / 2, "btnWarehouse" == i.name ? this.fingerCtrl.rotation = -80 : this.fingerCtrl.rotation = 0;
        }
        banAllMouseTouch() {
            this.btnGameCommunity.mouseEnabled = !1, this.btnMode.mouseEnabled = !1, this.btnSeason.mouseEnabled = !1, 
            this.btnSign.mouseEnabled = !1, this.btnTask.mouseEnabled = !1, this.btnTreasureChest.mouseEnabled = !1, 
            this.btnEquip.mouseEnabled = !1, this.btnRanking.mouseEnabled = !1, this.btnBiochemistry.mouseEnabled = !1;
        }
        update() {
            this.setDot(), this.updateMode(), this.updateGun(), this.updateProductGold(), this.updateDragonBoatBombState(), 
            this.updateOnLine();
        }
        updateMode() {
            this.labelmode.text = vs.getDataByKey(Mt.mode).name;
        }
        updateGun() {
            let e = tl.getInstance().getMaxUnLockArm(), t = A.getDataByKey(e);
            this.imgGun.skin = t.icon, this.labelGunLv.text = t.id.toString();
        }
        updateDragonBoatBombState() {
            !tl.getInstance().isShowSummerGift() || hl.isReviewVersion() ? this.btnDragonBoat.visible = !1 : this.btnDragonBoat.visible = !0;
        }
        setBtnEvent() {
            this.btnOnLine.on(Laya.Event.CLICK, this, this.onBtnOnLine), this.btnMoreGame.on(Laya.Event.CLICK, this, this.onBtnMoreGame), 
            this.btnWarehouse.on(Laya.Event.CLICK, this, this.onBtnWarehouse), this.btnGameCommunity.on(Laya.Event.CLICK, this, this.onBtnGameCommunity), 
            this.btnTurnTable.on(Laya.Event.CLICK, this, this.onBtnTurnTable), this.btnMode.on(Laya.Event.CLICK, this, this.onBtnMode), 
            this.btnRecreation.on(Laya.Event.CLICK, this, this.onBtnRecreation), this.btnSeason.on(Laya.Event.CLICK, this, this.onBtnSeason), 
            this.btnSign.on(Laya.Event.CLICK, this, this.onBtnSign), this.btnTask.on(Laya.Event.CLICK, this, this.onBtnTask), 
            this.btnTreasureChest.on(Laya.Event.CLICK, this, this.onBtnTreasureChest), this.btnEquip.on(Laya.Event.CLICK, this, this.onBtnEquip), 
            this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnMouseDown), this.on(Laya.Event.MOUSE_UP, this, this.onBtnMouseUp), 
            this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnRot), this.btnRanking.on(Laya.Event.CLICK, this, this.onBtnRanking), 
            this.btnBiochemistry.on(Laya.Event.CLICK, this, this.onBtnBiochemistry), this.btnStart.on(Laya.Event.CLICK, this, this.onBtnStart), 
            this.boxLeft.on(Laya.Event.MOUSE_DOWN, this, () => {
                this.isTouchBoxLeft = !0;
            }), this.boxLeft.on(Laya.Event.MOUSE_OUT, this, () => {
                this.isTouchBoxLeft = !1;
            }), this.btnPrivate.on(Laya.Event.CLICK, this, this.onBtnPrivate), this.btnStanding.on(Laya.Event.CLICK, this, this.onBtnStanding), 
            this.btnDragonBoat.on(Laya.Event.CLICK, this, this.onBtnDragonBoat), this.btnReviewStart.on(Laya.Event.CLICK, this, this.onBtnBiochemistry);
            for (let e = 1; e <= 3; e++) {
                this["box" + e].on(Laya.Event.CLICK, this, this.onBtnActivityEntrance, [ e ]);
            }
            this.limitByTT(), this.btnSkillMode.on(Laya.Event.CLICK, this, this.onBtnStartSkillMode), 
            this.btnMentor.on(Laya.Event.CLICK, this, this.onBtnMentor), this.btnNotify.on(Laya.Event.CLICK, this, this.onBtnNotify), 
            this.btnAddDesktop.on(Laya.Event.CLICK, this, this.OnBtnAddDesktop);
        }
        limitByTT() {
            hl.platform != v.TT && hl.platform != v.WEB && hl.platform != v.WEB_4399 || hl.isReviewVersion() && (this.boxLeft.visible = !1);
        }
        onBtnMentor() {
            q.getTouch() && Bt.openFunction(Er.MENTOR, gr.COVER, ur.VIEW, St.HIDE);
        }
        onBtnStartSkillMode() {
            q.getTouch() && (Mt.modeChoose(Tt.SKILL_MODE), Mt.map = Dt.SKILL_MAP, Bt.openFunction(Er.SKILL_MODE_EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE));
        }
        onBtnTurnTable() {
            q.getTouch() && Bt.openFunction(Er.TURNTABLE, gr.COVER, ur.WINDOW, St.HIDE);
        }
        onBtnMoreGame() {
            if (q.getTouch()) switch (hl.platform) {
              case v.WEB:
                break;

              case v.WX:
                {
                    let e = ol.getCustomMatrixSize(), t = Laya.stage.width / 2 - e.w - 16, i = Laya.stage.height / 2 - e.h / 2, a = Laya.stage.width / 2 + 16, s = 0, n = 0;
                    j.showCustom(t, i, al.MATRIX, function() {
                        s >= 1 || (s += 1, Bt.openFunction(Er.MORE_GAME, gr.COVER, ur.VIEW, St.HIDE, !0));
                    }, function() {
                        2 == ++n && U.jumpToMinAppRandom(), console.log("显示失败");
                    }), j.showCustom(a, i, al.MATRIX, function() {
                        s >= 1 || (s += 1, Bt.openFunction(Er.MORE_GAME, gr.COVER, ur.VIEW, St.HIDE, !0));
                    }, function() {
                        2 == ++n && U.jumpToMinAppRandom(), console.log("显示失败");
                    });
                }
                break;

              case v.QQ:
                j.createAppBox();
            }
        }
        onBtnActivityEntrance(e) {
            const t = this["box" + e];
            if (!q.getTouch()) return;
            switch (t.dataSource) {
              case Zs.NEW_GIFT:
                Bt.openFunction(Er.NEW_GIFT, gr.COVER, ur.VIEW, St.HIDE, !0);
                break;

              case Zs.EQUIP_2:
                Bt.openFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                    id: Gr.RED_SPIRIT_EQUIP,
                    isEndOpen: !1
                });
                break;

              case Zs.EQUIP_1:
                Bt.openFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                    id: Gr.RED_TASSEL_EQUIP,
                    isEndOpen: !1
                });
                break;

              case Zs.EQUIP_3:
                Bt.openFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                    id: Gr.RED_SPIRIT_EQUIP1,
                    isEndOpen: !1
                });
                break;

              case Zs.ACTIVITY_EQUIP_2:
                Bt.openFunction(Er.ACTIVITY_EQUIP, gr.COVER, ur.VIEW, St.HIDE, Qs.BARRETT);
                break;

              case Zs.ACTIVITY_EQUIP_1:
                Bt.openFunction(Er.ACTIVITY_EQUIP, gr.COVER, ur.VIEW, St.HIDE, Qs.DOUBLE_FOX);
                break;

              case Zs.NEW_YEAR_GIFT:
                Bt.openFunction(Er.NEW_YEAR_GIFT, gr.COVER, ur.WINDOW, St.HIDE);
                break;

              case Zs.DFL:
                Bt.openFunction(Er.ACTIVITYPLAYER, gr.COVER, ur.WINDOW, St.HIDE);
            }
        }
        setDot() {
            this.setEquipDot(), this.setTaskDot(), this.setSignDot(), this.setRoleInfo();
        }
        setSignDot() {
            let e = this.btnSign.getChildByName("imgDot");
            1 != tl.getInstance().getSign().state ? e.visible = !0 : e.visible = !1;
        }
        setTaskDot() {
            let e = this.btnTask.getChildByName("imgDot");
            tl.getInstance().isShowTaskRed() ? e.visible = !0 : e.visible = !1;
        }
        setEquipDot() {
            this.btnEquip.getChildByName("imgDot").visible = tl.getInstance().isShowEquipRed();
        }
        onBtnMouseDown(e) {
            this.isMouseDown = !0, this.rotMouseX = e.stageX;
        }
        onBtnRot(e) {
            if (this.isMouseDown && Nt.getCurScene().menuPlayer) {
                let t = e.stageX - this.rotMouseX;
                Nt.getCurScene().menuPlayer.transform.localRotationEulerY += .4 * t, this.rotMouseX = e.stageX;
            }
        }
        onBtnMouseUp() {
            this.isMouseDown = !1;
        }
        onBtnRanking() {
            q.getTouch() && (Mt.modeChoose(Tt.TEAMCOMPETITION), $s.setMap(), hl.platform != v.TT ? tl.getInstance().isNew && Ts.gameNum <= 3 ? 3 == Ts.gameNum ? Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.ROLETRY, gr.COVER, ur.WINDOW, St.HIDE, {
                cb: function() {
                    Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }) : hl.isReviewVersion() ? Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.ROLETRY, gr.COVER, ur.WINDOW, St.HIDE, {
                cb: function() {
                    Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }));
        }
        onBtnBiochemistry() {
            if (hl.isShowReviewUI()) return Nt.getCurScene().menuPlayer.active = !1, Mt.modeChoose(Tt.BIOCHEMISTRY), 
            $s.setMap(), void Bt.getFunctionViewCtrl(Er.FIRST).loading();
            q.getTouch() && (Mt.modeChoose(Tt.BIOCHEMISTRY), tl.getInstance().getGuide() < Et.UNLOCKSHMODE ? Oi.showNotification("完成8局游戏解锁该模式") : ($s.setMap(), 
            hl.platform != v.TT ? Bt.openFunction(Er.ROLETRY, gr.COVER, ur.WINDOW, St.HIDE, {
                cb: function() {
                    tl.getInstance().isNew && Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }) : hl.isReviewVersion() ? tl.getInstance().isNew && Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.ROLETRY, gr.COVER, ur.WINDOW, St.HIDE, {
                cb: function() {
                    tl.getInstance().isNew && Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            })));
        }
        onBtnStart() {
            q.getTouch() && ($s.setMap(), hl.platform != v.TT ? Mt.mode == Tt.SKILL_MODE ? Bt.openFunction(Er.SKILL_MODE_EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.openFunction(Er.SUPERSTART, gr.COVER, ur.WINDOW, St.HIDE, {
                cb: function() {
                    Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }) : hl.isReviewVersion() ? Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Mt.mode == Tt.SKILL_MODE ? Bt.openFunction(Er.SKILL_MODE_EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading() : Mt.mode == Tt.SKILL_MODE ? Bt.openFunction(Er.SKILL_MODE_EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.openFunction(Er.SUPERSTART, gr.COVER, ur.WINDOW, St.HIDE, {
                cb: function() {
                    Mt.mode == Tt.TEAMCOMPETITION || Mt.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }));
        }
        onBtnWarehouse() {
            q.getTouch() && Bt.openFunction(Er.LIBRARY, gr.COVER, ur.VIEW, St.ALL_SHOW);
        }
        onBtnGameCommunity() {
            q.getTouch();
        }
        onBtnMode() {
            q.getTouch() && (tl.getInstance().getGuide() < Et.FINISH ? Oi.showNotification("完成所有教程解锁") : Bt.openFunction(Er.MODE, gr.COVER, ur.VIEW, St.HIDE, qs.ALL));
        }
        onBtnRecreation() {
            q.getTouch() && (tl.getInstance().getGuide() < Et.FUNGAME_1 ? Oi.showNotification("进行6局游戏解锁该模式", 2e3) : (Mt.modeChoose(Tt.SNIPERMODE), 
            Bt.openFunction(Er.MODE, gr.COVER, ur.VIEW, St.HIDE, qs.RECREATION)));
        }
        onBtnSeason() {
            q.getTouch();
        }
        onBtnSign() {
            q.getTouch() && Bt.openFunction(Er.SIGN, gr.COVER, ur.WINDOW, St.HIDE);
        }
        onBtnTask() {
            q.getTouch() && Bt.openFunction(Er.TASK, gr.COVER, ur.WINDOW, St.HIDE);
        }
        onBtnTreasureChest() {
            q.getTouch() && Bt.openFunction(Er.GAMEBOX, gr.COVER, ur.VIEW, St.HIDE, {
                viewType: 0
            });
        }
        onBtnEquip() {
            this.updateGuide(), Bt.openFunction(Er.EQUIP, gr.COVER, ur.VIEW, St.ALL_SHOW);
        }
        onBtnPrivate() {
            q.getTouch() && Bt.openFunction(Er.PRIVATE_DETAIL, gr.COVER, ur.VIEW, St.HIDE);
        }
        onBtnStanding() {
            q.getTouch() && Bt.openFunction(Er.STANDING, gr.COVER, ur.VIEW, St.HIDE);
        }
        onBtnDragonBoat() {
            q.getTouch() && Bt.openFunction(Er.SUMMER_GIFT, gr.COVER, ur.WINDOW, St.HIDE);
        }
        onBtnMap() {}
        onMyEnable() {
            this.setDot(), this.setActivityView(), hl.platform == v.TT && tl.getInstance().getPlatfromUserInfo() && this.setUserInfo(), 
            nn.btnGameClub && nn.btnGameClub.show(), j.showCustom(301, 125, al.SINGLE_2), Nt.getCurScene().createMenu(), 
            v.WX, hl.platform, nn.btnPlatfromUserInfo && nn.btnPlatfromUserInfo.show(), this.isInOther = !1, 
            L.notify(w.REFRESH_SKIN), this.isFirstOnEnable && (nn.isFirst || this.registerAutoOpen()), 
            this.autoOpen(), this.isFirstOnEnable ? (tl.getInstance().isCanShowOnLine() && !hl.isShowReviewUI() && Bt.registerAutoOpenFunction(Er.ON_LINE_AWARD, gr.COVER, ur.WINDOW, St.HIDE), 
            this.isFirstOnEnable = !1, tl.getInstance().getGuide() > Et.NEWGIFT && tl.getInstance().getGuide() != Et.FUNGAME_1 && (tl.getInstance().guideBtnType, 
            vt.RANK, Laya.timer.clear(this, this.setGuideBtn), Laya.timer.once(3e3, this, this.setGuideBtn))) : tl.getInstance().getGuide() > Et.NEWGIFT && tl.getInstance().getGuide() != Et.FUNGAME_1 && (Laya.timer.clear(this, this.setGuideBtn), 
            Laya.timer.once(3e3, this, this.setGuideBtn)), Bt.triggerAutoOpen();
        }
        onMyDisable() {
            nn.btnGameClub && nn.btnGameClub.hide(), nn.btnPlatfromUserInfo && nn.btnPlatfromUserInfo.hide(), 
            Laya.timer.clear(this, this.setGuideBtn), this.hideNew(), this.isInOther = !0, j.hideCustom(301, 125, al.SINGLE_2), 
            v.WX, hl.platform;
        }
        onBtnSuperEquip() {
            if (!q.getTouch()) return;
            let e = tl.getInstance().getSuperEquipId();
            e && Bt.openFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                id: e,
                isEndOpen: !1
            });
        }
        loading() {
            Bt.openFunction(Er.LOADING_FIGHT, gr.COVER, ur.VIEW, St.HIDE);
        }
        setRoleInfo() {
            let e = tl.getInstance().getRoleExpData();
            this.txtLv.text = "lv." + e.lv.toString(), null == this.lastExpWight && (this.lastExpWight = e.curExp / e.exp);
            let t = this.progressWight * (e.curExp / e.exp);
            this.imgExp.width = t, this.setDan();
            let i = this.btnStanding.getChildByName("imgDot");
            tl.getInstance().getStandingData().isShowDot ? i.visible = !0 : i.visible = !1;
        }
        setDan() {
            let e = tl.getInstance().getDanInfo(), t = J.getDataByKey(e.id);
            this.imgDan.skin = ul.IMG_DAN_ROOT + t.icon, this.labelDan.text = t.name, t.lv ? (this.imgLv.visible = !0, 
            this.imgLv.skin = "sub1/ui/dan/img_lv_" + t.lv + ".png") : this.imgLv.visible = !1;
        }
        setGuideBtn() {
            if (console.log("当前若引导：", tl.getInstance().getGuide()), tl.getInstance().getGuide() != Et.FUNGAME_1 && tl.getInstance().getGuide() != Et.UNLOCKFUNMODE && !(tl.getInstance().getGuide() < Et.NEWGIFT)) {
                switch (Laya.timer.clear(this, this.randNew), Laya.timer.clear(this, this.hideNew), 
                this.newGuideBtnType(), this.isInOther = !0, tl.getInstance().guideBtnType) {
                  case vt.SING:
                    this.setGuideEffect(this.btnSign);
                    break;

                  case vt.RANK:
                    this.setGuideEffect(this.btnRanking);
                    break;

                  case vt.MODE:
                    this.setGuideEffect(this.btnMode);
                    break;

                  case vt.BIOCHEMISTRY:
                    this.setGuideEffect(this.btnBiochemistry);
                    break;

                  case vt.TASK:
                    this.setGuideEffect(this.btnTask);
                    break;

                  case vt.EQUIP:
                    this.setGuideEffect(this.btnEquip);
                }
                Laya.timer.once(3e3, this, this.hideNew), Laya.timer.once(8e3, this, this.randNew);
            }
        }
        hideNew() {
            tl.getInstance().getGuide() >= Et.FINISH && (this.isInOther = !1, this.apertureCtrl.stop());
        }
        randNew() {
            this.setGuideBtn();
        }
        newGuideBtnType() {
            let e = tl.getInstance().guideBtnType, t = {};
            t[vt.SING] = 0 == tl.getInstance().getSign().state, t[vt.RANK] = !0, t[vt.MODE] = tl.getInstance().getGuide() > Et.FUNGAME_1, 
            t[vt.BIOCHEMISTRY] = tl.getInstance().getGuide() > Et.UNLOCKSHMODE, t[vt.TASK] = tl.getInstance().isShowTaskRed(), 
            t[vt.EQUIP] = tl.getInstance().isShowEquipRed(), t[vt.NEW_GIFT] = 1 != tl.getInstance().getNewGiftInfo().state;
            let i = !1, a = tl.getInstance().getSkinLib();
            for (let e = 0; e < a.length; e++) {
                a[e] == Gr.RED_TASSEL_EQUIP && (i = !0);
            }
            t[vt.SUPER_EQUIP] = !i;
            let s = [], n = !1;
            for (let e = 1; e <= vt.SUPER_EQUIP; e++) {
                t[e] && (e == tl.getInstance().guideBtnType ? n = !0 : s.push(e));
            }
            {
                let t = Math.floor(Math.random() * s.length);
                e = 0 == s.length ? n ? tl.getInstance().guideBtnType : 0 : s[t];
            }
            tl.getInstance().guideBtnType = e;
        }
        setGuideEffect(e) {
            let t = new Laya.Point(e.width / 2, e.height / 2);
            e.localToGlobal(t), this.apertureCtrl.pos(t.x - this.apertureCtrl.width / 2, t.y - this.apertureCtrl.height / 2), 
            this.apertureCtrl.play(!1);
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setTTPlatform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWeb4399Platform() {
            this.imgHead.skin = "sub1/ui/common/img_4399_1.png", this.label4399.visible = !0;
        }
        setWXPlatform() {
            this.btnMoreGame.visible = !0, this.btnGameCommunity.visible = !0, this.createGameClub(), 
            tl.getInstance().getPlatfromUserInfo() ? this.setUserInfo() : this.createUserInfoButton(), 
            this.btnPrivate.visible = !1;
        }
        setQQPlatform() {
            this.btnPrivate.visible = !0;
        }
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {
            this.btnMentor.visible = !1, this.btnAddDesktop.visible = !1;
        }
        setTTPlatform() {
            this.btnMentor.visible = !1, 0 != hl.getNotifyVer() ? this.btnNotify.visible = !0 : this.btnNotify.visible = !1, 
            this.btnAddDesktop.visible = !0;
        }
        OnBtnAddDesktop() {
            hl.platform == v.TT && ol.addDesktop();
        }
        onBtnNotify() {
            Bt.openFunction(Er.ANNOUNCEMENT, gr.COVER, ur.WINDOW, St.HIDE);
        }
        createGameClub() {
            if (nn.btnGameClub) return;
            if (hl.platform != v.WX) return;
            let e = ol.getSystemInfo(), t = this.btnGameCommunity.localToGlobal(new Laya.Point(0, 0)), i = e.screenWidth / this.stage.width;
            nn.btnGameClub = wx.createGameClubButton({
                icon: "image",
                style: {
                    left: t.x * i,
                    top: t.y * i,
                    width: this.btnGameCommunity.width * i,
                    height: this.btnGameCommunity.height * i
                }
            });
        }
        createUserInfoButton() {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return;
            if (nn.btnPlatfromUserInfo) return;
            let e = ol.getSystemInfo().screenHeight / this.stage.height, t = this.imgHead.localToGlobal(new Laya.Point()), i = wx.createUserInfoButton({
                type: "image",
                style: {
                    left: t.x * e,
                    top: t.y * e,
                    width: this.imgHead.width * e,
                    height: this.imgHead.height * e
                }
            });
            i.onTap(e => {
                if (e && e.userInfo) {
                    if (tl.getInstance().setPlatfromUserInfo(e.userInfo), Nt.getCurScene().state == _s.MENU) {
                        Bt.getFunctionViewCtrl(Er.FIRST).setUserInfo();
                    }
                    i.destroy(), i.offTap(this), nn.btnPlatfromUserInfo = null, Bt.openFunction(Er.STANDING, gr.COVER, ur.VIEW, St.HIDE);
                } else Bt.openFunction(Er.STANDING, gr.COVER, ur.VIEW, St.HIDE);
            }), nn.btnPlatfromUserInfo = i;
        }
        setUserInfo() {
            let e = tl.getInstance().getPlatfromUserInfo();
            if (this.txtName.text = e.nickName, this.imgHead.skin = e.avatarUrl, console.log("userInfo.avatarUrl", e.avatarUrl), 
            hl.platform == v.TT && e) {
                this.txtName.text = e.nickName;
                const t = new Image();
                t.src = e.avatarUrl, t.onload = (() => {
                    const e = t.width / this.imgHead.width, i = new Laya.Texture2D(t.width / e, t.height / e, Laya.TextureFormat.R8G8B8A8);
                    this.imgHead.graphics.drawImage(new Laya.Texture(i), 0, (this.imgHead.height - t.height / e) / 2), 
                    i.loadImageSource(t);
                });
            }
        }
        autoOpen() {
            if (!(hl.isShowReviewUI() || tl.getInstance().isNew && Ts.gameNum < 3)) {
                if (nn.isFirst) {
                    if (j.preloadInterstitialAd(), nn.isFirst = !1, tl.getInstance().isShowAnnouncenment() && Bt.registerAutoOpenFunction(Er.ANNOUNCEMENT, gr.COVER, ur.WINDOW, St.HIDE), 
                    !tl.getInstance().getPopUpRule().isNew && tl.getInstance().isCanAutoOpenFunction()) {
                        let e = function() {
                            tl.getInstance().isShowSummerGift() && !hl.isReviewVersion() && Bt.registerAutoOpenFunction(Er.SUMMER_GIFT, gr.COVER, ur.WINDOW, St.HIDE), 
                            tl.getInstance().checkArm(Gr.SUMMER_GUN) || Bt.registerAutoOpenFunction(Er.ACTIVITYPLAYER, gr.COVER, ur.WINDOW, St.HIDE), 
                            1 != tl.getInstance().getSign().state && Bt.registerAutoOpenFunction(Er.SIGN, gr.COVER, ur.WINDOW, St.HIDE), 
                            1 != tl.getInstance().getNewGiftInfo().state && Bt.registerAutoOpenFunction(Er.NEW_GIFT, gr.COVER, ur.VIEW, St.HIDE, !0);
                            let e = tl.getInstance().getSuperEquipId();
                            e && Bt.registerAutoOpenFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                                id: e,
                                isEndOpen: !1
                            }), tl.getInstance().isShowTaskAtuo() && Bt.registerAutoOpenFunction(Er.TASK, gr.COVER, ur.WINDOW, St.HIDE), 
                            tl.getInstance().isShowNewYearGift() && Bt.registerAutoOpenFunction(Er.NEW_YEAR_GIFT, gr.COVER, ur.WINDOW, St.HIDE);
                        };
                        (hl.platform == v.TT || hl.platform == v.WEB || hl.platform == v.WEB_4399) && hl.isReviewVersion() || e();
                    }
                    0 == Bt.autoList.length && nn.isFirstView && (nn.isFirstView = !1);
                } else {
                    if (this.isFirstOnEnable || hl.appId == H.XM && (hl.otherViewComBackMenu++, console.log("ConfigManager.otherViewComBackMenu" + hl.otherViewComBackMenu), 
                    0 != hl.getInterstitial_times() && hl.otherViewComBackMenu % hl.getInterstitial_times() == 0 && j.createInterstitialAd()), 
                    !nn.isFirstView) if (hl.platform == v.NATIVE_IOS && !this.isFirstOnEnable || hl.appId == H.C233_ME || hl.appId == H.MMY || hl.appId == H.HYKB) {
                        if (0 == Bt.autoList.length) {
                            let e = 40;
                            hl.appId == H.C_233 && (e = 30), this.showInterstitialAdTime + e < tl.getInstance().getTime() && (this.showInterstitialAdTime = tl.getInstance().getTime(), 
                            console.log(e + "后可弹出插屏"), j.createInterstitialAd());
                        }
                    } else hl.appId == H.C_233 && (hl.isAutoFullScreen() && !this.isFirstOnEnable ? j.createFullscreenVideo(null, null) : j.createInterstitialAd());
                    0 == Bt.autoList.length && nn.isFirstView && (nn.isFirstView = !1);
                }
                if (Ts.isLevelUp) Bt.registerAutoOpenFunction(Er.ACCOUNTUPGRADE, gr.COVER, ur.VIEW, St.HIDE); else if (0 == Bt.autoList.length && Bt.newFunc.tag != Er.MORE_GAME && (an.jumpBackCount++, 
                console.log("ChannelManager.jumpBackGezi()", U.jumpBackGezi()), 0 != U.jumpBackGezi() && an.jumpBackCount % U.jumpBackGezi() == 0)) {
                    let e = ol.getCustomMatrixSize(), t = Laya.stage.width / 2 - e.w - 16, i = Laya.stage.height / 2 - e.h / 2, a = Laya.stage.width / 2 + 16, s = 0;
                    j.showCustom(t, i, al.MATRIX, function() {
                        s >= 1 || (s += 1, Bt.openFunction(Er.MORE_GAME, gr.COVER, ur.VIEW, St.HIDE, !0));
                    }, function() {
                        console.log("显示失败");
                    }), j.showCustom(a, i, al.MATRIX, function() {
                        s >= 1 || (s += 1, Bt.openFunction(Er.MORE_GAME, gr.COVER, ur.VIEW, St.HIDE, !0));
                    }, function() {
                        console.log("显示失败");
                    });
                }
            }
        }
        createProductGold() {
            this.productGold = new es(0, !1), this.productGold.alpha = 0, this.boxGold.addChild(this.productGold);
        }
        updateProductGold() {
            if (this.productGold) {
                if (this.isProductAniPlay) return;
                this.productGold.resetSetData(this.price), this.productGold.visible = !0, this.productGold.x = 0, 
                this.productGold.alpha = 0, Laya.Tween.clearAll(this.productGold), this.price > 0 && (this.isProductAniPlay = !0, 
                this.productGold.y = 53, this.productGold.alpha = 1, Laya.Tween.to(this.productGold, {
                    y: 0
                }, 500, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(this.productGold, {
                        y: -5,
                        alpha: 0
                    }, 800, null, Laya.Handler.create(this, () => {
                        Laya.Tween.clearAll(this.productGold), this.isProductAniPlay = !1;
                    }));
                }), 200), this.ani4.play(0, !1)), this.price = 0;
            }
        }
        setActivityList() {
            this.activityList = [], 1 != tl.getInstance().getNewGiftInfo().state && this.activityList.push(Zs.NEW_GIFT), 
            tl.getInstance().isShowNewYearGift() && this.activityList.push(Zs.NEW_YEAR_GIFT), 
            tl.getInstance().checkArm(Gr.SUMMER_GUN) || this.activityList.push(Zs.DFL), tl.getInstance().isHaveEquipById(Gr.RED_TASSEL_EQUIP) || this.activityList.push(Zs.EQUIP_1), 
            tl.getInstance().isHaveEquipById(Gr.RED_SPIRIT_EQUIP) || this.activityList.push(Zs.EQUIP_2), 
            tl.getInstance().isHaveEquipById(Gr.RED_SPIRIT_EQUIP1) || this.activityList.push(Zs.EQUIP_3), 
            tl.getInstance().isCanGetActivityByType(Qs.DOUBLE_FOX) && this.activityList.push(Zs.ACTIVITY_EQUIP_1), 
            tl.getInstance().isCanGetActivityByType(Qs.BARRETT) && this.activityList.push(Zs.ACTIVITY_EQUIP_2);
        }
        setActivityView() {
            if (Laya.timer.clear(this, this.setActivityView), this.isTouchBoxLeft) return void Laya.timer.once(5e3, this, this.setActivityView);
            this.setActivityList(), this.activityIndex >= this.activityList.length && (this.activityIndex = 0);
            for (let e = 1; e <= 3; e++) {
                this["box" + e].visible = !1;
            }
            let e = this.activityList.length >= 3 ? 3 : this.activityList.length;
            if (this.activityList.length > 0) for (let t = 1, i = this.activityIndex; t <= e; t++) {
                const e = this.activityList[i], a = this["box" + t], s = this["img" + t];
                e && (a.visible = !0, this.setActivityImg(s, e), a.dataSource = e), (i += 1) >= this.activityList.length && (i = 0);
            }
            this.activityIndex++, Laya.timer.once(5e3, this, this.setActivityView);
        }
        setActivityImg(e, t) {
            e.skin = "sub1/ui/first/" + t + ".png";
        }
        registerAutoOpen() {
            let e = tl.getInstance().getPopUpRule();
            if (console.log("弹窗规则:", e, "当前局数-（非本地“）", Ts.realGameNum), !hl.isReviewVersion()) if (e.isNew) 1 == e.gameNum ? 1 != tl.getInstance().getNewGiftInfo().state && Bt.registerAutoOpenFunction(Er.NEW_GIFT, gr.COVER, ur.VIEW, St.HIDE, !0) : 2 == e.gameNum ? 1 != tl.getInstance().getSign().state && Bt.registerAutoOpenFunction(Er.SIGN, gr.COVER, ur.WINDOW, St.HIDE) : 3 == e.gameNum ? (tl.getInstance().checkIsHasRoleSkin(Gr.RED_SPIRIT_EQUIP1) || Bt.registerAutoOpenFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                id: Gr.RED_SPIRIT_EQUIP1,
                isEndOpen: !1
            }), tl.getInstance().setPopUpRuleIsNew()) : e.gameNum > 3 && tl.getInstance().setPopUpRuleIsNew(); else if (Ts.realGameNum != Ts.nowGameNum) {
                Ts.nowGameNum = Ts.realGameNum, Ts.popNum = Math.floor(Math.random() * Xr.length), 
                console.log("需要获取列表哪个字段:", Ts.popNum);
                let e = Xr[Ts.popNum];
                if (e == Er.NEW_GIFT && (1 != tl.getInstance().getNewGiftInfo().state ? Bt.registerAutoOpenFunction(Er.NEW_GIFT, gr.COVER, ur.VIEW, St.HIDE, !0) : (Ts.popNum++, 
                e = Xr[Ts.popNum])), e == Er.ACTIVITYPLAYER) {
                    tl.getInstance().checkArm(Gr.SUMMER_GUN) ? (Ts.popNum++, e = Xr[Ts.popNum]) : Bt.registerAutoOpenFunction(Er.ACTIVITYPLAYER, gr.COVER, ur.WINDOW, St.HIDE, {
                        sucessCb: function() {},
                        backCb: function() {}
                    });
                }
                if (e == Er.SIGN && (1 != tl.getInstance().getSign().state ? Bt.registerAutoOpenFunction(Er.SIGN, gr.COVER, ur.WINDOW, St.HIDE) : (Ts.popNum++, 
                e = Xr[Ts.popNum])), e == Er.SUPER_REWARD) {
                    let t = tl.getInstance().getSuperEquipId();
                    t ? Bt.registerAutoOpenFunction(Er.SUPER_EQUIP, gr.COVER, ur.VIEW, St.HIDE, {
                        id: t,
                        isEndOpen: !1
                    }) : (Ts.popNum++, e = Xr[Ts.popNum]);
                }
                e == Er.TURNTABLE && Bt.registerAutoOpenFunction(Er.TURNTABLE, gr.COVER, ur.WINDOW, St.HIDE), 
                e == Er.NEW_YEAR_GIFT && Bt.registerAutoOpenFunction(Er.NEW_YEAR_GIFT, gr.COVER, ur.WINDOW, St.HIDE), 
                e == Er.TASK && Bt.registerAutoOpenFunction(Er.TASK, gr.COVER, ur.WINDOW, St.HIDE), 
                e == Er.GAMEBOX && Bt.registerAutoOpenFunction(Er.GAMEBOX, gr.COVER, ur.VIEW, St.HIDE, {
                    viewType: 0
                }), e == Er.SUMMER_GIFT && tl.getInstance().isShowSummerGift() && Bt.registerAutoOpenFunction(Er.SUMMER_GIFT, gr.COVER, ur.VIEW, St.HIDE), 
                Ts.popNum++;
            }
        }
        updateOnLine() {
            if (this.btnOnLine.visible = !1, this.imgOnLine1.visible = !1, this.imgOnLine2.visible = !1, 
            this.labelOnLineTime.visible = !1, tl.getInstance().isCanShowOnLine()) this.btnOnLine.visible = !0, 
            this.imgOnLine2.visible = !0; else if (tl.getInstance().getOnLineTime() > sn.getDataByIndex(sn.keys.length - 1).time) {
                let e;
                this.btnOnLine.visible = !0, this.imgOnLine1.visible = !0, this.labelOnLineTime.visible = !0;
                let t = tl.getInstance().getOnLineDayTime() + 86400 - tl.getInstance().getTime();
                e = t > 3600 ? _t.parseTimeHMS(t) : _t.parseTimeMS(t), this.labelOnLineTime.text = e;
            } else {
                this.btnOnLine.visible = !0, this.imgOnLine1.visible = !0, this.labelOnLineTime.visible = !0;
                let e = tl.getInstance().getOnLineTime(), t = tl.getInstance().getOnlineGetTime(), i = -1, a = -1;
                for (let e = 0; e < sn.keys.length; e++) {
                    if (sn.getDataByIndex(e).time > t) {
                        i = e;
                        break;
                    }
                    a = e;
                }
                let s = sn.getDataByIndex(i).time - (sn.getDataByIndex(a) ? sn.getDataByIndex(a).time : 0), n = e - (sn.getDataByIndex(a) ? sn.getDataByIndex(a).time : 0);
                this.labelOnLineTime.text = _t.parseTimeMS(s - n).toString();
            }
        }
        onBtnOnLine() {
            q.getTouch() && Bt.openFunction(Er.ON_LINE_AWARD, gr.COVER, ur.WINDOW, St.HIDE);
        }
    }
    nn.isFirst = !0, nn.isFirstView = !0;
    class on extends T.view.equip.PropertybarItemUI {
        constructor(e) {
            super(), this.data = null, this.data = e;
        }
        onAwake() {
            this.init();
        }
        onDestroy() {}
        init() {
            this.txtAttribute.text = this.data.attribute, this.txtPro.text = this.data.pro, 
            this.imgPro.width = 100 * this.data.pro / this.data.maxPro;
        }
        update() {}
    }
    !function(e) {
        e.SELECT_UNEQUIP = "SELECT_UNEQUIP", e.SELECT_EQUIP = "SELECT_EQUIP", e.NORMAL = "NORMAL", 
        e.EQUIP = "EQUIP";
    }(js || (js = {}));
    class rn extends T.view.equip.WarehouseBottomItemUI {
        constructor() {
            super(), this.myData = null, this.myView = null, this.myIndex = null, this.myState = null, 
            this.on(Laya.Event.CLICK, this, this.onBtnCell);
        }
        onDestroy() {
            this.myData = null, this.myView = null, this.myState = null, this.imgEquip = null, 
            this.imgFrame = null, this.imgGrade = null, this.imgIcon = null, this.imgSelect = null, 
            this.txtLv = null, this.txtName = null;
        }
        setView(e) {
            if (null != this.myState) return;
            this.myData = e, this.myState = this.myData.state, this.imgDot.visible = !1;
            let t = this.myData.data;
            tl.getInstance().getEquipRedById(t.id) && (this.imgDot.visible = !0), this.myView = this.myData.myView, 
            this.myIndex = this.myData.index, this.imgGrade.skin = ul.WAREHOUSE_UI.GRADE_LABEL_ROOT + t.grade.toString() + ".png", 
            this.imgIcon.skin = t.icon, this.imgFrame.skin = ul.WAREHOUSE_UI.ARM_GRADE_FRAME + t.grade.toString() + ".png", 
            this.txtName.text = t.name, 1 == this.myData.armType ? this.txtLv.visible = !1 : this.txtLv.text = "lv" + (1 == this.myData.armType ? "1" : this.myData.data.id), 
            this.setState();
        }
        setState() {
            console.log("当前状态：", this.myIndex, this.myState), this.imgEquip.visible = !1, this.imgSelect.visible = !1, 
            this.myState == js.EQUIP ? (this.imgEquip.visible = !0, this.imgSelect.visible = !1) : this.myState == js.NORMAL ? (this.imgSelect.visible = !1, 
            this.imgEquip.visible = !1) : this.myState == js.SELECT_EQUIP ? (this.imgSelect.visible = !0, 
            this.imgEquip.visible = !0) : this.myState == js.SELECT_UNEQUIP && (this.imgSelect.visible = !0, 
            this.imgEquip.visible = !1);
        }
        onBtnCell() {
            if (this.myView.updateBottomCellBtnState(this.myIndex), this.myData) {
                let e = this.myData.data;
                this.imgDot.visible = !1, tl.getInstance().setEquipRed(e.id);
            }
        }
    }
    !function(e) {
        e.LOCK = "LOCK", e.UNLOCKSELECT = "UNLOCKSELECT", e.UNLOCKUNSELECT = "UNLOCKUNSELECT";
    }(Js || (Js = {}));
    class ln extends T.view.equip.WarehouseRightItemUI {
        constructor(e) {
            super(), this.data = null, this.myView = null, this.data = e, this.myView = this.data.myView, 
            console.log("右侧数据:", this.data), this.setView(), this.on(Laya.Event.CLICK, this, this.onBtnCell);
        }
        onDestroy() {
            this.data = null, this.myView = null, this.imgFrame = null, this.imgIcon = null, 
            this.imgLock = null;
        }
        resetData(e) {
            this.data.data = e.data, this.data.state = e.state, this.data.armType = e.armType, 
            console.log("重置后的数据:", this.data), this.setView();
        }
        setView() {
            this.setState();
        }
        setState() {
            this.imgLock.visible = !1, this.imgIcon.visible = !1;
            let e = null != this.data.data ? this.data.data.icon : "";
            this.imgIcon.skin = e, this.data.state == Js.LOCK ? (this.imgLock.visible = !0, 
            this.imgIcon.visible = !1, this.imgFrame.skin = ul.WAREHOUSE_UI.RIGHTCELLFRAME.TOUCH) : this.data.state == Js.UNLOCKSELECT ? (this.imgIcon.visible = !0, 
            this.imgFrame.skin = ul.WAREHOUSE_UI.RIGHTCELLFRAME.TOUCHED) : this.data.state == Js.UNLOCKUNSELECT && (this.imgIcon.visible = !0, 
            this.imgFrame.skin = ul.WAREHOUSE_UI.RIGHTCELLFRAME.TOUCH);
        }
        onBtnCell() {
            this.data.state != Js.LOCK && this.myView.updateRightCellBtnState(this.data.index - 1);
        }
    }
    class hn extends T.view.equip.WarehouseViewUI {
        constructor() {
            super(), this.rightItemList = [], this.curIndex = 0, this.myArmData = {}, this.scene3D = null, 
            this._translate2 = new Laya.Vector3(5, -10, 1), this._translate = new Laya.Vector3(0, 0, 0), 
            this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), this.rotMouseX = 0, this.cacheList = [], 
            this.apertureCtrl = null, this.fingerCtrl = null, this.maxCell = null, this.isCheckNoLocal = !1, 
            this.height = this.stage.height;
        }
        onAwake() {
            this.init(), this.setBtnEvent();
        }
        onDestroy() {
            this.listBottom = null, this.rightItemList = null, this.curIndex = 0, this.myArmData = null, 
            this.sp && this.sp.destroy(), this.sp = null, this.scene3D && this.scene3D.destroy(), 
            this.scene3D = null, this._translate2 = null, this._translate = null, this.sp = null, 
            this._pos = null, this.rotMouseX = null, this.imgIcon = null, this.imgNameBg = null, 
            this.img3DCenter = null, this.imgGrade = null, this.txtName = null, this.txtType = null, 
            this.boxBottom = null, this.boxEquip = null, this.boxTop = null, this.btnEquip = null, 
            this.btnRemove = null, this.btnStrengthen = null;
        }
        init() {
            this.fingerCtrl = ns.createFingerAniCtrl(this), this.apertureCtrl = ns.createCommonAperture(this), 
            this.create3D(), this.btnState(!0, !1), this.setRightData(), this.setBottomData(), 
            this.setGuide();
        }
        setGuide() {
            console.log("装备库当前新手步骤：", ns.curEquiplLibraryStep, tl.getInstance().getGuide());
            let e = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > e && (e = ns.curEquiplLibraryStep, this.isCheckNoLocal = !0), 
            e) {
              case Et.CHOOSEARM:
                {
                    console.log("选择武器指引");
                    let e = new Laya.Point(this.maxCell.width / 4, this.maxCell.height / 2), t = this.maxCell.localToGlobal(e), i = new Laya.Point(this.maxCell.width / 4, this.maxCell.height / 2), a = this.maxCell.localToGlobal(i);
                    this.setGudePos(t, a, this.maxCell);
                    break;
                }

              case Et.TOEQUIP:
                {
                    let e = new Laya.Point(this.btnEquip.width / 4 - this.apertureCtrl.width / 2, this.btnEquip.height / 2), t = this.btnEquip.localToGlobal(e), i = new Laya.Point(this.btnEquip.width / 4 - this.apertureCtrl.width / 2, this.btnEquip.height / 2), a = this.btnEquip.localToGlobal(i);
                    this.setGudePos(t, a, this.btnEquip);
                    break;
                }
            }
        }
        setGudePos(e, t, i) {
            i.mouseEnabled = !0, this.fingerCtrl.visible = !0, this.fingerCtrl.play(), this.fingerCtrl.x = "btnEquip" != i.name ? e.x - i.width - this.fingerCtrl.width / 2 : e.x - i.width - i.width / 2, 
            this.fingerCtrl.x += i.width / 2, this.fingerCtrl.y = e.y, this.apertureCtrl.visible = !0, 
            this.apertureCtrl.play(!1), this.apertureCtrl.x = "btnEquip" != i.name ? t.x - i.width - this.apertureCtrl.width / 2 : t.x - 2 * i.width - this.apertureCtrl.width / 2 + i.width / 2, 
            this.apertureCtrl.y = t.y - this.apertureCtrl.height / 2, this.apertureCtrl.x += "btnEquip" != i.name ? i.width / 2 - this.apertureCtrl.width / 2 : i.width / 2;
        }
        updateGuide() {
            let e = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > e && (e = ns.curEquiplLibraryStep), e) {
              case Et.GAME_1:
              case Et.EQUIP:
                break;

              case Et.WAREHOUSE:
                this.fingerCtrl.stop(), this.apertureCtrl.stop(), this.isCheckNoLocal ? ns.curEquiplLibraryStep++ : tl.getInstance().setGuide();
                break;

              case Et.CHOOSEARM:
                this.isCheckNoLocal ? ns.curEquiplLibraryStep++ : tl.getInstance().setGuide(), this.setGuide();
                break;

              case Et.TOEQUIP:
                this.isCheckNoLocal ? ns.curEquiplLibraryStep++ : tl.getInstance().setGuide(), this.fingerCtrl.stop(), 
                this.apertureCtrl.stop(), Bt.getFunctionViewCtrl(Er.EQUIP).toGuideClose();
            }
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i), this.sp && (this.sp.destroy(), 
            this.sp = null), this.sp = Te.createRoleViewSkin(this._translate, this.scene3D, !1, tl.getInstance().getSelectRoleSkin()), 
            this.sp.transform.localRotationEulerY = 20, this.sp.transform.localPositionY += .3, 
            this.sp.transform.localPositionX -= .3, this.sp.transform.localScaleX = 2, this.sp.transform.localScaleY = 2, 
            this.sp.transform.localScaleZ = 2;
        }
        showModel(e, t) {
            let i = Te.createMenuArm(e, this.sp, t);
            i.transform.localScaleX = 1.3, i.transform.localScaleY = 1.3, i.transform.localScaleZ = 1.3;
        }
        notUpdateProp() {
            return {
                id: 8001,
                lv: 1,
                fire: _e.getDataByKey(8001).hit,
                pierceThrough: _e.getDataByKey(8001).pierceThrough,
                firingRate: _e.getDataByKey(8001).interval,
                numberOfBullets: _e.getDataByKey(8001).magazineBullet,
                range: _e.getDataByKey(8001).range,
                accurate: 100,
                ammunitionChange: _e.getDataByKey(8001).bullets,
                sight: _e.getDataByKey(8001).sight,
                movingSpeed: _e.getDataByKey(8001).movingSpeed,
                biochemicalCharging: _e.getDataByKey(8001).biochemicalCharging
            };
        }
        setRightData() {
            let e = tl.getInstance().getWarehouseGroove(), t = tl.getInstance().getSkinGameCurLib(), i = tl.getInstance().getGameCurPropLib(), a = [];
            for (let e = 0; e < t.length; e++) {
                let i = {
                    id: t[e],
                    armType: 0
                };
                a.push(i);
            }
            for (let e = 0; e < i.length; e++) {
                let t = {
                    id: i[e],
                    armType: 1
                };
                a.push(t);
            }
            let s = 0;
            for (let t = 0; t < 2; t++) for (let i = 0; i < 4; i++) {
                let n = {
                    data: null,
                    unlock: !1,
                    index: ++s,
                    state: Js.LOCK,
                    myView: this,
                    armType: 0
                };
                s <= e && (a[s - 1] && (n.data = 0 == a[s - 1].armType ? A.getDataByKey(a[s - 1].id) : _e.getDataByKey(a[s - 1].id), 
                n.armType = a[s - 1].armType), n.unlock = !0, n.state = Js.UNLOCKUNSELECT), 1 == s && (n.state = Js.UNLOCKSELECT, 
                0 == n.armType ? this.myArmData.data = tl.getInstance().getArmQualityByID(a[s - 1].id) : this.myArmData.data = this.notUpdateProp(), 
                this.myArmData.armType = n.armType, this.myArmData.name = n.data.name, this.myArmData.type = n.data.type, 
                this.myArmData.icon = n.data.icon, this.myArmData.grade = n.data.grade, this.setLeftData());
                let o = new ln(n);
                o.x = 137 * i, o.y = 81 * t, this.boxEquip.addChild(o), this.rightItemList.push(o);
            }
        }
        updateRightCellBtnState(e) {
            if (!isNaN(e)) {
                this.curIndex = e;
                for (let t = 0; t < this.rightItemList.length; t++) {
                    let i = this.rightItemList[t];
                    t == e ? (i.data.state = Js.UNLOCKSELECT, i.data.data && (this.myArmData.armType = i.data.armType, 
                    1 != i.data.armType ? this.myArmData.data = tl.getInstance().getArmQualityByID(i.data.data.id) : this.myArmData.data = this.notUpdateProp(), 
                    this.myArmData.name = i.data.data.name, this.myArmData.type = i.data.data.type, 
                    this.myArmData.icon = i.data.data.icon, this.myArmData.grade = i.data.data.grade, 
                    this.setLeftData())) : i.data.state == Js.UNLOCKSELECT && (i.data.state = Js.UNLOCKUNSELECT), 
                    i.setState();
                }
                this.touchRightToUpdateBottomData();
            }
        }
        touchRightToUpdateBottomData() {
            let e = null;
            for (let t = 0; t < this.listBottom.dataSource.length; t++) {
                let i = this.listBottom.getCell(t);
                if (i && null != this.rightItemList[this.curIndex].data.data && this.rightItemList[this.curIndex].data.data.id == i.myData.data.id) {
                    e = t;
                    break;
                }
            }
            this.updateBottomCellBtnState(e);
        }
        setLeftData() {
            if (this.myArmData) {
                this.cleanCacheList(), this.txtName.text = this.myArmData.name, this.imgIcon.skin = this.myArmData.icon;
                let e = "";
                1 == this.myArmData.type ? e = "步枪" : 2 == this.myArmData.type ? e = "刀" : 3 == this.myArmData.type ? e = "狙击枪" : 4 == this.myArmData.type ? e = "手枪" : 5 == this.myArmData.type ? e = "冲锋枪" : 6 == this.myArmData.type ? e = "机枪" : 7 == this.myArmData.type ? e = "散弹枪" : 8 == this.myArmData.type && (e = "手榴弹");
                let t = [];
                t = 1 == this.myArmData.type || 2 == this.myArmData.type || 4 == this.myArmData.type || 5 == this.myArmData.type || 6 == this.myArmData.type || 7 == this.myArmData.type || 8 == this.myArmData.type ? [ {
                    attribute: "火力",
                    pro: this.myArmData.data.fire,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.fire * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "护甲穿透",
                    pro: this.myArmData.data.pierceThrough,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.pierceThrough * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "射速",
                    pro: this.myArmData.data.firingRate,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.firingRate * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "子弹数",
                    pro: this.myArmData.data.numberOfBullets,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.numberOfBullets * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "有效射程",
                    pro: this.myArmData.data.range,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.range * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "精准",
                    pro: this.myArmData.data.accurate,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.accurate * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "换弹",
                    pro: this.myArmData.data.ammunitionChange,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.ammunitionChange * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "移动速度",
                    pro: this.myArmData.data.movingSpeed,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.movingSpeed * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "生化充能",
                    pro: this.myArmData.data.biochemicalCharging,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.biochemicalCharging * tl.getInstance().getMaxMultiple()
                } ] : [ {
                    attribute: "火力",
                    pro: this.myArmData.data.fire,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.fire * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "护甲穿透",
                    pro: this.myArmData.data.pierceThrough,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.pierceThrough * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "射速",
                    pro: this.myArmData.data.firingRate,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.firingRate * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "子弹数",
                    pro: this.myArmData.data.numberOfBullets,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.numberOfBullets * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "有效射程",
                    pro: this.myArmData.data.range,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.range * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "精准",
                    pro: this.myArmData.data.accurate,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.accurate * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "换弹",
                    pro: this.myArmData.data.ammunitionChange,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.ammunitionChange * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "瞄准镜",
                    pro: this.myArmData.data.sight,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.sight * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "移动速度",
                    pro: this.myArmData.data.movingSpeed,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.movingSpeed * tl.getInstance().getMaxMultiple()
                }, {
                    attribute: "生化充能",
                    pro: this.myArmData.data.biochemicalCharging,
                    maxPro: this.myArmData.data.lv * this.myArmData.data.biochemicalCharging * tl.getInstance().getMaxMultiple()
                } ], this.txtType.text = e, this.addCacheList(t), this.showModel(this.myArmData.data.id, this.myArmData.armType);
            }
        }
        cleanCacheList() {
            for (let e = 0; e < this.cacheList.length; e++) this.cacheList[e].destroy(), this.cacheList[e] = null;
            this.cacheList = [];
        }
        addCacheList(e) {
            for (let t = 0; t < e.length; t++) {
                let i = e[t], a = new on(i);
                a.x = 0, a.y = 21 * t, this.boxPropertybar.addChild(a), this.cacheList.push(a);
            }
        }
        updateCacheList() {}
        setBottomData() {
            let e = tl.getInstance().getSkinLib(), t = tl.getInstance().getSkinGameCurLib(), i = [], a = 0;
            for (let s = 0; s < e.length; s++) {
                let n = {
                    data: A.getDataByKey(e[s]),
                    state: js.NORMAL,
                    lv: tl.getInstance().getArmQualityByID(e[s]).lv,
                    index: s,
                    myView: this,
                    armType: 0
                };
                for (let i = 0; i < t.length; i++) e[s] == t[i] && (n.state = js.EQUIP, 0 == i && (n.state = js.SELECT_EQUIP));
                a++, i.push(n);
            }
            let s = tl.getInstance().getPropLib(), n = tl.getInstance().getGameCurPropLib();
            for (let e = 0; e < s.length; e++) {
                console.log("index----------:", a);
                let t = {
                    data: _e.getDataByKey(s[e]),
                    state: js.NORMAL,
                    lv: 1,
                    index: a,
                    myView: this,
                    armType: 1
                };
                for (let i = 0; i < n.length; i++) s[e] == n[i] && (t.state = js.EQUIP);
                a++, i.push(t);
            }
            this.listBottom.itemRender = rn, this.listBottom.vScrollBarSkin = "", this.listBottom.dataSource = i, 
            this.listBottom.selectEnable = !0, this.listBottom.renderHandler = new Laya.Handler(this, this.updateSkinItem);
            let o = i[0], r = this.listBottom.getCell(0);
            for (let e = 0; e < i.length; e++) {
                let t = i[e];
                t && t.data && 0 == t.armType && t.data.id > o.data.id && (o = t, r = this.listBottom.getCell(e));
            }
            this.maxCell = r;
        }
        updateBottomCellBtnState(e) {
            console.log("点击当前index:", e, this.maxCell.myData), this.maxCell && this.maxCell.myIndex == e && this.updateGuide();
            for (let t = 0; t < this.listBottom.dataSource.length; t++) {
                let i = this.listBottom.getCell(t);
                if (e == t) {
                    i.myState == js.EQUIP ? i.myState = js.SELECT_EQUIP : i.myState == js.NORMAL && (i.myState = js.SELECT_UNEQUIP);
                    1 != i.myData.armType ? this.myArmData.data = tl.getInstance().getArmQualityByID(i.myData.data.id) : this.myArmData.data = this.notUpdateProp(), 
                    this.myArmData.name = i.myData.data.name, this.myArmData.type = i.myData.data.type, 
                    this.myArmData.icon = i.myData.data.icon, this.myArmData.grade = i.myData.data.grade, 
                    this.myArmData.armType = i.myData.armType, this.setLeftData();
                } else i && (i.myState == js.SELECT_EQUIP ? i.myState = js.EQUIP : i.myState == js.SELECT_UNEQUIP && (i.myState = js.NORMAL));
                i && i.setState();
            }
            if (null == e) {
                for (let e = 0; e < this.listBottom.dataSource.length; e++) {
                    let t = this.listBottom.getCell(e);
                    if (t.myState == js.NORMAL) {
                        t.myState = js.SELECT_UNEQUIP, t.setState();
                        break;
                    }
                }
                this.btnState(!1, !0);
            }
            if (this.listBottom.getCell(e).myState != js.SELECT_EQUIP && this.listBottom.getCell(e).myState != js.SELECT_UNEQUIP || (this.listBottom.getCell(e).myState == js.SELECT_UNEQUIP ? this.btnState(!1, !0) : this.btnState(!0, !1), 
            this.touchBottomToUpdateRightData(this.listBottom.getCell(e).myData.data.id)), null != e) {
                let t = this.listBottom.getCell(e);
                this.showModel(t.myData.data.id, this.myArmData.armType);
            }
        }
        touchBottomToUpdateRightData(e) {
            let t = !1, i = !1, a = !0;
            for (let t = 0; t < this.rightItemList.length; t++) {
                let i = this.rightItemList[t];
                i.data.unlock && (i.data.data || (a = !1), i.data.data && i.data.data.id == e && (a = !1));
            }
            if (!a) for (let t = 0; t < this.rightItemList.length; t++) {
                let a = this.rightItemList[t];
                a.data.data && (a.data.data.id == e ? (this.curIndex = t, a.data.state = Js.UNLOCKSELECT, 
                i = !0) : a.data.state = Js.UNLOCKUNSELECT), a.setState();
            }
            let s = !1;
            for (let e = 0; e < this.rightItemList.length; e++) {
                if (this.rightItemList[e].data.state == Js.UNLOCKSELECT) {
                    s = !0;
                    break;
                }
            }
            for (let e = 0; e < this.rightItemList.length; e++) {
                let a = this.rightItemList[e];
                a.data.data || (t || i || s ? s && this.rightItemList[this.curIndex].data.data && a.data.state == Js.UNLOCKSELECT && (a.data.state = Js.UNLOCKUNSELECT) : (t = !0, 
                a.data.state != Js.UNLOCKUNSELECT && a.data.state != Js.UNLOCKSELECT || (a.data.state = Js.UNLOCKSELECT, 
                this.curIndex = e))), a.setState();
            }
        }
        removeEquip() {
            let e = tl.getInstance().getSkinGameCurLib(), t = tl.getInstance().getGameCurPropLib(), i = [], a = this.rightItemList[this.curIndex];
            if (0 == this.myArmData.armType) {
                for (let t = 0; t < e.length; t++) {
                    let s = e[t];
                    s && a.data.data.id != s && i.push(s);
                }
                tl.getInstance().removeSkinGameCurLib(i);
            } else {
                for (let e = 0; e < t.length; e++) {
                    let s = t[e];
                    s && a.data.data.id != s && i.push(s);
                }
                tl.getInstance().removeSkinGameCurPropLib(i);
            }
            let s = null;
            for (let e = 0; e < this.listBottom.dataSource.length; e++) {
                let t = this.listBottom.getCell(e);
                t && t.myData.data.id == a.data.data.id && (s = t);
            }
            s && (s.myState = js.SELECT_UNEQUIP, s.setState());
            let n = {
                data: null,
                unlock: a.data.unlock,
                index: a.data.count,
                state: a.data.state,
                myView: this
            };
            a.resetData(n), this.btnState(!1, !0);
        }
        equipArm() {
            this.updateGuide();
            let e = null, t = !1;
            for (let i = 0; i < this.listBottom.dataSource.length; i++) {
                let a = this.listBottom.getCell(i);
                if (a && a.myState == js.SELECT_UNEQUIP) {
                    e = a, t = !0;
                    break;
                }
            }
            if (!t) for (let t = 0; t < this.listBottom.dataSource.length; t++) {
                let i = this.listBottom.getCell(t);
                if (i && i.myState == js.NORMAL) {
                    e = i;
                    break;
                }
            }
            if (this.rightItemList[this.curIndex].data.unlock) {
                if (this.rightItemList[this.curIndex].data.data) for (let e = 0; e < this.listBottom.dataSource.length; e++) {
                    let t = this.listBottom.getCell(e);
                    if (t && this.rightItemList[this.curIndex].data.data.id == t.myData.data.id) {
                        t.myState = js.NORMAL, t.setState();
                        break;
                    }
                }
                let t = {
                    data: 0 == e.myData.armType ? A.getDataByKey(e.myData.data.id) : _e.getDataByKey(e.myData.data.id),
                    state: Js.UNLOCKSELECT,
                    armType: e.myData.armType
                };
                return this.rightItemList[this.curIndex].resetData(t), 0 == e.myData.armType ? tl.getInstance().updateSkinGameCurLib(e.myData.data.id) : tl.getInstance().updateSkinGameCurPropLib(e.myData.data.id), 
                e && (e.myState = js.SELECT_EQUIP, e.setState()), void this.updateRightCellBtnState(this.curIndex);
            }
            for (let t = 0; t < this.rightItemList.length; t++) {
                let i = this.rightItemList[t];
                if (i.data.unlock && null == i.data.data) {
                    this.curIndex = t;
                    let a = {
                        data: 0 == e.myData.armType ? A.getDataByKey(e.myData.data.id) : _e.getDataByKey(e.myData.data.id),
                        state: Js.UNLOCKSELECT,
                        armType: e.myData.armType
                    };
                    i.resetData(a), 0 == e.myData.armType ? tl.getInstance().updateSkinGameCurLib(e.myData.data.id) : tl.getInstance().updateSkinGameCurPropLib(e.myData.data.id), 
                    e && (e.myState = js.SELECT_EQUIP, e.setState()), this.btnState(!0, !1);
                    break;
                }
            }
        }
        btnState(e, t) {
            this.btnRemove.visible = e, this.btnEquip.visible = t;
        }
        setBtnEvent() {
            this.btnRemove.on(Laya.Event.CLICK, this, this.onBtnRemove), this.btnStrengthen.on(Laya.Event.CLICK, this, this.onBtnStrengthen), 
            this.btnEquip.on(Laya.Event.CLICK, this, this.onBtnEquip), this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnMouseDown), 
            this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnRot);
        }
        onBtnMouseDown(e) {
            this.rotMouseX = e.stageX;
        }
        onBtnRot(e) {
            if (this.sp) {
                let t = e.stageX - this.rotMouseX;
                this.sp.transform.localRotationEulerY += .4 * t, this.rotMouseX = e.stageX;
            }
        }
        updateSkinItem(e, t) {
            e.setView(e.dataSource);
        }
        onBtnRemove() {
            if (!q.getTouch()) return;
            let e = tl.getInstance().getSkinGameCurLib();
            0 == this.myArmData.armType && e.length <= 1 || this.removeEquip();
        }
        onBtnStrengthen() {
            q.getTouch();
        }
        onBtnEquip() {
            q.getTouch() && this.equipArm();
        }
    }
    let cn = {
        SYNTHESIS: "SYNTHESIS",
        WAREHOUSE: "WAREHOUSE"
    };
    class dn extends T.view.equip.EquipViewUI {
        constructor() {
            super(), this.curTouchModular = cn.SYNTHESIS, this.warehouseViewCtrl = null, this.isAirDropPlay = !1, 
            this.isDown = !1, this.apertureCtrl = null, this.fingerCtrl = null, this.point = new Laya.Point(), 
            this.a = new Laya.Point(), this.isCheckNoLocal = !1, this.name = "EquipViewCtrl", 
            this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            this.init(), this.setBtnEvent(), this.update(), Laya.timer.loop(1e3, this, this.update), 
            hl.platform == v.TT && (this.imgAd.visible = !0, this.imgIcon.skin = "sub1/ui/first/img_tt_1.png"), 
            hl.platform == v.WEB_4399 && (this.label4399.visible = !0);
        }
        update() {}
        onDestroy() {
            this.timer.clearAll(this), Ts.synthesisViewCtrl.removeSelf(), Laya.MouseManager.multiTouchEnabled = !0, 
            this.btnClose = null, this.imgBg = null, this.curTouchModular = null, this.warehouseViewCtrl && this.warehouseViewCtrl.destroy(), 
            this.warehouseViewCtrl = null, this.boxWarehouse = null;
        }
        init() {
            Laya.MouseManager.multiTouchEnabled = !1, this.fingerCtrl = ns.createFingerAniCtrl(this), 
            this.apertureCtrl = ns.createCommonAperture(this), this.btnUICtrl(), ol.isFullScreen(), 
            this.resetData(), this.setGuide(!0), this.isCanOpenOffLine(), this.timer.loop(9e3, this, this.updateAirDropTimer), 
            this.timer.loop(3e4, this, this.updateAirDrop);
        }
        resetData() {
            this.point.x = 0, this.point.y = 0, this.a.x = 0, this.a.y = 0;
        }
        setGuide(e = !1) {
            let t = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > t && (t = ns.curEquiplLibraryStep, this.isCheckNoLocal = !0), 
            tl.getInstance().getGuide() != Et.CHOOSEARM && tl.getInstance().getGuide() != Et.TOEQUIP || tl.getInstance().setGuide(Et.WAREHOUSE), 
            this.isCheckNoLocal && (ns.curEquiplLibraryStep != Et.CHOOSEARM && ns.curEquiplLibraryStep != Et.TOEQUIP || (ns.curEquiplLibraryStep = Et.WAREHOUSE, 
            t = ns.curEquiplLibraryStep)), console.log("装备库当前新手步骤：", ns.curEquiplLibraryStep, tl.getInstance().getGuide()), 
            ns.curEquiplLibraryStep < tl.getInstance().getGuide() && (t = tl.getInstance().getGuide()), 
            t) {
              case Et.WAREHOUSE:
                0 == this.a.x && this.a.y;
            }
        }
        toGuideClose() {
            let e = new Laya.Point(this.btnClose.width / 2, this.btnClose.height / 2), t = this.btnClose.localToGlobal(e);
            this.fingerCtrl.visible = !0, this.fingerCtrl.play(), this.fingerCtrl.x = t.x, this.fingerCtrl.y = t.y;
        }
        setGudePos(e, t, i) {
            i.mouseEnabled = !0, this.fingerCtrl.visible = !0, this.fingerCtrl.play(), this.fingerCtrl.x = e.x, 
            this.fingerCtrl.y = e.y, this.apertureCtrl.visible = !0, this.apertureCtrl.play(!1), 
            this.apertureCtrl.x = t.x - this.apertureCtrl.width / 2, this.apertureCtrl.y = t.y - this.apertureCtrl.height / 2;
        }
        updateGuide() {
            let e = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > e && (e = ns.curEquiplLibraryStep), e) {
              case Et.GAME_1:
              case Et.EQUIP:
                break;

              case Et.WAREHOUSE:
                this.fingerCtrl.stop(), this.apertureCtrl.stop(), this.isCheckNoLocal ? ns.curEquiplLibraryStep++ : tl.getInstance().setGuide();
            }
        }
        isCanOpenOffLine() {
            tl.getInstance().isCanOpenOfflineView() && Bt.openFunction(Er.OFF_LINE, gr.COVER, ur.VIEW, St.GOLD);
        }
        updateAirDropTimer() {
            this.curTouchModular == cn.SYNTHESIS && (this.btnFreeEquip.visible || ls.getInstance().getRandomEmptyPosToAddAirDrop());
        }
        updateAirDrop() {
            if (this.curTouchModular == cn.SYNTHESIS && !(tl.getInstance().getGuide() <= Et.GAME_2)) if (hl.isReviewVersion()) this.btnFreeEquip.visible = !1; else if (ls.getInstance().getEmptyPosNum() >= 1 && !this.isAirDropPlay) {
                Laya.Tween.clearAll(this.btnFreeEquip), this.isAirDropPlay = !0, this.btnFreeEquip.y = -99;
                var e = this;
                this.btnFreeEquip.visible = !0, Laya.Tween.to(this.btnFreeEquip, {
                    y: Laya.stage.height + 99
                }, 15e3, null, Laya.Handler.create(this, function() {
                    e.isAirDropPlay = !1, e.btnFreeEquip.visible = !1;
                }));
            }
        }
        setBtnEvent() {
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), this.btnFreeEquip.on(Laya.Event.CLICK, this, this.onBtnFreeEquip), 
            hl.platform == v.WX && (this.btnGameCommunity.visible = !0);
        }
        btnUICtrl() {
            this.curTouchModular == cn.SYNTHESIS ? (this.warehouseViewCtrl && (this.warehouseViewCtrl.destroy(), 
            this.warehouseViewCtrl = null), this.addChild(Ts.synthesisViewCtrl), Ts.synthesisViewCtrl.zOrder = 1, 
            this.btnFreeEquip.zOrder = 100, this.updateAirDrop(), Ts.synthesisViewCtrl.btnDorpAir = this.btnFreeEquip, 
            Ts.synthesisViewCtrl.setGuide()) : (this.btnFreeEquip.visible = !1, this.isAirDropPlay = !1, 
            Ts.synthesisViewCtrl.btnDorpAir = null, Ts.synthesisViewCtrl.removeSelf(), this.warehouseViewCtrl || (this.warehouseViewCtrl = new hn(), 
            this.boxWarehouse.addChild(this.warehouseViewCtrl), Ts.synthesisViewCtrl.onMyDisable()));
        }
        onBtnSynthesis() {
            q.getTouch() && this.curTouchModular != cn.SYNTHESIS && (this.boxWarehouse.visible = !1, 
            this.curTouchModular = cn.SYNTHESIS, this.resetData(), this.setGuide(), this.btnUICtrl());
        }
        onBtnWarehouse() {
            q.getTouch() && this.curTouchModular != cn.WAREHOUSE && (this.boxWarehouse.visible = !0, 
            this.curTouchModular = cn.WAREHOUSE, this.updateGuide(), this.btnUICtrl());
        }
        onBtnClose() {
            q.getTouch() && (Ts.synthesisViewCtrl.btnDorpAir = null, Ts.synthesisViewCtrl.removeSelf(), 
            ns.curEquiplLibraryStep == Et.GAME_2 && tl.getInstance().getGuide() > Et.GAME_1 && tl.getInstance().getGuide() < Et.GAME_2 && tl.getInstance().setGuide(), 
            tl.getInstance().getGuide() == Et.GAME_2 && Bt.getFunctionViewCtrl(Er.FIRST).resetData(), 
            Bt.getFunctionViewCtrl(Er.FIRST).setGuide(), Bt.closeFunction());
        }
        onBtnFreeEquip() {
            if (q.getTouch()) {
                var e = this;
                e.isDown || (e.isDown = !0, j.setEvent(function() {
                    e.btnFreeEquip.visible = !1, e.isDown = !1, e.isAirDropPlay = !1, Ts.synthesisViewCtrl.onBtnDropAir();
                }, function() {
                    e.isDown = !1;
                }, t.DROP_AIR));
            }
        }
        onMyDisable() {
            Ts.synthesisViewCtrl.onMyDisable(), nn.btnGameClub && nn.btnGameClub.hide();
        }
        onMyEnable() {
            Ts.synthesisViewCtrl.onMyEnable(), nn.btnGameClub && nn.btnGameClub.show();
        }
    }
    class gn extends T.view.equip.NewEquipUnLockViewUI {
        constructor(e) {
            super(), this.efffect1 = null, this.efffect2 = null, this.scene3D = null, this.sp1 = null, 
            this.sp2 = null, this.sp3 = null, this.width = this.stage.width, this.height = this.stage.height, 
            this.data = e;
        }
        onAwake() {
            il.playEffect(ml.HCXQ), this.setPlatformStyle(), this.init(), this.setEvent();
        }
        onDestroy() {
            this.timer.clearAll(this), this.data = null, this.imgCenter = null, this.txtLv = null, 
            this.txtName = null, this.btnBack = null, this.btnShare = null, this.img1 = null, 
            this.img2 = null, this.img3 = null, this.efffect1.destroy(), this.efffect2.destroy(), 
            this.efffect1 = null, this.efffect2 = null, this.sp1.destroy(), this.sp2.destroy(), 
            this.sp3.destroy(), this.sp1 = null, this.sp2 = null, this.sp3 = null, this.scene3D.destroy(), 
            this.scene3D = null, this.ani1 = null;
        }
        init() {
            Da.loadFont(ul.FNT.FNT2, this.txtLv), this.img1.visible = !1, this.img2.visible = !1, 
            this.img3.visible = !1, this.txtName.text = A.getDataByKey(this.data).name, this.txtLv.text = A.getDataByKey(this.data).id.toString(), 
            this.timer.once(1e3, this, () => {
                this.efffect1.particleSystem.looping = !1, this.efffect1.particleSystem.stop(), 
                this.efffect1.active = !1, this.ani2.play(0, !1);
            }), this.frameLoop(1, this, this.update), this.create3D(), hl.platform != v.WX && hl.platform != v.QQ && (this.btnShare.visible = !1, 
            this.btnBack.x = 353.5);
        }
        update() {
            this.sp3 && this.sp3.transform.localRotationEulerY++;
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D());
            this.scene3D = e;
            var t = e.addChild(new Laya.Camera(0, .1, 100));
            t.transform.position = new Laya.Vector3(), t.transform.localPositionX -= 5.2, t.transform.localPositionY -= 2.3, 
            t.enableHDR = !1, t.clearFlag = Laya.CameraClearFlags.DepthOnly;
            var i = e.addChild(new Laya.DirectionLight());
            i.color = new Laya.Vector3(.6, .6, .6), i.transform.worldMatrix.setForward(new Laya.Vector3(0, 0, -.5));
            let a = Ri.playSynthesis1(e);
            this.efffect1 = a, this.efffect1.transform.localScaleX = 4, this.efffect1.transform.localScaleY = 4, 
            this.efffect1.transform.localScaleZ = 4, a.transform.localPositionZ -= 11;
            let s = Ri.playSynthesis2(e);
            this.efffect2 = s, this.efffect2.active = !1, s.transform.localPositionZ -= 11, 
            this.efffect2.transform.localScaleX = 6, this.efffect2.transform.localScaleY = 6, 
            this.efffect2.transform.localScaleZ = 6, this.sp1 = Te.onLyToCreateArm(this.data - 1, this.scene3D), 
            this.sp1.transform.localRotationEulerY = -90, this.sp1.transform.localScaleX = 6, 
            this.sp1.transform.localScaleY = 6, this.sp1.transform.localScaleZ = 6, this.sp1.transform.position = this.efffect1.transform.position.clone(), 
            this.sp1.transform.localPositionX += 5, this.sp2 = Te.onLyToCreateArm(this.data - 1, this.scene3D), 
            this.sp2.transform.localRotationEulerY = -90, this.sp2.transform.localScaleX = 6, 
            this.sp2.transform.localScaleY = 6, this.sp2.transform.localScaleZ = 6, this.sp2.transform.position = this.efffect1.transform.position.clone(), 
            this.sp2.transform.localPositionX -= 5, this.sp3 = Te.onLyToCreateArm(this.data, this.scene3D), 
            this.sp3.transform.localRotationEulerY = -90, this.sp3.transform.localScaleX = 6, 
            this.sp3.transform.localScaleY = 6, this.sp3.transform.localScaleZ = 6, this.sp3.transform.position = this.efffect1.transform.position.clone(), 
            this.sp3.active = !1, this.playAni();
        }
        playAni() {
            let e = this.sp1.transform, t = this.sp2.transform;
            this.sp3.transform;
            this.playTween(e), this.playTween(t);
        }
        playTween(e) {
            const t = e.localPositionX;
            Laya.Tween.to(e, {
                localRotationEulerX: -5
            }, 50, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(e, {
                    localRotationEulerX: 5
                }, 50, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(e, {
                        localRotationEulerX: -5
                    }, 50, null, Laya.Handler.create(this, () => {
                        Laya.Tween.to(e, {
                            localRotationEulerX: 5
                        }, 50, null, Laya.Handler.create(this, () => {
                            Laya.Tween.to(e, {
                                localRotationEulerX: -5
                            }, 50, null, Laya.Handler.create(this, () => {
                                Laya.Tween.to(e, {
                                    localRotationEulerX: 5
                                }, 50, null, Laya.Handler.create(this, () => {
                                    Laya.Tween.to(e, {
                                        localRotationEulerX: 0
                                    }, 50, null, Laya.Handler.create(this, () => {
                                        Laya.Tween.to(e, {
                                            localPositionX: t < 0 ? t - 2 : t + 2
                                        }, 80, null, Laya.Handler.create(this, () => {
                                            Laya.Tween.to(e, {
                                                localPositionX: t < 0 ? t + 4 : t - 4
                                            }, 200, null, Laya.Handler.create(this, () => {
                                                Laya.Tween.to(e, {
                                                    localPositionX: this.sp3.transform.position.x
                                                }, 700, null, Laya.Handler.create(this, () => {
                                                    Laya.Tween.clearAll(e), e.owner.active = !1, this.sp3 && (this.sp3.active || (il.playEffect(ml.NEWEQUIP), 
                                                    this.sp3.active = !0, this.imgCenter.alpha = 1, this.imgCenter.alpha = 1, this.btnBack.alpha = 1, 
                                                    this.btnShare.alpha = 1));
                                                }));
                                            }));
                                        }));
                                    }));
                                }));
                            }));
                        }));
                    }));
                }));
            }));
        }
        setEvent() {
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnShare.on(Laya.Event.CLICK, this, this.onBtnShare);
        }
        onBtnBack() {
            if (!q.getTouch()) return;
            hs.setfreeDiamondsRewards();
            let e = hs.curFreeDiamondsRewards;
            Bt.openFunction(Er.GET_DIAMONDS_REWARD, gr.REPLACE, ur.VIEW, St.DIAMOND, {
                reward: e,
                cb: function() {
                    Ts.synthesisViewCtrl.unlockNewArm();
                }
            });
        }
        onBtnShare() {
            q.getTouch() && j.shareMessage();
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.btnBack.y -= 30, this.btnShare.y -= 30, this.imgCenter.y -= 30);
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {
            this.btnShare.visible = !1, this.btnBack.x = 353;
        }
        setNativeAndroidPlatform() {
            this.btnShare.visible = !1, this.btnBack.x = 353;
        }
        setTTPlatform() {}
    }
    class un extends Ms {
        createView() {
            return this._viewCtrl = new gn(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "结算新枪支界面";
        }
        onEnter() {}
        onExit() {
            un.isNewEquip = !0;
        }
        onEnable() {
            j.showBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }
    un.isNewEquip = !1;
    class mn extends T.view.exit.ExitViewUI {
        constructor() {
            super(), this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            Rs.gameStop = !0, this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnOK.on(Laya.Event.CLICK, this, this.onBtnOK);
        }
        onDestroy() {
            this.btnBack = null, this.btnOK = null;
        }
        onBtnBack() {
            q.getTouch() && (Bt.closeFunction(), Rs.gameStop = !1);
        }
        onBtnOK() {
            q.getTouch() && (Bt.clean(), Ri.clean(), Rs.clean(), na.instance.clean(), Nt.getCurScene().setGameState(_s.MENU), 
            Rs.gameStop = !1, tl.getInstance().getGuide() <= Et.FINISH && Bt.triggerAutoOpen());
        }
    }
    class pn extends T.view.revive.GameOverViewUI {
        constructor() {
            super(), this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock(), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onDestroy() {
            this.btnBack = null;
        }
        onBtnBack() {
            q.getTouch() && (Bt.closeFunction(), Rs.gameStop = !1, Rs.gameOver = !0, Rs._isWin = !1);
        }
    }
    let yn = [ 30, 27, 28 ], In = [ 37, 43, 32 ], fn = [ 41, 21, 45 ];
    class Ln extends T.view.equipTry.EquipTryViewUI {
        constructor() {
            super(), this.isDown = !1, this.tryList = [], this.width = Laya.stage.width, this.height = Laya.stage.height, 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnBack1.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnNo.on(Laya.Event.CLICK, this, this.onBtnBack);
            let e = tl.getInstance().getSkinLib(), t = [], i = [ yn[Math.floor(P.random(yn.length, 0))], In[Math.floor(P.random(In.length, 0))], fn[Math.floor(P.random(fn.length, 0))] ];
            for (let a = 0; a < i.length; a++) {
                const s = i[a];
                let n = !1;
                for (let t = 0; t < e.length; t++) {
                    e[t] != s || (n = !0);
                }
                n || tl.getInstance().getEquipTryCount(s) < 10 && t.push(s);
            }
            if (t.length < 3) {
                let i = [];
                for (let t = 0; t < A.keys.length; t++) {
                    const a = A.keys[t];
                    let s = !1;
                    for (let t = 0; t < e.length; t++) {
                        e[t] != a || (s = !0);
                    }
                    s || tl.getInstance().getEquipTryCount(a) < 10 && i.push(a);
                }
                if (0 == i.length) ; else for (let e = 0; e < i.length; e++) {
                    const a = i[e];
                    t.push(a);
                }
            }
            if (t.length >= 3) {
                let e = q.getRandomIntArray(t.length, 0, 3);
                i.sort(function(e, t) {
                    return Math.random() > .5 ? -1 : 1;
                });
                for (let i = 0; i < e.length; i++) {
                    const a = t[e[i]];
                    this.tryList.push({
                        id: a,
                        isHave: !1
                    });
                }
            } else for (let e = 0; e < 3; e++) {
                const i = t[e];
                i ? this.tryList.push({
                    id: i,
                    isHave: !1
                }) : this.tryList.push({
                    id: A.keys[Math.floor(Math.random() * A.keys.length)],
                    isHave: !0
                });
            }
            this.setView(), hl.carelessCtrl() || (this.btnBack1.visible = !0, this.btnBack.visible = !1), 
            hl.platform != v.WX && hl.platform != v.WEB && hl.platform != v.QQ || (this.btnBack1.visible = !0, 
            this.btnBack.visible = !1, this.imgAd1.visible = !0, this.imgAd2.visible = !0, this.imgAd3.visible = !0, 
            this.btnAd1.getChildAt(2).visible = !1, this.btnAd2.getChildAt(2).visible = !1, 
            this.btnAd3.getChildAt(2).visible = !1, this.btnAd1.getChildAt(1).x = 71, this.btnAd2.getChildAt(1).x = 71, 
            this.btnAd3.getChildAt(1).x = 71), this.uiPlatformConfig();
        }
        setView() {
            for (let e = 0; e < this.tryList.length; e++) {
                const t = this.tryList[e];
                this["imgIcon" + (e + 1).toString()].skin = A.getDataByKey(t.id).icon, this["labelName" + (e + 1).toString()].text = A.getDataByKey(t.id).name, 
                t.isHave ? this["labelAd" + (e + 1).toString()].visible = !1 : this["labelAd" + (e + 1).toString()].text = "(" + tl.getInstance().getEquipTryCount(t.id) + "/10)", 
                this["btnAd" + (e + 1).toString()].on(Laya.Event.CLICK, this, this.onBtnAd, [ e + 1 ]), 
                this["imgIcon" + (e + 1).toString()].on(Laya.Event.CLICK, this, this.onBtnAd, [ e + 1 ]);
            }
        }
        onBtnBack() {
            q.getTouch() && (this.ani2.isPlaying || this.playEnd());
        }
        onBtnAd(e) {
            if (q.getTouch() && !this.ani2.isPlaying && !this.isDown) {
                console.log("index" + e), this.isDown = !0;
                var i = this;
                j.setEvent(function() {
                    i.isDown = !1;
                    let t = i.tryList[e - 1].id;
                    if (console.log("试用id" + t), tl.getInstance().addEquipTryCount(t), tl.getInstance().getEquipTryCount(t) >= 10) {
                        Ur.EQUIP.toString();
                        ls.getInstance().getEquip(t, function() {
                            Te.getTrialArm(t), i.playEnd();
                        });
                    } else Te.getTrialArm(t), i.playEnd();
                }, function() {
                    i.isDown = !1;
                }, t.EQUIP_TRY);
            }
        }
        endAni() {
            Bt.openFunction(Er.LOADING_FIGHT, gr.REPLACE, ur.VIEW, St.HIDE);
        }
        playEnd() {
            this.ani2.wrapMode = Laya.Animation.WRAP_REVERSE, this.ani2.play(0, !1), this.ani2.on(Laya.Event.COMPLETE, this, this.endAni);
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnAd1.getChildAt(2),
                type: 1
            }, {
                img: this.btnAd2.getChildAt(2),
                type: 1
            }, {
                img: this.btnAd3.getChildAt(2),
                type: 1
            } ]), hl.platform == v.TT && (this.btnNo.visible = !0, this.btnBack.visible = !1);
        }
    }
    class wn extends T.view.characterCtrl.RockerMoveViewUI {
        constructor(e) {
            super(), this.curTouchId = 0, this.isDown = !1, this.angle = -1, this.radians = Math.PI, 
            this.time = 0, this.vecDir = new Laya.Vector3(), this.dir = new Laya.Point(), this.globalToLocalPoint = new Laya.Point(), 
            this.frame = 0, this.isReset = !1, this.isStartRest = !1, this.keyCodeList = {}, 
            this.maxDistance = 0, this.touchRect = e, hl.platform == v.WEB_4399 && Laya.Browser.onPC ? (this.visible = !1, 
            Laya.stage.on(Laya.Event.KEY_DOWN, this, this.onKeyDown1), Laya.stage.on(Laya.Event.KEY_UP, this, this.onKeyUp1), 
            Laya.stage.on(Laya.Event.KEY_PRESS, this, this.onKeyPress1)) : (this.touchRect.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown), 
            this.touchRect.on(Laya.Event.MOUSE_OUT, this, this.onMouseUp), this.touchRect.on(Laya.Event.MOUSE_MOVE, this, this.onMove)), 
            hl.platform == v.WEB_4399 && Laya.Browser.onPC, this.originPiont = new Laya.Point(this.width / 2, this.height / 2);
        }
        onDestroy() {
            Laya.stage.off(Laya.Event.KEY_DOWN, this, this.onKeyDown1), Laya.stage.off(Laya.Event.KEY_PRESS, this, this.onKeyPress1), 
            Laya.stage.off(Laya.Event.KEY_UP, this, this.onKeyUp1), Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.onBtnDown);
        }
        onBtnDown() {
            Laya.Browser.document.querySelector("canvas").requestPointerLock();
        }
        onMouseDown(e) {
            console.log("点击移动-----:", Ts.handleType), this.ani1.stop(), Ts.touchCtrl(e.touchId, Yt.ADD);
            let t = Bt.getFunctionViewCtrl(Er.GAME);
            t.listArm.hitTestPoint(e.stageX, e.stageY) || (Ts.handleType == Pt.ONLYMOVE || Ts.handleType == Pt.MOVEANDROT_TOUCHLEFTAFTER ? (console.log("可以移动"), 
            this.curTouchId = e.touchId, this.pos(Laya.stage.mouseX - this.width / 2, Laya.stage.mouseY - this.height / 2), 
            this.imgKnob.pos(this.width / 2, this.height / 2), this.visible = !0, this.angle = 0, 
            this.setOrientation(), t.hideMoveGuide()) : Ts.handleType == Pt.ONLYROT && (this.visible = !1));
        }
        onMouseUp(e) {
            console.log("取消移动:", Ts.handleType), Ts.handleType != Pt.ONLYROT && e.touchId == this.curTouchId && (Rs.playerLogicalBaseLayer.setIsMoving = !1, 
            console.log("可以取消移动"), this.visible = !1, this.radians = this.angle = -1, this.dir.x = 0, 
            this.dir.y = 0, this.setOrientation());
        }
        onMove(e) {
            if (Ts.touchCtrl(e.touchId, Yt.NORMAL), Ts.handleType == Pt.ONLYROT) return;
            if (e.touchId != this.curTouchId) return;
            Rs.playerLogicalBaseLayer.setIsMoving = !0, this.globalToLocalPoint.x = Laya.stage.mouseX, 
            this.globalToLocalPoint.y = Laya.stage.mouseY;
            let t = this.globalToLocal(this.globalToLocalPoint, !1);
            this.imgKnob.pos(t.x, t.y), this.deltaX = t.x - this.originPiont.x, this.deltaY = t.y - this.originPiont.y;
            var i = this.deltaX * this.deltaX, a = this.deltaY * this.deltaY;
            if (this.angle = 180 * Math.atan2(this.deltaX, this.deltaY) / Math.PI, this.angle < 0 && (this.angle += 360), 
            this.angle = Math.round(this.angle), this.radians = Math.PI / 180 * this.angle, 
            i + a >= 400) {
                var s = Math.floor(20 * Math.sin(this.radians) + this.originPiont.x), n = Math.floor(20 * Math.cos(this.radians) + this.originPiont.y);
                this.imgKnob.pos(s, n);
            } else this.imgKnob.pos(t.x, t.y);
            this.setOrientation();
        }
        setOrientation() {
            if (-1 == this.radians) return void (Rs.playerLogicalBaseLayer.setSpeed = 0);
            Rs.playerLogicalBaseLayer.setSpeed = .12;
            let e = 0, t = 0, i = this.angle + Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getOnceChild().transform.localRotationEulerY, a = Math.PI / 180 * i;
            e = -Math.sin(a) * Rs.playerLogicalBaseLayer.getSpeed(), t = -Math.cos(a) * Rs.playerLogicalBaseLayer.getSpeed(), 
            Rs.playerLogicalBaseLayer.setMyOrientation(e, 0, t);
        }
        onEnable() {}
        onDisable() {}
        onKeyDown1(e) {
            switch (this.keyCodeList[e.keyCode] = 1, e.keyCode) {
              case 65:
                this.dir.x = -1, this.dir.y = 0, this.keyCodeList[68] && (this.dir.x = 0), this.keyCodeList[87] && (this.dir.y = -1), 
                this.keyCodeList[83] && (this.dir.y = 1);
                break;

              case 87:
                this.dir.x = 0, this.dir.y = -1, this.keyCodeList[65] && (this.dir.x = -1), this.keyCodeList[68] && (this.dir.x = 1), 
                this.keyCodeList[83] && (this.dir.y = 0);
                break;

              case 68:
                this.dir.x = 1, this.dir.y = 0, this.keyCodeList[87] && (this.dir.y = -1), this.keyCodeList[65] && (this.dir.x = 0), 
                this.keyCodeList[83] && (this.dir.y = 1);
                break;

              case 83:
                this.dir.x = 0, this.dir.y = 1, this.keyCodeList[65] && (this.dir.x = -1), this.keyCodeList[68] && (this.dir.x = 1), 
                this.keyCodeList[87] && (this.dir.y = 0);
            }
            0 == this.dir.x && 0 == this.dir.y || (Ts.touchCtrl(1111, Yt.ADD), Ts.touchCtrl(e.touchId, Yt.NORMAL), 
            Rs.playerLogicalBaseLayer.setIsMoving = !0, Rs.playerLogicalBaseLayer.setSpeed = .12, 
            this.angle = 180 * Math.atan2(this.dir.x, this.dir.y) / Math.PI, this.angle < 0 && (this.angle += 360), 
            this.angle = Math.round(this.angle), this.radians = Math.PI / 180 * this.angle, 
            this.setOrientation());
        }
        onKeyPress1(e) {
            switch (this.keyCodeList[e.keyCode] = 1, e.keyCode) {
              case 65:
                this.dir.x = -1, this.dir.y = 0, this.keyCodeList[68] && (this.dir.x = 0), this.keyCodeList[87] && (this.dir.y = -1), 
                this.keyCodeList[83] && (this.dir.y = 1);
                break;

              case 87:
                this.dir.x = 0, this.dir.y = -1, this.keyCodeList[65] && (this.dir.x = -1), this.keyCodeList[68] && (this.dir.x = 1), 
                this.keyCodeList[83] && (this.dir.y = 0);
                break;

              case 68:
                this.dir.x = 1, this.dir.y = 0, this.keyCodeList[87] && (this.dir.y = -1), this.keyCodeList[65] && (this.dir.x = 0), 
                this.keyCodeList[83] && (this.dir.y = 1);
                break;

              case 83:
                this.dir.x = 0, this.dir.y = 1, this.keyCodeList[65] && (this.dir.x = -1), this.keyCodeList[68] && (this.dir.x = 1), 
                this.keyCodeList[87] && (this.dir.y = 0);
            }
            0 == this.dir.x && 0 == this.dir.y || (Ts.touchCtrl(e.touchId, Yt.NORMAL), Rs.playerLogicalBaseLayer.setIsMoving = !0, 
            Rs.playerLogicalBaseLayer.setSpeed = .12, this.angle = 180 * Math.atan2(this.dir.x, this.dir.y) / Math.PI, 
            this.angle < 0 && (this.angle += 360), this.angle = Math.round(this.angle), this.radians = Math.PI / 180 * this.angle, 
            this.setOrientation());
        }
        onKeyUp1(e) {
            switch (console.log(e.keyCode), this.keyCodeList[e.keyCode] = 0, e.keyCode) {
              case 65:
                this.dir.x = 0, this.dir.y = 0, this.keyCodeList[68] && (this.dir.x = 1), this.keyCodeList[87] && (this.dir.y = -1), 
                this.keyCodeList[83] && (this.dir.y = 1);
                break;

              case 87:
                this.dir.x = 0, this.dir.y = 0, this.keyCodeList[65] && (this.dir.x = -1), this.keyCodeList[68] && (this.dir.x = 1), 
                this.keyCodeList[83] && (this.dir.y = 1);
                break;

              case 68:
                this.dir.x = 0, this.dir.y = 0, this.keyCodeList[87] && (this.dir.y = -1), this.keyCodeList[65] && (this.dir.x = -1), 
                this.keyCodeList[83] && (this.dir.y = 1);
                break;

              case 83:
                this.dir.x = 0, this.dir.y = 0, this.keyCodeList[65] && (this.dir.x = -1), this.keyCodeList[68] && (this.dir.x = 1), 
                this.keyCodeList[87] && (this.dir.y = -1);
            }
            this.keyCodeList[65] || this.keyCodeList[87] || this.keyCodeList[68] || this.keyCodeList[83] ? (this.angle = 180 * Math.atan2(this.dir.x, this.dir.y) / Math.PI, 
            this.angle < 0 && (this.angle += 360), this.angle = Math.round(this.angle), this.radians = Math.PI / 180 * this.angle, 
            this.setOrientation()) : (this.dir.x = 0, this.dir.y = 0, Rs.playerLogicalBaseLayer.setIsMoving = !1, 
            Rs.playerLogicalBaseLayer.setSpeed = 0);
        }
    }
    class bn extends T.view.game.SingleBroadcastUI {
        constructor(e, t, i, a, s, n, o) {
            super(), this.killerLogic = null, this.txtKiller.text = i, this.txtBeKiller.text = a, 
            this.txtKiller.color = e ? "#698DEF" : "#FF351A", this.txtBeKiller.color = t ? "#698DEF" : "#FF351A", 
            console.log("killer:", i, "beKiller:", a), "我" == i && (this.txtKiller.color = "#FFFFFF"), 
            "我" == a && (this.txtBeKiller.color = "#FFFFFF"), this.killerLogic = o, this.killerLogic.getArmCtrl() && (this.imgIcon.skin = this.killerLogic.getArmCtrl().getIcon()), 
            n ? this.update() : this.boxHead.visible = !1;
        }
        onDestroy() {
            this.txtBeKiller = null, this.txtKiller = null;
        }
        setView(e, t, i, a, s, n, o) {
            this.txtKiller.text = i, this.txtBeKiller.text = a, this.txtKiller.color = e ? "#698DEF" : "#FF351A", 
            this.txtBeKiller.color = t ? "#698DEF" : "#FF351A", console.log("killer:", i, "beKiller:", a), 
            "我" == i && (this.txtKiller.color = "#FFFFFF"), "我" == a && (this.txtBeKiller.color = "#FFFFFF"), 
            this.killerLogic = o, this.killerLogic.getArmCtrl() && (this.imgIcon.skin = this.killerLogic.getArmCtrl().getIcon()), 
            n ? this.update() : this.boxHead.visible = !1;
        }
        update() {
            this.boxHead.visible = !0, 1 == this.killerLogic.doubleClasses ? this.imgHeadShot.skin = ul.HEADSHOT_UI.CLASS_1 : 2 == this.killerLogic.doubleClasses && (this.imgHeadShot.skin = ul.HEADSHOT_UI.CLASS_2);
            for (let e = 1; e <= 6; e++) {
                let t = this.boxHead.getChildByName(e.toString());
                e <= this.killerLogic.headShotHit ? t.alpha = 1 : t.alpha = 0;
            }
            if (!hl.getViolenceCtrl()) {
                let e = this.imgHeadShot.skin;
                e = e.replace(".png", "_4399.png"), this.imgHeadShot.skin = e;
            }
        }
    }
    class En extends T.view.game.BroadcastViewUI {
        constructor() {
            super(), this.broadcastList = [];
        }
        onAwake() {
            this.timerLoop(1e4, this, this.update), L.register(w.KILL_BROADCAST, this.refreshKillBroadcast, this);
        }
        onDestroy() {
            this.timer.clearAll(this), this.broadcastList = null, L.unregisterByEventId(w.KILL_BROADCAST);
        }
        update() {
            if (0 == this.broadcastList.length) return;
            this.broadcastList[0].visible = !1;
            let e = this.broadcastList[this.broadcastList.length - 1].y, t = this.broadcastList[0];
            for (let e = 0; e < this.broadcastList.length; e++) 0 != e && (this.broadcastList[e - 1] = this.broadcastList[e], 
            this.broadcastList[e - 1].y = 40 * (e - 1));
            this.broadcastList[this.broadcastList.length - 1] = t, this.broadcastList[this.broadcastList.length - 1].y = e;
        }
        refreshKillBroadcast(e) {
            if (0 == this.broadcastList.length) {
                let t;
                t = new bn(e.killerIsPlayer, e.beKillerIsPlayer, e.killer, e.beKiller, e.armType, e.isHitLocation, e.killerLogic), 
                this.addChild(t), this.broadcastList.push(t);
            } else if (this.broadcastList[this.broadcastList.length - 1].visible) if (4 == this.broadcastList.length) {
                let t = this.broadcastList[this.broadcastList.length - 1].y, i = this.broadcastList[0];
                for (let e = 0; e < this.broadcastList.length; e++) 0 != e && (this.broadcastList[e - 1] = this.broadcastList[e], 
                this.broadcastList[e - 1].y = 40 * (e - 1));
                this.broadcastList[this.broadcastList.length - 1] = i, this.broadcastList[this.broadcastList.length - 1].y = t, 
                this.broadcastList[this.broadcastList.length - 1].setView(e.killerIsPlayer, e.beKillerIsPlayer, e.killer, e.beKiller, e.armType, e.isHitLocation, e.killerLogic);
            } else {
                let t;
                (t = new bn(e.killerIsPlayer, e.beKillerIsPlayer, e.killer, e.beKiller, e.armType, e.isHitLocation, e.killerLogic)).y = 40 + 40 * (this.broadcastList.length - 1), 
                this.addChild(t), this.broadcastList.push(t);
            } else this.broadcastList[this.broadcastList.length - 1].visible = !0, this.broadcastList[this.broadcastList.length - 1].setView(e.killerIsPlayer, e.beKillerIsPlayer, e.killer, e.beKiller, e.armType, e.isHitLocation, e.killerLogic);
        }
    }
    class Cn extends T.view.game.MapAirDropUI {
        constructor(e) {
            super(), this.temV3 = new Laya.Vector3(), this.vec2Tmp0 = new Laya.Vector2(), this.vec2Tmp1 = new Laya.Vector2(), 
            this.root = e, Laya.timer.frameLoop(1, this, this.update), this.anchorX = .5, this.anchorY = 0;
        }
        init(e) {
            this.target = e, this.visible = !0;
        }
        onDestroy() {
            At.autoUnlinkUIReference(this), this.root = null, this.vec2Tmp0 = null, this.vec2Tmp1 = null;
        }
        update() {
            if (Rs.gameOver) return;
            if (!this.parent) return;
            if (!this.target) return;
            if (!this.target.isActive) return this.removeSelf(), this.visible = !1, void (this.target = null);
            this.imgIcon.visible = !1, this.imgLight.visible = !1, this.imgTag.visible = !1, 
            this.rotation = 0, this.temV3 = this.target.vecPos.clone();
            let e = -this.temV3.x / 44 * this.root.imgMap.width / 2 + this.root.imgMap.x, t = -this.temV3.z / 46 * this.root.imgMap.height / 2 + this.root.imgMap.y;
            if (this.vec2Tmp0.x = e - this.root.boxMapCell.width / 2, this.vec2Tmp0.y = t - this.root.boxMapCell.height / 2, 
            this.x = e, this.y = t, t >= this.root.boxMapCell.height ? (t = this.root.boxMapCell.height, 
            this.imgTag.visible = !0, this.vec2Tmp1.x = 0, this.vec2Tmp1.y = -1) : t <= 0 && (t = 0, 
            this.imgTag.visible = !0, this.vec2Tmp1.x = 0, this.vec2Tmp1.y = -1), e < 0 ? (this.vec2Tmp1.x = 0, 
            this.vec2Tmp1.y = -1, this.imgTag.visible = !0, e = 0) : e > this.root.boxMapCell.width && (this.vec2Tmp1.x = 0, 
            this.vec2Tmp1.y = -1, this.imgTag.visible = !0, e = this.root.boxMapCell.width), 
            this.imgTag.visible) {
                this.x = e, this.y = t;
                let i = q.angle2(this.vec2Tmp0, this.vec2Tmp1);
                this.rotation = -i;
            } else this.imgIcon.visible = !0, this.imgLight.visible = !0;
        }
    }
    class vn extends T.view.game.MatchSituationUI {
        constructor() {
            super(), this.centerX = 0, this.centerY = -264;
        }
        onAwake() {
            L.register(w.MATCH_KILL, this.refreshData, this);
        }
        onDestroy() {
            this.txtContent = null, this.txtData = null, L.unregisterByEventId(w.MATCH_KILL);
        }
        refreshData(e) {
            this.ani1.play(0, !1), e.type == Wr.ENEMY ? (this.txtContent.text = "敌方剩余分数：", this.txtData.text = (Ba.targetKillSore - Rs.enemyKillScore).toString()) : e.type == Wr.FRIEND && (this.txtContent.text = "我方剩余分数：", 
            this.txtData.text = (Ba.targetKillSore - Rs.ourKillScore).toString());
        }
    }
    class xn extends T.view.game.PlayerKillBroadcastUI {
        constructor() {
            if (super(), this.alpha = 0, !Rs.targetLogicalBaseLayer) return;
            let e = "击杀了";
            hl.getViolenceCtrl() || (e = "击倒了"), this.txttKill.text = "你使用" + Rs.playerLogicalBaseLayer.getArmCtrl().getArmName() + e + Rs.targetLogicalBaseLayer.gameName;
        }
        onAwake() {
            L.register(w.PLAYER_KILL_DETAILS, this.setView, this);
        }
        onDestroy() {
            Laya.Tween.clearAll(this), this.txttKill = null, L.unregisterByEventId(w.PLAYER_KILL_DETAILS);
        }
        setView() {
            if (!Rs.targetLogicalBaseLayer) return;
            if (Mt.mode == Tt.BIOCHEMISTRY) return;
            let e = "击杀了";
            hl.getViolenceCtrl() || (e = "击倒了"), this.txttKill.text = "你使用" + Rs.playerLogicalBaseLayer.getArmCtrl().getArmName() + e + Rs.targetLogicalBaseLayer.gameName, 
            Laya.Tween.clearAll(this), Laya.Tween.to(this, {
                alpha: 1
            }, 350, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this, {
                    alpha: 0
                }, 350, null, Laya.Handler.create(this, () => {}), 2e3);
            }));
        }
    }
    class Bn extends T.view.game.RescuingItemUI {
        constructor() {
            super(), this.isDoing = !1, this.coutDown = 2e3, this.isInterrupt = !1, this.fixCountDown = 2e3;
        }
        onAwake() {
            this.sprPie.removeSelf();
        }
        fire(e) {
            if (this.isDoing) return !1;
            this.isDoing = !0, this.txtTime.visible = !0, this.imgMask.visible = !0, this.coutDown = this.fixCountDown, 
            this.txtTime.text = Math.ceil(this.coutDown / 1e3).toString() + "s", this.drawMask(), 
            this.box.gray = !0, Laya.timer.loop(20, this, function() {
                this.isInterrupt ? Laya.timer.clearAll(this) : (this.coutDown -= 20, this.txtTime.text = Math.ceil(this.coutDown / 1e3).toString() + "s", 
                this.drawMask(), this.coutDown <= 0 && (this.isDoing = !1, Laya.timer.clearAll(this), 
                this.imgMask.visible = !0, this.box.gray = !1, this.isInterrupt = !1, e()));
            });
        }
        drawMask() {
            this.sprPie.graphics.clear(), this.sprPie.graphics.drawPie(32, 32, 200, 270, 360 * (1 - (this.coutDown - this.fixCountDown) / this.fixCountDown) - 90, "#ff0000"), 
            this.imgMask.mask = null, this.imgMask.mask = this.sprPie;
        }
        resetCoutDown() {
            this.coutDown = this.fixCountDown, this.isDoing = !1;
        }
    }
    class An extends T.view.game.ZombieComingViewUI {
        constructor() {
            super(), this.anchorX = .5, this.anchorY = .5, this.visible = !1, this.x = Laya.stage.width / 2, 
            this.y = Laya.stage.height / 2 - 20;
        }
        onAwake() {
            this.setData();
        }
        onDestroy() {
            this.imgZomBieComingBg = null, this.imgZombieComing = null;
        }
        setData() {
            1 == ja.round ? this.imgZombieComing.skin = ul.ZOMBIEMODE_GAMING_UI.ROUND_UI.ONE : 2 == ja.round ? this.imgZombieComing.skin = ul.ZOMBIEMODE_GAMING_UI.ROUND_UI.TWO : 3 == ja.round && (this.imgZombieComing.skin = ul.ZOMBIEMODE_GAMING_UI.ROUND_UI.THREE);
        }
        start() {
            this.visible = !0, this.ani1.play(0, !0);
        }
        stop() {
            this.timer.once(2e3, this, function() {
                this.visible = !1, this.ani1.stop();
            });
        }
    }
    class _n extends T.view.game.GameViewUI {
        constructor() {
            super(), this.playerKillBroadcastCtrl = null, this.matchSituationCtrl = null, this.isTouchRightAttack = !1, 
            this.isTouchLeftAttack = !1, this.curIndex = 0, this.curTouchId = 0, this.ZomBieComingView = null, 
            this.rescuingItemCtrl = null, this.touchNum = 0, this.moveCtrl = null, this.fingerCtrl = null, 
            this.step = 1, this.isToGudeAttack = !1, this.isOpenGun = !1, this.isAutoOpen = !1, 
            this.testIndex = 1, this.openAirDropValue = 0, this.temPos = new Laya.Vector3(), 
            this.airDropTagList = [], this.nonoArmCount = 0, this.addArmCount = 0, this.isStaring = !0, 
            this.lastArmIndex = 0, this.isCameraMove = !1, this.isOpenCamera = !1, this.isHideImgEnemy = !1, 
            this.height = this.stage.height, this.width = this.stage.width, this.canvas = Laya.Browser.document.querySelector("canvas"), 
            document.addEventListener("pointerlockchange", this.lockChangeAlert, !1), document.addEventListener("mozpointerlockchange", this.lockChangeAlert, !1);
        }
        onAwake() {
            hl.platform == v.VIVO && il.playEffect(ml.KILL_HEADSHOT, 1, !1, .1), this.maxHpWigth = this.imgEnemyHp.width, 
            this.quasiCenter1.visible = !1, Mt.mode == Tt.SKILL_MODE && (this.boxWarSituation.x = Laya.stage.width - this.boxWarSituation.width - 93, 
            this.spMask = new Laya.Sprite(), this.boxMap.visible = !0), this.txtCurTime.visible = !1, 
            hl.isDebug && Mt.mode == Tt.SKILL_MODE ? this.btnTestChange.visible = !0 : this.btnTestChange.visible = !1, 
            Mt.mode == Tt.SKILL_MODE ? this.listAddArm.visible = !0 : this.listAddArm.visible = !1, 
            this.btnBack.visible = !1, tl.getInstance().isNew && Ts.gameNum <= 3 && (xt.reportNewPlayrStart(Ts.gameNum), 
            Laya.timer.loop(3e3, this, function() {
                if (Rs.enemyKillScore < .5 * Rs.ourKillScore) {
                    Rs.enemyKillScore++;
                    for (let e = 0; e < Rs.logicalBaseLayer.length; e++) {
                        let t = Rs.logicalBaseLayer[e];
                        if (t.getRoleType() == Mr.TYPE_1) {
                            t.score++, t.playerKillCount++;
                            break;
                        }
                    }
                    this.txtCurEnePro.text = Rs.enemyKillScore.toString();
                }
            }));
        }
        start() {
            0 == jt.curDifficult ? (console.log("难度等级：【容易】"), this.txtCurDiff.text = "难度等级：【容易】") : 1 == jt.curDifficult ? (console.log("难度等级：【正常】"), 
            this.txtCurDiff.text = "难度等级：【正常】") : 2 == jt.curDifficult ? (console.log("难度等级：【偏难】"), 
            this.txtCurDiff.text = "难度等级：【偏难】") : 3 == jt.curDifficult && (console.log("难度等级：【困难】"), 
            this.txtCurDiff.text = "难度等级：【困难】"), this.init(), this.setData(), this.setBtnEvent(), 
            this.setGameEvent(), hl.platform == v.WEB_4399 && Laya.Browser.onPC && (Rs.fisrtPoint = null, 
            Rs.playerLogicalBaseLayer.setMouseX = null, Rs.playerLogicalBaseLayer.setMouseY = null, 
            this.btnJump.visible = !1, this.btnRightAttack.visible = !1, this.btnLeftAttack.visible = !1, 
            this.btnCloseMirror.alpha = 0, this.btnLeftAttack.alpha = 0, this.btnLeftAttack.off(Laya.Event.MOUSE_DOWN, this, this.onBtnLeftAttackDown), 
            this.btnAmmunitionChange.visible = !1, this.btnGiveUp.visible = !1, this.btnConvenient.visible = !1, 
            Laya.stage.on(Laya.Event.KEY_DOWN, this, this.onKeyDown), this.onBtnAutoAttack());
            let e = this;
            this.timer.frameLoop(1, this, () => {
                Rs.gameOver || (this.isTouchRightAttack && Rs.playerLogicalBaseLayer.getArmCtrl() && 3 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() && (Rs.playerLogicalBaseLayer.isStartAttack || Rs.playerLogicalBaseLayer.isOpenMioing || this.isAutoOpen || (this.isAutoOpen = !0, 
                e.attack())), Rs.targetLogicalBaseLayer ? this.setEnemyHp(Rs.targetLogicalBaseLayer) : this.hideEnemyHp(), 
                Mt.mode == Tt.SKILL_MODE && (this.openAirDropValue > 0 ? (this.spMask.graphics.clear(), 
                this.spMask.graphics.drawPie(this.imgAirDropOpenProgress.width / 2, this.imgAirDropOpenProgress.height / 2, 200, -90, 360 * Math.min(1, this.openAirDropValue) - 90, "#ff0000"), 
                this.imgAirDropOpenProgress.mask = null, this.imgAirDropOpenProgress.mask = this.spMask, 
                this.boxAirDrop.visible = !0) : this.boxAirDrop.visible = !1, this.imgPlayer.rotation = -Rs.playerLogicalBaseLayer.getEulerAngle().y, 
                this.imgMap.x = 116 + Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3().x / 44 * this.imgMap.width / 2, 
                this.imgMap.y = 109 + Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3().z / 46 * this.imgMap.height / 2, 
                Nt.getCurScene().isShowUnder ? this.imgMap1.visible = !0 : this.imgMap2.visible = !0));
            });
        }
        onBtnDown(e = !1) {
            Bt.funcList.length > 1 && 0 == e || (console.log("锁定鼠标"), window.focus(), this.canvas && (this.canvas.requestPointerLock(), 
            this.canvas.removeEventListener("mousemove", this.mouseMove), this.canvas.addEventListener("mousemove", this.mouseMove, !1)));
        }
        lockChangeAlert() {
            document.pointerLockElement === this.canvas || (Laya.Browser.document.mozPointerLockElement, 
            this.canvas);
        }
        mouseMove(e) {
            let t = {
                stageX: .7 * e.movementX,
                stageY: .7 * e.movementY
            };
            Rs.playerLogicalBaseLayer.setDirection(null, t);
        }
        onKeyDown(e) {
            switch (e.keyCode) {
              case 32:
                Rs.playerLogicalBaseLayer.getPresentationBaseLayer().jump();
                break;

              case 81:
                this.onBtnConvenient();
                break;

              case 82:
                this.onBtnAmmunitionChange();
                break;

              case 71:
                this.onBtnGiveUp();
                break;

              case 69:
                this.onBtnRescue();
                break;

              case 192:
                this.testIndex -= 1, this.testIndex < 0 && (this.testIndex = Se.keys.length - 1), 
                this.testIndex = this.testIndex % Se.keys.length, Rs.playerLogicalBaseLayer.pickUpTheGunById(Se.keys[this.testIndex], !0);
            }
            if (e.keyCode <= 57 && e.keyCode > 47) {
                (48 == e.keyCode ? 10 : e.keyCode - 48) <= this.listArm.dataSource.length && (Rs.playerLogicalBaseLayer && (Rs.playerLogicalBaseLayer.isOpenMioing || (Rs.playerLogicalBaseLayer.setIsTouchAttack = !1)), 
                Rs.playerLogicalBaseLayer.isOpenMioing || (48 == e.keyCode ? this.onArmSelect(9) : (console.log("武器索引:", e.keyCode - 49), 
                this.onArmSelect(e.keyCode - 49))));
            }
        }
        setNewPlayerArm() {
            let e = this;
            if (tl.getInstance().isNew && Ts.gameNum <= 3 && Mt.mode != Tt.SKILL_MODE && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.KNIFEWARMODE) {
                hl.getNewPlayerTryGun()[Ts.gameNum - 1] ? (Rs.gameStop = !0, Bt.openFunction(Er.NEWPLAYERTRYARM, gr.COVER, ur.WINDOW, St.HIDE, {
                    cb: function(t) {
                        Rs.playerLogicalBaseLayer.getSuperArmByNew(t), ol.startRecordGame(function() {
                            console.log("录屏失败");
                        }), Mt.mode != Tt.BIOCHEMISTRY && e.modeFunc();
                    }
                })) : e.modeFunc();
            } else tl.getInstance().isNew && Ts.gameNum <= 3 ? e.modeFunc() : hl.platform == v.WX || hl.platform == v.WEB || hl.platform == v.WEB_4399 ? Mt.mode != Tt.SKILL_MODE && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.KNIFEWARMODE ? Bt.openFunction(Er.INFINITY_AWARD, gr.COVER, ur.WINDOW, St.HIDE) : e.modeFunc() : Mt.mode != Tt.BIOCHEMISTRY && e.modeFunc(), 
            ol.startRecordGame(function() {
                console.log("录屏失败");
            });
        }
        onDestroy() {
            this.timer.clearAll(this), this.txtCurEnePro = null, this.txtCurFriPro = null, this.txtCurTask = null, 
            this.txtCurTime = null, this.txtHP = null, this.txtMySelfWarSituation = null, this.boxCenter = null, 
            this.boxWarSituation = null, this.matchSituationCtrl = null, this.playerKillBroadcastCtrl = null, 
            this.imgHP = null, this.imgMirror = null, Laya.stage.off(Laya.Event.KEY_DOWN, this, this.onKeyDown), 
            this.canvas && (this.canvas.removeEventListener("mousemove", this.mouseMove), this.canvas.removeEventListener("mouseup", this.onBtnLeftAttackUp), 
            this.canvas.removeEventListener("mousedown", this.onBtnLeftAttackDown)), L.unregisterByEventId(w.KILL), 
            L.unregisterByEventId(w.REFRESH_PLAYER_HP_UI), L.unregisterByEventId(w.PLAYER_WAR_SITUATION), 
            L.unregisterByEventId(w.REFRESH_MAIN_ARM), L.unregisterByEventId(w.REFRESH_PLAYER_ARMOR_UI);
        }
        init() {
            console.log("当前游戏内部指引步骤：", tl.getInstance().getGuide()), this.fingerCtrl = ns.createFingerAniCtrl(this), 
            il.stopBGM(), this.modelCtrl(), this.setMirrorScale(), Rs.addHead(), Laya.MouseManager.multiTouchEnabled = !0, 
            this.playerKillBroadcastCtrl = new xn(), this.addChild(this.playerKillBroadcastCtrl), 
            this.playerKillBroadcastCtrl.centerX = 0, this.playerKillBroadcastCtrl.bottom = 145;
            let e = new wn(this);
            e.x = e.width + 100, e.y = this.stage.height - e.height - 100, this.boxJoystick.addChild(e), 
            this.moveCtrl = e, this.setGuide(), this.boxWarSituation.addChild(new En()), this.matchSituationCtrl = new vn(), 
            this.addChild(this.matchSituationCtrl);
            let t = "击杀:";
            hl.getViolenceCtrl() || (t = "击倒:"), this.txtMySelfWarSituation.text = t + 0 + "  被淘汰：0", 
            Mt.mode == Tt.BIOCHEMISTRY && (this.txtPlayerZombieKillNum.text = t + 0);
        }
        setGuide() {
            if (tl.getInstance().getGuide() != Et.FINISH && tl.getInstance().getGuide() != Et.MAX) if (1 == this.step) console.log("设置移动指引"), 
            this.fingerCtrl.stop(), this.moveCtrl.ani1.play(0, !1); else if (2 == this.step) {
                console.log("设置攻击指引"), this.fingerCtrl.visible = !0;
                let e = new Laya.Point(this.btnRightAttack.width / 2, this.btnRightAttack.height / 2), t = this.btnRightAttack.localToGlobal(e);
                this.setGudePos(t), this.fingerCtrl.play();
            }
        }
        hideMoveGuide() {
            1 == this.step && (this.fingerCtrl && (this.fingerCtrl.visible = !1), this.step++);
        }
        hideAttackGuide() {
            this.isToGudeAttack && 2 == this.step && (this.fingerCtrl && (this.fingerCtrl.visible = !1), 
            this.step++);
        }
        setGudePos(e) {
            this.fingerCtrl.visible = !0, this.fingerCtrl.play(), this.fingerCtrl.x = e.x, this.fingerCtrl.y = e.y;
        }
        modelCtrl() {
            if (this.btnRescue.visible = !1, this.rescuing.visible = !1, this.boxTopBiochemical.visible = !1, 
            this.boxTopNonBiochemical.visible = !1, this.boxLeftBiochemical.visible = !1, this.boxLeftNonBiochemical.visible = !1, 
            this.txtTeamDown.visible = !1, this.txtZomBieAppearDown.visible = !1, this.txtZomBieAppearDown.x = this.stage.width / 2, 
            this.txtZomBieAppearDown.y = this.stage.height / 2 - 70, Mt.mode == Tt.ONEVSONEMODE || Mt.mode == Tt.SNIPERMODE ? (this.btnGiveUp.visible = !0, 
            this.btnConvenient.visible = !1) : (this.btnConvenient.visible = !0, this.btnGiveUp.visible = !1), 
            Mt.mode == Tt.BIOCHEMISTRY) {
                if (this.boxTopBiochemical.visible = !0, !hl.getViolenceCtrl()) {
                    let e = this.imgHead.skin;
                    e = e.replace(".png", "_4399.png"), this.imgHead.skin = e;
                }
                this.boxLeftBiochemical.visible = !0, this.imgZombieTimeBg.visible = !1, this.ZomBieComingView = new An(), 
                this.addChild(this.ZomBieComingView), this.zomBieComingDownTime(2e3), Wt.startGameTime(this.txtZombieDownTime), 
                this.rescuingItemCtrl = new Bn(), this.rescuing.addChild(this.rescuingItemCtrl), 
                this.rescuingItemCtrl.anchorX = .5, this.rescuingItemCtrl.anchorY = .5, this.rescuingItemCtrl.x = this.rescuing.width / 2, 
                this.rescuingItemCtrl.y = this.rescuing.height / 2, Rs.isWarmUp = !1;
            } else Rs.gameStop = !0;
        }
        modeFunc() {
            if (Rs.gameStop = !1, hl.getWarmUp()) {
                let e = this, t = 15;
                kt.isCloseAILogic && (t = 1), e.txtWarmUp.text = "热身时间 " + t + "s", this.isStaring = !1, 
                e.timer.loop(1e3, e, function cd() {
                    1 == t && (e.gameStart(), e.txtWarmUp.text = "热身时间 " + t + "s", e.timer.clear(e, cd)), 
                    t--, e.txtWarmUp.text = "热身时间 " + t + "s";
                }), e.txtCurTask.text = Ba.targetKillSore.toString(), e.boxTopNonBiochemical.visible = !0, 
                e.boxLeftNonBiochemical.visible = !0;
            } else this.isStaring = !1, this.txtCurTask.text = Ba.targetKillSore.toString(), 
            this.boxTopNonBiochemical.visible = !0, this.boxLeftNonBiochemical.visible = !0, 
            this.gameStart();
        }
        gameStart() {
            this.isStaring = !0, Rs.playerLogicalBaseLayer.IsDie = !0, Rs.playerLogicalBaseLayer.directRevive(function() {}), 
            Rs.playerLogicalBaseLayer.setHP = Rs.playerLogicalBaseLayer.getMaxHP(), L.notify(w.REFRESH_PLAYER_HP_UI), 
            Ht.resetAllNodeUse();
            let e = 3;
            this.txtTeamDown.visible = !0, this.txtTeamDown.text = e.toString(), this.imgWarmUp.visible = !1, 
            Rs.warmUpAfterToSetPos(), il.playEffect(ml.GAME_DOWN_START.ROOT + e.toString() + ".mp3"), 
            this.timer.loop(1e3, this, function cd() {
                1 == e && (il.playEffect(ml.GAME_DOWN_START.START), this.txtTeamDown.visible = !1, 
                this.ani6.play(0, !1), Rs.playerLogicalBaseLayer.resetDouble(), Rs.isWarmUp = !1, 
                Mt.mode != Tt.SKILL_MODE ? (this.txtCurTime.visible = !0, Wt.startGameTime(this.txtCurTime)) : this.txtCurTime.visible = !1, 
                this.timer.clear(this, cd)), e--, il.playEffect(ml.GAME_DOWN_START.ROOT + e.toString() + ".mp3"), 
                this.txtTeamDown.text = e.toString();
            }), na.instance.init();
        }
        zomBieComingDownTime(e) {
            let t = 5, i = this;
            this.txtZomBieAppearDown.text = t.toString(), this.timerOnce(e, this, function() {
                i.txtZomBieAppearDown.visible = !0, i.timer.loop(1e3, i, function update() {
                    Rs.gameStop || (0 != t ? (t--, i.txtZomBieAppearDown.text = t.toString()) : (i.txtZomBieAppearDown.text = t.toString(), 
                    i.zomBieCtrl(), i.timer.clear(i, update)));
                });
            });
        }
        setZomBieDownTimeBg() {
            if (Mt.mode == Tt.BIOCHEMISTRY) if (Wt.gameTime > 10) {
                let e = ul.ZOMBIEMODE_GAMING_UI.DOWNTIME_BG_UI.BEFORE10S;
                this.imgZombieTimeBg.skin != e && (this.imgZombieTimeBg.alpha = 1, this.imgZombieTimeBg.skin = e);
            } else {
                let e = ul.ZOMBIEMODE_GAMING_UI.DOWNTIME_BG_UI.AFTER10S;
                this.imgZombieTimeBg.skin != e && (this.imgZombieTimeBg.skin = e, this.ani4.play(0, !0));
            }
        }
        beZomBieHit() {
            Mt.mode == Tt.BIOCHEMISTRY && hl.isReviewVersion() && hl.appId != H.C_233 && this.ani5.play(0, !1);
        }
        zomBieCtrl() {
            this.txtZomBieAppearDown.visible = !1, this.imgZombieTimeBg.visible = !0, il.play(ml.ZOMBIESHOW), 
            this.imgTopZomBieBg.y <= -78 ? (this.txtZombieRound.text = "第" + ja.round.toString() + "批", 
            this.setZomBieNum(), this.down.play(0, !1)) : (this.up.play(0, !1), this.timerOnce(500, this, () => {
                this.down.play(0, !1), this.setZomBieNum(), this.txtZombieRound.text = "第" + ja.round.toString() + "批";
            })), this.ZomBieComingView.setData(), this.ZomBieComingView.start(), this.ZomBieComingView.stop(), 
            ja.generateZombies();
        }
        setZomBieNum() {
            this.txtZombieNum.text = "剩余僵尸：" + ja.maxRound.toString();
        }
        zomBieEliminate() {
            if (3 != ja.round) {
                let e = new Laya.Image(ul.ZOMBIEMODE_GAMING_UI.CLEANSCUESS);
                e.anchorX = .5, e.anchorY = .5, e.x = this.stage.width / 2, e.y = this.stage.height / 2 - 20, 
                e.alpha = 0, this.addChild(e), Laya.Tween.to(e, {
                    alpha: 1
                }, 200, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(e, {
                        alpha: 0
                    }, 200, null, Laya.Handler.create(this, () => {
                        e.destroy();
                    }), 1200);
                }));
            } else {
                let e = new Laya.Image(ul.ZOMBIEMODE_GAMING_UI.CLEANFINISH);
                e.anchorX = .5, e.anchorY = .5, e.x = this.stage.width / 2, e.y = this.stage.height / 2 - 20, 
                this.addChild(e), Laya.Tween.to(e, {
                    alpha: 1
                }, 200, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(e, {
                        alpha: 0
                    }, 200, null, Laya.Handler.create(this, () => {
                        e.destroy();
                    }), 1200);
                }));
            }
        }
        setMirrorScale() {
            this.imgMirror.scale(1, 1);
        }
        setData() {
            let e = [], t = Rs.playerLogicalBaseLayer.armCtrlList.length;
            this.listArm.width = 190 * t, this.listArm.x = this.stage.width / 2;
            let i = 0;
            for (let t = 0; t < Rs.playerLogicalBaseLayer.armCtrlList.length; t++) {
                let a = Rs.playerLogicalBaseLayer.armCtrlList[t], s = {
                    index: i,
                    type: a.getType(),
                    magazineBullet: a.curMagazineBullet,
                    bullets: a.curBullets,
                    icon: a.getIcon(),
                    state: 0 == i ? oa.CHOOSE : oa.NORMAL,
                    armType: 0
                };
                0 == t && (Rs.pushFRArmList(0, a.getIcon(), !0), this.imgArm.skin = a.getIcon()), 
                1 == t && (Rs.pushFRArmList(1, a.getIcon(), !0), this.imgArm.skin = a.getIcon()), 
                i++, e.push(s), s.state == oa.CHOOSE && (s.type == Kr.HAND_GUN ? (this.quasiCenter1.visible = !0, 
                this.quasiCenter.visible = !1) : (this.quasiCenter.visible = !0, this.quasiCenter1.visible = !1));
            }
            0 == e.length && (this.quasiCenter.visible = !0, this.quasiCenter1.visible = !1), 
            this.listArm.itemRender = ra, this.listArm.vScrollBarSkin = "", this.listArm.dataSource = e, 
            this.listArm.selectEnable = !0, this.listArm.renderHandler = new Laya.Handler(this, this.updateArmItem), 
            this.listAddArm.itemRender = ra, this.listAddArm.vScrollBarSkin = "", this.listAddArm.dataSource = [ {
                state: oa.NONE
            } ], this.listAddArm.renderHandler = new Laya.Handler(this, this.updateArmItem), 
            this.listAddArm.selectEnable = !0, this.nonoArmCount = 1, this.addArmCount = 1, 
            this.setListAddArmWight();
        }
        pickUpTheGun(e = 0) {
            let t = [], i = Rs.playerLogicalBaseLayer.armCtrlList.length;
            this.listArm.width = 190 * i, this.listArm.x = this.stage.width / 2;
            let a = 0;
            Rs.curFRArmList = [];
            let s = null, n = !1;
            for (let i = 0; i < Rs.playerLogicalBaseLayer.armCtrlList.length; i++) {
                let o = Rs.playerLogicalBaseLayer.armCtrlList[i], r = {
                    index: a,
                    type: o.getType(),
                    magazineBullet: o.curMagazineBullet,
                    bullets: o.curBullets,
                    icon: o.getIcon(),
                    state: i == e ? oa.CHOOSE : oa.NORMAL,
                    armType: 0
                };
                i == e && Rs.pushFRArmList(a, Rs.playerLogicalBaseLayer.armCtrl.getIcon(), !0), 
                t.push(r), r.state == oa.CHOOSE && (r.type == Kr.HAND_GUN ? (this.quasiCenter1.visible = !0, 
                this.quasiCenter.visible = !1) : (this.quasiCenter.visible = !0, this.quasiCenter1.visible = !1)), 
                i == e || n || (n = !0, s = a), a++;
            }
            s && (Rs.pushFRArmList(s, Rs.playerLogicalBaseLayer.armCtrlList[s].getIcon(), !0), 
            this.imgArm.skin = Rs.playerLogicalBaseLayer.armCtrlList[s].getIcon()), this.curIndex = e, 
            0 == t.length && (this.quasiCenter.visible = !0, this.quasiCenter1.visible = !1), 
            this.listArm.dataSource = t, this.listArm.refresh(), this.setListAddArmWight();
        }
        setListAddArmWight() {
            Mt.mode == Tt.SKILL_MODE && (0 != this.listAddArm.dataSource.length ? (this.listAddArm.width = 190 * this.listAddArm.dataSource.length, 
            this.listArm.x = this.listAddArm.width / 2 + Laya.stage.width / 2, this.listAddArm.x = this.listArm.x - this.listArm.width / 2 - this.listAddArm.width / 2 + 10, 
            0 == this.listArm.dataSource.length && (this.listAddArm.x = Laya.stage.width / 2)) : this.listArm.x = Laya.stage.width / 2);
        }
        setBtnEvent() {
            this.btnJump.on(Laya.Event.MOUSE_DOWN, this, this.onBtnJumpDown), this.btnJump.on(Laya.Event.MOUSE_OUT, this, this.onBtnJumpOut), 
            this.btnRightAttack.on(Laya.Event.MOUSE_DOWN, this, this.onBtnRightAttackDown), 
            this.btnLeftAttack.on(Laya.Event.MOUSE_DOWN, this, this.onBtnLeftAttackDown), this.btnRightAttack.on(Laya.Event.MOUSE_OUT, this, this.onBtnRightAttackUp), 
            this.btnLeftAttack.on(Laya.Event.MOUSE_OUT, this, this.onBtnLeftAttackUp), hl.platform == v.WEB_4399 && Laya.Browser.onPC ? (this.onBtnDown(), 
            this.canvas.addEventListener("mousedown", this.onBtnLeftAttackDown.bind(this), !1), 
            this.canvas.addEventListener("mouseup", this.onBtnLeftAttackUp.bind(this), !1), 
            this.boxTouch.on(Laya.Event.MOUSE_DOWN, this, this.onBtnDown)) : (this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnViewMove), 
            this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnViewDown), this.on(Laya.Event.MOUSE_OUT, this, this.onBtnViewOver)), 
            this.btnAmmunitionChange.on(Laya.Event.MOUSE_DOWN, this, this.onBtnAmmunitionChange), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnAutoAttack.on(Laya.Event.CLICK, this, this.onBtnAutoAttack), 
            this.btnSquat.on(Laya.Event.MOUSE_DOWN, this, this.onBtnSquatDown), this.btnSquat.on(Laya.Event.MOUSE_OUT, this, this.onBtnSquatOut), 
            this.btnGiveUp.on(Laya.Event.CLICK, this, this.onBtnGiveUp), this.btnGiveUp.on(Laya.Event.MOUSE_DOWN, this, this.onBtnGiveUpDown), 
            this.btnGiveUp.on(Laya.Event.MOUSE_OUT, this, this.onBtnGiveUpOut), this.btnRescue.on(Laya.Event.CLICK, this, this.onBtnRescue), 
            this.btnResueCancel.on(Laya.Event.CLICK, this, this.onBtnResueCancel), this.btnCloseMirror.on(Laya.Event.MOUSE_DOWN, this, this.onBtnCloseMirrorDown), 
            this.btnCloseMirror.on(Laya.Event.MOUSE_OUT, this, this.onBtnCloseMirrorOut), this.btnConvenient.on(Laya.Event.CLICK, this, this.onBtnConvenient), 
            this.btnTestChange.on(Laya.Event.CLICK, this, () => {
                this.testIndex += 1, this.testIndex = this.testIndex % Se.keys.length, Rs.playerLogicalBaseLayer.pickUpTheGunById(Se.keys[this.testIndex], !0);
            });
        }
        onBtnConvenient() {
            Rs.convenientSelectArm();
        }
        onBtnCloseMirrorDown() {
            this.onlySniperClose();
        }
        onBtnCloseMirrorOut() {}
        onBtnResueCancel() {
            q.getTouch() && Rs.zombieModeRescueLogic && (Rs.zombieModeRescueLogic.getPresentationBaseLayer().isInterrupt = !0);
        }
        onBtnGiveUp() {
            q.getTouch() && (Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.SNIPERMODE || Rs.playerLogicalBaseLayer.isOpenMioing || Rs.playerLogicalBaseLayer.getArmCtrl() && (il.play(ml.XIEXIA), 
            Rs.playerLogicalBaseLayer.removeTheGunByJudge(), this.pickUpTheGun(), this.sniperClose()));
        }
        onBtnGiveUpDown() {
            this.btnGiveUp.skin = ul.DISCARD_UI.TOUCHED;
        }
        toGiveUp() {
            Rs.playerLogicalBaseLayer.getArmCtrl() && (Rs.playerLogicalBaseLayer.removeTheGun(), 
            this.pickUpTheGun(), this.sniperClose());
        }
        onBtnGiveUpOut() {
            this.btnGiveUp.skin = ul.DISCARD_UI.TOUCH;
        }
        onBtnRescue() {
            q.getTouch() && (Rs.zombieModeRescueLogic && (Rs.zombieModeRescueLogic.getPresentationBaseLayer().isRescuing = !0, 
            Rs.zombieModeRescueLogic.getPresentationBaseLayer().isInterrupt = !1, this.setRescuingVisible(!0), 
            this.setBtnRescueVisible(!1)), this.rescuingItemCtrl && (this.rescuingItemCtrl.resetCoutDown(), 
            this.rescuingItemCtrl.fire(function() {
                Rs.gameOver || Rs.zombieModeRescueLogic && Rs.zombieModeRescueLogic.directRevive(function() {
                    Rs.zombieModeRescueLogic.getPresentationBaseLayer().setPos(Rs.zombieModeRescueLogic.getInitPos());
                });
            })));
        }
        setBtnRescueVisible(e) {
            this.btnRescue.visible = e;
        }
        setRescuingVisible(e) {
            this.rescuing.visible = e;
        }
        startRescuing(e) {}
        setGameEvent() {
            L.register(w.KILL, this.setKill, this), L.register(w.REFRESH_PLAYER_HP_UI, this.refreshHP, this), 
            L.register(w.PLAYER_WAR_SITUATION, this.refreshPlayerWarSituation, this), L.register(w.REFRESH_MAIN_ARM, this.refreshArmData, this), 
            L.register(w.REFRESH_PLAYER_ARMOR_UI, this.refreshArmor, this), L.notify(w.REFRESH_PLAYER_HP_UI);
        }
        refreshArmData() {
            if (this.listArm.getCell(this.curIndex) && this.listArm.getCell(this.curIndex).dataSource && 2 != this.listArm.getCell(this.curIndex).dataSource.type && this.listArm.getCell(this.curIndex).dataSource.type != Kr.MAGIC) {
                this.listArm.getCell(this.curIndex).txtData.text = Rs.playerLogicalBaseLayer.magazineBullet.toString(), 
                this.listArm.getCell(this.curIndex).txtAll.text = "/" + Rs.playerLogicalBaseLayer.bullets.toString();
                for (let e in this.listArm.dataSource) parseInt(e) != this.curIndex && (this.listArm.dataSource[e].magazineBullet = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curMagazineBullet, 
                this.listArm.dataSource[e].bullets = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curBullets, 
                this.listArm.getCell(parseInt(e)) && this.listArm.getCell(parseInt(e)).setState(this.listArm.dataSource[e].state));
            }
        }
        setKill(e) {
            e.role == Mr.TYPE_0 ? this.txtCurFriPro.text = Rs.ourKillScore.toString() : e.role == Mr.TYPE_1 && (this.txtCurEnePro.text = Rs.enemyKillScore.toString());
        }
        refreshHP() {
            let e = Rs.playerLogicalBaseLayer.getMaxHP(), t = Rs.playerLogicalBaseLayer.getHP();
            this.txtHP.text = t.toString() + "/" + e.toString(), 100 == t && this.ani7.play(0, !1), 
            this.imgHP.skin = t >= 50 ? ul.HP_PRO_UI.HP_MORE_50 : t < 50 && t >= 25 ? ul.HP_PRO_UI.HP_LESS_50 : ul.HP_PRO_UI.HP_LESS_25, 
            Laya.Tween.clearAll(this.imgHP);
            let i = 322 * t / e;
            Laya.Tween.to(this.imgHP, {
                width: i
            }, 100);
        }
        refreshArmor() {
            Rs.playerLogicalBaseLayer.getMaxArmor();
            let e = Rs.playerLogicalBaseLayer.getArmor();
            this.txtArmor.text = e.toString();
        }
        refreshPlayerWarSituation() {
            let e = "击杀:";
            hl.getViolenceCtrl() || (e = "击倒:"), this.txtMySelfWarSituation.text = e + Rs.playerLogicalBaseLayer.playerKillCount + "  被淘汰：" + Rs.playerLogicalBaseLayer.playerBeKillCount, 
            Mt.mode == Tt.BIOCHEMISTRY && (this.txtPlayerZombieKillNum.text = e + Rs.playerLogicalBaseLayer.playerKillCount);
        }
        onArmSelect(e) {
            e != this.curIndex && this.updateSelectArm(e);
        }
        updateSelectArm(e) {
            if (!Rs.playerLogicalBaseLayer.isStartHuaBullet) {
                this.curIndex = e;
                for (let t in this.listArm.dataSource) t != e && (this.listArm.dataSource[t].state = oa.NORMAL, 
                this.listArm.dataSource[t].magazineBullet = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(t)].curMagazineBullet, 
                this.listArm.dataSource[t].bullets = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(t)].curBullets, 
                this.listArm.getCell(parseInt(t)) && this.listArm.getCell(parseInt(t)).setState(this.listArm.dataSource[t].state));
                this.isHideImgEnemy || (this.isHideImgEnemy = !0, Laya.timer.once(500, this, this.hideImgEnemy)), 
                this.listArm.dataSource[e].state = oa.CHOOSE, Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb = !1, 
                this.listArm.dataSource[e].magazineBullet = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curMagazineBullet, 
                this.listArm.dataSource[e].bullets = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curBullets, 
                Rs.playerLogicalBaseLayer.chooseArm(e), this.btnRightAttack.skin = Rs.playerLogicalBaseLayer.armCtrl.getType() == Kr.BOMB ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                this.btnLeftAttack.skin = Rs.playerLogicalBaseLayer.armCtrl.getType() == Kr.BOMB ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                this.listArm.getCell(parseInt(e)) && this.listArm.getCell(parseInt(e)).setState(this.listArm.dataSource[e].state), 
                Rs.pushFRArmList(e, this.listArm.dataSource[e].icon);
            }
        }
        updateArmItem(e, t) {
            e.setView(t, this);
        }
        onBtnViewMove(e) {
            Rs.playerLogicalBaseLayer.setDirection(null, e);
        }
        onBtnViewDown(e) {
            Ts.touchCtrl(e.touchId, Yt.ADD), Ts.handleType != Pt.ONLYMOVE && (this.curTouchId = e.touchId, 
            Rs.fisrtPoint = null, e.stageX >= Laya.stage.width / 2 && (Rs.fisrtPoint = null, 
            Rs.playerLogicalBaseLayer.setMouseX = null, Rs.playerLogicalBaseLayer.setMouseY = null));
        }
        onBtnViewOver(e) {
            if (Rs.fisrtPoint = null, Rs.playerLogicalBaseLayer.setMouseX = null, Rs.playerLogicalBaseLayer.setMouseY = null, 
            Rs.playerLogicalBaseLayer.getArmCtrl()) {
                if (Ts.touchCtrl(e.touchId, Yt.REMOVE), this.isTouchRightAttack) {
                    if (Laya.MouseManager.instance.mouseX < Laya.stage.width / 2) return;
                    this.attackAfter(), this.btnRightAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                    this.isTouchRightAttack = !1;
                }
                if (this.isTouchLeftAttack) {
                    if (Laya.MouseManager.instance.mouseX >= Laya.stage.width / 2) return;
                    this.attackAfter(), this.btnLeftAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                    this.isTouchLeftAttack = !1;
                }
            }
        }
        onBtnJumpDown() {
            this.btnJump.skin = ul.JUMP_UI.TOUCHED, Rs.playerLogicalBaseLayer.getPresentationBaseLayer().jump();
        }
        onBtnJumpOut() {
            this.btnJump.skin = ul.JUMP_UI.TOUCH;
        }
        onBtnRightAttackDown() {
            Rs.playerLogicalBaseLayer.getArmCtrl() && (this.btnRightAttack.skin = Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb ? ul.BOMB_UI.TOUCHED : ul.ATTACK_UI.TOUCHED, 
            this.isTouchRightAttack = !0, this.attack());
        }
        onBtnRightAttackUp() {}
        onBtnLeftAttackUp(e) {
            if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                if (!Rs.playerLogicalBaseLayer) return;
                Rs.playerLogicalBaseLayer.setIsAttack = !1, this.isTouchLeftAttack && (this.attackAfter(e), 
                this.isTouchLeftAttack = !1);
            }
        }
        onBtnLeftAttackDown(e) {
            Rs.playerLogicalBaseLayer && Rs.playerLogicalBaseLayer.getArmCtrl() && (this.isTouchLeftAttack = !0, 
            this.imgMirror && this.attack(e));
        }
        attack(e = null) {
            if (this.hideAttackGuide(), 0 == Rs.playerLogicalBaseLayer.magazineBullet && 0 == Rs.playerLogicalBaseLayer.bullets && Oi.showNotification("子弹不足"), 
            !Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb && !Rs.playerLogicalBaseLayer.getIsDie()) if (Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, 
            3 != Rs.playerLogicalBaseLayer.getArmCtrl().getType()) Rs.playerLogicalBaseLayer.setIsAttack = !0; else {
                if (console.log("isStartAttack:", Rs.playerLogicalBaseLayer.isStartAttack, "isStartHuaBullet:", Rs.playerLogicalBaseLayer.isStartHuaBullet, "isOpenMioing:", Rs.playerLogicalBaseLayer.isOpenMioing), 
                Rs.playerLogicalBaseLayer.isStartAttack) return;
                if (Rs.playerLogicalBaseLayer.isStartHuaBullet) return;
                Rs.playerLogicalBaseLayer.isOpenMioing ? this.sniperClose(e) : hl.platform == v.WEB_4399 && Laya.Browser.onPC ? 2 == e.button ? this.sniperOpen() : (Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, 
                Rs.playerLogicalBaseLayer.setIsAttack = !0) : this.sniperOpen();
            }
        }
        sniperOpen() {
            0 == Rs.playerLogicalBaseLayer.getArmCtrl().curBullets && 0 == Rs.playerLogicalBaseLayer.getArmCtrl().curMagazineBullet || (this.imgMirror.visible = !0, 
            Rs.playerLogicalBaseLayer.getArmCtrl().id == Gr.NOMONEY && Rs.playerLogicalBaseLayer.getArmCtrl().isOtherArm && (this.imgMirror.visible = !1, 
            this.imgMirror1.visible = !0), this.ani8.play(0, !1), this.btnCloseMirror.visible = !0, 
            Rs.playerLogicalBaseLayer.isOpenMioing = !0, this.boxQuasi.visible = !1, Laya.Tween.clearAll(Ts.camera), 
            Laya.Tween.to(Ts.camera, {
                fieldOfView: 13
            }, 80));
        }
        sniperClose(e = null) {
            if (60 != Ts.camera.fieldOfView) {
                if (this.isOpenGun) return;
                this.isOpenGun = !0, this.imgMirror.visible = !1, this.imgMirror1.visible = !1, 
                Laya.Tween.clearAll(Ts.camera), this.btnCloseMirror.visible = !1, Laya.Tween.to(Ts.camera, {
                    fieldOfView: 60
                }, 80), this.boxQuasi.visible = !0, this.isAutoOpen = !1;
                var t = this;
                if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                    if (0 != e.button) return Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, Rs.playerLogicalBaseLayer.setIsAttack = !1, 
                    t.isOpenGun = !1, Rs.playerLogicalBaseLayer.isOpenMioing = !1, Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, 
                    void (Rs.playerLogicalBaseLayer.setIsAttack = !1);
                    Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, Rs.playerLogicalBaseLayer.setIsAttack = !0;
                } else Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, Rs.playerLogicalBaseLayer.setIsAttack = !0;
                Laya.timer.once(880, this, function cd() {
                    t.isOpenGun = !1, Rs.playerLogicalBaseLayer.isOpenMioing = !1, Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, 
                    Rs.playerLogicalBaseLayer.setIsAttack = !1, Laya.timer.clear(this, cd);
                });
            }
        }
        onlySniperClose() {
            (this.imgMirror.visible || this.imgMirror1.visible || Ts.camera && 60 != Ts.camera.fieldOfView) && (this.imgMirror.visible = !1, 
            this.imgMirror1.visible = !1, Laya.Tween.clearAll(Ts.camera), this.btnCloseMirror.visible = !1, 
            Rs.playerLogicalBaseLayer.isOpenMioing = !1, Ts.camera && Laya.Tween.to(Ts.camera, {
                fieldOfView: 60
            }, 80), Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, Rs.playerLogicalBaseLayer.setIsAttack = !1);
        }
        attackAfter(e = null) {
            if (Rs.playerLogicalBaseLayer.getArmCtrl()) return 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() && Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb && !Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isThrowBomb ? (Rs.playerLogicalBaseLayer.getPresentationBaseLayer().throwBomb(), 
            void il.playEffect(ml.FIRE_IN_TEH_HOLE)) : void (3 != Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? (Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, 
            Rs.playerLogicalBaseLayer.setIsAttack = !1) : hl.platform == v.WEB_4399 && Laya.Browser.onPC || this.sniperClose(e));
        }
        onBtnAmmunitionChange() {
            if (!Rs.playerLogicalBaseLayer.getArmCtrl()) return;
            if (Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb) return;
            let e = Rs.playerLogicalBaseLayer.getArmCtrl().getBulletChangeTimer() / 1e3, t = this;
            Rs.playerLogicalBaseLayer.getPresentationBaseLayer().manualAmmunitionChange(function() {
                t.btnAmmunitionChanging.visible = !0, t.imgAmmunitionChang.visible = !1, t.txtAmmunitionChangTime.text = e.toString() + "s", 
                t.ani1.play(0, !0), t.timer.loop(100, t, function cd() {
                    e > 0 ? (e = parseFloat((e - .1).toFixed(1)), t.txtAmmunitionChangTime.text = e.toString() + "s") : (e = 0, 
                    t.txtAmmunitionChangTime.text = e.toString() + "s", t.ani1.stop(), t.timer.clear(t, cd));
                });
            }, function() {
                t.btnAmmunitionChanging.visible = !1, t.imgAmmunitionChang.visible = !0;
            });
        }
        onBtnBack() {
            Bt.openFunction(Er.EXIT, gr.COVER, ur.VIEW, St.HIDE, !1);
        }
        onBtnAutoAttack() {
            Rs.playerLogicalBaseLayer.isAutoAttack ? (this.btnAutoAttack.skin = ul.AUTO_ATTACK_UI.NOT_AUTO_ATTACK, 
            Rs.playerLogicalBaseLayer.isAutoAttack = !1) : (this.btnAutoAttack.skin = ul.AUTO_ATTACK_UI.AUTO_ATTACK, 
            Rs.playerLogicalBaseLayer.isAutoAttack = !0);
        }
        onBtnSquatDown() {
            this.btnSquat.skin = ul.SQUATDOWN_UI.TOUCHED, Rs.playerLogicalBaseLayer.isCrouch = !0, 
            Ts.camera.transform.localPositionY = 2.235;
            let e = Ts.camera.transform;
            Laya.Tween.clearAll(e), e.localPositionY = 2.235, Laya.Tween.to(e, {
                localPositionY: 2.235 - .3
            }, 150);
        }
        onBtnSquatOut() {
            this.btnSquat.skin = ul.SQUATDOWN_UI.TOUCH, Rs.playerLogicalBaseLayer.isCrouch = !1;
            let e = Ts.camera.transform;
            Laya.Tween.clearAll(e), Laya.Tween.to(e, {
                localPositionY: 2.235
            }, 10);
        }
        setEnemyHp(e) {
            e.armCtrl && (Laya.timer.clear(this, this.hideImgEnemy), this.imgEnemy.visible = !0, 
            this.isHideImgEnemy = !1, this.imgEnemyHp.width = e.getHP() / e.getMaxHP() * this.maxHpWigth, 
            this.labelName.text = e.gameName, this.labelCount.text = e.getHP().toString());
        }
        hideEnemyHp() {
            this.isHideImgEnemy || (this.isHideImgEnemy = !0, Laya.timer.once(500, this, this.hideImgEnemy)), 
            Rs.playerLogicalBaseLayer.getArmCtrl() && Rs.playerLogicalBaseLayer.getArmCtrl().getType() != Kr.KNIFE && Rs.playerLogicalBaseLayer.getArmCtrl().getType() != Kr.SNIPER_GUN && this.isOpenCamera && (Laya.Tween.clearAll(Ts.camera), 
            this.isOpenCamera = !1, this.isCameraMove = !0, Laya.Tween.to(Ts.camera, {
                fieldOfView: 60
            }, 390, null, Laya.Handler.create(Ts.camera, () => {
                this.isCameraMove = !1;
            })));
        }
        hideImgEnemy() {
            this.imgEnemy.visible = !1;
        }
        addAirDropInMap(e) {
            let t;
            for (let e = 0; e < this.airDropTagList.length; e++) {
                const i = this.airDropTagList[e];
                if (!i.parent) {
                    t = i;
                    break;
                }
            }
            t || (t = new Cn(this)), t.init(e), this.imgMap.parent.addChild(t);
        }
    }
    class Sn extends T.view.review.ReviewGameViewUI {
        constructor() {
            super(), this.playerKillBroadcastCtrl = null, this.matchSituationCtrl = null, this.isTouchRightAttack = !1, 
            this.isTouchLeftAttack = !1, this.curIndex = 0, this.curTouchId = 0, this.ZomBieComingView = null, 
            this.rescuingItemCtrl = null, this.touchNum = 0, this.moveCtrl = null, this.fingerCtrl = null, 
            this.step = 1, this.isToGudeAttack = !1, this.isOpenGun = !1, this.isAutoOpen = !1, 
            this.lastArmIndex = 0, this.height = this.stage.height, this.width = this.stage.width, 
            this.canvas = Laya.Browser.document.querySelector("canvas"), document.addEventListener("pointerlockchange", this.lockChangeAlert, !1), 
            document.addEventListener("mozpointerlockchange", this.lockChangeAlert, !1);
        }
        onAwake() {
            hl.platform == v.VIVO && il.playEffect(ml.KILL_HEADSHOT, 1, !1, .1);
        }
        start() {
            0 == jt.curDifficult ? (console.log("难度等级：【容易】"), this.txtCurDiff.text = "难度等级：【容易】") : 1 == jt.curDifficult ? (console.log("难度等级：【正常】"), 
            this.txtCurDiff.text = "难度等级：【正常】") : 2 == jt.curDifficult ? (console.log("难度等级：【偏难】"), 
            this.txtCurDiff.text = "难度等级：【偏难】") : 3 == jt.curDifficult && (console.log("难度等级：【困难】"), 
            this.txtCurDiff.text = "难度等级：【困难】"), this.init(), this.setData(), this.setBtnEvent(), 
            this.setGameEvent(), hl.platform == v.WEB_4399 && Laya.Browser.onPC && (Rs.fisrtPoint = null, 
            Rs.playerLogicalBaseLayer.setMouseX = null, Rs.playerLogicalBaseLayer.setMouseY = null, 
            this.btnJump.visible = !1, this.btnRightAttack.visible = !1, this.btnLeftAttack.visible = !1, 
            this.btnCloseMirror.alpha = 0, this.btnLeftAttack.alpha = 0, this.btnLeftAttack.off(Laya.Event.MOUSE_DOWN, this, this.onBtnLeftAttackDown), 
            this.btnAmmunitionChange.visible = !1, this.btnGiveUp.visible = !1, this.btnConvenient.visible = !1, 
            Laya.stage.on(Laya.Event.KEY_DOWN, this, this.onKeyDown), this.onBtnAutoAttack());
            let e = this;
            this.timer.frameLoop(1, this, () => {
                Rs.gameOver || this.isTouchRightAttack && Rs.playerLogicalBaseLayer.getArmCtrl() && 3 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() && (Rs.playerLogicalBaseLayer.isStartAttack || Rs.playerLogicalBaseLayer.isOpenMioing || this.isAutoOpen || (this.isAutoOpen = !0, 
                e.attack()));
            });
        }
        onBtnDown(e = !1) {
            Bt.funcList.length > 1 && 0 == e || (window.focus(), this.canvas && (this.canvas.requestPointerLock(), 
            this.canvas.removeEventListener("mousemove", this.mouseMove), this.canvas.addEventListener("mousemove", this.mouseMove, !1)));
        }
        lockChangeAlert() {
            document.pointerLockElement === this.canvas || (Laya.Browser.document.mozPointerLockElement, 
            this.canvas);
        }
        mouseMove(e) {
            let t = {
                stageX: .7 * e.movementX,
                stageY: .7 * e.movementY
            };
            Rs.playerLogicalBaseLayer.setDirection(null, t);
        }
        onKeyDown(e) {
            switch (e.keyCode) {
              case 32:
                Rs.playerLogicalBaseLayer.getPresentationBaseLayer().jump();
                break;

              case 81:
                this.onBtnConvenient();
                break;

              case 82:
                this.onBtnAmmunitionChange();
                break;

              case 71:
                this.onBtnGiveUp();
                break;

              case 69:
                this.onBtnRescue();
            }
            if (e.keyCode <= 57 && e.keyCode > 47) {
                (48 == e.keyCode ? 10 : e.keyCode - 48) <= this.listArm.dataSource.length && (Rs.playerLogicalBaseLayer && (Rs.playerLogicalBaseLayer.isOpenMioing || (Rs.playerLogicalBaseLayer.setIsTouchAttack = !1)), 
                Rs.playerLogicalBaseLayer.isOpenMioing || (48 == e.keyCode ? (this.lastArmIndex = this.curIndex, 
                this.onArmSelect(9)) : (this.lastArmIndex = this.curIndex, console.log("武器索引:", e.keyCode - 49), 
                this.onArmSelect(e.keyCode - 49))));
            }
        }
        setNewPlayerArm() {
            let e = this;
            hl.isShowReviewUI() || (tl.getInstance().isNew && 1 == Ts.gameNum && Mt.mode != Tt.SNIPERMODE && Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.KNIFEWARMODE ? (Rs.gameStop = !0, 
            Bt.openFunction(Er.NEWPLAYERTRYARM, gr.COVER, ur.WINDOW, St.HIDE, {
                cb: function(t) {
                    Rs.playerLogicalBaseLayer.getSuperArmByNew(t), ol.startRecordGame(function() {
                        console.log("录屏失败");
                    }), Mt.mode != Tt.BIOCHEMISTRY && e.modeFunc();
                }
            })) : (ol.startRecordGame(function() {
                console.log("录屏失败");
            }), Mt.mode != Tt.BIOCHEMISTRY && e.modeFunc()));
        }
        onDestroy() {
            this.timer.clearAll(this), this.txtCurEnePro = null, this.txtCurFriPro = null, this.txtCurTask = null, 
            this.txtCurTime = null, this.txtHP = null, this.txtMySelfWarSituation = null, this.boxCenter = null, 
            this.boxWarSituation = null, this.matchSituationCtrl = null, this.playerKillBroadcastCtrl = null, 
            this.imgHP = null, this.imgMirror = null, Laya.stage.off(Laya.Event.KEY_DOWN, this, this.onKeyDown), 
            this.canvas && (this.canvas.removeEventListener("mousemove", this.mouseMove), this.canvas.removeEventListener("mouseup", this.onBtnLeftAttackUp), 
            this.canvas.removeEventListener("mousedown", this.onBtnLeftAttackDown)), L.unregisterByEventId(w.KILL), 
            L.unregisterByEventId(w.REFRESH_PLAYER_HP_UI), L.unregisterByEventId(w.PLAYER_WAR_SITUATION), 
            L.unregisterByEventId(w.REFRESH_MAIN_ARM), L.unregisterByEventId(w.REFRESH_PLAYER_ARMOR_UI);
        }
        init() {
            console.log("当前游戏内部指引步骤：", tl.getInstance().getGuide()), this.fingerCtrl = ns.createFingerAniCtrl(this), 
            il.stopBGM(), this.modelCtrl(), this.setMirrorScale(), Rs.addHead(), Laya.MouseManager.multiTouchEnabled = !0, 
            this.playerKillBroadcastCtrl = new xn(), this.addChild(this.playerKillBroadcastCtrl), 
            this.playerKillBroadcastCtrl.centerX = 0, this.playerKillBroadcastCtrl.bottom = 145;
            let e = new wn(this);
            e.x = e.width + 100, e.y = this.stage.height - e.height - 100, this.boxJoystick.addChild(e), 
            this.moveCtrl = e, this.setGuide(), this.boxWarSituation.addChild(new En()), this.matchSituationCtrl = new vn(), 
            this.addChild(this.matchSituationCtrl);
            let t = "击杀:";
            hl.getViolenceCtrl() || (t = "击倒:"), this.txtMySelfWarSituation.text = t + 0 + "  被淘汰：0", 
            Mt.mode == Tt.BIOCHEMISTRY && (this.txtPlayerZombieKillNum.text = t + 0);
        }
        setGuide() {
            if (tl.getInstance().getGuide() != Et.FINISH && tl.getInstance().getGuide() != Et.MAX) if (1 == this.step) console.log("设置移动指引"), 
            this.fingerCtrl.stop(), this.moveCtrl.ani1.play(0, !1); else if (2 == this.step) {
                console.log("设置攻击指引"), this.fingerCtrl.visible = !0;
                let e = new Laya.Point(this.btnRightAttack.width / 2, this.btnRightAttack.height / 2), t = this.btnRightAttack.localToGlobal(e);
                this.setGudePos(t), this.fingerCtrl.play();
            }
        }
        hideMoveGuide() {
            1 == this.step && (this.fingerCtrl && (this.fingerCtrl.visible = !1), this.step++);
        }
        hideAttackGuide() {
            this.isToGudeAttack && 2 == this.step && (this.fingerCtrl && (this.fingerCtrl.visible = !1), 
            this.step++);
        }
        setGudePos(e) {
            this.fingerCtrl.visible = !0, this.fingerCtrl.play(), this.fingerCtrl.x = e.x, this.fingerCtrl.y = e.y;
        }
        modelCtrl() {
            this.btnRescue.visible = !1, this.rescuing.visible = !1, this.boxTopBiochemical.visible = !1, 
            this.boxTopNonBiochemical.visible = !1, this.boxLeftBiochemical.visible = !1, this.boxLeftNonBiochemical.visible = !1, 
            this.txtTeamDown.visible = !1, this.txtZomBieAppearDown.visible = !1, this.txtZomBieAppearDown.x = this.stage.width / 2, 
            this.txtZomBieAppearDown.y = this.stage.height / 2 - 70, Mt.mode == Tt.ONEVSONEMODE || Mt.mode == Tt.SNIPERMODE ? (this.btnGiveUp.visible = !0, 
            this.btnConvenient.visible = !1) : (this.btnConvenient.visible = !0, this.btnGiveUp.visible = !1), 
            Mt.mode == Tt.BIOCHEMISTRY ? (this.boxTopBiochemical.visible = !0, hl.getViolenceCtrl(), 
            this.boxLeftBiochemical.visible = !0, this.imgZombieTimeBg.visible = !1, this.ZomBieComingView = new An(), 
            this.addChild(this.ZomBieComingView), this.zomBieComingDownTime(2e3), Wt.startGameTime(this.txtZombieDownTime), 
            this.rescuingItemCtrl = new Bn(), this.rescuing.addChild(this.rescuingItemCtrl), 
            this.rescuingItemCtrl.anchorX = .5, this.rescuingItemCtrl.anchorY = .5, this.rescuingItemCtrl.x = this.rescuing.width / 2, 
            this.rescuingItemCtrl.y = this.rescuing.height / 2, Rs.isWarmUp = !1) : Rs.gameStop = !0;
        }
        modeFunc() {
            Rs.gameStop = !1;
            let e = this, t = 15;
            e.txtWarmUp.text = "热身时间 " + t + "s", e.timer.loop(1e3, e, function cd() {
                1 == t && (e.gameStart(), e.txtWarmUp.text = "热身时间 " + t + "s", e.timer.clear(e, cd)), 
                t--, e.txtWarmUp.text = "热身时间 " + t + "s";
            }), e.txtCurTask.text = Ba.targetKillSore.toString(), e.boxTopNonBiochemical.visible = !0, 
            e.boxLeftNonBiochemical.visible = !0;
        }
        gameStart() {
            Rs.playerLogicalBaseLayer.setHP = Rs.playerLogicalBaseLayer.getMaxHP(), L.notify(w.REFRESH_PLAYER_HP_UI), 
            Ht.resetAllNodeUse();
            let e = 3;
            this.txtTeamDown.visible = !0, this.txtTeamDown.text = e.toString(), this.imgWarmUp.visible = !1, 
            Rs.warmUpAfterToSetPos(), il.playEffect(ml.GAME_DOWN_START.ROOT + e.toString() + ".mp3"), 
            this.timer.loop(1e3, this, function cd() {
                1 == e && (il.playEffect(ml.GAME_DOWN_START.START), this.txtTeamDown.visible = !1, 
                this.ani6.play(0, !1), Rs.playerLogicalBaseLayer.resetDouble(), Rs.isWarmUp = !1, 
                Wt.startGameTime(this.txtCurTime), this.timer.clear(this, cd)), e--, il.playEffect(ml.GAME_DOWN_START.ROOT + e.toString() + ".mp3"), 
                this.txtTeamDown.text = e.toString();
            });
        }
        zomBieComingDownTime(e) {
            let t = 5, i = this;
            this.txtZomBieAppearDown.text = t.toString(), this.timerOnce(e, this, function() {
                i.txtZomBieAppearDown.visible = !0, i.timer.loop(1e3, i, function update() {
                    Rs.gameStop || (0 != t ? (t--, i.txtZomBieAppearDown.text = t.toString()) : (i.txtZomBieAppearDown.text = t.toString(), 
                    i.zomBieCtrl(), i.timer.clear(i, update)));
                });
            });
        }
        setZomBieDownTimeBg() {
            if (Mt.mode == Tt.BIOCHEMISTRY) if (Wt.gameTime > 10) {
                let e = ul.ZOMBIEMODE_GAMING_UI.DOWNTIME_BG_UI.BEFORE10S;
                this.imgZombieTimeBg.skin != e && (this.imgZombieTimeBg.alpha = 1, this.imgZombieTimeBg.skin = e);
            } else {
                let e = ul.ZOMBIEMODE_GAMING_UI.DOWNTIME_BG_UI.AFTER10S;
                this.imgZombieTimeBg.skin != e && (this.imgZombieTimeBg.skin = e, this.ani4.play(0, !0));
            }
        }
        beZomBieHit() {
            Mt.mode == Tt.BIOCHEMISTRY && hl.isReviewVersion() && hl.appId != H.C_233 && this.ani5.play(0, !1);
        }
        zomBieCtrl() {
            this.txtZomBieAppearDown.visible = !1, this.imgZombieTimeBg.visible = !0, il.play(ml.ZOMBIESHOW), 
            this.imgTopZomBieBg.y <= -78 ? (this.txtZombieRound.text = "第" + ja.round.toString() + "批", 
            this.setZomBieNum(), this.down.play(0, !1)) : (this.up.play(0, !1), this.timerOnce(500, this, () => {
                this.down.play(0, !1), this.setZomBieNum(), this.txtZombieRound.text = "第" + ja.round.toString() + "批";
            })), this.ZomBieComingView.setData(), this.ZomBieComingView.start(), this.ZomBieComingView.stop(), 
            ja.generateZombies();
        }
        setZomBieNum() {
            this.txtZombieNum.text = "剩余僵尸：" + ja.maxRound.toString();
        }
        zomBieEliminate() {
            if (3 != ja.round) {
                let e = new Laya.Image(ul.ZOMBIEMODE_GAMING_UI.CLEANSCUESS);
                e.anchorX = .5, e.anchorY = .5, e.x = this.stage.width / 2, e.y = this.stage.height / 2 - 20, 
                e.alpha = 0, this.addChild(e), Laya.Tween.to(e, {
                    alpha: 1
                }, 200, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(e, {
                        alpha: 0
                    }, 200, null, Laya.Handler.create(this, () => {
                        e.destroy();
                    }), 1200);
                }));
            } else {
                let e = new Laya.Image(ul.ZOMBIEMODE_GAMING_UI.CLEANFINISH);
                e.anchorX = .5, e.anchorY = .5, e.x = this.stage.width / 2, e.y = this.stage.height / 2 - 20, 
                this.addChild(e), Laya.Tween.to(e, {
                    alpha: 1
                }, 200, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(e, {
                        alpha: 0
                    }, 200, null, Laya.Handler.create(this, () => {
                        e.destroy();
                    }), 1200);
                }));
            }
        }
        setMirrorScale() {
            this.imgMirror.scale(1, 1);
        }
        setData() {
            let e = [], t = Rs.playerLogicalBaseLayer.armCtrlList.length;
            this.listArm.width = 190 * t, this.listArm.x = this.stage.width / 2;
            let i = 0;
            for (let t = 0; t < Rs.playerLogicalBaseLayer.armCtrlList.length; t++) {
                let a = Rs.playerLogicalBaseLayer.armCtrlList[t], s = {
                    index: i,
                    type: a.getType(),
                    magazineBullet: a.curMagazineBullet,
                    bullets: a.curBullets,
                    icon: a.getIcon(),
                    state: 0 == i ? oa.CHOOSE : oa.NORMAL,
                    armType: 0
                };
                0 == t && (Rs.pushFRArmList(0, a.getIcon(), !0), this.imgArm.skin = a.getIcon()), 
                1 == t && (Rs.pushFRArmList(1, a.getIcon(), !0), this.imgArm.skin = a.getIcon()), 
                i++, e.push(s);
            }
            this.listArm.itemRender = ra, this.listArm.vScrollBarSkin = "", this.listArm.dataSource = e, 
            this.listArm.selectEnable = !0, this.listArm.renderHandler = new Laya.Handler(this, this.updateArmItem);
        }
        pickUpTheGun() {
            let e = [], t = Rs.playerLogicalBaseLayer.armCtrlList.length;
            this.listArm.width = 190 * t, this.listArm.x = this.stage.width / 2;
            let i = 0;
            for (let t = 0; t < Rs.playerLogicalBaseLayer.armCtrlList.length; t++) {
                let a = Rs.playerLogicalBaseLayer.armCtrlList[t], s = {
                    index: i,
                    type: a.getType(),
                    magazineBullet: a.curMagazineBullet,
                    bullets: a.curBullets,
                    icon: a.getIcon(),
                    state: 0 == i ? oa.CHOOSE : oa.NORMAL,
                    armType: 0
                };
                i++, e.push(s);
            }
            this.listArm.dataSource = e, this.listArm.refresh();
        }
        setBtnEvent() {
            this.btnJump.on(Laya.Event.MOUSE_DOWN, this, this.onBtnJumpDown), this.btnJump.on(Laya.Event.MOUSE_OUT, this, this.onBtnJumpOut), 
            this.btnRightAttack.on(Laya.Event.MOUSE_DOWN, this, this.onBtnRightAttackDown), 
            this.btnLeftAttack.on(Laya.Event.MOUSE_DOWN, this, this.onBtnLeftAttackDown), this.btnRightAttack.on(Laya.Event.MOUSE_OUT, this, this.onBtnRightAttackUp), 
            this.btnLeftAttack.on(Laya.Event.MOUSE_OUT, this, this.onBtnLeftAttackUp), hl.platform == v.WEB_4399 && Laya.Browser.onPC ? (this.onBtnDown(), 
            this.canvas.addEventListener("mousedown", this.onBtnLeftAttackDown.bind(this), !1), 
            this.canvas.addEventListener("mouseup", this.onBtnLeftAttackUp.bind(this), !1), 
            this.boxTouch.on(Laya.Event.MOUSE_DOWN, this, this.onBtnDown)) : (this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnViewMove), 
            this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnViewDown), this.on(Laya.Event.MOUSE_OUT, this, this.onBtnViewOver)), 
            this.btnAmmunitionChange.on(Laya.Event.MOUSE_DOWN, this, this.onBtnAmmunitionChange), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnAutoAttack.on(Laya.Event.CLICK, this, this.onBtnAutoAttack), 
            this.btnSquat.on(Laya.Event.MOUSE_DOWN, this, this.onBtnSquatDown), this.btnSquat.on(Laya.Event.MOUSE_OUT, this, this.onBtnSquatOut), 
            this.btnGiveUp.on(Laya.Event.CLICK, this, this.onBtnGiveUp), this.btnGiveUp.on(Laya.Event.MOUSE_DOWN, this, this.onBtnGiveUpDown), 
            this.btnGiveUp.on(Laya.Event.MOUSE_OUT, this, this.onBtnGiveUpOut), this.btnRescue.on(Laya.Event.CLICK, this, this.onBtnRescue), 
            this.btnResueCancel.on(Laya.Event.CLICK, this, this.onBtnResueCancel), this.btnCloseMirror.on(Laya.Event.MOUSE_DOWN, this, this.onBtnCloseMirrorDown), 
            this.btnCloseMirror.on(Laya.Event.MOUSE_OUT, this, this.onBtnCloseMirrorOut), this.btnConvenient.on(Laya.Event.CLICK, this, this.onBtnConvenient);
        }
        onBtnConvenient() {
            Rs.convenientSelectArm();
        }
        onBtnCloseMirrorDown() {
            this.onlySniperClose();
        }
        onBtnCloseMirrorOut() {}
        onBtnResueCancel() {
            q.getTouch() && Rs.zombieModeRescueLogic && (Rs.zombieModeRescueLogic.getPresentationBaseLayer().isInterrupt = !0);
        }
        onBtnGiveUp() {
            q.getTouch() && (Mt.mode != Tt.ONEVSONEMODE && Mt.mode != Tt.SNIPERMODE || Rs.playerLogicalBaseLayer.isOpenMioing || Rs.playerLogicalBaseLayer.getArmCtrl() && (il.play(ml.XIEXIA), 
            Rs.playerLogicalBaseLayer.removeTheGunByJudge(), this.pickUpTheGun(), this.sniperClose()));
        }
        onBtnGiveUpDown() {
            this.btnGiveUp.skin = ul.DISCARD_UI.TOUCHED;
        }
        toGiveUp() {
            Rs.playerLogicalBaseLayer.getArmCtrl() && (Rs.playerLogicalBaseLayer.removeTheGun(), 
            this.pickUpTheGun(), this.sniperClose());
        }
        onBtnGiveUpOut() {
            this.btnGiveUp.skin = ul.DISCARD_UI.TOUCH;
        }
        onBtnRescue() {
            q.getTouch() && (Rs.zombieModeRescueLogic && (Rs.zombieModeRescueLogic.getPresentationBaseLayer().isRescuing = !0, 
            Rs.zombieModeRescueLogic.getPresentationBaseLayer().isInterrupt = !1, this.setRescuingVisible(!0), 
            this.setBtnRescueVisible(!1)), this.rescuingItemCtrl && (this.rescuingItemCtrl.resetCoutDown(), 
            this.rescuingItemCtrl.fire(function() {
                Rs.gameOver || Rs.zombieModeRescueLogic && Rs.zombieModeRescueLogic.directRevive(function() {
                    Rs.zombieModeRescueLogic.getPresentationBaseLayer().setPos(Rs.zombieModeRescueLogic.getInitPos());
                });
            })));
        }
        setBtnRescueVisible(e) {
            this.btnRescue.visible = e;
        }
        setRescuingVisible(e) {
            this.rescuing.visible = e;
        }
        startRescuing(e) {}
        setGameEvent() {
            L.register(w.KILL, this.setKill, this), L.register(w.REFRESH_PLAYER_HP_UI, this.refreshHP, this), 
            L.register(w.PLAYER_WAR_SITUATION, this.refreshPlayerWarSituation, this), L.register(w.REFRESH_MAIN_ARM, this.refreshArmData, this), 
            L.register(w.REFRESH_PLAYER_ARMOR_UI, this.refreshArmor, this), L.notify(w.REFRESH_PLAYER_HP_UI);
        }
        refreshArmData() {
            if (this.listArm.getCell(this.curIndex) && this.listArm.getCell(this.curIndex).dataSource && 2 != this.listArm.getCell(this.curIndex).dataSource.type) {
                this.listArm.getCell(this.curIndex).txtData.text = Rs.playerLogicalBaseLayer.magazineBullet.toString(), 
                this.listArm.getCell(this.curIndex).txtAll.text = "/" + Rs.playerLogicalBaseLayer.bullets.toString();
                for (let e in this.listArm.dataSource) parseInt(e) != this.curIndex && (this.listArm.dataSource[e].magazineBullet = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curMagazineBullet, 
                this.listArm.dataSource[e].bullets = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curBullets, 
                this.listArm.getCell(parseInt(e)) && this.listArm.getCell(parseInt(e)).setState(this.listArm.dataSource[e].state));
            }
        }
        setKill(e) {
            e.role == Mr.TYPE_0 ? this.txtCurFriPro.text = Rs.ourKillScore.toString() : e.role == Mr.TYPE_1 && (this.txtCurEnePro.text = Rs.enemyKillScore.toString());
        }
        refreshHP() {
            let e = Rs.playerLogicalBaseLayer.getMaxHP(), t = Rs.playerLogicalBaseLayer.getHP();
            this.txtHP.text = t.toString() + "/" + e.toString(), 100 == t && this.ani7.play(0, !1), 
            this.imgHP.skin = t >= 50 ? ul.HP_PRO_UI.HP_MORE_50 : t < 50 && t >= 25 ? ul.HP_PRO_UI.HP_LESS_50 : ul.HP_PRO_UI.HP_LESS_25, 
            Laya.Tween.clearAll(this.imgHP);
            let i = 322 * t / e;
            Laya.Tween.to(this.imgHP, {
                width: i
            }, 100);
        }
        refreshArmor() {
            Rs.playerLogicalBaseLayer.getMaxArmor();
            let e = Rs.playerLogicalBaseLayer.getArmor();
            this.txtArmor.text = e.toString();
        }
        refreshPlayerWarSituation() {
            let e = "击杀:";
            hl.getViolenceCtrl() || (e = "击倒:"), this.txtMySelfWarSituation.text = e + Rs.playerLogicalBaseLayer.playerKillCount + "  被淘汰：" + Rs.playerLogicalBaseLayer.playerBeKillCount, 
            Mt.mode == Tt.BIOCHEMISTRY && (this.txtPlayerZombieKillNum.text = e + Rs.playerLogicalBaseLayer.playerKillCount);
        }
        onArmSelect(e) {
            e != this.curIndex && this.updateSelectArm(e);
        }
        updateSelectArm(e) {
            if (!Rs.playerLogicalBaseLayer.isStartHuaBullet) {
                this.curIndex = e;
                for (let t in this.listArm.dataSource) t != e && (this.listArm.dataSource[t].state = oa.NORMAL, 
                this.listArm.dataSource[t].magazineBullet = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(t)].curMagazineBullet, 
                this.listArm.dataSource[t].bullets = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(t)].curBullets, 
                this.listArm.getCell(parseInt(t)) && this.listArm.getCell(parseInt(t)).setState(this.listArm.dataSource[t].state));
                this.listArm.dataSource[e].state = oa.CHOOSE, Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb = !1, 
                this.listArm.dataSource[e].magazineBullet = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curMagazineBullet, 
                this.listArm.dataSource[e].bullets = Rs.playerLogicalBaseLayer.armCtrlList[parseInt(e)].curBullets, 
                Rs.playerLogicalBaseLayer.chooseArm(e), this.btnRightAttack.skin = Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                this.btnLeftAttack.skin = Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                this.listArm.getCell(parseInt(e)) && this.listArm.getCell(parseInt(e)).setState(this.listArm.dataSource[e].state), 
                Rs.pushFRArmList(e, this.listArm.dataSource[e].icon);
            }
        }
        updateArmItem(e, t) {
            e.setView(t, this);
        }
        onBtnViewMove(e) {
            Rs.playerLogicalBaseLayer.setDirection(null, e);
        }
        onBtnViewDown(e) {
            Ts.touchCtrl(e.touchId, Yt.ADD), Ts.handleType != Pt.ONLYMOVE && (this.curTouchId = e.touchId, 
            Rs.fisrtPoint = null, e.stageX >= Laya.stage.width / 2 && (Rs.fisrtPoint = null, 
            Rs.playerLogicalBaseLayer.setMouseX = null, Rs.playerLogicalBaseLayer.setMouseY = null));
        }
        onBtnViewOver(e) {
            if (Rs.fisrtPoint = null, Rs.playerLogicalBaseLayer.setMouseX = null, Rs.playerLogicalBaseLayer.setMouseY = null, 
            Rs.playerLogicalBaseLayer.getArmCtrl()) {
                if (Ts.touchCtrl(e.touchId, Yt.REMOVE), this.isTouchRightAttack) {
                    if (Laya.MouseManager.instance.mouseX < Laya.stage.width / 2) return;
                    this.attackAfter(), this.btnRightAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                    this.isTouchRightAttack = !1;
                }
                if (this.isTouchLeftAttack) {
                    if (Laya.MouseManager.instance.mouseX >= Laya.stage.width / 2) return;
                    this.attackAfter(), this.btnLeftAttack.skin = 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? ul.BOMB_UI.TOUCH : ul.ATTACK_UI.TOUCH, 
                    this.isTouchLeftAttack = !1;
                }
            }
        }
        onBtnJumpDown() {
            this.btnJump.skin = ul.JUMP_UI.TOUCHED, Rs.playerLogicalBaseLayer.getPresentationBaseLayer().jump();
        }
        onBtnJumpOut() {
            this.btnJump.skin = ul.JUMP_UI.TOUCH;
        }
        onBtnRightAttackDown() {
            Rs.playerLogicalBaseLayer.getArmCtrl() && (this.btnRightAttack.skin = Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb ? ul.BOMB_UI.TOUCHED : ul.ATTACK_UI.TOUCHED, 
            this.isTouchRightAttack = !0, this.attack());
        }
        onBtnRightAttackUp() {}
        onBtnLeftAttackUp(e) {
            if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                if (!Rs.playerLogicalBaseLayer) return;
                Rs.playerLogicalBaseLayer.setIsAttack = !1, this.isTouchLeftAttack && (this.attackAfter(e), 
                this.isTouchLeftAttack = !1);
            }
        }
        onBtnLeftAttackDown(e) {
            Rs.playerLogicalBaseLayer && Rs.playerLogicalBaseLayer.getArmCtrl() && (this.isTouchLeftAttack = !0, 
            this.imgMirror && this.attack(e));
        }
        attack(e = null) {
            if (this.hideAttackGuide(), 0 == Rs.playerLogicalBaseLayer.magazineBullet && 0 == Rs.playerLogicalBaseLayer.bullets && Oi.showNotification("子弹不足"), 
            !Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb && !Rs.playerLogicalBaseLayer.getIsDie()) if (Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, 
            3 != Rs.playerLogicalBaseLayer.getArmCtrl().getType()) Rs.playerLogicalBaseLayer.setIsAttack = !0; else {
                if (console.log("isStartAttack:", Rs.playerLogicalBaseLayer.isStartAttack, "isStartHuaBullet:", Rs.playerLogicalBaseLayer.isStartHuaBullet, "isOpenMioing:", Rs.playerLogicalBaseLayer.isOpenMioing), 
                Rs.playerLogicalBaseLayer.isStartAttack) return;
                if (Rs.playerLogicalBaseLayer.isStartHuaBullet) return;
                Rs.playerLogicalBaseLayer.isOpenMioing ? this.sniperClose(e) : hl.platform == v.WEB_4399 && Laya.Browser.onPC ? 2 == e.button ? this.sniperOpen() : (Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, 
                Rs.playerLogicalBaseLayer.setIsAttack = !0) : this.sniperOpen();
            }
        }
        sniperOpen() {
            0 == Rs.playerLogicalBaseLayer.getArmCtrl().curBullets && 0 == Rs.playerLogicalBaseLayer.getArmCtrl().curMagazineBullet || (this.imgMirror.visible = !0, 
            this.ani8.play(0, !1), this.btnCloseMirror.visible = !0, Rs.playerLogicalBaseLayer.isOpenMioing = !0, 
            this.quasiCenter.visible = !1, Laya.Tween.clearAll(Ts.camera), Laya.Tween.to(Ts.camera, {
                fieldOfView: 13
            }, 80));
        }
        sniperClose(e = null) {
            if (60 != Ts.camera.fieldOfView) {
                if (this.isOpenGun) return;
                this.isOpenGun = !0, this.imgMirror.visible = !1, Laya.Tween.clearAll(Ts.camera), 
                this.btnCloseMirror.visible = !1, Laya.Tween.to(Ts.camera, {
                    fieldOfView: 60
                }, 80), this.quasiCenter.visible = !0, this.isAutoOpen = !1;
                var t = this;
                if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                    if (0 != e.button) return Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, Rs.playerLogicalBaseLayer.setIsAttack = !1, 
                    t.isOpenGun = !1, Rs.playerLogicalBaseLayer.isOpenMioing = !1, Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, 
                    void (Rs.playerLogicalBaseLayer.setIsAttack = !1);
                    Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, Rs.playerLogicalBaseLayer.setIsAttack = !0;
                } else Rs.playerLogicalBaseLayer.setIsTouchAttack = !0, Rs.playerLogicalBaseLayer.setIsAttack = !0;
                Laya.timer.once(880, this, function cd() {
                    t.isOpenGun = !1, Rs.playerLogicalBaseLayer.isOpenMioing = !1, Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, 
                    Rs.playerLogicalBaseLayer.setIsAttack = !1, Laya.timer.clear(this, cd);
                });
            }
        }
        onlySniperClose() {
            Ts.camera && 60 != Ts.camera.fieldOfView && (this.imgMirror.visible = !1, Laya.Tween.clearAll(Ts.camera), 
            this.btnCloseMirror.visible = !1, Rs.playerLogicalBaseLayer.isOpenMioing = !1, Laya.Tween.to(Ts.camera, {
                fieldOfView: 60
            }, 80), Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, Rs.playerLogicalBaseLayer.setIsAttack = !1);
        }
        attackAfter(e = null) {
            if (Rs.playerLogicalBaseLayer.getArmCtrl()) return 8 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() && Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb ? (Rs.playerLogicalBaseLayer.getPresentationBaseLayer().throwBomb(), 
            void il.playEffect(ml.FIRE_IN_TEH_HOLE)) : void (3 != Rs.playerLogicalBaseLayer.getArmCtrl().getType() ? (Rs.playerLogicalBaseLayer.setIsTouchAttack = !1, 
            Rs.playerLogicalBaseLayer.setIsAttack = !1) : hl.platform == v.WEB_4399 && Laya.Browser.onPC || this.sniperClose(e));
        }
        onBtnAmmunitionChange() {
            if (!Rs.playerLogicalBaseLayer.getArmCtrl()) return;
            if (Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isTouchBomb) return;
            let e = Rs.playerLogicalBaseLayer.getArmCtrl().getBulletChangeTimer() / 1e3, t = this;
            Rs.playerLogicalBaseLayer.getPresentationBaseLayer().manualAmmunitionChange(function() {
                t.btnAmmunitionChanging.visible = !0, t.imgAmmunitionChang.visible = !1, t.txtAmmunitionChangTime.text = e.toString() + "s", 
                t.ani1.play(0, !0), t.timer.loop(100, t, function cd() {
                    e > 0 ? (e = parseFloat((e - .1).toFixed(1)), t.txtAmmunitionChangTime.text = e.toString() + "s") : (e = 0, 
                    t.txtAmmunitionChangTime.text = e.toString() + "s", t.ani1.stop(), t.timer.clear(t, cd));
                });
            }, function() {
                t.btnAmmunitionChanging.visible = !1, t.imgAmmunitionChang.visible = !0;
            });
        }
        onBtnBack() {
            Bt.openFunction(Er.EXIT, gr.COVER, ur.VIEW, St.HIDE, !1);
        }
        onBtnAutoAttack() {
            Rs.playerLogicalBaseLayer.isAutoAttack ? (this.btnAutoAttack.skin = ul.AUTO_ATTACK_UI.NOT_AUTO_ATTACK, 
            Rs.playerLogicalBaseLayer.isAutoAttack = !1) : (this.btnAutoAttack.skin = ul.AUTO_ATTACK_UI.AUTO_ATTACK, 
            Rs.playerLogicalBaseLayer.isAutoAttack = !0);
        }
        onBtnSquatDown() {
            this.btnSquat.skin = ul.SQUATDOWN_UI.TOUCHED, Rs.playerLogicalBaseLayer.isCrouch = !0, 
            Ts.camera.transform.localPositionY = 2.235;
            let e = Ts.camera.transform;
            Laya.Tween.clearAll(e), e.localPositionY = 2.235, Laya.Tween.to(e, {
                localPositionY: 2.235 - .3
            }, 150);
        }
        onBtnSquatOut() {
            this.btnSquat.skin = ul.SQUATDOWN_UI.TOUCH, Rs.playerLogicalBaseLayer.isCrouch = !1;
            let e = Ts.camera.transform;
            Laya.Tween.clearAll(e), Laya.Tween.to(e, {
                localPositionY: 2.235
            }, 10);
        }
    }
    class Tn extends Laya.View {
        constructor(e, t, i = null, a = null, s = null, n = 1, o = Xt.GOLD, r = null) {
            super(), this.posArray = [], this.type = 1, this.curGoldNum = 0, this.targetGoldNum = 0, 
            this.goldChangeDelay = 0, this.imgType = Xt.DIAMOND, this.endScale = null, this.zOrder = 999999999, 
            this.width = Laya.stage.width, this.height = Laya.stage.height, this.posArray = e, 
            this.endPos = t, this.type = n, this.success = s, this.txtGold = i, this.curGoldNum = o == Xt.GOLD ? tl.getInstance().getGold() - a : tl.getInstance().getDiamond() - a, 
            this.targetGoldNum = o == Xt.GOLD ? tl.getInstance().getGold() : tl.getInstance().getDiamond(), 
            Laya.timer.loop(1, this, this.updateGoldAni), this.imgType = o, this.endScale = r;
        }
        onAwake() {
            this.addGolds(this.success);
        }
        addGoldAni(e, t, i = !1) {
            let a = new Laya.Image();
            switch (this.imgType) {
              case Xt.DIAMOND:
                a.skin = ul.IMG_DIAMOND_ICON;
                break;

              case Xt.GOLD:
                a.skin = ul.IMG_GOLD_ICON;
            }
            a.anchorX = .5, a.anchorY = .5, this.addChild(a), a.x = e.x, a.y = e.y, a.scaleX = .5, 
            a.scaleY = .5;
            var s = this;
            a.width = this.endScale ? this.endScale.x : a.width, a.height = this.endScale ? this.endScale.y : a.height, 
            Laya.Tween.to(a, {
                scaleX: 1,
                scaleY: 1
            }, 500, null, Laya.Handler.create(a, function() {
                Laya.Tween.to(a, {
                    x: t.x,
                    y: t.y,
                    scaleX: 1,
                    scaleY: 1
                }, 500, null, Laya.Handler.create(a, function() {
                    switch (i ? (Laya.timer.once(1e3, a, function() {
                        a.destroy();
                    }), a.anchorX = .5, a.anchorY = .5, Laya.Tween.to(a, {
                        scaleX: 1.2,
                        scaleY: 1.2
                    }, 250, Laya.Ease.bounceOut), Laya.Tween.to(a, {
                        scaleX: 1,
                        scaleY: 1
                    }, 250, null, null, 250), Laya.Tween.to(a, {
                        scaleX: 1.2,
                        scaleY: 1.2
                    }, 250, Laya.Ease.bounceOut, null, 500), Laya.Tween.to(a, {
                        scaleX: 1,
                        scaleY: 1
                    }, 250, null, null, 750)) : Laya.timer.once(100, a, function() {
                        a.destroy();
                    }), s.imgType) {
                      case Xt.DIAMOND:
                      case Xt.GOLD:
                        il.playEffect(ml.GOLD2);
                    }
                }));
            }));
        }
        addGolds(e) {
            let t = this.endPos;
            var i = this;
            let a = 0;
            switch (this.imgType) {
              case Xt.DIAMOND:
              case Xt.GOLD:
                il.playEffect(ml.GOLD1);
            }
            for (let e = 0; e < this.posArray.length; e++) {
                const s = this.posArray[e];
                let n = this.getRandomInt(15, 10);
                n > a && (a = n);
                for (let e = 0; e < n; e++) {
                    let a;
                    a = 1 == this.type ? new Laya.Point(s.x + this.getRandomInt(35, -35), s.y + this.getRandomInt(35, -35)) : new Laya.Point(s.x + this.getRandomInt(75, -75), s.y + this.getRandomInt(75, -75)), 
                    Laya.timer.once(50 * e, this, function() {
                        i.addGoldAni(a, t, e == n - 1);
                    }, null, !1);
                }
            }
            Laya.timer.once(50 * a + 1600, this, function() {
                e && e(), i.destroy();
            });
        }
        getRandomInt(e, t) {
            var i = Math.abs(e - t);
            return i *= Math.random(), (i -= i % 1) + t > e ? e : i + t;
        }
        updateGoldAni() {
            if (!this.txtGold || !this.txtGold.parent) return;
            this.targetGoldNum = this.imgType == Xt.GOLD ? tl.getInstance().getGold() : tl.getInstance().getDiamond(), 
            this.targetGoldNum - this.curGoldNum > 1 ? (this.goldChangeDelay += Laya.timer.delta, 
            this.goldChangeDelay >= 1e3 && (this.curGoldNum = Math.ceil(this.curGoldNum + (this.targetGoldNum - this.curGoldNum) * Laya.timer.delta * .005))) : (this.goldChangeDelay = 0, 
            this.curGoldNum = this.targetGoldNum);
            let e = _t.parseGold(this.curGoldNum);
            this.txtGold.text != e && (this.txtGold.text = e);
        }
    }
    class Dn extends T.view.getReward.GetDiamondsRewardViewUI {
        constructor(e) {
            super(), this.reward = 0, this.isDown = !1, this.cb = null, this.width = this.stage.width, 
            this.height = this.stage.height, this.boxBg.scaleX = this.stage.width / this.boxBg.width, 
            this.reward = e.reward, e.cb && (this.cb = e.cb);
        }
        onAwake() {
            this.init(), this.setEvent();
        }
        onDestroy() {
            this.cb && this.cb(), this.timer.clearAll(this), this.ani1 = null, this.txtReward = null, 
            this.imgGold = null, this.cb = null;
        }
        init() {
            this.txtReward.text = _t.parseGold(this.reward.toString()), this.ani1.play(0, !1);
        }
        setEvent() {
            var e = this;
            Laya.timer.once(500, this, function() {
                e.on(Laya.Event.CLICK, e, e.onBtnBack);
            });
        }
        onBtnBack() {
            if (!q.getTouch()) return;
            if (this.isDown) return;
            this.isDown = !0;
            let e = this, t = this.imgGold.localToGlobal(new Laya.Point(this.imgGold.width / 2, this.imgGold.height / 2)), i = new Laya.Point(t.x, t.y), a = Bt.viewCommon.viewDiamond.txtCount, s = Bt.viewCommon.getDiamondPos();
            tl.getInstance().rewardDiamond(e.reward), Laya.stage.addChild(new Tn([ i ], s, a, e.reward, function() {
                e.isDown = !1, Bt.closeFunction();
            }, 2, Xt.DIAMOND));
        }
    }
    class Rn extends T.view.getReward.GetGoldRewardViewUI {
        constructor(e = 100) {
            super(), this.reward = 0, this.isDown = !1, this.width = this.stage.width, this.height = this.stage.height, 
            this.reward = e, this.boxBg.scaleX = this.stage.width / this.boxBg.width;
        }
        onAwake() {
            this.init(), this.setEvent();
        }
        onDestroy() {
            this.timer.clearAll(this), this.txtReward = null, this.imgGold = null, Nt.getCurScene().state == _s.OVER && hl.platform == v.OPPO && Bt.openFunction(Er.NATIVE_INTERSTITIAL, gr.COVER, ur.VIEW, St.HIDE);
        }
        init() {
            this.txtReward.text = _t.parseGold(this.reward.toString()), this.ani1.play(0, !1);
        }
        setEvent() {
            var e = this;
            Laya.timer.once(500, this, function() {
                e.on(Laya.Event.CLICK, e, e.onBtnBack);
            });
        }
        onBtnBack() {
            if (!q.getTouch()) return;
            if (this.isDown) return;
            this.isDown = !0;
            let e = this, t = this.imgGold.localToGlobal(new Laya.Point(this.imgGold.width / 2, this.imgGold.height / 2)), i = new Laya.Point(t.x, t.y), a = Bt.viewCommon.viewGold.txtCount, s = Bt.viewCommon.getGoldPos();
            tl.getInstance().rewardGold(e.reward), Laya.stage.addChild(new Tn([ i ], s, a, e.reward, function() {
                e.isDown = !1, Bt.closeFunction();
            }, 2, Xt.GOLD));
        }
    }
    var Nn;
    !function(e) {
        e[e.HIDE = 0] = "HIDE", e[e.SHOW = 1] = "SHOW";
    }(Nn || (Nn = {}));
    class Mn extends T.view.getReward.ItemCellViewUI {
        constructor(e, t) {
            super(), this.type = Nn.HIDE, this.itemData = Is.getDataByKey(e), this.count = t, 
            this.setView();
        }
        setView() {
            switch (this.itemData.type) {
              case Ur.GOLD:
              case Ur.DIAMOND:
              case Ur.EXP:
                this.imgIcon.skin = ul.ITEM_ROOT + this.itemData.icon, this.labelName.text = this.itemData.name, 
                this.labelCount.text = _t.parseGold(this.count);
            }
        }
        show(e = null) {
            this.aniOpen.wrapMode = Laya.AnimationBase.WRAP_POSITIVE, this.aniOpen.offAll(Laya.Event.COMPLETE), 
            this.aniOpen.play(0, !1);
            var t = this;
            this.aniOpen.on(Laya.Event.COMPLETE, this, function() {
                t.type = Nn.SHOW, e && e();
            });
        }
        hide(e = null) {
            this.aniOpen.wrapMode = Laya.AnimationBase.WRAP_REVERSE, this.aniOpen.offAll(Laya.Event.COMPLETE), 
            this.aniOpen.play(0, !1);
            var t = this;
            this.aniOpen.on(Laya.Event.COMPLETE, this, function() {
                t.type = Nn.HIDE, e && e();
            });
        }
        wordPos() {
            let e = new Laya.Point(this.width / 2, this.height / 2);
            return this.localToGlobal(e), e;
        }
    }
    let kn = {
        2: [ 341, 85, 1, 494, 85, 1 ],
        3: [ 261, 85, 1, 416, 85, 1, 574, 85, 1 ],
        4: [ 188, 85, 1, 341, 85, 1, 494, 85, 1, 647, 85, 1 ],
        6: [ 261, 16, 1, 416, 16, 1, 574, 16, 1, 261, 174, 1, 416, 174, 1, 574, 174, 1 ],
        8: [ 188, 16, 1, 341, 16, 1, 494, 16, 1, 647, 16, 1, 188, 174, 1, 341, 174, 1, 494, 174, 1, 647, 174, 1 ]
    };
    class On extends T.view.getReward.GetThreeRewardViewUI {
        constructor(e) {
            super(), this.itemList = [], this.isShowThree = !1, this.itemCellList = {}, this.isAni = !1, 
            this.isDown = !1, this.width = this.stage.width, this.height = this.stage.height, 
            this.itemList = e;
        }
        onAwake() {
            this.init(), this.setEvent();
        }
        onDestroy() {
            this.timer.clearAll(this), this.ani2 = null;
        }
        init() {
            this.ani1.play(0, !1), this.ani2.play(0, !0);
            for (let e = 0; e < this.imgRewardBg.numChildren; e++) {
                const t = this.imgRewardBg.getChildAt(e);
                this.pointCtrl(t, 500 * Math.random());
            }
            for (let e = 0; e < this.itemList.length; e++) {
                const t = this.itemList[e];
                let i = new Mn(t.itemId, t.count), a = new Mn(t.itemId, 2 * t.count);
                this.boxCell.addChild(i), this.boxCell.addChild(a), this.itemCellList[e] = i, this.itemCellList[e + this.itemList.length] = a;
            }
            this.isShowThree = !0, this.showThree();
        }
        setEvent() {
            this.btnEnter.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnThree.on(Laya.Event.CLICK, this, this.onBtnThree);
        }
        onBtnBack() {
            if (!q.getTouch()) return;
            if (this.isDown) return;
            this.isDown = !0;
            let e = [];
            Xt.DIAMOND;
            let i = [], a = 0, s = 0, n = 0;
            for (const t in this.itemCellList) if (Object.prototype.hasOwnProperty.call(this.itemCellList, t)) {
                const o = this.itemCellList[t];
                if (Number(t) < this.itemList.length) switch (o.itemData.type) {
                  case Ur.GOLD:
                    e.push(o.wordPos()), a += o.count;
                    break;

                  case Ur.DIAMOND:
                    i.push(o.wordPos()), s += o.count;
                    break;

                  case Ur.EXP:
                    n += o.count;
                } else if (this.isShowThree) switch (o.itemData.type) {
                  case Ur.GOLD:
                    a += o.count, e.push(o.wordPos());
                    break;

                  case Ur.DIAMOND:
                    i.push(o.wordPos()), s += o.count;
                    break;

                  case Ur.EXP:
                    n += o.count;
                }
            }
            var o = this;
            let r = function() {
                i.length > 0 && function() {
                    let e = Bt.viewCommon.viewDiamond.txtCount, t = Bt.viewCommon.getDiamondPos();
                    tl.getInstance().rewardDiamond(s), Laya.stage.addChild(new Tn(i, t, e, s, function() {}, 1, Xt.DIAMOND));
                }(), e.length > 0 && function() {
                    let t = Bt.viewCommon.viewGold.txtCount, i = Bt.viewCommon.getGoldPos();
                    tl.getInstance().rewardGold(a), Laya.stage.addChild(new Tn(e, i, t, a, function() {}, 1, Xt.GOLD));
                }(), (e.length > 0 || i.length > 0) && Laya.timer.once(1e3, o, function() {
                    o.isDown = !1, Bt.closeFunction();
                }), tl.getInstance().increaseExp(n);
            };
            this.isShowThree ? j.setEvent(r, function() {
                o.isDown = !1;
            }, t.END_DOUBLE_REWARD) : r();
        }
        pointCtrl(e, t) {
            let i = Ae.onlyOneRandomInt(30, this.imgRewardBg.width - 120), a = Ae.onlyOneRandomInt(30, this.imgRewardBg.height - 60);
            e.x = i, e.y = a, e.alpha = 0, Laya.timer.clearAll(e), Laya.Tween.clearAll(e);
            var s = this;
            Laya.timer.once(t, e, function() {
                e ? Laya.Tween.to(e, {
                    alpha: 1
                }, 400, null, Laya.Handler.create(e, () => {
                    Laya.Tween.to(e, {
                        alpha: 0
                    }, 400, null, Laya.Handler.create(e, () => {
                        s.pointCtrl(e, 1e3 * Math.random());
                    }));
                })) : Laya.Tween.clearAll(e);
            });
        }
        showThree() {
            this.isAni = !0, this.imgThree.visible = !0, this.boxNormal.visible = !1, this.boxThree.visible = !0;
            var e = this;
            if (this.isShowThree) {
                for (const t in this.itemCellList) if (Object.prototype.hasOwnProperty.call(this.itemCellList, t)) {
                    const i = this.itemCellList[t];
                    if (i) {
                        let a = kn[2 * this.itemList.length][3 * Number(t)], s = kn[2 * this.itemList.length][3 * Number(t) + 1], n = kn[2 * this.itemList.length][3 * Number(t) + 2];
                        if (Number(t) < this.itemList.length) {
                            kn[this.itemList.length][3 * Number(t)], kn[this.itemList.length][3 * Number(t) + 1], 
                            kn[this.itemList.length][3 * Number(t) + 2];
                            i.pos(a, s), i.scale(n, n), Laya.timer.once(50 * Number(t), this, function() {
                                i.show();
                            });
                        } else i.pos(a, s), i.scale(n, n), Laya.timer.once(50 * Number(t), this, function() {
                            i.show(), Number(t) == 2 * e.itemList.length - 1 && (e.isAni = !1);
                        });
                    }
                }
            } else for (const t in this.itemCellList) if (Object.prototype.hasOwnProperty.call(this.itemCellList, t)) {
                const i = this.itemCellList[t];
                if (i) {
                    let a = kn[2 * this.itemList.length][3 * Number(t)], s = kn[2 * this.itemList.length][3 * Number(t) + 1], n = kn[2 * this.itemList.length][3 * Number(t) + 2];
                    if (Number(t) < this.itemList.length) {
                        let e = kn[this.itemList.length][3 * Number(t)], o = kn[this.itemList.length][3 * Number(t) + 1], r = kn[this.itemList.length][3 * Number(t) + 2];
                        i.pos(e, o), i.scale(r, r), Laya.Tween.to(i, {
                            x: a,
                            y: s,
                            scaleX: n,
                            scaleY: n
                        }, 200);
                    } else i.pos(a, s), i.scale(n, n), Laya.timer.once(Number(t) / 2 * 100, this, function() {
                        i.show(), Number(t) == 2 * e.itemList.length - 1 && (e.isAni = !1);
                    });
                }
            }
        }
        showNormal() {
            this.isAni = !0;
            var e = this;
            if (this.imgThree.visible = !1, this.boxNormal.visible = !0, this.boxThree.visible = !1, 
            this.isShowThree) {
                for (const t in this.itemCellList) if (Object.prototype.hasOwnProperty.call(this.itemCellList, t)) {
                    const i = this.itemCellList[t];
                    if (i) {
                        let a = kn[2 * this.itemList.length][3 * Number(t)], s = kn[2 * this.itemList.length][3 * Number(t) + 1], n = kn[2 * this.itemList.length][3 * Number(t) + 2];
                        if (Number(t) < this.itemList.length) {
                            let o = kn[this.itemList.length][3 * Number(t)], r = kn[this.itemList.length][3 * Number(t) + 1], l = kn[this.itemList.length][3 * Number(t) + 2];
                            i.pos(a, s), i.scale(n, n), Laya.Tween.to(i, {
                                x: o,
                                y: r,
                                scaleX: l,
                                scaleY: l
                            }, 200, null, Laya.Handler.create(this, function() {
                                e.isAni = !1;
                            }), 100 * Number(this.itemList.length));
                        } else Laya.timer.once(50 * (this.itemList.length - Number(t)), this, function() {
                            i.hide();
                        });
                    }
                }
            } else for (const t in this.itemCellList) if (Object.prototype.hasOwnProperty.call(this.itemCellList, t)) {
                const i = this.itemCellList[t];
                if (Number(t) >= this.itemList.length) break;
                if (i) {
                    let a = kn[this.itemList.length][3 * Number(t)], s = kn[this.itemList.length][3 * Number(t) + 1], n = kn[this.itemList.length][3 * Number(t) + 2];
                    i.pos(a, s), i.scale(n, n), Laya.timer.once(100 * Number(t), this, function() {
                        i.show(), Number(t) == e.itemList.length - 1 && (e.isAni = !1);
                    });
                }
            }
        }
        onBtnThree() {
            q.getTouch() && (this.isAni || (this.isShowThree ? (this.showNormal(), this.isShowThree = !1) : (this.showThree(), 
            this.isShowThree = !0)));
        }
    }
    class Pn extends T.view.gold.AddGoldViewUI {
        constructor(e) {
            super(), this.type = 0, this.reward = 800, this.height = this.stage.height, this.width = this.stage.width, 
            this.type = e, this.name = "AddGoldViewCtrl";
        }
        onAwake() {
            this.uiPlatformConfig(), this.init(), this.setEvent();
        }
        onDestroy() {
            this.type = null, this.reward = null, this.btnClose = null, this.btnGold = null, 
            this.ani1 = null;
        }
        init() {
            this.ani1.play(0, !0), hs.setfreeRewardForGoldCoins(), hs.setRewardForInsufficientGoldCoins(), 
            1 == this.type ? (this.labelTag.text = "金币不足!", this.labelTag.color = "#FF3B3B", 
            this.reward = hs.curLackGoldRewards) : this.reward = hs.curFreeGoldRewards, this.txtGold.text = "金币x" + _t.parseGold(this.reward.toString());
        }
        setEvent() {
            this.btnGold.on(Laya.Event.CLICK, this, this.onBtnGold), this.btnGold.addComponent($), 
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onBtnGold() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                1 == e.type && hs.reduceLackGoldMultiple(), Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.GOLD, e.reward);
            }, function() {}, t.GOLD_REWARD);
        }
        onBtnClose() {
            q.getTouch() && Bt.closeFunction();
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnGold.getChildAt(0),
                type: 1
            } ]), hl.platform != v.TT && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.btnGold.x = 235, 
            this.btnNo.visible = !0);
        }
    }
    class Vn extends T.view.menu.MapMenuCellViewUI {
        constructor(e) {
            super(), this.type = e, this.imgSelect.visible = !1, this.imgSelectBg.visible = !1, 
            this.setView();
        }
        onAwake() {
            this.on(Laya.Event.CLICK, this, this.onBtnDown);
        }
        onDestroy() {
            this.boxMain = null, this.imgIcon = null;
        }
        setView() {
            if (this.type == Dt.UN_MAP) return this.imgIcon.visible = !1, void (this.imgEnd.visible = !0);
            switch (this.type) {
              case Dt.RAND:
                this.labelName.text = "随机地图";
                break;

              case 1:
                this.labelName.text = "雪地";
                break;

              case 2:
                this.labelName.text = "运输船";
                break;

              case 3:
                this.labelName.text = "堡垒";
                break;

              case 4:
                this.labelName.text = "工厂";
                break;

              case 5:
                this.labelName.text = "新年广场-夜";
                break;

              case 6:
                this.labelName.text = "新年广场-早";
            }
            this.imgIcon.skin = "sub1/ui/menu/" + this.type + ".png";
        }
        onBtnDown() {
            q.getTouch() && this.type != Dt.UN_MAP && (Mt.map = this.type, Mt.map == Dt.RAND && (Mt.map = Bt.getFunctionViewCtrl(Er.MAP_MENU).dataList[Ae.onlyOneRandomInt(1, Bt.getFunctionViewCtrl(Er.MAP_MENU).dataList.length - 1)]), 
            Bt.getFunctionViewCtrl(Er.MAP_MENU).changeCellSelect(), this.changeSelect(!0));
        }
        changeSelect(e) {
            this.imgSelect.visible = e, this.imgSelectBg.visible = e;
        }
    }
    class Gn extends T.view.menu.MapMenuViewUI {
        constructor(e) {
            super(), this.list = [], this.dataList = [], this.apertureCtrl = null, this.fingerCtrl = null, 
            this.width = Laya.stage.width, this.height = Laya.stage.height, this.mode = e, this.setView();
        }
        onAwake() {
            this.fingerCtrl = ns.createFingerAniCtrl(this), this.apertureCtrl = ns.createCommonAperture(this), 
            this.setGuide(), this.btnClose.on(Laya.Event.CLICK, this, () => {
                Bt.closeFunction();
            }), this.btnStart.on(Laya.Event.CLICK, this, this.onBtnStart);
        }
        onDestroy() {}
        setGuide() {
            switch (console.log("当前新手步骤：", tl.getInstance().getGuide()), tl.getInstance().getGuide()) {
              case Et.GAME_1:
                {
                    console.log("游戏1");
                    let e = new Laya.Point(this.btnStart.width / 2, this.btnStart.height / 2), t = this.btnStart.localToGlobal(e), i = new Laya.Point(this.btnStart.width / 2, this.btnStart.height / 2), a = this.btnStart.localToGlobal(i);
                    this.setGudePos(t, a, this.btnStart);
                    break;
                }

              case Et.GAME_2:
                {
                    console.log("游戏2");
                    let e = new Laya.Point(this.btnStart.width / 2, this.btnStart.height / 2), t = this.btnStart.localToGlobal(e), i = new Laya.Point(this.btnStart.width / 2, this.btnStart.height / 2), a = this.btnStart.localToGlobal(i);
                    this.setGudePos(t, a, this.btnStart);
                    break;
                }

              case Et.FUNGAME_1:
                {
                    console.log("游戏3");
                    let e = new Laya.Point(this.btnStart.width / 2, this.btnStart.height / 2), t = this.btnStart.localToGlobal(e), i = new Laya.Point(this.btnStart.width / 2, this.btnStart.height / 2), a = this.btnStart.localToGlobal(i);
                    this.setGudePos(t, a, this.btnStart);
                    break;
                }
            }
        }
        setGudePos(e, t, i) {
            i.mouseEnabled = !0, this.fingerCtrl.visible = !0, this.fingerCtrl.play(), this.fingerCtrl.x = e.x, 
            this.fingerCtrl.y = e.y, this.apertureCtrl.visible = !0, this.apertureCtrl.play(!1), 
            this.apertureCtrl.x = t.x - this.apertureCtrl.width / 2, this.apertureCtrl.y = t.y - this.apertureCtrl.height / 2;
        }
        setView() {
            this.panel.hScrollBarSkin = "", this.boxCell.width = 0;
            let e = [];
            switch (this.mode) {
              case Tt.TEAMCOMPETITION:
                e.push(0), e.push(1), e.push(2), e.push(3), e.push(4), e.push(5), e.push(6);
                break;

              case Tt.KNIFEWARMODE:
              case Tt.TWOVSTWOMODE:
                e.push(0), e.push(1), e.push(2), e.push(3);
                break;

              case Tt.ONEVSONEMODE:
                e.push(1);
                break;

              case Tt.BIOCHEMISTRY:
                e.push(7);
                break;

              case Tt.SNIPERMODE:
                e.push(1);
            }
            e.push(-1), this.dataList = e, console.log("地图列表：", this.dataList);
            for (let t = 0; t < e.length; t++) {
                let i = new Vn(e[t]);
                this.list.push(i), this.boxCell.addChild(i), this.boxCell.width += i.width, 0 == t && (i.changeSelect(!0), 
                Mt.map = i.type, Mt.map == Dt.RAND && (Mt.map = this.dataList[Ae.onlyOneRandomInt(1, this.dataList.length - 1)]));
            }
        }
        onBtnStart() {
            if (!q.getTouch()) return;
            let e = this;
            hl.platform != v.TT ? Bt.openFunction(Er.ROLETRY, gr.REPLACE, ur.WINDOW, St.HIDE, {
                cb: function() {
                    e.mode == Tt.TEAMCOMPETITION || e.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            }) : hl.isReviewVersion() ? e.mode == Tt.TEAMCOMPETITION || e.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.ROLETRY, gr.REPLACE, ur.WINDOW, St.HIDE, {
                cb: function() {
                    e.mode == Tt.TEAMCOMPETITION || e.mode == Tt.BIOCHEMISTRY ? tl.getInstance().isNew || tl.getInstance().getGuide() == Et.GAME_1 ? Bt.getFunctionViewCtrl(Er.FIRST).loading() : Bt.openFunction(Er.EQUIP_TRY, gr.COVER, ur.VIEW, St.HIDE) : Bt.getFunctionViewCtrl(Er.FIRST).loading();
                }
            });
        }
        changeCellSelect() {
            for (let e = 0; e < this.list.length; e++) {
                this.list[e].changeSelect(!1);
            }
        }
    }
    class Un extends T.view.offline.OfflineViewUI {
        constructor() {
            super(), this.reward = 800, this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            this.uiPlatformConfig(), this.init(), this.setEvent(), hl.carelessCtrl() || (this.btnNo.visible = !0, 
            this.btnClose.visible = !1, this.btnGold.x = 241), hl.platform != v.WX && hl.platform != v.TT && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.btnNo.visible = !0, 
            this.btnClose.visible = !1, this.btnGold.x = 241);
        }
        onDestroy() {
            this.ani1 = null, this.btnGold = null, this.btnClose = null;
        }
        init() {
            hs.setOflineReawrd(), this.ani1.play(0, !0), this.reward = hs.offlineReawrds, this.txtGold.text = "金币x" + _t.parseGold(this.reward.toString());
        }
        setEvent() {
            this.btnGold.on(Laya.Event.CLICK, this, this.onBtnGold), this.btnGold.addComponent($), 
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onBtnGold() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                Bt.openFunction(Er.GET_GOLD_REWARD, gr.REPLACE, ur.VIEW, St.ALL_SHOW, 2 * e.reward);
            }, function() {}, t.GOLD_REWARD);
        }
        onBtnClose() {
            q.getTouch() && Bt.openFunction(Er.GET_GOLD_REWARD, gr.REPLACE, ur.VIEW, St.ALL_SHOW, this.reward);
        }
        onBtnSingle() {
            q.getTouch() && Bt.openFunction(Er.GET_GOLD_REWARD, gr.REPLACE, ur.VIEW, St.ALL_SHOW, this.reward);
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnGold.getChildAt(0),
                type: 1
            } ]);
        }
    }
    class Fn extends T.view.revive.ReviveViewUI {
        constructor() {
            super(), this.countDown = 10, this.isDone = !1, this.width = this.stage.width, this.height = this.stage.height, 
            hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock();
        }
        onAwake() {
            this.uiPlatformConfig(), Rs.gameStop = !0, this.txtCountDown.text = this.countDown.toString(), 
            this.txtHit.text = "对我造成伤害：" + Ae.onlyOneRandomInt(50, 100).toString(), this.timerLoop(1e3, this, this.update), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnRevive.on(Laya.Event.CLICK, this, this.onBtnRevive), this.btnRevive.addComponent($), 
            this.setPlatformStyle(), this.txtKiller.text = Mt.mode == Tt.BIOCHEMISTRY ? "丧尸" : Rs.killerName, 
            Rs.killerLogic && Rs.killerLogic.getArmCtrl() && (this.imgArm.skin = Rs.killerLogic.getArmCtrl().getIcon()), 
            hl.platform != v.TT && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.btnNo.visible = !0, 
            this.btnRevive.x = 224, this.btnBack.visible = !1), tl.getInstance().isBannerTouch() && hl.platform == v.WX && !hl.isZsCtrl && q.delayShowButton(this.btnBack, 2e3);
        }
        onDestroy() {
            if (this.countDown = null, this.isDone = null, hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                Bt.getFunctionViewCtrl(Er.GAME).onBtnDown(!0);
            }
        }
        update() {
            0 != this.countDown ? (this.countDown--, this.txtCountDown.text = this.countDown.toString()) : (this.txtCountDown.text = this.countDown.toString(), 
            this.over(), this.timer.clear(this, this.update));
        }
        over() {
            this.isDone || (this.isDone = !0, this.timer.resume(), Bt.clean(), Bt.openFunction(Er.GAMEOVER, gr.COVER, ur.VIEW, St.HIDE, !1));
        }
        revive() {
            this.isDone = !0, this.timer.resume(), Bt.closeFunction(), Rs.gameStop = !1, Rs.playerLogicalBaseLayer.directRevive(function() {
                Rs.playerLogicalBaseLayer.getPresentationBaseLayer().setPos(Rs.playerLogicalBaseLayer.getInitPos());
            });
        }
        onBtnBack() {
            q.getTouch() && this.over();
        }
        onBtnRevive() {
            if (!q.getTouch()) return;
            let e = this;
            this.timer.pause(), j.setEvent(function() {
                e.revive();
            }, function() {
                e.timer.resume();
            }, t.REVIVE);
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.btnBack.y -= 30, this.btnRevive.y -= 30);
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setWeb4399Platform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnRevive.getChildAt(0),
                type: 1
            } ]);
        }
    }
    var Hn, Wn;
    !function(e) {
        e[e.UNLOCK_NORMAL = 1] = "UNLOCK_NORMAL", e[e.UNLOCK_SELECT = 2] = "UNLOCK_SELECT", 
        e[e.LOCK_NORMAL = 3] = "LOCK_NORMAL", e[e.LOCK_SELECT = 4] = "LOCK_SELECT", e[e.USE_NORMAL = 5] = "USE_NORMAL", 
        e[e.USE_SELECT = 6] = "USE_SELECT";
    }(Hn || (Hn = {}));
    class Yn extends T.view.role.RoleItemUI {
        constructor() {
            super();
        }
        setView() {
            console.log("状态：", this.dataSource.state), this.txtName.text = this.dataSource.roleName, 
            this.txtPrice.text = this.dataSource.cost.toString(), this.imgGrade.skin = ul.WAREHOUSE_UI.GRADE_LABEL_ROOT + this.dataSource.grade.toString() + ".png", 
            this.imgFrame.skin = ul.ROLE_VIEW_UI.GRADE_FRAME_UI_ROOT + this.dataSource.grade.toString() + ".png", 
            this.imgIcon.skin = this.dataSource.url, this.setState(this.dataSource.state), this.imgIcon.skin = this.dataSource.url;
        }
        onDestroy() {
            this.imgFrame = null, this.imgGrade = null, this.imgIcon = null, this.imgPrice = null, 
            this.imgSelect = null, this.txtName = null, this.txtPrice = null;
        }
        setState(e) {
            switch (e) {
              case Hn.UNLOCK_NORMAL:
                this.boxUsing.visible = !1, this.imgPrice.visible = !1, this.imgIcon.disabled = !1, 
                this.imgSelect.visible = !1;
                break;

              case Hn.UNLOCK_SELECT:
                this.imgSelect.visible = !0, this.boxUsing.visible = !1, this.imgPrice.visible = !1, 
                this.imgIcon.disabled = !1;
                break;

              case Hn.LOCK_NORMAL:
                this.boxUsing.visible = !1, this.imgPrice.visible = !0, this.imgSelect.visible = !1, 
                this.imgIcon.disabled = !0;
                break;

              case Hn.LOCK_SELECT:
                this.imgSelect.visible = !0, this.boxUsing.visible = !1, this.imgPrice.visible = !0, 
                this.imgIcon.disabled = !0;
                break;

              case Hn.USE_NORMAL:
                this.boxUsing.visible = !0, this.imgPrice.visible = !1, this.imgSelect.visible = !1, 
                this.imgIcon.disabled = !1;
                break;

              case Hn.USE_SELECT:
                this.boxUsing.visible = !0, this.imgSelect.visible = !0, this.imgPrice.visible = !1, 
                this.imgIcon.disabled = !1;
            }
        }
    }
    class Xn extends T.view.role.RoleViewUI {
        constructor() {
            super(), this.cost = 0, this.scene3D = null, this._translate2 = new Laya.Vector3(5, -10, 1), 
            this._translate = new Laya.Vector3(0, 0, 0), this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), 
            this.rotMouseX = 0, this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            this.init(), this.setBtnEvent();
        }
        onDestroy() {
            this.img3DCenter = null, this.btnBuy = null, this.txtPrice = null, this.txtUsing = null, 
            this.btnBack = null, this.sp && this.sp.destroy(), this.sp = null, this.scene3D && this.scene3D.destroy(), 
            this.scene3D = null, this.cost = null, this._translate2 = null, this._translate = null, 
            this._pos = null, this.rotMouseX = null;
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i);
        }
        showModel(e) {
            console.log("传入ID：", e), this.sp && (this.sp.destroy(), this.sp = null), this.sp = Te.createRoleViewSkin(this._translate, this.scene3D, !1, e), 
            this.sp.transform.localRotationEulerY = 20, this.sp.transform.localScaleX = 2.5, 
            this.sp.transform.localScaleY = 2.5, this.sp.transform.localScaleZ = 2.5;
            let t = Te.createMenuArm(tl.getInstance().getSelectSkin(), this.sp);
            t.transform.localScaleX = 1.7, t.transform.localScaleY = 1.7, t.transform.localScaleZ = 1.7;
        }
        setData() {
            let e = [], t = tl.getInstance().getRoleSkinLib(), i = tl.getInstance().getSelectRoleSkin();
            for (let a = 0; a < Be.keys.length; a++) {
                console.log("RoleData.getDataByIndex(k):", Be.getDataByIndex(a));
                let s = {
                    id: Be.getDataByKey(a + 1).id,
                    url: Be.getDataByKey(a + 1).icon,
                    cost: Be.getDataByKey(a + 1).cost,
                    grade: Be.getDataByKey(a + 1).grade,
                    roleName: Be.getDataByKey(a + 1).cnName,
                    state: Hn.LOCK_NORMAL
                };
                if (i == Be.getDataByKey(a + 1).id) s.state = Hn.USE_SELECT, Laya.timer.once(1, this, function() {
                    this.showModel(Be.getDataByKey(a + 1).id);
                }, null, !1), this.btnBuy.visible = !1; else for (let e in t) if (t[e] == Be.getDataByKey(a + 1).id) {
                    s.state = Hn.UNLOCK_NORMAL;
                    break;
                }
                e.push(s);
            }
            e.sort(function(e, t) {
                return e.state == t.state ? e.id > t.id ? 1 : -1 : e.state == Hn.LOCK_NORMAL ? 1 : e.state == Hn.UNLOCK_NORMAL && t.state == Hn.UNLOCK_SELECT && e.id > t.id ? 1 : -1;
            }), this.list.itemRender = Yn, this.list.vScrollBarSkin = "", this.list.dataSource = e;
        }
        init() {
            Da.loadFont(ul.FNT.FNT1, this.txtPrice), ol.isFullScreen() && (this.boxLeft.x += 120, 
            this.img3DCenter.x = 0), this.create3D(), this.setData(), this.list.selectEnable = !0, 
            this.list.selectHandler = new Laya.Handler(this, this.onSelectSkin), this.list.renderHandler = new Laya.Handler(this, this.updateSkinItem);
        }
        setBtnEvent() {
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnBuy.on(Laya.Event.CLICK, this, this.onBtnBuy), 
            this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnMouseDown), this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnRot);
        }
        onBtnMouseDown(e) {
            this.rotMouseX = e.stageX;
        }
        onBtnRot(e) {
            if (this.sp) {
                let t = e.stageX - this.rotMouseX;
                this.sp.transform.localRotationEulerY += .4 * t, this.rotMouseX = e.stageX;
            }
        }
        onSelectSkin(e) {
            console.log("选择：", e);
            let t = this.list.getCell(parseInt(e));
            console.log("上一个状态：", this.list.dataSource[e].state), this.list.dataSource[e].state == Hn.LOCK_NORMAL ? this.list.dataSource[e].state = Hn.LOCK_SELECT : this.list.dataSource[e].state == Hn.UNLOCK_NORMAL ? this.list.dataSource[e].state = Hn.USE_SELECT : this.list.dataSource[e].state == Hn.USE_NORMAL && (this.list.dataSource[e].state = Hn.USE_SELECT), 
            console.log("当前状态：", this.list.dataSource[e].state), t.setState(this.list.dataSource[e].state);
            for (let t in this.list.dataSource) {
                let i = this.list.getCell(parseInt(t));
                e != parseInt(t) && (this.list.dataSource[e].state == Hn.LOCK_SELECT ? this.list.dataSource[t].state == Hn.USE_SELECT ? this.list.dataSource[t].state = Hn.USE_NORMAL : this.list.dataSource[t].state == Hn.LOCK_SELECT && (this.list.dataSource[t].state = Hn.LOCK_NORMAL) : this.list.dataSource[e].state == Hn.USE_SELECT && (this.list.dataSource[t].state == Hn.USE_SELECT ? this.list.dataSource[t].state = Hn.UNLOCK_NORMAL : this.list.dataSource[t].state == Hn.LOCK_SELECT ? this.list.dataSource[t].state = Hn.LOCK_NORMAL : this.list.dataSource[t].state == Hn.USE_NORMAL && (this.list.dataSource[t].state = Hn.UNLOCK_NORMAL)), 
                i.setState(this.list.dataSource[t].state));
            }
            this.btnBuy.visible = !1, this.txtUsing.visible = !1, this.list.dataSource[e].state == Hn.UNLOCK_NORMAL || this.list.dataSource[e].state == Hn.UNLOCK_SELECT ? (this.txtUsing.visible = !0, 
            tl.getInstance().setSelectRoleSkin(this.list.dataSource[e].id)) : this.list.dataSource[e].state == Hn.USE_NORMAL || this.list.dataSource[e].state == Hn.USE_SELECT ? (this.txtUsing.visible = !0, 
            tl.getInstance().setSelectRoleSkin(this.list.dataSource[e].id)) : this.list.dataSource[e].state != Hn.LOCK_NORMAL && this.list.dataSource[e].state != Hn.LOCK_SELECT || (this.btnBuy.visible = !0, 
            this.txtPrice.text = this.list.dataSource[e].cost.toString(), this.cost = this.list.dataSource[e].cost), 
            this.showModel(this.list.dataSource[e].id);
        }
        updateSkinItem(e, t) {
            e.setView();
        }
        onBtnBuy() {
            if (q.getTouch()) if (tl.getInstance().costGold(this.cost)) {
                Oi.showNotification("购买成功");
                for (let e in this.list.dataSource) if (this.list.dataSource[e].state == Hn.LOCK_SELECT) {
                    this.list.dataSource[e].state = Hn.USE_SELECT, tl.getInstance().setRoleSkinLib(this.list.dataSource[e].id);
                    let t = this.list.dataSource[e].id, i = Ur.HERO.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t);
                    this.list.refresh(), this.onSelectSkin(e), Bt.openFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                        id: i,
                        cb: null
                    });
                    break;
                }
            } else Bt.openFunction(Er.ADD_GOLD, gr.COVER, ur.WINDOW, St.GOLD, 1);
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    !function(e) {
        e.CANBUYBYGOLD = "CANBUYBYGOLD", e.CANBUYBYDIAMONDS = "CANBUYBYDIAMONDS", e.LOCKARMLESSTWO = "LOCKARMLESSTWO", 
        e.LOCKARM = "LOCKARM";
    }(Wn || (Wn = {}));
    let Kn = new Laya.ColorFilter([ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ]), zn = new Laya.ColorFilter([ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 ]);
    class qn extends T.view.shop.ShopItemUI {
        constructor() {
            super(), Da.loadFont(ul.FNT.FNT2, this.txtLv), this.btnBuy.on(Laya.Event.CLICK, this, this.onBtnBuy);
        }
        onDestroy() {
            this.imgBuyType = null, this.imgContent = null, this.imgIcon = null, this.txtLock = null, 
            this.txtLv = null, this.txtName = null, this.txtPrice = null, this.txtUnlockLv = null, 
            this.btnBuy = null, this.boxCanBuy = null, this.boxLock = null;
        }
        onBtnBuy() {
            if (this.dataSource.state == Wn.LOCKARM) {
                let e = this.dataSource.id;
                Bt.openFunction(Er.SHOPTRY, gr.COVER, ur.WINDOW, St.HIDE, {
                    id: e
                });
            } else if (!ls.getInstance().checkEmptyPos()) return console.log("没有空位"), void Oi.showNotification("购买失败，无空卡槽");
            this.dataSource.state == Wn.CANBUYBYGOLD ? tl.getInstance().costGold(this.dataSource.price) ? (Oi.showNotification("购买成功"), 
            L.notify(w.ADDARM_BY_SHOP, {
                id: this.dataSource.armData.id
            }), tl.getInstance().updateBuyByGoldNum(), console.log("当前金币数值：", this.dataSource.price), 
            this.dataSource.price = Math.floor(this.dataSource.armData.price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
            console.log("进阶金币数值：", this.dataSource.price), this.setState()) : (hs.setRewardForInsufficientGoldCoins(), 
            Bt.openFunction(Er.ADD_GOLD, gr.COVER, ur.WINDOW, St.GOLD, 1)) : this.dataSource.state == Wn.CANBUYBYDIAMONDS && (tl.getInstance().costDiamond(this.dataSource.price) ? (Oi.showNotification("购买成功"), 
            L.notify(w.ADDARM_BY_SHOP, {
                id: this.dataSource.armData.id
            }), tl.getInstance().updateBuyByDiamondNum(), this.dataSource.price = Math.floor(this.dataSource.armData.priceByDiamond * Math.pow(hl.costDiamond, tl.getInstance().getBuyByDiamondNum())), 
            this.setState()) : (hs.setRewardForInsufficientDiamonds(), Bt.openFunction(Er.ADD_DIAMONDS, gr.COVER, ur.WINDOW, St.DIAMOND, 1)));
        }
        setView(e) {
            this.dataSource = e, this.setState();
        }
        setState() {
            if (this.btnBuy.visible = !1, this.txtLock.visible = !1, this.boxCanBuy.visible = !1, 
            this.boxLock.visible = !1, this.boxTry.visible = !1, this.txtLv.text = this.dataSource.armData.id.toString(), 
            this.txtName.text = this.dataSource.armData.name.toString(), this.imgIcon.skin = this.dataSource.armData.icon, 
            this.txtLock.text = "未解锁", this.txtPrice.text = _t.parseGold(this.dataSource.price), 
            this.imgContent.alpha = 1, this.btnBuy.skin = "sub1/ui/scale9/img_normal_1.png", 
            this.imgIcon.filters = [ Kn ], this.dataSource.state == Wn.CANBUYBYGOLD) this.btnBuy.disabled = !1, 
            this.btnBuy.visible = !0, this.boxCanBuy.visible = !0, this.imgBuyType.skin = ul.BUYTYPE_UI.GOLD; else if (this.dataSource.state == Wn.CANBUYBYDIAMONDS) this.btnBuy.disabled = !1, 
            this.btnBuy.visible = !0, this.boxCanBuy.visible = !0, this.imgBuyType.skin = ul.BUYTYPE_UI.DIAMOND; else if (this.dataSource.state == Wn.LOCKARM) this.btnBuy.disabled = !1, 
            this.txtLock.visible = !0, this.imgIcon.filters = [ zn ], this.imgContent.alpha = .5, 
            this.checkInCurID() && tl.getInstance().getGuide() > Et.GAME_1 && (tl.getInstance().isNew ? Ts.gameNum > 1 && (this.imgContent.alpha = 1, 
            this.txtLock.visible = !1, this.boxTry.visible = !0, this.btnBuy.visible = !0, this.btnBuy.skin = "sub1/ui/scale9/img_shop_try_1.png", 
            this.imgContent.disabled = !1) : (this.imgContent.alpha = 1, this.txtLock.visible = !1, 
            this.boxTry.visible = !0, this.btnBuy.visible = !0, this.btnBuy.skin = "sub1/ui/scale9/img_shop_try_1.png", 
            this.imgContent.disabled = !1)); else if (this.dataSource.state == Wn.LOCKARMLESSTWO) {
                this.imgContent.alpha = 1, this.btnBuy.disabled = !0, this.btnBuy.visible = !0, 
                this.boxLock.visible = !0;
                let e = this.dataSource.armData.id + 2;
                this.txtUnlockLv.text = "需合成" + e + "级";
            }
        }
        checkInCurID() {
            let e = Bt.getFunctionViewCtrl(Er.SHOP).curID, t = this.dataSource.id;
            return t > e && t <= e + 5;
        }
    }
    class Qn extends T.view.shop.ShopViewUI {
        constructor() {
            super(), this.curID = 1, this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            this.init(), this.setEvent();
        }
        onDestroy() {
            this.btnClose = null, this.list = null;
        }
        init() {
            this.setData();
        }
        setData() {
            let e = [], t = tl.getInstance().getMaxUnLockArm();
            for (let i = 0; i < A.keys.length; i++) {
                let a = A.getDataByKey(A.keys[i]), s = {
                    id: a.id,
                    armData: a,
                    buyType: 0,
                    price: 0,
                    state: Wn.CANBUYBYGOLD
                };
                console.log("当前ID：", a.id, "本地最大的武器ID：", t), a.id < t ? (a.id == t - 1 || a.id == t - 2 ? (s.buyType = 1, 
                s.price = Math.floor(a.priceByDiamond * Math.pow(hl.costDiamond, tl.getInstance().getBuyByDiamondNum())), 
                s.state = Wn.CANBUYBYDIAMONDS) : (s.buyType = 0, s.price = Math.floor(a.price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
                console.log("当前---：", s.price, a.price, hl.costGold, tl.getInstance().getBuyByGoldNum()), 
                s.state = Wn.CANBUYBYGOLD), 1 == a.id && (s.buyType = 0, s.price = Math.floor(a.price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
                s.state = Wn.CANBUYBYGOLD)) : a.id == t ? 1 == a.id ? (s.buyType = 0, s.price = Math.floor(a.price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
                s.state = Wn.CANBUYBYGOLD) : (s.state = Wn.LOCKARMLESSTWO, s.buyType = 1, this.curID = a.id) : s.state = Wn.LOCKARM, 
                e.push(s);
            }
            this.list.itemRender = qn, this.list.vScrollBarSkin = "", this.list.dataSource = e, 
            this.list.selectEnable = !0, this.list.renderHandler = new Laya.Handler(this, this.updateSkinItem);
        }
        updateSkinItem(e, t) {
            e.setView(e.dataSource);
        }
        onSelectShopItem(e) {
            ls.getInstance().checkEmptyPos() ? this.list.getCell(e).dataSource.state == Wn.CANBUYBYGOLD ? tl.getInstance().costGold(this.list.getCell(e).dataSource.price) && (L.notify(w.ADDARM_BY_SHOP, {
                id: this.list.getCell(e).dataSource.armData.id
            }), tl.getInstance().updateBuyByGoldNum(), console.log("当前金币数值：", this.list.getCell(e).dataSource.price), 
            this.list.getCell(e).dataSource.price = Math.floor(this.list.getCell(e).dataSource.armData.price * Math.pow(hl.costGold, tl.getInstance().getBuyByGoldNum())), 
            console.log("进阶金币数值：", this.list.getCell(e).dataSource.price), this.list.getCell(e).setState()) : this.list.getCell(e).dataSource.state == Wn.CANBUYBYDIAMONDS && tl.getInstance().costDiamond(this.list.getCell(e).dataSource.price) && (L.notify(w.ADDARM_BY_SHOP, {
                id: this.list.getCell(e).dataSource.armData.id
            }), tl.getInstance().updateBuyByDiamondNum(), this.list.getCell(e).dataSource.price = Math.floor(this.list.getCell(e).dataSource.armData.priceByDiamond * Math.pow(hl.costDiamond, tl.getInstance().getBuyByDiamondNum())), 
            this.list.getCell(e).setState()) : console.log("没有空位");
        }
        setEvent() {
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onBtnClose() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    class Zn {
        static getDataByKey(e) {
            if (Zn.cache[e]) return Zn.cache[e];
            if (1 == e) {
                let t = new Zn();
                return t.day = 1, t.name = "第一天", t.info = "钻石x50", t.award = 50, t.awardType = 3, 
                t.itemId = 2001, Zn.cache[e] = t, t;
            }
            if (2 == e) {
                let t = new Zn();
                return t.day = 2, t.name = "第二天", t.info = "USP-魑魅", t.award = 62, t.awardType = 2, 
                t.itemId = 4034, Zn.cache[e] = t, t;
            }
            if (3 == e) {
                let t = new Zn();
                return t.day = 3, t.name = "第三天", t.info = "传说之翼碎片x1", t.award = 1, t.awardType = 7, 
                t.itemId = 7008, Zn.cache[e] = t, t;
            }
            if (4 == e) {
                let t = new Zn();
                return t.day = 4, t.name = "第四天", t.info = "钻石x150", t.award = 150, t.awardType = 3, 
                t.itemId = 2001, Zn.cache[e] = t, t;
            }
            if (5 == e) {
                let t = new Zn();
                return t.day = 5, t.name = "第五天", t.info = "鬼面修罗碎片x1", t.award = 1, t.awardType = 6, 
                t.itemId = 6013, Zn.cache[e] = t, t;
            }
            if (6 == e) {
                let t = new Zn();
                return t.day = 6, t.name = "第六天", t.info = "钻石x300", t.award = 300, t.awardType = 3, 
                t.itemId = 2001, Zn.cache[e] = t, t;
            }
            if (7 == e) {
                let t = new Zn();
                return t.day = 7, t.name = "第七天", t.info = "超级宝箱x1", t.award = 63, t.awardType = 2, 
                t.itemId = 4032, Zn.cache[e] = t, t;
            }
        }
        static getDataByIndex(e) {
            return Zn.cache[this.keys[e]] ? Zn.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Zn.cache;
        }
        clear() {
            Zn.cache = {};
        }
    }
    var jn;
    Zn.cache = {}, Zn.keys = [ 1, 2, 3, 4, 5, 6, 7 ], function(e) {
        e[e.HIDE = 0] = "HIDE", e[e.SHOW = 1] = "SHOW";
    }(jn || (jn = {}));
    let Jn = [ "sub1/ui/getReward/img_Item_bg_4.png", "sub1/ui/getReward/img_Item_bg_3.png", "sub1/ui/getReward/img_Item_bg_2.png", "sub1/ui/getReward/img_Item_bg_1.png" ], $n = [ "sub1/ui/library/img_grade_1.png", "sub1/ui/library/img_grade_2.png", "sub1/ui/library/img_grade_3.png", "sub1/ui/library/img_grade_4.png" ], eo = [ "sub1/ui/getReward/img_debris_4.png", "sub1/ui/getReward/img_debris_3.png", "sub1/ui/getReward/img_debris_2.png", "sub1/ui/getReward/img_debris_1.png" ];
    class to extends T.view.getReward.BoxItemCellViewUI {
        constructor() {
            super(), this.type = jn.HIDE, this.isExtara = !1, this.targetP = 0, this.visible = !1, 
            this.type = jn.HIDE, this.maxPWigth = this.imgP.width;
        }
        setView(e, t, i = !1) {
            switch (this.itemData = Is.getDataByKey(e), this.count = t, this.targetP = 0, this.imgDebris.visible = !1, 
            this.labelExtra.visible = !1, this.imgIcon.scale(1.9, 1.9), this.visible = !1, this.type = jn.HIDE, 
            this.imgGrade.visible = !1, this.boxDebrisP.visible = !1, this.labelCount.visible = !0, 
            this.itemData.type) {
              case Ur.GOLD:
              case Ur.DIAMOND:
              case Ur.EXP:
              case Ur.OTHER:
                this.imgIcon.skin = ul.ITEM_ROOT + this.itemData.icon, this.labelName.text = this.itemData.name, 
                this.labelCount.text = _t.parseGold(this.count), this.imgBg.skin = "sub1/ui/getReward/img_Item_bg_1.png";
                break;

              case Ur.HERO_DEBRIS:
                {
                    this.labelCount.visible = !1, this.imgIcon.scale(1, 1), this.imgIcon.skin = ul.ROLE_ROOT + this.itemData.icon, 
                    this.labelName.text = this.itemData.name, this.labelCount.text = "x" + _t.parseGold(this.count), 
                    this.boxDebrisP.visible = !0, this.labelName.text = this.itemData.name, this.imgGrade.visible = !0, 
                    this.imgBg.skin = Jn[Math.max(0, this.itemData.quality - 1)], this.imgGrade.skin = $n[Math.max(0, this.itemData.quality - 1)], 
                    console.log(this.itemData.name + tl.getInstance().getTargetFragment({
                        type: Ur.HERO_DEBRIS,
                        id: this.itemData.id
                    }));
                    let e = tl.getInstance().getTargetFragment({
                        type: Ur.HERO_DEBRIS,
                        id: this.itemData.id
                    }), t = Be.getDataByKey(this.itemData.extra()).cost;
                    this.imgP.width = this.maxPWigth * Math.min(1, (e - this.count) / t), this.labelDebris.text = "(" + e + "/" + t + ")", 
                    this.labelDebrisCount.text = "x" + _t.parseGold(this.count), this.targetP = this.maxPWigth * Math.min(1, e / t), 
                    this.imgDebris.skin = eo[Math.max(0, this.itemData.quality - 1)];
                }
                break;

              case Ur.PART_DEBRIS:
                {
                    this.labelCount.visible = !1, this.imgIcon.scale(1, 1), this.imgIcon.skin = ee.getDataByKey(this.itemData.extra()).icon, 
                    this.labelName.text = this.itemData.name, this.labelCount.text = "x" + _t.parseGold(this.count), 
                    this.boxDebrisP.visible = !0, this.labelName.text = this.itemData.name, this.imgGrade.visible = !0, 
                    this.imgBg.skin = Jn[Math.max(0, this.itemData.quality - 1)], this.imgGrade.skin = $n[Math.max(0, this.itemData.quality - 1)];
                    let e = tl.getInstance().getTargetFragment({
                        type: Ur.PART_DEBRIS,
                        id: this.itemData.id
                    }), i = ee.getDataByKey(this.itemData.extra()).cost;
                    this.imgP.width = this.maxPWigth * Math.min(1, (e - t) / i), this.labelDebris.text = "(" + e + "/" + i + ")", 
                    this.labelDebrisCount.text = "x" + _t.parseGold(this.count), this.targetP = this.maxPWigth * Math.min(1, e / i), 
                    this.imgDebrisP.skin = eo[Math.max(0, this.itemData.quality - 1)], this.imgDebris.skin = eo[Math.max(0, this.itemData.quality - 1)];
                    break;
                }

              case Ur.EQUIP:
                {
                    this.labelCount.visible = !1;
                    let e = A.getDataByKey(this.itemData.extra());
                    this.imgIcon.skin = e.icon, this.imgIcon.scale(-1, 1), this.imgIcon.anchorX = .5, 
                    this.imgIcon.anchorY = .5, this.imgIcon.rotation = 45, this.labelName.text = e.name, 
                    this.imgBg.skin = Jn[e.grade - 1], this.imgGrade.visible = !0, this.imgGrade.skin = $n[e.grade - 1];
                    break;
                }

              case Ur.PART:
                this.labelCount.visible = !1, this.imgIcon.scale(1, 1), this.imgIcon.skin = ee.getDataByKey(this.itemData.extra()).icon, 
                this.imgBg.skin = Jn[Math.max(0, this.itemData.quality - 1)], this.imgGrade.visible = !0, 
                this.imgGrade.skin = $n[Math.max(0, this.itemData.quality - 1)], this.labelName.text = this.itemData.name;
            }
            i && (this.isExtara = !0, this.imgBg.skin = "sub1/ui/getReward/img_Item_bg_0.png", 
            this.labelExtra.visible = !0, this.itemData.type != Ur.PART_DEBRIS && Ur.HERO_DEBRIS != this.itemData.type || (this.imgGrade.visible = !0));
        }
        show(e = null) {
            this.visible = !0, this.aniOpen.wrapMode = Laya.AnimationBase.WRAP_POSITIVE, this.aniOpen.offAll(Laya.Event.COMPLETE), 
            this.aniOpen.play(0, !1);
            var t = this;
            Laya.Tween.clearAll(this.imgP), this.aniOpen.on(Laya.Event.COMPLETE, this, function() {
                t.type = jn.SHOW, t.targetP && Laya.Tween.to(this.imgP, {
                    width: t.targetP
                }, 500), e && e();
            });
        }
        hide(e = null) {
            this.aniOpen.wrapMode = Laya.AnimationBase.WRAP_REVERSE, this.aniOpen.offAll(Laya.Event.COMPLETE), 
            this.aniOpen.play(0, !1);
            var t = this;
            this.aniOpen.on(Laya.Event.COMPLETE, this, function() {
                t.type = jn.HIDE, t.visible = !1, e && e();
            });
        }
        wordPos() {
            let e = new Laya.Point(this.width / 2, this.height / 2);
            return this.localToGlobal(e), e;
        }
    }
    let io = {
        1: [ 420, 66, .6 ],
        2: [ 347, 65, .6, 501, 65, .6 ],
        3: [ 267, 65, .6, 421, 65, .6, 576, 65, .6 ],
        4: [ 194, 65, .6, 347, 65, .6, 501, 65, .6, 656, 65, .6 ],
        5: [ 114, 65, .6, 267, 65, .6, 421, 65, .6, 576, 65, .6, 732, 65, .6 ],
        6: [ 261, 16, 1, 416, 16, 1, 574, 16, 1, 261, 174, 1, 416, 174, 1, 574, 174, 1 ],
        8: [ 188, 16, 1, 341, 16, 1, 494, 16, 1, 647, 16, 1, 188, 174, 1, 341, 174, 1, 494, 174, 1, 647, 174, 1 ]
    };
    class ao extends T.view.getReward.GetBoxRewardNextViewUI {
        constructor(e) {
            super(), this.itemList = [], this.itemCellList = {}, this.isAni = !1, this.isDown = !1, 
            this.isHaveExtra = !1, this.width = this.stage.width, this.height = this.stage.height, 
            this.itemList = e, this.boxBg.scaleX = this.stage.width / this.boxBg.width, tl.getInstance().isNew && Ts.gameNum - 1 <= 3 && xt.reportNewPlayerEndRewardListView(Ts.gameNum - 1);
        }
        onAwake() {
            this.init(), this.setEvent(), this.uiPlatformConfig();
        }
        onDestroy() {
            this.timer.clearAll(this), Bt.getFunction(Er.NEW_YEAR_GIFT) && Bt.triggerAutoOpen(), 
            us.unregisterByFuncId();
        }
        init() {
            this.ani1.play(0, !1), this.itemList[0].isExtra && ao.adSuccess(this.itemList, !0);
            let e = !1;
            for (let t = 0; t < this.itemList.length; t++) {
                const i = this.itemList[t];
                let a = new to();
                a.setView(i.itemId, i.count, i.isExtra), this.boxCell.addChild(a), i.isExtra && (e = !0, 
                this.isHaveExtra = !0), this.itemCellList[t] = a;
            }
            this.showNormal(), hl.carelessCtrl() || (this.btnNo.visible = !0, this.btnNormal.visible = !1, 
            this.btnAd.x = 7), hl.platform != v.TT && hl.platform != v.WX || (this.btnNo.visible = !0, 
            this.btnNormal.visible = !1, this.btnAd.x = 7), e ? this.boxNormal.visible = !0 : (this.boxNormal.visible = !1, 
            this.btnBack.visible = !0, this.on(Laya.Event.CLICK, this, this.onBtnBack), j.showBannerAd(), 
            this.isHaveExtra = !1);
        }
        setEvent() {
            this.btnNormal.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnAd.addComponent($), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onBtnBack() {
            if (q.getTouch() && !this.isDown) {
                this.isDown = !0;
                var e = this;
                hl.platform == v.OPPO ? Nt.getCurScene().state == _s.OVER ? us.execute(function() {
                    Bt.getFunction(Er.GET_BOX_REWARD_NEXT) && (e.isHaveExtra || j.hideBannerAd(), Bt.closeFunction(), 
                    Bt.triggerAutoOpen());
                }, !1, !0) : (e.isHaveExtra || j.hideBannerAd(), Bt.closeFunction(), Bt.triggerAutoOpen()) : (e.isHaveExtra || j.hideBannerAd(), 
                Bt.closeFunction(), ao.endFunc(), Bt.triggerAutoOpen());
            }
        }
        onBtnAd() {
            if (q.getTouch() && !this.isDown) {
                this.isDown = !0;
                var e = this;
                j.setEvent(function() {
                    e.isDown = !1, Bt.openFunction(Er.GET_BOX_REWARD_NEXT_EXTRA, gr.REPLACE, ur.VIEW, St.HIDE, e.itemList);
                }, function() {
                    e.isDown = !1;
                }, t.REWARD_EXTRA);
            }
        }
        showNormal() {
            this.isAni = !0;
            var e = this;
            for (const t in this.itemCellList) if (Object.prototype.hasOwnProperty.call(this.itemCellList, t)) {
                const i = this.itemCellList[t];
                if (i) {
                    let a = io[this.itemList.length][3 * Number(t)], s = io[this.itemList.length][3 * Number(t) + 1], n = io[this.itemList.length][3 * Number(t) + 2];
                    i.pos(a, s), i.scale(n, n), Laya.timer.once(100 * Number(t), this, function() {
                        i.show(), Number(t) == e.itemList.length - 1 && (e.isAni = !1);
                    });
                }
            }
        }
        static adSuccess(e, t = !1) {
            let i = 0, a = 0, s = 0, n = 0;
            for (const o in e) if (Object.prototype.hasOwnProperty.call(e, o)) {
                const r = e[o];
                let l = Is.getDataByKey(r.itemId);
                if (r.isExtra && t) continue;
                switch (l.type) {
                  case Ur.GOLD:
                    i += r.count;
                    break;

                  case Ur.DIAMOND:
                    a += r.count;
                    break;

                  case Ur.EXP:
                    s += r.count;
                    break;

                  case Ur.OTHER:
                    l.id == Gr.FIRECRACKER && (n += r.count);
                    break;

                  case Ur.HERO_DEBRIS:
                  case Ur.PART_DEBRIS:
                    if (tl.getInstance().setFragmentList({
                        type: l.type,
                        id: l.id,
                        num: r.count
                    })) if (Ur.HERO_DEBRIS == l.type) {
                        let e = l.extra(), t = Ur.HERO.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e);
                        Bt.registerAutoOpenFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                            id: t,
                            cb: null
                        }, !0, !0);
                    } else {
                        let e = l.extra(), t = Ur.PART.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e);
                        Bt.registerAutoOpenFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                            id: t,
                            cb: null
                        }, !0, !0);
                    }
                    break;

                  case Ur.EQUIP:
                    ls.getInstance().getEquip(l.extra(), null, r.time, !1);
                }
            }
            ao.getFirecrackerAward(n), tl.getInstance().rewardDiamond(a), tl.getInstance().rewardGold(i), 
            tl.getInstance().increaseExp(s);
        }
        static getFirecrackerAward(e) {
            let t = 0;
            for (let e = 0; e < xs.keys.length; e++) {
                const i = xs.keys[e];
                tl.getInstance().getFirecrackerInfo().count >= xs.getDataByKey(i).cost && (t = i);
            }
            if (t += 1, tl.getInstance().reciveFirecracker(e), !(t > xs.keys.length) && tl.getInstance().getFirecrackerInfo().count >= xs.getDataByKey(t).cost) switch (xs.getDataByKey(t).awardType) {
              case 1:
                Bt.registerAutoOpenFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.GOLD, xs.getDataByKey(t).award, !0);
                break;

              case 2:
                ls.getInstance().getEquip(xs.getDataByKey(t).award, function() {}, xs.getDataByKey(t).armTime, !1);
                break;

              case 3:
                Bt.registerAutoOpenFunction(Er.GET_DIAMONDS_REWARD, gr.COVER, ur.VIEW, St.DIAMOND, {
                    reward: xs.getDataByKey(t).award,
                    cb: null
                }, !0);
                break;

              case 4:
                let e = xs.getDataByKey(t).award, i = Ur.PART.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e);
                Bt.registerAutoOpenFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                    id: i,
                    cb: null
                }, !0, !0);
            }
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.boxThree.getChildAt(0),
                type: 1
            } ]);
        }
        static endFunc() {
            Nt.getCurScene().state == _s.OVER && (hl.platform == v.OPPO && Bt.openFunction(Er.NATIVE_INTERSTITIAL, gr.COVER, ur.VIEW, St.HIDE), 
            hl.platform == v.QQ ? Ts.gameNum % 2 == 0 ? j.createInterstitialAd() : tl.getInstance().isBannerTouch() ? j.createAppBox() : j.createInterstitialAd() : hl.platform == v.WX && (tl.getInstance().isNew && Ts.gameNum <= 2 || Ts.gameNum % 2 == 0 && j.createInterstitialAd()), 
            hl.platform == v.VIVO && j.createInterstitialAd()), L.notify(w.REFRESH_AI_GOOD);
        }
        static getAward(e, t, i = !1) {
            ao.adSuccess(e, i), Bt.openFunction(Er.GET_BOX_REWARD_NEXT, t, ur.VIEW, St.HIDE, e);
        }
    }
    class so extends T.view.sign.SignCellViewUI {
        constructor(e) {
            super(), this.isDown = !1, this.day = e, this.setView();
        }
        onAwake() {
            let e = this.imgAd.getChildByName("imgAdIcon"), t = this.boxAd.getChildByName("imgAdIcon"), i = this.imgAd.getChildByName("txtSign"), a = this.boxAd.getChildByName("txtSign");
            hl.platform != v.WX && hl.platform != v.WEB || (e.visible = !1, t.visible = !1, 
            i.x -= 10, a.x -= 10);
        }
        onDestroy() {}
        setView() {
            this.offAll(), this.uiPlatformConfig();
            let e = tl.getInstance().getSign();
            this.boxNormal.visible = !1, this.labelDay.text = Zn.getDataByKey(this.day).name, 
            this.labelInfo.text = Zn.getDataByKey(this.day).info, this.imgIcon.visible = !1, 
            this.imgGold.visible = !1, this.boxSign.visible = !1, this.box7.visible = !1, this.labelDay1.text = Zn.getDataByKey(this.day).name, 
            this.labelInfo1.text = Zn.getDataByKey(this.day).info, this.labelNormal.visible = !1, 
            this.labelNormal1.visible = !1, this.boxSign1.visible = !1, this.imgNowDay.visible = !1, 
            this.imgNowDay1.visible = !1, this.imgGold.alpha = 1, this.imgIcon.alpha = 1, 7 == this.day ? this.box7.visible = !0 : this.boxNormal.visible = !0, 
            e.day == this.day ? 0 == e.state ? (this.boxNormal.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.box7.on(Laya.Event.CLICK, this, this.onBtnAd), this.imgNowDay.visible = !0, 
            this.imgNowDay1.visible = !0) : (this.boxSign.visible = !0, this.boxSign1.visible = !0, 
            this.imgGold.alpha = .3, this.imgIcon.alpha = .3) : e.day > this.day ? (this.boxSign.visible = !0, 
            this.boxSign1.visible = !0, this.imgGold.alpha = .3, this.imgIcon.alpha = .3, this.boxBox.alpha = .5) : (this.labelNormal.visible = !0, 
            this.labelNormal1.visible = !0);
            let t = Zn.getDataByKey(this.day).awardType;
            if (2 == t) this.imgIcon.visible = !0; else if (3 == Zn.getDataByKey(this.day).awardType ? this.imgGold.skin = ul.ITEM_ROOT + "2001.png" : this.imgGold.skin = ul.ITEM_ROOT + "1001.png", 
            this.imgGold.visible = !0, 6 == t || 7 == t) {
                this.imgGold.visible = !1, this.boxItem.visible = !0;
                let e = new to();
                this.boxItem.addChild(e), e.setView(Zn.getDataByKey(this.day).itemId, Zn.getDataByKey(this.day).award), 
                e.show(), e.labelName.visible = !1, e.imgDebris.visible = !0, e.boxDebrisP.visible = !1, 
                e.imgDebris.scale(2, 2), e.imgDebris.parent.right = null, e.imgDebris.parent.left = 1;
            }
        }
        onBtnAd() {
            if (q.getTouch() && !this.isDown) {
                this.isDown = !0;
                var e = this;
                hl.platform == v.WX || hl.platform == v.WEB ? (e.isDown = !1, e.sign(), e.setView(), 
                Bt.getFunctionViewCtrl(Er.SIGN).setView(), Oi.showNotification("签到成功")) : j.setEvent(function() {
                    e.isDown = !1, e.sign(), e.setView(), Bt.getFunctionViewCtrl(Er.SIGN).setView(), 
                    Oi.showNotification("签到成功");
                }, function() {
                    e.isDown = !0, Oi.showNotification("未看完视频，签到失败");
                }, t.SIGN);
            }
        }
        sign() {
            tl.getInstance().setSign();
            let e = Zn.getDataByKey(this.day);
            2 == e.awardType ? ls.getInstance().getEquip(Zn.getDataByKey(this.day).award) : 1 == e.awardType ? Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.ALL_SHOW, Zn.getDataByKey(this.day).award) : 3 == e.awardType ? Bt.openFunction(Er.GET_DIAMONDS_REWARD, gr.COVER, ur.VIEW, St.DIAMOND, {
                reward: Zn.getDataByKey(this.day).award
            }) : 7 != e.awardType && 6 != e.awardType || (ao.adSuccess([ {
                itemId: e.itemId,
                count: e.award
            } ], !0), Bt.openFunction(Er.GET_BOX_REWARD_NEXT, gr.COVER, ur.VIEW, St.HIDE, [ {
                itemId: e.itemId,
                count: e.award
            } ]));
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.boxAd.getChildAt(1),
                type: 1
            }, {
                img: this.imgAd.getChildAt(1),
                type: 1
            } ]);
        }
    }
    class no extends T.view.sign.SignViewUI {
        constructor(e = null) {
            super(), this.data = null, this.scene3D = null, this.sp1 = null, this.sp2 = null, 
            this._translate2 = new Laya.Vector3(5, -10, 1), this._translate = new Laya.Vector3(0, 0, 0), 
            this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), this.cb = null, this.apertureCtrl = null, 
            this.fingerCtrl = null, this.width = this.stage.width, this.height = this.stage.height, 
            this.cb = e, this.apertureCtrl = ns.createCommonAperture(this.boxGuide), this.fingerCtrl = ns.createFingerAniCtrl(this.boxGuide), 
            this.apertureCtrl.centerX = 0, this.apertureCtrl.centerY = 0, this.fingerCtrl.centerX = 0, 
            this.fingerCtrl.centerY = 0, this.setView(!0), tl.getInstance().getGuide() == Et.SIGN && (this.apertureCtrl.play(!1), 
            this.fingerCtrl.play()), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onAwake() {}
        onDestroy() {
            this.cb && this.cb();
        }
        setView(e = !1) {
            this.fingerCtrl.stop(), this.apertureCtrl.stop();
            let t = tl.getInstance().getSign();
            if (this.imgGunSeven.visible = !1, this.imgGunTwo.visible = !1, this.imgTwo.visible = !1, 
            this.imgSeven.visible = !1, t.day <= 2 ? (1 == t.state && 2 == t.day ? (this.imgGunSeven.visible = !0, 
            this.imgSeven.visible = !0, this.labelName.text = "AWP-魑魅") : (this.imgGunTwo.visible = !0, 
            this.imgTwo.visible = !0, this.labelName.text = "USP-魑魅"), t.day) : (this.imgGunSeven.visible = !0, 
            this.imgSeven.visible = !0, this.labelName.text = "AWP-魑魅", t.day), e) for (let e = 1; e <= 6; e++) e <= 3 ? (this.boxOne.addChild(new so(e)), 
            3 == e && this.boxOne.addChild(new so(7))) : this.boxTwo.addChild(new so(e));
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    class oo extends T.view.superReward.SuperRewardViewUI {
        constructor(e) {
            super(), this.data = null, this.scene3D = null, this.sp1 = null, this.sp2 = null, 
            this._translate2 = new Laya.Vector3(5, -10, 1), this._translate = new Laya.Vector3(0, 0, 0), 
            this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), this.isDone = !1, this.width = this.stage.width, 
            this.height = this.stage.height, this.data = e, console.log("当前数据：", this.data), 
            this.boxBg.scaleX = this.stage.width / this.boxBg.width;
        }
        onAwake() {
            this.setPlatformStyle(), this.init(), this.setBtnEvent();
        }
        onDestroy() {
            this.timer.clearAll(this), this.btnBack = null, this.btnLevelUp = null, this.imgDoubleArm1 = null, 
            this.imgDoubleArm2 = null, this.imgLevelReward = null, this.imgLowerArm = null, 
            this.imgSingleArm = null, this.txtSingleName = null, this.txtDoubleLv1 = null, this.txtDoubleLv2 = null, 
            this.txtDoubleName1 = null, this.txtDoubleName2 = null, this.txtLowerLv = null, 
            this.txtLowerName = null, this.txtSingleLv = null, this.sp.destroy(), this.sp1 && this.sp1.destroy(), 
            this.sp2 && this.sp2.destroy(), this.sp = null, this.sp1 = null, this.sp2 = null, 
            this._translate2 = null, this._translate = null, this._pos = null, this.scene3D.destroy(), 
            this.scene3D = null;
        }
        init() {
            this.uiPlatformConfig(), Da.loadFont(ul.FNT.FNT2, this.txtLowerLv), Da.loadFont(ul.FNT.FNT2, this.txtDoubleLv1), 
            Da.loadFont(ul.FNT.FNT2, this.txtDoubleLv1), Da.loadFont(ul.FNT.FNT2, this.txtSingleLv), 
            this.boxDouble.visible = !1, this.boxSingle.visible = !1, this.imgLowerArm.skin = A.getDataByKey(this.data.data.showLower).icon, 
            this.txtLowerLv.text = A.getDataByKey(this.data.data.showLower).id.toString(), this.txtLowerName.text = A.getDataByKey(this.data.data.showLower).name, 
            this.data.data.type == rs.SUPERREWARD_SINGLE ? (this.boxSingle.visible = !0, this.imgSingleArm.skin = A.getDataByKey(this.data.data.showMax).icon, 
            this.txtSingleLv.text = A.getDataByKey(this.data.data.showMax).id.toString(), this.txtSingleName.text = A.getDataByKey(this.data.data.showMax).name, 
            this.txtContent.text = "可立即获得1把" + A.getDataByKey(this.data.data.showMax).id.toString() + "级武器") : (this.boxDouble.visible = !0, 
            this.imgDoubleArm1.skin = A.getDataByKey(this.data.data.showMax).icon, this.imgDoubleArm2.skin = A.getDataByKey(this.data.data.showMax).icon, 
            this.txtDoubleLv1.text = A.getDataByKey(this.data.data.showMax).id.toString(), this.txtDoubleLv2.text = A.getDataByKey(this.data.data.showMax).id.toString(), 
            this.txtDoubleName1.text = A.getDataByKey(this.data.data.showMax).name, this.txtDoubleName2.text = A.getDataByKey(this.data.data.showMax).name, 
            this.txtContent.text = "可立即获得2把" + A.getDataByKey(this.data.data.showMax).id.toString() + "级武器");
            let e = this.data.data.showMax - this.data.data.showLower;
            this.imgLevelReward.skin = 2 == e ? "sub1/ui/superReward/img_4.png" : "sub1/ui/superReward/img_5.png", 
            this.imgLowerArm.visible = !1, this.imgSingleArm.visible = !1, this.imgDoubleArm1.visible = !1, 
            this.imgDoubleArm2.visible = !1, this.create3D(), this.frameLoop(1, this, this.update);
        }
        update() {
            this.sp && this.sp.transform.localRotationEulerY++, this.sp1 && this.sp1.transform.localRotationEulerY++, 
            this.sp2 && this.sp2.transform.localRotationEulerY++;
        }
        create3D() {
            var e = this.box3d.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10;
            let a = new Laya.DirectionLight();
            a.color = new Laya.Vector3(1, 1, 1);
            var s = a.transform.worldMatrix;
            s.setForward(new Laya.Vector3(0, -1, -1)), a.transform.worldMatrix = s, e.addChild(a), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i), this.sp && (this.sp.destroy(), 
            this.sp = null), this.sp = Te.onLyToCreateArm(this.data.data.showLower, this.scene3D), 
            this.sp.transform.position = t.transform.position, this.sp.transform.localPositionZ -= 2, 
            this.sp.transform.localPositionX -= 3, this.sp.transform.localPositionY += 1.5, 
            this.sp.transform.localRotationEulerY = 90, this.sp.transform.localRotationEulerX = -20, 
            this.sp.transform.localScaleX = 4.5, this.sp.transform.localScaleY = 4.5, this.sp.transform.localScaleZ = 4.5, 
            this.data.data.type == rs.SUPERREWARD_SINGLE ? (this.sp1 = Te.onLyToCreateArm(this.data.data.showMax, this.scene3D), 
            this.sp1.transform.position = t.transform.position, this.sp1.transform.localPositionZ -= 2, 
            this.sp1.transform.localPositionX += 3, this.sp1.transform.localPositionY += 1.5, 
            this.sp1.transform.localRotationEulerY = 90, this.sp1.transform.localRotationEulerX = -20, 
            this.sp1.transform.localScaleX = 4.5, this.sp1.transform.localScaleY = 4.5, this.sp1.transform.localScaleZ = 4.5) : (this.sp1 = Te.onLyToCreateArm(this.data.data.showMax, this.scene3D), 
            this.sp1.transform.position = t.transform.position, this.sp1.transform.localPositionZ -= 2, 
            this.sp1.transform.localPositionX += 3, this.sp1.transform.localPositionY += 3.2, 
            this.sp1.transform.localRotationEulerY = 90, this.sp1.transform.localRotationEulerX = -15, 
            this.sp1.transform.localScaleX = 4.5, this.sp1.transform.localScaleY = 4.5, this.sp1.transform.localScaleZ = 4.5, 
            this.sp2 = Te.onLyToCreateArm(this.data.data.showMax, this.scene3D), this.sp2.transform.position = t.transform.position, 
            this.sp2.transform.localPositionZ -= 2, this.sp2.transform.localPositionX += 3, 
            this.sp2.transform.localPositionY -= .5, this.sp2.transform.localRotationEulerY = 90, 
            this.sp2.transform.localRotationEulerX = -20, this.sp2.transform.localScaleX = 4.5, 
            this.sp2.transform.localScaleY = 4.5, this.sp2.transform.localScaleZ = 4.5);
        }
        setBtnEvent() {
            this.btnLevelUp.on(Laya.Event.CLICK, this, this.onBtnLevelUp), this.btnLevelUp.addComponent($), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onBtnLevelUp() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                e.isDone || (e.isDone = !0, e.data.commonCb(), e.data.data.viewSuccess(), Bt.closeFunction());
            }, function() {
                e.isDone || (e.isDone = !0, e.data.commonCb(), e.data.data.viewFail(), Bt.closeFunction());
            }, t.SUPER_REWARD);
        }
        onBtnBack() {
            q.getTouch() && (this.data.commonCb(), this.data.data.viewFail(), Bt.closeFunction());
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.btnLevelUp.y -= 30, this.btnBack.y -= 30, this.txtContent.y -= 30), 
            this.btnNo.visible = !0, this.btnBack.visible = !1, this.btnLevelUp.y -= 60, this.btnBack.y -= 60, 
            this.txtContent.y -= 60;
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {}
        setWeb4399Platform() {}
        setTTPlatform() {
            this.txtContent.y -= 60, this.btnNo.visible = !0, this.btnBack.visible = !1, this.btnLevelUp.y -= 60, 
            this.btnBack.y -= 60;
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnLevelUp.getChildAt(1),
                type: 1
            } ]);
        }
    }
    class ro extends T.view.task.TaskCellViewUI {
        constructor() {
            super(), this.isDown = !1;
        }
        onAwake() {}
        onDestroy() {}
        setView(e) {
            if (e == this.d) return;
            this.isDown = !1, this.btnEnter.offAll();
            let t = xa.getDataByKey(e.index);
            this.labelDay.text = t.name.toString(), this.imgGet.visible = !1, this.imgGo.visible = !1, 
            this.imgLock.visible = !1, this.imgUse.visible = !1, this.btnBule.visible = !1, 
            this.btnGreen.visible = !1, this.labelPer.visible = !1, this.labelPer1.visible = !1, 
            this.imgAdGet.visible = !1, this.btnEnter.alpha = 1;
            let i = t.info;
            this.labelDebris.visible = !1, hl.getViolenceCtrl() || (i = i.replace("爆头", "暴击"), 
            console.log(i), i = i.replace("击杀", "击败"), console.log(i)), Bt.replaceAdIcon([ {
                img: this.imgAd,
                type: 1
            } ]), hl.platform != v.TT && hl.platform != v.WEB && hl.platform != v.WEB_4399 || (this.imgAd.width = 42), 
            this.labelTake.text = i;
            let a = Ba.getTaskType(t.taskType);
            switch (this.d = e, this.ani1.play(0, !0), this.ani1.stop(), this.setImgIcon(t), 
            e.state) {
              case Yr.COMPLETE:
                this.ani1.play(0, !0), this.btnGreen.visible = !0, tl.getInstance().loginDay() % 7 + 1 <= this.d.index ? this.imgGet.visible = !0 : this.imgAdGet.visible = !0, 
                this.labelPer.visible = !0, this.labelPer1.visible = !0, this.labelPer.text = a.data.toString(), 
                this.labelPer1.text = "/" + a.data.toString(), this.btnEnter.on(Laya.Event.CLICK, this, this.onBtnEnter), 
                this.btnEnter.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown), this.btnEnter.on(Laya.Event.MOUSE_OUT, this, this.onMouseUp);
                break;

              case Yr.UNINDAY:
                this.btnBule.visible = !0, this.btnEnter.alpha = .5, this.imgLock.visible = !0, 
                this.labelPer.visible = !0, this.labelPer1.visible = !0, this.labelPer.text = "0", 
                this.labelPer1.text = "/" + a.data.toString();
                break;

              case Yr.GET:
                this.imgUse.visible = !0;
                break;

              default:
                this.btnBule.visible = !0, this.imgGo.visible = !0, this.labelPer.visible = !0, 
                this.labelPer1.visible = !0, this.labelPer.text = e.state.toString(), this.labelPer1.text = "/" + a.data.toString(), 
                this.btnEnter.on(Laya.Event.CLICK, this, this.onBtnEnter), this.btnEnter.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown), 
                this.btnEnter.on(Laya.Event.MOUSE_OUT, this, this.onMouseUp);
            }
        }
        onBtnEnter() {
            if (!this.isDown && this.d && (this.d.state != Yr.GET || this.d.state != Yr.UNINDAY)) {
                if (!q.getTouch()) return;
                if (this.d.state == Yr.COMPLETE) {
                    this.isDown = !0;
                    var e = this;
                    let i = function() {
                        e.isDown = !1;
                        let t = xa.getDataByKey(e.d.index);
                        if (10 == t.awardType || 11 == t.awardType) {
                            let e = tl.getInstance().getBoxTragmentId(10 == t.awardType, 11 == t.awardType);
                            ao.getAward([ {
                                itemId: e.itemId,
                                count: t.award
                            } ], gr.COVER, !0);
                        } else 3 == t.awardType ? Bt.openFunction(Er.GET_DIAMONDS_REWARD, gr.COVER, ur.VIEW, St.DIAMOND, {
                            reward: t.award,
                            cb: null
                        }) : Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.ALL_SHOW, t.award);
                        tl.getInstance().reciveTaskAwardByDay(e.d.index), Bt.getFunctionViewCtrl(Er.TASK).setView();
                    };
                    this.imgAdGet.visible ? j.setEvent(i, function() {
                        e.isDown = !1;
                    }, t.TASK) : i();
                } else Bt.closeFunction();
            }
        }
        onMouseUp() {
            this.btnEnter.alpha = 1;
        }
        onMouseDown() {
            this.btnEnter.alpha = .6;
        }
        setImgIcon(e) {
            switch (this.labelCount.text = e.award.toString(), this.imgTag.visible = !1, this.labelDebris.visible = !1, 
            this.labelCount.bottom = 7, e.awardType) {
              case 1:
                this.imgIcon.skin = ul.ITEM_ROOT + Gr.GOLD + ".png";

              case 3:
                this.imgIcon.skin = ul.ITEM_ROOT + Gr.DIAMONDS + ".png";

              case 2:
              case 4:
              case 5:
                break;

              case 11:
                this.imgIcon.skin = "sub1/ui/getReward/img_gameBox_1.png", this.imgTag.visible = !0, 
                this.labelDebris.text = "部件碎片", this.labelDebris.visible = !0, this.labelCount.text = "x" + e.award.toString(), 
                this.labelCount.bottom = 10;
                break;

              case 10:
                this.imgIcon.skin = "sub1/ui/getReward/img_gameBox_2.png", this.imgTag.visible = !0, 
                this.labelDebris.text = "英雄碎片", this.labelCount.text = "x" + e.award.toString(), 
                this.labelDebris.visible = !0, this.labelCount.bottom = 10;
            }
        }
    }
    class lo extends T.view.task.TaskViewUI {
        constructor() {
            super(), this.cache = [], this.data = [], this.width = this.stage.width, this.height = this.stage.height, 
            this.setView(!0), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onAwake() {}
        onDestroy() {}
        setView(e = !1) {
            if (e) {
                this.panel.vScrollBarSkin = "";
                for (let e = 0; e < 5; e++) {
                    let e = new ro();
                    this.boxCell.addChild(e), this.cache.push(e);
                }
                for (let e = 0; e < 7; e++) {
                    let t = {
                        index: e + 1,
                        state: tl.getInstance().getTaskStateByDay(e + 1)
                    };
                    this.data.push(t), this.boxCell.height += 126;
                }
                this.data.sort(this.sort), this.boxCell.height -= 126;
                for (let e = 0; e < this.data.length; e++) this.data[e].y = 126 * (e + 1);
                this.panel.vScrollBar.changeHandler = Laya.Handler.create(this, this.onPanelScroll, null, !1);
            } else {
                this.data = [];
                for (let e = 0; e < 7; e++) {
                    let t = {
                        index: e + 1,
                        state: tl.getInstance().getTaskStateByDay(e + 1)
                    };
                    this.data.push(t);
                }
                this.data.sort(this.sort);
                for (let e = 0; e < this.data.length; e++) this.data[e].y = 126 * (e + 1);
                this.onPanelScroll(0), Laya.Tween.to(this.panel.vScrollBar, {
                    value: 0
                }, 500);
            }
        }
        onPanelScroll(e) {
            for (let e = 0, t = this.cache.length; e < t; e++) this.cache[e].visible = !1;
            let t = 0;
            for (let i = 0, a = this.data.length; i < a; i++) {
                let a = this.data[i];
                if (a.y >= e && a.y <= e + this.panel.height + 126) {
                    let e = this.cache[t];
                    if (!e) return;
                    e.setView(a), e.y = a.y - 126, e.visible = !0, t++;
                }
            }
        }
        sort(e, t) {
            return e.state == Yr.COMPLETE ? t.state == e.state && e.index < t.index ? 1 : -1 : e.state == Yr.GET ? t.state == e.state && e.index < t.index ? -1 : 1 : e.state == Yr.UNINDAY ? t.state == e.state ? e.index < t.index ? -1 : 1 : t.state == Yr.COMPLETE ? 1 : t.state == Yr.GET ? -1 : 1 : t.state == Yr.COMPLETE ? 1 : t.state == Yr.GET ? -1 : t.state == Yr.UNINDAY ? -1 : e.index < t.index ? -1 : 1;
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    class ho extends T.view.common.LogClickViewUI {
        constructor(e) {
            super(), this.isDown = !1, this.height = this.stage.height, this.width = this.stage.width, 
            this.setContent(e);
            var t = this;
            this.timer.once(3e3, this, function() {
                t.isDown || (t.isDown = !0, Bt.closeFunction());
            });
            t = this;
            Laya.timer.once(1e3, this, function() {
                this.on(Laya.Event.CLICK, this, function() {
                    t.isDown || q.getTouch(500) && (t.timer.clearAll(t), t.isDown = !0, Bt.closeFunction());
                });
            }.bind(this));
        }
        setContent(e) {
            this.labelLog.text = e, this.imgBg.width = this.labelLog.width + 100;
        }
        onDestroy() {}
    }
    class co extends T.view.gameBox.GameBoxViewUI {
        constructor(e) {
            super(), this.viewType = 0, this.curBoxType = 0, this.isOpenRewardXQ = !1, this.isCloseRewardXQ = !0, 
            this.isDown = !1, this.width = this.stage.width, this.height = this.stage.height, 
            this.viewType = e, this.boxBg.scaleX = this.stage.width / this.boxBg.width;
        }
        onAwake() {
            this.uiPlatformConfig(), this.init(), this.setPlatformStyle(), this.setEvent(), 
            hl.platform == v.TT && hl.isReviewVersion() && (this.boxEndLabel.visible = !1);
        }
        onDestroy() {
            L.unregisterByEventId(w.ANDROID_REWARD_AD_LOAD), this.viewType = null, this.curBoxType = null;
        }
        init() {
            this.ani2.play(0, !0), this.ani4.play(0, !0), this.boxEndLabel.visible = !1, this.btnBack.visible = !1, 
            0 == this.viewType ? (this.boxEndLabel.visible = !1, this.btnBack.visible = !0, 
            this.btnOpen.y = 596) : this.boxEndLabel.visible = !0;
        }
        adCtrl(e = !1) {
            this.boxAd.visible = !1, this.boxNotAd.visible = !1, 0 == this.viewType ? this.boxAd.visible = !0 : (e ? 0 == this.curBoxType ? (this.boxAd.visible = !0, 
            this.btnGetSenior.getChildAt(0).visible = !0, this.imgBox.skin = "sub1/ui/gameBox/img_1.png") : (this.boxNotAd.visible = !0, 
            this.btnGetSenior.getChildAt(0).visible = !1, this.imgBox.skin = "sub1/ui/gameBox/img_2.png") : 0 == this.curBoxType ? (this.curBoxType = 1, 
            this.boxNotAd.visible = !0, this.btnGetSenior.getChildAt(0).visible = !1, this.imgBox.skin = "sub1/ui/gameBox/img_2.png") : (this.curBoxType = 0, 
            this.boxAd.visible = !0, this.btnGetSenior.getChildAt(0).visible = !0, this.imgBox.skin = "sub1/ui/gameBox/img_1.png"), 
            hl.platform == v.WX && (this.boxAd.visible = !1, this.boxNotAd.visible = !0));
        }
        setEvent() {
            this.btnOpen.on(Laya.Event.CLICK, this, this.onBtnOpen), this.btnOpen.addComponent($), 
            this.btnGetSenior.on(Laya.Event.CLICK, this, this.onBtnGetSenior), this.btnBack.on(Laya.Event.CLICK, this, this.onbBtnClose), 
            this.btnCheckReward.on(Laya.Event.CLICK, this, this.onBtnCheckReward);
        }
        onBtnCheckReward() {
            q.getTouch() && (this.isOpenRewardXQ || (this.isOpenRewardXQ = !0, this.ani5.play(0, !1), 
            this.timer.once(800, this, () => {
                this.isCloseRewardXQ = !1;
            })), this.isCloseRewardXQ || (this.isCloseRewardXQ = !0, this.ani6.play(0, !1), 
            this.timer.once(800, this, () => {
                this.isOpenRewardXQ = !1;
            })));
        }
        onbBtnClose() {
            q.getTouch() && Bt.closeFunction();
        }
        onBtnOpen() {
            if (!q.getTouch(500)) return;
            let e = this.curBoxType, i = Rs.playerLogicalBaseLayer ? Rs.playerLogicalBaseLayer.playerKillCount : 2;
            if (i += 1, this.isDown) return;
            this.isDown = !0;
            let a = this;
            0 == e ? j.setEvent(function() {
                a.isDown = !1, Bt.openFunction(Er.GET_BOX_REWARD, gr.REPLACE, ur.VIEW, St.HIDE, {
                    itemList: [ tl.getInstance().getBoxTragmentId(), {
                        itemId: "2001",
                        count: 2 * hs.getSeniorBoxReward().diamonds
                    }, {
                        itemId: "3001",
                        count: 2 * i
                    }, {
                        itemId: "1001",
                        count: Math.floor(hs.getSeniorBoxReward().gold / 3 * 2)
                    } ]
                });
            }, function() {
                a.isDown = !1;
            }, t.BOX_REWARD) : Bt.openFunction(Er.GET_BOX_REWARD, gr.REPLACE, ur.VIEW, St.HIDE, {
                itemList: [ tl.getInstance().getBoxTragmentId(), {
                    itemId: "1001",
                    count: hs.getSeniorBoxReward().gold
                }, {
                    itemId: "2001",
                    count: hs.getSeniorBoxReward().diamonds
                }, {
                    itemId: "3001",
                    count: i
                }, {
                    itemId: "1001",
                    count: Math.floor(hs.getSeniorBoxReward().gold / 3)
                } ]
            });
        }
        onBtnGetSenior() {
            q.getTouch() && this.adCtrl();
        }
        award() {
            let e = Rs.playerLogicalBaseLayer ? Rs.playerLogicalBaseLayer.playerKillCount : 2;
            e += 1;
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setVIVOPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                hl.appId == H.XM ? this.setNativeAndroidXMPlatform() : this.setAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            this.boxAd.visible = !1, this.boxNotAd.visible = !1, 0 == this.viewType ? this.boxAd.visible = !0 : (this.boxEndLabel.visible = !1, 
            this.boxAd.visible = !0, this.curBoxType = 0);
        }
        setQQPlatform() {
            this.adCtrl(!0);
        }
        setWebPlatform() {}
        setVIVOPlatform() {
            hl.isReviewVersion() ? (this.boxAd.visible = !1, this.boxNotAd.visible = !1, 0 == this.viewType ? this.boxAd.visible = !0 : (this.boxEndLabel.visible = !1, 
            this.boxNotAd.visible = !0, this.curBoxType = 1)) : this.adCtrl(!0);
        }
        setOPPOPlatform() {
            this.adCtrl(!0);
        }
        setNativeIOSPlatform() {
            2 == Ts.gameNum && tl.getInstance().isNew ? this.adCtrl(!1) : this.adCtrl(!0), this.viewType;
        }
        setNativeAndroidXMPlatform() {
            this.boxNotAd.visible = !1, this.boxAd.visible = !0, this.btnGetSenior.visible = !1;
            var e = this;
            L.register(w.ANDROID_REWARD_AD_LOAD, function(t) {
                t ? (e.boxAd.visible = !1, e.boxNotAd.visible = !0) : (e.boxNotAd.visible = !1, 
                e.boxAd.visible = !0);
            }, this);
        }
        setAndroidPlatform() {
            hl.platform == v.NATIVE_ANDRIOD ? (2 == Ts.gameNum && tl.getInstance().isNew ? this.adCtrl(!1) : this.adCtrl(!0), 
            this.viewType) : this.adCtrl(!0);
        }
        setWeb4399Platform() {
            this.boxAd.visible = !1, this.boxNotAd.visible = !1, 0 == this.viewType ? this.boxAd.visible = !0 : (this.boxEndLabel.visible = !1, 
            this.boxAd.visible = !0, this.curBoxType = 0);
        }
        setTTPlatform() {
            this.adCtrl(!0);
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.boxAd.getChildAt(0),
                type: 1
            } ]), hl.platform == v.TT || hl.platform == v.WEB || (hl.platform, v.WEB_4399);
        }
    }
    class go extends T.view.revive.NewReviveViewUI {
        constructor(e) {
            super(), this.countDown = 6, this.isDone = !1, this.scene3D = null, this._translate2 = new Laya.Vector3(5, -10, 1), 
            this._translate = new Laya.Vector3(0, 0, 0), this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), 
            this.cb = null, this.width = this.stage.width, this.height = this.stage.height, 
            this.cb = e.cb, hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock();
        }
        onAwake() {
            j.showBannerAd(), this.create3D(), Rs.gameStop = !0, this.txtCountDown.text = this.countDown.toString(), 
            this.txtHit.text = "对我造成伤害：" + Ae.onlyOneRandomInt(50, 100).toString(), this.txtKiller.text = Rs.killerName, 
            this.timerLoop(1e3, this, this.update), this.btnRevive.on(Laya.Event.CLICK, this, this.onBtnRevive), 
            this.btnRevive.addComponent($);
        }
        onDestroy() {
            if (this.cb && this.cb(), this.countDown = null, this.isDone = null, this.sp && this.sp.destroy(), 
            this.sp = null, this.scene3D && this.scene3D.destroy(), this.scene3D = null, this._translate2 = null, 
            this._translate = null, this.sp = null, hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                Bt.getFunctionViewCtrl(Er.GAME).onBtnDown(!0);
            }
            this._pos = null;
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            if (t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i), this.sp && (this.sp.destroy(), 
            this.sp = null), this.sp = Te.createRoleViewSkin(this._translate, this.scene3D, !1, Rs.killerSkin ? Rs.killerSkin : "001"), 
            this.sp.transform.localRotationEulerY = 20, this.sp.transform.localPositionY -= 3, 
            this.sp.transform.localPositionX -= .3, this.sp.transform.localScaleX = 6, this.sp.transform.localScaleY = 6, 
            this.sp.transform.localScaleZ = 6, Rs.killerLogic) {
                let e = 0, t = Rs.killerLogic.getArmCtrl() ? Rs.killerLogic.getArmCtrl().getID() : 1;
                Mt.mode == Tt.KNIFEWARMODE ? e = 1 : Mt.mode == Tt.ONEVSONEMODE && (t = 1);
                let i = Te.createMenuArm(t, this.sp, e);
                i.transform.localScaleX = .7, i.transform.localScaleY = .7, i.transform.localScaleZ = .7, 
                Rs.killerLogic.getArmCtrl() && (this.imgArm.skin = Rs.killerLogic.getArmCtrl().getIcon());
            }
        }
        update() {
            0 != this.countDown ? (this.countDown--, this.txtCountDown.text = this.countDown.toString()) : (this.txtCountDown.text = this.countDown.toString(), 
            this.revive(), this.timer.clear(this, this.update));
        }
        revive() {
            this.isDone || (j.hideBannerAd(), this.isDone = !0, this.timer.resume(), Bt.closeFunction(), 
            Rs.gameStop = !1, Rs.playerLogicalBaseLayer.freeReviveNum--, Rs.playerLogicalBaseLayer.directRevive(function() {
                Rs.playerLogicalBaseLayer.getPresentationBaseLayer().setPos(Rs.playerLogicalBaseLayer.getInitPos());
            }));
        }
        onBtnRevive() {
            if (!q.getTouch()) return;
            let e = this;
            this.timer.pause(), j.setEvent(function() {
                e.revive();
            }, function() {
                e.timer.resume();
            }, t.REVIVE);
        }
    }
    class uo extends T.view.native.NativeIcon2CellUI {
        constructor() {
            super(), this.isCanRefresh = !0, this.isFirstTouch = !0, this.isCanAutoShow = !0;
        }
        onAwake() {
            this.on(Laya.Event.CLICK, this, this.onBtnAd), this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), 
            this.funcId = L.register(w.REFRESH_NATIVE_AD, this.refresh, this), this.refresh();
        }
        onDestroy() {
            Laya.timer.clearAll(this), L.unregisterByFuncId(this.funcId), At.autoUnlinkUIReference(this), 
            j.hideBannerAd();
        }
        onBtnAd() {
            if (q.getTouch() && (hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendIconList.ad && j.nativeExtendIconList.ad.reportAdClick({
                adId: j.nativeExtendIconList.data.adId.toString()
            }), hl.platform == v.VIVO)) {
                j.preloadNativeAdExtend(function() {}, function() {}, i.BANNER);
            }
        }
        onBtnClose() {
            this.destroy();
        }
        refresh() {
            this.isCanRefresh && this.imgAd && (j.nativeExtendIconList.ad ? (j.hideBannerAd(), 
            this.isCanAutoShow && this.show(), hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendIconList.ad && j.nativeExtendIconList.ad.reportAdShow({
                adId: j.nativeExtendIconList.data.adId.toString()
            }), this.imgAd.skin = j.nativeExtendIconList.data.imgUrlList[0]) : (this.autoHide(), 
            j.showBannerAd()));
        }
        hide() {
            this.destroyed || (this.isCanAutoShow = !1, this.mouseEnabled = !1, this.visible = !1);
        }
        autoHide() {
            this.mouseEnabled = !1, this.visible = !1;
        }
        show() {
            this.destroyed || (this.isCanAutoShow = !0, j.nativeExtendIconList.ad && (this.mouseEnabled = !0, 
            this.visible = !0));
        }
    }
    class mo extends T.view.superStart.SuperStartViewUI {
        constructor(e) {
            super(), this.getSuperStart = !1, this.cb = null, this.width = this.stage.width, 
            this.height = this.stage.height, this.cb = e;
        }
        onAwake() {
            if (this.uiPlatformConfig(), !hl.getViolenceCtrl()) {
                let e = this.imgHead.skin;
                e = e.replace(".png", "_4399.png"), this.imgHead.skin = e, this.labelHead.text = "暴击率";
            }
            this.getChildAt(0).visible = !1, this.ani1.play(0, !1), this.boxAd.visible = !1, 
            this.boxNoAd.visible = !1, this.btnGet.getChildAt(0).visible = !1;
            let e = hl.platform == v.OPPO ? 2 : 4;
            hl.platform == v.NATIVE_ANDRIOD && (e = 100), Ts.gameNum >= e && (this.getSuperStart = !0, 
            hl.platform == v.TT && (this.getSuperStart = !1)), this.getSuperStart ? (this.btnGet.getChildAt(0).visible = !0, 
            this.boxAd.visible = !0) : this.boxNoAd.visible = !0, this.setPlatformStyle(), this.btnSuperStart.on(Laya.Event.CLICK, this, this.onBtnSuperStart), 
            this.btnSuperStart.addComponent($), this.btnChooseStart.on(Laya.Event.CLICK, this, this.onBtnChooseStart), 
            this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), hl.platform == v.TT && hl.isReviewVersion() && (this.boxSuperStart.visible = !1);
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            this.boxSuperStart.visible = !1, this.getSuperStart = !1, this.boxAd.visible = !1, 
            this.boxNoAd.visible = !1, this.getSuperStart ? (this.btnGet.getChildAt(0).visible = !0, 
            this.boxAd.visible = !0) : this.boxNoAd.visible = !0;
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {
            this.btnChooseStart.x += 110, this.btnSuperStart.x += 160;
        }
        setOPPOPlatform() {
            this.btnChooseStart.x += 110, this.btnSuperStart.x += 160;
        }
        setNativeIOSPlatform() {}
        setWeb4399Platform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
        setAd() {
            this.boxNoAd.visible = !1, this.boxAd.visible = !1, this.getSuperStart ? (this.getSuperStart = !1, 
            this.btnGet.getChildAt(0).visible = !1, this.boxNoAd.visible = !0) : (this.getSuperStart = !0, 
            this.btnGet.getChildAt(0).visible = !0, this.boxAd.visible = !0);
        }
        onDestroy() {
            this.cb(), this.cb = null;
        }
        onBtnSuperStart() {
            q.getTouch() && j.setEvent(function() {
                Ti.setBuffGain(!0, 10, 30, 10), Bt.closeFunction();
            }, function() {}, t.BUFF);
        }
        onBtnChooseStart() {
            q.getTouch() && (this.getSuperStart ? j.setEvent(function() {
                Ti.setBuffGain(!0, 10, 30, 10), Bt.closeFunction();
            }, function() {}, t.BUFF) : (Ti.setBuffGain(), Bt.closeFunction()));
        }
        onBtnGet() {
            q.getTouch() && this.setAd();
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnSuperStart.getChildAt(0),
                type: 1
            } ]);
        }
    }
    class po extends T.view.ani.EndAniViewUI {
        constructor(e) {
            super(), this.endTime = 6, this.width = Laya.stage.width, this.height = Laya.stage.height, 
            this.setView(Rs._isWin, Mt.mode), Laya.timer.loop(1e3, this, this.update), this.update();
            var t = this;
            Laya.timer.once(500, this, function() {
                t.on(Laya.Event.CLICK, t, t.onBtnClose);
            }), this.cb = e, hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock();
        }
        onDestroy() {
            this.cb && this.cb();
        }
        update() {
            this.endTime -= 1, this.labelTime.text = this.endTime + "秒后自动结算", 0 == this.endTime && this.onBtnClose();
        }
        setView(e, i) {
            this.boxLose.visible = !1, this.boxWin.visible = !1, this.imgLogBgLose.visible = !1, 
            this.imgLogBgWin.visible = !1, this.imgLose.visible = !1, this.imgWin.visible = !1, 
            i == Tt.TEAMCOMPETITION ? this.boxMode.visible = !1 : this.labelInfo.text = Ba.taskEntry(), 
            e ? (il.playEffect(ml.WIN), this.boxWin.visible = !0, this.imgWin.visible = !0, 
            this.imgLogBgWin.visible = !0, tl.getInstance().isNew && Ts.gameNum <= 3 && xt.reportNewPlayrWin(Ts.gameNum)) : (il.playEffect(ml.FAIL), 
            this.boxLose.visible = !0, this.imgLogBgLose.visible = !0, this.imgLose.visible = !0, 
            tl.getInstance().isNew && Ts.gameNum <= 3 && xt.reportNewPlayrLose(Ts.gameNum)), 
            this.setPlatformStyle(), tl.getInstance().isNew && Ts.gameNum <= 3 && xt.reportNewPlayerWinLoseView(Ts.gameNum), 
            hl.platform == v.WX && !tl.getInstance().isNew && tl.onlineSec >= 300 && tl.getInstance().isBannerTouch() && j.setEvent(function() {}, function() {}, t.TOUCH);
        }
        onBtnClose() {
            q.getTouch() && (this.timer.clearAll(this), Bt.closeFunction());
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.boxMode.y -= 30, this.boxWin.centerY -= 30, this.boxLose.centerY -= 30, 
            this.labelEnd.bottom += 30);
        }
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {}
        setTTPlatform() {}
    }
    class yo extends T.view.getReward.GetEquipOrRoleRewardViewUI {
        constructor(e, t) {
            super(), this.reward = 0, this.scene3D = null, this.rotMouseX = 0, this.sp3 = null, 
            this.sp2 = null, this._translate2 = new Laya.Vector3(5, -10, 1), this._translate = new Laya.Vector3(0, 0, 0), 
            this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), this.width = this.stage.width, 
            this.height = this.stage.height, this.boxBg.scaleX = this.stage.width / this.boxBg.width, 
            this.data = Is.getDataByKey(e), this.data.type == Ur.HERO ? (tl.getInstance().setRoleSkinLib(this.data.extra()), 
            tl.getInstance().setSelectRoleSkin(this.data.extra()), Nt.getCurScene().lastSceneType = null, 
            Nt.getCurScene().createMenu(2, null, this.data.extra()), this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnMouseDown), 
            this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnRot), this.boxEnter.on(Laya.Event.CLICK, this, this.onBtnBack)) : (this.data.type == Ur.PART && tl.getInstance().setPartsSkin(this.data.extra()), 
            this.create3D(), this.on(Laya.Event.CLICK, this, this.onBtnBack)), this.cb = t;
        }
        onAwake() {
            this.init(), this.frameLoop(1, this, this.update);
        }
        onDestroy() {
            this.data.type == Ur.HERO && Nt.getCurScene().cleanMenu(), this.timer.clearAll(this), 
            this.cb && this.cb();
        }
        init() {
            if (this.ani1.play(0, !1), this.boxAll.visible = !1, this.boxHero.visible = !1, 
            this.data.type == Ur.HERO) this.boxLv.removeSelf(), this.labelName.text = this.data.name, 
            this.labelHeroName.text = this.data.name, this.boxHero.visible = !0, this.imgBg.skin = "sub1/ui/equip/img_10.jpg", 
            this.imgBg.alpha = 1; else {
                this.boxAll.visible = !0, this.data.type == Ur.PART && (this.boxLv.visible = !1), 
                this.labelLv.text = this.data.extra().toString();
                let e = "";
                if (tl.getInstance().getEquipHaveTime(this.data.extra())) {
                    let t = tl.getInstance().getEquipHaveTime(this.data.extra()) - tl.getInstance().getTime();
                    t > 86400 ? (console.log("超过一天到期"), e = " (" + Math.floor(t / 86400) + "天)") : t > 3600 ? (console.log("超过一小时到期"), 
                    e = " (" + Math.floor(t / 3600) + "小时)") : e = " (" + Math.floor(t / 60) + "分钟)";
                }
                this.labelName.text = this.data.name + e;
                let t = this.labelName.width;
                this.boxLv.x -= t / 2 + 38;
            }
        }
        onBtnMouseDown(e) {
            this.rotMouseX = e.stageX;
        }
        onBtnRot(e) {
            if (Nt.getCurScene().menuPlayer) {
                let t = e.stageX - this.rotMouseX;
                Nt.getCurScene().menuPlayer.transform.localRotationEulerY += .4 * t, this.rotMouseX = e.stageX;
            }
        }
        onBtnBack() {
            q.getTouch() && (this.mouseEnabled = !1, Bt.closeFunction());
        }
        create3D() {
            var e = this.boxScene.addChild(new Laya.Scene3D());
            this.scene3D = e;
            var t = e.addChild(new Laya.Camera(0, .1, 1e3));
            t.transform.position = new Laya.Vector3(), t.transform.localPositionX -= 5.2, t.transform.localPositionY -= 2.3, 
            t.enableHDR = !1, t.clearFlag = Laya.CameraClearFlags.DepthOnly;
            var i = e.addChild(new Laya.DirectionLight());
            i.color = new Laya.Vector3(.6, .6, .6), i.transform.worldMatrix.setForward(new Laya.Vector3(0, 0, -.5)), 
            this.data.type == Ur.EQUIP ? (this.sp3 = Te.onLyToCreateArm(this.data.extra(), this.scene3D), 
            this.sp3.transform.localRotationEulerY = -90, this.sp3.transform.localRotationEulerX = -15, 
            this.sp3.transform.localScaleX = 6, this.sp3.transform.localScaleY = 6, this.sp3.transform.localScaleZ = 6, 
            this.sp3.transform.localPosition = new Laya.Vector3(-4.99, -1, -11), this.sp3.active = !0) : (this.sp3 = new Laya.Sprite3D(), 
            Te.createParts(this.data.extra(), this.sp3, new Laya.Vector3(6, 6, 6), null, !1), 
            this.sp3.transform.localRotationEulerY = 0, this.sp3.transform.localRotationEulerX = 0, 
            this.sp3.transform.localScaleX = 1, this.sp3.transform.localScaleY = 1, this.sp3.transform.localScaleZ = 1, 
            this.sp3.transform.localPosition = new Laya.Vector3(-4.99, -1, -11), this.scene3D.addChild(this.sp3), 
            this.sp3.active = !0);
        }
        createHero3D() {
            var e = this.boxScene.addChild(new Laya.Scene3D());
            this.scene3D = e;
            var t = e.addChild(new Laya.Camera(0, .1, 100));
            t.transform.position = new Laya.Vector3(), t.transform.localPositionX -= 5.2, t.transform.localPositionY -= 2.3, 
            t.enableHDR = !1, t.clearFlag = Laya.CameraClearFlags.DepthOnly;
            var i = e.addChild(new Laya.DirectionLight());
            i.color = new Laya.Vector3(.6, .6, .6), i.transform.worldMatrix.setForward(new Laya.Vector3(0, 0, -.5)), 
            this.sp = Te.createRoleViewSkin(this._translate, this.scene3D, !1, this.data.extra()), 
            this.sp.transform.localRotationEulerY = 20, this.sp.transform.localScaleX = 3, this.sp.transform.localScaleY = 3, 
            this.sp.transform.localScaleZ = 3, this.sp.transform.localPosition = new Laya.Vector3(-4.99, -3, -11), 
            this.timerOnce(50, this, () => {
                let e = Te.createMenuArm(tl.getInstance().getSelectSkin(), this.sp);
                e.transform.localScaleX = 1.3, e.transform.localScaleY = 1.3, e.transform.localScaleZ = 1.3;
            });
        }
        update() {
            this.sp3 && this.sp3.transform.localRotationEulerY++, this.sp && this.sp.transform.localRotationEulerY++;
        }
    }
    class Io extends T.view.getReward.GetBoxRewardViewUI {
        constructor(e, t) {
            super(), this.itemList = [], this.index = 0, this.boxItemCellCtrl = null, this.isAuto = !0, 
            this.width = Laya.stage.width, this.height = Laya.stage.height, this.itemList = e, 
            this.setview(), this.cb = t, tl.getInstance().isNew && Ts.gameNum - 1 <= 3 && xt.reportNewPlayerEndRewardSingleView(Ts.gameNum - 1);
        }
        setview() {
            this.setPlatformStyle(), this.itemList[0].isExtra || ao.adSuccess(this.itemList, !0), 
            this.newItem();
        }
        onDestroy() {
            this.cb && this.cb();
        }
        newItem() {
            if (this.index == this.itemList.length) return this.timer.clearAll(this), void Bt.openFunction(Er.GET_BOX_REWARD_NEXT, gr.REPLACE, ur.VIEW, St.HIDE, this.itemList);
            this.boxItemCellCtrl ? (!this.labelNext.visible && tl.getInstance().isBannerTouch() && j.showBannerAd(), 
            this.btnEnter.visible = !1, this.labelNext.visible = !0, this.offAll(Laya.Event.CLICK), 
            this.on(Laya.Event.CLICK, this, this.onBtnEnter), this.boxItemCellCtrl.setView(this.itemList[this.index].itemId, this.itemList[this.index].count, this.itemList[this.index].isExtra)) : (this.boxItemCellCtrl = new to(), 
            this.btnEnter.on(Laya.Event.CLICK, this, this.onBtnEnter), this.boxItem.addChild(this.boxItemCellCtrl), 
            this.boxItemCellCtrl.setView(this.itemList[this.index].itemId, this.itemList[this.index].count, this.itemList[this.index].isExtra)), 
            this.index++, this.labelCount.text = (this.itemList.length - this.index).toString(), 
            this.boxItemCellCtrl.show(), this.timer.clearAll(this), this.isAuto && this.timer.once(2e3, this, this.newItem);
        }
        onBtnEnter() {
            q.getTouch() && this.newItem();
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setWXPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWXPlatform() {
            ol.isIOS() && (this.boxMain.centerY -= 60, this.btnEnter.y += 60);
        }
        setWeb4399Platform() {}
        setQQPlatform() {}
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {
            this.isAuto = !1;
        }
        setTTPlatform() {}
    }
    class fo extends T.view.native.NativeBanner3ViewUI {
        constructor(e = null) {
            super(), this.isCanRefresh = !0, this.isFirstTouch = !0, this.isCanAutoShow = !0, 
            this.btnNative = e;
        }
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.imgAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), this.btnNative && this.btnNative.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), this.funcId = L.register(w.REFRESH_NATIVE_AD, this.refresh, this), 
            this.refresh();
        }
        onDestroy() {
            this.btnNative && (this.btnNative.visible = !1, Laya.Tween.clearAll(this.btnNative)), 
            this.btnNative = null, Laya.timer.clearAll(this), L.unregisterByFuncId(this.funcId);
        }
        playButtonScale() {
            let e = 0, t = this, i = function() {
                e % 2 == 0 ? Laya.Tween.to(t.btnNative, {
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 500, null, Laya.Handler.create(t, i)) : Laya.Tween.to(t.btnNative, {
                    scaleX: 1,
                    scaleY: 1
                }, 500, null, Laya.Handler.create(t, i)), e++;
            };
            i();
        }
        onBtnAd() {
            if (q.getTouch() && (hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdClick({
                adId: j.nativeExtendList.data.adId.toString()
            }), hl.platform == v.VIVO)) {
                j.preloadNativeAdExtend(function() {}, function() {}, i.BANNER);
            }
        }
        onBtnClose() {
            this.destroy();
        }
        refresh() {
            this.isCanRefresh && this.imgAd && (j.nativeExtendList.data ? (j.hideBannerAd(), 
            this.isCanAutoShow && this.show(), hl.platform != v.WEB && j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdShow({
                adId: j.nativeExtendList.data.adId.toString()
            }), this.imgAd.skin = j.nativeExtendList.data.imgUrlList[0]) : this.autoHide());
        }
        hide() {
            this.destroyed || (this.isCanAutoShow = !1, this.mouseEnabled = !1, this.visible = !1, 
            this.btnNative && (this.btnNative.visible = !1));
        }
        autoHide() {
            this.mouseEnabled = !1, this.visible = !1, this.btnNative && (this.btnNative.visible = !1);
        }
        show() {
            this.destroyed || (this.isCanAutoShow = !0, j.nativeExtendList.data && j.nativeExtendList.data.imgUrlList[0] && (this.mouseEnabled = !0, 
            this.visible = !0, this.btnNative && (this.btnNative.visible = !0)));
        }
    }
    class Lo extends T.view.native.NativeInterstitialViewUI {
        constructor(e = null) {
            super(), this.isCanRefresh = !0, this.isFirstTouch = !0, this.isCanAutoShow = !0, 
            this.btnNative = e;
        }
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.imgTouch.on(Laya.Event.CLICK, this, this.onBtnAd), this.btnNative && this.btnNative.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), this.funcId = L.register(w.REFRESH_NATIVE_AD, this.refresh, this), 
            this.refresh();
        }
        onDestroy() {
            this.btnNative && (this.btnNative.visible = !1, Laya.Tween.clearAll(this.btnNative)), 
            this.btnNative = null, Laya.timer.clearAll(this), L.unregisterByFuncId(this.funcId);
        }
        playButtonScale() {
            let e = 0, t = this, i = function() {
                e % 2 == 0 ? Laya.Tween.to(t.btnNative, {
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 500, null, Laya.Handler.create(t, i)) : Laya.Tween.to(t.btnNative, {
                    scaleX: 1,
                    scaleY: 1
                }, 500, null, Laya.Handler.create(t, i)), e++;
            };
            i();
        }
        onBtnAd() {
            if (hl.platform != v.OPPO && hl.platform != v.VIVO || j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdClick({
                adId: j.nativeExtendList.data.adId.toString()
            }), hl.platform == v.VIVO) {
                j.preloadNativeAdExtend(function() {}, function() {}, i.BANNER);
            }
        }
        onBtnClose() {
            q.getTouch() && Bt.closeFunction();
        }
        refresh() {
            this.isCanRefresh && this.imgAd && (j.nativeExtendList.data ? (j.hideBannerAd(), 
            this.isCanAutoShow && this.show(), hl.platform != v.WEB && j.nativeExtendList.ad && j.nativeExtendList.ad.reportAdShow({
                adId: j.nativeExtendList.data.adId.toString()
            }), this.imgAd.skin = j.nativeExtendList.data.imgUrlList[0], this.txtTitle.text = j.nativeExtendList.data.title, 
            this.txtContent.text = j.nativeExtendList.data.desc) : this.autoHide());
        }
        hide() {
            this.destroyed || (this.isCanAutoShow = !1, this.mouseEnabled = !1, this.visible = !1, 
            this.btnNative && (this.btnNative.visible = !1));
        }
        autoHide() {
            this.mouseEnabled = !1, this.visible = !1, this.btnNative && (this.btnNative.visible = !1);
        }
        show() {
            this.destroyed || (this.isCanAutoShow = !0, j.nativeExtendList.data && j.nativeExtendList.data.imgUrlList[0] && (this.mouseEnabled = !0, 
            this.visible = !0, this.btnNative && (this.btnNative.visible = !0)));
        }
    }
    class wo extends T.view.gameBox.OPPOGameBoxViewUI {
        constructor() {
            super(), this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            this.init(), this.setBtnEvent();
        }
        onDestroy() {
            us.unregisterByFuncId();
        }
        init() {
            us.adDown(), us.setAdTypeInNext(), this.adCtrl(), this.ani1.play(0, !0), this.ani2.play(0, !0);
        }
        adCtrl() {
            us.register(function() {
                console.log("oppogameBox广告关闭"), Bt.closeFunction();
                let e = Rs.playerLogicalBaseLayer ? Rs.playerLogicalBaseLayer.playerKillCount : 2;
                e += 1, Bt.openFunction(Er.GET_BOX_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                    itemList: [ {
                        itemId: "1001",
                        count: hs.getSeniorBoxReward().gold
                    }, {
                        itemId: "2001",
                        count: hs.getSeniorBoxReward().diamonds
                    }, {
                        itemId: "3001",
                        count: e
                    }, {
                        itemId: "1001",
                        count: Math.floor(hs.getSeniorBoxReward().gold / 3)
                    } ]
                });
            });
        }
        setBtnEvent() {
            this.btnOpenSenior.on(Laya.Event.CLICK, this, this.onBtnOpeSenior), this.btnOpenPrimary.on(Laya.Event.CLICK, this, this.onBtnOpenPrimary);
        }
        onBtnOpeSenior() {
            if (!q.getTouch()) return;
            let e = Rs.playerLogicalBaseLayer ? Rs.playerLogicalBaseLayer.playerKillCount : 2;
            e += 1, j.setEvent(function() {
                Bt.closeFunction(), Bt.openFunction(Er.GET_BOX_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                    itemList: [ {
                        itemId: "1001",
                        count: hs.getSeniorBoxReward().gold
                    }, {
                        itemId: "2001",
                        count: hs.getSeniorBoxReward().diamonds
                    }, {
                        itemId: "3001",
                        count: e
                    }, {
                        itemId: "1001",
                        count: Math.floor(hs.getSeniorBoxReward().gold / 3)
                    } ]
                });
            }, function() {
                us.forceToSetAdType();
            }, t.BOX_REWARD);
        }
        onBtnOpenPrimary() {
            q.getTouch() && us.execute(function() {
                Bt.getFunction(Er.OPPOGAMEBOX) && Bt.openFunction(Er.GET_GOLD_REWARD, gr.REPLACE, ur.VIEW, St.GOLD, hs.getPrimaryBoxReward().gold);
            }, !1, !0);
        }
    }
    let bo = {
        EQUIP: 1,
        REMOVE: 2
    }, Eo = [ "sub1/ui/library/img_arm_4.png", "sub1/ui/library/img_arm_3.png", "sub1/ui/library/img_arm_2.png", "sub1/ui/library/img_arm_1.png" ];
    class Co extends T.view.library.LibraryArmItemUI {
        constructor() {
            super(), this.armAperture = null, this.isCheckNoLocal = !1, this.createArmAperture(this.btnEquip), 
            this.btnDetails.on(Laya.Event.CLICK, this, this.onBtnDetails), this.btnEquip.on(Laya.Event.CLICK, this, this.onBtnEquip), 
            this.btnRemove.on(Laya.Event.CLICK, this, this.onBtnRemove);
        }
        setView() {
            let e = this.dataSource.data;
            console.log("data:", e), e.id == Gr.PROP_BOMB_ID && 1 == tl.getInstance().getDragonBoatBombState() ? (this.imgIcon.skin = "sub1/equip/prop/3.png", 
            e.name = "粽子手榴弹") : this.imgIcon.skin = e.icon;
            let t = "";
            if (tl.getInstance().getEquipHaveTime(e.id)) {
                let i = tl.getInstance().getEquipHaveTime(e.id) - tl.getInstance().getTime();
                i > 86400 ? (console.log("超过一天到期"), t = " (" + Math.floor(i / 86400) + "天)") : i > 3600 ? (console.log("超过一小时到期"), 
                t = " (" + Math.floor(i / 3600) + "小时)") : t = " (" + Math.floor(i / 60) + "分钟)";
            }
            this.imgGrade.skin = ul.GRADE_UI.GRADE_TAB_ROOT + e.grade + ".png", this.txtName.text = e.name + t, 
            this.imgBg.skin = Eo[e.grade - 1], this.setState();
            let i = tl.getInstance().getGuide();
            ns.curEquiplLibraryStep > i && (i = ns.curEquiplLibraryStep, this.isCheckNoLocal = !0), 
            i == Et.TOEQUIP && 0 == this.dataSource.myIndex && this.armAperture.play(!0);
        }
        setState() {
            this.imgEquiped.visible = !1, this.btnEquip.visible = !1, this.btnRemove.visible = !1, 
            this.dataSource.state == bo.EQUIP ? this.btnEquip.visible = !0 : this.dataSource.state == bo.REMOVE && (this.imgEquiped.visible = !0, 
            this.btnRemove.visible = !0);
        }
        createArmAperture(e) {
            this.armAperture || (this.armAperture = ns.createCommonAperture(e), this.armAperture.visible = !1, 
            this.armAperture.anchorX = .5, this.armAperture.anchorY = .5, this.armAperture.x = e.width / 2, 
            this.armAperture.y = e.height / 2);
        }
        onBtnDetails() {
            console.log("打开详情"), Bt.openFunction(Er.DETAIL, gr.COVER, ur.VIEW, St.ALL_SHOW, this.dataSource.data);
        }
        onBtnEquip() {
            this.armAperture.stop(), this.armAperture.visible = !1;
            let e = tl.getInstance().getGuide();
            console.log("当前格子指引：", ns.curEquiplLibraryStep, e), ns.curEquiplLibraryStep != Et.TOEQUIP && e != Et.TOEQUIP || e < Et.FINISH && tl.getInstance().isNew && Bt.getFunctionViewCtrl(Er.LIBRARY).setGuideByCell();
            let t = !0, i = Bt.getFunctionViewCtrl(Er.LIBRARY);
            if (console.log(i.curListInBottom), console.log("当前单元格：", Bt.getFunctionViewCtrl(Er.LIBRARY).index), 
            2 == this.dataSource.data.type || 8 == this.dataSource.data.type) tl.getInstance().updateSkinGameCurPropLib(this.dataSource.data.id), 
            t = !1; else {
                let e = null;
                i.curListInBottom[i.index] && (e = i.curListInBottom[i.index]), tl.getInstance().updateSkinGameCurLib(this.dataSource.data.id, e), 
                tl.getInstance().setSelectSkin(this.dataSource.data.id);
            }
            this.dataSource.state = bo.REMOVE, this.setView(), Bt.getFunctionViewCtrl(Er.LIBRARY).updateBottomArm(), 
            Bt.getFunctionViewCtrl(Er.LIBRARY).btnCtrlRight(this.dataSource.data.id, t), Bt.getFunctionViewCtrl(Er.LIBRARY).showRoleModel(tl.getInstance().getSelectRoleSkin(), this.dataSource.data.id);
        }
        onBtnRemove() {
            let e = 2 == this.dataSource.data.type || 8 == this.dataSource.data.type ? tl.getInstance().getGameCurPropLib() : tl.getInstance().getSkinGameCurLib();
            if (1 == e.length && 2 != this.dataSource.data.type && 8 != this.dataSource.data.type) return void Oi.showNotificationClick("至少携带一把主武器");
            for (let t = 0; t < e.length; t++) e[t] == this.dataSource.data.id && e.splice(t, 1);
            let t = !0;
            2 == this.dataSource.data.type || 8 == this.dataSource.data.type ? (tl.getInstance().removeSkinGameCurPropLib(e), 
            t = !1) : tl.getInstance().removeSkinGameCurLib(e), this.dataSource.state = bo.EQUIP, 
            this.setView(), Bt.getFunctionViewCtrl(Er.LIBRARY).updateBottomArm(), Bt.getFunctionViewCtrl(Er.LIBRARY).btnCtrlRight(this.dataSource.data.id, t), 
            Bt.getFunctionViewCtrl(Er.LIBRARY).showRoleModel(tl.getInstance().getSelectRoleSkin());
        }
    }
    var vo, xo;
    !function(e) {
        e[e.UNLOCK_NORMAL = 1] = "UNLOCK_NORMAL", e[e.UNLOCK_SELECT = 2] = "UNLOCK_SELECT", 
        e[e.LOCK_NORMAL = 3] = "LOCK_NORMAL", e[e.LOCK_SELECT = 4] = "LOCK_SELECT", e[e.USE_NORMAL = 5] = "USE_NORMAL", 
        e[e.USE_SELECT = 6] = "USE_SELECT";
    }(vo || (vo = {}));
    class Bo extends T.view.library.LibraryPartsItemUI {
        constructor() {
            super(), this.myIndex = 0, this.btnUse.on(Laya.Event.CLICK, this, this.onBtnUse), 
            this.btnBuy.on(Laya.Event.CLICK, this, this.onBtnBuy), this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnAd.addComponent($), this.btnRemove.on(Laya.Event.CLICK, this, this.onBtnRemove), 
            this.btnBox.on(Laya.Event.CLICK, this, this.select), this.uiPlatformConfig();
        }
        onBtnUse() {
            q.getTouch() && (console.log("点击使用"), Bt.getFunctionViewCtrl(Er.LIBRARY).useParts(this.myIndex));
        }
        onBtnRemove() {
            q.getTouch() && Bt.getFunctionViewCtrl(Er.LIBRARY).removePart(this.myIndex);
        }
        select() {
            console.log("点击选择"), Bt.getFunctionViewCtrl(Er.LIBRARY).onPartSelectSkin(this.myIndex);
        }
        onBtnBuy() {
            q.getTouch() && (1 == this.dataSource.costType ? tl.getInstance().costGold(this.dataSource.cost) ? (Oi.showNotification("购买成功"), 
            Bt.getFunctionViewCtrl(Er.LIBRARY).buyParts(this.myIndex)) : Bt.openFunction(Er.ADD_GOLD, gr.COVER, ur.WINDOW, St.GOLD, 1) : 2 == this.dataSource.costType && (tl.getInstance().costDiamond(this.dataSource.cost) ? (Oi.showNotification("购买成功"), 
            Bt.getFunctionViewCtrl(Er.LIBRARY).buyParts(this.myIndex)) : Bt.openFunction(Er.ADD_DIAMONDS, gr.COVER, ur.WINDOW, St.DIAMOND, 1)));
        }
        setView(e) {
            1 == this.dataSource.costType ? this.img_costType.skin = "sub1/ui/common/img_3.png" : 2 == this.dataSource.costType && (this.img_costType.skin = "sub1/ui/common/img_4.png"), 
            this.imgGrade.skin = ul.GRADE_UI.GRADE_TAB_ROOT + this.dataSource.grade + ".png", 
            this.imgGradeBg.skin = ul.GRADE_UI.GRADE_BG_ROOT + this.dataSource.grade + ".png", 
            this.imgGradeBottom.skin = ul.GRADE_UI.GRADE_BG_BOTTOM_ROOT + this.dataSource.grade + ".png", 
            this.imgDebris.skin = eo[this.dataSource.grade - 1], 1 == this.dataSource.activityType ? this.img_NewYearTag.visible = !1 : 2 == this.dataSource.activityType && (this.img_NewYearTag.visible = !0), 
            this.txtName.text = this.dataSource.roleName, this.imgIcon.skin = this.dataSource.url, 
            this.myIndex = e, this.txtCost.text = this.dataSource.cost.toString(), this.setState();
        }
        mySelect(e) {
            this.dataSource.state == vo.LOCK_NORMAL ? this.dataSource.state = vo.LOCK_SELECT : this.dataSource.state == vo.UNLOCK_NORMAL ? this.dataSource.state = vo.UNLOCK_SELECT : this.dataSource.state == vo.UNLOCK_SELECT ? this.dataSource.state = e ? vo.USE_SELECT : vo.USE_NORMAL : this.dataSource.state == vo.USE_NORMAL && (this.dataSource.state = vo.USE_SELECT), 
            this.setState();
        }
        setState() {
            switch (this.imgSelect.visible = !1, this.btnUse.disabled = !1, this.btnBuy.visible = !1, 
            this.btnUse.visible = !1, this.imgUsing.visible = !1, this.boxCost.visible = !1, 
            this.btnRemove.visible = !1, this.btnAd.visible = !1, this.boxDebris.visible = !1, 
            this.dataSource.state) {
              case vo.UNLOCK_NORMAL:
                this.btnUse.visible = !0;
                break;

              case vo.UNLOCK_SELECT:
                this.imgSelect.visible = !0, this.btnUse.visible = !0;
                break;

              case vo.LOCK_NORMAL:
                if (3 == this.dataSource.costType) {
                    this.boxDebris.visible = !0, this.btnAd.visible = !0;
                    let e = this.dataSource.id, t = Ur.PART_DEBRIS.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e), i = tl.getInstance().getTargetFragment({
                        type: Ur.PART_DEBRIS,
                        id: t
                    });
                    this.labelDebrisAll.text = " /" + this.dataSource.cost + ")", this.labelDebris.text = i.toString(), 
                    this.labelDebris.color = 0 == i ? "#FF2A20" : "#ffffff";
                } else this.btnBuy.visible = !0, this.boxCost.visible = !0;
                break;

              case vo.LOCK_SELECT:
                if (this.imgSelect.visible = !0, 3 == this.dataSource.costType) {
                    this.boxDebris.visible = !0, this.btnAd.visible = !0;
                    let e = this.dataSource.id, t = Ur.PART_DEBRIS.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e), i = tl.getInstance().getTargetFragment({
                        type: Ur.PART_DEBRIS,
                        id: t
                    });
                    this.labelDebrisAll.text = " /" + this.dataSource.cost + ")", this.labelDebris.text = i.toString(), 
                    this.labelDebris.color = 0 == i ? "#FF2A20" : "#ffffff";
                } else this.btnBuy.visible = !0, this.boxCost.visible = !0;
                break;

              case vo.USE_NORMAL:
                this.imgUsing.visible = !0, this.btnRemove.visible = !0;
                break;

              case vo.USE_SELECT:
                this.imgSelect.visible = !0, this.imgUsing.visible = !0, this.btnRemove.visible = !0;
            }
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnAd.getChildAt(0),
                type: 1
            } ]);
        }
        onBtnAd() {
            q.getTouch(500) && j.setEvent(() => {
                Bt.getFunctionViewCtrl(Er.LIBRARY).buyPartDebris(this.myIndex);
            }, function() {}, t.GET_DEBRIS);
        }
    }
    !function(e) {
        e[e.UNLOCK_NORMAL = 1] = "UNLOCK_NORMAL", e[e.UNLOCK_SELECT = 2] = "UNLOCK_SELECT", 
        e[e.LOCK_NORMAL = 3] = "LOCK_NORMAL", e[e.LOCK_SELECT = 4] = "LOCK_SELECT", e[e.USE_NORMAL = 5] = "USE_NORMAL", 
        e[e.USE_SELECT = 6] = "USE_SELECT";
    }(xo || (xo = {}));
    class Ao extends T.view.library.LibraryRoleItemUI {
        constructor() {
            super(), this.myIndex = 0, this.btnUse.on(Laya.Event.CLICK, this, this.onBtnUse), 
            this.btnBuy.on(Laya.Event.CLICK, this, this.onBtnBuy), this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnAd.addComponent($), this.uiPlatformConfig();
        }
        onBtnUse() {
            q.getTouch() && Bt.getFunctionViewCtrl(Er.LIBRARY).useRole(this.myIndex);
        }
        onBtnBuy() {
            q.getTouch() && (1 == this.dataSource.costType ? tl.getInstance().costGold(this.dataSource.cost) ? (Oi.showNotification("购买成功"), 
            Bt.getFunctionViewCtrl(Er.LIBRARY).buyRole(this.myIndex)) : Bt.openFunction(Er.ADD_GOLD, gr.COVER, ur.WINDOW, St.GOLD, 1) : 2 == this.dataSource.costType && (tl.getInstance().costDiamond(this.dataSource.cost) ? (Oi.showNotification("购买成功"), 
            Bt.getFunctionViewCtrl(Er.LIBRARY).buyRole(this.myIndex)) : Bt.openFunction(Er.ADD_DIAMONDS, gr.COVER, ur.WINDOW, St.DIAMOND, 1)));
        }
        onBtnAd() {
            q.getTouch(500) && j.setEvent(() => {
                Bt.getFunctionViewCtrl(Er.LIBRARY).buyRoleDebris(this.myIndex);
            }, function() {}, t.GET_DEBRIS);
        }
        setView(e) {
            1 == this.dataSource.costType ? this.img_costType.skin = "sub1/ui/common/img_3.png" : 2 == this.dataSource.costType && (this.img_costType.skin = "sub1/ui/common/img_4.png"), 
            this.imgGrade.skin = ul.GRADE_UI.GRADE_TAB_ROOT + this.dataSource.grade + ".png", 
            this.imgGradeBg.skin = ul.GRADE_UI.GRADE_BG_ROOT + this.dataSource.grade + ".png", 
            this.imgGradeBottom.skin = ul.GRADE_UI.GRADE_BG_BOTTOM_ROOT + this.dataSource.grade + ".png", 
            this.imgDebris.skin = eo[this.dataSource.grade - 1], 1 == this.dataSource.activityType ? this.img_NewYearTag.visible = !1 : 2 == this.dataSource.activityType && (this.img_NewYearTag.visible = !0), 
            this.txtName.text = this.dataSource.roleName, this.imgIcon.skin = this.dataSource.url, 
            this.myIndex = e, this.txtCost.text = this.dataSource.cost.toString(), this.setState();
        }
        mySelect(e) {
            this.dataSource.state == xo.LOCK_NORMAL ? this.dataSource.state = xo.LOCK_SELECT : this.dataSource.state == xo.UNLOCK_NORMAL ? this.dataSource.state = xo.UNLOCK_SELECT : this.dataSource.state == xo.UNLOCK_SELECT ? this.dataSource.state = e ? xo.USE_SELECT : xo.USE_NORMAL : this.dataSource.state == xo.USE_NORMAL && (this.dataSource.state = xo.USE_SELECT), 
            this.setState();
        }
        setState() {
            switch (console.log("this.dataSource:", this.dataSource), this.imgSelect.visible = !1, 
            this.btnUse.disabled = !1, this.btnBuy.visible = !1, this.btnUse.visible = !1, this.imgUsing.visible = !1, 
            this.boxCost.visible = !1, this.boxDebris.visible = !1, this.btnAd.visible = !1, 
            this.dataSource.state) {
              case xo.UNLOCK_NORMAL:
                this.btnUse.visible = !0;
                break;

              case xo.UNLOCK_SELECT:
                this.imgSelect.visible = !0, this.btnUse.visible = !0;
                break;

              case xo.LOCK_NORMAL:
                if (3 == this.dataSource.costType) {
                    this.boxDebris.visible = !0, this.btnAd.visible = !0;
                    let e = this.dataSource.id, t = Ur.HERO_DEBRIS.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e), i = tl.getInstance().getTargetFragment({
                        type: Ur.HERO_DEBRIS,
                        id: t
                    });
                    this.labelDebrisAll.text = " /" + this.dataSource.cost + ")", this.labelDebris.text = i.toString(), 
                    this.labelDebris.color = 0 == i ? "#FF2A20" : "#ffffff";
                } else this.btnBuy.visible = !0, this.boxCost.visible = !0;
                break;

              case xo.LOCK_SELECT:
                if (this.imgSelect.visible = !0, 3 == this.dataSource.costType) {
                    this.boxDebris.visible = !0, this.btnAd.visible = !0;
                    let e = this.dataSource.id, t = Ur.HERO_DEBRIS.toString() + (e > 99 ? e : e > 9 ? "0" + e : "00" + e), i = tl.getInstance().getTargetFragment({
                        type: Ur.HERO_DEBRIS,
                        id: t
                    });
                    this.labelDebrisAll.text = " /" + this.dataSource.cost + ")", this.labelDebris.text = i.toString(), 
                    this.labelDebris.color = 0 == i ? "#FF2A20" : "#ffffff";
                } else this.btnBuy.visible = !0, this.boxCost.visible = !0;
                break;

              case xo.USE_NORMAL:
                this.btnUse.visible = !0, this.imgUsing.visible = !0, this.btnUse.disabled = !0;
                break;

              case xo.USE_SELECT:
                this.imgSelect.visible = !0, this.btnUse.visible = !0, this.imgUsing.visible = !0, 
                this.btnUse.disabled = !0;
            }
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnAd.getChildAt(0),
                type: 1
            } ]);
        }
    }
    let _o = [ 1, 2, 3 ], So = {
        RIFLE: "RIFLE",
        CHARGE: "CHARGE",
        SNIPER: "SNIPER",
        SHRAPNEL: "SHRAPNEL",
        PISTOL: "PISTOL",
        MACHINE: "MACHINE",
        OTHER: "OTHER",
        WAISTDECORATIONS: "WAISTDECORATIONS",
        WING: "WING"
    }, To = {
        ROLE: 1,
        PARTS: 0
    }, Do = {
        ARM: "ARM",
        ROLE: "ROLE",
        PARTS: "PARTS"
    };
    class Ro extends T.view.library.LibraryViewUI {
        constructor() {
            super(), this.armType = "RIFLE", this.index = 0, this.curListInBottom = [], this.scene3D = null, 
            this._translate2 = new Laya.Vector3(5, -10, 1), this._translate = new Laya.Vector3(0, 0, 0), 
            this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), this.rotMouseX = 0, this.curOpenView = "ARM", 
            this.curRole = null, this.isCheckNoLocal = !1, this.closeAperture = null, this.curID = 1, 
            this.curTryType = 1, this.curBtnType = 1, this.myIndex = 1, this.isrefresh = !1, 
            this.isFirstEnable = !0, this.isMouseDown = !1, this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            this.createArmAperture(this.btnBack);
            let e = tl.getInstance().getGuide();
            5 == ns.curEquiplLibraryStep && ns.curEquiplLibraryStep++, 5 == e && tl.getInstance().setGuide(), 
            7 == ns.curEquiplLibraryStep && (ns.curEquiplLibraryStep = 6), 7 == e && tl.getInstance().setGuide(6), 
            this.setPlatformStyle(), this.init(), this.setBtnEvent(), this.setGuide();
        }
        onDestroy() {}
        createArmAperture(e) {
            this.closeAperture || (this.closeAperture = ns.createCommonAperture(e), this.closeAperture.visible = !1, 
            this.closeAperture.anchorX = .5, this.closeAperture.anchorY = .5, this.closeAperture.x = e.width / 2, 
            this.closeAperture.y = e.height / 2);
        }
        setGuide() {
            let e = tl.getInstance().getGuide();
            switch (ns.curEquiplLibraryStep > e && (e = ns.curEquiplLibraryStep, this.isCheckNoLocal = !0), 
            e) {
              case Et.CHOOSEARM:
                6 == ns.curEquiplLibraryStep && ns.curEquiplLibraryStep++, 6 == e && tl.getInstance().setGuide(), 
                this.setGuide();
                break;

              case Et.TOEQUIP:
                console.log("去装备"), this.onBtnCharge();
            }
        }
        init() {
            let e = tl.getInstance().getSkinGameCurLib()[0];
            for (let t = 0; t < tl.getInstance().getSkinGameCurLib().length; t++) e < tl.getInstance().getSkinGameCurLib()[t] && (e = tl.getInstance().getSkinGameCurLib()[t]);
            tl.getInstance().setSelectSkin(e), this.viewCtrl(), this.setRoleData(), this.getArmListType(), 
            this.setData(this.armType, !0), this.setPartData(!0), this.create3D();
        }
        viewCtrl() {
            this.btnArm.skin = ul.LIBRARY_UI.LEFT_BTN_UI.TOUCH, this.btnRole.skin = ul.LIBRARY_UI.LEFT_BTN_UI.TOUCH, 
            this.btnParts.skin = ul.LIBRARY_UI.LEFT_BTN_UI.TOUCH, this.boxArm.visible = !1, 
            this.boxRole.visible = !1, this.boxParts.visible = !1, this.curOpenView == Do.ARM ? (this.btnArm.skin = ul.LIBRARY_UI.LEFT_BTN_UI.TOUCHED, 
            this.boxArm.visible = !0) : this.curOpenView == Do.ROLE ? (this.btnRole.skin = ul.LIBRARY_UI.LEFT_BTN_UI.TOUCHED, 
            this.boxRole.visible = !0) : this.curOpenView == Do.PARTS && (this.btnParts.skin = ul.LIBRARY_UI.LEFT_BTN_UI.TOUCHED, 
            this.boxParts.visible = !0);
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(1024, 1024, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2.2, this.img3DCenter.source = new Laya.Texture(i), this.showRoleModel(tl.getInstance().getSelectRoleSkin()), 
            this.showModel(tl.getInstance().getSelectSkin(), 0);
        }
        showRoleModel(e, t = null) {
            this.sp && (this.sp.destroy(), this.sp = null), this.sp = Te.createRoleViewSkin(this._translate, this.scene3D, !1, e), 
            this.sp.transform.localRotationEulerY = 90, Laya.Tween.to(this.sp.transform, {
                localRotationEulerY: 20
            }, 300), this.sp.transform.localPositionY -= 1, this.sp.transform.localPositionX -= .3, 
            this.sp.transform.localScaleX = 5.4, this.sp.transform.localScaleY = 4.6, this.sp.transform.localScaleZ = 4.9;
            let i = t || tl.getInstance().getSelectSkin(), a = Te.createMenuArm(i, this.sp);
            a.transform.localScaleX = .9, a.transform.localScaleY = .9, a.transform.localScaleZ = .9, 
            Te.createPartsByLocal(this.sp, new Laya.Vector3(1, 1, 1));
        }
        showModel(e, t) {
            let i = Te.createMenuArm(e, this.sp, t);
            i.transform.localScaleX = .9, i.transform.localScaleY = .9, i.transform.localScaleZ = .9;
        }
        setBtnEvent() {
            this.bottomCtrl(), this.btnArm.on(Laya.Event.CLICK, this, this.onBtnArm), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnBottomBack.on(Laya.Event.CLICK, this, this.onBtnBottomBack), this.btnBottomOpen.on(Laya.Event.CLICK, this, this.onBtnBottomOpen), 
            this.btnCharge.on(Laya.Event.CLICK, this, this.onBtnCharge), this.btnOther.on(Laya.Event.CLICK, this, this.onBtnOther), 
            this.btnPistol.on(Laya.Event.CLICK, this, this.onBtnPistol), this.btnRifle.on(Laya.Event.CLICK, this, this.onBtnRifle), 
            this.btnRole.on(Laya.Event.CLICK, this, this.onBtnRole), this.btnParts.on(Laya.Event.CLICK, this, this.onBtnParts), 
            this.btnSniper.on(Laya.Event.CLICK, this, this.onBtnSniper), this.btnShrapnel.on(Laya.Event.CLICK, this, this.onBtnShrapnel), 
            this.btnMachine.on(Laya.Event.CLICK, this, this.onBtnMachine), this.btnWaistDecorations.on(Laya.Event.CLICK, this, this.onBtnWaistDecorations), 
            this.btnWing.on(Laya.Event.CLICK, this, this.onBtnWing), this.btnTry.on(Laya.Event.CLICK, this, this.onBtnTry), 
            this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnMouseDown), this.on(Laya.Event.MOUSE_UP, this, this.onBtnMouseUp), 
            this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnRot);
        }
        onBtnMouseUp() {
            this.isMouseDown = !1;
        }
        onBtnMouseDown(e) {
            this.isMouseDown = !0, this.rotMouseX = e.stageX;
        }
        onBtnTry() {
            if (!q.getTouch()) return;
            let e = this.curTryType, t = this.curID;
            Bt.openFunction(Er.ROLETRY, gr.COVER, ur.WINDOW, St.HIDE, {
                modelType: e,
                id: t
            });
        }
        onBtnRot(e) {
            if (this.isMouseDown && this.sp) {
                let t = e.stageX - this.rotMouseX;
                this.sp.transform.localRotationEulerY += .4 * t, this.rotMouseX = e.stageX;
            }
        }
        bottomCtrl() {
            for (let e = 0; e < this.bottomArm.numChildren; e++) {
                this.bottomArm.getChildAt(e).on(Laya.Event.CLICK, this, this.onBtnItem);
            }
            this.updateBottomArm();
            let e = tl.getInstance().getUseEquip(), t = 0;
            for (let i = 0; i < this.curListInBottom.length; i++) {
                this.curListInBottom[i] == e && (t = i);
            }
            this.index = t, this.updateBottomArm();
        }
        onBtnItem(e) {
            if ("arm1" == e.target.name) {
                this.index = 0;
                let e = this.curListInBottom[this.index];
                -1 != e && (this.btnCtrlRight(e, !0), this.showModel(e, 0), tl.getInstance().setSelectSkin(e));
            } else if ("arm2" == e.target.name) {
                this.index = 1;
                let e = this.curListInBottom[this.index];
                -1 != e && (this.btnCtrlRight(e, !0), this.showModel(e, 0), tl.getInstance().setSelectSkin(e));
            } else if ("other1" == e.target.name) {
                this.index = 2;
                let e = this.curListInBottom[this.index];
                -1 != e && (this.btnCtrlRight(e, !1), this.showModel(e, 1));
            } else if ("other2" == e.target.name) {
                this.index = 3;
                let e = this.curListInBottom[this.index];
                -1 != e && (this.btnCtrlRight(e, !1), this.showModel(e, 1));
            }
            this.updateBottomArm();
        }
        btnCtrlRight(e, t = !0) {
            t ? 1 == A.getDataByKey(e).type ? this.armType = So.RIFLE : 3 == A.getDataByKey(e).type ? this.armType = So.SNIPER : 4 == A.getDataByKey(e).type ? this.armType = So.PISTOL : 5 == A.getDataByKey(e).type ? this.armType = So.CHARGE : 6 == A.getDataByKey(e).type ? this.armType = So.MACHINE : 7 == A.getDataByKey(e).type && (this.armType = So.SHRAPNEL) : this.armType = So.OTHER, 
            this.setData(this.armType, !1);
        }
        setTryBtn(e) {
            this.imgType.skin = e;
        }
        updateBottomArm() {
            this.curListInBottom = [];
            let e = tl.getInstance().getSkinGameCurLib(), t = tl.getInstance().getGameCurPropLib();
            for (let i = 0; i < this.bottomArm.numChildren; i++) {
                let a = this.bottomArm.getChildAt(i), s = a.getChildByName("imgIcon"), n = a.getChildByName("imgSelect");
                if (n.visible = !1, 0 == i) s.skin = A.getDataByKey(e[0]).icon, this.curListInBottom.push(A.getDataByKey(e[0]).id), 
                s.scale(.8, .8); else if (1 == i) 1 == e.length ? (s.skin = "sub1/ui/library/img_5.png", 
                this.curListInBottom.push(-1), s.scale(1, 1)) : (s.skin = A.getDataByKey(e[1]).icon, 
                this.curListInBottom.push(A.getDataByKey(e[1]).id), s.scale(.8, .8)); else if (2 == i) {
                    let e = !1;
                    for (let i = 0; i < t.length; i++) {
                        let a = _e.getDataByKey(t[i]);
                        2 == a.type && (s.skin = a.icon, s.scale(.8, .8), this.curListInBottom.push(a.id), 
                        e = !0);
                    }
                    e || (this.curListInBottom.push(-1), s.skin = "sub1/ui/library/img_7.png", s.scale(1, 1));
                } else if (3 == i) {
                    let e = !1;
                    for (let i = 0; i < t.length; i++) {
                        let a = _e.getDataByKey(t[i]);
                        8 == a.type && (a.id == Gr.PROP_BOMB_ID && 1 == tl.getInstance().getDragonBoatBombState() ? s.skin = "sub1/equip/prop/3.png" : s.skin = a.icon, 
                        s.scale(.8, .8), this.curListInBottom.push(a.id), e = !0);
                    }
                    e || (this.curListInBottom.push(-1), s.skin = "sub1/ui/library/img_6.png", s.scale(1, 1));
                }
                this.index == i ? n.visible = !0 : n.visible = !1;
            }
        }
        setData(e = So.RIFLE, t = !1) {
            this.armType = e, this.rightBtn(e), e != So.WAISTDECORATIONS && e != So.WING && this.updateData(t);
        }
        rightBtn(e = So.RIFLE) {
            e != So.WAISTDECORATIONS && e != So.WING ? (this.btnRifle.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH, 
            this.btnCharge.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH, this.btnSniper.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH, 
            this.btnShrapnel.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH, this.btnPistol.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH, 
            this.btnMachine.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH, this.btnOther.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH) : (this.btnWaistDecorations.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH, 
            this.btnWing.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCH), e == So.RIFLE ? this.btnRifle.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.CHARGE ? this.btnCharge.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.OTHER ? this.btnOther.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.PISTOL ? this.btnPistol.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.SHRAPNEL ? this.btnShrapnel.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.SNIPER ? this.btnSniper.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.MACHINE ? this.btnMachine.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.WAISTDECORATIONS ? this.btnWaistDecorations.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED : e == So.WING && (this.btnWing.getChildAt(0).skin = ul.LIBRARY_UI.RIGHT_BTN_UI.TOUCHED);
        }
        updateData(e = !1) {
            if (e) {
                let e = this.getList();
                this.armList.itemRender = Co, this.armList.vScrollBarSkin = "", this.armList.dataSource = e, 
                this.armList.renderHandler = new Laya.Handler(this, this.updateSkinItem);
            } else {
                let e = this.getList();
                this.armList.dataSource = e, this.armList.refresh();
            }
        }
        updateSkinItem(e, t) {
            e.setView();
        }
        getArmListType() {
            let e = tl.getInstance().getSelectSkin();
            1 == A.getDataByKey(e).type ? this.armType = So.RIFLE : 3 == A.getDataByKey(e).type ? this.armType = So.SNIPER : 4 == A.getDataByKey(e).type ? this.armType = So.PISTOL : 5 == A.getDataByKey(e).type ? this.armType = So.CHARGE : 6 == A.getDataByKey(e).type ? this.armType = So.MACHINE : 7 == A.getDataByKey(e).type && (this.armType = So.SHRAPNEL);
        }
        getPartList() {
            this.myIndex = 0;
            let e = [], t = tl.getInstance().getPartLib(), i = tl.getInstance().getTargetPart(this.curBtnType);
            console.log("mySkinLib:", t, "selectSkin:", i);
            for (let a = 0; a < ee.keys.length; a++) {
                let s = {
                    id: ee.getDataByKey(a + 1).id,
                    url: ee.getDataByKey(a + 1).icon,
                    cost: ee.getDataByKey(a + 1).cost,
                    grade: ee.getDataByKey(a + 1).grade,
                    roleName: ee.getDataByKey(a + 1).cnName,
                    costType: ee.getDataByKey(a + 1).costType,
                    partType: ee.getDataByKey(a + 1).partType,
                    modelType: 0,
                    state: vo.LOCK_NORMAL,
                    hd: ee.getDataByKey(a + 1).hd
                };
                if (i == ee.getDataByKey(a + 1).id) s.state = vo.USE_SELECT, Laya.timer.once(1, this, function() {
                    this.showPartsModel(ee.getDataByKey(a + 1).id);
                }, null, !1), this.myIndex = a; else for (let e in t) if (t[e] == ee.getDataByKey(a + 1).id) {
                    s.state = vo.UNLOCK_NORMAL;
                    break;
                }
                s.partType == this.curBtnType && (s.hd && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || e.push(s));
            }
            e.sort(function(e, t) {
                if (null != t.id) return console.log("a:", e, "b:", t), e.state == t.state ? e.id > t.id ? 1 : -1 : e.state == vo.LOCK_NORMAL ? 1 : e.state == vo.UNLOCK_NORMAL && t.state == vo.UNLOCK_SELECT && e.id > t.id ? 1 : -1;
            });
            let a = this.getTargetList(e, 1), s = this.getTargetList(e, 2), n = this.getTargetList(e, 3);
            console.log("重新获取三个列表：", a, s, n);
            let o = 0, r = !1;
            for (let t = 0; t < e.length; t++) if (e[t].state == vo.LOCK_NORMAL) {
                o = t, r = !0;
                break;
            }
            return 0 != o ? (e.splice(o, e.length), this.pushNewList(e, a), this.pushNewList(e, s), 
            this.pushNewList(e, n)) : r && (e.splice(o, e.length), this.pushNewList(e, a), this.pushNewList(e, s), 
            this.pushNewList(e, n)), console.log("skinData:", o, e), e;
        }
        setPartData(e = !1) {
            if (e) {
                let e = this.getPartList();
                this.partsList.itemRender = Bo, this.partsList.vScrollBarSkin = "", this.partsList.dataSource = e, 
                this.partsList.selectEnable = !0, this.partsList.renderHandler = new Laya.Handler(this, this.updateSkinPartsItem);
            } else {
                this.isrefresh = !0;
                let e = this.getPartList();
                this.partsList.dataSource = e, console.log("更新完之后得数据：", this.partsList.dataSource), 
                this.partsList.refresh();
            }
        }
        updateSkinPartsItem(e, t) {
            e.setView(t);
        }
        getList() {
            let e = [], t = [], i = this.armType == So.OTHER ? tl.getInstance().getGameCurPropLib() : tl.getInstance().getSkinGameCurLib(), a = this.armType == So.OTHER ? tl.getInstance().getPropLib() : tl.getInstance().getSkinLib();
            if (this.armType != So.OTHER) for (let e = 0; e < a.length; e++) {
                let i = a[e];
                this.armType == So.RIFLE ? 1 == A.getDataByKey(i).type && t.push(A.getDataByKey(i)) : this.armType == So.CHARGE ? 5 == A.getDataByKey(i).type && t.push(A.getDataByKey(i)) : this.armType == So.PISTOL ? 4 == A.getDataByKey(i).type && t.push(A.getDataByKey(i)) : this.armType == So.SHRAPNEL ? 7 == A.getDataByKey(i).type && t.push(A.getDataByKey(i)) : this.armType == So.SNIPER ? 3 == A.getDataByKey(i).type && t.push(A.getDataByKey(i)) : this.armType == So.MACHINE && 6 == A.getDataByKey(i).type && t.push(A.getDataByKey(i));
            } else for (let e = 0; e < a.length; e++) {
                let i = a[e];
                t.push(_e.getDataByKey(i));
            }
            for (let a = 0; a < t.length; a++) {
                let s = {
                    myIndex: a,
                    data: t[a],
                    state: bo.EQUIP
                };
                for (let e = 0; e < i.length; e++) t[a].id == i[e] && (s.state = bo.REMOVE);
                e.push(s);
            }
            return e = this.pjsort(e);
        }
        pjsort(e) {
            for (var t = e.length, i = 0; i < t - 1; i++) for (var a = 0; a < t - 1 - i; a++) if (e[a].data.grade > e[a + 1].data.grade) {
                var s = e[a];
                e[a] = e[a + 1], e[a + 1] = s;
            }
            return e;
        }
        setGuideByCell() {
            for (let e = 0; e < this.armList.dataSource.length; e++) {
                let t = this.armList.getCell(e);
                t && t.armAperture && (t.armAperture.stop(), t.armAperture.visible = !1);
            }
            let e = tl.getInstance().getGuide();
            ns.curEquiplLibraryStep == Et.TOEQUIP && ns.curEquiplLibraryStep++, e == Et.TOEQUIP && tl.getInstance().setGuide(), 
            console.log("开启关闭指引"), this.closeAperture && (this.closeAperture.rotation = 60, 
            this.closeAperture.play(!0), Ts.synthesisViewCtrl && Ts.synthesisViewCtrl.warehouseAperture && Ts.synthesisViewCtrl.warehouseAperture.stop());
        }
        pushNewList(e, t) {
            for (let i = 0; i < t.length; i++) e.push(t[i]);
        }
        getTargetList(e = [], t) {
            let i = [];
            for (let a = 0; a < e.length; a++) e[a].costType == t && e[a].state == xo.LOCK_NORMAL && i.push(e[a]);
            return i = this.bSort(i);
        }
        bSort(e) {
            for (var t = e.length, i = 0; i < t - 1; i++) for (var a = 0; a < t - 1 - i; a++) if (e[a].cost > e[a + 1].cost) {
                var s = e[a];
                e[a] = e[a + 1], e[a + 1] = s;
            }
            return e;
        }
        setRoleData() {
            let e = [], t = tl.getInstance().getRoleSkinLib(), i = tl.getInstance().getSelectRoleSkin();
            for (let a = 0; a < Be.keys.length; a++) {
                let s = {
                    id: Be.getDataByKey(a + 1).id,
                    url: Be.getDataByKey(a + 1).icon,
                    cost: Be.getDataByKey(a + 1).cost,
                    grade: Be.getDataByKey(a + 1).grade,
                    roleName: Be.getDataByKey(a + 1).cnName,
                    costType: Be.getDataByKey(a + 1).costType,
                    activityType: Be.getDataByKey(a + 1).activityType,
                    state: xo.LOCK_NORMAL,
                    hd: Be.getDataByKey(a + 1).hd
                };
                if (i == Be.getDataByKey(a + 1).id) s.state = xo.USE_SELECT, this.curRole = s, this.updateRoleContent(), 
                Laya.timer.once(1, this, function() {
                    this.showRoleModel(Be.getDataByKey(a + 1).id);
                }, null, !1); else for (let e in t) if (t[e] == Be.getDataByKey(a + 1).id) {
                    s.state = xo.UNLOCK_NORMAL;
                    break;
                }
                s.hd && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || e.push(s);
            }
            e.sort(function(e, t) {
                return e.state == t.state ? e.id > t.id ? 1 : -1 : e.state == xo.LOCK_NORMAL ? 1 : e.state == xo.UNLOCK_NORMAL && t.state == xo.UNLOCK_SELECT && e.id > t.id ? 1 : -1;
            }), this.roleList.itemRender = Ao, this.roleList.vScrollBarSkin = "", this.roleList.dataSource = e, 
            this.roleList.selectEnable = !0, this.roleList.renderHandler = new Laya.Handler(this, this.updateRoleItem), 
            this.roleList.selectHandler = new Laya.Handler(this, this.onSelectSkin);
        }
        onSelectSkin(e, t = !1) {
            for (let i in this.roleList.dataSource) {
                let a = this.roleList.getCell(parseInt(i));
                e != parseInt(i) && (this.roleList.dataSource[parseInt(i)].state == xo.LOCK_SELECT ? this.roleList.dataSource[parseInt(i)].state = xo.LOCK_NORMAL : this.roleList.dataSource[parseInt(i)].state == xo.UNLOCK_SELECT ? this.roleList.dataSource[parseInt(i)].state = xo.UNLOCK_NORMAL : this.roleList.dataSource[parseInt(i)].state == xo.USE_SELECT ? this.roleList.dataSource[parseInt(i)].state = t ? xo.UNLOCK_NORMAL : xo.USE_NORMAL : this.roleList.dataSource[parseInt(i)].state == xo.USE_NORMAL && t && (this.roleList.dataSource[parseInt(i)].state = xo.UNLOCK_NORMAL, 
                a && a.setState()));
            }
            let i = this.roleList.getCell(parseInt(e));
            this.curRole = this.roleList.dataSource[e], this.updateRoleContent(), i.mySelect(t), 
            this.btnTry.visible = !1, this.roleList.dataSource[e].state == xo.LOCK_SELECT && (this.btnTry.visible = !0, 
            this.curID = this.roleList.dataSource[e].id, this.curTryType = To.ROLE, this.setTryBtn("sub1/ui/try/img_new_role_1.png")), 
            this.showRoleModel(this.roleList.dataSource[e].id);
        }
        onPartSelectSkin(e, t = !1, i = !1) {
            il.playEffect(ml.CLICK), this.myIndex = e, console.log("选择：", e, this.partsList.dataSource[e].state);
            for (let i in this.partsList.dataSource) {
                let a = this.partsList.getCell(parseInt(i));
                e != parseInt(i) && (this.partsList.dataSource[parseInt(i)].state == vo.LOCK_SELECT ? this.partsList.dataSource[parseInt(i)].state = vo.LOCK_NORMAL : this.partsList.dataSource[parseInt(i)].state == vo.UNLOCK_SELECT ? this.partsList.dataSource[parseInt(i)].state = vo.UNLOCK_NORMAL : this.partsList.dataSource[parseInt(i)].state == vo.USE_SELECT ? this.partsList.dataSource[parseInt(i)].state = t ? vo.UNLOCK_NORMAL : vo.USE_NORMAL : this.partsList.dataSource[parseInt(i)].state == vo.USE_NORMAL && t && (this.partsList.dataSource[parseInt(i)].state = vo.UNLOCK_NORMAL, 
                a && a.setState()));
            }
            this.isrefresh = !1;
            let a = this.partsList.getCell(this.myIndex);
            a && a.mySelect(t), this.btnTry.visible = !1, this.partsList.dataSource[e].state == vo.LOCK_SELECT && (this.btnTry.visible = !0, 
            this.curID = this.partsList.dataSource[e].id, this.curTryType = To.PARTS, this.setTryBtn("sub1/ui/try/img_new_role_2.png")), 
            console.log("展示模型"), i || this.showPartsModel(this.partsList.dataSource[e].id);
        }
        showPartsModel(e, t = null) {
            console.log("传入部件ID：", e);
            Te.createParts(e, this.sp, new Laya.Vector3(1, 1, 1), t);
        }
        updateRoleContent() {
            this.txtRoleName.text = this.curRole.roleName ? this.curRole.roleName : this.curRole.cnName;
        }
        updateRoleItem(e, t) {
            e.setView(t);
        }
        buyRole(e) {
            console.log("购买角色:", this.roleList.dataSource[e]), this.roleList.dataSource[e].state = xo.USE_SELECT, 
            tl.getInstance().setRoleSkinLib(this.roleList.dataSource[e].id), tl.getInstance().setSelectRoleSkin(this.roleList.dataSource[e].id);
            let t = this.roleList.dataSource[e].id, i = Ur.HERO.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t);
            this.onSelectSkin(e, !0), Bt.openFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                id: i,
                cb: null
            });
        }
        buyParts(e) {
            this.partsList.dataSource[e].state = xo.USE_SELECT, tl.getInstance().setPartsSkin(this.partsList.dataSource[e].id), 
            tl.getInstance().setTargetPart(this.partsList.dataSource[e].id);
            let t = this.partsList.dataSource[e].id;
            Ur.HERO.toString();
            this.onPartSelectSkin(e, !0);
        }
        buyRoleDebris(e) {
            let t = this.roleList.dataSource[e].id, i = Ur.HERO_DEBRIS.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t);
            ao.getAward([ {
                itemId: i,
                count: 1
            } ], gr.COVER, !0), this.roleList.refresh(), tl.getInstance().getTargetFragment({
                type: Ur.HERO_DEBRIS,
                id: i
            }) >= this.roleList.dataSource[e].cost && this.useRole(e);
        }
        buyPartDebris(e) {
            let t = this.partsList.dataSource[e].id, i = Ur.PART_DEBRIS.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t);
            ao.getAward([ {
                itemId: i,
                count: 1
            } ], gr.COVER, !0), this.partsList.refresh(), tl.getInstance().getTargetFragment({
                type: Ur.PART_DEBRIS,
                id: i
            }) >= this.partsList.dataSource[e].cost && this.useParts(e);
        }
        useRole(e) {
            this.roleList.dataSource[e].state = xo.USE_SELECT, tl.getInstance().setSelectRoleSkin(this.roleList.dataSource[e].id), 
            this.onSelectSkin(e, !0);
        }
        useParts(e) {
            this.partsList.dataSource[e].state = xo.USE_SELECT, tl.getInstance().setTargetPart(this.partsList.dataSource[e].id), 
            this.partsList.refresh(), this.onPartSelectSkin(e, !0);
        }
        removePart(e) {
            this.partsList.dataSource[e].state = xo.UNLOCK_NORMAL, console.log("卸下：", this.curBtnType), 
            tl.getInstance().removePart(this.curBtnType), Te.removePartsByTS(this.curBtnType, this.sp), 
            this.onPartSelectSkin(e, !1, !0), console.log("卸下之后的数据：", tl.getInstance().getPartsSkin());
        }
        onBtnArm() {
            q.getTouch() && (this.curOpenView = Do.ARM, this.showRoleModel(tl.getInstance().getSelectRoleSkin()), 
            this.curRole = Be.getDataByKey(tl.getInstance().getSelectRoleSkin()), console.log(" this.curRole:", this.curRole), 
            this.updateRoleContent(), this.viewCtrl(), this.btnTry.visible = !1);
        }
        onBtnBack() {
            q.getTouch() && (ns.curEquiplLibraryStep == Et.GAME_2 && tl.getInstance().getGuide() > Et.GAME_1 && tl.getInstance().getGuide() < Et.GAME_2 && tl.getInstance().setGuide(), 
            tl.getInstance().getGuide() == Et.GAME_2 && Bt.getFunctionViewCtrl(Er.FIRST).resetData(), 
            Bt.getFunctionViewCtrl(Er.FIRST).setGuide(), Bt.closeFunction());
        }
        onBtnBottomBack() {
            q.getTouch() && this.aniClose.play(0, !1);
        }
        onBtnBottomOpen() {
            q.getTouch() && this.aniOpen.play(0, !1);
        }
        onBtnCharge() {
            this.setData(So.CHARGE);
        }
        onBtnOther() {
            q.getTouch() && this.setData(So.OTHER);
        }
        onBtnPistol() {
            q.getTouch() && this.setData(So.PISTOL);
        }
        onBtnRifle() {
            q.getTouch() && this.setData(So.RIFLE);
        }
        onBtnRole() {
            q.getTouch() && (this.curOpenView = Do.ROLE, this.btnTry.visible = !1, this.viewCtrl());
        }
        onBtnParts() {
            q.getTouch() && (this.curOpenView = Do.PARTS, this.btnTry.visible = !1, this.viewCtrl(), 
            this.setData(So.WING), this.curBtnType = _o[1], this.setPartData());
        }
        onBtnSniper() {
            q.getTouch() && this.setData(So.SNIPER);
        }
        onBtnShrapnel() {
            q.getTouch() && this.setData(So.SHRAPNEL);
        }
        onBtnMachine() {
            q.getTouch() && this.setData(So.MACHINE);
        }
        onBtnWaistDecorations() {
            q.getTouch() && (this.setData(So.WAISTDECORATIONS), this.curBtnType = _o[0], this.setPartData());
        }
        onBtnWing() {
            q.getTouch() && (this.setData(So.WING), this.curBtnType = _o[1], this.setPartData());
        }
        setPlatformStyle() {
            switch (hl.platform) {
              case v.WX:
                this.setWXPlatform();
                break;

              case v.QQ:
                this.setQQPlatform();
                break;

              case v.WEB:
                this.setNativeAndroidPlatform();
                break;

              case v.WEB_4399:
                this.setWeb4399Platform();
                break;

              case v.VIVO:
                this.setVIVOPlatform();
                break;

              case v.OPPO:
                this.setOPPOPlatform();
                break;

              case v.NATIVE_IOS:
                this.setNativeIOSPlatform();
                break;

              case v.NATIVE_ANDRIOD:
                this.setNativeAndroidPlatform();
                break;

              case v.TT:
                this.setTTPlatform();
            }
        }
        setWeb4399Platform() {
            this.label4399.visible = !0;
        }
        setWXPlatform() {
            this.armList.height = 453, this.roleList.height = 461, this.partsList.height = 461;
        }
        setQQPlatform() {
            this.armList.height = 453, this.roleList.height = 461, this.partsList.height = 461;
        }
        setWebPlatform() {}
        setVIVOPlatform() {}
        setOPPOPlatform() {}
        setNativeIOSPlatform() {}
        setNativeAndroidPlatform() {
            this.armList.height = 453, this.roleList.height = 461, this.partsList.height = 461;
        }
        setTTPlatform() {}
    }
    class No extends T.view.end.EndMySelfViewUI {
        constructor() {
            super(), this.addExp = 4, this.scene3D = null, this._translate2 = new Laya.Vector3(5, -10, 1), 
            this._translate = new Laya.Vector3(0, 0, 0), this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), 
            this.width = Laya.stage.width, this.height = Laya.stage.height;
        }
        onAwake() {
            this.share1.visible = !1, this.share2.visible = !1, hl.platform == v.TT ? this.share2.visible = !0 : this.share1.visible = !0, 
            Nt.getCurScene().createMenu(1, this), this.init(), this.setEvent(), hl.platform != v.WX && hl.platform != v.QQ && hl.platform != v.TT && (this.btnRevive.visible = !1, 
            this.btnBack.pos(this.btnRevive.x, this.btnRevive.y)), hl.platform, v.TT, tl.getInstance().isNew && Ts.gameNum <= 3 && xt.reportNewPlayerMySlefView(Ts.gameNum);
        }
        setEvent() {
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnEnter), this.btnRevive.on(Laya.Event.CLICK, this, this.onBtnShard);
        }
        onBtnEnter() {
            q.getTouch() && (Nt.getCurScene().cleanMenu(), Bt.closeFunction());
        }
        onBtnShard() {
            if (!q.getTouch()) return;
            let e = this;
            if (hl.platform != v.TT && hl.platform != v.WEB) j.shareMessage(); else {
                if ("" == ol.path) return void L.notify("录屏失败，请重新开始游戏");
                Bt.openFunction(Er.RECORD, gr.COVER, ur.WINDOW, St.HIDE, {
                    cb: function() {},
                    sucessCb: function() {
                        e.btnRevive.visible = !1;
                    }
                });
            }
        }
        init() {
            let e, t = Rs._isWin, i = this.imgProgress.width;
            this.imgFail.visible = !1, this.imgWin.visible = !1, this.imgMvp.visible = !1, this.imgSvp.visible = !1, 
            this.labelRank.visible = !1, this.btnRevive.visible = !1, t ? (this.imgWin.visible = !0, 
            this.btnRevive.visible = !0, this.addExp = 8) : (hl.platform == v.TT && (this.btnRevive.visible = !0), 
            this.imgFail.visible = !0, hl.platform != v.TT && this.btnBack.pos(this.btnRevive.x, this.btnRevive.y));
            let a = [], s = [], n = 0;
            if (Bt.getFunction(Er.FIRST)) return;
            {
                for (let t = 0; t < Rs.logicalBaseLayer.length; t++) {
                    let i = Rs.logicalBaseLayer[t];
                    i.getIsMySelf() && (e = i), i.getRoleType() == Mr.TYPE_0 ? a.push(i) : s.push(i);
                }
                let i = this.sort(a), o = this.sort(s);
                if (t) {
                    for (let e = 0; e < i.length; e++) {
                        if (i[e].getIsMySelf()) {
                            n = e + 1;
                            break;
                        }
                    }
                    this.labelRank.text = "胜方第" + n + "名", n <= 1 ? this.imgMvp.visible = !0 : this.labelRank.visible = !0;
                } else {
                    for (let e = 0; e < o.length; e++) {
                        if (o[e].getIsMySelf()) {
                            n = e + 1;
                            break;
                        }
                    }
                    this.labelRank.text = "败方第" + n + "名", n <= 1 ? this.imgSvp.visible = !0 : this.labelRank.visible = !0;
                }
            }
            this.addExp = this.addExp * e.playerKillCount + this.addExp;
            tl.getInstance().increaseExp(this.addExp);
            let o = tl.getInstance().getRoleExpData();
            this.labelAddExp.text = "+" + this.addExp.toString(), this.imgProgress.width = o.curExp / o.exp * i, 
            this.labelDie.text = "被淘汰:" + e.playerBeKillCount, this.labelKill.text = "击败:" + e.playerKillCount, 
            this.labelScore.text = "评分:" + e.score, this.labelLv.text = "Lv." + o.lv.toString();
        }
        onDestroy() {
            this.sp && this.sp.destroy(), this.sp = null, this.scene3D && this.scene3D.destroy(), 
            this.scene3D = null, this._translate2 = null, this._translate = null, this.sp = null, 
            this._pos = null;
        }
        sort(e) {
            for (var t, i = 0, a = e.length; i < a; i++) for (var s = 0; s <= i; s++) e[i].score > e[s].score && (t = e[i], 
            e[i] = e[s], e[s] = t);
            return e;
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i), this.sp && (this.sp.destroy(), 
            this.sp = null), this.sp = Te.createRoleViewSkin(this._translate, this.scene3D, !1, tl.getInstance().getSelectRoleSkin()), 
            this.sp.transform.localRotationEulerY = 20, this.sp.transform.localPositionY -= 3, 
            this.sp.transform.localPositionX -= .3, this.sp.transform.localScaleX = 6, this.sp.transform.localScaleY = 6, 
            this.sp.transform.localScaleZ = 6;
            let a = 0, s = tl.getInstance().getSkinGameCurLib();
            Rs.playerLogicalBaseLayer.armCtrl && (2 == Rs.playerLogicalBaseLayer.armCtrl.getType() ? (a = 1, 
            s = [ "2001" ]) : 8 != Rs.playerLogicalBaseLayer.armCtrl.getType() && (a = 0, s = [ Rs.playerLogicalBaseLayer.armCtrl.id ])), 
            Mt.mode == Tt.KNIFEWARMODE && (a = 1, s = [ "2001" ]);
            let n = Te.createMenuArm(s[0], this.sp, a);
            n.transform.localScaleX = .7, n.transform.localScaleY = .7, n.transform.localScaleZ = .7;
        }
    }
    class Mo extends T.view.library.LibraryPropertybarItemUI {
        constructor() {
            super();
        }
        onAwake() {}
        onDestroy() {}
        setView() {
            this.txtAttribute.text = this.dataSource.attribute, this.txtPro.text = this.dataSource.pro, 
            "命中头部" != this.dataSource.attribute && "命中身体" != this.dataSource.attribute && "命中四肢" != this.dataSource.attribute || (this.txtPro.text = this.dataSource.bs), 
            this.imgPro.width = 166 * this.dataSource.pro / this.dataSource.maxPro;
        }
        update() {}
    }
    class ko extends T.view.library.DetailViewUI {
        constructor(e) {
            super(), this.myArmData = null, this.cacheList = [], this.scene3D = null, this._translate2 = new Laya.Vector3(5, -10, 1), 
            this._translate = new Laya.Vector3(0, 0, 0), this._pos = new Laya.Vector3(310, 500, 0), 
            this.rotMouseX = 0, this.sp = null, this.myArmData = e, this.width = this.stage.width, 
            this.height = this.stage.height;
        }
        onAwake() {
            this.setData(), this.create3D(), this.on(Laya.Event.MOUSE_DOWN, this, this.onBtnMouseDown), 
            this.on(Laya.Event.MOUSE_MOVE, this, this.onBtnRot), this.btnBack.on(Laya.Event.CLICK, this, function() {
                Bt.closeFunction();
            });
        }
        onDestroy() {
            this.cacheList = null, this.myArmData = null;
        }
        onBtnMouseDown(e) {
            this.rotMouseX = e.stageX;
        }
        onBtnRot(e) {
            if (this.sp) {
                let t = e.stageX - this.rotMouseX;
                this.sp.transform.localRotationEulerY += .4 * t, this.rotMouseX = e.stageX;
            }
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, 2, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearFlag = Laya.CameraClearFlags.SolidColor, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(1024, 1024, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i);
            let a = Te.onLyToCreateArm(this.myArmData.id, this.scene3D);
            a.transform.localRotationEulerY = 90, a.transform.localScaleX = 6, a.transform.localScaleY = 6, 
            a.transform.localScaleZ = 6, a.transform.position = t.transform.position.clone(), 
            a.transform.localPositionZ -= 15, a.transform.localPositionX -= 1, this.sp = a;
        }
        showModel(e) {
            let t = Te.onLyToCreateArm(e, this.scene3D);
            t.transform.localRotationEulerY = 20, t.transform.localScaleX = 10, t.transform.localScaleY = 10, 
            t.transform.localScaleZ = 10;
        }
        notUpdateProp() {
            return {
                id: 8001,
                lv: 1,
                fire: _e.getDataByKey(this.myArmData.id).hit,
                pierceThrough: _e.getDataByKey(this.myArmData.id).pierceThrough,
                firingRate: _e.getDataByKey(this.myArmData.id).interval,
                numberOfBullets: _e.getDataByKey(this.myArmData.id).magazineBullet,
                range: _e.getDataByKey(this.myArmData.id).range,
                accurate: 100,
                ammunitionChange: _e.getDataByKey(this.myArmData.id).bullets,
                sight: _e.getDataByKey(this.myArmData.id).sight,
                movingSpeed: _e.getDataByKey(this.myArmData.id).movingSpeed,
                biochemicalCharging: _e.getDataByKey(this.myArmData.id).biochemicalCharging
            };
        }
        setData() {
            if (this.myArmData) {
                console.log("myArmData:", this.myArmData), this.cleanCacheList(), this.txtName.text = this.myArmData.name;
                let e = "";
                1 == this.myArmData.type ? e = "步枪" : 2 == this.myArmData.type ? e = "刀" : 3 == this.myArmData.type ? e = "狙击枪" : 4 == this.myArmData.type ? e = "手枪" : 5 == this.myArmData.type ? e = "冲锋枪" : 6 == this.myArmData.type ? e = "机枪" : 7 == this.myArmData.type ? e = "散弹枪" : 8 == this.myArmData.type && (e = "手榴弹");
                let t = [], i = tl.getInstance().getArmQualityByID(this.myArmData.id) ? tl.getInstance().getArmQualityByID(this.myArmData.id) : this.notUpdateProp();
                console.log("武器属性-----------------------------:", i), t = 1 == this.myArmData.type || 3 == this.myArmData.type || 4 == this.myArmData.type || 5 == this.myArmData.type || 6 == this.myArmData.type || 7 == this.myArmData.type ? [ {
                    attribute: "火力",
                    pro: i.fire,
                    maxPro: i.lv * i.fire * tl.getInstance().getMaxMultiple() + 2
                }, {
                    attribute: "护甲穿透",
                    pro: i.pierceThrough,
                    maxPro: i.lv * i.pierceThrough * tl.getInstance().getMaxMultiple() / 3
                }, {
                    attribute: "射速",
                    pro: i.firingRate,
                    maxPro: i.lv * i.firingRate * tl.getInstance().getMaxMultiple() / 2
                }, {
                    attribute: "子弹数",
                    pro: i.numberOfBullets,
                    maxPro: i.lv * i.numberOfBullets * tl.getInstance().getMaxMultiple() + 1.5
                }, {
                    attribute: "有效射程",
                    pro: i.range,
                    maxPro: i.lv * i.range * tl.getInstance().getMaxMultiple() + 2
                }, {
                    attribute: "精准",
                    pro: i.accurate,
                    maxPro: i.lv * i.accurate * tl.getInstance().getMaxMultiple() + 1.5
                }, {
                    attribute: "命中头部",
                    pro: i.headHit,
                    bs: i.bodyMultiple,
                    maxPro: i.maxHeadHit
                }, {
                    attribute: "命中身体",
                    pro: i.fire,
                    bs: 1,
                    maxPro: i.maxBodyHit
                }, {
                    attribute: "命中四肢",
                    pro: i.limbHit,
                    bs: i.limbMultiple,
                    maxPro: i.maxLimbHit
                } ] : [ {
                    attribute: "火力",
                    pro: i.fire,
                    maxPro: i.lv * i.fire * tl.getInstance().getMaxMultiple() + 2
                }, {
                    attribute: "护甲穿透",
                    pro: i.pierceThrough,
                    maxPro: i.lv * i.pierceThrough * tl.getInstance().getMaxMultiple() / 2
                }, {
                    attribute: "射速",
                    pro: i.firingRate,
                    maxPro: i.lv * i.firingRate * tl.getInstance().getMaxMultiple() / 2
                }, {
                    attribute: "子弹数",
                    pro: i.numberOfBullets,
                    maxPro: i.lv * i.numberOfBullets * tl.getInstance().getMaxMultiple() + 1.5
                }, {
                    attribute: "有效射程",
                    pro: i.range,
                    maxPro: i.lv * i.range * tl.getInstance().getMaxMultiple() + 2
                }, {
                    attribute: "精准",
                    pro: i.accurate,
                    maxPro: i.lv * i.accurate * tl.getInstance().getMaxMultiple() + 1.5
                } ], this.txtType.text = e, console.log("data:----------", t), this.addCacheList(t);
            }
        }
        cleanCacheList() {
            for (let e = 0; e < this.cacheList.length; e++) this.cacheList[e].destroy(), this.cacheList[e] = null;
            this.cacheList = [];
        }
        addCacheList(e) {
            this.ListArm.itemRender = Mo, this.ListArm.vScrollBarSkin = "", this.ListArm.dataSource = e, 
            this.ListArm.renderHandler = new Laya.Handler(this, this.updateSkinItem);
        }
        updateSkinItem(e, t) {
            e.setView();
        }
    }
    class Oo extends T.view.load.LoadingFightViewUI {
        constructor() {
            super(), this.loadingTime = 0, this.isLoadingComplete = !1, this.count = 0, this.isClose = !1, 
            this.step = 0, this.width = Laya.stage.width, this.height = Laya.stage.height;
        }
        onAwake() {
            var e = this;
            il.playEffect(ml.STARTGAME), Mt.modeLoadSubPackage(function() {
                e.doStep(), e.isLoadingComplete = !0;
            }), this.ani1.on(Laya.Event.COMPLETE, this, this.aniEnd);
        }
        aniEnd() {
            Laya.timer.loop(20, this, this.update), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnClose), 
            this.ani1.off(Laya.Event.COMPLETE, this, this.aniEnd);
        }
        onDestroy() {
            Laya.timer.clearAll(this);
        }
        onBtnClose() {
            q.getTouch() && (this.isClose = !0, Te.getTrialArm(null), Bt.closeFunction());
        }
        update() {
            this.isClose || (this.imgCirle.rotation++, this.loadingTime += 20, this.count < 10 && (this.isLoadingComplete ? this.loadingTime > 200 && (this.loadingTime = 0, 
            this.count++, this.count >= 10 && (this.boxComplete.visible = !0, this.boxLoading.visible = !1, 
            this.labelLoading.visible = !1, this.doStep())) : this.loadingTime > 1e3 && (this.loadingTime = 0, 
            this.count++, this.count >= 10 && (this.boxComplete.visible = !0, this.boxLoading.visible = !1, 
            this.labelLoading.visible = !1, this.doStep()))), this.labelNum && (this.labelNum.text = this.count.toString(), 
            this.labelNum1.x = 7 + this.labelNum.width));
        }
        doStep() {
            if (!this.isClose && (this.step++, this.step >= 2)) {
                this.isClose = !0, this.ani1.wrapMode = Laya.Animation.WRAP_REVERSE, this.ani1.play(0, !1);
                this.ani1.on(Laya.Event.COMPLETE, this, function() {
                    Mt.modeLoad();
                });
            }
        }
    }
    class Po extends T.view.review.ReviewLoadingFightViewUI {
        constructor() {
            super(), this.loadingTime = 0, this.isLoadingComplete = !1, this.count = 0, this.isClose = !1, 
            this.step = 0, this.width = Laya.stage.width, this.height = Laya.stage.height;
        }
        onAwake() {
            var e = this;
            il.playEffect(ml.STARTGAME), Mt.modeLoadSubPackage(function() {
                e.doStep(), e.isLoadingComplete = !0;
            }), this.aniEnd();
        }
        aniEnd() {
            Laya.timer.loop(20, this, this.update), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onDestroy() {
            Laya.timer.clearAll(this);
        }
        onBtnClose() {
            q.getTouch() && (this.isClose = !0, Te.getTrialArm(null), Bt.closeFunction());
        }
        update() {
            this.isClose || (this.loadingTime += 20, this.count < 10 && (this.isLoadingComplete ? this.loadingTime > 200 && (this.loadingTime = 0, 
            this.count++, this.count >= 10 && (this.boxComplete.visible = !0, this.boxLoading.visible = !1, 
            this.labelLoading.visible = !1, this.doStep())) : this.loadingTime > 1e3 && (this.loadingTime = 0, 
            this.count++, this.count >= 10 && (this.boxComplete.visible = !0, this.boxLoading.visible = !1, 
            this.labelLoading.visible = !1, this.doStep()))), this.labelNum && (this.labelNum.text = this.count.toString(), 
            this.labelNum1.x = 7 + this.labelNum.width));
        }
        doStep() {
            this.isClose || (this.step++, this.step >= 2 && (this.isClose = !0, Mt.modeLoad()));
        }
    }
    class Vo extends T.view.dragonBoat.DragonBoatListRewardViewUI {
        constructor(e = null) {
            super(), this.cb = null, this.isDown = !1, this.autoOpen = [], this.width = this.stage.width, 
            this.height = this.stage.height, this.cb = e, this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), this.setView();
        }
        onBtnBack() {
            if (q.getTouch()) {
                for (let e = 0; e < this.autoOpen.length; e++) {
                    const t = this.autoOpen[e];
                    Bt.registerAutoOpenFunction(t.funcTag, t.mode, t.type, t.commonMenuStyle, t.args, t.isCanRepetition);
                }
                Bt.closeFunction();
            }
        }
        onBtnAd() {
            if (q.getTouch() && !this.isDown) {
                this.isDown = !0;
                var e = this;
                j.setEvent(function() {
                    e.isDown = !1, e.getFirecracker();
                }, function() {
                    e.isDown = !1;
                }, t.FIRECRACKER);
            }
        }
        onMyEnable() {
            this.setView();
        }
        getFirecracker() {
            if (Bt.isAutoOpen = !1, 0 == this.autoOpen.length) for (let e = 0; e < Bt.autoList.length; e++) {
                const t = Bt.autoList[e];
                this.autoOpen.push(t);
            }
            Bt.autoList = [], ao.adSuccess([ {
                itemId: Gr.FIRECRACKER,
                count: 10
            }, {
                itemId: 1001,
                count: 500
            } ], !0), Bt.openFunction(Er.GET_BOX_REWARD_NEXT, gr.COVER, ur.VIEW, St.HIDE, [ {
                itemId: 1001,
                count: 500
            } ]), Oi.showNotification("狂欢次数+1");
        }
        setView() {
            let e = tl.getInstance().getFirecrackerInfo().count;
            for (let t = 0; t < xs.keys.length; t++) {
                let i = this.boxItem.getChildAt(t).getChildByName("boxGot");
                xs.getDataByIndex(t).cost <= e ? i.visible = !0 : i.visible = !1;
            }
            this.txtCount.text = `${e / 10}`;
            let t = 0, i = 0, a = 0;
            e <= 30 ? (t = 0, i = 0, a = 30) : e <= 60 ? (t = 1, i = 30, a = 30) : e <= 120 && (t = 2, 
            i = 100, a = 30);
            for (let s = 0; s < this.boxProgress.numChildren; s++) {
                let n = this.boxProgress.getChildAt(s).getChildByName("imgProgress"), o = 32;
                2 == s && (o = 35), n.width = t == s ? o * ((e - i) / a) : t > s ? o : 0;
            }
        }
    }
    class Go extends T.view.common.MoreGameViewUI {
        constructor() {
            super(), this.height = this.stage.height, this.width = this.stage.width, this.boxBg.scaleX = this.stage.width / this.boxBg.width;
            let e = ol.getCustomMatrixSize();
            this.imgbg.height = e.h + 32, this.imgbg.width = 2 * e.w + 64, this.imgbg.centerY = 8;
            let t = Laya.stage.width / 2 - e.w - 16, i = Laya.stage.height / 2 - e.h / 2, a = Laya.stage.width / 2 + 16;
            var s = this;
            this.btnClose.on(Laya.Event.CLICK, this, function() {
                q.getTouch(500) && (s.timer.clearAll(s), j.hideCustom(t, i, al.MATRIX), j.hideCustom(a, i, al.MATRIX), 
                Bt.closeFunction());
            });
        }
        onDestroy() {}
    }
    class Uo extends T.view.award.NewPlayerTryArmViewUI {
        constructor(e) {
            super(), this.cb = null, this.id = 1, this.cb = e.cb, this.width = this.stage.width, 
            this.height = this.stage.height, hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock();
        }
        onAwake() {
            let e = [];
            for (let t = 0; t < A.keys.length; t++) 1 == A.getDataByKey(A.keys[t]).type && e.push(A.keys[t]);
            let t = hl.getNewPlayerTryGun()[Ts.gameNum - 1];
            this.id = t;
            let i = !1;
            if (Rs.playerLogicalBaseLayer.armCtrlList) for (let e = 0; e < Rs.playerLogicalBaseLayer.armCtrlList.length; e++) this.id == Rs.playerLogicalBaseLayer.armCtrlList[e].getID() && (i = !0);
            i && (A.getDataByKey(t + 1) ? this.id = t + 1 : A.getDataByKey(t - 1) && (this.id = t - 1)), 
            this.txtName.text = A.getDataByKey(this.id).name, this.imgIcon.skin = A.getDataByKey(this.id).icon, 
            this.btnTry.on(Laya.Event.CLICK, this, this.onBtnTry);
        }
        onDestroy() {
            if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                Bt.getFunctionViewCtrl(Er.GAME).onBtnDown(!0);
            }
        }
        onBtnTry() {
            q.getTouch() && (this.cb && this.cb(this.id), Bt.closeFunction());
        }
    }
    class Fo extends T.view.record.RecordViewUI {
        constructor(e) {
            super(), this.cb = null, this.sucessCb = null, this.width = this.stage.width, this.height = this.stage.height, 
            this.cb = e.cb, this.sucessCb = e.sucessCb;
        }
        onAwake() {
            let e = 0 != hs.curFreeGoldRewards ? hs.curFreeGoldRewards : 100;
            this.txtGold.text = "金币+" + e.toString(), this.btnRecord1.on(Laya.Event.CLICK, this, this.onBtnRecord), 
            this.btnRecord2.on(Laya.Event.CLICK, this, this.onBtnRecord), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onDestroy() {}
        onBtnRecord() {
            if (!q.getTouch()) return;
            let e = 0 != hs.curFreeGoldRewards ? hs.curFreeGoldRewards : 100, t = this;
            ol.shareRecord("", "", ol.path, function() {
                Bt.closeFunction(), Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.GOLD, e);
                let i = t.cb, a = t.sucessCb;
                i && i(), a && a();
            });
        }
        onBtnBack() {
            if (!q.getTouch()) return;
            let e = this.cb;
            Bt.closeFunction(), e && e();
        }
    }
    class Ho {
        static getDataByKey(e) {
            if (Ho.cache[e]) return Ho.cache[e];
            if (1 == e) {
                let t = new Ho();
                return t.id = 1, t.info = "钻石X100", t.itemData = [ {
                    award: 100,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (6 == e) {
                let t = new Ho();
                return t.id = 6, t.info = "巴雷特-雷霆(24小时)", t.itemData = [ {
                    award: 65,
                    awardType: 2,
                    armTime: 86400
                } ], t.type = 2, t.awardType = 2, Ho.cache[e] = t, t;
            }
            if (3 == e) {
                let t = new Ho();
                return t.id = 3, t.info = "金币X600", t.itemData = [ {
                    award: 7018,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 7, Ho.cache[e] = t, t;
            }
            if (4 == e) {
                let t = new Ho();
                return t.id = 4, t.info = "补给箱", t.itemData = [ {
                    award: 6004,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (5 == e) {
                let t = new Ho();
                return t.id = 5, t.info = "钻石X300", t.itemData = [ {
                    award: 300,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (2 == e) {
                let t = new Ho();
                return t.id = 2, t.info = "巴雷特-雷霆(永久)", t.itemData = [ {
                    award: 65,
                    awardType: 2,
                    armTime: 0
                } ], t.type = 3, t.awardType = 2, Ho.cache[e] = t, t;
            }
            if (7 == e) {
                let t = new Ho();
                return t.id = 7, t.info = "高级补给箱", t.itemData = [ {
                    award: 0,
                    awrdType: 4,
                    armTime: 0
                } ], t.type = 1, t.awardType = 5, Ho.cache[e] = t, t;
            }
            if (8 == e) {
                let t = new Ho();
                return t.id = 8, t.info = "金币X1200", t.itemData = [ {
                    award: 7014,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 7, Ho.cache[e] = t, t;
            }
            if (9 == e) {
                let t = new Ho();
                return t.id = 9, t.info = "钻石X100", t.itemData = [ {
                    award: 100,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (14 == e) {
                let t = new Ho();
                return t.id = 14, t.info = "RPK-雷霆(24小时)", t.itemData = [ {
                    award: 64,
                    awardType: 2,
                    armTime: 86400
                } ], t.type = 2, t.awardType = 2, Ho.cache[e] = t, t;
            }
            if (11 == e) {
                let t = new Ho();
                return t.id = 11, t.info = "金币X600", t.itemData = [ {
                    award: 6013,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (12 == e) {
                let t = new Ho();
                return t.id = 12, t.info = "补给箱", t.itemData = [ {
                    award: 7016,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 7, Ho.cache[e] = t, t;
            }
            if (13 == e) {
                let t = new Ho();
                return t.id = 13, t.info = "钻石X300", t.itemData = [ {
                    award: 300,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (10 == e) {
                let t = new Ho();
                return t.id = 10, t.info = "RPK-雷霆(永久)", t.itemData = [ {
                    award: 64,
                    awardType: 2,
                    armTime: 0
                } ], t.type = 3, t.awardType = 2, Ho.cache[e] = t, t;
            }
            if (15 == e) {
                let t = new Ho();
                return t.id = 15, t.info = "高级补给箱", t.itemData = [ {
                    award: 0,
                    awrdType: 4,
                    armTime: 0
                } ], t.type = 1, t.awardType = 5, Ho.cache[e] = t, t;
            }
            if (16 == e) {
                let t = new Ho();
                return t.id = 16, t.info = "金币X1200", t.itemData = [ {
                    award: 6007,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (17 == e) {
                let t = new Ho();
                return t.id = 17, t.info = "钻石X100", t.itemData = [ {
                    award: 100,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (18 == e) {
                let t = new Ho();
                return t.id = 18, t.info = "守护者之刃-永久", t.itemData = [ {
                    award: 8011,
                    awardType: 9,
                    armTime: 0
                } ], t.type = 2, t.awardType = 9, Ho.cache[e] = t, t;
            }
            if (19 == e) {
                let t = new Ho();
                return t.id = 19, t.info = "金币X600", t.itemData = [ {
                    award: 6010,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (20 == e) {
                let t = new Ho();
                return t.id = 20, t.info = "补给箱", t.itemData = [ {
                    award: 6003,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (21 == e) {
                let t = new Ho();
                return t.id = 21, t.info = "钻石X300", t.itemData = [ {
                    award: 300,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (22 == e) {
                let t = new Ho();
                return t.id = 22, t.info = "嗜血狂鲨-永久", t.itemData = [ {
                    award: 7008,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 3, t.awardType = 7, Ho.cache[e] = t, t;
            }
            if (23 == e) {
                let t = new Ho();
                return t.id = 23, t.info = "高级补给箱", t.itemData = [ {
                    award: 0,
                    awrdType: 4,
                    armTime: 0
                } ], t.type = 1, t.awardType = 5, Ho.cache[e] = t, t;
            }
            if (24 == e) {
                let t = new Ho();
                return t.id = 24, t.info = "金币X1200", t.itemData = [ {
                    award: 6011,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (25 == e) {
                let t = new Ho();
                return t.id = 25, t.info = "钻石X100", t.itemData = [ {
                    award: 100,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (30 == e) {
                let t = new Ho();
                return t.id = 30, t.info = "嗜血狂鲨-24小时", t.itemData = [ {
                    award: 7015,
                    awardType: 7,
                    armTime: 86400,
                    count: 2
                } ], t.type = 2, t.awardType = 7, Ho.cache[e] = t, t;
            }
            if (27 == e) {
                let t = new Ho();
                return t.id = 27, t.info = "金币X600", t.itemData = [ {
                    award: 6004,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (28 == e) {
                let t = new Ho();
                return t.id = 28, t.info = "补给箱", t.itemData = [ {
                    award: 6012,
                    awardType: 6,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 6, Ho.cache[e] = t, t;
            }
            if (29 == e) {
                let t = new Ho();
                return t.id = 29, t.info = "钻石X300", t.itemData = [ {
                    award: 300,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (26 == e) {
                let t = new Ho();
                return t.id = 26, t.info = "幽灵猎手-永久", t.itemData = [ {
                    award: 5005,
                    awardType: 5,
                    armTime: 0,
                    count: 1
                } ], t.type = 3, t.awardType = 8, Ho.cache[e] = t, t;
            }
            if (31 == e) {
                let t = new Ho();
                return t.id = 31, t.info = "高级补给箱", t.itemData = [ {
                    award: 0,
                    awrdType: 4,
                    armTime: 0
                } ], t.type = 1, t.awardType = 5, Ho.cache[e] = t, t;
            }
            if (32 == e) {
                let t = new Ho();
                return t.id = 32, t.info = "金币X1200", t.itemData = [ {
                    award: 7007,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 7, Ho.cache[e] = t, t;
            }
            if (33 == e) {
                let t = new Ho();
                return t.id = 33, t.info = "钻石X100", t.itemData = [ {
                    award: 100,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (34 == e) {
                let t = new Ho();
                return t.id = 34, t.info = "嗜血狂鲨-24小时", t.itemData = [ {
                    award: 47,
                    awardType: 6,
                    armTime: 86400,
                    count: 2
                } ], t.type = 2, t.awardType = 10, Ho.cache[e] = t, t;
            }
            if (35 == e) {
                let t = new Ho();
                return t.id = 35, t.info = "金币X600", t.itemData = [ {
                    award: 7008,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 11, Ho.cache[e] = t, t;
            }
            if (36 == e) {
                let t = new Ho();
                return t.id = 36, t.info = "补给箱", t.itemData = [ {
                    award: 7020,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 10, Ho.cache[e] = t, t;
            }
            if (37 == e) {
                let t = new Ho();
                return t.id = 37, t.info = "钻石X300", t.itemData = [ {
                    award: 300,
                    awardType: 3,
                    armTime: 0
                } ], t.type = 1, t.awardType = 3, Ho.cache[e] = t, t;
            }
            if (38 == e) {
                let t = new Ho();
                return t.id = 38, t.info = "嗜血狂鲨-永久", t.itemData = [ {
                    award: 47,
                    awardType: 6,
                    armTime: 86400,
                    count: 2
                } ], t.type = 3, t.awardType = 11, Ho.cache[e] = t, t;
            }
            if (39 == e) {
                let t = new Ho();
                return t.id = 39, t.info = "高级补给箱", t.itemData = [ {
                    award: 0,
                    awrdType: 4,
                    armTime: 0
                } ], t.type = 1, t.awardType = 5, Ho.cache[e] = t, t;
            }
            if (40 == e) {
                let t = new Ho();
                return t.id = 40, t.info = "金币X1200", t.itemData = [ {
                    award: 7015,
                    awardType: 7,
                    armTime: 0,
                    count: 1
                } ], t.type = 1, t.awardType = 11, Ho.cache[e] = t, t;
            }
        }
        static getDataByIndex(e) {
            return Ho.cache[this.keys[e]] ? Ho.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Ho.cache;
        }
        clear() {
            Ho.cache = {};
        }
    }
    var Wo;
    Ho.cache = {}, Ho.keys = [ 1, 6, 3, 4, 5, 2, 7, 8, 9, 14, 11, 12, 13, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 27, 28, 29, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 ], 
    function(e) {
        e[e.NORMAL = 0] = "NORMAL", e[e.EFFECT = 1] = "EFFECT", e[e.TURN = 2] = "TURN", 
        e[e.UNLOCK = 3] = "UNLOCK";
    }(Wo || (Wo = {}));
    class Yo extends T.view.turnTable.TurnTableCellViewUI {
        constructor(e, t) {
            super(), this.type = Wo.NORMAL, this.lastType = Wo.NORMAL, this.times = t, this.index = e;
        }
        onAwake() {
            this.init(), tl.getInstance().isGetTurnAward(this.index) ? this.setView(Wo.UNLOCK) : this.setView(Wo.NORMAL);
        }
        reSet(e, t) {
            this.times = t, this.index = e, this.init(), this.type = Wo.NORMAL, this.lastType = Wo.NORMAL, 
            tl.getInstance().isGetTurnAward(this.index) ? this.setView(Wo.UNLOCK) : this.setView(Wo.NORMAL);
        }
        setView(e) {
            1 == this.data.type ? this.setImgState(e, this.boxSelectNormal, this.imgChoseNormal, this.boxNormaltem) : this.setImgState(e, this.boxSelectGun, this.imgChoseGun, this.boxGunItem), 
            this.type = e, e != Wo.NORMAL && e != Wo.UNLOCK || this.lastType != Wo.UNLOCK && (this.lastType = e);
        }
        init() {
            this.data = Ho.getDataByKey(this.index + 8 * Math.min(4, this.times - 1)), this.boxGun.visible = !1, 
            this.boxNormal.visible = !1, 1 == this.data.type ? (this.boxNormal.visible = !0, 
            this.cellCtrl || (this.cellCtrl = new to(), this.boxNormaltem.addChild(this.cellCtrl)), 
            this.setImgIcon(this.imgNormal, this.labelNormal, this.boxNormaltem)) : (this.boxGun.visible = !0, 
            this.cellCtrl || (this.cellCtrl = new to(), this.boxGunItem.addChild(this.cellCtrl)), 
            this.setImgIcon(this.imgGun, this.labelGun, this.boxGunItem)), this.aniEfffect.off(Laya.Event.LABEL, this, this.onAnieffect), 
            this.aniEfffect.on(Laya.Event.LABEL, this, this.onAnieffect);
        }
        onAnieffect(e) {
            if ("labelSound" == e && il.playEffect(ml.TURN_TABLE), "labelEnd" == e) {
                il.playEffect(ml.TURN_TABLE), this.setView(Wo.UNLOCK), tl.getInstance().setTurnAward(this.index);
                tl.getInstance().getTurnInfo();
                this.getAward(), Bt.getFunctionViewCtrl(Er.TURNTABLE).setView();
            }
        }
        setImgIcon(e, t, i) {
            switch (t.text = this.data.info, e.scale(1, 1), e.visible = !0, i.visible = !1, 
            t.fontSize = 22, this.data.awardType) {
              case 1:
                this.data.itemData[0].award < 500 ? e.skin = ul.ITEM_ROOT + Gr.GOLD + ".png" : e.skin = ul.ITEM_ROOT + Gr.GOLD1 + ".png";
                break;

              case 3:
                e.scale(.9, .9), this.data.itemData[0].award < 200 ? e.skin = ul.ITEM_ROOT + Gr.DIAMONDS + ".png" : e.skin = ul.ITEM_ROOT + Gr.DIAMONDS1 + ".png";
                break;

              case 2:
                e.skin = A.getDataByKey(this.data.itemData[0].award).icon;
                break;

              case 4:
                e.skin = "sub1/ui/sign/img_12.png";
                break;

              case 5:
                e.skin = "sub1/ui/gameBox/img_1.png", e.scale(.4, .4);
                break;

              case 6:
              case 7:
              case 10:
              case 11:
                {
                    e.visible = !1, i.visible = !0;
                    let a = tl.getInstance().getTurnItemInfo(this.index, this.times);
                    this.cellCtrl.setView(a.itemId, a.count), this.cellCtrl.imgDebris.visible = !0, 
                    this.cellCtrl.labelCount.visible = !0, this.cellCtrl.boxDebrisP.visible = !1, this.cellCtrl.labelName.visible = !1, 
                    this.cellCtrl.show(), t.text = this.cellCtrl.itemData.name + "x" + this.cellCtrl.count, 
                    t.fontSize = 17, this.data.type >= 2 && (t.fontSize = 22);
                }
                break;

              case 8:
                {
                    e.scale(.6, .6);
                    let t = Is.getDataByKey(this.data.itemData[0].award), i = Be.getDataByKey(t.extra());
                    e.skin = i.icon;
                }
                break;

              case 9:
                {
                    e.scale(.6, .6);
                    let t = Is.getDataByKey(this.data.itemData[0].award), i = ee.getDataByKey(t.extra());
                    e.skin = i.icon;
                }
            }
        }
        setImgState(e, t, i, a) {
            switch (i.visible = !1, t.visible = !1, e) {
              case Wo.EFFECT:
                this.aniEfffect.play(0, !1), this.type == Wo.UNLOCK && console.log("bug"), il.playEffect(ml.TURN_TABLE);
                break;

              case Wo.NORMAL:
                this.type == Wo.UNLOCK && (t.visible = !0);
                break;

              case Wo.TURN:
                il.playEffect(ml.TURN_TABLE), this.type == Wo.UNLOCK && (t.visible = !0), i.visible = !0;
                break;

              case Wo.UNLOCK:
                t.visible = !0;
            }
        }
        onDestroy() {
            At.autoUnlinkUIReference(this);
        }
        getAward() {
            switch (this.data.awardType) {
              case 1:
                Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.GOLD, this.data.itemData[0].award);
                break;

              case 3:
                Bt.openFunction(Er.GET_DIAMONDS_REWARD, gr.COVER, ur.VIEW, St.DIAMOND, {
                    reward: this.data.itemData[0].award,
                    cb: null
                });
                break;

              case 2:
                ls.getInstance().getEquip(this.data.itemData[0].award, function() {}, this.data.itemData[0].armTime);
                break;

              case 4:
                let e = [];
                for (let t = 0; t < this.data.itemData.length; t++) {
                    const i = this.data.itemData[t];
                    1 == i.awardType ? i.award > 500 ? e.push({
                        itemId: Gr.GOLD1,
                        count: i.award
                    }) : e.push({
                        itemId: Gr.GOLD,
                        count: i.award
                    }) : 3 == i.awardType && (i.award > 200 ? e.push({
                        itemId: Gr.DIAMONDS1,
                        count: i.award
                    }) : e.push({
                        itemId: Gr.DIAMONDS,
                        count: i.award
                    }));
                }
                ao.adSuccess(e, !0), Bt.openFunction(Er.GET_BOX_REWARD_NEXT, gr.COVER, ur.VIEW, St.HIDE, e);
                break;

              case 5:
                hs.setfreeRewardForGoldCoins(), Bt.openFunction(Er.GET_GOLD_REWARD, gr.COVER, ur.VIEW, St.GOLD, 2 * hs.curFreeGoldRewards);
                break;

              case 6:
              case 7:
              case 11:
              case 10:
                let t = tl.getInstance().getTurnItemInfo(this.index, this.times);
                ao.getAward([ {
                    itemId: t.itemId,
                    count: t.count
                } ], gr.COVER, !0);
                break;

              case 8:
              case 9:
                Bt.openFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                    id: this.data.itemData[0].award,
                    cb: null
                });
            }
        }
    }
    class Xo extends T.view.turnTable.TurnTableViewUI {
        constructor() {
            super(), this.cellCtrlList = [], this.isTurnTable = !1, this.isDown = !1, this.turnIndex = 0, 
            this.awardIndex = 0, this.width = Laya.stage.width, this.height = Laya.stage.height;
        }
        onAwake() {
            this.init(), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnGet.on(Laya.Event.CLICK, this, this.onBtnTurn), 
            Bt.replaceAdIcon([ {
                img: this.btnGet.getChildAt(1),
                type: 1
            } ]);
        }
        onBtnBack() {
            q.getTouch() && (this.isDown || (this.isTurnTable ? Oi.showNotification("正在抽奖中") : Bt.closeFunction()));
        }
        onDestroy() {}
        init() {
            this.cellCtrlList = [];
            let e = tl.getInstance().getTurnInfo();
            for (let t = 0; t < this.boxCell.numChildren; t++) {
                const i = this.boxCell.getChildAt(t);
                i.removeChildren();
                let a = new Yo(t + 1, e.state);
                i.addChild(a), this.cellCtrlList.push(a);
            }
            this.labelTimes.text = "第" + e.state + "轮", this.img1.visible = !1, this.img2.visible = !1, 
            this.boxDebris.visible = !1, this.boxGun.visible = !1, e.state >= 3 && (this.labelInfo.text = "次必得稀有碎片", 
            this.boxDebris.visible = !0, this.labelLog.text = "稀有碎片"), this.labelCount.text = "再抽" + (8 - e.lib.length) + "次必得", 
            1 == e.state && (this.boxGun.visible = !0, this.img2.visible = !0), 2 == e.state && (this.boxGun.visible = !0, 
            this.img1.visible = !0), this.labelCount.text = "再抽" + (8 - e.lib.length) + "次必得";
        }
        setView() {
            this.img1.visible = !1, this.img2.visible = !1, this.boxDebris.visible = !1, this.boxGun.visible = !1;
            let e = tl.getInstance().getTurnInfo();
            for (let t = 0; t < this.cellCtrlList.length; t++) {
                this.cellCtrlList[t].reSet(t + 1, e.state);
            }
            this.labelTimes.text = "第" + e.state + "轮", e.state >= 3 && (this.labelInfo.text = "次必得稀有碎片", 
            this.boxDebris.visible = !0, this.labelLog.text = "稀有碎片"), this.labelCount.text = "再抽" + (8 - e.lib.length) + "次必得", 
            1 == e.state && (this.boxGun.visible = !0, this.img2.visible = !0), 2 == e.state && (this.boxGun.visible = !0, 
            this.img1.visible = !0);
        }
        onBtnTurn() {
            q.getTouch() && (this.isDown || (this.isTurnTable ? Oi.showNotification("正在抽奖中") : (this.isDown = !0, 
            j.setEvent(() => {
                this.turnTable(), this.isDown = !1;
            }, () => {
                this.isDown = !1;
            }, t.TURNTABLE))));
        }
        turnTable() {
            this.isTurnTable || (this.isTurnTable = !0, this.turnIndex = 0, this.awardIndex = this.getAwardIndex(), 
            Laya.timer.clearAll(this), Laya.timer.scale = 4, Laya.timer.loop(500, this, this.update));
        }
        update() {
            this.turnIndex++;
            for (let e = 0; e < this.cellCtrlList.length; e++) {
                const t = this.cellCtrlList[e];
                t.setView(t.lastType);
            }
            if (this.turnIndex >= 24 && (Laya.timer.scale = .8, this.turnIndex % 8 == this.awardIndex)) return this.isTurnTable = !1, 
            console.log("转动结束"), Laya.timer.scale = 1, this.cellCtrlList[this.turnIndex % 8].setView(Wo.EFFECT), 
            void Laya.timer.clearAll(this);
            this.turnIndex >= 8 && (Laya.timer.scale = 3), this.turnIndex >= 16 && (Laya.timer.scale = 2), 
            this.turnIndex >= 20 && (Laya.timer.scale = 1), this.cellCtrlList[this.turnIndex % 8].setView(Wo.TURN);
        }
        getAwardIndex() {
            let e, t = [];
            for (let i = 0; i < this.cellCtrlList.length; i++) {
                const a = this.cellCtrlList[i];
                a.type == Wo.NORMAL && (3 != a.data.type ? t.push(a) : e = a);
            }
            return 0 == t.length && (null == e && console.log("xcfcfBug"), t.push(e)), t[Math.floor(Math.random() * t.length)].index - 1;
        }
    }
    class Ko extends T.view.gameBox.EndGameBoxViewUI {
        constructor(e) {
            super(), this.viewType = 0, this.curBoxType = 0, this.isDown = !1, this.width = this.stage.width, 
            this.height = this.stage.height, this.viewType = e;
        }
        onAwake() {
            this.uiPlatformConfig(), this.init(), this.setEvent(), hl.platform == v.TT && hl.isReviewVersion() && (this.boxEndLabel.visible = !1), 
            hl.platform != v.WX && hl.platform != v.QQ || (this.btnOpen.x = 449, this.btnNo.visible = !0, 
            this.boxEndLabel.visible = !1), tl.getInstance().isNew && Ts.gameNum - 1 <= 3 && xt.reportNewPlayerEndBoxView(Ts.gameNum - 1);
        }
        onDestroy() {
            this.viewType = null, this.curBoxType = null;
        }
        init() {
            this.ani1.play(0, !0), this.ani2.play(0, !0), this.boxEndLabel.visible = !1, this.btnBack.visible = !1, 
            this.adCtrl(!0);
        }
        adCtrl(e = !1) {
            this.boxAd.visible = !1, this.boxNotAd.visible = !1, this.btnBack.visible = !1, 
            this.btnGetSenior.visible = !1, this.boxEndLabel.visible = !1, this.btnOpen.visible = !0, 
            this.btnNo.visible = !0, this.boxAd.visible = !0, this.imgBox.skin = "sub1/ui/gameBox/img_1.png", 
            this.btnOpen.x = 449, this.boxAd.getChildAt(1).text = "高级宝箱";
        }
        setEvent() {
            this.btnOpen.on(Laya.Event.CLICK, this, this.onBtnOpen), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnNo), 
            this.btnOpen.addComponent($);
        }
        onbBtnClose() {
            q.getTouch() && (this.isDown || (this.isDown = !0, Bt.closeFunction()));
        }
        onBtnNo() {
            if (!q.getTouch()) return;
            if (this.isDown) return;
            let e = Rs.playerLogicalBaseLayer ? Rs.playerLogicalBaseLayer.playerKillCount : 2;
            e += 1, Bt.openFunction(Er.GET_BOX_REWARD, gr.REPLACE, ur.VIEW, St.HIDE, {
                itemList: [ {
                    itemId: tl.getInstance().getBoxTragmentId().itemId,
                    count: 2,
                    isExtra: !0
                }, {
                    itemId: "1001",
                    count: hs.getSeniorBoxReward().gold
                }, {
                    itemId: "2001",
                    count: 2 * hs.getSeniorBoxReward().diamonds
                }, {
                    itemId: "3001",
                    count: 2 * e
                }, {
                    itemId: "1001",
                    count: hs.getSeniorBoxReward().gold
                } ]
            });
        }
        onBtnOpen() {
            if (!q.getTouch()) return;
            if (this.isDown) return;
            this.isDown = !0;
            var e = this;
            let i = Rs.playerLogicalBaseLayer ? Rs.playerLogicalBaseLayer.playerKillCount : 2;
            i += 1, j.setEvent(function() {
                e.isDown = !1, Bt.openFunction(Er.GET_BOX_REWARD, gr.REPLACE, ur.VIEW, St.HIDE, {
                    itemList: [ {
                        itemId: tl.getInstance().getBoxTragmentId().itemId,
                        count: 2,
                        isExtra: !0
                    }, {
                        itemId: "1001",
                        count: 3 * hs.getSeniorBoxReward().gold
                    }, {
                        itemId: "2001",
                        count: 2 * hs.getSeniorBoxReward().diamonds
                    }, {
                        itemId: "3001",
                        count: 2 * i
                    }, {
                        itemId: tl.getInstance().getBoxTragmentId().itemId,
                        count: 1
                    } ]
                });
            }, function() {
                e.isDown = !1;
            }, t.BOX_REWARD);
        }
        onBtnGetSenior() {
            q.getTouch() && this.adCtrl();
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.boxAd.getChildAt(0),
                type: 1
            } ]), hl.platform != v.TT && hl.platform != v.WEB || (this.btnNo.visible = !0, this.boxEndLabel.visible = !1);
        }
    }
    class zo extends T.view.equipTry.ShopTryViewUI {
        constructor(e) {
            super(), this.id = 1, this.scene3D = null, this._translate2 = new Laya.Vector3(5, -10, 1), 
            this._translate = new Laya.Vector3(0, 0, 0), this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), 
            this.id = e.id;
        }
        onAwake() {
            Da.loadFont(ul.FNT.FNT2, this.txtLv), this.txtName.text = A.getDataByKey(this.id).name, 
            this.txtLv.text = this.id.toString(), this.btnNo.visible = !0, this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnAd.addComponent($), this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose), 
            this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose), this.uiPlatformConfig(), 
            this.create3D(), this.tween();
        }
        onDestroy() {}
        tween() {
            if (!this.sp) return;
            const e = this.sp.transform.localPositionY;
            let t = this, i = function() {
                t.sp.transform && Laya.Tween.to(t.sp.transform, {
                    localPositionY: e + .2
                }, 2e3, null, Laya.Handler.create(t, () => {
                    t.sp.transform && Laya.Tween.to(t.sp.transform, {
                        localPositionY: e
                    }, 2e3, null, Laya.Handler.create(t, () => {
                        t.sp.transform && i();
                    }));
                }));
            };
            i();
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i), this.sp && (this.sp.destroy(), 
            this.sp = null), this.sp = Te.onLyToCreateArm(this.id, this.scene3D), this.sp.transform.position = t.transform.position.clone(), 
            this.sp.transform.localPositionZ -= 1, this.sp.transform.localPositionY += .3, this.sp.transform.localPositionX += 1, 
            this.sp.transform.localRotationEulerY = -90, this.sp.transform.localScaleX = 9, 
            this.sp.transform.localScaleY = 9, this.sp.transform.localScaleZ = 9;
        }
        onBtnAd() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                tl.getInstance().trialArm = e.id, Bt.closeFunction(), Mt.modeLoad(!0);
            }, function() {}, t.SHOP_TRY);
        }
        onBtnClose() {
            q.getTouch() && Bt.closeFunction();
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnAd.getChildAt(0),
                type: 1
            } ]);
        }
    }
    class qo extends T.view.equipTry.RoleTryViewUI {
        constructor(e) {
            super(), this.id = 1, this.modelType = 1, this.scene3D = null, this._translate2 = new Laya.Vector3(5, -10, 1), 
            this._translate = new Laya.Vector3(0, 0, 0), this.sp = null, this._pos = new Laya.Vector3(310, 500, 0), 
            void 0 === e.modelType && (e.modelType = Math.random() < .5 ? 1 : 0), void 0 === e.id && (0 == e.modelType ? e.id = this.getRandomPartId() : e.id = this.getRandomRoleId()), 
            this.id = e.id, this.modelType = e.modelType, this.width = Laya.stage.width, this.cb = e.cb;
        }
        getRandomPartId() {
            let e = [], t = tl.getInstance().getPartLib();
            for (let i = 0; i < ee.keys.length; i++) {
                let a = !1;
                for (let s in t) {
                    if (t[s] == ee.getDataByKey(i + 1).id) {
                        a = !0;
                        break;
                    }
                    if (!a) {
                        let t = ee.getDataByKey(i + 1);
                        0 == t.hd && e.push(t.id);
                    }
                }
            }
            if (e.length > 0) {
                return e[Math.floor(Math.random() * e.length)];
            }
            return 1;
        }
        getRandomRoleId() {
            let e = [], t = tl.getInstance().getRoleSkinLib();
            for (let i = 0; i < Be.keys.length; i++) {
                let a = !1;
                for (let s in t) {
                    if (t[s] == Be.getDataByKey(i + 1).id) {
                        a = !0;
                        break;
                    }
                    if (!a) {
                        let t = Be.getDataByKey(i + 1);
                        0 == t.hd && e.push(t.id);
                    }
                }
            }
            if (e.length > 0) {
                return e[Math.floor(Math.random() * e.length)];
            }
            return 1;
        }
        onAwake() {
            1 == this.modelType ? (this.txtLabel.text = '"新英雄"免费试用', this.txtContent.text = "是否试用该角色进入对局？", 
            this.txtName.text = Be.getDataByKey(this.id).cnName) : 0 == this.modelType && (this.txtLabel.text = '"新装备"免费试用', 
            this.txtContent.text = "是否试用该装备进入对局？", this.txtName.text = ee.getDataByKey(this.id).cnName), 
            this.btnNo.visible = !0, this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose), 
            this.btnAd.addComponent($), this.uiPlatformConfig(), this.create3D(), this.timer.frameLoop(1, this, this.update);
        }
        onDestroy() {}
        update() {
            this.sp && this.sp.transform.localRotationEulerY++;
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.translate(this._translate2), t.orthographic = !0, 
            t.enableHDR = !1, t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            if (t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            t.convertScreenCoordToOrthographicCoord(this._pos, this._translate), this._translate.x += 3, 
            this._translate.y -= 2, this.img3DCenter.source = new Laya.Texture(i), this.sp && (this.sp.destroy(), 
            this.sp = null), 1 == this.modelType) {
                this.sp = Te.createRoleViewSkin(this._translate, this.scene3D, !1, this.id), this.sp.transform.localRotationEulerY = 20, 
                this.sp.transform.localPositionZ -= 1, this.sp.transform.localPositionY += 1.3, 
                this.sp.transform.localScaleX = 2.7, this.sp.transform.localScaleY = 2.7, this.sp.transform.localScaleZ = 2.7;
                let e = Te.createMenuArm(tl.getInstance().getSelectSkin(), this.sp);
                e.transform.localScaleX = 1.3, e.transform.localScaleY = 1.3, e.transform.localScaleZ = 1.3;
            } else this.sp = new Laya.Sprite3D(), Te.createParts(this.id, this.sp, new Laya.Vector3(6, 6, 6)), 
            this.sp.transform.localPosition = new Laya.Vector3(5, -9, -5), this.scene3D.addChild(this.sp);
        }
        onBtnAd() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                1 == e.modelType && (tl.getInstance().trialSkin = e.id), Bt.closeFunction(), e.cb || Mt.modeLoad(!0), 
                e.cb && e.cb();
            }, function() {}, t.ROLE_TRY);
        }
        onBtnClose() {
            q.getTouch() && (Bt.closeFunction(), this.cb && this.cb());
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnAd.getChildAt(0),
                type: 1
            } ]);
        }
    }
    class Qo extends T.view.summer.SummerGunViewUI {
        constructor(e) {
            super(), this.scuess = null, this.scuess = e ? e.scuess : null;
        }
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onBtnAd() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                Bt.closeFunction(), e.scuess && e.scuess(), ls.getInstance().getEquip(Gr.SUMMER_GUN);
            }, function() {}, t.NEW_YEAR_PLAYER);
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    class Zo extends T.view.getReward.GetBoxRewardNextExtraViewUI {
        constructor(e) {
            super(), this.itemList = [], this.itemCellList = {}, this.isAni = !1, this.isDown = !1, 
            this.width = this.stage.width, this.height = this.stage.height, this.itemList[0] = e[0];
        }
        onAwake() {
            this.init(), this.btnEnter.on(Laya.Event.CLICK, this, () => {
                q.getTouch() && (Bt.closeFunction(), Bt.triggerAutoOpen());
            });
        }
        onDestroy() {
            this.timer.clearAll(this), us.unregisterByFuncId(), ao.endFunc();
        }
        init() {
            this.ani1.play(0, !1), ao.adSuccess(this.itemList, !1);
            let e = !1;
            for (let t = 0; t < this.itemList.length; t++) {
                const i = this.itemList[t];
                let a = new to();
                a.setView(i.itemId, i.count, i.isExtra), this.boxCell.addChild(a), i.isExtra && (e = !0), 
                this.itemCellList[t] = a;
            }
            this.showNormal();
        }
        showNormal() {
            this.isAni = !0;
            var e = this;
            for (const t in this.itemCellList) if (Object.prototype.hasOwnProperty.call(this.itemCellList, t)) {
                const i = this.itemCellList[t];
                if (i) {
                    let a = io[this.itemList.length][3 * Number(t)], s = io[this.itemList.length][3 * Number(t) + 1], n = io[this.itemList.length][3 * Number(t) + 2];
                    i.pos(a, s), i.scale(n, n), Laya.timer.once(100 * Number(t), this, function() {
                        i.show(), Number(t) == e.itemList.length - 1 && (e.isAni = !1);
                    });
                }
            }
        }
    }
    class jo extends T.view.ani.AccountUpgradeViewUI {
        constructor(e = 100) {
            super(), this.reward = 0, this.isDown = !1, this.width = this.stage.width, this.height = this.stage.height, 
            this.reward = e;
        }
        onAwake() {
            this.init(), this.setEvent();
        }
        onDestroy() {
            this.timer.clearAll(this);
        }
        init() {
            Da.loadFont(ul.FNT.FNT4, this.txtLv), this.txtLv.text = tl.getInstance().getRoleExpData().lv.toString(), 
            this.txtCurLv.text = "等级：" + tl.getInstance().getRoleExpData().lv.toString(), Ts.isLevelUp = !1;
        }
        setEvent() {
            var e = this;
            Laya.timer.once(1e3, this, function() {
                e.on(Laya.Event.CLICK, e, e.onBtnBack);
            });
        }
        onBtnBack() {
            q.getTouch() && (this.isDown || (this.isDown = !0, Bt.closeFunction()));
        }
    }
    class Jo extends T.view.equipTry.SkillModeEquipTryViewUI {
        constructor() {
            super(), this.tryList = [], this.width = Laya.stage.width, this.height = Laya.stage.height;
            let e = Math.floor(20 * Math.random()), t = Math.floor(A.keys.length / 2 + e + 1) % 20;
            this.tryList.push(A.getDataByIndex(e)), this.tryList.push(A.getDataByIndex(t)), 
            this.tryList.push(Se.getDataByIndex(Math.floor(Math.random() * Se.keys.length))), 
            this.setView(), hl.platform == v.TT && (this.imgAd.visible = !1, this.imgAdTT.visible = !0);
        }
        setView() {
            for (let e = 0; e < this.tryList.length; e++) {
                const t = this.tryList[e];
                this["imgIcon" + (e + 1).toString()].visible = !0, this["imgIcon" + (e + 1).toString()].skin = t.icon, 
                this["labelName" + (e + 1).toString()].text = t.name, this["btn" + (e + 1).toString()].on(Laya.Event.CLICK, this, this.onBtnDown, [ e + 1 ]);
            }
            this.create3D();
        }
        onBtnDown(e) {
            q.getTouch() && (this.ani2.isPlaying || (console.log("index" + e), 3 == e ? j.setEvent(() => {
                this.setUseArm(e - 1), Bt.openFunction(Er.LOADING_FIGHT, gr.REPLACE, ur.VIEW, St.HIDE);
            }, function() {}, t.SKILL_MODE_START_AD) : (this.setUseArm(e - 1), Bt.openFunction(Er.LOADING_FIGHT, gr.REPLACE, ur.VIEW, St.HIDE))));
        }
        onDestroy() {
            this.scene3D && this.scene3D.removeSelf() && this.scene3D.destroy(!0);
        }
        setUseArm(e) {
            if (Nt.getCurScene().skillModeArmData = this.tryList[e], this.effect) {
                this.effect.getChildAt(0).particleSystem.startSizeConstant = 1, Ri.recycleEffect(this.effect);
            }
        }
        create3D() {
            var e = this.box3d.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            this.scene3D = e, t.transform.localPositionX = 0, t.transform.localPositionY = 0, 
            t.transform.localPositionZ = 3, t.orthographic = !0, t.enableHDR = !1, t.orthographicVerticalSize = 1.5, 
            t.clearFlag = Laya.CameraClearFlags.DepthOnly, this.effect = Ri.playOtherArm({
                parent: e
            }), this.effect.transform.localPositionX = .68, this.effect.transform.localPositionY = 0, 
            this.effect.transform.localPositionZ = 0, this.effect.getChildAt(0).particleSystem.startSizeConstant = .6;
        }
        showModel() {
            for (let e = 0; e < this.tryList.length; e++) {
                const t = this.tryList[e];
                let i = Te.onLyToCreateArm(t.id, this.scene3D, t instanceof Se);
                i.transform.localPositionX = .68 * e - .68, i.transform.localPositionY = -.1, t instanceof Se && (i.transform.localPositionY = -.2, 
                i.transform.localPositionX += .05), i.transform.localPositionZ = 0, i.transform.localRotationEulerY = -90, 
                i.transform.localRotationEulerX = -45;
            }
        }
    }
    class $o extends T.view.gameAir.GameArmFullUI {
        constructor(e) {
            super(), this.cb = null, this.fail = null, this.cb = e.success, this.fail = e.fail, 
            this.width = this.stage.width, this.height = this.stage.height, hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock(), 
            Rs.gameStop = !0;
        }
        onAwake() {
            this.init(), this.setBtnEvent();
        }
        onDestroy() {
            if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                Bt.getFunctionViewCtrl(Er.GAME).onBtnDown(!0);
            }
            this.timer.clearAll(this);
        }
        init() {
            this.uiPlatformConfig();
        }
        setBtnEvent() {
            this.btnAd.on(Laya.Event.CLICK, this, this.onBtnGet), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnClose), 
            this.btnAd.addComponent($);
        }
        onBtnClose() {
            q.getTouch() && (Rs.gameStop = !1, this.fail && this.fail(), Bt.closeFunction());
        }
        onBtnGet() {
            if (!q.getTouch()) return;
            let e = this;
            this.timer.pause(), j.setEvent(function() {
                e.timer.resume(), Rs.gameStop = !1, e.cb && e.cb(), Bt.closeFunction();
            }, function() {
                e.timer.resume();
            }, t.GAMEAIR);
        }
        uiPlatformConfig() {
            Bt.replaceAdIcon([ {
                img: this.btnAd.getChildAt(0),
                type: 1
            } ]);
        }
    }
    let er = 4e3;
    class tr extends T.view.award.InfiniteAwardViewUI {
        constructor() {
            super(), this.endTime = er, this.isClose = !1, this.width = this.stage.width, this.height = this.stage.height, 
            this.barWidth = this.imgBar.width, hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock(), 
            Rs.gameStop = !0, Laya.timer.frameLoop(1, this, () => {
                this.isClose || this.endTime > 0 && (this.endTime -= Laya.timer.delta, this.imgBar.width = this.barWidth * (this.endTime / er), 
                this.labelGetTime.text = "领取倒计时：" + Math.floor(this.endTime / 1e3) + "s", this.endTime <= 0 && (this.isClose = !0, 
                this.imgBar.width = 0, Rs.gameStop = !1, this.myClose()));
            });
        }
        onAwake() {
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnGet1.on(Laya.Event.CLICK, this, this.onBtnAd1), 
            this.btnGet2.on(Laya.Event.CLICK, this, this.onBtnAd2), this.btnGet1.addComponent($), 
            this.btnGet2.addComponent($);
        }
        onDestroy() {
            if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) {
                Bt.getFunctionViewCtrl(Er.GAME).onBtnDown(!0);
            }
        }
        onBtnBack() {
            q.getTouch() && (this.isClose = !0, Rs.gameStop = !1, this.myClose());
        }
        onBtnAd1() {
            q.getTouch() && (this.isClose || (Laya.timer.pause(), j.setEvent(() => {
                Laya.timer.resume(), Rs.gameStop = !1, Rs.playerLogicalBaseLayer.getSuperArm(49), 
                this.myClose();
            }, () => {
                Laya.timer.resume();
            }, t.START_BUFF_1)));
        }
        onBtnAd2() {
            q.getTouch() && (this.isClose || (Laya.timer.pause(), j.setEvent(() => {
                Laya.timer.resume(), Rs.gameStop = !1, Rs.playerLogicalBaseLayer.isInfiniteBomb = !0, 
                this.myClose();
            }, () => {
                Laya.timer.resume();
            }, t.START_BUFF_2)));
        }
        myClose() {
            let e = Bt.getFunctionViewCtrl(Er.GAME);
            e && Mt.mode != Tt.BIOCHEMISTRY && e.modeFunc(), Bt.closeFunction();
        }
    }
    let ir = {
        1: "排位赛（5V5）",
        2: "生化模式",
        3: "娱乐模式（狙击战）",
        4: "娱乐模式（2V2）",
        5: "娱乐模式（刀战）",
        6: "娱乐模式（1V1）",
        7: "大招模式"
    }, ar = {
        3: "sub1/ui/end/3.png",
        4: "sub1/ui/end/4.png",
        5: "sub1/ui/end/4.png",
        6: "sub1/ui/end/4.png"
    };
    class sr extends T.view.standing.StandingHistoryCellUI {
        setView() {
            if (this.imgMvpLose.visible = !1, this.imgMvpWin.visible = !1, this.boxDan.visible = !1, 
            this.txtOtherType.visible = !1, this.imgDoubleHit.visible = !1, this.txtWin.visible = !1, 
            this.txtLose.visible = !1, this.dataSource.isMvp && (1 == this.dataSource.result ? this.imgMvpWin.visible = !0 : this.imgMvpLose.visible = !0), 
            this.txtTitle.text = ir[this.dataSource.type], this.txtTime.text = q.dateFormat("YYYY-mm-dd HH:MM:SS", new Date(1e3 * this.dataSource.time)), 
            1 == this.dataSource.result ? this.txtWin.visible = !0 : this.txtLose.visible = !0, 
            this.txtKillCount.text = this.dataSource.kill.toString(), 1 == this.dataSource.type) {
                let e = J.getDataByKey(this.dataSource.dan.id);
                this.boxDan.visible = !0, this.imgDan.skin = ul.IMG_DAN_ROOT + e.icon, this.txtDanName.text = e.name, 
                1 == this.dataSource.result ? this.txtScore.text = "(+150)" : this.txtScore.text = "(-150)";
            } else this.txtOtherType.visible = !0;
            this.dataSource.doubleHit >= 3 && (this.imgDoubleHit.visible = !0, this.imgDoubleHit.skin = ar[this.dataSource.doubleHit]);
        }
    }
    class nr extends T.view.standing.StandingHistoryViewUI {
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.list.renderHandler = new Laya.Handler(this, this.updateSkinItem), 
            this.list.vScrollBarSkin = "", this.list.itemRender = sr, this.list.dataSource = tl.getInstance().getStandingData().list, 
            ol.isFullScreen() || (this.boxRight.x -= 50);
        }
        updateSkinItem(e, t) {
            e.setView();
        }
    }
    class or extends T.view.standing.StandingInfoViewUI {
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.setView(), 
            this.create3D();
        }
        setView() {
            let e = tl.getInstance().getPlatfromUserInfo();
            if (e && (this.txtName.text = e.nickName, this.imgAvatar.skin = e.avatarUrl), hl.platform == v.TT) if (this.txtName.on(Laya.Event.CLICK, this, this.onBtnOpenId), 
            tl.getInstance().getPlatfromUserInfo()) {
                let e = tl.getInstance().getPlatfromUserInfo();
                if (e) {
                    this.txtName.text = e.nickName;
                    const t = new Image();
                    t.src = e.avatarUrl, t.onload = (() => {
                        const e = t.width / this.imgAvatar.width, i = new Laya.Texture2D(t.width / e, t.height / e, Laya.TextureFormat.R8G8B8A8);
                        this.imgAvatar.graphics.drawImage(new Laya.Texture(i), 0, (this.imgAvatar.height - t.height / e) / 2), 
                        i.loadImageSource(t);
                    });
                }
            } else ol.getUserInfo(() => {
                let e = tl.getInstance().getPlatfromUserInfo();
                if (e) {
                    this.txtName.text = e.nickName;
                    const t = new Image();
                    t.src = e.avatarUrl, t.onload = (() => {
                        const e = t.width / this.imgAvatar.width, i = new Laya.Texture2D(t.width / e, t.height / e, Laya.TextureFormat.R8G8B8A8);
                        this.imgAvatar.graphics.drawImage(new Laya.Texture(i), 0, (this.imgAvatar.height - t.height / e) / 2), 
                        i.loadImageSource(t);
                    });
                }
            });
            let t = tl.getInstance().getRoleExpData();
            this.txtLv.text = "lv." + t.lv.toString(), this.imgLvProgress.width *= t.curExp / t.exp;
            let i = tl.getInstance().getStandingData();
            this.txtLikeNum.text = i.like.toString(), this.txtAllGame.text = i.game.toString(), 
            this.txtWin.text = i.win.toString(), i.game > 0 ? this.txtWinPercent.text = Math.floor(i.win / i.game * 100).toString() + "%" : this.txtWinPercent.text = "0%", 
            this.txtMvp.text = i.mvp.toString();
            let a = tl.getInstance().getDanInfo(), s = J.getDataByKey(a.id);
            this.imgDan.skin = ul.IMG_DAN_ROOT + s.icon, this.txtDanName.text = s.name;
            let n = 150 * (s.star + 1), o = 150 * a.star;
            this.txtScore.text = o + "/" + n, this.imgScoreProgress.width *= o / n, ol.isFullScreen() || (this.boxRight.x -= 100);
        }
        create3D() {
            var e = this.addChild(new Laya.Scene3D()), t = e.addChild(new Laya.Camera(0, .1, 1e3));
            t.transform.translate(new Laya.Vector3(0, 0, 2)), t.orthographic = !0, t.enableHDR = !1, 
            t.clearColor = new Laya.Vector4(0, 0, 0, 0);
            var i = new Laya.RenderTexture(1024, 1024, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTH_16);
            t.renderTarget = i, t.orthographicVerticalSize = 10, e.addChild(new Laya.DirectionLight()), 
            this.img3DCenter.source = new Laya.Texture(i);
            let a = tl.getInstance().getSelectRoleSkin(), s = Te.createRoleViewSkin(new Laya.Vector3(), e, !1, a);
            s.transform.localPositionY = -10, s.transform.localScaleX = 7, s.transform.localScaleY = 7, 
            s.transform.localScaleZ = 7;
            let n = Te.createMenuArm(tl.getInstance().getSelectSkin(), s);
            n.transform.localScaleX = 1.2, n.transform.localScaleY = 1.2, n.transform.localScaleZ = 1.2, 
            Te.createPartsByLocal(s, new Laya.Vector3(1, 1, 1));
        }
        onBtnOpenId() {
            hl.platform != v.TT && hl.platform != v.WEB || tl.getInstance().getPlatformUserId(e => {
                ol.copyString(e, () => {
                    Oi.showNotification("复制用户id成功");
                }, () => {});
            });
        }
    }
    class rr extends T.view.standing.StandingMainViewUI {
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.standingInfoView = new or(), 
            this.boxContainer.addChild(this.standingInfoView), this.standingHistoryView = new nr(), 
            this.boxContainer.addChild(this.standingHistoryView), this.standingHistoryView.visible = !1, 
            this.btnHistory.on(Laya.Event.CLICK, this, this.onBtnHistory), this.btnInfo.on(Laya.Event.CLICK, this, this.onBtnInfo), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), tl.getInstance().hideStandingDot(), 
            ol.isFullScreen() || (this.boxLeft.x = -36);
        }
        onBtnInfo() {
            if (!q.getTouch()) return;
            this.btnInfo.getChildByName("imgSelect").visible = !0, this.btnHistory.getChildByName("imgSelect").visible = !1, 
            this.standingHistoryView.visible = !1, this.standingInfoView.visible = !0;
        }
        onBtnHistory() {
            if (!q.getTouch()) return;
            this.btnInfo.getChildByName("imgSelect").visible = !1, this.btnHistory.getChildByName("imgSelect").visible = !0, 
            this.standingHistoryView.visible = !0, this.standingInfoView.visible = !1;
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    class lr extends T.view.dragonBoat.DragonBoatBombViewUI {
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.btnAd.on(Laya.Event.CLICK, this, this.onBtnAd), 
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onBtnAd() {
            q.getTouch() && j.setEvent(function() {
                tl.getInstance().setDragonBoatBombState(), Bt.closeFunction(), Bt.openFunction(Er.GET_DRAGON_BOAT_BOMB, gr.COVER, ur.VIEW, St.HIDE);
            }, function() {}, t.DRAGON_BOAT_BOMB);
        }
        onBtnClose() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    class hr extends T.view.getReward.GetDragonBoatBombViewUI {
        constructor() {
            super(), this.reward = 0, this.isDown = !1, this.cb = null, this.width = this.stage.width, 
            this.height = this.stage.height, this.boxBg.scaleX = this.stage.width / this.boxBg.width;
        }
        onAwake() {
            this.init(), this.setEvent();
        }
        onDestroy() {
            this.cb && this.cb(), this.timer.clearAll(this), this.ani1 = null, this.txtReward = null, 
            this.imgGold = null, this.cb = null;
        }
        init() {
            this.ani1.play(0, !1);
        }
        setEvent() {
            var e = this;
            Laya.timer.once(500, this, function() {
                e.on(Laya.Event.CLICK, e, e.onBtnBack);
            });
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    var cr, dr, gr, ur;
    !function(e) {
        e[e.NO = 0] = "NO", e[e.GET = 1] = "GET", e[e.GOT = 2] = "GOT";
    }(cr || (cr = {}));
    class mr extends T.view.mentor.MentorAvatarCellUI {
        constructor(e, t, i, a, s, n) {
            super(), this.reset(e, t, i, a, s), this.idx = n;
        }
        onAwake() {
            this.boxInvite.on(Laya.Event.CLICK, this, this.onBtnInvite);
        }
        reset(e, t, i, a, s) {
            if (this.avatarUrl = e, "" == e) {
                let e = Be.getDataByIndex(0);
                this.avatarUrl = e.icon, t = "用户未授权";
            }
            this.nick = t, this.itemId = i, this.count = a, this.rewardState = s, this.setView();
        }
        onDestroy() {
            At.autoUnlinkUIReference(this), this.sprItem = null;
        }
        setView() {
            if (this.sprItem && this.sprItem.destroy(), this.boxGot.visible = !1, this.boxInvite.visible = !1, 
            this.sprLine1.visible = !1, this.sprLine2.visible = !1, this.txtGot.visible = !1, 
            this.avatarUrl ? (this.boxGot.visible = !0, this.imgAvatar.skin = this.avatarUrl, 
            this.txtNick.text = this.nick) : this.boxInvite.visible = !0, this.itemId) {
                let t = new to();
                if (t.labelName.scale(1.6, 1.6), t.setView(this.itemId, this.count), t.visible = !0, 
                this.addChild(t), t.anchorX = .5, t.scale(.4, .4), t.x = .5 * this.width, t.bottom = 0, 
                this.rewardState == cr.GOT) {
                    var e = new Laya.ColorFilter([ .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0 ]);
                    t.filters = [ e ], this.sprLine1.visible = !0, this.txtGot.visible = !0, this.txtGot.zOrder = 100;
                } else this.rewardState == cr.NO ? this.sprLine2.visible = !0 : this.rewardState == cr.GET && (this.sprLine1.visible = !0);
                this.sprItem = t;
            }
        }
        onBtnInvite() {
            q.getTouch() && Es.requestCreateInivteData(function() {
                tl.getInstance().getPlatformUserId(function(e) {
                    j.shareMessage(`opt=1&openId=${e}&id=${tl.getInstance().getInviteId()}`);
                });
            });
        }
    }
    class pr extends T.view.mentor.MentorViewUI {
        constructor() {
            super(), this.width = this.stage.width, this.height = this.stage.height;
        }
        onAwake() {
            this.setView(), this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), this.btnShare.on(Laya.Event.CLICK, this, this.onBtnShare), 
            this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), this.btnHistory.on(Laya.Event.CLICK, this, this.onBtnHistory), 
            Laya.timer.loop(1e4, this, this.timerUpdateNetwrok);
        }
        onDestroy() {
            Laya.timer.clearAll(this), this.scene3d && Laya.timer.clearAll(this.scene3d), this.scene3d = null, 
            this.inviteLocalData = null;
        }
        setView() {
            this.txtStrong.text = (10 * tl.getInstance().getAllDanStar()).toString();
            let e = tl.getInstance().getInviteId(), t = Cs.getDataByKey(e);
            this.inviteLocalData = t, this.txtPeopleNum.text = t.num.toString();
            let i = Is.getDataByKey(t.award[0].itemId);
            this.itemData = i, this.count = t.award[0].num, this.btnShare.visible = !0, this.btnGet.visible = !1, 
            this.imgDiamond.visible = !1, this.scene3d && Laya.timer.clearAll(this.scene3d), 
            this.scene3d && this.scene3d.destroy(), this.scene3d = null, this.sprLine.graphics.clear(), 
            this.boxContainer.destroyChildren(), i.type == Ur.DIAMOND ? (this.txtRewardName.text = "钻石x" + this.inviteLocalData.award[0].num, 
            this.imgDiamond.visible = !0) : i.type == Ur.EQUIP ? (this.txtRewardName.text = i.name, 
            this.setWeapon()) : i.type == Ur.HERO ? (this.txtRewardName.text = i.name, this.setHero()) : i.type == Ur.PART ? (this.txtRewardName.text = i.name, 
            this.setPart()) : i.type == Ur.PART_DEBRIS && (this.txtRewardName.text = i.name + "x" + this.inviteLocalData.award[0].num, 
            this.setPart()), this.setLocalInvite();
            let a = this;
            Es.requestAllInviteData(function() {
                a.setNetworkInvite();
            }), this.txtTitle.text = "无";
            for (let e = 0; e < Cs.keys.length; e++) {
                let t = Cs.getDataByKey(Cs.keys[e]);
                this.inviteLocalData.id > t.id && t.title.length > 0 && (this.txtTitle.text = t.title);
            }
        }
        createScene3d() {
            let e = this.box3d;
            e.destroyChildren();
            let t = e.addChild(new Laya.Scene3D());
            this.scene3d = t, t.ambientMode = Laya.AmbientMode.SolidColor, t.ambientColor = new Laya.Vector3(.6132076, .6074226, .6074226);
            var i = t.addChild(new Laya.DirectionLight());
            i.color = new Laya.Vector3(1, 1, 1), i.intensity = .5;
            var a = i.transform.worldMatrix;
            a.setForward(new Laya.Vector3(0, 0, -1)), i.transform.worldMatrix = a;
            let s = t.addChild(new Laya.Camera(0, .1, 100));
            s.transform.translate(new Laya.Vector3(0, 0, 2.4)), s.clearFlag = Laya.CameraClearFlags.DepthOnly, 
            s.enableHDR = !1, s.fieldOfView = 30;
            let n = 1;
            hl.platform != v.QQ && hl.platform != v.VIVO && hl.platform != v.OPPO || (n = Laya.RenderContext3D.clientHeight / 750);
            let o = e.width * n, r = e.height * n, l = new Laya.Point();
            e.localToGlobal(l), l.x = l.x * n, l.y = l.y * n, s.viewport = new Laya.Viewport(l.x, l.y, o, r), 
            e.localToGlobal(l), console.log("createScene3d", l);
        }
        setWeapon() {
            this.createScene3d();
            let e = new Laya.Sprite3D("node", !1);
            e.transform.localPosition = new Laya.Vector3(0, 0, -1);
            let t = Te.onLyToCreateArm(this.itemData.extra(), e);
            e.transform.localPositionY = .5, t.transform.localRotationEulerY = -90, t.transform.localRotationEulerX = -35, 
            t.transform.localScaleX = 1.8, t.transform.localScaleY = 1.8, t.transform.localScaleZ = 1.8;
            let i = t.meshRenderer.bounds;
            t.transform.localPosition = new Laya.Vector3(0, .5 * (i.getMin().y - i.getMax().y), 0), 
            this.scene3d.addChild(e), e.addChild(t), Laya.timer.loop(20, this.scene3d, function() {
                e.transform.localRotationEulerY += 1;
            });
        }
        setHero() {
            this.createScene3d();
            let e = new Laya.Sprite3D("node", !1);
            e.transform.localPosition = new Laya.Vector3(0, -.5, 0), this.scene3d.addChild(e);
            let t = Te.createRoleViewSkin(new Laya.Vector3(), e, !1, this.itemData.extra());
            e.addChild(t), e.transform.localScaleX = .3, e.transform.localScaleY = .3, e.transform.localScaleY = .3, 
            this.timerOnce(50, this, () => {
                let e = Te.createMenuArm(tl.getInstance().getSelectSkin(), t);
                e.transform.localScaleX = 1.3, e.transform.localScaleY = 1.3, e.transform.localScaleZ = 1.3;
            });
        }
        setPart() {
            this.createScene3d();
            let e = new Laya.Sprite3D("node", !1);
            e.transform.localPosition = new Laya.Vector3(0, 0, -3), this.scene3d.addChild(e);
            Te.createParts(this.itemData.extra(), e, new Laya.Vector3(1, 1, 1));
            e.transform.localScaleX = 1, e.transform.localScaleY = 1, e.transform.localScaleZ = 1, 
            1 == ee.getDataByKey(this.itemData.extra()).partType && (e.transform.localScaleX = 3, 
            e.transform.localScaleY = 3, e.transform.localScaleZ = 3, Laya.timer.loop(20, this.scene3d, function() {
                e.transform.localRotationEulerY += 1;
            }));
        }
        setLocalInvite() {
            let e = .5 * this.boxRight.width, t = this.inviteLocalData.num;
            for (let e = 0; e < t; e++) {
                let t = new mr(null, null, null, null, 1, e);
                this.boxContainer.addChild(t);
            }
            Laya.timer.once(1, this, function() {
                for (let t = 0; t < this.boxContainer.numChildren; t++) {
                    let i = this.boxContainer.getChildAt(t), a = i.localToGlobal(new Laya.Point(.5 * i.width, 0), !1, this.boxRight), s = [];
                    s[0] = a.x, s[1] = a.y, s[2] = a.x, s[3] = 270, s[4] = e, s[5] = 270, s[6] = e, 
                    s[7] = 200, this.sprLine.graphics.drawLines(0, 0, s, "#5C7E9B", 5);
                }
            });
        }
        setNetworkInvite() {
            Laya.timer.once(2, this, function() {
                let e = .5 * this.boxRight.width;
                if (Es.curInviteData) {
                    for (let t in Es.curInviteData.list) {
                        let i = Es.curInviteData.list[t], a = this.boxContainer.getChildAt(parseInt(t));
                        if (!a) continue;
                        a.reset(i.a, i.n, null, null, 1);
                        let s = a.localToGlobal(new Laya.Point(.5 * a.width, 0), !1, this.boxRight), n = [];
                        n[0] = s.x, n[1] = s.y, n[2] = s.x, n[3] = 270, n[4] = e, n[5] = 270, n[6] = e, 
                        n[7] = 200, this.sprLine.graphics.drawLines(0, 0, n, "#ffffff", 5), this.sprLine2.visible = !1;
                    }
                    5 == Es.curInviteData.id && Es.curInviteData.state > cr.NO && (this.txtTitle.text = this.inviteLocalData.title), 
                    Es.curInviteData.state == cr.GET ? (this.btnGet.visible = !0, this.btnShare.visible = !1) : Es.curInviteData.state == cr.GOT && (this.btnShare.visible = !1, 
                    this.btnGet.visible = !1);
                }
                hl.platform == v.WEB && (this.btnGet.visible = !0);
            });
        }
        onBtnShare() {
            q.getTouch() && Es.requestCreateInivteData(function() {
                tl.getInstance().getPlatformUserId(function(e) {
                    j.shareMessage(`opt=1&openId=${e}&id=${tl.getInstance().getInviteId()}`);
                });
            });
        }
        onBtnGet() {
            if (!q.getTouch()) return;
            let e = this;
            Es.requestGetReward(this.inviteLocalData.id, function() {
                let t = Is.getDataByKey(e.itemData.id);
                t.type == Ur.DIAMOND ? Bt.openFunction(Er.GET_DIAMONDS_REWARD, gr.COVER, ur.VIEW, St.DIAMOND, {
                    reward: e.count
                }) : t.type == Ur.HERO ? (tl.getInstance().setRoleSkinLib(e.itemData.extra()), Bt.openFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                    id: e.itemData.id,
                    cb: null
                })) : t.type == Ur.PART ? (tl.getInstance().setPartsSkin(e.itemData.extra()), Bt.openFunction(Er.GET_EQUIP_REWARD, gr.COVER, ur.VIEW, St.HIDE, {
                    id: e.itemData.id,
                    cb: null
                })) : t.type == Ur.EQUIP ? ls.getInstance().getEquip(e.itemData.extra()) : t.type == Ur.PART_DEBRIS && ao.getAward([ {
                    itemId: t.id,
                    count: e.count
                } ], gr.COVER, !0);
                let i = e.inviteLocalData.id + 1;
                Cs.getDataByKey(i) ? (tl.getInstance().setInviteId(i), Es.requestCreateInivteData(function() {
                    e.setView();
                })) : e.setView();
            });
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
        onBtnHistory() {
            q.getTouch() && Bt.openFunction(Er.MENTOR_HISTROY, gr.COVER, ur.VIEW, St.HIDE);
        }
        timerUpdateNetwrok() {
            let e = this;
            e.setNetworkInvite(), Es.requestAllInviteData(function() {
                e.setNetworkInvite();
            });
        }
    }
    class yr extends T.view.mentor.MentorHistoryViewUI {
        constructor() {
            super(), this.cellLists = [], this.cellMapById = {}, this.width = this.stage.width, 
            this.height = this.stage.height;
        }
        onAwake() {
            this.panel.hScrollBarSkin = "", this.setView(), this.initCell(), this.setAvatarCell(), 
            Laya.timer.loop(5e3, this, this.setAvatarCell), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onDestroy() {
            Laya.timer.clearAll(this), this.cellLists = null, this.cellMapById = null;
        }
        setView() {
            this.txtStrong.text = (10 * tl.getInstance().getAllDanStar()).toString();
        }
        initCell() {
            let e = 0, t = 158;
            ol.isFullScreen() && (t = 200);
            for (let i = 0; i < Cs.keys.length; i++) {
                let a = Cs.getDataByKey(Cs.keys[i]);
                this.cellMapById[a.id] = [];
                for (let i = 0; i < a.num; i++) {
                    let s = null;
                    i == a.num - 1 && (s = a.award[0].itemId);
                    let n = new mr(null, null, s, a.award[0].num, cr.NO, e);
                    n.anchorX = .5, n.x = 100 + t * e, n.y = 60, this.panel.addChild(n), this.cellLists.push(n), 
                    this.cellMapById[a.id].push(n), e++;
                }
            }
            Laya.timer.once(1, this, function() {
                let e = .5 * this.panel.width;
                for (let t = 0; t < this.cellLists.length; t++) {
                    let i = this.cellLists[t], a = [];
                    a[0] = i.x, a[1] = i.y, a[2] = i.x, a[3] = i.y - 40, a[4] = e, a[5] = i.y - 40, 
                    this.sprLineNode.graphics.drawLines(0, 0, a, "#5C7E9B", 5);
                }
            });
        }
        setAvatarCell() {
            this.txtTitle.text = "无";
            for (let e = 0; e < Cs.keys.length; e++) {
                let t = Cs.getDataByKey(Cs.keys[e]);
                tl.getInstance().getInviteId() > t.id && t.title.length > 0 && (this.txtTitle.text = t.title);
            }
            let e = 0;
            for (let t in Es.allInviteData) {
                e += Es.allInviteData[t].list.length;
            }
            this.txtPeople.text = `(${e}人)`, this.sprLine1.visible = !1, this.sprLine2.visible = !0, 
            Laya.timer.once(2, this, function() {
                for (let e in Es.allInviteData) {
                    let t = Es.allInviteData[e], i = Cs.getDataByKey(t.id);
                    for (let e = 0; e < i.num; e++) {
                        let a = this.cellMapById[t.id][e];
                        if (t.list[e]) {
                            e == i.num - 1 ? a.reset(t.list[e].a, t.list[e].n, i.award[0].itemId, i.award[0].num, t.state) : a.reset(t.list[e].a, t.list[e].n, i.award[0].itemId, i.award[0].num);
                            let s = .5 * this.panel.width - 20, n = [];
                            n[0] = a.x, n[1] = a.y, n[2] = a.x, n[3] = a.y - 40, n[4] = s, n[5] = a.y - 40, 
                            this.sprLineNode.graphics.drawLines(0, 0, n, "#ffffff", 5), this.sprLine1.visible = !0, 
                            this.sprLine2.visible = !1;
                        }
                    }
                }
            });
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
    }
    class Ir extends T.view.summer.SummerGiftViewUI {
        onAwake() {
            this.width = this.stage.width, this.height = this.stage.height, this.btnAd1.on(Laya.Event.CLICK, this, this.onBtnAd1), 
            this.btnAd2.on(Laya.Event.CLICK, this, this.onBtnAd2), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.setView();
            let e = new Date();
            e.setHours(0), e.setMinutes(0), e.setSeconds(0), e.setMilliseconds(0);
            let t = new Date(1e3 * tl.getInstance().getRoleInfo().createTime);
            t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0);
            let i = .001 * e.getTime() + 86400;
            t.getTime() == e.getTime() && (i = tl.getInstance().getRoleInfo().createTime + 86400), 
            this.txtTime.text = _t.parseTimeHMS(i - tl.getInstance().getTime()), Laya.timer.loop(1e3, this, function() {
                this.txtTime.text = _t.parseTimeHMS(i - tl.getInstance().getTime()), this.setView();
            });
        }
        onBtnAd1() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                tl.getInstance().setSummerInfo(Gr.SUMMER_GIFT_GUN_ITEM_ID), e.setView();
                let t = Is.getDataByKey(Gr.SUMMER_GIFT_GUN_ITEM_ID);
                ls.getInstance().getEquip(t.extra());
            }, function() {}, t.SUMMER_GIFT);
        }
        onBtnAd2() {
            if (!q.getTouch()) return;
            let e = this;
            j.setEvent(function() {
                e.setView();
                let t = Is.getDataByKey(Gr.SUMMER_GIFT_SKIN_FRAGMENT_ITEM_ID);
                ao.getAward([ {
                    itemId: t.id,
                    count: 3
                } ], gr.COVER, !0);
            }, function() {}, t.SUMMER_GIFT);
        }
        onBtnBack() {
            q.getTouch() && Bt.closeFunction();
        }
        setView() {
            this.btnGot1.visible = !1, this.btnGot2.visible = !1, 1 == tl.getInstance().getSummerInfo()[Gr.SUMMER_GIFT_GUN_ITEM_ID] && (this.box1.disabled = !0, 
            this.boxBlin1.visible = !1, this.btnGot1.visible = !0);
            let e = Is.getDataByKey(Gr.SUMMER_GIFT_SKIN_FRAGMENT_ITEM_ID);
            tl.getInstance().checkIsHasRoleSkin(e.extra()) && (this.box2.disabled = !0, this.boxBlin2.visible = !1, 
            this.btnGot2.visible = !0);
            let t = tl.getInstance().getTargetFragment({
                type: Ur.HERO_DEBRIS,
                id: Gr.SUMMER_GIFT_SKIN_FRAGMENT_ITEM_ID
            }), i = Be.getDataByKey(e.extra());
            this.txtFragmentNum.text = (i.cost - t).toString();
        }
    }
    class fr extends T.view.game.GameDiJIaViewUI {
        constructor(e) {
            super(), this.enter = e.enter, this.no = e.no, this.width = Laya.stage.width, this.height = Laya.stage.height, 
            hl.platform == v.WEB_4399 && Laya.Browser.onPC && Laya.Browser.document.exitPointerLock(), 
            Rs.gameStop = !0;
        }
        onAwake() {
            this.btnEnter.on(Laya.Event.CLICK, this, this.onBtnEnter), this.btnNo.on(Laya.Event.CLICK, this, this.onBtnNo), 
            this.btnEnter.on(Laya.Event.MOUSE_DOWN, this, () => {
                this.btnEnter.skin = "sub1/ui/scale9/img_game_9.png";
            }), this.btnEnter.on(Laya.Event.MOUSE_OUT, this, () => {
                this.btnEnter.skin = "sub1/ui/scale9/img_game_8.png";
            }), this.btnNo.on(Laya.Event.MOUSE_DOWN, this, () => {
                this.btnNo.skin = "sub1/ui/scale9/img_game_9.png";
            }), this.btnNo.on(Laya.Event.MOUSE_OUT, this, () => {
                this.btnNo.skin = "sub1/ui/scale9/img_game_8.png";
            });
        }
        onBtnEnter() {
            this.myClose(!0);
        }
        onBtnNo() {
            this.myClose(!1);
        }
        myClose(e) {
            this.aniStart.wrapMode = Laya.Animation.WRAP_REVERSE, this.aniStart.play(0, !1), 
            this.aniStart.on(Laya.Event.COMPLETE, this, () => {
                e ? this.enter && this.enter() : this.no && this.no(), Rs.gameStop = !1, Bt.closeFunction();
            });
        }
    }
    class Lr extends T.view.common.AnnouncementViewUI {
        constructor() {
            super();
        }
        onAwake() {
            let e = [ "1、修复了部分地图bug", "2、大招模式新增两把超级武器", "3、更多游戏资讯请关注官方抖音号：疯狂打游戏" ], t = hl.getNotify();
            this.labelTap.text = t.strTap, e = t.list;
            for (let t = 0; t < e.length; t++) {
                const i = e[t];
                let a = new Laya.Label(i);
                a.fontSize = 34, a.color = "#ffffff", a.wordWrap = !0, a.width = 792, this.boxLabelLog.addChild(a);
            }
            this.plane.vScrollBarSkin = "", this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnOK.on(Laya.Event.CLICK, this, this.onBtnBack);
        }
        onBtnBack() {
            tl.getInstance().setNotifyVer(hl.getConfig().ver), Bt.closeFunction();
        }
    }
    !function(e) {
        e[e.NORMAL = 1] = "NORMAL", e[e.HAVE = 2] = "HAVE", e[e.GET = 3] = "GET";
    }(dr || (dr = {}));
    class wr extends T.view.award.OnLineAwardCellViewUI {
        constructor(e, t, i = null) {
            if (super(), this.imgBg1.visible = !1, this.imgBg2.visible = !1, this.imgGunIcon.visible = !1, 
            this.imgIcon.visible = !1, this.boxEffect.visible = !1, this.labelCount.text = t.toString(), 
            e.type == Ur.EQUIP) {
                this.imgBg1.visible = !0, this.imgGunIcon.visible = !0;
                let t = A.getDataByKey(e.extra()).icon;
                this.imgGunIcon.skin = t, this.boxEffect.visible = !0, this.labelCount.text = i ? "限时试用" : "永久";
            } else {
                e.type == Ur.PART_DEBRIS ? this.imgBg1.visible = !0 : this.imgBg2.visible = !0, 
                this.imgIcon.visible = !0;
                let t = ul.ITEM_ROOT + e.icon;
                e.type == Ur.PART_DEBRIS && (t = "sub1/ui/common/img_frag_1.png"), this.imgIcon.skin = t;
            }
        }
        setView(e) {
            switch (this.imgSelect.visible = !1, this.imgGet.visible = !1, e) {
              case dr.GET:
                this.imgGet.visible = !0;
                break;

              case dr.HAVE:
                this.imgSelect.visible = !0;
            }
        }
    }
    class br extends T.view.award.OnLineAwardViewUI {
        constructor() {
            super(), this.itmeCtrlList = [], this.imgHaveList = [], this.imgHaveX = [], this.itemList = [], 
            this.width = Laya.stage.width, this.height = Laya.stage.height;
        }
        onAwake() {
            if (this.maxBarLength = this.imgBar.width, this.setView(!0), this.btnBack.on(Laya.Event.CLICK, this, this.onBtnBack), 
            this.btnGet.on(Laya.Event.CLICK, this, this.onBtnGet), Laya.timer.loop(1e3, this, this.update), 
            !br.subscribeId && hl.platform == v.WX) {
                let e = this;
                this.requestSubscribeId(function() {
                    e.subscribe(function() {}, function() {});
                });
            }
        }
        onBtnBack() {
            q.getTouch() && (Bt.closeFunction(), br.isFirstSubscribe && this.subscribe(function() {}, function() {}), 
            br.isFirstSubscribe = !1);
        }
        onBtnGet() {
            q.getTouch() && this.itemList.length > 0 && (this.getAward(), tl.getInstance().getOnlineAward(), 
            this.setView());
        }
        update() {
            this.setView();
        }
        setView(e = !1) {
            if (e) {
                let e = new Laya.Point();
                for (let t = 0; t < sn.keys.length; t++) {
                    const i = sn.getDataByIndex(t);
                    let a = i.count;
                    i.itemId == Gr.GOLD1 && (hs.setfreeRewardForGoldCoins(), a = Math.floor(hs.curFreeGoldRewards / 2)), 
                    i.itemId == Gr.GOLD2 && (hs.setfreeRewardForGoldCoins(), a = Math.floor(hs.curFreeGoldRewards));
                    let s = this.boxCell1.getChildAt(t);
                    s.getChildByName("labelTime").text = Math.floor(i.time / 60) + "分钟";
                    let n = new wr(Is.getDataByKey(i.itemId), a, i.extra());
                    this.boxCell.addChild(n), this.itmeCtrlList.push(n);
                    let o = s.getChildByName("imgHave");
                    this.imgHaveList.push(o), e.x = o.width / 2, e.y = o.height / 2, o.localToGlobal(e, !1, this.boxMain), 
                    this.imgHaveX.push(e.x + 193 * t);
                }
            }
            this.itemList = [];
            let t = tl.getInstance().getOnLineTime(), i = tl.getInstance().getOnlineGetTime(), a = -1, s = -1;
            for (let e = 0; e < sn.keys.length; e++) {
                const n = sn.getDataByIndex(e);
                n.time > t ? (this.itmeCtrlList[e].setView(dr.NORMAL), this.imgHaveList[e].visible = !1) : (a = e, 
                this.imgHaveList[e].visible = !0, n.time <= i ? (this.itmeCtrlList[e].setView(dr.GET), 
                (s = e) == a && (s = a + 1)) : this.itmeCtrlList[e].setView(dr.HAVE));
            }
            let n = this.imgHaveX[a] ? this.imgHaveX[a] - this.imgBar.x : 0, o = (this.imgHaveX[a + 1] ? this.imgHaveX[a + 1] - this.imgBar.x : this.maxBarLength) - n, r = this.imgHaveX[a + 1] ? sn.getDataByIndex(a + 1).time : 4200, l = this.imgHaveX[a] ? sn.getDataByIndex(a).time : 0;
            this.imgBar.width = o * Math.min((t - l) / (r - l), 1) + n, this.labelOnLineTime.text = "已在线" + Math.floor(t / 60) + "分钟";
            for (let e = s; e < a + 1; e++) {
                if (-1 == e) continue;
                let t = sn.getDataByIndex(e), i = t.extra();
                t.itemId != Gr.BOX_1 && t.itemId != Gr.BOX_2 || (t = Is.getDataByKey(t.itemId).extra()[0]);
                let a = t.count;
                t.itemId == Gr.GOLD1 && (hs.setfreeRewardForGoldCoins(), a = Math.floor(hs.curFreeGoldRewards / 2)), 
                t.itemId == Gr.GOLD2 && (hs.setfreeRewardForGoldCoins(), a = Math.floor(hs.curFreeGoldRewards)), 
                this.itemList.push({
                    itemId: t.itemId,
                    count: a,
                    time: i
                });
            }
            0 == this.itemList.length ? this.btnGet.disabled = !0 : this.btnGet.disabled = !1, 
            !tl.getInstance().isCanShowOnLine() && tl.getInstance().getOnLineTime() > sn.getDataByIndex(sn.keys.length - 1).time && e && Oi.showNotification("今日已领完，欢迎明日再来领取");
        }
        getAward() {
            this.itemList.length > 0 && (ao.adSuccess(this.itemList, !0), Bt.openFunction(Er.GET_BOX_REWARD_NEXT, gr.COVER, ur.VIEW, St.HIDE, this.itemList));
        }
        requestSubscribeId(e) {
            if (hl.platform != v.WX && hl.platform != v.QQ) return void e();
            if (hl.platform == v.QQ && "qq" != ol.getSystemInfo().AppPlatform) return void e();
            br.subscribeId ? e() : B.request(C.SUBSCRIBE, "GET", {
                appId: hl.appId,
                idx: 1
            }, function(t) {
                1 == t.result && (br.subscribeId = t.data.list, e());
            });
        }
        subscribe(e, t) {
            if (hl.platform != v.WX && hl.platform != v.QQ) return void e();
            tl.getInstance().getPlatformUserId(function(i) {
                ol.requestSubscribeMessage(br.subscribeId, function(t) {
                    if (e(), hl.platform == v.WX) {
                        if ("requestSubscribeMessage:ok" == t.errMsg) for (let e in t) if (t[e] && "accept" == t[e]) {
                            let t = {
                                appId: hl.appId,
                                openId: i,
                                id: e
                            };
                            return void B.request(C.SUBSCRIBE, "POST", t, function(e) {});
                        }
                    } else {
                        let e = {
                            appId: hl.appId,
                            openId: i,
                            id: br.subscribeId[0]
                        };
                        B.request(C.SUBSCRIBE, "POST", e, function(e) {});
                    }
                }, function(e) {
                    console.log(e), t();
                });
            });
        }
    }
    br.isFirstSubscribe = !0;
    !function(e) {
        e[e.COVER = 0] = "COVER", e[e.REPLACE = 1] = "REPLACE";
    }(gr || (gr = {})), function(e) {
        e[e.WINDOW = 1] = "WINDOW", e[e.VIEW = 2] = "VIEW";
    }(ur || (ur = {}));
    let Er = {
        FIRST: "FirstFunction",
        GAME: "GameFunction",
        END: "EndFunction",
        EQUIP: "EquipFunciton",
        NEW_EQUIP_UNLOCK: "NewEquipUnlockFunction",
        SHOP: "ShopFunction",
        SYNTHESIS: "SynthesisFunciotn",
        LOADING_FIGHT: "LoadingFightFunction",
        ROLE: "RoleFunction",
        SUPER_REWARD: "SuperRewardFunction",
        ADD_GOLD: "AddGoldFunction",
        ADD_DIAMONDS: "AddDiamondsFunction",
        GET_GOLD_REWARD: " GetGoldRewardFunction",
        GET_DIAMONDS_REWARD: "GetDiamondsRewardFunction",
        OFF_LINE: "OfflineFunction",
        MODE: "ModeFunction",
        SIGN: "SignFunction",
        GET_EQUIP_REWARD: "GetEquipRewardFunction",
        SUPER_EQUIP: "SuperEquipFunction",
        MAP_MENU: "MapMenuFunction",
        TASK: "TaskFunction",
        DAN_ANI: "DanAniFunction",
        NEW_GIFT: "NewGiftFunction",
        END_RECREATION: "EndRecreationFunction",
        GET_THREE_REWARD: "GetThreeRewardFunction",
        GET_BOX_REWARD: "GetBoxRewardFunction",
        GET_BOX_REWARD_NEXT: "GetBoxRewardNextFunction",
        EXIT: "ExitFunction",
        REVIVE: "ReviveFunction",
        GAMEOVER: "GameOverFunction",
        EQUIP_TRY: "EquipTryFunction",
        SKILL_MODE_EQUIP_TRY: "SkillModeEquipTryFunction",
        GET_MODE_REWARD: "GetModeRewardFunction",
        NOTIFY_CLICK: "NotificationFunction",
        GAMEBOX: "GameBoxFunction",
        AUTOREVIVE: "NewReviveFunction",
        SUPERSTART: "SuperStartFunction",
        END_ANI: "EndAniFunction",
        NATIVE_INTERSTITIAL: "NativeInterstitialFunction",
        OPPOGAMEBOX: "OPPOGameBoxFunction",
        LIBRARY: "LibraryFunction",
        END_MYSELF: "EndMySelfFunction",
        DETAIL: "DetailFunction",
        ACTIVITY_EQUIP: "ActivityEquipFunction",
        NEW_YEAR_GIFT: "NewYearGiftFunction",
        MORE_GAME: "MoreGameFunction",
        GAMEAIR: "GameAirFunction",
        NEWPLAYERTRYARM: "NewPlayerTryArmFunction",
        RECORD: "RecordFunction",
        TURNTABLE: "TurnTableFunction",
        ENDGAMEBOX: "EndGameBoxFunction",
        SHOPTRY: "ShopTryFunction",
        ROLETRY: "RoleTryFunction",
        ACTIVITYPLAYER: "ActivityPlayerFunction",
        GET_BOX_REWARD_NEXT_EXTRA: "GetBoxRewardNextExtraFunction",
        ACCOUNTUPGRADE: "AccountUpgradeFunction",
        GAME_AIR_DROP: "GameAirDropFunction",
        GAME_ARM_FULL: "GameArmFullFunction",
        INFINITY_AWARD: "InfiniteAwardFunction",
        PRIVATE_DETAIL: "PrivateDetailFunction",
        MENTOR: "MentorFunction",
        MENTOR_HISTROY: "MentorHistoryFunction",
        STANDING: "StandingMainFunction",
        DRAGON_BOAT_BOMB: "DragonBoatBombFunction",
        GET_DRAGON_BOAT_BOMB: "GetDragonBoatBombFuntion",
        SUMMER_GIFT: "SummerGiftFunction",
        GAME_DIJIA: "GameDiJiaFunction",
        ANNOUNCEMENT: "AnnouncementFunction",
        ON_LINE_AWARD: "OnLineAwardFunction"
    };
    var Cr, vr, xr, Br, Ar, _r, Sr;
    Laya.ClassUtils.regClass(Er.FIRST, an), Laya.ClassUtils.regClass(Er.GAME, class extends Ms {
        createView() {
            return hl.isShowReviewUI() ? this._viewCtrl = new Sn() : this._viewCtrl = new _n(), 
            this._viewCtrl;
        }
        getFunctionName() {
            return "游戏界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                let e = this._viewCtrl;
                this.nativeIcon = new cs(), e.addChild(this.nativeIcon), this.nativeIcon.scale(.7, .7), 
                this.nativeIcon.x = 360, this.nativeIcon.y = 70;
            }
        }
        onExit() {}
        onEnable() {
            if (this.nativeIcon && this.nativeIcon.show(), (hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) && tl.getInstance().isNew && Ts.gameNum > 3) {
                let e = Laya.stage.width / 2 - ol.getCustomSize().w - 350, t = 60, i = Laya.stage.width / 2 + 350;
                hl.platform == v.QQ || hl.appId == H.XM ? (j.showCustom(i, t), j.showCustom(e, t)) : (j.showCustom(i, t, al.SINGLE_1), 
                j.showCustom(e, t, al.SINGLE_1));
            }
        }
        onDisbale() {
            if (this.nativeIcon && this.nativeIcon.hide(), hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = Laya.stage.width / 2 - ol.getCustomSize().w - 350, t = 60, i = Laya.stage.width / 2 + 350;
                hl.platform == v.QQ || hl.appId == H.XM ? (j.hideCustom(i, t), j.hideCustom(e, t)) : (j.hideCustom(i, t, al.SINGLE_1), 
                j.hideCustom(e, t, al.SINGLE_1));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.END, class extends Ms {
        createView() {
            return this._viewCtrl = new Gs(), this._viewCtrl;
        }
        getFunctionName() {
            return "结束界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.showBannerAd();
        }
        onDisbale() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.hideBannerAd();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.EQUIP, class extends Ms {
        createView() {
            return this._viewCtrl = new dn(), this._viewCtrl;
        }
        getFunctionName() {
            return "装备库界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            this.viewCtrl.onMyEnable();
        }
        onDisbale() {
            this.viewCtrl.onMyDisable();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.NEW_EQUIP_UNLOCK, un), Laya.ClassUtils.regClass(Er.SHOP, class extends Ms {
        createView() {
            return this._viewCtrl = new Qn(), this._viewCtrl;
        }
        getFunctionName() {
            return "商店界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SYNTHESIS, class extends Ms {
        createView() {
            return this._viewCtrl = new ds(), this._viewCtrl;
        }
        getFunctionName() {
            return "合成界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.LOADING_FIGHT, class extends Ms {
        createView() {
            return hl.isShowReviewUI() ? this._viewCtrl = new Po() : this._viewCtrl = new Oo(), 
            this._viewCtrl;
        }
        getFunctionName() {
            return "加载界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform == v.NATIVE_ANDRIOD && j.hideBannerAd();
        }
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ROLE, class extends Ms {
        createView() {
            return this._viewCtrl = new Xn(), this._viewCtrl;
        }
        getFunctionName() {
            return "角色商店界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform != v.NATIVE_ANDRIOD && hl.appId != H.C233_ME && j.showBannerAd(Laya.stage.width / 2);
        }
        onDisbale() {
            j.hideBannerAd();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SUPER_REWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new oo(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "超级奖励界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new Ja();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), this.nativeIcon1 = new cs(), e.addChild(this.nativeIcon1), 
                this.nativeIcon2 = new cs(), e.addChild(this.nativeIcon2), this.nativeIcon1.x = Laya.stage.width / 2 - 550, 
                this.nativeIcon2.x = Laya.stage.width / 2 + 400, this.nativeIcon1.bottom = 30, this.nativeIcon2.bottom = 30;
            }
        }
        onExit() {}
        onEnable() {
            if (j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.showCustom(45, 85, al.VERTICAL)) : (j.showCustom(e, t), j.showCustom(i, t));
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), this.nativeIcon1 && this.nativeIcon1.hide(), 
            this.nativeIcon2 && this.nativeIcon2.hide(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.hideCustom(45, 85, al.VERTICAL)) : (j.hideCustom(e, t), j.hideCustom(i, t));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ADD_GOLD, class extends Ms {
        createView() {
            return this._viewCtrl = new Pn(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "增加金币界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new Ja();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), this.nativeIcon1 = new cs(), e.addChild(this.nativeIcon1), 
                this.nativeIcon2 = new cs(), e.addChild(this.nativeIcon2), this.nativeIcon1.x = Laya.stage.width / 2 - 550, 
                this.nativeIcon2.x = Laya.stage.width / 2 + 400, this.nativeIcon1.bottom = 30, this.nativeIcon2.bottom = 30;
            }
        }
        onExit() {}
        onEnable() {
            if (j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show(), Ts.synthesisViewCtrl.nativeIcon1 && Ts.synthesisViewCtrl.nativeIcon1.hide(), 
            Ts.synthesisViewCtrl.nativeIcon2 && Ts.synthesisViewCtrl.nativeIcon2.hide(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.showCustom(45, 85, al.VERTICAL)) : (j.showCustom(e, t), j.showCustom(i, t));
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), this.nativeIcon1 && this.nativeIcon1.hide(), 
            this.nativeIcon2 && this.nativeIcon2.hide(), Ts.synthesisViewCtrl.nativeIcon1 && Ts.synthesisViewCtrl.nativeIcon1.show(), 
            Ts.synthesisViewCtrl.nativeIcon2 && Ts.synthesisViewCtrl.nativeIcon2.show(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.hideCustom(45, 85, al.VERTICAL)) : (j.hideCustom(e, t), j.hideCustom(i, t));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ADD_DIAMONDS, class extends Ms {
        createView() {
            return this._viewCtrl = new Ps(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "钻石补充界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new Ja();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), this.nativeIcon1 = new cs(), e.addChild(this.nativeIcon1), 
                this.nativeIcon2 = new cs(), e.addChild(this.nativeIcon2), this.nativeIcon1.x = Laya.stage.width / 2 - 550, 
                this.nativeIcon2.x = Laya.stage.width / 2 + 400, this.nativeIcon1.bottom = 30, this.nativeIcon2.bottom = 30;
            }
        }
        onExit() {}
        onEnable() {
            if (j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show(), Ts.synthesisViewCtrl.nativeIcon1 && Ts.synthesisViewCtrl.nativeIcon1.hide(), 
            Ts.synthesisViewCtrl.nativeIcon2 && Ts.synthesisViewCtrl.nativeIcon2.hide(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.showCustom(45, 85, al.VERTICAL)) : (j.showCustom(e, t), j.showCustom(i, t));
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), this.nativeIcon1 && this.nativeIcon1.hide(), 
            this.nativeIcon2 && this.nativeIcon2.hide(), Ts.synthesisViewCtrl.nativeIcon1 && Ts.synthesisViewCtrl.nativeIcon1.show(), 
            Ts.synthesisViewCtrl.nativeIcon2 && Ts.synthesisViewCtrl.nativeIcon2.show(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.hideCustom(45, 85, al.VERTICAL)) : (j.hideCustom(e, t), j.hideCustom(i, t));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_GOLD_REWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new Rn(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "获取金币界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            j.showBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_DIAMONDS_REWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new Dn(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "获取钻石界面";
        }
        onEnter() {}
        onExit() {
            if (hl.platform == v.NATIVE_IOS || hl.appId == H.C233_ME || hl.appId == H.MMY || hl.appId == H.HYKB || hl.appId == H.C_233) {
                if (tl.getInstance().getMaxUnLockArm() >= 4 && un.isNewEquip) {
                    let e = Bt.getFunctionViewCtrl(Er.FIRST), t = 40;
                    hl.appId == H.C_233 && (t = 30), e && (hl.appId == H.C_233 && hl.isAutoFullScreen() ? j.createFullscreenVideo(null, null) : e.showInterstitialAdTime + t < tl.getInstance().getTime() && (e.showInterstitialAdTime = tl.getInstance().getTime(), 
                    console.log(t + "后可弹出插屏"), j.createInterstitialAd()));
                }
                un.isNewEquip = !1;
            }
        }
        onEnable() {
            j.showBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.OFF_LINE, class extends Ms {
        createView() {
            return this._viewCtrl = new Un(), this._viewCtrl;
        }
        getFunctionName() {
            return "离线奖励界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            j.showBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.MODE, class extends Ms {
        createView() {
            return this._viewCtrl = new $s(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "模式选择界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new Ja();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), this.nativeIcon1 = new cs(), e.addChild(this.nativeIcon1), 
                this.nativeIcon2 = new cs(), e.addChild(this.nativeIcon2), this.nativeIcon1.x = Laya.stage.width / 2 - 550, 
                this.nativeIcon2.x = Laya.stage.width / 2 + 400, this.nativeIcon1.bottom = 30, this.nativeIcon2.bottom = 30;
            }
        }
        onExit() {}
        onEnable() {
            if (j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show(), v.WX == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                j.showCustom(i, t), j.showCustom(e, t);
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), this.nativeIcon1 && this.nativeIcon1.hide(), 
            this.nativeIcon2 && this.nativeIcon2.hide(), v.WX == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                j.hideCustom(i, t), j.hideCustom(e, t);
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SIGN, class extends Ms {
        createView() {
            return this._viewCtrl = new no(this._args ? this._args.cb : null), this._viewCtrl;
        }
        getFunctionName() {
            return "签到界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C_233 && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB || j.showBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C_233 && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB || j.hideBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_EQUIP_REWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new yo(this.args.id, this.args.cb ? this.args.cb : null), 
            this._viewCtrl;
        }
        getFunctionName() {
            return "获得枪支人物界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            this.viewCtrl.data.type == Ur.HERO ? hl.platform != v.NATIVE_ANDRIOD || hl.appId == H.XM ? j.showBannerAd(14, ol.getBannerCenterPos().y + (ol.isIOS() ? 30 : 0)) : hl.appId != H.C_233 && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB || j.showBannerAd() : (j.showBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL)));
        }
        onDisbale() {
            j.hideBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SUPER_EQUIP, class extends Ms {
        createView() {
            return this._viewCtrl = new Os(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "超级武器界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            this._viewCtrl.onMyEnable(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            this._viewCtrl.onMyDisable(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.MAP_MENU, class extends Ms {
        createView() {
            return this._viewCtrl = new Gn(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "菜单选择界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new Ja();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), this.nativeIcon1 = new cs(), e.addChild(this.nativeIcon1), 
                this.nativeIcon2 = new cs(), e.addChild(this.nativeIcon2), this.nativeIcon1.x = Laya.stage.width / 2 - 450, 
                this.nativeIcon2.x = Laya.stage.width / 2 + 280, this.nativeIcon1.bottom = 30, this.nativeIcon2.bottom = 30, 
                this.nativeBanner.scale(.8, .8), this.nativeIcon1.scale(.8, .8), this.nativeIcon2.scale(.8, .8), 
                ol.isFullScreen() || (this.nativeBanner.left = NaN, this.nativeBanner.centerX = NaN, 
                this.nativeBanner.x = Laya.stage.width / 2 - this.nativeBanner.width / 2 - 8, this.nativeIcon2.x -= 60);
            }
        }
        onExit() {}
        onEnable() {
            if (j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show(), hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                j.showCustom(i, t), j.showCustom(e, t);
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), this.nativeIcon1 && this.nativeIcon1.hide(), 
            this.nativeIcon2 && this.nativeIcon2.hide(), hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                j.hideCustom(i, t), j.hideCustom(e, t);
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.TASK, class extends Ms {
        createView() {
            return this._viewCtrl = new lo(), this._viewCtrl;
        }
        getFunctionName() {
            return "任务界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C_233 && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB || j.showBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C_233 && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB || j.hideBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.DAN_ANI, class extends Ms {
        createView() {
            return this._viewCtrl = new Ns(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "段位动画界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.NEW_GIFT, class extends Ms {
        createView() {
            return this._viewCtrl = new ks(this._args ? this._args.cb : null), this._viewCtrl;
        }
        getFunctionName() {
            return "新手礼包界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.XM && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.showBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.XM && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.hideBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.END_RECREATION, class extends Ms {
        createView() {
            return hl.isShowReviewUI() ? this._viewCtrl = new Fs() : this._viewCtrl = new Us(), 
            this._viewCtrl;
        }
        getFunctionName() {
            return "娱乐模式结束界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new Ja();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), Rs._isWin || (this.nativeIcon1 = new cs(), e.boxAll.addChild(this.nativeIcon1), 
                this.nativeIcon2 = new cs(), e.boxAll.addChild(this.nativeIcon2), this.nativeIcon1.x = 80, 
                this.nativeIcon2.x = 1190, this.nativeIcon1.y = 252, this.nativeIcon2.y = 252);
            }
        }
        onExit() {}
        onEnable() {
            j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), this.nativeIcon1 && this.nativeIcon1.show(), 
            this.nativeIcon2 && this.nativeIcon2.show();
        }
        onDisbale() {
            j.hideBannerAd(), this.nativeBanner && this.nativeBanner.show(), this.nativeIcon1 && this.nativeIcon1.hide(), 
            this.nativeIcon2 && this.nativeIcon2.hide();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_THREE_REWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new On(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "获取金币界面";
        }
        onEnter() {}
        onExit() {
            tl.getInstance().getGuide() <= Et.FINISH && Bt.triggerAutoOpen(), hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || j.createInterstitialAd();
        }
        onEnable() {
            j.showBannerAd();
        }
        onDisbale() {
            j.hideBannerAd();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.EXIT, class extends Ms {
        createView() {
            return this._viewCtrl = new mn(), this._viewCtrl;
        }
        getFunctionName() {
            return "退出界面";
        }
        onEnter() {
            if (hl.platform != v.OPPO && hl.platform != v.WEB || (this.nativeBanner = new Ja(), 
            this._viewCtrl.addChild(this.nativeBanner)), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.showCustom(45, 85, al.VERTICAL)) : (j.showCustom(e, t), j.showCustom(i, t));
            }
        }
        onExit() {}
        onEnable() {
            j.showBannerAd(), this.nativeBanner && this.nativeBanner.show();
        }
        onDisbale() {
            if (j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.hideCustom(45, 85, al.VERTICAL)) : (j.hideCustom(e, t), j.hideCustom(i, t));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.REVIVE, class extends Ms {
        createView() {
            return this._viewCtrl = new Fn(), this._viewCtrl;
        }
        getFunctionName() {
            return "复活界面";
        }
        onEnter() {
            hl.platform != v.OPPO && hl.platform != v.WEB || (this.nativeBanner = new Ja(), 
            this._viewCtrl.addChild(this.nativeBanner));
        }
        onExit() {}
        onEnable() {
            j.showBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GAMEOVER, class extends Ms {
        createView() {
            return this._viewCtrl = new pn(), this._viewCtrl;
        }
        getFunctionName() {
            return "游戏死亡结束界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            if (j.showBannerAd(), hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = Laya.stage.width / 2 - ol.getCustomSize().w - 350, t = 60, i = Laya.stage.width / 2 + 350;
                hl.platform == v.QQ || hl.appId == H.XM ? (j.showCustom(i, t), j.showCustom(e, t)) : (j.showCustom(i, t, al.SINGLE_2), 
                j.showCustom(e, t, al.SINGLE_2));
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = Laya.stage.width / 2 - ol.getCustomSize().w - 350, t = 60, i = Laya.stage.width / 2 + 350;
                hl.platform == v.QQ || hl.appId == H.XM ? (j.hideCustom(i, t), j.hideCustom(e, t)) : (j.hideCustom(i, t, al.SINGLE_2), 
                j.hideCustom(e, t, al.SINGLE_2));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.EQUIP_TRY, class extends Ms {
        createView() {
            return this._viewCtrl = new Ln(), this._viewCtrl;
        }
        getFunctionName() {
            return "武器试用界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SKILL_MODE_EQUIP_TRY, class extends Ms {
        createView() {
            return this._viewCtrl = new Jo(), this._viewCtrl;
        }
        getFunctionName() {
            return "特殊模式武器选择界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_MODE_REWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new Ys(this._args.mode, this._args.cb), this._viewCtrl;
        }
        getFunctionName() {
            return "解锁新模式界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.NOTIFY_CLICK, class extends Ms {
        createView() {
            return this._viewCtrl = new ho(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "通知点击界面";
        }
        onEnter() {
            hl.platform != v.OPPO && hl.platform != v.WEB || (this.nativeBanner = new Ja(), 
            this._viewCtrl.addChild(this.nativeBanner));
        }
        onExit() {}
        onEnable() {
            if ((!tl.getInstance().isNew || tl.onlineSec > 300) && j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), 
            v.QQ == hl.platform || hl.appId == H.XM) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                j.showCustom(i, t), j.showCustom(e, t);
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), v.QQ == hl.platform || hl.appId == H.XM) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                j.hideCustom(i, t), j.hideCustom(e, t);
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GAMEBOX, class extends Ms {
        createView() {
            return this._viewCtrl = new co(this._args.viewType), this._viewCtrl;
        }
        getFunctionName() {
            return "宝箱界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 115, al.VERTICAL), 
            j.showCustom(45, 105, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 115, al.VERTICAL), 
            j.hideCustom(45, 105, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.AUTOREVIVE, class extends Ms {
        createView() {
            return this._viewCtrl = new go(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "自动复活界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new Ja();
                let e = this._viewCtrl;
                e.addChild(this.nativeBanner), this.nativeIcon1 = new cs(), e.boxAll.addChild(this.nativeIcon1), 
                this.nativeIcon2 = new cs(), e.boxAll.addChild(this.nativeIcon2), this.nativeIcon1.x = 567, 
                this.nativeIcon1.y = 86, this.nativeIcon2.x = 929, this.nativeIcon2.y = 86;
            }
        }
        onExit() {}
        onEnable() {
            if (this.viewCtrl, j.showBannerAd(), this.nativeBanner && this.nativeBanner.show(), 
            this.nativeIcon1 && this.nativeIcon1.show(), this.nativeIcon2 && this.nativeIcon2.show(), 
            hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = Laya.stage.width / 2 - 4, t = 95, i = Laya.stage.width / 2 + 356;
                j.showCustom(i, t, al.SINGLE_2, null, function() {
                    U.showSingleCell(i, t, Er.AUTOREVIVE);
                }), j.showCustom(e, t, al.SINGLE_2, null, function() {
                    U.showSingleCell(e, t, Er.AUTOREVIVE);
                });
            }
        }
        onDisbale() {
            if (this.viewCtrl, j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), 
            this.nativeIcon1 && this.nativeIcon1.hide(), this.nativeIcon2 && this.nativeIcon2.hide(), 
            hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = Laya.stage.width / 2 - 4, t = 95, i = Laya.stage.width / 2 + 356;
                j.hideCustom(i, t, al.SINGLE_2), j.hideCustom(e, t, al.SINGLE_2), U.hideSingleCell(e, t, Er.AUTOREVIVE), 
                U.hideSingleCell(i, t, Er.AUTOREVIVE);
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SUPERSTART, class extends Ms {
        createView() {
            return this._viewCtrl = new mo(this._args.cb), this._viewCtrl;
        }
        getFunctionName() {
            return "超凡开局界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO) {
                let e = this._viewCtrl;
                this.nativeIcon = new uo(), e.boxAll.addChild(this.nativeIcon), this.nativeIcon.x = 290, 
                this.nativeIcon.y = 535;
            }
        }
        onExit() {}
        onEnable() {
            this.nativeIcon && this.nativeIcon.show(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            this.nativeIcon && this.nativeIcon.hide(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.END_ANI, class extends Ms {
        createView() {
            return this._viewCtrl = new po(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "结束交互动画界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            j.showBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_BOX_REWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new Io(this.args.itemList, this.args.cb ? this.args.cb : null), 
            this._viewCtrl;
        }
        getFunctionName() {
            return "获得宝箱界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new fo();
                let e = this._viewCtrl;
                e.getChildAt(1).addChild(this.nativeBanner), e.getChildAt(1).addChild(this.nativeBanner.btnAd), 
                this.nativeBanner.x = 600, this.nativeBanner.y = 246, this.nativeBanner.scale(.8, .8), 
                this.nativeBanner.btnAd.x = 1050, this.nativeBanner.btnAd.y = 620, this.nativeBanner.btnAd.visible = !1;
            }
        }
        onExit() {}
        onEnable() {
            this.nativeBanner && this.nativeBanner.show(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), this.nativeBanner && this.nativeBanner.hide(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_BOX_REWARD_NEXT, class extends Ms {
        createView() {
            return this._viewCtrl = new ao(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "获得宝箱奖励界面";
        }
        onEnter() {
            hl.platform != v.OPPO && hl.platform != v.WEB || (this.nativeBanner = new Ja(), 
            this._viewCtrl.boxAll.addChild(this.nativeBanner), this.nativeBanner.left = NaN, 
            this.nativeBanner.bottom = NaN, this.nativeBanner.x = 413, this.nativeBanner.y = 380, 
            this.nativeBanner.scale(.8, .8));
        }
        onExit() {}
        onEnable() {
            this.nativeBanner && this.nativeBanner.show(), v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            this.nativeBanner && this.nativeBanner.hide(), v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.NATIVE_INTERSTITIAL, class extends Ms {
        createView() {
            return this._viewCtrl = new Lo(), this._viewCtrl;
        }
        getFunctionName() {
            return "原生插屏界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            this._viewCtrl.visible = !0;
        }
        onDisbale() {
            this._viewCtrl.visible = !1;
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.OPPOGAMEBOX, class extends Ms {
        createView() {
            return this._viewCtrl = new wo(), this._viewCtrl;
        }
        getFunctionName() {
            return "OV结算宝箱界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                this.nativeBanner = new fo();
                let e = this._viewCtrl;
                e.boxAll.addChild(this.nativeBanner), e.boxAll.addChild(this.nativeBanner.btnAd), 
                this.nativeBanner.x = 850.5, this.nativeBanner.y = 140, this.nativeBanner.btnAd.x = 1050, 
                this.nativeBanner.btnAd.y = 550;
            }
        }
        onExit() {}
        onEnable() {
            this.nativeBanner && this.nativeBanner.show();
        }
        onDisbale() {
            this.nativeBanner && this.nativeBanner.hide();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.LIBRARY, class extends Ms {
        createView() {
            return this._viewCtrl = new Ro(), this._viewCtrl;
        }
        getFunctionName() {
            return "仓库界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            if ((hl.platform == v.WX || hl.platform == v.QQ || hl.appId == H.XM) && (j.showBannerAd(Laya.stage.width - ol.getBannerWeight(), ol.getBannerCenterPos().y + (ol.isIOS() ? 30 : 0)), 
            !hl.isZsCtrl)) {
                let e = this._viewCtrl.boxNative, t = new Laya.Point();
                e.localToGlobal(t), j.showCustom(t.x, t.y, al.SINGLE_2);
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), !hl.isZsCtrl) {
                let e = this._viewCtrl, t = new Laya.Point();
                e.boxNative.localToGlobal(t), j.hideCustom(t.x, t.y, al.SINGLE_2);
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.END_MYSELF, class extends Ms {
        createView() {
            return this._viewCtrl = new No(), this._viewCtrl;
        }
        getFunctionName() {
            return "个人结束界面";
        }
        onEnter() {}
        onExit() {
            Bt.triggerAutoOpen();
        }
        onEnable() {
            hl.appId == H.XM && j.showBannerAd(0, 314), hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.showBannerAd(), 
            hl.platform == v.WX && (j.showBannerAd(Laya.stage.width / 2 + 107, 314), j.showCustom(59, 179, al.VERTICAL));
        }
        onDisbale() {
            j.hideBannerAd(), j.hideCustom(59, 179, al.VERTICAL);
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.DETAIL, class extends Ms {
        createView() {
            return this._viewCtrl = new ko(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "详情界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.showBannerAd();
        }
        onDisbale() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.hideBannerAd();
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ACTIVITY_EQUIP, class extends Ms {
        createView() {
            return this._viewCtrl = new en(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "活动武器界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.showBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.hideBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.NEW_YEAR_GIFT, class extends Ms {
        createView() {
            return this._viewCtrl = new Vo(), this._viewCtrl;
        }
        getFunctionName() {
            return "新年礼包界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            this.viewCtrl.onMyEnable(), hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.showBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            hl.platform != v.VIVO && hl.platform != v.NATIVE_IOS && hl.appId != H.C233_ME && hl.appId != H.MMY && hl.appId != H.HYKB && hl.appId != H.C_233 || j.hideBannerAd(), 
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.MORE_GAME, class extends Ms {
        createView() {
            return this._viewCtrl = new Go(), this._viewCtrl;
        }
        getFunctionName() {
            return "更多游戏界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GAMEAIR, class extends Ms {
        createView() {
            return this._viewCtrl = new ha(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "空投神枪界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.NEWPLAYERTRYARM, class extends Ms {
        createView() {
            return this._viewCtrl = new Uo(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "新手局内试用界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.RECORD, class extends Ms {
        createView() {
            return this._viewCtrl = new Fo(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "录屏界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.TURNTABLE, class extends Ms {
        createView() {
            return this._viewCtrl = new Xo(), this._viewCtrl;
        }
        getFunctionName() {
            return "转盘界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ENDGAMEBOX, class extends Ms {
        createView() {
            return this._viewCtrl = new Ko(this._args.viewType), this._viewCtrl;
        }
        getFunctionName() {
            return "结算宝箱界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 115, al.VERTICAL), 
            j.showCustom(45, 105, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 115, al.VERTICAL), 
            j.hideCustom(45, 105, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SHOPTRY, class extends Ms {
        createView() {
            return this._viewCtrl = new zo(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "商店试用界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            if (j.showBannerAd(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.showCustom(45, 85, al.VERTICAL)) : (j.showCustom(e, t), j.showCustom(i, t));
            }
        }
        onDisbale() {
            if (j.hideBannerAd(), v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.hideCustom(45, 85, al.VERTICAL)) : (j.hideCustom(e, t), j.hideCustom(i, t));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ROLETRY, class extends Ms {
        createView() {
            return this._viewCtrl = new qo(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "角色试用界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ACTIVITYPLAYER, class extends Ms {
        createView() {
            return this._viewCtrl = new Qo(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "活动人物界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_BOX_REWARD_NEXT_EXTRA, class extends Ms {
        createView() {
            return this._viewCtrl = new Zo(this.args), this._viewCtrl;
        }
        getFunctionName() {
            return "获得宝箱奖励额外界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.showCustom(45, 85, al.VERTICAL));
        }
        onDisbale() {
            v.QQ != hl.platform && hl.platform != v.WX || (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
            j.hideCustom(45, 85, al.VERTICAL));
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ACCOUNTUPGRADE, class extends Ms {
        createView() {
            return this._viewCtrl = new jo(), this._viewCtrl;
        }
        getFunctionName() {
            return "账号升级界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GAME_AIR_DROP, class extends Ms {
        createView() {
            return this._viewCtrl = new Vi(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "空投打开界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GAME_ARM_FULL, class extends Ms {
        createView() {
            return this._viewCtrl = new $o(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "枪支满界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.INFINITY_AWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new tr(), this._viewCtrl;
        }
        getFunctionName() {
            return "开局增益界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.PRIVATE_DETAIL, class extends Ms {
        createView() {
            return this._viewCtrl = new ms(!0), this._viewCtrl;
        }
        getFunctionName() {
            return "隐私政策界面";
        }
        onEnter() {
            Ts.scene3d.active = !1;
        }
        onExit() {
            Ts.scene3d.active = !0;
        }
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {
            this.viewCtrl;
        }
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.STANDING, class extends Ms {
        createView() {
            return this._viewCtrl = new rr(), this._viewCtrl;
        }
        getFunctionName() {
            return "战绩";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform == v.WX && j.showCustom(116, 412, al.SINGLE_2);
        }
        onDisbale() {
            hl.platform == v.WX && j.hideCustom(116, 412, al.SINGLE_2);
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.DRAGON_BOAT_BOMB, class extends Ms {
        createView() {
            return this._viewCtrl = new lr(), this._viewCtrl;
        }
        getFunctionName() {
            return "端午炸弹活动";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GET_DRAGON_BOAT_BOMB, class extends Ms {
        createView() {
            return this._viewCtrl = new hr(), this._viewCtrl;
        }
        getFunctionName() {
            return "恭喜获得粽子炸弹";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            this._viewCtrl.visible = !0;
        }
        onDisbale() {
            this._viewCtrl.visible = !1;
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.MENTOR, class extends Ms {
        createView() {
            return this._viewCtrl = new pr(), this._viewCtrl;
        }
        getFunctionName() {
            return "收徒界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            hl.platform, v.WX;
        }
        onDisbale() {
            hl.platform, v.WX;
        }
        setAllButtonAnalysePoint() {
            this.viewCtrl;
        }
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.MENTOR_HISTROY, class extends Ms {
        createView() {
            return this._viewCtrl = new yr(), this._viewCtrl;
        }
        getFunctionName() {
            return "收徒历史";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {
            this.viewCtrl;
        }
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.SUMMER_GIFT, class extends Ms {
        createView() {
            return this._viewCtrl = new Ir(), this._viewCtrl;
        }
        getFunctionName() {
            return "夏日礼包";
        }
        onEnter() {}
        onExit() {}
        onEnable() {
            if (v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.showCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.showCustom(45, 85, al.VERTICAL)) : (j.showCustom(e, t), j.showCustom(i, t));
            }
        }
        onDisbale() {
            if (v.QQ == hl.platform || v.WX == hl.platform || v.NATIVE_ANDRIOD == hl.platform) {
                let e = ol.getBannerCenterPos().x + ol.getBannerWeight() + 30, t = Laya.stage.height - ol.getCustomSize().h, i = ol.getBannerCenterPos().x - ol.getCustomSize().w - 30;
                hl.platform == v.WX ? (j.hideCustom(Laya.stage.width - ol.getCustomVSize().w - 45, 85, al.VERTICAL), 
                j.hideCustom(45, 85, al.VERTICAL)) : (j.hideCustom(e, t), j.hideCustom(i, t));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.GAME_DIJIA, class extends Ms {
        createView() {
            return this._viewCtrl = new fr(this._args), this._viewCtrl;
        }
        getFunctionName() {
            return "游戏迪迦界面";
        }
        onEnter() {
            if (hl.platform == v.OPPO || hl.platform == v.WEB) {
                let e = this._viewCtrl;
                this.nativeIcon = new cs(), e.addChild(this.nativeIcon), this.nativeIcon.scale(.7, .7), 
                this.nativeIcon.x = 360, this.nativeIcon.y = 70;
            }
        }
        onExit() {}
        onEnable() {
            if (this.nativeIcon && this.nativeIcon.show(), hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = Laya.stage.width / 2 - ol.getCustomSize().w - 350, t = 60, i = Laya.stage.width / 2 + 350;
                hl.platform == v.QQ || hl.appId == H.XM ? (j.showCustom(i, t), j.showCustom(e, t)) : (j.showCustom(i, t, al.SINGLE_1), 
                j.showCustom(e, t, al.SINGLE_1));
            }
        }
        onDisbale() {
            if (this.nativeIcon && this.nativeIcon.hide(), hl.platform == v.QQ || hl.platform == v.WX || hl.appId == H.XM) {
                let e = Laya.stage.width / 2 - ol.getCustomSize().w - 350, t = 60, i = Laya.stage.width / 2 + 350;
                hl.platform == v.QQ || hl.appId == H.XM ? (j.hideCustom(i, t), j.hideCustom(e, t)) : (j.hideCustom(i, t, al.SINGLE_1), 
                j.hideCustom(e, t, al.SINGLE_1));
            }
        }
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ANNOUNCEMENT, class extends Ms {
        createView() {
            return this._viewCtrl = new Lr(), this._viewCtrl;
        }
        getFunctionName() {
            return "更新公告界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), Laya.ClassUtils.regClass(Er.ON_LINE_AWARD, class extends Ms {
        createView() {
            return this._viewCtrl = new br(), this._viewCtrl;
        }
        getFunctionName() {
            return "在线奖励界面";
        }
        onEnter() {}
        onExit() {}
        onEnable() {}
        onDisbale() {}
        setAllButtonAnalysePoint() {}
        request(e) {
            e();
        }
    }), function(e) {
        e[e.ATTACK = 1] = "ATTACK", e[e.AREA = 2] = "AREA", e[e.DISTANCE = 3] = "DISTANCE", 
        e[e.SPRINT = 4] = "SPRINT", e[e.ONCE = 5] = "ONCE";
    }(Cr || (Cr = {})), function(e) {
        e[e.ENEMY = 1] = "ENEMY", e[e.FRIEND = 2] = "FRIEND";
    }(vr || (vr = {})), function(e) {
        e[e.LINE = 1] = "LINE", e[e.CIRCLE = 2] = "CIRCLE";
    }(xr || (xr = {})), function(e) {
        e[e.TOP = 1] = "TOP", e[e.MIDDLE = 2] = "MIDDLE", e[e.BOTTOM = 3] = "BOTTOM", e[e.ORIGIN = 4] = "ORIGIN", 
        e[e.WORLD = 5] = "WORLD";
    }(Br || (Br = {})), function(e) {
        e[e.ATTR = 1] = "ATTR", e[e.DIZZINESS = 2] = "DIZZINESS", e[e.REPEL = 3] = "REPEL";
    }(Ar || (Ar = {})), function(e) {
        e[e.RECOVER = 1] = "RECOVER", e[e.COVER = 2] = "COVER";
    }(_r || (_r = {})), function(e) {
        e[e.MOVE = 1] = "MOVE", e[e.STOP = 2] = "STOP", e[e.SKILL = 3] = "SKILL", e[e.SELECT_REWARD = 4] = "SELECT_REWARD", 
        e[e.REVIVE = 5] = "REVIVE";
    }(Sr || (Sr = {}));
    let Tr = {
        HP: "hp",
        MAX_HP: "maxHp",
        ATK: "atk",
        DEF: "def",
        SPEED: "speed",
        ATK_SPEED: "atkSpeed",
        CRL: "crl",
        VPM: "vpm",
        EVA: "eva",
        BLEED: "bleed",
        REN: "ren",
        ATK_RATE: "atkRate",
        DEF_RATE: "defRate",
        SPEED_RATE: "speedRate",
        ATK_SPEED_RATE: "atkSpeedRate",
        CRL_DAMAGE_RATE: "crlDamageRate",
        SKILL_TIME_RATE: "skillTimeRate",
        SKILL_DAMAGE_RATE: "skillDamageRate"
    }, Dr = [];
    for (let e in Tr) Dr.push(Tr[e]);
    var Rr;
    !function(e) {
        e[e.AI_BEHAVIOUR_NONE = 0] = "AI_BEHAVIOUR_NONE", e[e.AI_BEHAVIOUR_IDLE = 1] = "AI_BEHAVIOUR_IDLE", 
        e[e.AI_BEHAVIOUR_PATROL = 2] = "AI_BEHAVIOUR_PATROL", e[e.AI_BEHAVIOUR_TRACK = 3] = "AI_BEHAVIOUR_TRACK", 
        e[e.AI_BEHAVIOUR_ESCAPE = 4] = "AI_BEHAVIOUR_ESCAPE", e[e.AI_BEHAVIOUR_CROUCHATTACK = 5] = "AI_BEHAVIOUR_CROUCHATTACK", 
        e[e.AI_BEHAVIOUR_ATTACK = 6] = "AI_BEHAVIOUR_ATTACK", e[e.AI_BEHAVIOUR_MOVEATTACK = 7] = "AI_BEHAVIOUR_MOVEATTACK", 
        e[e.AI_BEHAVIOUR_SEARCH = 8] = "AI_BEHAVIOUR_SEARCH";
    }(Rr || (Rr = {}));
    var Nr, Mr, kr, Or, Pr, Vr;
    !function(e) {
        e[e.NORMAL = 1] = "NORMAL", e[e.TRACK = 2] = "TRACK", e[e.ATTACK = 3] = "ATTACK", 
        e[e.ESCAPE = 4] = "ESCAPE", e[e.REVENGE = 5] = "REVENGE", e[e.DIE = 6] = "DIE", 
        e[e.SEARCH = 7] = "SEARCH";
    }(Nr || (Nr = {})), function(e) {
        e[e.TYPE_0 = 0] = "TYPE_0", e[e.TYPE_1 = 1] = "TYPE_1";
    }(Mr || (Mr = {})), function(e) {
        e[e.LIGHT = 0] = "LIGHT", e[e.MIDDLE = 1] = "MIDDLE", e[e.HEAVY = 2] = "HEAVY";
    }(kr || (kr = {})), function(e) {
        e[e.HERO = -1] = "HERO", e[e.EQUIP = 0] = "EQUIP", e[e.HEAD = 1] = "HEAD", e[e.PANTS = 3] = "PANTS", 
        e[e.CLOTHES = 2] = "CLOTHES", e[e.ORNAMENTS = 5] = "ORNAMENTS", e[e.SHOE = 4] = "SHOE";
    }(Or || (Or = {})), function(e) {
        e[e.SKILL = 1] = "SKILL", e[e.ATTR = 2] = "ATTR";
    }(Pr || (Pr = {})), function(e) {
        e[e.INFINITE = 1] = "INFINITE", e[e.SALE_REGION = 2] = "SALE_REGION", e[e.PVP = 3] = "PVP", 
        e[e.LEVEL = 4] = "LEVEL", e[e.LOUNGE = 5] = "LOUNGE";
    }(Vr || (Vr = {}));
    let Gr = {
        RED_TASSEL_EQUIP: 54,
        RED_SPIRIT_EQUIP: 55,
        RED_SPIRIT_EQUIP1: 58,
        ACTIVITY_EQUIP1: 56,
        ACTIVITY_EQUIP2: 57,
        ACTIVITY_BARRETT: 61,
        FIRECRACKER: "10001",
        DIAMONDS: "2001",
        DIAMONDS1: "2002",
        GOLD: "1001",
        GOLD1: "1002",
        GOLD2: "1003",
        LAN: 6,
        TANK: 12,
        RPG: 9,
        FLY_GUN: 27,
        DI_JIA: 32,
        JU_LONG: 39,
        Fat: 40,
        DRAGON_GUN: 40,
        PROP_BOMB_ID: 8001,
        SUMMER_GUN: 50,
        SUMMER_GIFT_GUN_ITEM_ID: "4047",
        SUMMER_GIFT_SKIN_FRAGMENT_ITEM_ID: "6011",
        BOX_1: "10002",
        BOX_2: "10003",
        SNOW: 43,
        NOMONEY: 42
    };
    var Ur, Fr;
    !function(e) {
        e[e.GOLD = 1] = "GOLD", e[e.DIAMOND = 2] = "DIAMOND", e[e.EXP = 3] = "EXP", e[e.EQUIP = 4] = "EQUIP", 
        e[e.HERO = 5] = "HERO", e[e.HERO_DEBRIS = 6] = "HERO_DEBRIS", e[e.OTHER = 10] = "OTHER", 
        e[e.PART_DEBRIS = 7] = "PART_DEBRIS", e[e.PART = 8] = "PART";
    }(Ur || (Ur = {})), function(e) {
        e[e.BASE_ATTACK = 1] = "BASE_ATTACK", e[e.SKILL = 2] = "SKILL", e[e.BUFF = 3] = "BUFF";
    }(Fr || (Fr = {}));
    var Hr, Wr, Yr;
    !function(e) {
        e[e.CUBE_1 = 1] = "CUBE_1", e[e.CUBE_2 = 2] = "CUBE_2", e[e.TREE = 3] = "TREE";
    }(Hr || (Hr = {})), function(e) {
        e[e.ENEMY = 1] = "ENEMY", e[e.FRIEND = 2] = "FRIEND";
    }(Wr || (Wr = {})), function(e) {
        e[e.GET = -1] = "GET", e[e.COMPLETE = -3] = "COMPLETE", e[e.UNINDAY = -2] = "UNINDAY";
    }(Yr || (Yr = {}));
    let Xr = [ Er.NEW_GIFT, Er.ACTIVITYPLAYER, Er.SIGN, Er.SUPER_REWARD, Er.TURNTABLE, Er.NEW_YEAR_GIFT, Er.TASK, Er.GAMEBOX, Er.SUMMER_GIFT ];
    var Kr;
    !function(e) {
        e[e.RIFLE_GUN = 1] = "RIFLE_GUN", e[e.KNIFE = 2] = "KNIFE", e[e.SNIPER_GUN = 3] = "SNIPER_GUN", 
        e[e.HAND_GUN = 4] = "HAND_GUN", e[e.SUBMACHINE_GUN = 5] = "SUBMACHINE_GUN", e[e.MACHINE_GUN = 6] = "MACHINE_GUN", 
        e[e.SHOT_GUN = 7] = "SHOT_GUN", e[e.BOMB = 8] = "BOMB", e[e.MAGIC = 9] = "MAGIC";
    }(Kr || (Kr = {}));
    let zr = {
        OPEN: "open",
        CLOSE: "close"
    }, qr = 7;
    class Qr {
        static getDataByKey(e) {
            if (Qr.cache[e]) return Qr.cache[e];
            if (1 == e) {
                let t = new Qr();
                return t.id = 1, t.probability = 40, t.count = 1, Qr.cache[e] = t, t;
            }
            if (2 == e) {
                let t = new Qr();
                return t.id = 2, t.probability = 13, t.count = 2, Qr.cache[e] = t, t;
            }
            if (3 == e) {
                let t = new Qr();
                return t.id = 3, t.probability = 12, t.count = 3, Qr.cache[e] = t, t;
            }
            if (4 == e) {
                let t = new Qr();
                return t.id = 4, t.probability = 8, t.count = 4, Qr.cache[e] = t, t;
            }
            if (5 == e) {
                let t = new Qr();
                return t.id = 5, t.probability = 7, t.count = 5, Qr.cache[e] = t, t;
            }
            if (6 == e) {
                let t = new Qr();
                return t.id = 6, t.probability = 6, t.count = 6, Qr.cache[e] = t, t;
            }
            if (7 == e) {
                let t = new Qr();
                return t.id = 7, t.probability = 5, t.count = 7, Qr.cache[e] = t, t;
            }
            if (8 == e) {
                let t = new Qr();
                return t.id = 8, t.probability = 4, t.count = 8, Qr.cache[e] = t, t;
            }
            if (9 == e) {
                let t = new Qr();
                return t.id = 9, t.probability = 3, t.count = 9, Qr.cache[e] = t, t;
            }
            if (10 == e) {
                let t = new Qr();
                return t.id = 10, t.probability = 2, t.count = 10, Qr.cache[e] = t, t;
            }
        }
        static getDataByIndex(e) {
            return Qr.cache[this.keys[e]] ? Qr.cache[this.keys[e]] : this.getDataByKey(this.keys[e]);
        }
        static getAllData() {
            for (let e = 0; e < this.keys.length; e++) this.getDataByKey(this.keys[e]);
            return Qr.cache;
        }
        clear() {
            Qr.cache = {};
        }
    }
    Qr.cache = {}, Qr.keys = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];
    const Zr = 18e3, jr = 3600, Jr = 7200, $r = 10800, el = 14400;
    class tl {
        constructor() {
            this.time = 0, this.isNew = !1, this.id = 0, this.sceneCode = 0, this.gameCount = 0, 
            this.trialSkin = null, this.trialArm = null, this.roleTpl = {
                gold: 3e3,
                diamond: 0,
                level: 1,
                sign: {
                    day: 1,
                    ts: 0,
                    state: 0
                },
                sceneId: 0,
                roleSkin: {
                    id: 1,
                    lib: [ 1 ]
                },
                skin: {
                    id: 1,
                    gameCurLib: [ 1 ],
                    lib: [ 1 ],
                    gameCurPropLib: [ 8001, 2001 ],
                    propLib: [ 8001, 2001 ],
                    updateMultiple: 2,
                    maxMultiple: 4,
                    armQuality: null,
                    synthesisMaxId: 1,
                    partsSkin: {
                        curBagId: null,
                        curHeadId: null,
                        partLib: []
                    }
                },
                warehouseGroove: 3,
                matrix: [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
                maxUnLockArm: 1,
                buyByGoldNum: 0,
                buyByDiamondNum: 0,
                createTime: Math.floor(new Date().getTime() / 1e3),
                task: {
                    count: 1,
                    state: []
                },
                dan: {
                    id: 1,
                    star: 1
                },
                danAwards: [],
                danAwardsAd: [],
                roleExp: 0,
                equipTryCount: {},
                guide: Et.GAME_1,
                onceGame: {
                    ts: 0,
                    state: 0
                },
                popUpRule: {
                    gameNum: 0,
                    isNew: !0
                },
                autoOpenTime: 0,
                notifyVer: 0
            }, this.guideBtnType = vt.MODE, this.curOffinetime = 1, this.interstitialCreatCount = 0;
        }
        static getInstance() {
            return tl.instance || (tl.instance = new tl()), tl.instance;
        }
        initData(e = null) {
            console.log("shit initData"), e ? (this.setRoleInfo(e), this.isNew = !1) : this.setLocalRoleInfo(), 
            this.setTimer(Math.floor(.001 * new Date().getTime())), this.setSceneId(this.sceneCode);
        }
        setUpdate(t) {
            Laya.LocalStorage.setItem(e.IS_UPDATE, t);
        }
        getUpdate() {
            return Laya.LocalStorage.getItem(e.IS_UPDATE);
        }
        setRoleInfo(t, i = "0") {
            if ("{}" == JSON.stringify(t)) return this.setLocalRoleInfo(), void this.updateServer();
            this.setUpdate(i), this.roleInfo = t, Laya.LocalStorage.setItem(e.ROLE_INFO, JSON.stringify(t));
        }
        setLocalRoleInfo() {
            let t = Laya.LocalStorage.getItem(e.ROLE_INFO);
            if (t && "" != t) {
                try {
                    this.roleInfo = JSON.parse(t);
                } catch (e) {
                    e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                    return this.setRoleInfo(this.roleTpl), this.roleTpl;
                }
                return this.roleInfo;
            }
            return this.isNew = !0, this.setRoleInfo(this.roleTpl), this.roleTpl;
        }
        getRoleInfo() {
            return this.roleInfo;
        }
        setTimer(t) {
            this.time = t;
            let i = this;
            if (this.timer && clearInterval(this.timer), this.timer = setInterval(function() {
                i.time++, tl.onlineSec++, hl.platform == v.WEB && i.setOfflineTime();
            }, 1e3), this.roleInfo.sign && this.roleInfo.sign.ts < this.time && 1 == this.roleInfo.sign.state && (this.roleInfo.sign.state = 0, 
            this.roleInfo.sign.day = this.roleInfo.sign.day % 7 + 1, this.setRoleInfo(this.roleInfo)), 
            this.getDotRewardDayInfo().ts < this.time) {
                let t = 1e3 * this.getTime(), i = new Date(t);
                i.setHours(0), i.setMinutes(0), i.setSeconds(0), i.setMilliseconds(0);
                let a = Math.floor(i.getTime() / 1e3);
                Laya.LocalStorage.setItem(e.DOT_REWARD_DAY_COUNT, JSON.stringify({
                    ts: a,
                    count: 0
                }));
            }
            this.getOnceGame().ts < this.time && this.updateOnceGame(0), this.onLineLogin();
        }
        getTime() {
            return this.time;
        }
        updateServer() {
            Laya.LocalStorage.setItem(e.ROLE_INFO, JSON.stringify(this.roleInfo));
            let t = Laya.LocalStorage.getItem(e.PLATFORM_USER_ID);
            if (t && "" != t) {
                let e = {
                    appId: hl.appId,
                    openId: t,
                    roleInfo: JSON.stringify(this.roleInfo)
                };
                hl.platform != v.WX && hl.platform != v.QQ || 1 == hl.getStorage() && B.request(C.ROLE_INFO, "post", e, function(e) {
                    1 == e.result ? console.log("更新角色数据成功") : console.log("更新角色数据失败");
                });
            }
        }
        isAdLimit() {
            return !1;
        }
        setAdLimit() {
            Laya.LocalStorage.setItem(e.AD_LIMIT, this.getTime() + 3600 + "");
        }
        costGold(e) {
            let t = this.getGold();
            return t >= e && (t -= Math.floor(e), this.roleInfo.gold = t, this.setRoleInfo(this.roleInfo), 
            !0);
        }
        costDiamond(e) {
            let t = this.getDiamond();
            return t >= e && (t -= Math.floor(e), this.roleInfo.diamond = t, this.setRoleInfo(this.roleInfo), 
            L.notify(w.REFRESH_DIAMOND_VIEW), !0);
        }
        rewardGold(e) {
            let t = this.getGold();
            t += Math.floor(e), this.roleInfo.gold = Math.floor(t), this.setRoleInfo(this.roleInfo);
        }
        rewardDiamond(e) {
            let t = this.getDiamond();
            t += Math.floor(e), this.roleInfo.diamond = Math.floor(t), this.setRoleInfo(this.roleInfo), 
            L.notify(w.REFRESH_DIAMOND_VIEW);
        }
        getDiamond() {
            return this.roleInfo.diamond;
        }
        setSign() {
            if (0 == this.roleInfo.sign.state) {
                let e = 1e3 * this.getTime(), t = new Date(e);
                t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0);
                let i = Math.floor(t.getTime() / 1e3) + 86400 + 21600;
                this.roleInfo.sign.state = 1, this.roleInfo.sign.ts = i, this.setRoleInfo(this.roleInfo);
            }
        }
        getSign() {
            return this.roleInfo.sign;
        }
        getGold() {
            return this.roleInfo.gold;
        }
        getLevel() {
            return this.roleInfo.level;
        }
        setLevel(e) {
            this.gameCount++, ol.reportAnalyise("过关" + this.roleInfo.level), this.roleInfo.level < e + 1 && (this.roleInfo.level = e + 1), 
            this.setRoleInfo(this.roleInfo);
        }
        nextLevel() {
            this.setLevel(this.getLevel());
        }
        ruleCtrl(e = 1) {
            if (hl.platform != v.WX && hl.platform != v.QQ && hl.platform != v.TT) return !0;
            let t = JSON.parse(hl.getConfig().scene), i = this.getSceneId();
            if (!t[e]) return !0;
            for (let a in t[e]) if (t[e][a] == i) return !0;
            return console.log("scene", t), console.log("myScene", i), console.log("黑名单"), !1;
        }
        launch(e, t) {
            e.scene && (this.sceneCode = e.scene, console.log("进入场景值1：", e.scene), 1038 == e.scene || 1044 == e.scene || 1007 == e.scene || 1008 == e.scene || 1023 == e.scene && ol.isIOS()), 
            t && (this.options = e);
        }
        setSceneId(e) {
            e && (this.roleInfo.sceneId && 0 != this.roleInfo.sceneId || (this.roleInfo.sceneId = e), 
            this.setRoleInfo(this.roleInfo));
        }
        getSceneId() {
            return this.roleInfo ? this.roleInfo.sceneId ? (console.log("场景值：", this.roleInfo.sceneId), 
            this.roleInfo.sceneId) : 0 : this.sceneCode;
        }
        isShareLimit() {
            return !this.ruleCtrl() || (!!hl.isReviewVersion() || 0 == hl.getConfig().share_ctrl);
        }
        getVibrate() {
            let t = Laya.LocalStorage.getItem(e.VIBRATE);
            return t && "" != t ? "1" == t : (Laya.LocalStorage.setItem(e.VIBRATE, "1"), !0);
        }
        setVibrate() {
            "1" == Laya.LocalStorage.getItem(e.VIBRATE) ? Laya.LocalStorage.setItem(e.VIBRATE, "0") : Laya.LocalStorage.setItem(e.VIBRATE, "1");
        }
        getMusic() {
            let t = Laya.LocalStorage.getItem(e.MUSIC);
            return t && "" != t ? "1" == t : (Laya.LocalStorage.setItem(e.MUSIC, "1"), !0);
        }
        setMusic() {
            "1" == Laya.LocalStorage.getItem(e.MUSIC) ? (Laya.LocalStorage.setItem(e.MUSIC, "0"), 
            il.stopBGM()) : (Laya.LocalStorage.setItem(e.MUSIC, "1"), il.resumeBGM());
        }
        getEffect() {
            let t = Laya.LocalStorage.getItem(e.EFFECT);
            return t && "" != t ? "1" == t : (Laya.LocalStorage.setItem(e.EFFECT, "1"), !0);
        }
        setEffect() {
            "1" == Laya.LocalStorage.getItem(e.EFFECT) ? Laya.LocalStorage.setItem(e.EFFECT, "0") : Laya.LocalStorage.setItem(e.EFFECT, "1");
        }
        isBannerTouch() {
            return hl.platform == v.WEB || hl.platform == v.WEB_4399 || !(hl.platform == v.WX && Ts.gameNum <= 2 && this.isNew) && (!hl.isReviewVersion() && (hl.isZsCtrl ? U.isZsBannerCtrl() : !this.isMaskIOS() && !(!this.ruleCtrl() || !hl.carelessCtrl() || hl.isBlackRegion("1"))));
        }
        isMaskIOS() {
            let e = ol.getSystemInfo();
            return 1 == hl.getConfig().cut_ios && e && "ios" == e.platform ? (console.log("屏蔽IOS"), 
            !0) : (console.log("开放IOS"), !1);
        }
        getSelectSkin() {
            let e = this.getRoleInfo();
            return this.clickEquipIsTimeOut(), e.skin.id;
        }
        getSkinLib() {
            return this.getRoleInfo().skin.lib;
        }
        isHaveEquipById(e) {
            let t = tl.getInstance().getSkinLib();
            for (let i = 0; i < t.length; i++) {
                if (t[i] == e) return !0;
            }
            return !1;
        }
        getSkinGameCurLib() {
            return this.getRoleInfo().skin.gameCurLib;
        }
        updateSkinGameCurLib(e, t = null) {
            if (ns.curEquiplLibraryStep < Et.TOEQUIP && tl.getInstance().getGuide() < Et.TOEQUIP) return;
            let i = 1e4, a = null;
            for (let t = 0; t < this.roleInfo.skin.gameCurLib.length; t++) {
                if (this.roleInfo.skin.gameCurLib[t] == e) return;
                this.roleInfo.skin.gameCurLib[t] <= i && (i = this.roleInfo.skin.gameCurLib[t], 
                a = t);
            }
            if (this.isUseCurlLibById(t)) {
                this.roleInfo.skin.gameCurLib[a];
                for (let s = 0; s < this.roleInfo.skin.gameCurLib.length; s++) {
                    if (this.roleInfo.skin.gameCurLib[s] == e) return;
                    this.roleInfo.skin.gameCurLib[s] == t && (i = this.roleInfo.skin.gameCurLib[s], 
                    a = s);
                }
                this.roleInfo.skin.gameCurLib[a] = e, this.roleInfo.skin.id = e;
            } else this.roleInfo.skin.gameCurLib.length + this.roleInfo.skin.gameCurPropLib.length >= 4 ? (this.roleInfo.skin.gameCurLib[a] = e, 
            this.roleInfo.skin.id = e) : (this.roleInfo.skin.gameCurLib.push(e), this.roleInfo.skin.id = e);
            i = -1;
            for (let e = 0; e < this.roleInfo.skin.gameCurLib.length; e++) this.roleInfo.skin.gameCurLib[e] >= i && (i = this.roleInfo.skin.gameCurLib[e], 
            a = e);
            this.roleInfo.skin.id = this.roleInfo.skin.gameCurLib[a], this.setRoleInfo(this.roleInfo);
        }
        getUseEquip() {
            return this.roleInfo.skin.id;
        }
        isUseCurlLibById(e) {
            let t = this.roleInfo.skin.gameCurLib;
            for (let i = 0; i < t.length; i++) {
                if (t[i] == e) return !0;
            }
            return !1;
        }
        removeSkinGameCurLib(e) {
            this.roleInfo.skin.gameCurLib = e, this.roleInfo.skin.id = this.roleInfo.skin.gameCurLib[0], 
            this.setRoleInfo(this.roleInfo);
        }
        setSelectSkin(e) {
            let t = this.getRoleInfo();
            for (let i in t.skin.lib) if (t.skin.lib[i] == e) return t.skin.id = e, void this.setRoleInfo(t);
            console.log("皮肤" + e + "未拥有");
        }
        setSkinLib(e) {
            let t = this.getRoleInfo();
            for (let i in t.skin.lib) if (t.skin.lib[i] == e) return !1;
            return this.addEquipRed(e), t.skin.lib.push(e), t.skin.lib.sort(function(e, t) {
                return e > t ? 1 : e < t ? -1 : 0;
            }), this.setRoleInfo(t), !0;
        }
        getPlatformUserId(t, i = null) {
            let a = Laya.LocalStorage.getItem(e.PLATFORM_USER_ID);
            "" != a && a ? (console.log("openId", a), t(a)) : ol.login(function(a) {
                B.request(C.PLATFORM_USER_ID, "POST", {
                    appId: hl.appId,
                    code: a
                }, function(i) {
                    console.log(i), 1 == i.result && (console.log("openId", i.data.userId), Laya.LocalStorage.setItem(e.PLATFORM_USER_ID, i.data.userId), 
                    t(i.data.userId));
                }, i);
            }, i);
        }
        loginDay() {
            let e = this.roleInfo.createTime, t = new Date();
            t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0);
            let i = Math.floor(t.getTime() / 1e3);
            return (t = new Date(1e3 * e)).setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0), 
            (i - (e = Math.floor(t.getTime() / 1e3))) / 86400;
        }
        getDotRewardCount() {
            let t = Laya.LocalStorage.getItem(e.DOT_REWARD_COUNT);
            return "" != t && t ? parseInt(t) : 0;
        }
        getDotRewardDayCount() {
            return this.getDotRewardDayInfo().count;
        }
        getDotRewardDayInfo() {
            let t = Laya.LocalStorage.getItem(e.DOT_REWARD_DAY_COUNT);
            if ("" != t && t) {
                let e = JSON.parse(t);
                return console.log(e), e;
            }
            {
                let t = 1e3 * this.getTime(), i = new Date(t);
                i.setHours(0), i.setMinutes(0), i.setSeconds(0), i.setMilliseconds(0);
                let a = {
                    count: 0,
                    ts: Math.floor(i.getTime() / 1e3) + 86400
                };
                return Laya.LocalStorage.setItem(e.DOT_REWARD_DAY_COUNT, JSON.stringify(a)), console.log(a), 
                a;
            }
        }
        setDotRewardDayCount() {
            let t = this.getDotRewardDayInfo();
            t.count++, Laya.LocalStorage.setItem(e.DOT_REWARD_DAY_COUNT, JSON.stringify(t));
        }
        isShowDotView() {
            return hl.platform != v.WEB && hl.platform != v.WEB_4399 && (!!this.isBannerTouch() && 0 != hl.getDotLimit("1", this.getDotRewardDayCount()));
        }
        getMatrix() {
            return 13 == this.roleInfo.matrix.length && (this.roleInfo.matrix.splice(this.roleInfo.matrix.length - 1, 1), 
            this.setRoleInfo(this.roleInfo)), this.roleInfo.matrix;
        }
        updateMatrix(e) {
            this.roleInfo.matrix = e, this.updateMaxUnLockArm(), this.setRoleInfo(this.roleInfo);
        }
        openNewMatrix() {
            this.roleInfo.matrix.length >= 12 || (this.roleInfo.matrix.push(-1), this.setRoleInfo(this.roleInfo));
        }
        refreshCanbuyArm() {
            let e = this.roleInfo.matrix, t = e[0], i = 1;
            for (let i = 0; i < e.length; i++) {
                let a = e[i];
                a > t && (t = a);
            }
            t > 4 && (i = t - 4), L.notify(w.REFRESH_CANBUY_ARM, {
                id: i
            });
        }
        updateMaxUnLockArm() {
            let e = this.roleInfo.matrix[0];
            for (let t = 0; t < this.roleInfo.matrix.length; t++) {
                let i = this.roleInfo.matrix[t];
                i > e && (e = i);
            }
            this.roleInfo.maxUnLockArm < e && (this.roleInfo.maxUnLockArm = e);
        }
        getMaxUnLockArm() {
            let e = this.roleInfo.matrix[0];
            for (let t = 0; t < this.roleInfo.matrix.length; t++) {
                let i = this.roleInfo.matrix[t];
                i > e && (e = i);
            }
            return this.roleInfo.maxUnLockArm < e && (this.roleInfo.maxUnLockArm = e, this.setRoleInfo(this.roleInfo)), 
            this.roleInfo.maxUnLockArm;
        }
        updateBuyByGoldNum() {
            this.roleInfo.buyByGoldNum++, this.setRoleInfo(this.roleInfo), hs.setRewardForInsufficientGoldCoins(), 
            hs.setfreeRewardForGoldCoins();
        }
        getBuyByGoldNum() {
            return this.roleInfo.buyByGoldNum;
        }
        updateBuyByDiamondNum() {
            this.roleInfo.buyByDiamondNum++, this.setRoleInfo(this.roleInfo), hs.setRewardForInsufficientDiamonds(), 
            hs.setfreeDiamondsRewards();
        }
        getBuyByDiamondNum() {
            return this.roleInfo.buyByDiamondNum;
        }
        getUpdateMultiple() {
            return this.roleInfo.skin.updateMultiple || (this.roleInfo.skin.updateMultiple = 5, 
            this.setRoleInfo(this.roleInfo)), this.roleInfo.skin.updateMultiple;
        }
        getMaxMultiple() {
            return this.roleInfo.skin.maxMultiple || (this.roleInfo.skin.maxMultiple = 5, this.setRoleInfo(this.roleInfo)), 
            this.roleInfo.skin.maxMultiple;
        }
        getArmQuality() {
            if (!this.roleInfo.skin.armQuality) {
                let e = this.roleInfo.skin.lib.length, t = [];
                for (let i = 0; i < e; i++) {
                    let e = {
                        id: 1,
                        lv: 1,
                        fire: A.getDataByKey(1).hit,
                        pierceThrough: A.getDataByKey(1).pierceThrough,
                        firingRate: A.getDataByKey(1).interval,
                        numberOfBullets: A.getDataByKey(1).magazineBullet,
                        range: A.getDataByKey(1).range,
                        accurate: 100,
                        ammunitionChange: A.getDataByKey(1).bullets,
                        sight: A.getDataByKey(1).sight,
                        movingSpeed: A.getDataByKey(1).movingSpeed,
                        biochemicalCharging: A.getDataByKey(1).biochemicalCharging,
                        bodyMultiple: A.getDataByKey(1).bodyMultiple,
                        headHit: A.getDataByKey(1).headHit,
                        limbMultiple: A.getDataByKey(1).limbMultiple,
                        limbHit: A.getDataByKey(1).limbHit,
                        maxBodyHit: A.getDataByKey(1).maxBodyHit,
                        maxHeadHit: A.getDataByKey(1).maxHeadHit,
                        maxLimbHit: A.getDataByKey(1).maxLimbHit
                    };
                    t.push(e);
                }
                this.roleInfo.skin.armQuality = t, this.setRoleInfo(this.roleInfo);
            }
            return this.roleInfo.skin.armQuality;
        }
        addNewArmQuality(e) {
            let t = this.getArmQuality();
            for (let i = 0; i < t.length; i++) {
                if (t[i].id == e.id) return;
            }
            this.getArmQuality().push(e), this.setRoleInfo(this.roleInfo);
        }
        getArmQualityByID(e) {
            if (8001 == e || 2001 == e) return null;
            return {
                id: 1,
                lv: 1,
                fire: A.getDataByKey(e).hit,
                pierceThrough: A.getDataByKey(e).pierceThrough,
                firingRate: A.getDataByKey(e).interval,
                numberOfBullets: A.getDataByKey(e).magazineBullet,
                range: A.getDataByKey(e).range,
                accurate: 100,
                ammunitionChange: A.getDataByKey(e).bullets,
                sight: A.getDataByKey(e).sight,
                movingSpeed: A.getDataByKey(e).movingSpeed,
                biochemicalCharging: A.getDataByKey(e).biochemicalCharging,
                bodyMultiple: A.getDataByKey(e).bodyMultiple,
                headHit: A.getDataByKey(e).headHit,
                limbMultiple: A.getDataByKey(e).limbMultiple,
                limbHit: A.getDataByKey(e).limbHit,
                maxBodyHit: A.getDataByKey(e).maxBodyHit,
                maxHeadHit: A.getDataByKey(e).maxHeadHit,
                maxLimbHit: A.getDataByKey(e).maxLimbHit
            };
        }
        removeArmQualityByID(e) {
            let t = this.getArmQuality(), i = null;
            for (let a = 0; a < t.length; a++) {
                e == t[a].id && (i = a);
            }
            null != i && t.splice(i, 1), this.updateLocal();
        }
        updateArmQuality(e) {
            this.getArmQuality();
        }
        getWarehouseGroove() {
            return this.roleInfo.warehouseGroove || (this.roleInfo.warehouseGroove = 2, this.setRoleInfo(this.roleInfo)), 
            this.roleInfo.warehouseGroove;
        }
        updateWarehouseGroove() {
            9 != this.getWarehouseGroove() && (this.roleInfo.warehouseGroove++, this.setRoleInfo(this.roleInfo));
        }
        getSelectRoleSkin() {
            let e = this.getRoleInfo();
            return hl.isShowReviewUI() ? 10 : e.roleSkin.id;
        }
        getRoleSkinLib() {
            return this.getRoleInfo().roleSkin.lib;
        }
        setSelectRoleSkin(e) {
            let t = this.getRoleInfo();
            console.log("设置使用的ID:", e);
            for (let i in t.roleSkin.lib) if (t.roleSkin.lib[i] == e) return t.roleSkin.id = e, 
            this.setRoleInfo(t), void L.notify(w.REFRESH_SKIN);
            console.log("皮肤" + e + "未拥有");
        }
        checkIsHasRoleSkin(e) {
            let t = this.getRoleInfo();
            for (let i in t.roleSkin.lib) if (t.roleSkin.lib[i] == e) return !0;
            return !1;
        }
        checkArm(e) {
            let t = this.getSkinLib();
            for (let i = 0; i < t.length; i++) if (e == t[i]) return !0;
            return !1;
        }
        setRoleSkinLib(e) {
            let t = this.getRoleInfo();
            for (let i in t.roleSkin.lib) if (t.roleSkin.lib[i] == e) return;
            t.roleSkin.lib.push(e), t.roleSkin.lib.sort(function(e, t) {
                return e > t ? 1 : e < t ? -1 : 0;
            }), this.setRoleInfo(t);
        }
        getGameCurPropLib() {
            return this.getRoleInfo().skin.gameCurPropLib;
        }
        getPropLib() {
            return this.getRoleInfo().skin.propLib;
        }
        removeSkinGameCurPropLib(e) {
            this.roleInfo.skin.gameCurPropLib = e, this.setRoleInfo(this.roleInfo);
        }
        updateSkinGameCurPropLib(e) {
            for (let t = 0; t < this.roleInfo.skin.gameCurPropLib.length; t++) if (this.roleInfo.skin.gameCurPropLib[t] == e) return;
            this.roleInfo.skin.gameCurPropLib.push(e), this.setRoleInfo(this.roleInfo);
        }
        updateLocal() {
            this.setRoleInfo(this.roleInfo);
        }
        getOnlineRewardInfo() {
            let e = this.getRoleInfo();
            return e.onlineReward || (e.onlineReward = {
                ts: this.getTime() + 480,
                state: 0
            }, this.updateLocal()), e.onlineReward;
        }
        reciveOnlineReward() {
            let e = this.getOnlineRewardInfo();
            return e.ts <= this.getTime() && (e.ts = this.getTime() + 480, !0);
        }
        isCanReciveOnlineReward() {
            return this.getOnlineRewardInfo().ts <= this.getTime();
        }
        setOfflineTime() {
            this.roleInfo && (this.roleInfo.offlineTime = this.getTime(), this.updateLocal(), 
            this.offOnLine());
        }
        getOfflineTime() {
            return this.roleInfo.offlineTime || (this.roleInfo.offlineTime = this.getTime(), 
            this.updateLocal()), this.roleInfo.offlineTime;
        }
        isCanOpenOfflineView() {
            let e = this.getOfflineTime(), t = this.getTime();
            return t - e >= jr && t - e < Jr ? (tl.getInstance().curOffinetime = 1, !0) : t - e >= Jr && t - e < $r ? (tl.getInstance().curOffinetime = 2, 
            !0) : t - e >= $r && t - e < el ? (tl.getInstance().curOffinetime = 3, !0) : t - e >= el && t - e < Zr ? (tl.getInstance().curOffinetime = 4, 
            !0) : t - e > Zr && (tl.getInstance().curOffinetime = 5, !0);
        }
        getSynthesisMaxId() {
            let e = this.getRoleInfo();
            return e.skin.synthesisMaxId || (e.skin.synthesisMaxId = 1, this.updateLocal()), 
            e.skin.synthesisMaxId;
        }
        updateSynthesisMaxId(e) {
            let t = this.getRoleInfo();
            this.getSynthesisMaxId() >= e || (t.skin.synthesisMaxId = e, console.log("当前最高等级：", t.skin.synthesisMaxId), 
            this.updateLocal());
        }
        getTask() {
            let e, t = this.getRoleInfo();
            t.task ? e = t.task : (t.task = {
                count: 1,
                state: []
            }, e = t.task);
            let i = this.loginDay() % 7 + 1;
            return 0 == i && e.state.length > 1 && (e.count += 1, e.state = []), e.state.length != i && e.state.push(0), 
            t.task = e, this.setRoleInfo(t), e.state;
        }
        getTaskStateByDay(e) {
            let t = this.getTask();
            if (t.length >= e) {
                let i = t[e - 1];
                if (i != Yr.UNINDAY && i != Yr.COMPLETE && i != Yr.GET) {
                    const t = i;
                    let a = xa.getDataByKey(e), s = Ba.getTaskType(a.taskType);
                    this.roleInfo.task.state[e - 1] = t >= s.data ? Yr.COMPLETE : t, this.setRoleInfo(this.roleInfo);
                }
                return i;
            }
            return Yr.UNINDAY;
        }
        isShowTaskRed() {
            for (let e = 1; e <= 7; e++) {
                if (this.getTaskStateByDay(e) == Yr.COMPLETE) return !0;
            }
            return !1;
        }
        isShowTaskAtuo() {
            for (let e = 1; e <= 7; e++) {
                const t = this.getTaskStateByDay(e);
                if (t != Yr.GET && t != Yr.UNINDAY) return !0;
            }
            return !1;
        }
        doTaksByDay(e, t) {
            let i = this.getTaskStateByDay(e);
            if (i != Yr.UNINDAY && i != Yr.COMPLETE && i != Yr.GET) {
                const a = i;
                let s = xa.getDataByKey(e), n = Ba.getTaskType(s.taskType);
                this.roleInfo.task.state[e - 1] = a + t >= n.data ? Yr.COMPLETE : a + t, this.setRoleInfo(this.roleInfo);
            }
        }
        reciveTaskAwardByDay(e) {
            return this.getTaskStateByDay(e) == Yr.COMPLETE && (this.roleInfo.task.state[e - 1] = Yr.GET, 
            this.setRoleInfo(this.roleInfo), !0);
        }
        getDanInfo() {
            return this.roleInfo.dan || (this.roleInfo.dan = {
                id: 1,
                star: 0
            }), this.roleInfo.dan && this.roleInfo.dan.id > J.keys[J.keys.length - 1] && (this.roleInfo.dan.id = J.keys[J.keys.length - 1]), 
            this.roleInfo.dan;
        }
        getAllDanStar() {
            let e = this.getDanInfo(), t = e.star;
            for (let i = 1; i < e.id; i++) {
                t += J.getDataByKey(i).star;
            }
            return t;
        }
        translateAllStarToDan(e) {
            let t = 1;
            if (e <= 0) return {
                id: t,
                star: 0
            };
            let i = J.getAllData();
            for (let a in i) {
                if (!(i[a].star < e)) {
                    t = i[a].id;
                    break;
                }
                e -= i[a].star;
            }
            return {
                id: t,
                star: e
            };
        }
        increaseStar() {
            let e = this.roleInfo.dan, t = J.getDataByKey(e.id), i = !1;
            return e.star + 1 > t.star && e.id < J.keys[J.keys.length - 1] ? (e.id += 1, e.id > J.keys[J.keys.length - 1] ? (e.id = J.keys[J.keys.length - 1], 
            e.star += 1) : e.star = 1, i = !0, Ba.completeTask(wa.DAN_UP)) : e.star += 1, this.setRoleInfo(this.roleInfo), 
            i;
        }
        reduceStar() {
            let e = this.roleInfo.dan, t = !1;
            if (e.star - 1 < 0) if (e.id > 1) {
                e.id -= 1;
                let i = J.getDataByKey(e.id);
                e.star = i.star - 1, t = !0;
            } else e.star = 0; else e.star -= 1;
            return this.setRoleInfo(this.roleInfo), t;
        }
        getDanAwards() {
            return this.roleInfo.danAwards || (this.roleInfo.danAwards = [], this.setRoleInfo(this.roleInfo)), 
            this.roleInfo.danAwards;
        }
        setDanAward(e) {
            let t = this.getDanAwards();
            for (let i = 0; i < t.length; i++) {
                if (e == t[i]) return console.log("当前段位奖励以及领取过了"), !1;
            }
            return t.push(e), this.setRoleInfo(this.roleInfo), !0;
        }
        getDanAwardsAd() {
            return this.roleInfo.danAwardsAd || (this.roleInfo.danAwardsAd = [], this.setRoleInfo(this.roleInfo)), 
            this.roleInfo.danAwardsAd;
        }
        setDanAwardAd(e) {
            let t = this.getDanAwardsAd();
            for (let i = 0; i < t.length; i++) {
                if (e == t[i]) return console.log("当前段位奖励以及领取过了"), !1;
            }
            return t.push(e), this.setRoleInfo(this.roleInfo), !0;
        }
        getNewGiftInfo() {
            return void 0 === this.roleInfo.newGift && (this.roleInfo.newGift = {
                state: 0
            }, this.updateLocal()), this.roleInfo.newGift;
        }
        reciveNewGift() {
            this.getNewGiftInfo().state = 1, this.updateLocal();
        }
        increaseExp(e, t = null) {
            let i = this.getRoleExpData().lv;
            this.getRoleExpData().curExp + e > this.getRoleExpData().exp && (e = this.getRoleExpData().exp - this.getRoleExpData().curExp), 
            this.roleInfo.roleExp += e;
            let a = this.getRoleExpData().lv;
            return this.setRoleInfo(this.roleInfo), a > i && (this.setRoleInfo(this.roleInfo), 
            t && t(), Ts.isLevelUp = !0, !0);
        }
        getRoleExpData() {
            let e = Bs.keys, t = 0, i = this.roleInfo.roleExp;
            for (let a = 0; a < e.length; a++) {
                let e = Bs.getDataByIndex(a);
                if (t += e.exp, i - e.exp >= 0 && (i -= e.exp), t > this.roleInfo.roleExp) return {
                    exp: e.exp,
                    curExp: i,
                    lv: e.id
                };
            }
            let a = Bs.getDataByIndex(e.length - 1);
            return {
                exp: a.exp,
                curExp: a.exp,
                lv: a.id
            };
        }
        isOpenEquipTry() {
            return !0;
        }
        getEquipTryCount(e) {
            return this.roleInfo.equipTryCount ? this.roleInfo.equipTryCount[e] ? this.roleInfo.equipTryCount[e] : 0 : (this.roleInfo.equipTryCount = {}, 
            this.updateLocal(), 0);
        }
        addEquipTryCount(e) {
            0 == this.getEquipTryCount(e) ? this.roleInfo.equipTryCount[e] = 1 : this.roleInfo.equipTryCount[e] += 1, 
            this.updateLocal();
        }
        addEquipRed(t) {
            let i = this.getEquipRed();
            if (i) i[t] = 1, Laya.LocalStorage.setItem(e.EQUIP_RED, JSON.stringify(i)); else {
                let i = {};
                i[t] = 1, Laya.LocalStorage.setItem(e.EQUIP_RED, JSON.stringify(i));
            }
        }
        setEquipRed(t) {
            let i = this.getEquipRed();
            i && i[t] ? (i[t] = null, Laya.LocalStorage.setItem(e.EQUIP_RED, JSON.stringify(i))) : console.log("已经设置为旧武器");
        }
        getEquipRedById(e) {
            let t = this.getEquipRed();
            return !(!t || !t[e]);
        }
        getEquipRed() {
            let t = Laya.LocalStorage.getItem(e.EQUIP_RED);
            if (t) {
                return JSON.parse(t);
            }
            return null;
        }
        isShowEquipRed() {
            let e = this.getEquipRed();
            if (e) {
                for (const t in e) if (Object.prototype.hasOwnProperty.call(e, t)) {
                    if (e[t]) return !0;
                }
                return !1;
            }
            return !1;
        }
        getGuide() {
            let e = this.getRoleInfo();
            return void 0 === e.guide && (e.guide = Et.MAX, this.setPopUpRuleIsNew()), W.gmDebug ? Et.MAX : this.isNew ? this.roleInfo.guide : Et.MAX;
        }
        setGuide(e = null) {
            let t = this.getGuide();
            if (t >= Et.FINISH) return void console.log("已完成所以教程");
            xt.reportGuide(t);
            let i = this.getRoleInfo();
            null == e ? (i.guide = t + 1, console.log("当前下一步：", i.guide)) : i.guide = e, ns.curEquiplLibraryStep == Et.GAME_2 && (i.guide != Et.EQUIP && i.guide != Et.BUY && i.guide != Et.SYNTHESIS && i.guide != Et.WAREHOUSE && i.guide != Et.TOEQUIP || (i.guide = Et.GAME_2)), 
            this.updateLocal();
        }
        setPlatfromUserInfo(t) {
            Laya.LocalStorage.setItem(e.PLATFORM_USER_INFO, JSON.stringify(t));
        }
        getPlatfromUserInfo() {
            let t = Laya.LocalStorage.getItem(e.PLATFORM_USER_INFO);
            return t && t.length > 0 ? JSON.parse(t) : null;
        }
        getOnceGame() {
            let e = this.getRoleInfo();
            if (!e.onceGame) {
                let t = 1e3 * this.getTime(), i = new Date(t);
                i.setHours(0), i.setMinutes(0), i.setSeconds(0), i.setMilliseconds(0);
                let a = Math.floor(i.getTime() / 1e3) + 86400;
                e.onceGame = {
                    ts: a,
                    state: 0
                }, this.updateLocal();
            }
            return e.onceGame;
        }
        getIsOnceGame() {
            return 0 == this.getOnceGame().state;
        }
        updateOnceGame(e) {
            let t = this.getOnceGame();
            if (1 != e || 1 != t.state) {
                if (0 == e) {
                    let e = 1e3 * this.getTime(), t = new Date(e);
                    t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0);
                    let i = Math.floor(t.getTime() / 1e3) + 86400;
                    this.roleInfo.onceGame.ts = i;
                }
                this.roleInfo.onceGame.state = e, this.updateLocal();
            }
        }
        getSuperEquipId() {
            let e = {};
            e[Gr.RED_TASSEL_EQUIP] = 1, e[Gr.RED_SPIRIT_EQUIP] = 1, e[Gr.RED_SPIRIT_EQUIP1] = 1;
            let t = tl.getInstance().getSkinLib();
            for (let i = 0; i < t.length; i++) {
                const a = t[i];
                a == Gr.RED_TASSEL_EQUIP ? e[a] = 0 : a == Gr.RED_SPIRIT_EQUIP ? e[a] = 0 : a == Gr.RED_SPIRIT_EQUIP1 && (e[a] = 0);
            }
            let i = [];
            for (const t in e) if (Object.prototype.hasOwnProperty.call(e, t)) {
                e[t] && i.push(t);
            }
            return i.length > 0 ? Number(i[Math.floor(P.random(i.length, 0))]) : null;
        }
        isCanGetActivityByType(e) {
            switch (e) {
              case Qs.DOUBLE_FOX:
                return !this.isHaveEquipById(Gr.ACTIVITY_EQUIP1) && !this.isHaveEquipById(Gr.ACTIVITY_EQUIP2);

              case Qs.BARRETT:
                return !this.isHaveEquipById(Gr.ACTIVITY_BARRETT);
            }
            return !1;
        }
        reciveFirecracker(e) {
            this.getFirecrackerInfo().count += e, this.updateLocal();
        }
        getFirecrackerInfo() {
            return this.roleInfo.firecracker || (this.roleInfo.firecracker = {
                count: 0
            }, this.updateLocal()), this.roleInfo.firecracker;
        }
        setEquipHaveTime(e, t = 0) {
            this.getEquipHaveTime(e), this.roleInfo.equipHaveTime[e] ? this.roleInfo.equipHaveTime[e] += t : this.roleInfo.equipHaveTime[e] = t + this.getTime(), 
            0 == t && (this.roleInfo.equipHaveTime[e] = null), this.updateLocal();
        }
        getEquipHaveTime(e = null) {
            return this.roleInfo.equipHaveTime || (this.roleInfo.equipHaveTime = {}, this.updateLocal()), 
            this.roleInfo.equipHaveTime[e] ? this.roleInfo.equipHaveTime[e] : 0;
        }
        clickEquipIsTimeOut() {
            this.getEquipHaveTime();
            for (const e in this.roleInfo.equipHaveTime) if (Object.prototype.hasOwnProperty.call(this.roleInfo.equipHaveTime, e)) {
                const t = this.roleInfo.equipHaveTime[e];
                t && this.getTime() > t && (console.log("武器到期"), this.roleInfo.equipHaveTime[e] = null, 
                this.removeSkin(e));
            }
        }
        removeSkin(e) {
            this.removeArmQualityByID(e);
            {
                let t = this.roleInfo.skin.lib, i = null;
                for (let a = 0; a < t.length; a++) {
                    t[a] == e && (i = a);
                }
                null != i && this.roleInfo.skin.lib.splice(i, 1);
            }
            {
                let t = this.roleInfo.skin.gameCurLib, i = null;
                for (let a = 0; a < t.length; a++) {
                    t[a] == e && (i = a);
                }
                null != i && (this.roleInfo.skin.gameCurLib.splice(i, 1), 0 == this.roleInfo.skin.gameCurLib.length && (this.roleInfo.skin.gameCurLib[0] = this.roleInfo.skin.lib[this.roleInfo.skin.lib.length - 1]), 
                this.removeSkinGameCurLib(this.roleInfo.skin.gameCurLib));
            }
            this.updateLocal();
        }
        isShowNewYearGift() {
            return !(tl.getInstance().getFirecrackerInfo().count >= xs.getDataByKey(xs.keys[xs.keys.length - 1]).cost);
        }
        isInterstitialTouch() {
            return !!this.isBannerTouch() && (0 != hl.getInterstitialTouchCount() && (this.interstitialCreatCount += 1, 
            console.log("interstitialCreatCount" + this.interstitialCreatCount), console.log("ConfigManager.getInterstitialTouchCount()" + hl.getInterstitialTouchCount()), 
            this.interstitialCreatCount >= hl.getInterstitialTouchCount() && (this.interstitialCreatCount = 0, 
            !0)));
        }
        getTurnInfo() {
            return this.roleInfo.turnInfo || (this.roleInfo.turnInfo = {
                state: 1,
                lib: []
            }, this.updateLocal()), this.roleInfo.turnInfo;
        }
        setTurnAward(e) {
            let t = this.getTurnInfo();
            for (let i = 0; i < t.lib.length; i++) {
                if (t.lib[i] == e) return void console.log("已经领取过此索引");
            }
            t.lib.push(e), 8 == t.lib.length && (console.log("进入下一轮"), t.state += 1, t.lib = []), 
            this.updateLocal();
        }
        isGetTurnAward(e) {
            let t = this.getTurnInfo();
            for (let i = 0; i < t.lib.length; i++) {
                if (t.lib[i] == e) return !0;
            }
            return !1;
        }
        getPartsSkin() {
            if (!this.roleInfo.skin.partsSkin) {
                let e = {
                    curBagId: null,
                    curHeadId: null,
                    partLib: []
                };
                this.roleInfo.skin.partsSkin = e, this.setRoleInfo(this.roleInfo);
            }
            return this.roleInfo.skin.partsSkin;
        }
        setPartsSkin(e) {
            let t = this.getPartsSkin();
            for (let i = 0; i < t.partLib.length; i++) if (e == t.partLib[i]) return;
            t.partLib.push(e);
            let i = ee.getDataByKey(e);
            1 == i.partType ? t.curBagId = e : 2 == i.partType ? t.curHeadId = e : 3 == i.partType && (t.curBagId = e), 
            this.roleInfo.skin.partsSkin = t, this.setRoleInfo(this.roleInfo);
        }
        setTargetPart(e) {
            let t = this.getPartsSkin(), i = ee.getDataByKey(e);
            1 == i.partType ? t.curBagId = e : 2 == i.partType ? t.curHeadId = e : 3 == i.partType && (t.curBagId = e), 
            this.roleInfo.skin.partsSkin = t, this.setRoleInfo(this.roleInfo);
        }
        getTargetPart(e) {
            let t = this.getPartsSkin();
            return 1 == e ? t.curBagId : 2 == e ? t.curHeadId : 3 == e ? t.curBagId : void 0;
        }
        checkPart(e) {
            let t = this.getPartLib();
            for (let i = 0; i < t.length; i++) if (e == t[i]) return !0;
            return !1;
        }
        getPartLib() {
            return this.getPartsSkin().partLib;
        }
        removePart(e) {
            let t = this.getPartsSkin();
            1 == e ? t.curBagId = null : 2 == e ? t.curHeadId = null : 3 == e && (t.curBagId = null), 
            this.roleInfo.skin.partsSkin = t, this.setRoleInfo(this.roleInfo);
        }
        getFragmentList() {
            if (!this.roleInfo.fragmentList) {
                let e = [];
                this.roleInfo.fragmentList = e, this.setRoleInfo(this.roleInfo);
            }
            return this.roleInfo.fragmentList;
        }
        setFragmentList(e) {
            let t = this.getFragmentList(), i = !1;
            for (let a = 0; a < t.length; a++) {
                let s = t[a];
                if (s.type == e.type && s.id == e.id) {
                    switch (s.num += e.num, this.roleInfo.fragmentList = t, e.type) {
                      case Ur.HERO_DEBRIS:
                        Be.getDataByKey(Is.getDataByKey(e.id).extra()).cost <= s.num && !this.checkIsHasRoleSkin(Is.getDataByKey(e.id).extra()) && (i = !0);
                        break;

                      case Ur.PART_DEBRIS:
                        ee.getDataByKey(Is.getDataByKey(e.id).extra()).cost <= s.num && !this.checkPart(Is.getDataByKey(e.id).extra()) && (i = !0);
                    }
                    return this.setRoleInfo(this.roleInfo), i;
                }
            }
            switch (e.type) {
              case Ur.HERO_DEBRIS:
                Be.getDataByKey(Is.getDataByKey(e.id).extra()).cost <= e.num && (i = !0);
                break;

              case Ur.PART_DEBRIS:
                ee.getDataByKey(Is.getDataByKey(e.id).extra()).cost <= e.num && (i = !0);
            }
            return t.push(e), this.roleInfo.fragmentList = t, this.setRoleInfo(this.roleInfo), 
            i;
        }
        getTargetFragment(e) {
            let t = this.getFragmentList();
            for (let i = 0; i < t.length; i++) {
                let a = t[i];
                if (a.type == e.type && a.id == e.id) return a.num;
            }
            return 0;
        }
        getBoxTragmentId(e = !0, t = !0) {
            let i = [], a = [];
            if (e) for (let e = 0; e < Be.keys.length; e++) {
                const t = Be.getDataByIndex(e);
                3 == t.costType && (this.checkIsHasRoleSkin(t.id) || i.push(t));
            }
            if (t) for (let e = 0; e < ee.keys.length; e++) {
                const t = ee.getDataByIndex(e);
                3 == t.costType && (this.checkPart(t.id) || a.push(t));
            }
            let s = 1, n = P.random(100, 0), o = 0;
            if (e && t) for (let e = 0; e < Qr.keys.length; e++) {
                const t = Qr.getDataByIndex(e);
                if (n <= t.probability + o) {
                    s = t.count;
                    break;
                }
                o = t.probability + o;
            }
            let r, l = i.length + a.length;
            if (0 != l) if (0 == i.length || 0 == a.length) if (0 != i.length) {
                let e = i[Math.floor(P.random(i.length, 0))], t = e ? e.id : null;
                r = t ? Ur.HERO_DEBRIS.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t) : t;
            } else {
                let e = a[Math.floor(P.random(a.length, 0))], t = e ? e.id : null;
                r = t ? Ur.PART_DEBRIS.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t) : t;
            } else if (P.random(l, 0) > i.length) {
                let e = i[Math.floor(P.random(i.length, 0))], t = e ? e.id : null;
                r = t ? Ur.HERO_DEBRIS.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t) : t;
            } else {
                let e = a[Math.floor(P.random(a.length, 0))], t = e ? e.id : null;
                r = t ? Ur.PART_DEBRIS.toString() + (t > 99 ? t : t > 9 ? "0" + t : "00" + t) : t;
            }
            return r ? {
                itemId: r,
                count: s
            } : (hs.setfreeRewardForGoldCoins(), {
                itemId: Gr.GOLD,
                count: hs.curFreeGoldRewards
            });
        }
        getTurnItemInfo(t, i) {
            let a = t + "_" + i;
            Laya.LocalStorage.getItem(e.TURN_TABLE_ITEM) || Laya.LocalStorage.setItem(e.TURN_TABLE_ITEM, JSON.stringify({}));
            let s = JSON.parse(Laya.LocalStorage.getItem(e.TURN_TABLE_ITEM));
            if (s[a]) {
                let n = 1e3 * this.getTime(), o = new Date(n);
                o.setHours(0), o.setMinutes(0), o.setSeconds(0), o.setMilliseconds(0);
                let r = Math.floor(o.getTime() / 1e3);
                if (s[a].time < r) {
                    if (console.log("获取新的奖励"), i <= 4) {
                        let n = Ho.getDataByKey(t + 8 * (i - 1));
                        if (6 != n.awardType && 7 != n.awardType) return hs.setfreeRewardForGoldCoins(), 
                        {
                            itemId: Gr.GOLD,
                            count: hs.curFreeGoldRewards
                        };
                        let o = Is.getDataByKey(n.itemData[0].award);
                        return o.type == Ur.HERO_DEBRIS ? tl.getInstance().checkIsHasRoleSkin(o.extra()) && (o = Is.getDataByKey(tl.getInstance().getBoxTragmentId(!0, !1).itemId)) : tl.getInstance().checkPart(o.extra()) && (o = Is.getDataByKey(tl.getInstance().getBoxTragmentId(!1, !0).itemId)), 
                        s[a] = {
                            itemId: o.id,
                            count: n.itemData[0].count,
                            time: r
                        }, Laya.LocalStorage.setItem(e.TURN_TABLE_ITEM, JSON.stringify(s)), s[a];
                    }
                    {
                        let n, o = Ho.getDataByKey(t + 8 * Math.min(i - 1, 4));
                        return 11 != o.awardType && 10 != o.awardType ? (hs.setfreeRewardForGoldCoins(), 
                        {
                            itemId: Gr.GOLD,
                            count: hs.curFreeGoldRewards
                        }) : (n = 10 == o.awardType ? Is.getDataByKey(tl.getInstance().getBoxTragmentId(!0, !1).itemId) : Is.getDataByKey(tl.getInstance().getBoxTragmentId(!1, !0).itemId), 
                        s[a] = {
                            itemId: n.id,
                            count: o.itemData[0].count,
                            time: r
                        }, Laya.LocalStorage.setItem(e.TURN_TABLE_ITEM, JSON.stringify(s)), s[a]);
                    }
                }
                {
                    let t = Is.getDataByKey(s[a].itemId);
                    return t.type == Ur.HERO_DEBRIS ? tl.getInstance().checkIsHasRoleSkin(t.extra()) && (t = Is.getDataByKey(tl.getInstance().getBoxTragmentId(!0, !1).itemId)) : tl.getInstance().checkPart(t.extra()) && (t = Is.getDataByKey(tl.getInstance().getBoxTragmentId(!1, !0).itemId)), 
                    t.id != s[a].itemId && (s[a].itemId = t.id, Laya.LocalStorage.setItem(e.TURN_TABLE_ITEM, JSON.stringify(s))), 
                    s[a];
                }
            }
            {
                let n = 1e3 * this.getTime(), o = new Date(n);
                o.setHours(0), o.setMinutes(0), o.setSeconds(0), o.setMilliseconds(0);
                let r = Math.floor(o.getTime() / 1e3);
                if (console.log("获取新的奖励"), i <= 4) {
                    let n = Ho.getDataByKey(t + 8 * (i - 1));
                    if (6 != n.awardType && 7 != n.awardType) return hs.setfreeRewardForGoldCoins(), 
                    {
                        itemId: Gr.GOLD,
                        count: hs.curFreeGoldRewards
                    };
                    let o = Is.getDataByKey(n.itemData[0].award);
                    return o.type == Ur.HERO_DEBRIS ? tl.getInstance().checkIsHasRoleSkin(o.extra()) && (o = Is.getDataByKey(tl.getInstance().getBoxTragmentId(!0, !1).itemId)) : tl.getInstance().checkPart(o.extra()) && (o = Is.getDataByKey(tl.getInstance().getBoxTragmentId(!1, !0).itemId)), 
                    s[a] = {
                        itemId: o.id,
                        count: n.itemData[0].count,
                        time: r
                    }, Laya.LocalStorage.setItem(e.TURN_TABLE_ITEM, JSON.stringify(s)), s[a];
                }
                {
                    let n, o = Ho.getDataByKey(t + 8 * Math.min(i - 1, 4));
                    return 11 != o.awardType && 10 != o.awardType ? (hs.setfreeRewardForGoldCoins(), 
                    {
                        itemId: Gr.GOLD,
                        count: hs.curFreeGoldRewards
                    }) : (n = 10 == o.awardType ? Is.getDataByKey(tl.getInstance().getBoxTragmentId(!0, !1).itemId) : Is.getDataByKey(tl.getInstance().getBoxTragmentId(!1, !0).itemId), 
                    s[a] = {
                        itemId: n.id,
                        count: o.itemData[0].count,
                        time: r
                    }, Laya.LocalStorage.setItem(e.TURN_TABLE_ITEM, JSON.stringify(s)), s[a]);
                }
            }
        }
        getPopUpRule() {
            if (!this.roleInfo.popUpRule) {
                let e = {
                    gameNum: 0,
                    isNew: !0
                };
                this.roleInfo.popUpRule = e, this.setRoleInfo(this.roleInfo);
            }
            return this.roleInfo.popUpRule.gameNum > 3 && (this.roleInfo.popUpRule.isNew = !1, 
            this.setRoleInfo(this.roleInfo)), this.isNew || (this.roleInfo.popUpRule.isNew = !1, 
            this.setRoleInfo(this.roleInfo)), this.roleInfo.popUpRule;
        }
        updatePopUpRuleGameNum() {
            let e = this.getPopUpRule();
            e.gameNum++, this.roleInfo.popUpRule = e, this.setRoleInfo(this.roleInfo);
        }
        setPopUpRuleIsNew() {
            let e = this.getPopUpRule();
            e.isNew = !1, this.roleInfo.popUpRule = e, this.setRoleInfo(this.roleInfo);
        }
        getPopUpRuleIsNewRole() {
            return this.getPopUpRule().isNew;
        }
        getAutoOpenTime() {
            let e = this.getRoleInfo();
            return e.autoOpenTime || (e.autoOpenTime = 0, this.updateLocal()), e.autoOpenTime;
        }
        setAutoOpenTime() {
            this.roleInfo && (this.roleInfo.autoOpenTime = this.getTime(), this.updateLocal());
        }
        isCanAutoOpenFunction() {
            let e = this.getAutoOpenTime(), t = this.getTime();
            return !hl.isReviewVersion() && (0 == e ? (console.log("为0是第一次"), this.setAutoOpenTime(), 
            !0) : t - e >= el && (console.log("可以打开"), this.setAutoOpenTime(), !0));
        }
        isCanGameAwardBannerCtrl() {
            let e = hl.getGameAwardBannerCtrl();
            return 0 != e && (e <= -1 ? e = 1 : e += 1, Ts.gameNum % e == 0);
        }
        getStandingData() {
            return void 0 === this.roleInfo.standing && (this.roleInfo.standing = {
                like: 0,
                game: 0,
                win: 0,
                mvp: 0,
                isShowDot: !0,
                list: []
            }, this.setRoleInfo(this.roleInfo)), this.roleInfo.standing;
        }
        setStandingData(e) {
            let t = this.getStandingData();
            t.game++, t.isShowDot = !0, 1 == e.result && t.win++, e.isMvp && t.mvp++, t.list.unshift(e), 
            this.setRoleInfo(this.roleInfo);
        }
        setStandingLikeNum(e) {
            this.getStandingData().like += e, this.setRoleInfo(this.roleInfo);
        }
        hideStandingDot() {
            this.getStandingData().isShowDot = !1;
        }
        getDragonBoatBombState() {
            return 0;
        }
        setDragonBoatBombState() {
            this.roleInfo.dragonBoatBomb = 1, this.setRoleInfo(this.roleInfo);
        }
        getInviteId() {
            return void 0 === this.roleInfo.inviteId && (this.roleInfo.inviteId = 1, this.setRoleInfo(this.roleInfo)), 
            this.roleInfo.inviteId;
        }
        setInviteId(e) {
            this.roleInfo.inviteId = e, this.setRoleInfo(this.roleInfo);
        }
        getSummerInfo() {
            return void 0 === this.roleInfo.summerInfo && (this.roleInfo.summerInfo = {}, this.roleInfo.summerInfo[Gr.SUMMER_GIFT_SKIN_FRAGMENT_ITEM_ID] = 0, 
            this.roleInfo.summerInfo[Gr.SUMMER_GIFT_GUN_ITEM_ID] = 0, this.setRoleInfo(this.roleInfo)), 
            this.roleInfo.summerInfo;
        }
        isShowSummerGift() {
            let e = this.getSummerInfo(), t = Is.getDataByKey(Gr.SUMMER_GIFT_SKIN_FRAGMENT_ITEM_ID);
            return 0 == e[Gr.SUMMER_GIFT_GUN_ITEM_ID] || !tl.getInstance().checkIsHasRoleSkin(t.extra());
        }
        setSummerInfo(e) {
            this.getSummerInfo()[e] = 1, this.setRoleInfo(this.roleInfo);
        }
        isShowAnnouncenment() {
            return hl.platform == v.TT && hl.getConfig().ver != this.getNotifyVer();
        }
        getNotifyVer() {
            return null != this.roleInfo.notifyVer ? this.roleInfo.notifyVer : (this.roleInfo.notifyVer = 0, 
            this.updateLocal(), 0);
        }
        setNotifyVer(e) {
            this.roleInfo.notifyVer = e, this.updateLocal();
        }
        onLineLogin() {
            if (this.roleInfo.onLineData) {
                let e = this.roleInfo.onLineData.dayTime;
                if (this.getTime() - e < 86400) console.log("当天"), this.roleInfo.onLineData.loginTime = this.getTime(); else {
                    let e = 1e3 * this.getTime(), t = new Date(e);
                    t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0);
                    let i = Math.floor(t.getTime() / 1e3);
                    this.roleInfo.onLineData = {
                        dayTime: i,
                        liveTime: 0,
                        loginTime: this.getTime(),
                        getTime: 0
                    };
                }
                this.updateLocal();
            } else {
                let e = 1e3 * this.getTime(), t = new Date(e);
                t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0);
                let i = Math.floor(t.getTime() / 1e3);
                this.roleInfo.onLineData = {
                    dayTime: i,
                    liveTime: 0,
                    loginTime: this.getTime(),
                    getTime: 0
                }, this.updateLocal();
            }
        }
        getOnLineDayTime() {
            return this.roleInfo.onLineData.dayTime;
        }
        getOnLineTime() {
            let e = this.getTime() - this.roleInfo.onLineData.loginTime;
            return this.roleInfo.onLineData.liveTime + e;
        }
        offOnLine() {
            let e = this.getTime() - this.roleInfo.onLineData.loginTime;
            this.roleInfo.onLineData.liveTime = this.roleInfo.onLineData.liveTime + e, this.roleInfo.onLineData.loginTime = this.getTime(), 
            console.log("更新离线时间"), console.log(this.roleInfo.onLineData), this.updateLocal();
        }
        isCanShowOnLine() {
            let e = this.getOnLineTime(), t = this.roleInfo.onLineData.getTime;
            if (t < sn.getDataByIndex(sn.keys.length - 1).time) {
                let i = 0;
                for (;e > sn.getDataByIndex(i).time && (i++, sn.getDataByIndex(i)); ) ;
                if (0 != i) {
                    if (!(t >= sn.getDataByIndex(i - 1).time)) return !0;
                    console.log("当前在线奖励已经领取");
                }
            }
            return !1;
        }
        getOnlineGetTime() {
            return this.roleInfo.onLineData.getTime;
        }
        getOnlineAward() {
            this.isCanShowOnLine() && (this.roleInfo.onLineData.getTime = this.getOnLineTime());
        }
        getOpenId() {
            return hl.platform != v.TT ? "12" : Laya.LocalStorage.getItem(e.PLATFORM_USER_ID);
        }
    }
    tl.isNewCupDan = !1, tl.onlineSec = 0;
    class il {
        static vibrateShort(e = "light") {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && (kt.isCloseZD || tl.getInstance().getVibrate() && ol.vibrateShort(e));
        }
        static vibrateLong() {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && (kt.isCloseZD || tl.getInstance().getVibrate() && ol.vibrateLong());
        }
        static cleanEffect() {
            for (let e in il.effectList) il.destoryEffect(e);
            il.effectList = {};
        }
        static cleanEffectByName(e) {
            il.destoryEffect(`${e}`);
        }
        static destoryEffect(e) {
            if (il.effectList[e]) {
                for (let t in il.effectList[e]) hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS ? (Laya.SoundManager.removeChannel(il.effectList[e][t]), 
                Laya.SoundManager.destroySound(e)) : (il.effectList[e][t].offPlay(il.effectList[e][t].playCB), 
                il.effectList[e][t].offEnded(il.effectList[e][t].endCB), il.effectList[e][t].playCB = null, 
                il.effectList[e][t].endCB = null, il.effectList[e][t].destroy(), il.effectList[e][t] = null);
                il.effectList[e] = null, delete il.effectList[e];
            }
        }
        static stop(e) {
            if (il.effectList[e]) for (let t in il.effectList[e]) {
                il.effectList[e][t].stop();
            }
        }
        static playBGM(e) {
            if (Laya.SoundManager.musicMuted = !1, il.destoryBGM(), tl.getInstance().getMusic()) {
                if (hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS || hl.platform == v.WEB_4399 || hl.platform == v.WEB) console.log("播放背景音乐-"), 
                il.bgm = Laya.SoundManager.playMusic(e, 0); else {
                    let t = wx.createInnerAudioContext();
                    t.src = e, t.loop = !0, t.play(), il.bgm = t;
                }
                il.isBGMPause = !1;
            }
        }
        static setBGMVolume(e) {
            tl.getInstance().getMusic() && il.bgm && (il.bgm.volume = e);
        }
        static stopBGM() {
            il.bgm && (hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS ? (Ts.isGaming && (Laya.SoundManager.musicMuted = !0), 
            il.bgm.pause()) : il.bgm.stop(), il.isBGMPause = !0);
        }
        static destoryBGM() {
            il.bgm && (hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS || hl.platform == v.WEB_4399 || hl.platform == v.WEB ? Laya.SoundManager.stopMusic() : il.bgm && il.bgm.destroy(), 
            il.bgm = null, il.isBGMPause = !1);
        }
        static resumeBGMFromInterruption() {
            Ts.isGaming || il.bgm && !il.isBGMPause && tl.getInstance().getMusic() && (hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS || hl.platform == v.WEB_4399 || hl.platform == v.WEB ? il.bgm.resume() : il.bgm.play(), 
            il.isBGMPause = !1);
        }
        static resumeBGM() {
            Ts.isGaming || il.bgm && tl.getInstance().getMusic() && (hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS ? il.bgm.resume() : il.bgm.play(), 
            il.isBGMPause = !1);
        }
        static playEffect(e, t = 1, i = !1, a = 1) {
            return il.play(e, t, i, a);
        }
        static play(e, t = 1, i = !1, a = 1) {
            if (tl.getInstance().getEffect()) {
                if (hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS) {
                    let s = e.split(".");
                    if (s.length > 2) throw new Error("resName error!");
                    let n = "native/" + s[0] + ".wav";
                    return il.playNative(n, t, i, a);
                }
                if (hl.platform == v.WEB || hl.platform == v.WEB_4399) {
                    let s = e.split(".");
                    if (s.length > 2) throw new Error("resName error!");
                    s[0];
                    return il.playNative(e, t, i, a);
                }
                return il.playMini(e, t, i, a);
            }
        }
        static playNative(e, t = 1, i = !1, a = 1) {
            let s = Laya.SoundManager.playSound(e, t);
            if (s && s.volume) return s.volume = a, s.isPause = !1, s.completeHandler = Laya.Handler.create(this, function() {
                s.isPause = !0, i && il.destoryEffect(e);
            }), s;
        }
        static playMini(e, t = 1, i = !1, a = 1) {
            if (il.effectList[e]) for (let i in il.effectList[e]) {
                let s = il.effectList[e][i];
                if (s.paused || s.isPause) return s.volume = a, s.isPause = !1, s.loop = 0 == t, 
                s.seek(0), s.play(), s;
            } else il.effectList[e] = [];
            let s = il, n = wx.createInnerAudioContext();
            n.src = e, n.autoplay = !1, n.loop = 0 == t, n.play();
            let o = function() {
                n.isPause = !1;
            }, r = function() {
                n.isPause = !0, i && s.destoryEffect(e);
            };
            return n.onPlay(o), n.onEnded(r), n.endCB = r, n.volume = a, n.playCB = o, il.effectList[e].push(n), 
            n;
        }
        static preload(e) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return;
            if (hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS) return;
            if (il.effectList[e]) return;
            il.effectList[e] = [];
            let t = wx.createInnerAudioContext();
            t.src = e, t.autoplay = !1, il.effectList[e].push(t);
        }
        static playEffect3D(e, t = null, i = 1) {
            if (!tl.getInstance().getEffect()) return;
            let a;
            if (t) {
                if (il.effect3dCtrl[e]) return;
                let s = il.calculateVolume(t, Rs.playerLogicalBaseLayer.getPresentationBaseLayer().getModelPosByVector3());
                if (0 == s) return;
                il.effect3dCtrl[e] = !0;
                let n = 100;
                ol.isIOS() && (n = 500), setTimeout(function() {
                    il.effect3dCtrl[e] = !1;
                }, n), a = il.play(e, i, !1, s);
            } else a = il.play(e, i, !1, 1);
            return {
                audio: a,
                pos: t,
                resName: e
            };
        }
        static stopEffect3D(e) {
            if (tl.getInstance().getEffect()) if (hl.platform == v.NATIVE_IOS || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.WEB_4399 || hl.platform == v.WEB) {
                let t = e.resName.split(".");
                if (t.length > 2) throw new Error("resName error!");
                let i = "native/" + t[0] + ".wav";
                Laya.SoundManager.stopSound(i), e && e.audio && (e.audio.isPause = !0);
            } else {
                let t = e;
                t.audio.stop(), t.audio.isPause = !0;
            }
        }
        static calculateVolume(e, t) {
            let i, a = Laya.Vector3.distanceSquared(e, t);
            if (a > 2500) return 0;
            return (i = a <= 50 ? 1 : a > 50 && a < 700 ? 1 + 1 / -650 * (a - 50) : .1) < .1 && (i = .1), 
            i;
        }
        static stopAllEffect() {
            if (tl.getInstance().getEffect()) if (hl.platform == v.NATIVE_IOS || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.WEB_4399 || hl.platform == v.WEB) console.log("原生音频暂时不支持停止所有音效"); else for (let e in il.effectList) this.stop(e);
        }
    }
    var al;
    il.isMute = !1, il.effectList = {}, il.bgm = null, il.isBGMPause = !1, il.effect3dCtrl = {}, 
    il.effect3dList = [], function(e) {
        e[e.SINGLE = 1] = "SINGLE", e[e.VERTICAL = 2] = "VERTICAL", e[e.HORIZONTAL = 3] = "HORIZONTAL", 
        e[e.MATRIX = 4] = "MATRIX", e[e.SINGLE_1 = 5] = "SINGLE_1", e[e.SINGLE_2 = 6] = "SINGLE_2";
    }(al || (al = {}));
    let sl = 300, nl = 300;
    class ol {
        static createBannerAd(e, t = !1, i = null, a = null) {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399) {
                if (hl.platform == v.WX) ol._createBannerWX(e, t, i, a); else if (hl.platform == v.QQ) ol._createBannerQQ(e, t, i, a); else if (hl.platform == v.VIVO) ol._createBannerVV(e, t, i); else if (hl.platform == v.OPPO) ol._createBannerOP(e, t, i); else if (hl.platform == v.TT) ol._createBannerTT(e, t, i, a); else if (hl.platform == v.NATIVE_IOS) {
                    ol.isHideBanner = !1;
                    let t = window.PlatformClass;
                    t && t.createClass("JSBridge").call("createBannerAd:", e);
                } else if (hl.platform == v.NATIVE_ANDRIOD) {
                    ol.isHideBanner = !1;
                    let e = window.PlatformClass;
                    e && e.createClass("demo.JSBridge").call("createBannerAd", tl.getInstance().isBannerTouch());
                }
                this.bannerSuccessCallBack = function() {
                    i && i(!0);
                }, this.bannerFailCallBack = function() {
                    i && i(!1);
                };
            }
        }
        static setSystemInfo(e, t) {
            if (!ol.systemInfo) {
                ol.systemInfo = {
                    windowWidth: e,
                    windowHeight: t
                };
                {
                    let e = this.getSystemInfo();
                    ol.bannerCenterPos.x = e.windowWidth / 2 - 3 * e.windowWidth / 20, ol.bannerCenterPos.y = e.windowHeight - 200, 
                    console.log("system" + e), console.log("bannerCenterPosx" + ol.bannerCenterPos.x);
                }
            }
        }
        static _createBannerWX(e, t = !1, i = null, a = null) {
            let s = ol.getSystemInfo();
            if (!ol.versionfunegt(s.SDKVersion, "2.0.4")) return;
            s.windowWidth;
            let n = wx.createBannerAd({
                adUnitId: e,
                style: {
                    left: .5 * (s.windowWidth - 300),
                    top: s.windowHeight,
                    width: 300
                }
            });
            ol.bannerCenterPos.x = .5 * (s.windowWidth - 300), ol.bannerCenterPos.y = s.windowHeight - 104, 
            "ios" == s.platform && Laya.stage.width / Laya.stage.height > 2 && (ol.bannerCenterPos.y = s.windowHeight - 104 - 15);
            let o = function(e) {
                console.log("resize", e), n.style.top = s.windowHeight - e.height, n.style.left = .5 * (s.windowWidth - e.width), 
                "ios" == s.platform && Laya.stage.width / Laya.stage.height > 2 && (n.style.top = s.windowHeight - e.height - 15), 
                null == ol.bannerPrePos.y || 0 == ol.bannerPrePos.y && 0 == ol.bannerPrePos.x || (n.style.top = ol.bannerPrePos.y), 
                null == ol.bannerPrePos.x || 0 == ol.bannerPrePos.y && 0 == ol.bannerPrePos.x || (n.style.left = ol.bannerPrePos.x);
            };
            n.onResize(o);
            let r = function(e) {
                ol.isBannerError = !0, console.log("banner 广告加载失败", e), i && i(), n.offLoad(l), 
                n.offError(r), n.offResize(o);
            };
            n.onError(r);
            let l = function(e) {
                ol.isBannerError = !1, n.offLoad(l), n.offError(r), n.offResize(o), console.log("banner 广告加载成功"), 
                ol.banner.push(n), ol.banner[ol.banner.length - 1].isLoadSuccess = !0, 1 == ol.banner.length ? n.show() : n.hide(), 
                i && i();
            };
            n.onLoad(l);
        }
        static _createBannerQQ(e, t = !1, i = null, a = null) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return;
            let s = ol.getSystemInfo();
            ol.bannerIdList[ol.bannerIdx] = e;
            ol.bannerIdx;
            !function() {
                console.log("_createBannerQQ", e);
                let t = wx.createBannerAd({
                    adUnitId: e,
                    style: {
                        left: .5 * (s.windowWidth - 320),
                        top: s.windowHeight,
                        width: 320
                    }
                }), a = function(e) {
                    console.log(e), t.style.top = s.windowHeight - e.height, t.style.left = .5 * (s.windowWidth - e.width), 
                    "ios" == s.platform && Laya.stage.width / Laya.stage.height > 2 && (t.style.top = s.windowHeight - e.height), 
                    0 == ol.bannerCenterPos.x && (ol.bannerCenterPos.x = t.style.left), 0 == ol.bannerCenterPos.y && (ol.bannerCenterPos.y = t.style.top), 
                    null != ol.bannerPrePos.y && 0 != ol.bannerPrePos.y && (t.style.top = ol.bannerPrePos.y), 
                    null != ol.bannerPrePos.x && 0 != ol.bannerPrePos.x && (t.style.left = ol.bannerPrePos.x), 
                    t.offResize(a), ol.banner.push(t), ol.banner[ol.banner.length - 1].isLoadSuccess = !0, 
                    1 == ol.banner.length ? ol.isHideBanner || t.show() : ol.exeBannerCommandList.length > 0 ? ol.exeBannerCommand() : ol.isHideBanner ? t.hide() : t.show(), 
                    i && i();
                };
                t.onResize(a);
                let n = function(e) {
                    ol.isBannerError = !0, console.log("banner craate error", e), i && i(), t.offLoad(o), 
                    t.offError(n), t.offResize(a);
                };
                t.onError(n);
                let o = function() {
                    ol.isBannerError = !1, console.log("_createBannerQQ load success"), t.offLoad(o), 
                    t.offError(n);
                };
                t.onLoad(o), t.adUnitId = e;
            }();
        }
        static _createBannerVV(e, t = !1, i = null) {
            if (ol.getSystemInfo().platformVersionCode < 1031) return;
            console.log("PlatformUtil.bannerIdx", ol.bannerIdx), ol.banner[ol.bannerIdx] && (ol.banner[ol.bannerIdx].destroy(), 
            ol.banner[ol.bannerIdx] = null);
            var a = qg.createBannerAd({
                posId: e,
                style: {}
            });
            ol.banner[ol.bannerIdx] = a, console.log("_createBannerVV", e);
            let s = function(e) {
                ol.isBannerError = !1, console.log("onLoad", e), a.offError(n), a.offLoad(s), ol.banner[ol.bannerIdx].isLoadSuccess = !0, 
                ol.exeBannerCommandList.length > 0 ? ol.exeBannerCommand() : a.hide(), i && i();
            }, n = function(e) {
                ol.isBannerError = !0, console.log("onError", JSON.stringify(e)), a.offError(n), 
                a.offLoad(s);
            };
            a.onLoad(s), a.onError(n);
        }
        static _createBannerOP(e, t = !1, i = null) {
            let a;
            ol.isHideBanner = !1, ol.banner[ol.bannerIdx] ? (a = ol.banner[ol.bannerIdx], console.log("recycle oppo banner")) : a = a = qg.createBannerAd({
                posId: e
            });
            let s = function(e) {
                console.log("createBannerOppo onError", e), i && i(), a.offShow(n), a.offError(s);
            }, n = function() {
                console.log("createBannerOppo onShow"), i && i(), a.offShow(n), a.offError(s), ol.isHideBanner && a.hide();
            };
            a.onError(s), a.onShow(n), t ? a.hide() : a.show(), ol.banner[ol.bannerIdx] = a;
        }
        static _createBannerTT(e, t = !1, i = null, a = null) {
            let s = ol.getSystemInfo(), n = tt;
            if (!n.createBannerAd) return;
            ol.banner[ol.bannerIdx] && (ol.banner[ol.bannerIdx].destroy(), ol.banner[ol.bannerIdx] = null), 
            ol.bannerPrePos.x = null, ol.bannerPrePos.y = null;
            s.windowWidth;
            let o = n.createBannerAd({
                adUnitId: e,
                style: {
                    left: .5 * (s.windowWidth - 150),
                    top: s.windowHeight,
                    width: 150
                }
            }), r = function(e) {
                o.offResize(r), console.log("resize", e), o.style.top = s.windowHeight - e.height, 
                o.style.left = .5 * (s.windowWidth - e.width), "ios" == s.platform && Laya.stage.width / Laya.stage.height > 2 && (o.style.top = s.windowHeight - e.height - 15), 
                ol.bannerCenterPos.x = o.style.left, ol.bannerCenterPos.y = o.style.top, null != ol.bannerPrePos.y && (o.style.top = ol.bannerPrePos.y), 
                null != ol.bannerPrePos.x && (o.style.left = ol.bannerPrePos.x);
            };
            o.onResize(r);
            let l = function(e) {
                ol.isBannerError = !0, console.log("banner 广告加载失败", e), i && i(), o.offLoad(h), 
                o.offError(l), o.offResize(r);
            };
            o.onError(l);
            let h = function(e) {
                ol.isBannerError = !1, o.offLoad(h), o.offError(l), console.log("banner 广告加载成功"), 
                ol.banner[ol.bannerIdx].isLoadSuccess = !0, ol.exeBannerCommandList.length > 0 ? ol.exeBannerCommand() : o.hide(), 
                i && i();
            };
            o.onLoad(h), ol.banner[ol.bannerIdx] = o;
        }
        static _preloadBannerQQ(e, t = !1, i = null, a = null) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return;
            let s = ol.getSystemInfo();
            ol.banner[ol.bannerIdx] && (ol.banner[ol.bannerIdx].hide(), ol.banner[ol.bannerIdx].style.top = 1e4, 
            ol.banner[ol.bannerIdx].style.left = 1e4, ol.banner[ol.bannerIdx] = null), ol.bannerIdList[ol.bannerIdx] = e, 
            ol.bannerPrePos.x = null, ol.bannerPrePos.y = null;
            let n = ol.bannerIdx;
            setTimeout(function() {
                console.log("_preloadBannerQQ", e);
                let t = wx.createBannerAd({
                    adUnitId: e,
                    style: {
                        left: .5 * (s.windowWidth - 320),
                        top: s.windowHeight,
                        width: 320
                    }
                }), a = function(e) {
                    console.log(e), t.style.top = s.windowHeight - e.height, t.style.left = .5 * (s.windowWidth - e.width), 
                    "ios" == s.platform && Laya.stage.width / Laya.stage.height > 2 && (t.style.top = s.windowHeight - e.height - 15), 
                    ol.bannerCenterPos.x || (ol.bannerCenterPos.x = t.style.left, ol.bannerCenterPos.y = t.style.top), 
                    null != ol.bannerPrePos.y && (t.style.top = ol.bannerPrePos.y), null != ol.bannerPrePos.x && (t.style.left = ol.bannerPrePos.x), 
                    t.hide(), t.offResize(a), ol.banner[n].isLoadSuccess = !0, ol.bannerIdx == n && ol.exeBannerCommandList.length > 0 && ol.exeBannerCommand(), 
                    i && i();
                };
                t.onResize(a);
                let o = function(e) {
                    ol.isBannerError = !0, console.log("banner craate error", e), ol.showModal("拉取banner失败", JSON.stringify(e)), 
                    i && i(), t.offLoad(r), t.offError(o), t.offResize(a);
                };
                t.onError(o);
                let r = function() {
                    ol.isBannerError = !1, console.log("_createBannerQQ load success"), t.offLoad(r), 
                    t.offError(o);
                };
                t.onLoad(r), ol.banner[n] = t, t.adUnitId = e;
            }, 20);
        }
        static showBannerAd(e = null, t = null, i = null, a = null) {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399) {
                if (ol.bannerPrePos.x = null != e ? e : ol.bannerCenterPos.x, ol.bannerPrePos.y = null != t ? t : ol.bannerCenterPos.y, 
                0 == ol.bannerPrePos.x && (ol.bannerPrePos.x = ol.bannerCenterPos.x), 0 == ol.bannerPrePos.y && (ol.bannerPrePos.y = ol.bannerCenterPos.y), 
                hl.platform == v.NATIVE_IOS) {
                    let e = window.PlatformClass;
                    return e && e.createClass("JSBridge").call("showBannerAd"), void (i && i());
                }
                if (hl.platform == v.NATIVE_ANDRIOD) {
                    let e = window.PlatformClass, t = {
                        x: ol.bannerPrePos.x,
                        y: ol.bannerPrePos.y
                    }, a = JSON.stringify(t);
                    return e && e.createClass("demo.JSBridge").call("showBannerAd", a), void (i && i());
                }
                ol.isHideBanner = !1, ol.pushBannerCommand(1, i, null, null, a), hl.platform != v.WX && hl.platform != v.QQ ? ol.banner[ol.bannerIdx] && (hl.platform != v.VIVO && hl.platform != v.OPPO && (ol.banner[ol.bannerIdx].style.left = ol.bannerPrePos.x, 
                ol.banner[ol.bannerIdx].style.top = ol.bannerPrePos.y), hl.platform == v.OPPO ? (ol.banner[ol.bannerIdx].show(), 
                i && i()) : ol.banner[ol.bannerIdx].isLoadSuccess ? ol.exeBannerCommand() : console.log("banner show不执行")) : hl.platform == v.WX && ol.exeBannerCommand();
            }
        }
        static bannerIdxUpdate() {
            this.bannerIdx++, this.bannerIdx %= 2;
        }
        static hideBannerAd() {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399) if (hl.platform != v.NATIVE_IOS) if (hl.platform != v.NATIVE_ANDRIOD) {
                if (ol.pushBannerCommand(0, null), hl.platform == v.WX || hl.platform == v.QQ) for (let e = 0; e < ol.banner.length; e++) {
                    const t = ol.banner[e];
                    t && t.hide();
                } else ol.banner[ol.bannerIdx] && ol.banner[ol.bannerIdx].hide();
                ol.isHideBanner = !0;
            } else {
                let e = window.PlatformClass;
                e && e.createClass("demo.JSBridge").call("hideBannerAd");
            } else {
                let e = window.PlatformClass;
                e && e.createClass("JSBridge").call("hideBannerAd");
            }
        }
        static loopBannerCommand() {
            hl.platform == v.QQ && (ol.exeBannerCommandTime <= 0 && this.exeBannerCommand(), 
            ol.exeBannerCommandTime -= 70);
        }
        static exeBannerCommand() {
            if (0 == ol.exeBannerCommandList.length) return;
            let e = ol.exeBannerCommandList[ol.exeBannerCommandList.length - 1];
            if (0 == e.cmd) if (hl.platform == v.WX || hl.platform == v.QQ) {
                for (let e = 0; e < ol.banner.length; e++) {
                    const t = ol.banner[e];
                    t && t.hide();
                }
                ol.exeBannerCommandList = [];
            } else ol.banner[ol.bannerIdx] && ol.banner[ol.bannerIdx].isLoadSuccess && (console.log("loopBannerCommand hide"), 
            ol.banner[ol.bannerIdx].hide(), ol.exeBannerCommandList = []); else if (hl.platform == v.WX || hl.platform == v.QQ) {
                let t = ol.bannerIdx;
                if (ol.bannerIdx = ol.banner.length - 1, ol.banner[ol.bannerIdx] && ol.banner[ol.bannerIdx].isLoadSuccess) {
                    if (0 != ol.bannerPrePos.x && 0 != ol.bannerPrePos.y) {
                        ol.banner[ol.bannerIdx].style.left = ol.bannerPrePos.x, ol.banner[ol.bannerIdx].style.top = ol.bannerPrePos.y;
                        let t = ol.banner[ol.bannerIdx].show();
                        console.log("loopBannerCommand cb"), hl.platform == v.WX && t.then && t.then(() => {
                            e.cb && e.cb();
                        }), ol.exeBannerCommandList = [];
                    }
                } else if (ol.bannerIdx = t, 0 != ol.bannerPrePos.x && 0 != ol.bannerPrePos.y) {
                    if (ol.banner[ol.bannerIdx] && ol.banner[ol.bannerIdx].isLoadSuccess) {
                        ol.banner[ol.bannerIdx].style.left = ol.bannerPrePos.x, ol.banner[ol.bannerIdx].style.top = ol.bannerPrePos.y;
                        let t = ol.banner[ol.bannerIdx].show();
                        console.log("loopBannerCommand cb"), hl.platform == v.WX && t.then && t.then(() => {
                            e.cb && e.cb();
                        }), ol.exeBannerCommandList = [];
                    }
                } else console.log("loopCustomCommand fail"), e.fail && e.fail();
            } else if (ol.banner[ol.bannerIdx] && ol.banner[ol.bannerIdx].isLoadSuccess) {
                if (console.log("loopBannerCommand show"), ol.isIOS()) ol.banner[ol.bannerIdx].show(), 
                e.cb && e.cb(); else {
                    let t = ol.banner[ol.bannerIdx].show();
                    t.then && t.then(() => {
                        console.log("loopBannerCommand cb"), e.cb && e.cb();
                    });
                }
                ol.exeBannerCommandList = [];
            }
            ol.exeBannerCommandTime = sl;
        }
        static pushBannerCommand(e, t, i = null, a = null, s = null) {
            ol.exeBannerCommandList.push({
                cmd: e,
                cb: t,
                x: i,
                y: a,
                fail: s
            }), ol.loopBannerCommand(), ol.exeBannerCommandTime = sl;
        }
        static destroyBannerAd() {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399) if (hl.platform != v.NATIVE_IOS) if (hl.platform != v.NATIVE_ANDRIOD) ol.banner[ol.bannerIdx] && (ol.banner[ol.bannerIdx].destroy(), 
            ol.banner[ol.bannerIdx] = null); else {
                let e = window.PlatformClass;
                e && e.createClass("demo.JSBridge").call("destroyBannerAd");
            } else {
                let e = window.PlatformClass;
                e && e.createClass("JSBridge").call("destroyBannerAd");
            }
        }
        static preloadRewardVideoAd(e) {
            if (hl.platform == v.NATIVE_IOS) {
                let t = window.PlatformClass;
                t && t.createClass("JSBridge").call("preloadRewardVideAd:", e);
            } else hl.platform == v.WX && this._preloadRewardedVideoAdWX(e);
        }
        static createRewardedVideoAd(e, t, i, a, s = null) {
            ol.videoSuccessCallBack = t, ol.videoFailCallBack = i, ol.videoCloseCallBack = a, 
            ol.videoShowCallBack = s, hl.platform != v.WEB && (hl.platform == v.WX ? ol._createRewardedVideoAdWX(e) : hl.platform == v.QQ ? ol._createRewardedVideoAdQQ(e, t, i, a) : hl.platform == v.TT ? ol._createRewardVideoAdTT(e, t, i, a) : hl.platform == v.VIVO ? ol._createRewardVideoAdVIVO(e, t, i, a) : hl.platform == v.OPPO ? ol._createRewardVideoAdOPPO(e, t, i, a) : hl.platform == v.NATIVE_IOS ? ol._createRewardedVideoAdIOS(e) : hl.platform == v.NATIVE_ANDRIOD ? ol._createRewardedVideoAdAndroid(e) : hl.platform == v.WEB_4399 && ol._createRewardedVideoAdWeb());
        }
        static _createRewardedVideoAdWeb() {
            let e = function(e) {
                console.log("代码:" + e.code + ",消息:" + e.message), 1e4 === e.code ? (console.log("开始播放"), 
                ol.exeVideoShow()) : 10001 === e.code ? (console.log("播放结束"), ol.exeVideoSuccess()) : ol.exeVideoClose(), 
                il.resumeBGM();
            };
            if ("h5api" in Laya.Browser.window) {
                Laya.Browser.window.h5api.canPlayAd(function(e) {
                    console.log("是否可播放广告： ", e.canPlayAd, "\n", "剩余次数： ", e.remain), console.log("");
                }) ? (Laya.Browser.window.h5api.playAd(e), console.log("有广告资源可播放")) : (Laya.Browser.window.h5api.playAd(), 
                console.log("没有广告资源可播放"), console.log("激励视频 广告加载失败"), ol.hideLoading(), ol.exeVideoFail());
            } else ol.exeVideoSuccess(), console.log("找不到 4399HTML5 API"), console.log("");
        }
        static _createRewardedVideoAdWX(e) {
            if (!e) return;
            console.log("adUnitId", e);
            let t = ol.getSystemInfo();
            if (!ol.versionfunegt(t.SDKVersion, "2.0.4")) return;
            let i = function(t) {
                t.isEnded ? ol.exeVideoSuccess() : ol.exeVideoClose(), ol.ad && (ol.ad.offClose(i), 
                ol.ad.offError(a)), ol.ad = null, setTimeout(function() {
                    ol.preloadRewardVideoAd(e);
                }, 500), il.resumeBGM();
            }, a = function(t) {
                console.log("激励视频 广告加载失败", t), ol.hideLoading(), ol.exeVideoFail(), ol.ad && (ol.ad.offError(a), 
                ol.ad.offClose(i), ol.ad = null, setTimeout(function() {
                    ol.preloadRewardVideoAd(e);
                }, 500));
            };
            this.ad ? (ol.ad.onClose(i), ol.ad.onError(a), this.ad.show().then(() => {
                console.log("激励视频 广告显示成功"), ol.exeVideoShow();
            }).catch(t => {
                console.log("激励视频 广告显示失败", t), ol.hideLoading(), ol.exeVideoFail(), ol.ad && (ol.ad.offError(a), 
                ol.ad.offClose(i)), ol.ad = null, setTimeout(function() {
                    ol.preloadRewardVideoAd(e);
                }, 500);
            })) : (a("预加载失败"), this.preloadRewardVideoAd(e));
        }
        static _preloadRewardedVideoAdWX(e) {
            if (!e) return;
            console.log("adUnitId", e);
            let t = ol.getSystemInfo();
            if (!ol.versionfunegt(t.SDKVersion, "2.0.4")) return;
            let i = wx.createRewardedVideoAd({
                adUnitId: e
            }), a = function(e) {
                console.log("激励视频 广告加载失败", e), i.offError(a), this.ad = null;
            };
            i.onError(a), i.load().then(() => {
                console.log("load 激励视频 广告加载成功"), this.ad = i;
            }).catch(e => {
                console.log("load 激励视频 广告加载失败", e), this.ad = null;
            });
        }
        static _createRewardedVideoAdQQ(e, t, i, a) {
            console.log("adUnitId", e), ol.showLoading();
            let s = wx.createRewardedVideoAd({
                adUnitId: e
            }), n = function(e) {
                e.isEnded ? t && setTimeout(function() {
                    t(!0);
                }, 500) : a && a(), s.offClose(n), s.offError(o), il.resumeBGM();
            };
            s.onClose(n);
            let o = function(e) {
                ol.hideLoading(), i && i(), s.offError(o), s.offClose(n);
            };
            s.onError(o), s.load().then(() => {
                ol.hideLoading(), s.show();
            });
        }
        static _createRewardVideoAdVIVO(e, t, i, a) {
            if (!(ol.getSystemInfo().platformVersionCode < 1041)) {
                if (qg.showLoading({
                    message: "加载中..."
                }), ol.exeVideoSuccess = t, ol.exeVideoClose = a, ol.videoAd) {
                    var s = ol.videoAd.load();
                    s && s.then(() => {
                        wx.hideLoading(), console.log("激励视频广告加载成功");
                    }).catch(e => {
                        wx.hideLoading(), console.log("激励广告load失败" + JSON.stringify(e)), ol.videoAd.offError(), 
                        ol.videoAd.offClose(), i && i();
                    });
                } else {
                    if (qg.createRewardedVideoAd) {
                        let t = qg.createRewardedVideoAd({
                            posId: e
                        });
                        ol.videoAd = t;
                    }
                    let t = !1, a = function(e) {
                        t = !0, console.log("激励广告create 失败" + JSON.stringify(e)), i && i(), ol.videoAd.offError(), 
                        ol.videoAd.offClose(), wx.hideLoading();
                    };
                    ol.videoAd.onLoad(() => {
                        wx.hideLoading(), console.log("激励视频广告加载成功");
                        let e = ol.videoAd.show();
                        il.stopBGM(), e && e.then(() => {}).catch(e => {
                            wx.hideLoading(), console.log("激励广告展示失败" + JSON.stringify(e));
                        });
                    }), ol.videoAd.onError(a);
                }
                ol.videoAd.onClose(ol.ovVideoClose);
            }
        }
        static _createRewardVideoAdOPPO(e, t, i, a) {
            if (ol.getSystemInfo().platformVersionCode < 1041) return;
            if (qg.showLoading({
                message: "加载中..."
            }), ol.exeVideoSuccess = t, ol.exeVideoClose = a, ol.videoAd) ; else if (qg.createRewardedVideoAd) {
                let t = qg.createRewardedVideoAd({
                    posId: e
                });
                ol.videoAd = t, console.log("PlatformUtil.videoAd1", ol.videoAd);
            }
            console.log("PlatformUtil.videoAd2", ol.videoAd), ol.videoAd.onClose(ol.ovVideoClose);
            ol.videoAd.onLoad(() => {
                wx.hideLoading(), console.log("激励视频广告加载成功");
                let e = ol.videoAd.show();
                il.stopBGM(), e && e.then(() => {}).catch(e => {
                    wx.hideLoading(), console.log("激励广告展示失败" + JSON.stringify(e));
                });
            });
            var s = ol.videoAd.load();
            s && s.then(() => {
                wx.hideLoading(), console.log("激励视频广告加载成功");
            }).catch(e => {
                wx.hideLoading(), console.log("激励广告load失败" + JSON.stringify(e)), ol.videoAd.offError(), 
                ol.videoAd.offClose(), i && i();
            }), ol.videoAd.onError(function(e) {
                console.log("激励广告create 失败" + JSON.stringify(e)), i && i(), ol.videoAd.offError(), 
                ol.videoAd.offClose(), wx.hideLoading();
            });
        }
        static _createRewardVideoAdTT(e, t, i, a) {
            let s = wx.createRewardedVideoAd({
                adUnitId: e
            });
            s.load().then(() => {
                s.show(), console.log("preloadVideoAd 预加载视频成功");
            }).catch(e => {
                console.log("preloadVideoAd 预加载视频失败", e);
            }), ol.videoAd = s;
            let n = function(e) {
                e.isEnded ? t && setTimeout(function() {
                    t(!0);
                }, 500) : a && a(), s.offClose(n), s.offError(o), il.resumeBGM();
            };
            s.onClose(n);
            let o = function(e) {
                console.log("广告显示失败", e), wx.hideLoading(), i && i(), s.offError(o), s.offClose(n);
            };
            s.onError(o);
        }
        static _createRewardedVideoAdIOS(e) {
            Laya.MouseManager.enabled = !1;
            let t = window.PlatformClass;
            t && t.createClass("JSBridge").call("createRewardedVideoAd:", e);
        }
        static _createRewardedVideoAdAndroid(e) {
            let t = window.PlatformClass;
            t && t.createClass("demo.JSBridge").call("createRewardedVideoAd");
        }
        static ovVideoClose(e) {
            e && e.isEnded ? (console.log("正常播放结束，可以下发游戏奖励"), ol.exeVideoSuccess()) : (console.log("播放中途退出，不下发游戏奖励"), 
            ol.exeVideoFail && ol.exeVideoFail()), ol.videoAd.offClose();
        }
        static createInterstitialAd(e, t = null, i = !0) {
            if (hl.platform == v.WX) ol._createInterstitialAdWX(e, t, i); else if (hl.platform == v.QQ) ol._createInterstitialAdQQ(e); else if (hl.platform == v.VIVO) ol._createInterstitialVV(e); else if (hl.platform == v.NATIVE_IOS) {
                let t = window.PlatformClass;
                t && t.createClass("JSBridge").call("createBUInterstitalAd:", e);
            } else if (hl.platform == v.TT) ; else if (hl.platform == v.NATIVE_ANDRIOD) {
                let e = window.PlatformClass;
                e && e.createClass("demo.JSBridge").call("createInterstitialAd", tl.getInstance().isInterstitialTouch());
            }
        }
        static preloadInterstitialAd(e, t = null) {
            hl.platform == v.WX && ol._createInterstitialAdWX(e, t, !1);
        }
        static _createInterstitialAdWX(e, t, i) {
            let a = ol.getSystemInfo();
            if (!this.versionfunegt(a.SDKVersion, "2.6.0")) return;
            let s = wx.createInterstitialAd({
                adUnitId: e
            }), n = function(e) {
                console.log("Interstitial 广告加载失败", e), s.offLoad(o), s.offError(n);
            };
            s.onError(n);
            let o = function(e) {
                s.offLoad(o), s.offError(n), console.log("Interstitial 广告加载成功"), ol.interstitialAd = s, 
                i && s.show().then(() => {
                    console.log("Interstitial 广告显示"), t && t();
                }).catch(e => {
                    console.log("Interstitial 广告显示失败", e);
                });
            };
            s.onLoad(o);
        }
        static showInterstitialAd(e, t) {
            v.WX == hl.platform && (ol.interstitialAd ? ol.interstitialAd.show().then(() => {
                console.log("Interstitial 广告显示"), t && t();
            }).catch(e => {
                console.log("Interstitial 广告显示失败", e);
            }) : this.createInterstitialAd(e, t));
        }
        static _createInterstitialAdQQ(e) {
            let t = ol.getSystemInfo();
            if (!this.versionfunegt(t.SDKVersion, "1.8.6")) return;
            if (!qq.createInterstitialAd) return;
            let i = qq.createInterstitialAd({
                adUnitId: e
            });
            i.load().catch(e => {
                console.error("load", e);
            }), i.onLoad(() => {
                console.log("onLoad event emit"), i.show();
            }), i.onClose(() => {
                console.log("close event emit");
            }), i.onError(e => {
                console.log("error", e);
            });
        }
        static _createInterstitialVV(e, t = null) {
            if (ol.getSystemInfo().platformVersionCode < 1031) return;
            let i = qg.createInterstitialAd({
                posId: e,
                style: {}
            }), a = i.show();
            ol.hideBannerAd(), a && a.then(() => {
                console.log("插屏广告展示成功");
                let e = function() {
                    t && t(), i.offClose(e);
                };
                i.onClose(e);
            }).catch(e => {
                switch (console.log("插屏广告展示失败"), e.code) {
                  case 30003:
                    console.log("新用户7天内不能曝光Banner，请将手机时间调整为7天后，退出游戏重新进入");
                    break;

                  case 30009:
                    console.log("10秒内调用广告次数超过1次，10秒后再调用");
                    break;

                  case 30002:
                    console.log("load广告失败，重新加载广告");
                    break;

                  default:
                    console.log(JSON.stringify(e));
                }
            });
        }
        static createAppBox(e) {
            if (hl.platform != v.QQ) return;
            let t = qq.createAppBox({
                adUnitId: e
            });
            t.load().then(() => {
                t.show();
                let e = function() {
                    t.offClose(e), t.destroy();
                };
                t.onClose(e);
            });
        }
        static createGirdAd(e, t = 300, i = 0) {
            if (hl.platform != v.WX) return;
            let a = ol.getSystemInfo();
            if (!this.versionfunegt(a.SDKVersion, "2.9.2")) return;
            let s = wx;
            ol.isHideGird = !1;
            let n = s.createGridAd({
                adUnitId: e,
                adTheme: "white",
                gridCount: 5,
                style: {
                    left: .5 * (a.windowWidth - t),
                    top: i,
                    width: t
                }
            }), o = function(e) {
                console.log("resize", e);
            };
            n.onResize(o);
            let r = function(e) {
                console.log("gird ad 广告加载失败", e), n.offLoad(l), n.offError(r), n.offResize(o);
            };
            n.onError(r);
            let l = function(e) {
                n.offLoad(l), n.offError(r), n.offResize(o), console.log("gird ad 广告加载成功"), ol.isHideGird ? n.hide() : n.show().then(() => {
                    console.log("gird ad 广告显示");
                }).catch(e => {
                    console.log("gird ad 广告显示失败", e);
                });
            };
            n.onLoad(l), ol.girdAd = n;
        }
        static hideGirdAd() {
            hl.platform == v.WX && (ol.girdAd && ol.girdAd.hide(), ol.isHideGird = !0);
        }
        static preLoadNativeAd(e, t = null, i = null) {
            console.log("preLoadNativeAd", e);
            let a = qg.createNativeAd({
                posId: e
            }), s = function(i) {
                if (console.log("原生广告加载完成", i), i && i.adList) {
                    let s = i.adList.pop();
                    s.nativeId = e, ol.nativeData = s, ol.nativeAd = a, t && t();
                }
                a.offLoad(s);
            };
            a.onLoad(s);
            let n = a.load();
            n && n.then(() => {}).catch(e => {
                console.log("原生广告加载失败", JSON.stringify(e)), a.offLoad(s), i && i();
            });
        }
        static showNativeAd(e, t = null) {
            hl.platform != v.VIVO && hl.platform != v.OPPO || (ol.nativeAd && ol.nativeData ? (ol.nativeAd.reportAdShow({
                adId: ol.nativeData.adId.toString()
            }), e(ol.nativeAd, ol.nativeData)) : t && t());
        }
        static versionfunegt(e, t) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return;
            let i = e.split("."), a = t.split(".");
            for (let e in i) {
                let t = parseInt(i[e]), s = parseInt(a[e]);
                if (t > s) return !0;
                if (t < s) return !1;
            }
            return !0;
        }
        static getSystemInfo() {
            if (hl.platform == v.NATIVE_ANDRIOD) return ol.systemInfo;
            if (hl.platform != v.WEB && hl.platform != v.NATIVE_IOS && hl.platform != v.WEB_4399) {
                if (!ol.systemInfo) {
                    const e = wx.getSystemInfoSync();
                    ol.systemInfo = e;
                }
                return ol.systemInfo;
            }
        }
        static onShow(e) {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && wx.onShow(e);
        }
        static onHide(e) {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && wx.onHide(e);
        }
        static getLaunchOptionsSync() {
            return hl.platform == v.QQ || hl.platform == v.WX ? wx.getLaunchOptionsSync() : void 0;
        }
        static showModal(e, t, i = !0, a = null, s = null, n = null, o = null, r = null, l = null) {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS) if (hl.platform == v.VIVO) {
                qg.showDialog({
                    title: e,
                    message: t,
                    buttons: [ {
                        text: n || "确定",
                        color: "#33dd44"
                    } ],
                    success: function(e) {
                        console.log("handling callback"), a && a();
                    },
                    cancel: function() {
                        console.log("handling cancel"), s && s();
                    }
                });
            } else wx.showModal({
                title: e,
                content: t,
                showCancel: i,
                success: function(e) {
                    e.confirm ? a && a() : e.cancel && s && s();
                },
                confirmText: n || "确定",
                confirmColor: o || "#3CC51F",
                cancelText: r || "取消",
                cancelColor: l || "#000000"
            });
        }
        static setPreferredFramesPerSecond(e) {
            hl.platform != v.WX && hl.platform != v.TT && hl.platform != v.QQ || wx.setPreferredFramesPerSecond(e);
        }
        static vibrateShort(e = "light") {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399) if (hl.platform == v.NATIVE_IOS || hl.platform == v.NATIVE_ANDRIOD) {
                let e = window.PlatformClass;
                hl.platform == v.NATIVE_IOS ? e && e.createClass("JSBridge").call("vibrateShort") : e && e.createClass("demo.JSBridge").call("vibrateShort");
            } else wx.vibrateShort({
                type: e,
                success: null,
                fail: null,
                complete: null
            });
        }
        static vibrateLong() {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399) if (hl.platform == v.NATIVE_IOS || hl.platform == v.NATIVE_ANDRIOD) {
                let e = window.PlatformClass;
                hl.platform == v.NATIVE_IOS ? e && e.createClass("JSBridge").call("vibrateLong") : e && e.createClass("demo.JSBridge").call("vibrateLong");
            } else wx.vibrateLong({
                success: null,
                fail: null,
                complete: null
            });
        }
        static navigateToMiniProgram(e, t = "", i = null, a = null, s = null) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return !1;
            if (hl.platform == v.NATIVE_IOS) {
                let t = window.PlatformClass;
                t && t.createClass("JSBridge").call("navigateToAppStore:", e);
            } else hl.platform == v.NATIVE_ANDRIOD || wx.navigateToMiniProgram({
                appId: e,
                path: t,
                success: () => {
                    a && a();
                },
                fail: () => {
                    s && s();
                }
            });
        }
        static reportAnalyise(e, t = null, i = {}) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399 || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.OPPO || hl.platform == v.VIVO) return !1;
            if (hl.platform == v.NATIVE_IOS) {
                let t = window.PlatformClass;
                t && t.createClass("JSBridge").call("reportAnalyise:", e);
            } else {
                var a = GameGlobal.tdAppSdk;
                if (a) {
                    let s = {
                        id: e,
                        label: t ? e : t,
                        params: i
                    };
                    a.event(s);
                }
            }
        }
        static reportAldAnalyise(e, t = {}) {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && wx.aldSendEvent(e, t);
        }
        static onShareAppMessage(e, t) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399 || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS) return;
            let i = wx;
            hl.platform != v.WX && hl.platform != v.QQ || i.onShareAppMessage(() => t.length > 0 ? {
                title: e,
                imageUrl: t
            } : {
                title: e
            });
        }
        static shareAppMessage(e, t, i = "") {
            if (hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && (hl.platform == v.QQ || hl.platform == v.WX)) {
                wx.shareAppMessage({
                    title: e,
                    imageUrl: t,
                    query: i
                });
            }
        }
        static showShareMenu() {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.OPPO && hl.platform != v.VIVO && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && wx.showShareMenu();
        }
        static onAudioInterruptionEnd(e) {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && wx.onAudioInterruptionEnd(e);
        }
        static checkUpdate() {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399 || hl.platform == v.OPPO || hl.platform == v.VIVO || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS) return;
            const e = wx.getUpdateManager();
            e.onCheckForUpdate(function(e) {
                console.log(e.hasUpdate);
            }), e.onUpdateReady(function() {
                wx.showModal({
                    title: "更新提示",
                    content: "新版本已经准备好，请更新。",
                    showCancel: !1,
                    success: function(t) {
                        t.confirm && e.applyUpdate();
                    }
                });
            }), e.onUpdateFailed(function() {
                wx.showToast({
                    title: "更新失败"
                });
            });
        }
        static postOpenData(e) {
            if (hl.platform != v.WX && hl.platform != v.QQ) return;
            wx.getOpenDataContext().postMessage(e);
        }
        static setClipboardData(e) {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return !1;
            wx.setClipboardData({
                data: e,
                success(t) {
                    wx.hideToast(), console.log("copy success " + e);
                }
            });
        }
        static isFullScreen() {
            return Laya.stage.height > Laya.stage.width && Laya.stage.height / Laya.stage.width > 2 || Laya.stage.width > Laya.stage.height && Laya.stage.width / Laya.stage.height > 2;
        }
        static login(e, t = null) {
            if (hl.platform == v.WX || hl.platform == v.QQ || hl.platform == v.TT) wx.login({
                success: function(t) {
                    t.code, e(t.code);
                },
                fail: function(e) {
                    t && t(e);
                }
            }); else if (hl.platform == v.VIVO) {
                if (ol.getSystemInfo().platformVersionCode >= 1053) {
                    qg.login().then(t => {
                        t.data.token && e(t.data.token);
                    }, e => {
                        console.log("登录失败" + JSON.stringify(e));
                    });
                }
            } else if (hl.platform == v.OPPO) {
                if (ol.getSystemInfo().platformVersionCode >= 1040) {
                    qg.login({
                        success: function(t) {
                            t.data.token && e(t.data.token);
                        },
                        fail: function(e) {
                            console.log("登录失败" + JSON.stringify(e));
                        }
                    });
                }
            }
        }
        static showLoading(e = "加载中...") {
            if (hl.platform == v.WX || hl.platform == v.QQ || hl.platform == v.TT || hl.platform == v.OPPO) wx.showLoading({
                title: e,
                mask: !0,
                success: null,
                fail: null,
                complete: null
            }); else if (hl.platform == v.VIVO) {
                qg.showLoading({
                    message: "加载中..."
                });
            }
        }
        static hideLoading() {
            hl.platform != v.WEB && hl.platform != v.WEB_4399 && hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS && wx.hideLoading();
        }
        static reportMonitorOPPO(e) {
            if (hl.platform == v.OPPO) {
                if (ol.getSystemInfo().platformVersionCode < 1060) return;
                qg.reportMonitor(e.name, e.value);
            }
        }
        static isIOS() {
            if (hl.platform == v.OPPO || hl.platform == v.VIVO || hl.platform == v.WEB_4399 || hl.platform == v.WEB || hl.platform == v.NATIVE_ANDRIOD || hl.platform == v.NATIVE_IOS) return !1;
            let e = ol.getSystemInfo();
            return !(!e || "ios" != e.platform);
        }
        static startRecordGame(e) {
            if (hl.platform != v.TT) return;
            let t = tt.getGameRecorderManager();
            t.start({
                duration: 299
            }), console.log("startRecordGame", t), t.onError(e);
        }
        static endRecordGame(e) {
            if (hl.platform != v.TT) return;
            let t = tt.getGameRecorderManager();
            t.stop(), t.onStop(function(t) {
                wx.getFileSystemManager().access({
                    path: t.videoPath,
                    success: function() {
                        e(t.videoPath);
                    },
                    fail: function() {
                        console.log("shareVideo is not exist");
                    }
                });
            });
        }
        static pasueRecordGame() {
            if (hl.platform != v.TT) return;
            tt.getGameRecorderManager().pause();
        }
        static resumeRecordGame() {
            if (hl.platform != v.TT) return;
            tt.getGameRecorderManager().resume();
        }
        static shareRecord(e, t, i, a) {
            if (hl.platform == v.WEB) return void a();
            if (hl.platform != v.TT) return;
            tt.shareAppMessage({
                channel: "video",
                title: e,
                desc: t,
                imageUrl: "",
                templateId: "",
                query: "",
                extra: {
                    videoPath: i
                },
                success() {
                    console.log("分享视频成功"), a();
                },
                fail(e) {
                    console.log("分享视频失败", e);
                }
            });
        }
        static loadSubpackage(e, t, i, a = null) {
            if (hl.platform == v.WEB || hl.platform == v.NATIVE_IOS || hl.platform == v.NATIVE_ANDRIOD) return i(1), 
            void t();
            if (hl.platform == v.VIVO) {
                qg;
                if (qg.getSystemInfoSync().platformVersionCode < 1052) return i(1), void t();
            }
            if (!wx.loadSubpackage) return i(1), void t();
            wx.loadSubpackage({
                name: e,
                success: function() {
                    console.log(`subpackage ${e} load success`), hl.platform == v.OPPO ? setTimeout(function() {
                        t();
                    }, 1) : t();
                },
                fail: function(s) {
                    console.log(s), a && a(), ol.loadSubpackage(e, t, i, a);
                }
            }).onProgressUpdate(function(e) {
                let t;
                hl.platform == v.QQ ? (console.log(e.progress), t = .01 * e.progress) : t = e.totalBytesWritten / e.totalBytesExpectedToWrite, 
                console.log("load sub package percent", t, e.totalBytesWritten, e.totalBytesExpectedToWrite), 
                t > 1 && (t = 1), isNaN(t) || i(t);
            });
        }
        static getSetting(e) {
            if (hl.platform != v.QQ) return;
            qq.getSetting({
                success: e
            });
        }
        static accessFile(e, t, i) {
            if (hl.platform == v.WX || hl.platform == v.QQ || hl.platform == v.OPPO) {
                wx.getFileSystemManager().access({
                    path: e,
                    success: function() {
                        t && t();
                    },
                    fail: function(e) {
                        i && i(e);
                    }
                });
            } else if (hl.platform == v.VIVO) {
                let a = qg.accessFile({
                    uri: e
                });
                "true" == a ? t && t() : "false" == a ? i && i() : (console.log("accessFile fail error code:", a), 
                i && i(a));
            }
        }
        static mkdir(e, t, i) {
            if (hl.platform == v.WX || hl.platform == v.QQ || hl.platform == v.OPPO) {
                wx.getFileSystemManager().mkdir({
                    dirPath: e,
                    recursive: !0,
                    success: function() {
                        console.log(`mkdir success: ${e}`), t && t();
                    },
                    fail: function(e) {
                        console.log(`mkdir fail, error: ${e}`), i && i(e);
                    }
                });
            } else hl.platform == v.VIVO && ol.accessFile(e, t, function() {
                qg.mkdir({
                    uri: e,
                    success: function(e) {
                        console.log(`mkdir success: ${e}`), t && t();
                    },
                    fail: function(e, t) {
                        console.log(`mkdir fail, code = ${t}`), i && i(t);
                    }
                });
            });
        }
        static rmdir(e, t, i) {
            if (hl.platform == v.WX || hl.platform == v.QQ || hl.platform == v.OPPO) {
                wx.getFileSystemManager().rmdir({
                    dirPath: e,
                    recursive: !0,
                    success: function() {
                        console.log(`rmdir success: ${e}`), t && t();
                    },
                    fail: function(t) {
                        console.log(`rmdir fail ${e}, error: ${t}`), i && i(t);
                    }
                });
            } else if (hl.platform == v.VIVO) {
                qg.rmdir({
                    uri: e,
                    success: function(e) {
                        console.log(`rmdir success: ${e}`), t && t();
                    },
                    fail: function(t, a) {
                        console.log(`rmdir fail ${e}, code: ${a}`), i && i(a);
                    }
                });
            }
        }
        static readdir(e, t, i) {
            if (hl.platform == v.WX || hl.platform == v.QQ || hl.platform == v.OPPO) {
                wx.getFileSystemManager().readdir({
                    dirPath: e,
                    recursive: !0,
                    success: function(i) {
                        console.log(`readdir success: ${e}`, i), t && t(i.files);
                    },
                    fail: function(e) {
                        console.log(`readdir fail, error: ${e}`), i && i(e);
                    }
                });
            } else if (hl.platform == v.VIVO) {
                qg.listDir({
                    uri: e,
                    success: function(i) {
                        console.log(`readdir success: ${e}`, i);
                        let a = [];
                        for (let e in i.fileList) a.push(i.fileList[e].uri);
                        t && t(a);
                    },
                    fail: function(e, t) {
                        console.log(`readdir fail, code: ${t}`), i && i(t);
                    }
                });
            }
        }
        static unzip(e, t, i, a) {
            if (hl.platform == v.WX || hl.platform == v.QQ || hl.platform == v.OPPO) {
                wx.getFileSystemManager().unzip({
                    zipFilePath: e,
                    targetPath: t,
                    success: function() {
                        console.log(`unzip ${e} success`), i && i();
                    },
                    fail: function(t) {
                        console.log(`unzip ${e} fail`, t), a && a(t);
                    }
                });
            } else if (hl.platform == v.VIVO) {
                qg.unzipFile({
                    srcUri: e,
                    dstUri: t,
                    success: function(t) {
                        console.log(`unzip ${e} success`), i && i();
                    },
                    fail: function(t, i) {
                        console.log(`unzip ${e} fail code:`, i), a && a(i);
                    }
                });
            }
        }
        static fileStat(e, t, i) {
            hl.platform != v.WX && hl.platform != v.QQ && hl.platform != v.OPPO || wx.getFileSystemManager().stat({
                path: e,
                recursive: !0,
                success: function(i) {
                    console.log(`fileStat ${e} success`), t && t(i);
                },
                fail: function(t) {
                    console.log(`fileStat ${e} fail`, t), i && i(t);
                }
            });
        }
        static hasShortcutInstalled(e) {
            if (hl.platform == v.OPPO || hl.platform == v.VIVO) {
                qg.hasShortcutInstalled({
                    success: function(t) {
                        e(t);
                    },
                    fail: function(t) {
                        console.log("hasShortcutInstalled error:", t), e(!1);
                    }
                });
            }
        }
        static installShortcut(e) {
            if (hl.platform == v.OPPO || hl.platform == v.VIVO) {
                qg.installShortcut({
                    success: function() {
                        e(!0);
                    },
                    fail: function(t) {
                        console.log("installShortcut error:", t), e(!1);
                    }
                });
            }
        }
        static setLoadingProgress(e) {
            if (hl.platform == v.OPPO) {
                qg.setLoadingProgress({
                    progress: e
                });
            }
        }
        static loadingComplete(e) {
            if (hl.platform == v.OPPO) {
                qg.loadingComplete({
                    complete: function() {
                        e();
                    }
                });
            }
        }
        static exeVideoSuccess() {
            Laya.MouseManager.enabled = !0, ol.videoSuccessCallBack && ol.videoSuccessCallBack();
        }
        static exeVideoFail() {
            Laya.MouseManager.enabled = !0, ol.videoFailCallBack && ol.videoFailCallBack(), 
            hl.platform == v.NATIVE_IOS && alert("no ad!");
        }
        static exeVideoClose() {
            Laya.MouseManager.enabled = !0, ol.videoCloseCallBack && ol.videoCloseCallBack();
        }
        static exeFullscreenVideoClose() {
            console.log("exeFullscreenVideoClose"), ol.fullscreenVideoCloseCallBack && (il.resumeBGM(), 
            ol.fullscreenVideoCloseCallBack());
        }
        static exeFullscreenVideoShow() {
            ol.fullscreenVideoShowCallBack && (il.stopBGM(), ol.fullscreenVideoShowCallBack());
        }
        static createFullscreenVideo(e, t, i) {
            if (hl.platform == v.NATIVE_IOS) {
                ol.fullscreenVideoCloseCallBack = t, ol.fullscreenVideoShowCallBack = i;
                let a = window.PlatformClass;
                a && a.createClass("JSBridge").call("createFullscreenVideoAd:", e);
            } else if (hl.platform == v.NATIVE_ANDRIOD) {
                ol.fullscreenVideoCloseCallBack = t, ol.fullscreenVideoShowCallBack = i;
                let e = window.PlatformClass;
                e && e.createClass("demo.JSBridge").call("createFullscreenVideoAd");
            }
        }
        static navigateToTeam() {
            if (hl.platform == v.NATIVE_IOS) {
                let e = window.PlatformClass;
                e && e.createClass("JSBridge").call("navigateToAppStoreTeam:", "id" + hl.iosCfg.teamId);
            }
        }
        static addDesktop(e = null, t = null) {
            if (hl.platform == v.OPPO || hl.platform == v.VIVO) {
                qg.installShortcut({
                    success: function() {
                        e && e();
                    },
                    fail: function(e) {
                        console.log("installShortcut error:", e), t && t();
                    }
                });
            } else if (hl.platform == v.QQ) {
                qq.saveAppToDesktop({
                    success: function() {
                        console.log("成功创建桌面图标"), e && e();
                    },
                    fail: function(e) {
                        console.log("创建桌面图标失败", e), t && t();
                    }
                });
            } else hl.platform == v.TT && tt.addShortcut({
                success() {
                    console.log("添加桌面成功"), e && e();
                },
                fail(e) {
                    console.log("添加桌面失败", e.errMsg), t && t();
                }
            });
        }
        static isHaveDesktop() {}
        static createGameBannerAd(e) {
            if (hl.platform == v.OPPO && ol.getSystemInfo().platformVersionCode >= 1076) {
                let t = qq;
                this.oppoGameBannerAd = t.createGameBannerAd({
                    adUnitId: e
                });
            }
        }
        static showGameBannerAd() {
            this.oppoGameBannerAd && this.oppoGameBannerAd.show().then(function() {
                console.log("show success");
            }).catch(function(e) {
                console.log("show fail with:" + e.errCode + "," + e.errMsg);
            });
        }
        static destroyGameBannerAd() {
            this.oppoGameBannerAd && this.oppoGameBannerAd.destroy();
        }
        static createGamePortalAd(e) {
            if (hl.platform == v.OPPO && ol.getSystemInfo().platformVersionCode >= 1076) {
                let t = qg;
                console.log("createGamePortalAd", e), ol.oppoGamePortalAd = t.createGamePortalAd({
                    adUnitId: e
                }), ol.oppoGamePortalAd.load().then(function() {
                    console.log("createGamePortalAd load success"), ol.oppoGamePortalAd.show().then(function() {
                        console.log("createGamePortalAd show success");
                    }).catch(function(e) {
                        console.log("createGamePortalAd show fail with:" + e.errCode + "," + e.errMsg);
                    });
                }).catch(function(e) {
                    console.log("createGamePortalAd load fail with:" + e.errCode + "," + e.errMsg);
                });
            }
        }
        static destroyGamePortalAd() {
            console.log("destroyGamePortalAd"), this.oppoGamePortalAd && this.oppoGamePortalAd.destroy();
        }
        static preLoadNativeAdExtend(e, t = null, i = null) {
            console.log("preLoadNativeAdExtend", e);
            let a = qg.createNativeAd({
                posId: e
            }), s = function(i) {
                if (console.log("原生广告加载完成", i), i && i.adList) {
                    let s = i.adList.pop();
                    if (console.log(JSON.stringify(s)), s.nativeId = e, console.log(s.imgUrlList[0]), 
                    s.imgUrlList[0]) {
                        let e = s.imgUrlList[0].split("?")[0];
                        s.imgUrlList[0] = e, console.log(e);
                    } else s.imgUrlList = [ s.icon ];
                    ol.nativeData = s, ol.nativeAd = a, t && t(s, a);
                }
                a.offLoad(s);
            };
            a.onLoad(s);
            let n = a.load();
            n && n.then(() => {}).catch(e => {
                console.log("原生广告加载失败", JSON.stringify(e)), a.offLoad(s), ol.nativeAd ? t && t(ol.nativeData, ol.nativeAd) : i && i();
            });
        }
        static exeVideoShow() {
            console.log("onAdShow"), ol.videoShowCallBack && ol.videoShowCallBack(), ol.videoShowCallBack = null;
        }
        static createCustomAd(e, t, i, a, s = null, n = null, o = !1) {
            if (hl.platform == v.WX && this._createCustomAdWX(e, t, i, a, s, n, o), hl.platform == v.QQ && this._createCustomAdQQ(e, t, i, a, s, n, o), 
            hl.platform == v.NATIVE_ANDRIOD && hl.appId == H.XM) {
                if (hl.isReviewVersion()) return;
                console.log("创建NativeIcon");
                let s = window.PlatformClass, n = ol.getSystemInfo(), o = n.windowWidth, r = n.windowHeight, l = {
                    x: t / Laya.stage.width * o,
                    y: i / Laya.stage.height * r
                }, h = JSON.stringify(l);
                s && s.createClass("demo.JSBridge").call("createIconNativeAd", h);
                let c = e + "_" + a + "_" + t + "_" + i;
                this.customAdList[c] = !0;
            }
        }
        static _createCustomAdWX(e, t, i, a, s = null, n = null, o = !1) {
            if (!hl.carelessCtrl()) return;
            let r = ol.getSystemInfo();
            if (!ol.versionfunegt(r.SDKVersion, "2.11.1")) return;
            let l = e + "_" + a + "_" + t + "_" + i;
            o && (ol.isHideCustom[l] = !0), console.log("createCustomAdWX", e);
            let h, c = 0, d = r.windowHeight, g = r.windowWidth;
            c = t / Laya.stage.width * g, h = a == al.VERTICAL ? wx.createCustomAd({
                adUnitId: e,
                left: c,
                top: i / Laya.stage.height * d,
                adIntervals: 30,
                width: 72
            }) : a == al.MATRIX ? wx.createCustomAd({
                adUnitId: e,
                left: c,
                top: (i - 60) / Laya.stage.height * d,
                adIntervals: 30,
                width: 280
            }) : wx.createCustomAd({
                adUnitId: e,
                left: c,
                top: i / Laya.stage.height * d,
                adIntervals: 30
            });
            let u = function(e) {
                console.log("custom 广告加载失败", e), h.offLoad(m), h.offError(u), console.log(ol.customAdList[l]), 
                ol.exeCustomCommandList[l] && ol.exeCustomCommandList[l].length > 0 ? ol.isHideCustom[l] ? ol.customAdList[l] && ol.exeCustomCommand() : ol.customAdList[l] ? ol.exeCustomCommand() : n && n() : ol.isHideCustom[l] ? ol.customAdList[l] && ol.customAdList[l].isShow() && ol.customAdList[l].hide() : ol.customAdList[l] ? ol.customAdList[l].isShow() ? s && s() : ol.customAdList[l].show().then(() => {
                    console.log("custom 广告显示"), s && s();
                }).catch(e => {
                    console.log("custom 广告显示失败", e), ol.customAdList[l].destroy(), ol.customAdList[l] = null, 
                    n && n();
                }) : n && n();
            };
            h.onError(u);
            let m = function(e) {
                h.isLoadSuccess = !0, ol.customAdList[l] && (ol.customAdList[l].destroy(), ol.customAdList[l] = null), 
                h.offLoad(m), h.offError(u), ol.customAdList[l] = h, ol.customAdList[l].isLoading = !0;
                ol.customAdList[l].onClose(function() {
                    ol.customAdList[l].destroy(), ol.customAdList[l] = null;
                }), console.log("custom 广告加载成功"), ol.exeCustomCommandList[l] && ol.exeCustomCommandList[l].length > 0 ? ol.exeCustomCommand() : ol.isHideCustom[l] ? (console.log("custom hide"), 
                h.hide().then(() => {
                    console.log("custom 广告hide");
                }).catch(e => {
                    console.log("custom 广告hide失败", e), console.log(h), h && (h.destroy(), h = null);
                })) : (console.log("custom show"), h.show().then(() => {
                    console.log("custom 广告显示"), s && s();
                }).catch(e => {
                    console.log("custom 广告显示失败", e);
                }));
            };
            h.onLoad(m);
        }
        static _createCustomAdQQ(e, t, i, a, s = null, n = null, o = !1) {
            let r = e + "_" + a + "_" + t + "_" + i;
            if (hl.platform != v.QQ) return;
            if (!hl.carelessCtrl()) return;
            let l = ol.getSystemInfo();
            if (!ol.versionfunegt(l.SDKVersion, "1.15.0")) return;
            o && (ol.isHideCustom[r] = !0), console.log("createCustomAdqq", e);
            let h, c = 0, d = l.windowHeight, g = l.windowWidth, u = qq;
            (c = t / Laya.stage.width * g) <= 10 && (c += 30);
            let m = i / Laya.stage.height * d;
            m > d - 73 - 50 && (m -= 34), c >= g - 65 - 50 && (c -= 25), h = a == al.VERTICAL ? u.createBlockAd({
                adUnitId: e,
                style: {
                    left: c,
                    top: m
                },
                size: 4,
                orientation: "vertical"
            }) : a == al.MATRIX ? u.createBlockAd({
                adUnitId: e,
                style: {
                    left: c,
                    top: m
                },
                size: 5,
                orientation: "vertical"
            }) : u.createBlockAd({
                adUnitId: e,
                style: {
                    left: c,
                    top: m
                },
                size: 1,
                orientation: "vertical"
            });
            let p = l.windowHeight / 750, y = function(e) {
                h.offResize(y), console.log("resizeFunc", e), console.log(e.width), console.log(e.height), 
                e.width = e.width / p, e.height = e.height / p;
            };
            h.onResize(y);
            let I = function(e) {
                console.log("block craate error", e), h.offLoad(f), h.offError(I), console.log(ol.customAdList[r]), 
                ol.exeCustomCommandList[r] && ol.exeCustomCommandList[r].length > 0 ? ol.isHideCustom[r] ? ol.customAdList[r] && ol.exeCustomCommand() : ol.customAdList[r] ? ol.exeCustomCommand() : n && n() : ol.isHideCustom[r] ? ol.customAdList[r] && ol.customAdList[r].hide() : ol.customAdList[r] ? ol.customAdList[r].show() : n && n();
            };
            h.onError(I);
            let f = function(e) {
                h.isLoadSuccess = !0, ol.customAdList[r] && (ol.customAdList[r].destroy(), ol.customAdList[r] = null), 
                h.offLoad(f), h.offError(I), ol.customAdList[r] = h, ol.customAdList[r].isLoading = !0, 
                console.log("custom 广告加载成功"), ol.exeCustomCommandList[r] && ol.exeCustomCommandList[r].length > 0 ? ol.exeCustomCommand() : ol.isHideCustom[r] ? (console.log("custom hide"), 
                h.hide()) : (console.log("custom show"), h.show());
            };
            h.onLoad(f);
        }
        static showCustomAd(e, t, i, a = al.SINGLE, s = null, n = null) {
            let o = e + "_" + a + "_" + t + "_" + i;
            if (ol.isHideCustom[o] = !1, hl.platform != v.NATIVE_ANDRIOD || hl.appId != H.XM) ol.customAdList[o] ? ol.pushCustomCommand(1, s, function() {
                console.log("加载CustomCommand"), n && n();
            }, e, t, i, a) : ol.createCustomAd(e, t, i, a, s, function() {
                console.log("加载CustomCommand"), n && n(ol.isHideCustom[o]);
            }); else {
                if (hl.isReviewVersion()) return;
                if (ol.customAdList[o]) {
                    let r = window.PlatformClass;
                    console.log("显示NativeIcon");
                    let l = ol.getSystemInfo(), h = l.windowWidth, c = l.windowHeight, d = {
                        x: t / Laya.stage.width * h,
                        y: i / Laya.stage.height * c
                    }, g = JSON.stringify(d);
                    r && r.createClass("demo.JSBridge").call("showIconNativeAd", g), s && s(), this.handle[o] && Laya.timer.clear(this, this.handle[o]);
                    let u = function() {
                        console.log("刷新原生格子"), ol.createCustomAd(e, t, i, a, s, function() {
                            console.log("加载CustomCommand"), n && n();
                        });
                    };
                    this.handle[o] = u, console.log("刷新原生格子时间:" + hl.getRefershNativeTime()), Laya.timer.loop(hl.getRefershNativeTime(), this, u);
                } else {
                    ol.createCustomAd(e, t, i, a, s, function() {
                        console.log("加载CustomCommand"), n && n();
                    }), console.log("显示NativeIcon");
                    let r = window.PlatformClass, l = ol.getSystemInfo(), h = l.windowWidth, c = l.windowHeight, d = {
                        x: t / Laya.stage.width * h,
                        y: i / Laya.stage.height * c
                    }, g = JSON.stringify(d);
                    r && r.createClass("demo.JSBridge").call("showIconNativeAd", g), s && s(), this.handle[o] && Laya.timer.clear(this, this.handle[o]);
                    let u = function() {
                        console.log("刷新原生格子"), ol.createCustomAd(e, t, i, a, s, function() {
                            console.log("加载CustomCommand"), n && n();
                        });
                    };
                    this.handle[o] = u, console.log("刷新原生格子时间:" + hl.getRefershNativeTime()), Laya.timer.loop(hl.getRefershNativeTime(), this, u);
                }
            }
        }
        static hideCustomAd(e, t, i, a = al.SINGLE) {
            let s = e + "_" + a + "_" + t + "_" + i;
            if (hl.platform != v.NATIVE_ANDRIOD || hl.appId != H.XM) {
                if (ol.isHideCustom[s] = !0, ol.pushCustomCommand(0, function() {}, function() {}, e, t, i, a), 
                ol.customAdList[s]) {
                    let e = ol.customAdList[s];
                    hl.platform == v.QQ ? e.hide() : e.isShow() && e.hide().then(() => {
                        console.log("custom 广告hide");
                    }).catch(t => {
                        console.log("custom 广告hide失败1", t), console.log(e), e && (e.destroy(), e = null);
                    });
                }
            } else if (this.handle[s] && (Laya.timer.clear(this, this.handle[s]), this.handle[s] = null), 
            ol.customAdList[s]) {
                console.log("隐藏NativeIcon");
                let e = window.PlatformClass, a = ol.getSystemInfo(), s = a.windowWidth, n = a.windowHeight, o = {
                    x: t / Laya.stage.width * s,
                    y: i / Laya.stage.height * n
                }, r = JSON.stringify(o);
                e && e.createClass("demo.JSBridge").call("hideIconNativeAd", r);
            } else ol.createCustomAd(e, t, i, a);
        }
        static getBannerCenterPos() {
            let e = {
                x: 0,
                y: 0
            };
            if (console.log(hl.platform), console.log(hl.appId), hl.platform == v.WEB || hl.platform == v.WEB_4399) return e;
            if (v.WX != hl.platform && v.QQ != hl.platform && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return e;
            let t = ol.getSystemInfo(), i = t.windowHeight, a = t.windowWidth;
            return e.y = this.bannerCenterPos.y / i * Laya.stage.height, e.x = this.bannerCenterPos.x / a * Laya.stage.width, 
            e;
        }
        static getBannerWeight() {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return 300;
            if (v.WX != hl.platform && v.QQ != hl.platform && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return 300;
            let e = ol.getSystemInfo().windowWidth;
            return hl.platform == v.WX ? 300 / e * Laya.stage.width : hl.platform == v.NATIVE_ANDRIOD ? 3 * Laya.stage.width / 10 : hl.platform == v.QQ ? 310 / e * Laya.stage.width : 300;
        }
        static getCustomSize() {
            let e = {
                w: 0,
                h: 0
            };
            if (hl.platform == v.NATIVE_IOS || hl.platform == v.VIVO) return e;
            if (v.WX != hl.platform && v.QQ != hl.platform && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return e;
            let t = ol.getSystemInfo(), i = t.windowHeight, a = t.windowWidth, s = 104 / i * Laya.stage.height * .8, n = 60 / a * Laya.stage.width * .8;
            return hl.platform == v.NATIVE_ANDRIOD && (s = 130 / i * Laya.stage.height, n = 130 / a * Laya.stage.width), 
            hl.platform == v.QQ && (n = 65 / a * Laya.stage.width, s = 73 / i * Laya.stage.height), 
            {
                w: n,
                h: s
            };
        }
        static getCustomVSize() {
            let e = {
                w: 0,
                h: 0
            };
            if (hl.platform == v.NATIVE_IOS || hl.platform == v.VIVO) return e;
            if (v.WX != hl.platform && v.QQ != hl.platform && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return e;
            let t = ol.getSystemInfo(), i = t.windowHeight, a = t.windowWidth, s = 369 / i * Laya.stage.height, n = 64.8 / a * Laya.stage.width;
            return hl.platform == v.NATIVE_ANDRIOD && (s = 130 / i * Laya.stage.height, n = 190 / a * Laya.stage.width), 
            hl.platform == v.QQ && (n = 65 / a * Laya.stage.width, s = 73 / i * Laya.stage.height), 
            {
                w: n,
                h: s
            };
        }
        static getCustomMatrixSize() {
            let e = {
                w: 0,
                h: 0
            };
            if (hl.platform == v.NATIVE_IOS || hl.platform == v.VIVO) return e;
            if (v.WX != hl.platform && v.QQ != hl.platform && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return e;
            let t = ol.getSystemInfo(), i = t.windowHeight, a = t.windowWidth, s = 105600 / 360 / i * Laya.stage.height, n = 300 / a * Laya.stage.width;
            return hl.platform == v.NATIVE_ANDRIOD && (s = 130 / i * Laya.stage.height, n = 190 / a * Laya.stage.width), 
            hl.platform == v.QQ && (n = 65 / a * Laya.stage.width, s = 73 / i * Laya.stage.height), 
            {
                w: n,
                h: s
            };
        }
        static exeCustomCommand() {
            for (const e in this.exeCustomCommandList) if (Object.prototype.hasOwnProperty.call(this.exeCustomCommandList, e)) {
                this.exeCustomCommandList[e];
                let t = ol.exeCustomCommandList[e][ol.exeCustomCommandList[e].length - 1];
                if (t) if (0 == t.cmd) hl.platform == v.QQ ? ol.customAdList[e] && (console.log("loopCustomCommand hide"), 
                ol.customAdList[e].hide(), ol.exeCustomCommandList[e] = []) : ol.customAdList[e] && ol.customAdList[e].isShow() && (console.log("loopCustomCommand hide"), 
                ol.customAdList[e].hide(), ol.exeCustomCommandList[e] = []); else if (console.log("PlatformUtil.customAdList[key]" + ol.customAdList[e]), 
                null != ol.customAdList[e]) {
                    if (console.log("loopCustomCommand show"), hl.platform == v.QQ) {
                        let i = ol.customAdList[e].show();
                        i.then && i.then(() => {
                            console.log("loopCustomCommand cb"), t.cb && t.cb();
                        });
                    } else if (!ol.customAdList[e].isShow()) {
                        let i = ol.customAdList[e].show();
                        i.then && i.then(() => {
                            console.log("loopCustomCommand cb"), t.cb && t.cb();
                        });
                    }
                    ol.exeCustomCommandList[e] = [];
                } else console.log("loopCustomCommand fail"), t.fail && t.fail();
                ol.exeCustomCommandTime[e] = nl;
            }
        }
        static pushCustomCommand(e, t, i, a, s, n, o = al.SINGLE) {
            let r = a + "_" + o + "_" + s + "_" + n;
            ol.exeCustomCommandList[r] ? ol.exeCustomCommandList[r].push({
                cmd: e,
                cb: t,
                fail: i,
                x: s,
                y: n
            }) : (ol.exeCustomCommandList[r] = [], ol.exeCustomCommandList[r].push({
                cmd: e,
                cb: t,
                fail: i,
                x: s,
                y: n
            })), ol.exeCustomCommandTime[r] = nl;
        }
        static execXMNativeClick() {
            this.xmNativeClickCallBack && this.xmNativeClickCallBack();
        }
        static registerXMNativeClick(e) {
            this.xmNativeClickCallBack = e;
        }
        static showNativeImg(e, t) {
            if (hl.platform == v.NATIVE_ANDRIOD && hl.appId == H.XM) {
                if (hl.isReviewVersion()) return;
                let i = window.PlatformClass;
                console.log("显示NativeImg");
                let a = ol.getSystemInfo(), s = a.windowWidth, n = a.windowHeight, o = {
                    x: e / Laya.stage.width * s,
                    y: t / Laya.stage.height * n
                }, r = JSON.stringify(o);
                i && i.createClass("demo.JSBridge").call("showImgNativeAd", r);
            }
        }
        static hideNativeImg() {
            if (hl.platform == v.NATIVE_ANDRIOD && hl.appId == H.XM) {
                if (hl.isReviewVersion()) return;
                let e = window.PlatformClass;
                console.log("隐藏NativeImg"), e && e.createClass("demo.JSBridge").call("hideImgNativeAd");
            }
        }
        static getImgSize() {
            if (v.WX != hl.platform && hl.platform == v.NATIVE_ANDRIOD && hl.appId != H.XM) return {
                w: 0,
                h: 0
            };
            let e = ol.getSystemInfo(), t = e.windowHeight, i = e.windowWidth, a = 750 / t * Laya.stage.height;
            return {
                w: 500 / i * Laya.stage.width,
                h: a
            };
        }
        static loadImgFail() {
            L.notify(w.ANDROID_IMG_AD_LOAD, !1);
        }
        static loadImgSuccess() {
            L.notify(w.ANDROID_IMG_AD_LOAD, !0);
        }
        static loadRewardFail() {
            L.notify(w.ANDROID_REWARD_AD_LOAD, !1);
        }
        static loadRewardSuccess() {
            L.notify(w.ANDROID_REWARD_AD_LOAD, !0);
        }
        static screenShot(e = null, t = "fail") {
            let i = new Laya.Texture2D(749, 382), a = new Laya.Texture(i), s = document.getElementById("layaCanvas");
            i.loadImageSource(s, !0);
            let n = new Laya.Sprite();
            n.graphics.drawImage(a, 0, 0, Laya.stage.width, Laya.stage.height);
            let o = new Laya.Box();
            if (o.anchorX = .5, o.anchorY = .5, o.width = Laya.stage.width, o.height = Laya.stage.height, 
            o.x = Laya.stage.width / 2, o.y = Laya.stage.height / 2, o.addChild(n), Laya.stage.addChild(o), 
            "win" == t) {
                let t = new Laya.Image("");
                Laya.stage.addChild(t), t.alpha = 0, t.width = Laya.stage.width, t.height = Laya.stage.height, 
                Laya.Tween.to(t, {
                    alpha: 1
                }, 150, null, Laya.Handler.create(this, () => {
                    Laya.Tween.to(t, {
                        alpha: 0
                    }, 150, null, Laya.Handler.create(this, () => {
                        Laya.Tween.clearAll(t), t.removeSelf(), Laya.Tween.to(o, {
                            scaleX: .5,
                            scaleY: .5
                        }, 500, null, Laya.Handler.create(this, () => {
                            e && e(o, a), Laya.Tween.clearAll(o);
                        }));
                    }));
                }));
            } else "fail" == t && (console.log("失败设置"), e && e(o, a));
        }
        static setAndroidChannelId(e) {
            console.log("setAndroidChannelId" + e), ol.androidChannelId = e;
        }
        static setAndroidOffline(e) {
            console.log("Laya端执行离线时间-----------------------------" + e), tl.getInstance().setOfflineTime();
        }
        static getPackageName(e) {
            if (hl.platform == v.NATIVE_ANDRIOD) {
                ol.isHideBanner = !1;
                let t = window.PlatformClass;
                t && t.createClass("demo.JSBridge").callWithBack(function(t) {
                    e(t);
                }, "getPackageName");
            }
        }
        static execBannerSuccess() {
            ol.bannerSuccessCallBack && ol.bannerSuccessCallBack(), ol.bannerSuccessCallBack = null;
        }
        static execBannerFail() {
            ol.bannerFailCallBack && ol.bannerFailCallBack(), ol.bannerFailCallBack = null;
        }
        static execBannerClose() {
            this.bannerCloseUnixTime = Laya.timer.currTimer;
        }
        static execNativeBannerTouch() {
            ol.nativeBannerTouchCallBack && ol.nativeBannerTouchCallBack(), ol.nativeBannerTouchCallBack = null;
        }
        static registerNativeBannerTouchCallBack(e) {
            ol.nativeBannerTouchCallBack = e;
        }
        static execNativeInterstitialTouchCallBack() {
            ol.nativeInterstitialCallBack && ol.nativeInterstitialCallBack(), ol.nativeInterstitialCallBack = null;
        }
        static registerNativeInterstitialTouchCallBack(e) {
            ol.nativeInterstitialCallBack = e;
        }
        static exitMiniProgram() {
            if (hl.platform == v.WX) {
                wx.exitMiniProgram();
            }
        }
        static requestSubscribeMessage(e, t, i) {
            if (hl.platform == v.WX && wx.requestSubscribeMessage({
                tmplIds: e,
                success: t || function() {},
                fail: i || function() {}
            }), hl.platform == v.QQ) {
                qq.subscribeAppMsg({
                    tmplIds: e,
                    subscribe: !0,
                    success(e) {
                        console.log("----subscribeAppMsg----success", e), t && t();
                    },
                    fail(e) {
                        console.log("----subscribeAppMsg----fail", e), i && i();
                    }
                });
            }
        }
        static getUserInfo(e) {
            if (hl.platform != v.TT) return;
            let t = tt;
            t.login({
                success(i) {
                    console.log("登录成功"), t.getUserInfo({
                        success(t) {
                            console.log("getUserInfo 调用成功", t.userInfo), tl.getInstance().setPlatfromUserInfo(t.userInfo), 
                            e && e();
                        },
                        fail(e) {
                            console.log("getUserInfo 调用失败", e.errMsg);
                        }
                    });
                }
            });
        }
        static copyString(e, t, i) {
            if (hl.platform == v.TT) {
                tt.setClipboardData({
                    data: e,
                    success(e) {
                        console.log("setClipboardData调用成功"), t && t();
                    },
                    fail(e) {
                        console.log("setClipboardData调用失败"), i && i();
                    }
                });
            } else {
                let a = e;
                const s = window.document.createElement("textarea");
                s.value = a, s.setAttribute("readonly", ""), s.style.contain = "strict", s.style.position = "absolute", 
                s.style.left = "-9999px", s.style.fontSize = "12pt";
                const n = window.getSelection();
                let o = !1;
                n.rangeCount > 0 && (o = n.getRangeAt(0)), window.document.body.appendChild(s), 
                s.select(), s.selectionStart = 0, s.selectionEnd = a.length;
                let r = !1;
                try {
                    r = window.document.execCommand("copy"), t && t();
                } catch (e) {
                    e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                    i && i();
                }
                window.document.body.removeChild(s), o && (n.removeAllRanges(), n.addRange(o));
            }
        }
    }
    var rl;
    ol.banner = [], ol.bannerList = [], ol.bannerCount = 0, ol.createBannerTime = 0, 
    ol.systemInfo = null, ol.isHideBanner = !1, ol.girdAd = null, ol.isHideGird = !1, 
    ol.videoAd = null, ol.nativeData = null, ol.nativeAd = null, ol.oppoGameBannerAd = null, 
    ol.oppoGamePortalAd = null, ol.interstitialAd = null, ol.bannerCenterPos = {
        x: 0,
        y: 0
    }, ol.bannerPrePos = {
        x: null,
        y: null
    }, ol.isBannerError = !1, ol.exeBannerCommandTime = 0, ol.exeBannerCommandList = [], 
    ol.bannerIdx = 0, ol.bannerIdList = [], ol.customAdList = {}, ol.isHideCustom = {}, 
    ol.exeCustomCommandTime = {}, ol.exeCustomCommandList = {}, ol.handle = {}, ol.bannerCloseUnixTime = 0, 
    ol.path = "", ol.customAdCloseList = {}, ol.nativeBannerTouchCallBack = null, ol.nativeInterstitialCallBack = null, 
    window.PlatformUtil = ol, function(e) {
        e[e.QZRYJY = 1] = "QZRYJY", e[e.QZHXJY = 2] = "QZHXJY", e[e.CYZQZRY = 3] = "CYZQZRY", 
        e[e.CYQZJY = 4] = "CYQZJY", e[e.CJRYZC = 5] = "CJRYZC";
    }(rl || (rl = {}));
    let ll = {
        share_sec: 2,
        scene: JSON.stringify({
            1: [ 1001, 1037, 1058, 1067, 1095, 1044, 1007, 1008, 1038, 1089 ]
        }),
        share_ctrl: 0,
        careless_ctrl: 1,
        nav_ctrl: 1,
        dot_limit: 8,
        dot_list: {
            1: [ 1 ]
        },
        ver: 1,
        review: 0,
        region: [],
        cut_ios: 0,
        extra: JSON.stringify({
            refresh_native: 3e4,
            clickNativeButtonCtrl: 0,
            delayButton: 0,
            autoClickNativeCount: 0,
            autoPlayVideo: 0,
            buttonTitle: 0,
            scaleButton: 0,
            closeButton: 0,
            exit_ctrl: 0,
            interstitial_times: 0,
            bannerCount: 3,
            refresh_nativeBanner_beforeOnceGame: 9e3,
            refresh_nativeIcon_beforeOnceGame: 15e3,
            refresh_nativeBanner_afterOnceGame: 8e3,
            refresh_nativeIcon_afterOnceGame: 9e3,
            oppo_end_count: 2e3,
            oppo_prior_ad: 1,
            oppo_end_adTotal: 1,
            interstitialTouchCount: 5,
            refresh_custom: 12,
            refresh_Banner_Time: 6e3,
            native_splash_time: 2,
            notifyList: "1、修复了部分地图bug_2、大招模式新增两把超级武器_3、更多游戏资讯请关注官方抖音号：疯狂打游戏",
            strTap: "更新公告",
            notifyVer: 0,
            newPlayerKill: [ 25, 40, 40 ],
            newPlayerTryGun: [ 52 ],
            warmUp: 1
        }),
        storage: 0
    };
    class hl {
        static setData(t, i, s) {
            hl.reward = a, hl.region = s || {
                city: "",
                province: ""
            }, hl.share = t || [ {
                title: "分享",
                img: ""
            } ], i && (hl.config = i, i.region && (hl.config.region = JSON.parse(i.region)), 
            i.dot_list && (hl.config.dot_list = JSON.parse(i.dot_list)), Laya.LocalStorage.setItem(e.CONFIG, JSON.stringify(i))), 
            ol.showShareMenu(), t[r.NORMAL] && ol.onShareAppMessage(t[r.NORMAL].title, t[r.NORMAL].img);
        }
        static getConfig() {
            return hl.config ? hl.config : ll;
        }
        static getShare(e) {
            let t = Math.floor(10 * Math.random()) % hl.share.length;
            e(hl.share[t]);
        }
        static getRewardCtrl(e) {
            if (hl.reward[e]) for (let t in hl.reward) if (hl.reward[t].id == e) return hl.reward[t];
            return hl.reward[t.DEFAULT];
        }
        static isReviewVersion() {
            return hl.platform == v.WEB || hl.platform == v.WEB_4399 || (hl.isZsCtrl ? U.isZSReviewVersion() : 1 == hl.getConfig().review && hl.getConfig().ver == hl.ver && (console.log("版本审核中"), 
            !0));
        }
        static isBlackRegion(e) {
            if (console.log(hl.region), hl.getConfig().region && hl.getConfig().region[e]) for (let t in hl.getConfig().region[e]) {
                let i = hl.getConfig().region[e][t];
                if (i == hl.region.city) return console.log("地区黑名单"), !0;
                if (i == hl.region.province) return console.log("地区黑名单"), !0;
            }
            return console.log("地区白名单"), !1;
        }
        static carelessCtrl() {
            return this.isZsCtrl ? !U.isZSReviewVersion() && (console.log("误触开关:开"), !0) : 1 == hl.getConfig().careless_ctrl ? (console.log("误触开关:开"), 
            !0) : (console.log("误触开关:关"), !1);
        }
        static navCtrl() {
            return 1 == hl.getConfig().nav_ctrl ? (console.log("跳转开关:开"), !0) : (console.log("跳转开关:关"), 
            !1);
        }
        static getDotLimit(e, t) {
            let i = hl.getConfig().dot_list[e];
            return t > hl.getConfig().dot_limit ? 0 : i ? i[t % i.length] : 0;
        }
        static getExtra() {
            let e = hl.getConfig().extra;
            return JSON.parse(e);
        }
        static getRefershNativeTime() {
            if (hl.platform == v.VIVO) {
                return this.getExtra().refresh_native ? this.getExtra().refresh_native : 9e5;
            }
            if (hl.platform == v.OPPO) return 9e4;
            if (hl.platform == v.NATIVE_ANDRIOD) {
                return console.log("this.getExtra().refresh_native " + this.getExtra().refresh_native), 
                null != this.getExtra().refresh_native ? this.getExtra().refresh_native : 3e4;
            }
        }
        static clickNativeButtonCtrl() {
            return hl.platform == v.WEB || hl.platform == v.WEB_4399 ? 1 : hl.platform == v.VIVO || hl.platform == v.OPPO ? 1 == hl.getExtra().clickNativeButtonCtrl ? 1 : 2 == hl.getExtra().clickNativeButtonCtrl ? 2 : 0 : void 0;
        }
        static getDelayButton() {
            if (hl.platform == v.WEB || hl.platform == v.WEB_4399) return 2e3;
            let e = this.getExtra().delayButton;
            return hl.isReviewVersion() && (e = 1), e;
        }
        static getAutoPlayVideo() {
            return hl.getExtra().autoPlayVideo;
        }
        static getButtonTitle() {
            return 1 == hl.getExtra().buttonTitle;
        }
        static getAutoClickNativeCount() {
            return hl.getExtra().autoClickNativeCount;
        }
        static getScaleButton() {
            return 1 == hl.getExtra().scaleButton;
        }
        static getCloseButton() {
            return hl.getExtra().closeButton;
        }
        static exitCtrl() {
            return this.getExtra().exit_ctrl;
        }
        static getInterstitial_times() {
            return this.getExtra().interstitial_times;
        }
        static getAndroidChannelId(e) {
            hl.platform == v.NATIVE_ANDRIOD && (console.log("androidChannelId" + ol.androidChannelId), 
            e(ol.androidChannelId));
        }
        static getRefresh_nativeBanner_beforeOnceGame() {
            return console.log("当前解析出来的数据：", this.getExtra()), this.getExtra().refresh_nativeBanner_beforeOnceGame;
        }
        static getRefresh_nativeIcon_beforeOnceGame() {
            return this.getExtra().refresh_nativeIcon_beforeOnceGame;
        }
        static getRefresh_nativeBanner_afterOnceGame() {
            return this.getExtra().refresh_nativeBanner_afterOnceGame;
        }
        static getRefresh_nativeIcon_afterOnceGame() {
            return this.getExtra().refresh_nativeIcon_afterOnceGame;
        }
        static getBannerCount() {
            return this.getExtra().bannerCount ? this.getExtra().bannerCount : 12;
        }
        static getCustomCount() {
            return this.getExtra().refresh_custom ? this.getExtra().refresh_custom : 12;
        }
        static getOppo_end_count() {
            return this.getExtra().oppo_end_count;
        }
        static getOppo_prior_ad() {
            return this.getExtra().oppo_prior_ad;
        }
        static getoOppo_end_adTotal() {
            return this.getExtra().oppo_end_adTotal;
        }
        static getInterstitialTouchCount() {
            return null != this.getExtra().interstitialTouchCount ? this.getExtra().interstitialTouchCount : 5;
        }
        static getRefreshBannerTime() {
            return null != this.getExtra().refresh_Banner_Time ? this.getExtra().refresh_Banner_Time : 1e4;
        }
        static getNativeSplashTime() {
            return null != this.getExtra().native_splash_time ? this.getExtra().native_splash_time : 2;
        }
        static getViolenceCtrl() {
            return hl.platform != v.WEB && (hl.platform != v.WEB_4399 && (!this.isReviewVersion() && (hl.isZsCtrl ? U.getViolenceCtrl() : 1 == this.getExtra().violence_ctrl)));
        }
        static getJumpBackGezi() {
            return this.getExtra().zs_jump_back_gezi ? this.getExtra().zs_jump_back_gezi : 0;
        }
        static getNativeCtrl() {
            return 1 == this.getExtra().nativeCtrl;
        }
        static isShowReviewUI() {
            return hl.platform == v.WX || hl.platform == v.WEB ? !!hl.isReviewVersion() || !tl.getInstance().ruleCtrl(2) : !(hl.platform != v.QQ || !hl.isReviewVersion());
        }
        static getGameAwardBannerCtrl() {
            return this.isZsCtrl ? U.getGameAwardBannerCtrl() : this.getExtra().zs_click_award_num ? this.getExtra().zs_click_award_num : 0;
        }
        static getNotifyVer() {
            return this.getExtra().notifyVer ? this.getExtra().notifyVer : 0;
        }
        static getNotify() {
            let e = {
                strTap: "更新公告",
                list: []
            };
            if (this.getExtra().strTap && (e.strTap = this.getExtra().strTap), this.getExtra().notifyList) {
                let t = this.getExtra().notifyList.split("_");
                e.list = t;
            }
            return e;
        }
        static getWhile() {
            if (this.getExtra().white) {
                for (let e = 0; e < this.getExtra().white.length; e++) {
                    if (this.getExtra().white[e] == tl.getInstance().getOpenId()) return !0;
                }
                return !1;
            }
            return !1;
        }
        static getStorage() {
            return hl.getConfig().storage;
        }
        static isAutoFullScreen() {
            return 1 == this.getExtra().isAutoFullScreen;
        }
        static getFullscreedVideoTime() {
            return this.getExtra().fullScreenTime ? this.getExtra().fullScreenTime : 0;
        }
        static getNewPlayerKill() {
            return this.getExtra().newPlayerKill ? this.getExtra().newPlayerKill : JSON.parse(ll.extra).newPlayerKill;
        }
        static getNewPlayerTryGun() {
            return this.getExtra().newPlayerTryGun ? this.getExtra().newPlayerTryGun : JSON.parse(ll.extra).newPlayerTryGun;
        }
        static getWarmUp() {
            return 1 == this.getExtra().warmUp;
        }
    }
    if (hl.platform = v.WEB, hl.gameType = rl.QZHXJY, hl.isDebug = !1, hl.share = [], 
    hl.reward = {}, hl.isUnZip = !1, hl.ver = 1, hl.zsVer = "1.0", hl.iosCfg = {
        buId: "",
        teamId: ""
    }, hl.isTest = !1, hl.isCP = !1, hl.isShowFullscreen = !0, hl.costGold = 1.07, hl.costDiamond = 1.1, 
    hl.secret = "", hl.otherViewComBackMenu = 0, hl.isRefinedVersion = !0, hl.adpaterIpad = !0, 
    hl.isZsCtrl = !1, hl.isEncode = !0, "undefined" != typeof wx) hl.platform = v.WX, 
    "undefined" != typeof qq ? (hl.platform = v.QQ, console.log("设置为QQ平台")) : "undefined" != typeof tt ? (hl.platform = v.TT, 
    console.log("设置为头条平台")) : console.log("设置为微信平台"); else if ("undefined" != typeof qg) {
        let e = qg;
        const t = e.getSystemInfoSync();
        console.log("brand", t.brand), "OPPO" == t.brand ? (hl.platform = v.OPPO, console.log("设置位OPPO平台")) : (hl.platform = v.VIVO, 
        console.log("设置位VIVO平台")), window.wx = e;
    } else if (void 0 !== window.conch) {
        let e = window.conchConfig.getOS();
        "Conch-ios" == e ? (hl.platform = v.NATIVE_IOS, console.log("设置为原生ios")) : "Conch-android" == e && (hl.platform = v.NATIVE_ANDRIOD, 
        console.log("设置为原生android"));
    }
    if (hl.platform == v.WX) {
        if (hl.gameType == rl.CJRYZC) {
            let e = [ "adunit-999c8b7026bb6391" ];
            for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
            n[0] = "adunit-e45dcff9f959f22b", n[1] = "adunit-22a3c6c73c78b7c4", n[2] = "adunit-1fb103f8da3d1f5a", 
            o[0] = "adunit-f85b9afe70ea6e2e", u[0] = "adunit-2b66290b90d70a3f", u[1] = "adunit-db64512c0f66bb10", 
            p[0] = "adunit-e7b7c936bbfa79e4", m[0] = "adunit-cfd29e9eb2b87ac9", m[1] = "adunit-5d91d99af13eb7f4", 
            y[0] = "adunit-e66634c8726facf9", f[0] = "adunit-417a9e10ee9aea4d", hl.appId = "wxa5dc0af08b4b0b10", 
            hl.ver = 6, hl.zsVer = "1", hl.resVer = "6";
        } else if (hl.gameType == rl.QZHXJY) {
            let e = [ "adunit-5e6fad8e5f43d782" ];
            for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
            n[0] = "adunit-97a4e96d29d9f791", n[1] = "adunit-79defc66acb0f618", n[2] = "adunit-50c9d18a73ef71d3", 
            o[0] = "adunit-c9d44f42542c5b7b", u[0] = "adunit-da379575a05b050f", u[1] = "adunit-5144dc7514891964", 
            p[0] = "adunit-e7b7c936bbfa79e4", m[0] = "adunit-63158eab297789fd", m[1] = "adunit-70a2b81d4c0ec297", 
            y[0] = "adunit-015bb0c27778d259", f[0] = "adunit-d34f24f856216029", hl.appId = "wxddc285055d66a797", 
            hl.ver = 12, hl.zsVer = "1", hl.resVer = "6";
        } else if (hl.gameType == rl.QZRYJY) {
            let e = [ "adunit-1ace0ecc09429e03" ];
            for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
            n[0] = "adunit-0a95b0549524530f", n[1] = "adunit-b7f5edeb6bc25636", n[2] = "adunit-83a3b4095a299b9c", 
            o[0] = "adunit-15f11b603225da6d", u[0] = "adunit-37d87ff71ab789bc", u[1] = "adunit-cff786798fb3e5ba", 
            m[0] = "adunit-4ad170a0ab44b11c", m[1] = "adunit-9230ac28b1e686af", y[0] = "adunit-1f681654bc69e26a", 
            f[0] = "adunit-19a69b60cf3519d7", hl.appId = "wxefbf0e298a14c2b3", hl.ver = 7, hl.zsVer = "1", 
            hl.zsVer = "1.0.8", hl.secret = "6jGO1kknbb6ByWfI", hl.isZsCtrl = !1, hl.resVer = "6";
        } else if (hl.gameType == rl.CYQZJY) {
            let e = [ "adunit-12b5e62727b2febd" ];
            for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
            n[0] = "adunit-791cf341f1bd169e", n[1] = "adunit-a4aba89fcdc8b73f", n[2] = "adunit-c569fc06863aee68", 
            o[0] = "adunit-9e02a706e76a9af7", u[0] = "adunit-731f1f7f32669bf5", u[1] = "adunit-511f9bf6a8f0b18b", 
            m[0] = "adunit-3ac05e5bac5ee748", m[1] = "adunit-a694a0ceb8bc5fbb", y[0] = "adunit-6ae7209186f3f9d9", 
            f[0] = "adunit-d5745519e865136b", hl.appId = "wx6deb72dde4b924b5", hl.ver = 2, hl.zsVer = "1.0.1", 
            hl.secret = "g4LEBWRxwWcuVZPe", hl.isZsCtrl = !0, hl.resVer = "4";
        } else if (hl.gameType == rl.CYZQZRY) {
            let e = [ "adunit-b6f03fecf3c5e58f" ];
            for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
            n[0] = "adunit-8af91ae12c7db116", n[1] = "adunit-fba9edec8faf63c5", n[2] = "adunit-b4bb0f32759ad549", 
            o[0] = "adunit-5ed5cc32b97d92ea", u[0] = "adunit-6f23f146d0d1eabe", u[1] = "adunit-e27bb13f9977be47", 
            m[0] = "adunit-a588444f98362877", m[1] = "adunit-5615c40e607c917d", p[0] = "adunit-3e7eaadd47374aeb", 
            y[0] = "adunit-ac3d8015ae0e008b", f[0] = "adunit-ce4abc80616ec407", hl.appId = "wx516add44cd48648f", 
            hl.ver = 11, hl.isZsCtrl = !1, hl.resVer = "6";
        }
    } else if (hl.platform == v.QQ) {
        let e = [ "3e01a6954744310f11dd928181ac1b43" ];
        for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
        n[0] = "9870a30c8387d3719fb4f4958a6184bc", l[0] = "fb96d8ec1613adb459a609341b7ea2ee", 
        o[0] = "d069ff192987a579ed4add02fe726874", u[0] = "de1043e821bb1833831134604340dae3", 
        p[0] = "de1043e821bb1833831134604340dae3", y[0] = "c71489b669cc9b6d2892e3faca42f149", 
        f[0] = "c71489b669cc9b6d2892e3faca42f149", hl.appId = "1112169204", hl.ver = 1, 
        hl.zsVer = "1", hl.gameType = rl.QZRYJY;
    } else if (hl.platform == v.NATIVE_IOS) {
        let e = [ "" ];
        for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
        c[0] = "", n[0] = "", hl.iosCfg.teamId = "1528473223", hl.appId = "qzryjy_ios", 
        hl.ver = 1, hl.iosCfg.buId = "";
    } else if (hl.platform == v.NATIVE_ANDRIOD) {
        let e = [ "b60d5935f79b46" ];
        for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
        c[0] = "b60d5935f763b7", n[0] = "b60d59360226c8", o[0] = "999000003", hl.ver = 1;
        let t = window.PlatformClass;
        hl.appId = "qzryjy_android_233", t && t.createClass("demo.JSBridge").callWithBack(function(e) {
            if (console.log("getAndroidChannelId" + e), 0 == (e = Number(e))) hl.appId = H.TAP, 
            hl.ver = 2; else if (1 == e) hl.appId = H.XM, hl.ver = 6; else if (2 == e) hl.appId = H.C_233, 
            hl.ver = 4; else if (3 == e) hl.appId = H.HYKB, hl.ver = 2; else if (4 == e) hl.appId = H.MMY, 
            hl.ver = 2; else if (5 == e) hl.appId = H.TEST; else if (6 == e) hl.appId = H.C233_ME, 
            hl.ver = 2; else if (8 == e) {
                hl.appId = H.VIVO, window.showAlertOnJsException(!1);
            }
            console.log(hl.appId);
        }, "getAndroidChannelId");
    } else if (hl.platform == v.VIVO) {
        let e = [ "9f11be6c30ea429ba71d661d485bcf32" ];
        for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
        g[0] = "117137107e3a4b6d9233e961604b13bc", n[0] = "117137107e3a4b6d9233e961604b13bc", 
        o[0] = "e146761009e94af49dd9f27c5b911200", hl.appId = "105541485", hl.ver = 3, hl.zsVer = "1";
    } else if (hl.platform == v.OPPO) {
        let e = [ "437721" ];
        for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
        g[0] = "437727", g[1] = "437724", hl.appId = "30714057", hl.ver = 1, hl.zsVer = "1";
    } else if (hl.platform == v.TT) {
        let e = [ "8l807icb5j626yldc3" ];
        for (let t in a) a[t].ad_id = e[parseInt(t) % e.length];
        hl.appId = "tt20e95654bfd0317302", hl.ver = 10, hl.zsVer = "1", hl.resVer = "6";
    } else "h5api" in Laya.Browser.window && (hl.platform = v.WEB_4399);
    let cl = "";
    hl.platform != v.WX && hl.platform != v.TT && hl.platform != v.QQ || (cl = wx.env.USER_DATA_PATH);
    const dl = `${cl}/package`, gl = `${dl}/${hl.resVer}`;
    let ul = {
        IMG_SHARE_ICON: "main/ui/img_game65.png",
        IMG_AD_ICON: "main/ui/img_game60.png",
        IMG_MASK_BG: "sub1/ui/scale9/img_13.png",
        JSON_UI_MAP: "sub1/ui/ui.json",
        CHANNEL_BAR_BG: [ "main/channel/img_0.png", "main/channel/img_1.png", "main/channel/img_2.png", "main/channel/img_3.png" ],
        PFB_UI_BREAK_STAR: "prefab/BreakStar.json",
        IMG_DAN_ROOT: "sub1/ui/dan/",
        MENU_SCENE: "limit/3d/LayaScene_menuScene/Conventional/menuScene.ls",
        EFFECT_PREFEB: "sub2/3d/LayaScene_effect/Conventional/effect.lh",
        SKIN_PREFEB: "sub2/3d/LayaScene_role/Conventional/role.lh",
        SKIN_ZOMBIE: "sub13/3d/LayaScene_zombie/Conventional/zombie.lh",
        WEAPON_PREFEB: "sub3/3d/LayaScene_weapon/Conventional/weapon.lh",
        WEAPON_OTHER_PREFEB: "sub4/3d/LayaScene_weapon_tesu/Conventional/weapon_tesu.lh",
        PARTS_PREFEB: "sub18/3d/LayaScene_Decorate_hd/Conventional/Decorate_hd.lh",
        MAP1: "sub8/3d/LayaScene_map1/Conventional/map1.ls",
        MAP2: "sub9/3d/LayaScene_map2/Conventional/map2.ls",
        MAP3: "sub10/3d/LayaScene_map3/Conventional/map3.ls",
        BEHIT_UI: "sub1/ui/game/img_34.png",
        ATTACK_UI: {
            TOUCH: "sub1/ui/game/img_4.png",
            TOUCHED: "sub1/ui/game/img_5.png"
        },
        BOMB_UI: {
            TOUCH: "sub1/ui/game/img_36.png",
            TOUCHED: "sub1/ui/game/img_35.png"
        },
        JUMP_UI: {
            TOUCH: "sub1/ui/game/img_8.png",
            TOUCHED: "sub1/ui/game/img_9.png"
        },
        AUTO_ATTACK_UI: {
            AUTO_ATTACK: "sub1/ui/game/img_18.png",
            NOT_AUTO_ATTACK: "sub1/ui/game/img_17.png"
        },
        HP_PRO_UI: {
            HP_MORE_50: "sub1/ui/scale9/img_7.png",
            HP_LESS_50: "sub1/ui/scale9/img_9.png",
            HP_LESS_25: "sub1/ui/scale9/img_58.png"
        },
        FLOATING_UP_GHOST_UI: "sub1/ui/game/img_23.png",
        BULLSEYE: {
            QUASI_WHITE: "sub1/ui/game/img_15.png",
            QUASI_RED: "sub1/ui/game/img_24.png",
            VERTICAL_WHITE: "sub1/ui/game/img_13.png",
            VERTICAL_RED: "sub1/ui/game/img_25.png",
            POINT_WHITE: "sub1/ui/game/img_14.png",
            POINT_RED: "sub1/ui/game/img_26.png",
            VERTICAL_WHITE_1: "sub1/ui/game/img_13_1.png",
            POINT_WHITE_1: "sub1/ui/game/img_14_1.png"
        },
        BULLSEYE1: {
            VERTICAL_WHITE: "sub1/ui/game/img_Rect_1.png",
            VERTICAL_RED: "sub1/ui/game/img_Rect_2.png",
            POINT_WHITE: "sub1/ui/game/img_Point_1.png",
            POINT_RED: "sub1/ui/game/img_Point_2.png",
            VERTICAL_WHITE_1: "sub1/ui/game/img_Rect_3.png",
            POINT_WHITE_1: "sub1/ui/game/img_Point_3.png"
        },
        HEADSHOT_UI: {
            CLASS_1: "sub1/ui/game/img_45.png",
            CLASS_2: "sub1/ui/game/img_46.png"
        },
        HEAD_TOP_FRAME_UI: {
            FRIENDLY: "sub1/ui/scale9/img_4.png",
            ENEMY: "sub1/ui/scale9/img_5.png"
        },
        TOP_HRAD_STATE_UI: {
            NORMAL: "sub1/ui/game/img_1.png",
            DIE: "sub1/ui/game/img_2.png"
        },
        SQUATDOWN_UI: {
            TOUCH: "sub1/ui/game/img_7.png",
            TOUCHED: "sub1/ui/game/img_6.png"
        },
        SYNTHESIS_UI: {
            TOUCH: "sub1/ui/equip/img_4.png",
            TOUCHED: "sub1/ui/equip/img_3.png",
            BG: "sub1/ui/equip/img_10.jpg",
            CELL_TOUCH: "sub1/ui/scale9/img_24.png",
            CELL_TOUCHED: "sub1/ui/scale9/img_23.png",
            SYNTHESIS_ATLAS: "sub1/effect/effect1/effect1.atlas",
            SYNTHESIS_ANI: "ani/SynthesisEffect.ani",
            UNLOCK1_ATLAS: "sub1/effect/effect2/01/01.atlas",
            UNLOCK1_ANI: "ani/NewUnlockArm1.ani",
            UNLOCK2_ATLAS: "sub1/effect/effect2/02/02.atlas",
            UNLOCK2_ANI: "ani/NewUnlockArm2.ani"
        },
        WAREHOUSE_UI: {
            TOUCH: "sub1/ui/equip/img_1.png",
            TOUCHED: "sub1/ui/equip/img_2.png",
            BG: "sub1/ui/equip/img_11.jpg",
            GRADE_LABEL_ROOT: "sub1/ui/warehouse/img_pingji_",
            ARM_NAME_GRADE_BG_ROOT: "sub1/ui/scale9/img_pingjikuang_bg_",
            ARM_GRADE_FRAME: "sub1/ui/scale9/img_pingjikuang_",
            RIGHTCELLFRAME: {
                TOUCH: "sub1/ui/scale9/img_46.png",
                TOUCHED: "sub1/ui/scale9/img_47.png"
            }
        },
        BUYTYPE_UI: {
            GOLD: "sub1/ui/common/img_3.png",
            DIAMOND: "sub1/ui/common/img_4.png"
        },
        FNT: {
            FNT1: "sub1/fnt/fnt1/fnt1.fnt",
            FNT2: "sub1/fnt/fnt2/fnt2.fnt",
            FNT3: "sub1/fnt/fnt3/fnt3.fnt",
            FNT4: "sub1/fnt/fnt4/fnt4.fnt",
            FNT5: "sub1/fnt/fnt5/fnt5.fnt"
        },
        END_UI: {
            MVP_UI: {
                FIRST: "sub1/ui/end/img_3.png",
                SECOND: "sub1/ui/end/img_2.png"
            },
            THIME_UI: {
                WIN: "sub1/ui/end/img_5.png",
                FAIL: "sub1/ui/end/img_6.png"
            },
            BG: {
                WIN: "sub1/ui/end/img_4.png",
                FAIL: "sub1/ui/end/img_10.png"
            },
            DOUBLE_UI: {
                THREE: "sub1/ui/end/3.png",
                FOUR: "sub1/ui/end/4.png",
                FIVE: "sub1/ui/end/5.png",
                SIX: "sub1/ui/end/6.png"
            }
        },
        ROLE_VIEW_UI: {
            GRADE_FRAME_UI_ROOT: "sub1/ui/scale9/img_role_"
        },
        GAMING_BOTTOM_ARM_UI: {
            TOUCH: "sub1/ui/scale9/img_1.png",
            TOUCHED: "sub1/ui/scale9/img_2.png"
        },
        IMG_DIAMOND_ICON: "sub1/ui/common/img_4.png",
        IMG_GOLD_ICON: "sub1/ui/common/img_3.png",
        ITEM_ROOT: "sub1/item/",
        ROLE_ROOT: "sub1/role/",
        ZOMBIEMODE_GAMING_UI: {
            ROUND_UI: {
                ONE: "sub1/ui/game/img_shenghua_2.png",
                TWO: "sub1/ui/game/img_shenghua_3.png",
                THREE: "sub1/ui/game/img_shenghua_4.png"
            },
            CLEANSCUESS: "sub1/ui/game/img_shenghua_1.png",
            CLEANFINISH: "sub1/ui/game/img_shenghua_6.png",
            DOWNTIME_BG_UI: {
                BEFORE10S: "sub1/ui/game/img_shenghua_8.png",
                AFTER10S: "sub1/ui/game/img_shenghua_9.png"
            }
        },
        DISCARD_UI: {
            TOUCH: "sub1/ui/game/img_diu_1.png",
            TOUCHED: "sub1/ui/game/img_diu_2.png"
        },
        DOUBLE_HIT_UI: {
            CLASS_1: "sub1/ui/game/img_52.png",
            CLASS_2: "sub1/ui/game/img_47.png",
            CLASS_3: "sub1/ui/game/img_48.png"
        },
        MARK_UI: {
            PRIMARY: "sub1/ui/game/img_49.png",
            INTERMEDIATE: "sub1/ui/game/img_50.png"
        },
        LIBRARY_UI: {
            RIGHT_BTN_UI: {
                TOUCH: "sub1/ui/scale9/img_library_4.png",
                TOUCHED: "sub1/ui/scale9/img_library_3.png"
            },
            LEFT_BTN_UI: {
                TOUCH: "sub1/ui/scale9/img_library_2.png",
                TOUCHED: "sub1/ui/scale9/img_library_1.png"
            }
        },
        ADICON: {
            TT_AD_1: "sub1/ui/common/img_tt_1.png",
            TT_AD_2: "sub1/ui/common/img_tt_2.png"
        },
        GRADE_UI: {
            GRADE_TAB_ROOT: "sub1/ui/library/img_grade_",
            GRADE_BG_ROOT: "sub1/ui/library/img_grade_bg_",
            GRADE_BG_BOTTOM_ROOT: "sub1/ui/library/img_grade_bg_bottom_"
        }
    };
    hl.platform != v.NATIVE_ANDRIOD && hl.platform != v.NATIVE_IOS || (ul = {
        IMG_SHARE_ICON: "main/ui/img_game65.png",
        IMG_AD_ICON: "main/ui/img_game60.png",
        IMG_MASK_BG: "sub1/ui/scale9/img_13.png",
        JSON_UI_MAP: "sub1/ui/ui.json",
        CHANNEL_BAR_BG: [ "main/channel/img_0.png", "main/channel/img_1.png", "main/channel/img_2.png", "main/channel/img_3.png" ],
        PFB_UI_BREAK_STAR: "prefab/BreakStar.json",
        IMG_DAN_ROOT: "sub1/ui/dan/",
        MENU_SCENE: "native/sub2/3d/LayaScene_menuScene/Conventional/menuScene.ls",
        EFFECT_PREFEB: "native/sub2/3d/LayaScene_effect/Conventional/effect.lh",
        SKIN_PREFEB: "native/sub2/3d/LayaScene_role/Conventional/role.lh",
        SKIN_ZOMBIE: "native/sub13/3d/LayaScene_zombie/Conventional/zombie.lh",
        WEAPON_PREFEB: "native/sub3/3d/LayaScene_weapon/Conventional/weapon.lh",
        WEAPON_OTHER_PREFEB: "native/sub4/3d/LayaScene_weapon_tesu/Conventional/weapon_tesu.lh",
        PARTS_PREFEB: "native/sub18/3d/LayaScene_Decorate_hd/Conventional/Decorate_hd.lh",
        MAP1: "native/sub8/3d/LayaScene_map1/Conventional/map1.ls",
        MAP2: "native/sub9/3d/LayaScene_map2/Conventional/map2.ls",
        MAP3: "native/sub10/3d/LayaScene_map3/Conventional/map3.ls",
        BEHIT_UI: "sub1/ui/game/img_34.png",
        ATTACK_UI: {
            TOUCH: "sub1/ui/game/img_4.png",
            TOUCHED: "sub1/ui/game/img_5.png"
        },
        BOMB_UI: {
            TOUCH: "sub1/ui/game/img_36.png",
            TOUCHED: "sub1/ui/game/img_35.png"
        },
        JUMP_UI: {
            TOUCH: "sub1/ui/game/img_8.png",
            TOUCHED: "sub1/ui/game/img_9.png"
        },
        AUTO_ATTACK_UI: {
            AUTO_ATTACK: "sub1/ui/game/img_18.png",
            NOT_AUTO_ATTACK: "sub1/ui/game/img_17.png"
        },
        HP_PRO_UI: {
            HP_MORE_50: "sub1/ui/scale9/img_7.png",
            HP_LESS_50: "sub1/ui/scale9/img_9.png",
            HP_LESS_25: "sub1/ui/scale9/img_58.png"
        },
        FLOATING_UP_GHOST_UI: "sub1/ui/game/img_23.png",
        BULLSEYE: {
            QUASI_WHITE: "sub1/ui/game/img_15.png",
            QUASI_RED: "sub1/ui/game/img_24.png",
            VERTICAL_WHITE: "sub1/ui/game/img_13.png",
            VERTICAL_RED: "sub1/ui/game/img_25.png",
            POINT_WHITE: "sub1/ui/game/img_14.png",
            POINT_RED: "sub1/ui/game/img_26.png",
            VERTICAL_WHITE_1: "sub1/ui/game/img_13_1.png",
            POINT_WHITE_1: "sub1/ui/game/img_14_1.png"
        },
        BULLSEYE1: {
            VERTICAL_WHITE: "sub1/ui/game/img_Rect_1.png",
            VERTICAL_RED: "sub1/ui/game/img_Rect_3.png",
            POINT_WHITE: "sub1/ui/game/img_Point_1.png",
            POINT_RED: "sub1/ui/game/img_Point_2.png",
            VERTICAL_WHITE_1: "sub1/ui/game/img_Rect_3.png",
            POINT_WHITE_1: "sub1/ui/game/img_Point_3.png"
        },
        HEADSHOT_UI: {
            CLASS_1: "sub1/ui/game/img_45.png",
            CLASS_2: "sub1/ui/game/img_46.png"
        },
        HEAD_TOP_FRAME_UI: {
            FRIENDLY: "sub1/ui/scale9/img_4.png",
            ENEMY: "sub1/ui/scale9/img_5.png"
        },
        TOP_HRAD_STATE_UI: {
            NORMAL: "sub1/ui/game/img_1.png",
            DIE: "sub1/ui/game/img_2.png"
        },
        SQUATDOWN_UI: {
            TOUCH: "sub1/ui/game/img_7.png",
            TOUCHED: "sub1/ui/game/img_6.png"
        },
        SYNTHESIS_UI: {
            TOUCH: "sub1/ui/equip/img_4.png",
            TOUCHED: "sub1/ui/equip/img_3.png",
            BG: "sub1/ui/equip/img_10.jpg",
            CELL_TOUCH: "sub1/ui/scale9/img_24.png",
            CELL_TOUCHED: "sub1/ui/scale9/img_23.png",
            SYNTHESIS_ATLAS: "sub1/effect/effect1/effect1.atlas",
            SYNTHESIS_ANI: "ani/SynthesisEffect.ani",
            UNLOCK1_ATLAS: "sub1/effect/effect2/01/01.atlas",
            UNLOCK1_ANI: "ani/NewUnlockArm1.ani",
            UNLOCK2_ATLAS: "sub1/effect/effect2/02/02.atlas",
            UNLOCK2_ANI: "ani/NewUnlockArm2.ani"
        },
        WAREHOUSE_UI: {
            TOUCH: "sub1/ui/equip/img_1.png",
            TOUCHED: "sub1/ui/equip/img_2.png",
            BG: "sub1/ui/equip/img_11.jpg",
            GRADE_LABEL_ROOT: "sub1/ui/warehouse/img_pingji_",
            ARM_NAME_GRADE_BG_ROOT: "sub1/ui/scale9/img_pingjikuang_bg_",
            ARM_GRADE_FRAME: "sub1/ui/scale9/img_pingjikuang_",
            RIGHTCELLFRAME: {
                TOUCH: "sub1/ui/scale9/img_46.png",
                TOUCHED: "sub1/ui/scale9/img_47.png"
            }
        },
        BUYTYPE_UI: {
            GOLD: "sub1/ui/common/img_3.png",
            DIAMOND: "sub1/ui/common/img_4.png"
        },
        FNT: {
            FNT1: "sub1/fnt/fnt1/fnt1.fnt",
            FNT2: "sub1/fnt/fnt2/fnt2.fnt",
            FNT3: "sub1/fnt/fnt3/fnt3.fnt",
            FNT4: "sub1/fnt/fnt4/fnt4.fnt",
            FNT5: "sub1/fnt/fnt5/fnt5.fnt"
        },
        END_UI: {
            MVP_UI: {
                FIRST: "sub1/ui/end/img_3.png",
                SECOND: "sub1/ui/end/img_2.png"
            },
            THIME_UI: {
                WIN: "sub1/ui/end/img_5.png",
                FAIL: "sub1/ui/end/img_6.png"
            },
            BG: {
                WIN: "sub1/ui/end/img_4.png",
                FAIL: "sub1/ui/end/img_10.png"
            },
            DOUBLE_UI: {
                THREE: "sub1/ui/end/3.png",
                FOUR: "sub1/ui/end/4.png",
                FIVE: "sub1/ui/end/5.png",
                SIX: "sub1/ui/end/6.png"
            }
        },
        ROLE_VIEW_UI: {
            GRADE_FRAME_UI_ROOT: "sub1/ui/scale9/img_role_"
        },
        GAMING_BOTTOM_ARM_UI: {
            TOUCH: "sub1/ui/scale9/img_1.png",
            TOUCHED: "sub1/ui/scale9/img_2.png"
        },
        IMG_DIAMOND_ICON: "sub1/ui/common/img_4.png",
        IMG_GOLD_ICON: "sub1/ui/common/img_3.png",
        ITEM_ROOT: "sub1/item/",
        ROLE_ROOT: "sub1/role/",
        ZOMBIEMODE_GAMING_UI: {
            ROUND_UI: {
                ONE: "sub1/ui/game/img_shenghua_2.png",
                TWO: "sub1/ui/game/img_shenghua_3.png",
                THREE: "sub1/ui/game/img_shenghua_4.png"
            },
            CLEANSCUESS: "sub1/ui/game/img_shenghua_1.png",
            CLEANFINISH: "sub1/ui/game/img_shenghua_6.png",
            DOWNTIME_BG_UI: {
                BEFORE10S: "sub1/ui/game/img_shenghua_8.png",
                AFTER10S: "sub1/ui/game/img_shenghua_9.png"
            }
        },
        DISCARD_UI: {
            TOUCH: "sub1/ui/game/img_diu_1.png",
            TOUCHED: "sub1/ui/game/img_diu_2.png"
        },
        DOUBLE_HIT_UI: {
            CLASS_1: "sub1/ui/game/img_52.png",
            CLASS_2: "sub1/ui/game/img_47.png",
            CLASS_3: "sub1/ui/game/img_48.png"
        },
        MARK_UI: {
            PRIMARY: "sub1/ui/game/img_49.png",
            INTERMEDIATE: "sub1/ui/game/img_50.png"
        },
        LIBRARY_UI: {
            RIGHT_BTN_UI: {
                TOUCH: "sub1/ui/scale9/img_library_4.png",
                TOUCHED: "sub1/ui/scale9/img_library_3.png"
            },
            LEFT_BTN_UI: {
                TOUCH: "sub1/ui/scale9/img_library_2.png",
                TOUCHED: "sub1/ui/scale9/img_library_1.png"
            }
        },
        ADICON: {
            TT_AD_1: "sub1/ui/common/img_tt_1.png",
            TT_AD_2: "sub1/ui/common/img_tt_2.png"
        },
        GRADE_UI: {
            GRADE_TAB_ROOT: "sub1/ui/library/img_grade_",
            GRADE_BG_ROOT: "sub1/ui/library/img_grade_bg_",
            GRADE_BG_BOTTOM_ROOT: "sub1/ui/library/img_grade_bg_bottom_"
        }
    });
    let ml = {
        CLICK: "sub3/sound/Click.mp3",
        BGM: "sub3/sound/BGM.mp3",
        ATTACKSOUNDROOT: "gameSound/sound/",
        DEATH: "gameSound/sound/death.mp3",
        HEADSHOT: "gameSound/sound/headshot.mp3",
        DOUBLE: {
            FIRST: "",
            SEDOND: "gameSound/sound/DoubleKill.mp3",
            THIRD: "gameSound/sound/TripleKill.mp3",
            FOURTH: "gameSound/sound/QuadKill.mp3",
            FIFTH: "gameSound/sound/PentaKill.mp3",
            SIX: "gameSound/sound/kill7.mp3"
        },
        COMPOND: "sub3/sound/Compound.mp3",
        GOLD1: "sub3/sound/gold1.mp3",
        GOLD2: "sub3/sound/gold2.mp3",
        WIN: "gameSound/sound/win.mp3",
        FAIL: "gameSound/sound/fail.mp3",
        NEWEQUIP: "sub3/sound/newEquip.mp3",
        GAMESTART: "sub3/sound/start.mp3",
        BOMB: "gameSound/sound/bomb.mp3",
        FIRETHEHOLE: "gameSound/sound/FileInTheHole.mp3",
        XIEXIA: "gameSound/sound/xiexia.mp3",
        TOUCHBOX: "sub3/sound/touchBox.mp3",
        ZOMBIESHOW: "gameSound/sound/zomBieShow.mp3",
        ZOMBIEBEATTACK: "gameSound/sound/zomBieBeAttack.mp3",
        BULLETHIT: "gameSound/sound/bulletHit.mp3",
        ENDWIN: "gameSound/sound/endWin.mp3",
        HCXQ: "sub3/sound/hcxq.mp3",
        STARTGAME: "sub3/sound/startGame.mp3",
        GAME_DOWN_START: {
            ROOT: "gameSound/sound/down_",
            START: "gameSound/sound/start.mp3"
        },
        SWITCH_ARM: {
            ROOT: "gameSound/sound/switch"
        },
        KILL_DOUBLE_ROOT: "gameSound/sound/double_kill_",
        KILL_HEADSHOT_ROOT: "gameSound/sound/headShot_",
        TURN_TABLE: "sub3/sound/turnTable.mp3",
        FIRE_IN_TEH_HOLE: "gameSound/sound/Fireinthehole_Grenade_GR.mp3",
        KILL_HEADSHOT: "gameSound/sound/headshot.mp3",
        FOOT: [ "gameSound/sound/foot1.mp3", "gameSound/sound/foot2.mp3" ],
        JUMP: "gameSound/sound/jump.mp3",
        DROP: "gameSound/sound/drop.mp3",
        REVENGE: "gameSound/sound/Revenge.mp3",
        AIR_DROP: "gameSound/sound/airDrop.mp3",
        AIR_DROP_TURN: "gameSound/sound/airDropTurn.mp3",
        AIR_DROP_OPEN: "gameSound/sound/switch1.mp3"
    }, pl = {
        RES: "res",
        SUB1: "sub1",
        SUB2: "sub2",
        SUB3: "sub3",
        SUB4: "sub4",
        SUB8: "sub8",
        SUB9: "sub9",
        SUB10: "sub10",
        SUB11: "sub11",
        SUB13: "sub13",
        SUB14: "sub14",
        SUB15: "sub15",
        SUB18: "sub18",
        GAME_SOUND: "gameSound"
    };
    class yl extends Laya.Script {
        constructor() {
            super();
        }
        onAwake() {
            this.owner.on(Laya.Event.MOUSE_OVER, this, this.onDown), this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp), 
            this.imgMask = this.owner.getChildByName("imgMask"), this.imgMask && (this.imgMask.visible = !1);
        }
        onDown() {
            il.playEffect(ml.CLICK), this.imgMask ? this.imgMask.visible = !0 : Laya.Tween.to(this.owner, {
                scaleX: .9,
                scaleY: .9
            }, 50);
        }
        onUp() {
            this.imgMask ? this.imgMask.visible = !1 : Laya.Tween.to(this.owner, {
                scaleX: 1,
                scaleY: 1
            }, 50);
        }
        onDisable() {
            this.owner.scale(1, 1);
        }
        onDestroy() {
            this.owner.off(Laya.Event.MOUSE_OVER, this, this.onDown), this.owner.off(Laya.Event.MOUSE_OUT, this, this.onUp);
        }
    }
    class Il extends Laya.Script {
        constructor() {
            super();
        }
        onAwake() {}
        onDisable() {
            for (let e = 0; e < this.owner.numChildren; e++) {
                let t = this.owner.getChildAt(e);
                Laya.Tween.clearAll(t);
            }
        }
        onEnable() {
            for (let e = 0; e < this.owner.numChildren; e++) {
                let t = this.owner.getChildAt(e);
                t.alpha = 0, Laya.timer.once(50 * e, this, function() {
                    this.action(t);
                });
            }
        }
        action(e) {
            e.alpha = .5 * Math.random() + .5;
            let t = this.owner;
            e.pos(Math.random() * t.width, t.height), Laya.Tween.clearAll(e), Laya.Tween.to(e, {
                alpha: 0,
                y: 0
            }, 2e3 * Math.random() + 2e3, null, Laya.Handler.create(this, function() {
                this.action(e);
            }));
        }
    }
    class fl extends Laya.Script {
        constructor() {
            super(), this.isScale = !0;
        }
        onAwake() {}
        onDisable() {
            for (let e = 0; e < this.owner.numChildren; e++) {
                let t = this.owner.getChildAt(e);
                Laya.Tween.clearAll(t);
            }
        }
        onEnable() {
            for (let e = 0; e < this.owner.numChildren; e++) {
                let t = this.owner.getChildAt(e);
                t.scale(0, 0), Laya.timer.once(400 * e, this, function() {
                    this.action(t);
                });
            }
        }
        action(e) {
            e.alpha = 1, e.scale(0, 0), Laya.Tween.clearAll(e), this.isScale ? (Laya.Tween.to(e, {
                scaleX: 1,
                scaleY: 1
            }, 1e3, null, Laya.Handler.create(this, function() {
                this.action(e);
            })), Laya.Tween.to(e, {
                alpha: 0
            }, 500, null, null, 500)) : (e.scale(1, 1), Laya.Tween.to(e, {
                alpha: 0
            }, 700, null, Laya.Handler.create(this, function() {
                Laya.timer.once(400, this, function() {
                    this.action(e);
                });
            }), 400));
        }
    }
    class Ll extends Laya.Script {
        constructor() {
            super(), this.list = [], this.length = 150;
        }
        onAwake() {
            for (let e = 0; e < this.owner.numChildren; e++) {
                const t = this.owner.getChildAt(e);
                this.list.push(t);
            }
        }
        onDisable() {}
        onEnable() {}
        onUpdate() {
            for (let e = 0; e < this.list.length; e++) {
                const t = this.list[e];
                t.y -= 1, t.y < -this.length && (t.y += this.length * this.list.length);
            }
        }
    }
    class wl extends T.view.game.QuasiCenterUI {
        constructor() {
            super(), this.initPos = {
                up: new Laya.Point(),
                down: new Laya.Point(),
                left: new Laya.Point(),
                right: new Laya.Point()
            }, this.initPos1 = {
                up: new Laya.Point(),
                down: new Laya.Point(),
                left: new Laya.Point(),
                right: new Laya.Point()
            }, this.isHaveTarget = !1;
        }
        onAwake() {
            this.initPos.up.x = this.imgZhunXinUp.x, this.initPos.up.y = this.imgZhunXinUp.y, 
            this.initPos.down.x = this.imgZhunXinDown.x, this.initPos.down.y = this.imgZhunXinDown.y, 
            this.initPos.left.x = this.imgZhunXinLeft.x, this.initPos.left.y = this.imgZhunXinLeft.y, 
            this.initPos.right.x = this.imgZhunXinRight.x, this.initPos.right.y = this.imgZhunXinRight.y, 
            this.initPos1.up.x = this.imgTop.x, this.initPos1.up.y = this.imgTop.y, this.initPos1.down.x = this.imgBottom.x, 
            this.initPos1.down.y = this.imgBottom.y, this.initPos1.left.x = this.imgLeft.x, 
            this.initPos1.left.y = this.imgLeft.y, this.initPos1.right.x = this.imgRight.x, 
            this.initPos1.right.y = this.imgRight.y, this.frameLoop(1, this, this.update);
        }
        onDestroy() {
            this.timer.clearAll(this), this.imgZhunXinDown = null, this.imgZhunXinLeft = null, 
            this.imgZhunXinRight = null, this.imgZhunXinUp = null, this.imgAttack = null, this.imgPoint = null, 
            this.initPos = null;
        }
        update() {
            if (Nt.getCurScene().state == _s.START) {
                if (this.setBullsEyeSkin(), Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isCanShowHitUI && Rs.targetLogicalBaseLayer && !Rs.targetLogicalBaseLayer.getIsDie() && !Rs.playerLogicalBaseLayer.isStartHuaBullet && 0 != Rs.playerLogicalBaseLayer.bullets && 0 != Rs.playerLogicalBaseLayer.magazineBullet && Rs.playerLogicalBaseLayer.getArmCtrl() ? this.imgAttack.alpha <= 0 ? this.imgAttack.alpha += .05 : this.imgAttack.alpha = 1 : this.imgAttack.alpha >= 1 ? this.imgAttack.alpha -= .05 : this.imgAttack.alpha = 0, 
                Rs.targetLogicalBaseLayer) {
                    let e = 27, t = 2;
                    this.imgTop.y < this.initPos1.up.y + e ? this.imgTop.y += t : this.imgTop.y = this.initPos1.up.y + e, 
                    this.imgBottom.y > this.initPos1.down.y - e ? this.imgBottom.y -= t : this.imgBottom.y = this.initPos1.down.y - e, 
                    this.imgLeft.x < this.initPos1.left.x + e ? this.imgLeft.x += t : this.imgLeft.x = this.initPos1.left.x + e, 
                    this.imgRight.x > this.initPos1.right.x - e ? this.imgRight.x -= t : this.imgRight.x = this.initPos1.right.x - e, 
                    this.boxArrow.alpha < 1 ? this.boxArrow.alpha += .2 : this.boxArrow.alpha = 1;
                } else this.imgTop.y > this.initPos1.up.y ? this.imgTop.y -= 2 : this.imgTop.y = this.initPos1.up.y, 
                this.imgBottom.y < this.initPos1.down.y ? this.imgBottom.y += 2 : this.imgBottom.y = this.initPos1.down.y, 
                this.imgLeft.x > this.initPos1.left.x ? this.imgLeft.x -= 2 : this.imgLeft.x = this.initPos1.left.x, 
                this.imgRight.x < this.initPos1.right.x ? this.imgRight.x += 2 : this.imgRight.x = this.initPos1.right.x, 
                this.boxArrow.alpha > 0 ? this.boxArrow.alpha -= .1 : this.boxArrow.alpha = 0;
                if (Rs.playerLogicalBaseLayer.getIsMoving() || Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isCanShowHitScale) {
                    let e = 10, t = 1;
                    Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isCanShowHitScale && (e += 7, 
                    t += 5), this.imgZhunXinUp.y > this.initPos.up.y - e ? this.imgZhunXinUp.y -= t : this.imgZhunXinUp.y = this.initPos.up.y - e, 
                    this.imgZhunXinDown.y < this.initPos.down.y + e ? this.imgZhunXinDown.y += t : this.imgZhunXinDown.y = this.initPos.down.y + e, 
                    this.imgZhunXinLeft.x > this.initPos.left.x - e ? this.imgZhunXinLeft.x -= t : this.imgZhunXinLeft.x = this.initPos.left.x - e, 
                    this.imgZhunXinRight.x < this.initPos.right.x + e ? this.imgZhunXinRight.x += t : this.imgZhunXinRight.x = this.initPos.right.x + e;
                } else this.imgZhunXinUp.y < this.initPos.up.y ? this.imgZhunXinUp.y++ : this.imgZhunXinUp.y = this.initPos.up.y, 
                this.imgZhunXinDown.y > this.initPos.down.y ? this.imgZhunXinDown.y-- : this.imgZhunXinDown.y = this.initPos.down.y, 
                this.imgZhunXinLeft.x < this.initPos.left.x ? this.imgZhunXinLeft.x++ : this.imgZhunXinLeft.x = this.initPos.left.x, 
                this.imgZhunXinRight.x > this.initPos.right.x ? this.imgZhunXinRight.x-- : this.imgZhunXinRight.x = this.initPos.right.x;
            }
        }
        setBullsEyeSkin() {
            if (Rs.targetLogicalBaseLayer) {
                if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) return void (Rs.playerLogicalBaseLayer.getArmCtrl() ? Rs.playerLogicalBaseLayer.isStartHuaBullet || Rs.playerLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0 ? this.imgAttack.skin != ul.BULLSEYE.QUASI_WHITE && (this.imgAttack.skin = ul.BULLSEYE.QUASI_WHITE, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_WHITE) : this.imgAttack.skin != ul.BULLSEYE.QUASI_RED && (this.imgAttack.skin = ul.BULLSEYE.QUASI_RED, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_RED, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_RED, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_RED, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_RED, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_RED) : this.imgAttack.skin != ul.BULLSEYE.QUASI_WHITE && (this.imgAttack.skin = ul.BULLSEYE.QUASI_WHITE, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_WHITE));
                Rs.targetLogicalBaseLayer.getHP() < 30 && Rs.targetLogicalBaseLayer.getHP() > 0 && !Rs.playerLogicalBaseLayer.isStartHuaBullet && !Rs.playerLogicalBaseLayer.getIsDie() && !Rs.targetLogicalBaseLayer.getIsDie() ? this.imgAttack.skin != ul.BULLSEYE.QUASI_RED && (this.imgAttack.skin = ul.BULLSEYE.QUASI_RED, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_RED, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_RED, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_RED, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_RED, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_RED) : Rs.playerLogicalBaseLayer.getArmCtrl() ? 3 != Rs.playerLogicalBaseLayer.getArmCtrl().getType() || Rs.playerLogicalBaseLayer.isOpenMioing ? this.imgAttack.skin != ul.BULLSEYE.QUASI_WHITE && (this.imgAttack.skin = ul.BULLSEYE.QUASI_WHITE, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_WHITE) : Rs.playerLogicalBaseLayer.isStartHuaBullet || Rs.playerLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0 ? this.imgAttack.skin != ul.BULLSEYE.QUASI_WHITE && (this.imgAttack.skin = ul.BULLSEYE.QUASI_WHITE, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_WHITE) : this.imgAttack.skin != ul.BULLSEYE.QUASI_RED && (this.imgAttack.skin = ul.BULLSEYE.QUASI_RED, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_RED, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_RED, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_RED, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_RED, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_RED) : this.imgAttack.skin != ul.BULLSEYE.QUASI_WHITE && (this.imgAttack.skin = ul.BULLSEYE.QUASI_WHITE, 
                this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE.POINT_WHITE);
            } else this.imgAttack.skin != ul.BULLSEYE.QUASI_WHITE && (this.imgAttack.skin = ul.BULLSEYE.QUASI_WHITE, 
            this.imgZhunXinDown.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinLeft.skin = ul.BULLSEYE.VERTICAL_WHITE, 
            this.imgZhunXinRight.skin = ul.BULLSEYE.VERTICAL_WHITE, this.imgZhunXinUp.skin = ul.BULLSEYE.VERTICAL_WHITE, 
            this.imgPoint.skin = ul.BULLSEYE.POINT_WHITE);
        }
    }
    class bl extends T.view.game.QuasiCenter1UI {
        constructor() {
            super(), this.initPos = {
                up: new Laya.Point(),
                down: new Laya.Point(),
                left: new Laya.Point(),
                right: new Laya.Point()
            }, this.a = 0;
        }
        onAwake() {
            this.frameLoop(1, this, this.update);
        }
        onDestroy() {
            this.timer.clearAll(this), this.imgPoint = null, this.initPos = null;
        }
        update() {
            if (Nt.getCurScene().state == _s.START) if (this.setBullsEyeSkin(), Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isCanShowHitUI && Rs.targetLogicalBaseLayer && !Rs.targetLogicalBaseLayer.getIsDie() && !Rs.playerLogicalBaseLayer.isStartHuaBullet && 0 != Rs.playerLogicalBaseLayer.bullets && 0 != Rs.playerLogicalBaseLayer.magazineBullet && Rs.playerLogicalBaseLayer.getArmCtrl() ? (this.a <= 0 ? this.a += .05 : this.a = 1, 
            this.imgPoint.skin != ul.BULLSEYE1.POINT_RED && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_RED, 
            this.imgPoint.skin = ul.BULLSEYE1.POINT_RED)) : this.a >= 1 ? this.a -= .05 : this.a = 0, 
            Rs.playerLogicalBaseLayer.getIsMoving() || Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isCanShowHitScale) {
                let e = 1.5, t = .05;
                Rs.playerLogicalBaseLayer.getPresentationBaseLayer().isCanShowHitScale && (e += .35, 
                t += .25), this.imgRect.scaleX < e ? (this.imgRect.scaleX += t, this.imgRect.scaleY += t) : (this.imgRect.scaleX = e, 
                this.imgRect.scaleY = e);
            } else this.imgRect.scaleX > 1 ? (this.imgRect.scaleX -= .05, this.imgRect.scaleY -= .05) : (this.imgRect.scaleX = 1, 
            this.imgRect.scaleY = 1);
        }
        setBullsEyeSkin() {
            if (Rs.targetLogicalBaseLayer) {
                if (hl.platform == v.WEB_4399 && Laya.Browser.onPC) return void (Rs.playerLogicalBaseLayer.getArmCtrl() ? Rs.playerLogicalBaseLayer.isStartHuaBullet || Rs.playerLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0 ? this.imgPoint.skin != ul.BULLSEYE1.POINT_WHITE && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_WHITE) : this.imgPoint.skin != ul.BULLSEYE1.POINT_RED && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_RED, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_RED) : this.imgPoint.skin != ul.BULLSEYE1.POINT_WHITE && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_WHITE));
                Rs.targetLogicalBaseLayer.getHP() < 30 && Rs.targetLogicalBaseLayer.getHP() > 0 && !Rs.playerLogicalBaseLayer.isStartHuaBullet && !Rs.playerLogicalBaseLayer.getIsDie() && !Rs.targetLogicalBaseLayer.getIsDie() ? this.imgPoint.skin != ul.BULLSEYE1.POINT_RED && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_RED, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_RED) : Rs.playerLogicalBaseLayer.getArmCtrl() ? 3 == Rs.playerLogicalBaseLayer.getArmCtrl().getType() || Rs.playerLogicalBaseLayer.isStartHuaBullet || Rs.playerLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0 ? 3 != Rs.playerLogicalBaseLayer.getArmCtrl().getType() || Rs.playerLogicalBaseLayer.isOpenMioing ? this.imgPoint.skin != ul.BULLSEYE1.POINT_WHITE && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_WHITE) : Rs.playerLogicalBaseLayer.isStartHuaBullet || Rs.playerLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getIsDie() || Rs.targetLogicalBaseLayer.getRoleType() == Mr.TYPE_0 ? this.imgPoint.skin != ul.BULLSEYE1.POINT_WHITE && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_WHITE) : this.imgPoint.skin != ul.BULLSEYE1.POINT_RED && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_RED, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_RED) : this.imgPoint.skin != ul.BULLSEYE1.POINT_WHITE_1 && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_WHITE_1, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_WHITE_1) : this.imgPoint.skin != ul.BULLSEYE1.POINT_WHITE && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_WHITE, 
                this.imgPoint.skin = ul.BULLSEYE1.POINT_WHITE);
            } else this.imgPoint.skin != ul.BULLSEYE1.POINT_WHITE && (this.imgRect.skin = ul.BULLSEYE1.VERTICAL_WHITE, 
            this.imgPoint.skin = ul.BULLSEYE1.POINT_WHITE);
        }
    }
    class El extends Laya.Script {
        constructor() {
            super(), this.rotateSpeed = 20, this.dis = 1;
        }
        onAwake() {
            var e = this;
            this.y = e.owner.y, Laya.timer.loop(20, this, function() {
                let t = e.owner;
                t.y += .3 * e.dis, t.y >= e.rotateSpeed + e.y && (e.dis = -1), t.y < e.y && (e.dis = 1);
            });
        }
        onDisable() {}
        onDestroy() {
            Laya.timer.clearAll(this);
        }
    }
    class Cl extends Laya.Script {
        constructor() {
            super(), this.rotateSpeed = 1;
        }
        onAwake() {
            var e = this;
            Laya.timer.loop(20, this, function() {
                e.owner.rotation += e.rotateSpeed;
            });
        }
        onDisable() {}
        onDestroy() {
            Laya.timer.clearAll(this);
        }
    }
    class vl extends Laya.Script {
        constructor() {
            super(), this.rotateSpeed = 1;
        }
        onAwake() {
            this.action(this.owner);
        }
        onDisable() {}
        onDestroy() {
            Laya.timer.clearAll(this);
        }
        action(e) {
            e.alpha = 1, Laya.Tween.clearAll(e), Laya.Tween.to(e, {
                alpha: .5
            }, 1500 * this.rotateSpeed, null), Laya.Tween.to(e, {
                alpha: 1
            }, 1500 * this.rotateSpeed, null, Laya.Handler.create(this, function() {
                this.action(e);
            }), 1500 * this.rotateSpeed);
        }
    }
    class xl {
        constructor() {}
        static init() {
            var e = Laya.ClassUtils.regClass;
            e("effect/ButtonEffect.ts", yl), e("effect/UpMoveEffect.ts", Il), e("effect/BlinBlinEffect.ts", fl), 
            e("effect/AdButtonLightCtrl.ts", $), e("effect/GunMoveEffect.ts", Ll), e("view/game/QuasiCenterCtrl.ts", wl), 
            e("view/game/QuasiCenter1Ctrl.ts", bl), e("effect/FlyEffect.ts", El), e("effect/TurnEffect.ts", Cl), 
            e("effect/BreatheEffect.ts", vl);
        }
    }
    xl.width = 1520, xl.height = 750, xl.scaleMode = "fixedheight", xl.screenMode = "horizontal", 
    xl.alignV = "top", xl.alignH = "left", xl.startScene = "view/fisrt/FirstView.scene", 
    xl.sceneRoot = "", xl.debug = !1, xl.stat = !1, xl.physicsDebug = !1, xl.exportSceneToJson = !0, 
    xl.init();
    new class {
        constructor() {
            Laya.Browser.onIOS && (Config.isAntialias = !0, Config.useWebGL2 = !1);
            let e = new Config3D();
            window.Laya3D ? Laya3D.init(xl.width, xl.height, e) : Laya.init(xl.width, xl.height, Laya.WebGL), 
            Laya.Physics && Laya.Physics.enable(), Laya.DebugPanel && Laya.DebugPanel.enable(), 
            hl.platform == v.WEB_4399 && Laya.Browser.onPC ? (Laya.stage.scaleMode = xl.scaleMode = "showall", 
            Laya.stage.alignH = xl.alignH = "center", Laya.stage.alignV = xl.alignV = "middle") : Laya.Browser.clientWidth / Laya.Browser.clientHeight < 1.5 && hl.adpaterIpad ? Laya.stage.scaleMode = xl.scaleMode = "fixedwidth" : Laya.stage.scaleMode = xl.scaleMode, 
            Laya.stage.screenMode = xl.screenMode, Laya.stage.alignV = xl.alignV, Laya.stage.alignH = xl.alignH, 
            Laya.URL.exportSceneToJson = xl.exportSceneToJson, this.orient(), (xl.debug || "true" == Laya.Utils.getQueryString("debug")) && Laya.enableDebugPanel(), 
            xl.physicsDebug && Laya.PhysicsDebugDraw && Laya.PhysicsDebugDraw.enable(), xl.stat && Laya.Stat.show(), 
            Laya.alertGlobalError(!0), Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
            let t = ol.getLaunchOptionsSync();
            t && (console.log("options", t), tl.getInstance().launch(t, !0));
        }
        onVersionLoaded() {
            Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
        }
        onConfigLoaded() {
            At.overwrite(), P.seed = Laya.timer.currTimer, Laya.loader.maxLoader = 20, ol.onShow(function(e) {
                console.log("onShow", e), il.resumeBGMFromInterruption(), j.triggerShareEvent(), 
                tl.getInstance().launch(e, !1), L.notify(w.ON_SHOW), Laya.MouseManager.instance.disableMouseEvent = !1;
            }), ol.onHide(function() {
                console.log("设备----- onHide"), tl.getInstance().setOfflineTime(), tl.getInstance().setAutoOpenTime(), 
                tl.getInstance().updateServer(), e.isTouchBannerInCrazy(), j.onHide(), hl.isShowReviewUI() || j.createInterstitialAd();
            }), ol.onAudioInterruptionEnd(function() {
                console.log("onAudioInterruptionEnd"), il.resumeBGMFromInterruption();
            });
            let e = this, t = function() {
                Laya.timer.once(100, e, function() {
                    Nt.pushScene(Ts);
                });
            };
            console.log("appId" + hl.appId), hl.platform == v.NATIVE_ANDRIOD ? ps.create(t) : t();
        }
        orient() {}
        isTouchBannerInCrazy() {
            if (null == Bt.getFunctionViewCtrl(Er.GAME)) return;
            let e = Bt.getFunctionViewCtrl(Er.GAME).getChildByName("GameAirCrazyView");
            e && (console.log("拥有狂点界面"), e.isDie && (console.log("已经点到banner"), Ts.isShowRevivieCrazy = !1));
        }
    }();
}();