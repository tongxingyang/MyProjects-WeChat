!function() {
    "use strict";
    var e, t, i;
    !function(e) {
        e[e.None = 0] = "None", e[e.FightBannerTime = 1] = "FightBannerTime", e[e.FightBannerSpaceTime = 2] = "FightBannerSpaceTime", 
        e[e.FightBannerCount = 3] = "FightBannerCount", e[e.FightDeadCP = 4] = "FightDeadCP", 
        e[e.OpenBList = 5] = "OpenBList", e[e.NOBanner = 11] = "NOBanner", e[e.NOVideo = 12] = "NOVideo";
    }(e || (e = {})), function(e) {
        e[e.Low = 0] = "Low", e[e.Nomal = 1] = "Nomal", e[e.Hight = 2] = "Hight";
    }(t || (t = {})), function(e) {
        e[e.LoginScene = 0] = "LoginScene", e[e.HomeScene = 1] = "HomeScene", e[e.FightScene = 2] = "FightScene", 
        e[e.EndScene = 3] = "EndScene";
    }(i || (i = {}));
    class s {}
    s.appid = "wxfaf065c195f4b045", s.TaoLuConfig = {}, s.fixStageX = 0, s.fixStageY = 0, 
    s.GraphicsLv = t.Nomal, s.isSyncDebug = !1, s.teamId = 0, s.curGameScene = i.LoginScene, 
    s.oppohtsdk = null, s.oppohtgid = "", s.oppoNativeDelay = 0, s.isOnline = !1, s.canShowNative = !1, 
    s.sceneID = 0, s.channelInfo = null, s.waitJoinRoom = 0, s.SendJoinRoomID = 0, s.inviterID = 0, 
    s.systemInfo = null, s.wxSDKVersion = 0, s.curLoginFightEndCount = 0, s.ttMoerBtn = null, 
    s.serverip = "", s.cdn = "https://csdjres.haowan823.cn/3dmb/", s.isGs = !1, s.isResLoad = !1, 
    s.screenScale = 1, s.isLogin = !1, s.firstLogin = !1, s.isChangeAccounting = !1, 
    s.isGetPlayerInfo = !1, s.isClickLoginBtn = !1, s.iPhoneX = !1, s.showMoreGame = !1, 
    s.fixMisleadADCheck = !1, s.fixMisleadAD = !1, s.isSearchEnter = !1, s.open_kp = -1, 
    s.bannerToVideo = 0, s.cpdelay = 1e3, s.cacheServerList = null, s.cacheServerLoad = null, 
    s.initServer = !1, s.isShowAllDamage = !1, s.isQQPlatform = !1, s.isWXPlatform = !1, 
    s.isKSPlatform = !1, s.isOppoPlatform = !1, s.isVivoPlatform = !1, s.isTTPlatform = !1, 
    s.isPCPlatform = !1, s.isAppPlatform = !1, s.is233Platform = !1, s.is233mlPlatform = !1, 
    s.is233mlcsjPlatform = !1, s.isMomoyuPlatform = !1, s.isWcfjlPlatform = !1, s.isOppoGameCenterPlatform = !1, 
    s.isDYVivoPlatform = !1, s.isTopOnPlatform = !1, s.isXiaoMiPlatform = !1, s.is4399Platform = !1, 
    s.isHuaweiPlatform = !1, s.isBaiduPlatform = !1, s.isTapTapPlatform = !1, s.isWXNMLogin = !1, 
    s.isTTGs = !1, s.isTTNMLogin = !1, s.isTTGetUserInfo = !1, s.loginReward = !1, s.isHaveAd = !0, 
    s.isH5Platform = !1, s.is4399H5Platform = !1, s.pr_end = 0, s.isApplogined = !1, 
    s.isH5Test = !1, s.kbcount = 0, s.platformPathDir_WX = "", s.platformPathDir_TT = "", 
    s.platformPathDir_OPPO = "", s.platformPathDir_VIVO = "", s.mainGotoGame1 = "", 
    s.mainGotoGame2 = "", s.mainGotoGame3 = "", s.mainGotoGame4 = "", s.onMiniGame = !1, 
    s.loadSubpackageSuccess = 0, s.isNewPlayer = !1, s.isTestVersion = !0, s.version = 13, 
    s.DebugLv = 1, s.PrivacyPolicyTag = "PrivacyPolicytag", s.isLoginOpen = !1, s.pr_inter = 0, 
    s.isForceInter = !1, s.randInterNum = 0, s.other_login = !1, s.MobileShop = !1, 
    s.AllScreenVideoTime = 180, s.randAderror = 0, s.oldID = "", s.taoluSwitch = 1, 
    s.maiLiangSwitch = 0, s.sendMsgTime = 30, s.OnlineRewardTime = 0, s.isFightShowAdVivo = !1, 
    s.xiaomiAppAdSwich = {
        systemInsertIntervalTime: 0,
        systemBannerSwitch: !0,
        nativeImageSwitch: !0,
        nativeImageErrProbability: 0,
        nativeInsertIntervalTime: 0,
        nativeInsertSwitch: !0,
        nativeInsertErrNumber: 0,
        nativeInsertErrProbability: 0,
        insertVideoSwitch: !0,
        insertVideoInterval: 0
    }, s.playersid = "", s.canshow233Banner = !0, s.isHuaweiMiniPlatform = !1;
    var n, a, o, l = Laya.View, h = Laya.Dialog, r = Laya.Scene, c = Laya.ClassUtils.regClass;
    !function(e) {
        !function(e) {
            class t extends r {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("scenes/s_Common");
                }
            }
            e.s_CommonUI = t, c("ui.scenes.s_CommonUI", t);
            class i extends r {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("scenes/s_Dungeon");
                }
            }
            e.s_DungeonUI = i, c("ui.scenes.s_DungeonUI", i);
            class s extends r {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("scenes/s_DungeonEnd");
                }
            }
            e.s_DungeonEndUI = s, c("ui.scenes.s_DungeonEndUI", s);
            class n extends r {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("scenes/s_Login");
                }
            }
            e.s_LoginUI = n, c("ui.scenes.s_LoginUI", n);
            class a extends r {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("scenes/s_orientation");
                }
            }
            e.s_orientationUI = a, c("ui.scenes.s_orientationUI", a);
        }(e.scenes || (e.scenes = {}));
    }(n || (n = {})), function(e) {
        !function(e) {
            class t extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_AllHeroShow");
                }
            }
            e.d_AllHeroShowUI = t, c("ui.ui_dialog.d_AllHeroShowUI", t);
            class i extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Auth");
                }
            }
            e.d_AuthUI = i, c("ui.ui_dialog.d_AuthUI", i);
            class s extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_BuyEqTips");
                }
            }
            e.d_BuyEqTipsUI = s, c("ui.ui_dialog.d_BuyEqTipsUI", s);
            class n extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_CleanAD");
                }
            }
            e.d_CleanADUI = n, c("ui.ui_dialog.d_CleanADUI", n);
            class a extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Code");
                }
            }
            e.d_CodeUI = a, c("ui.ui_dialog.d_CodeUI", a);
            class o extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Confirm");
                }
            }
            e.d_ConfirmUI = o, c("ui.ui_dialog.d_ConfirmUI", o);
            class l extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_ContinueGame");
                }
            }
            e.d_ContinueGameUI = l, c("ui.ui_dialog.d_ContinueGameUI", l);
            class r extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_DebugInfo");
                }
            }
            e.d_DebugInfoUI = r, c("ui.ui_dialog.d_DebugInfoUI", r);
            class d extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_DungeonReward");
                }
            }
            e.d_DungeonRewardUI = d, c("ui.ui_dialog.d_DungeonRewardUI", d);
            class u extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventALS");
                }
            }
            e.d_EventALSUI = u, c("ui.ui_dialog.d_EventALSUI", u);
            class p extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventATM");
                }
            }
            e.d_EventATMUI = p, c("ui.ui_dialog.d_EventATMUI", p);
            class m extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventBD");
                }
            }
            e.d_EventBDUI = m, c("ui.ui_dialog.d_EventBDUI", m);
            class g extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventBZSK");
                }
            }
            e.d_EventBZSKUI = g, c("ui.ui_dialog.d_EventBZSKUI", g);
            class f extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventCFTT");
                }
            }
            e.d_EventCFTTUI = f, c("ui.ui_dialog.d_EventCFTTUI", f);
            class I extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventDHWJ");
                }
            }
            e.d_EventDHWJUI = I, c("ui.ui_dialog.d_EventDHWJUI", I);
            class v extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventDSGL");
                }
            }
            e.d_EventDSGLUI = v, c("ui.ui_dialog.d_EventDSGLUI", v);
            class _ extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventHome");
                }
            }
            e.d_EventHomeUI = _, c("ui.ui_dialog.d_EventHomeUI", _);
            class y extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventNQCT");
                }
            }
            e.d_EventNQCTUI = y, c("ui.ui_dialog.d_EventNQCTUI", y);
            class S extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventPintu");
                }
            }
            e.d_EventPintuUI = S, c("ui.ui_dialog.d_EventPintuUI", S);
            class w extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventTiger");
                }
            }
            e.d_EventTigerUI = w, c("ui.ui_dialog.d_EventTigerUI", w);
            class D extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventXRKH_NQ");
                }
            }
            e.d_EventXRKH_NQUI = D, c("ui.ui_dialog.d_EventXRKH_NQUI", D);
            class k extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventXRKH_ZY");
                }
            }
            e.d_EventXRKH_ZYUI = k, c("ui.ui_dialog.d_EventXRKH_ZYUI", k);
            class C extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventXSLB");
                }
            }
            e.d_EventXSLBUI = C, c("ui.ui_dialog.d_EventXSLBUI", C);
            class b extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventYGBH");
                }
            }
            e.d_EventYGBHUI = b, c("ui.ui_dialog.d_EventYGBHUI", b);
            class P extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventYYH");
                }
            }
            e.d_EventYYHUI = P, c("ui.ui_dialog.d_EventYYHUI", P);
            class x extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_EventZY");
                }
            }
            e.d_EventZYUI = x, c("ui.ui_dialog.d_EventZYUI", x);
            class T extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_fail");
                }
            }
            e.d_failUI = T, c("ui.ui_dialog.d_failUI", T);
            class U extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_FightEndBox");
                }
            }
            e.d_FightEndBoxUI = U, c("ui.ui_dialog.d_FightEndBoxUI", U);
            class L extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_FightInfo");
                }
            }
            e.d_FightInfoUI = L, c("ui.ui_dialog.d_FightInfoUI", L);
            class N extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_FightInvite");
                }
            }
            e.d_FightInviteUI = N, c("ui.ui_dialog.d_FightInviteUI", N);
            class M extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_FightKillTip");
                }
            }
            e.d_FightKillTipUI = M, c("ui.ui_dialog.d_FightKillTipUI", M);
            class A extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_FightShop");
                }
            }
            e.d_FightShopUI = A, c("ui.ui_dialog.d_FightShopUI", A);
            class O extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_FriendAdd");
                }
            }
            e.d_FriendAddUI = O, c("ui.ui_dialog.d_FriendAddUI", O);
            class E extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_FriendDel");
                }
            }
            e.d_FriendDelUI = E, c("ui.ui_dialog.d_FriendDelUI", E);
            class G extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_GameExit");
                }
            }
            e.d_GameExitUI = G, c("ui.ui_dialog.d_GameExitUI", G);
            class R extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_GetFreeDiamond");
                }
            }
            e.d_GetFreeDiamondUI = R, c("ui.ui_dialog.d_GetFreeDiamondUI", R);
            class B extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_GetFreeGlod");
                }
            }
            e.d_GetFreeGlodUI = B, c("ui.ui_dialog.d_GetFreeGlodUI", B);
            class H extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_GetFreeSkin");
                }
            }
            e.d_GetFreeSkinUI = H, c("ui.ui_dialog.d_GetFreeSkinUI", H);
            class F extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_GetFreeSP");
                }
            }
            e.d_GetFreeSPUI = F, c("ui.ui_dialog.d_GetFreeSPUI", F);
            class V extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_GetFuWen");
                }
            }
            e.d_GetFuWenUI = V, c("ui.ui_dialog.d_GetFuWenUI", V);
            class j extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Gonggao");
                }
            }
            e.d_GonggaoUI = j, c("ui.ui_dialog.d_GonggaoUI", j);
            class W extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Invitefriends");
                }
            }
            e.d_InvitefriendsUI = W, c("ui.ui_dialog.d_InvitefriendsUI", W);
            class X extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_ItemTips");
                }
            }
            e.d_ItemTipsUI = X, c("ui.ui_dialog.d_ItemTipsUI", X);
            class K extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_MatchIng");
                }
            }
            e.d_MatchIngUI = K, c("ui.ui_dialog.d_MatchIngUI", K);
            class q extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_MobileShop");
                }
            }
            e.d_MobileShopUI = q, c("ui.ui_dialog.d_MobileShopUI", q);
            class z extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_MoreGameFull");
                }
            }
            e.d_MoreGameFullUI = z, c("ui.ui_dialog.d_MoreGameFullUI", z);
            class Y extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_NativeInterstitial");
                }
            }
            e.d_NativeInterstitialUI = Y, c("ui.ui_dialog.d_NativeInterstitialUI", Y);
            class J extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_OnlineReward");
                }
            }
            e.d_OnlineRewardUI = J, c("ui.ui_dialog.d_OnlineRewardUI", J);
            class Q extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_personal_Info");
                }
            }
            e.d_personal_InfoUI = Q, c("ui.ui_dialog.d_personal_InfoUI", Q);
            class Z extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_PrivacyPolicy");
                }
            }
            e.d_PrivacyPolicyUI = Z, c("ui.ui_dialog.d_PrivacyPolicyUI", Z);
            class $ extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Rank");
                }
            }
            e.d_RankUI = $, c("ui.ui_dialog.d_RankUI", $);
            class ee extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_RankPos");
                }
            }
            e.d_RankPosUI = ee, c("ui.ui_dialog.d_RankPosUI", ee);
            class te extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_RankSafeCardFail");
                }
            }
            e.d_RankSafeCardFailUI = te, c("ui.ui_dialog.d_RankSafeCardFailUI", te);
            class ie extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_RankSafeCardWin");
                }
            }
            e.d_RankSafeCardWinUI = ie, c("ui.ui_dialog.d_RankSafeCardWinUI", ie);
            class se extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_ScrollText");
                }
            }
            e.d_ScrollTextUI = se, c("ui.ui_dialog.d_ScrollTextUI", se);
            class ne extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Season");
                }
            }
            e.d_SeasonUI = ne, c("ui.ui_dialog.d_SeasonUI", ne);
            class ae extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_SeasonGet");
                }
            }
            e.d_SeasonGetUI = ae, c("ui.ui_dialog.d_SeasonGetUI", ae);
            class oe extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Set");
                }
            }
            e.d_SetUI = oe, c("ui.ui_dialog.d_SetUI", oe);
            class le extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_SevenDay");
                }
            }
            e.d_SevenDayUI = le, c("ui.ui_dialog.d_SevenDayUI", le);
            class he extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_SHModel");
                }
            }
            e.d_SHModelUI = he, c("ui.ui_dialog.d_SHModelUI", he);
            class re extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_ShowPrize");
                }
            }
            e.d_ShowPrizeUI = re, c("ui.ui_dialog.d_ShowPrizeUI", re);
            class ce extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_SkillTips");
                }
            }
            e.d_SkillTipsUI = ce, c("ui.ui_dialog.d_SkillTipsUI", ce);
            class de extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Social");
                }
            }
            e.d_SocialUI = de, c("ui.ui_dialog.d_SocialUI", de);
            class ue extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_SuperStart");
                }
            }
            e.d_SuperStartUI = ue, c("ui.ui_dialog.d_SuperStartUI", ue);
            class pe extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_TianFu");
                }
            }
            e.d_TianFuUI = pe, c("ui.ui_dialog.d_TianFuUI", pe);
            class me extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_TianfuTips");
                }
            }
            e.d_TianfuTipsUI = me, c("ui.ui_dialog.d_TianfuTipsUI", me);
            class ge extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Tip");
                }
            }
            e.d_TipUI = ge, c("ui.ui_dialog.d_TipUI", ge);
            class fe extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_VideoToNavigateGame");
                }
            }
            e.d_VideoToNavigateGameUI = fe, c("ui.ui_dialog.d_VideoToNavigateGameUI", fe);
            class Ie extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_win");
                }
            }
            e.d_winUI = Ie, c("ui.ui_dialog.d_winUI", Ie);
            class ve extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_Wing");
                }
            }
            e.d_WingUI = ve, c("ui.ui_dialog.d_WingUI", ve);
            class _e extends h {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_dialog/d_XPSkill");
                }
            }
            e.d_XPSkillUI = _e, c("ui.ui_dialog.d_XPSkillUI", _e);
        }(e.ui_dialog || (e.ui_dialog = {}));
    }(n || (n = {})), function(e) {
        !function(e) {
            class t extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_FightEnd");
                }
            }
            e.v_FightEndUI = t, c("ui.ui_view.v_FightEndUI", t);
            class i extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_FightEndRankShow");
                }
            }
            e.v_FightEndRankShowUI = i, c("ui.ui_view.v_FightEndRankShowUI", i);
            class s extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_FightEndSHShow");
                }
            }
            e.v_FightEndSHShowUI = s, c("ui.ui_view.v_FightEndSHShowUI", s);
            class n extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_FightMain");
                }
            }
            e.v_FightMainUI = n, c("ui.ui_view.v_FightMainUI", n);
            class a extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_FightReady");
                }
            }
            e.v_FightReadyUI = a, c("ui.ui_view.v_FightReadyUI", a);
            class o extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_HeroShow3d");
                }
            }
            e.v_HeroShow3dUI = o, c("ui.ui_view.v_HeroShow3dUI", o);
            class h extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_Load");
                }
            }
            e.v_LoadUI = h, c("ui.ui_view.v_LoadUI", h);
            class r extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_Login");
                }
            }
            e.v_LoginUI = r, c("ui.ui_view.v_LoginUI", r);
            class d extends l {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.loadScene("ui_view/v_Main");
                }
            }
            e.v_MainUI = d, c("ui.ui_view.v_MainUI", d);
        }(e.ui_view || (e.ui_view = {}));
    }(n || (n = {})), function(e) {
        e[e.KsVideoRecordStart = 0] = "KsVideoRecordStart", e[e.KsVideoRecordStop = 1] = "KsVideoRecordStop", 
        e[e.UIItemTips_Open = 2] = "UIItemTips_Open", e[e.UIItemTips_Close = 3] = "UIItemTips_Close", 
        e[e.FightManager_CheckUnitInViewRange = 4] = "FightManager_CheckUnitInViewRange", 
        e[e.VoipScope_Update = 5] = "VoipScope_Update", e[e.Sound_ResumeBGSound = 6] = "Sound_ResumeBGSound", 
        e[e.Sound_PauseBGSound = 7] = "Sound_PauseBGSound", e[e.Sound_SetEnable = 8] = "Sound_SetEnable", 
        e[e.UIShowModel_Resume = 9] = "UIShowModel_Resume", e[e.QuicklyTextMsg = 10] = "QuicklyTextMsg", 
        e[e.PlatformManger_APPInterShown = 11] = "PlatformManger_APPInterShown", e[e.UIEventYGBH_Open = 12] = "UIEventYGBH_Open", 
        e[e.UIEventYGBH_Close = 13] = "UIEventYGBH_Close", e[e.UIEventYGBH_Data = 14] = "UIEventYGBH_Data", 
        e[e.UIGonggao_Open = 15] = "UIGonggao_Open", e[e.UIGonggao_Close = 16] = "UIGonggao_Close", 
        e[e.UIInvitefriends_Open = 17] = "UIInvitefriends_Open", e[e.UIInvitefriends_Close = 18] = "UIInvitefriends_Close", 
        e[e.UIGameExit_Open = 19] = "UIGameExit_Open", e[e.UIGameExit_Close = 20] = "UIGameExit_Close", 
        e[e.UIMobileShop_Open = 21] = "UIMobileShop_Open", e[e.UIMobileShop_Close = 22] = "UIMobileShop_Close", 
        e[e.UICleanAD_Open = 23] = "UICleanAD_Open", e[e.UICleanAD_Close = 24] = "UICleanAD_Close", 
        e[e.UIContinueGame_Close = 25] = "UIContinueGame_Close", e[e.UIContinueGame_Open = 26] = "UIContinueGame_Open", 
        e[e.UIAuth_Open = 27] = "UIAuth_Open", e[e.UIAuth_Close = 28] = "UIAuth_Close", 
        e[e.UIAuth_HideReg = 29] = "UIAuth_HideReg", e[e.Main_GetSystemInfo = 30] = "Main_GetSystemInfo", 
        e[e.Main_SendLogin = 31] = "Main_SendLogin", e[e.Main_canshowInterVideo = 32] = "Main_canshowInterVideo", 
        e[e.Main_233BannerCheck = 33] = "Main_233BannerCheck", e[e.Main_Login = 34] = "Main_Login", 
        e[e.UIAllHeroShow_Open = 35] = "UIAllHeroShow_Open", e[e.UIAllHeroShow_Close = 36] = "UIAllHeroShow_Close", 
        e[e.UIAllHeroShow_UpdateRes = 37] = "UIAllHeroShow_UpdateRes", e[e.UISet_Open = 38] = "UISet_Open", 
        e[e.UISet_Close = 39] = "UISet_Close", e[e.UISet_OK = 40] = "UISet_OK", e[e.UISet_Cancle = 41] = "UISet_Cancle", 
        e[e.FrameSyncManager_addLogicFrame = 42] = "FrameSyncManager_addLogicFrame", e[e.PlatformManger_AppSetAdID = 43] = "PlatformManger_AppSetAdID", 
        e[e.UIpersonal_info_Open = 44] = "UIpersonal_info_Open", e[e.UIpersonal_info_Close = 45] = "UIpersonal_info_Close", 
        e[e.UIpersonal_UpdateInfo = 46] = "UIpersonal_UpdateInfo", e[e.UIpersonal_updateRed = 47] = "UIpersonal_updateRed", 
        e[e.UIEventPintu_Open = 48] = "UIEventPintu_Open", e[e.UIEventPintu_Close = 49] = "UIEventPintu_Close", 
        e[e.UIEventPintu_Data = 50] = "UIEventPintu_Data", e[e.UIEventPintu_PlayEffect = 51] = "UIEventPintu_PlayEffect", 
        e[e.UIEventBD_Open = 52] = "UIEventBD_Open", e[e.UIEventBD_Close = 53] = "UIEventBD_Close", 
        e[e.UIEventBD_Data = 54] = "UIEventBD_Data", e[e.UIEventTiger_Open = 55] = "UIEventTiger_Open", 
        e[e.UIEventTiger_Close = 56] = "UIEventTiger_Close", e[e.UIEventTiger_Data = 57] = "UIEventTiger_Data", 
        e[e.FightManager_waitOpenUI = 58] = "FightManager_waitOpenUI", e[e.FightManager_loadFightRes = 59] = "FightManager_loadFightRes", 
        e[e.FightManager_GameEnd = 60] = "FightManager_GameEnd", e[e.FightManager_Kill = 61] = "FightManager_Kill", 
        e[e.FightManager_DeadDrop = 62] = "FightManager_DeadDrop", e[e.FightManager_XPSkill = 63] = "FightManager_XPSkill", 
        e[e.FightManager_ReConnectComplete = 64] = "FightManager_ReConnectComplete", e[e.PlatformManger_SetBannerPos = 65] = "PlatformManger_SetBannerPos", 
        e[e.PlatformManger_GetWXUserInfo = 66] = "PlatformManger_GetWXUserInfo", e[e.PlatformManger_wxShareVideo = 67] = "PlatformManger_wxShareVideo", 
        e[e.PlatformManger_ttaddShortcut = 68] = "PlatformManger_ttaddShortcut", e[e.PlatformManger_ShowInciteAD = 69] = "PlatformManger_ShowInciteAD", 
        e[e.PlatformManger_getUserInfo = 70] = "PlatformManger_getUserInfo", e[e.PlatformManger_GotoOtherGame = 71] = "PlatformManger_GotoOtherGame", 
        e[e.PlatformManger_GetAppUserInfo = 72] = "PlatformManger_GetAppUserInfo", e[e.PlatformManger_NativeCallback = 73] = "PlatformManger_NativeCallback", 
        e[e.PlatformManger_ForceVideo = 74] = "PlatformManger_ForceVideo", e[e.PlatformManger_ChangeAccount = 75] = "PlatformManger_ChangeAccount", 
        e[e.PlatformManger_AdDislike = 76] = "PlatformManger_AdDislike", e[e.PlatformManger_ShowInter = 77] = "PlatformManger_ShowInter", 
        e[e.PlatformManger_InitAndRegMsg_AppOppoGameCenter = 78] = "PlatformManger_InitAndRegMsg_AppOppoGameCenter", 
        e[e.PlatformManger_allScreenVideo = 79] = "PlatformManger_allScreenVideo", e[e.PlatformManger_NMLogin = 80] = "PlatformManger_NMLogin", 
        e[e.PlatformManger_setFixedModeSCALE_SHOWALL = 81] = "PlatformManger_setFixedModeSCALE_SHOWALL", 
        e[e.PlatformManger_initLoopIntervideo = 82] = "PlatformManger_initLoopIntervideo", 
        e[e.PlatformManger_onAppInterstitialadClose = 83] = "PlatformManger_onAppInterstitialadClose", 
        e[e.UIGetFoodModel_Open = 84] = "UIGetFoodModel_Open", e[e.UIGetFoodModel_Update = 85] = "UIGetFoodModel_Update", 
        e[e.UIGetFoodModel_Close = 86] = "UIGetFoodModel_Close", e[e.UIGameTipsModel_SetTips = 87] = "UIGameTipsModel_SetTips", 
        e[e.UIGameTipsModel_SetTipsNoModel = 88] = "UIGameTipsModel_SetTipsNoModel", e[e.UIGameTipsModel_Close = 89] = "UIGameTipsModel_Close", 
        e[e.UIScrollTextModel_Open = 90] = "UIScrollTextModel_Open", e[e.UIScrollTextModel_Close = 91] = "UIScrollTextModel_Close", 
        e[e.UIMatchIngModel_Open = 92] = "UIMatchIngModel_Open", e[e.UIMatchIngModel_Close = 93] = "UIMatchIngModel_Close", 
        e[e.UIHeroInfo_Open = 94] = "UIHeroInfo_Open", e[e.UIHeroInfo_Close = 95] = "UIHeroInfo_Close", 
        e[e.UILoginModel_Open = 96] = "UILoginModel_Open", e[e.UILoginModel_Close = 97] = "UILoginModel_Close", 
        e[e.UILoginModel_waitServer = 98] = "UILoginModel_waitServer", e[e.UILoginModel_PlayerLogin = 99] = "UILoginModel_PlayerLogin", 
        e[e.UILoginModel_GotoGame = 100] = "UILoginModel_GotoGame", e[e.UILoginModel_StartGame = 101] = "UILoginModel_StartGame", 
        e[e.UILoginModel_AgreePrivacy = 102] = "UILoginModel_AgreePrivacy", e[e.UIGameMain_Open = 103] = "UIGameMain_Open", 
        e[e.UIGameMain_OpenComplete = 104] = "UIGameMain_OpenComplete", e[e.UIGameMain_Close = 105] = "UIGameMain_Close", 
        e[e.UIGameMain_UpdateRes = 106] = "UIGameMain_UpdateRes", e[e.UIGameMain_UpdateRank = 107] = "UIGameMain_UpdateRank", 
        e[e.UIGameMain_StartGame = 108] = "UIGameMain_StartGame", e[e.UIGameMain_UpdateOffLineMsg = 109] = "UIGameMain_UpdateOffLineMsg", 
        e[e.UIGameMain_UpdateDesk = 110] = "UIGameMain_UpdateDesk", e[e.UIGameMain_Event = 111] = "UIGameMain_Event", 
        e[e.UIGameMain_WaitJoinRoom = 112] = "UIGameMain_WaitJoinRoom", e[e.UIGameMain_ShowWxClup = 113] = "UIGameMain_ShowWxClup", 
        e[e.UIGameMain_HideWxClup = 114] = "UIGameMain_HideWxClup", e[e.UIGameMain_FightEndPopupUI = 115] = "UIGameMain_FightEndPopupUI", 
        e[e.UIGameMain_UpdateSeason = 116] = "UIGameMain_UpdateSeason", e[e.UIGameMain_WorldTalk = 117] = "UIGameMain_WorldTalk", 
        e[e.JUMP5V5 = 118] = "JUMP5V5", e[e.UIEventDHWJ_Open = 119] = "UIEventDHWJ_Open", 
        e[e.UIEventDHWJ_Close = 120] = "UIEventDHWJ_Close", e[e.UIEventDHWJ_Data = 121] = "UIEventDHWJ_Data", 
        e[e.UILoad_Open = 122] = "UILoad_Open", e[e.UILoad_Close = 123] = "UILoad_Close", 
        e[e.UILoad_Bar = 124] = "UILoad_Bar", e[e.UILoad_Tips = 125] = "UILoad_Tips", e[e.UILoad_Next = 126] = "UILoad_Next", 
        e[e.UIAuth_CloseAll = 127] = "UIAuth_CloseAll", e[e.UIFightReady_Open = 128] = "UIFightReady_Open", 
        e[e.UIFightReady_Close = 129] = "UIFightReady_Close", e[e.UIFightReady_StartGame = 130] = "UIFightReady_StartGame", 
        e[e.UIFightReady_CancleGame = 131] = "UIFightReady_CancleGame", e[e.UIFightReady_UpdateRes = 132] = "UIFightReady_UpdateRes", 
        e[e.UIFightReady_UpdateHeroList = 133] = "UIFightReady_UpdateHeroList", e[e.UIFightReady_CheckInfo = 134] = "UIFightReady_CheckInfo", 
        e[e.UIFightReady_UpdateWing = 135] = "UIFightReady_UpdateWing", e[e.UIFightEndWinOrFail_Open = 136] = "UIFightEndWinOrFail_Open", 
        e[e.UIFightEndWinOrFail_Close = 137] = "UIFightEndWinOrFail_Close", e[e.UIFightEndWinOrFail_ShowNext = 138] = "UIFightEndWinOrFail_ShowNext", 
        e[e.RankSafeCardWinOrFail_Open = 139] = "RankSafeCardWinOrFail_Open", e[e.RankSafeCardWinOrFail_Use = 140] = "RankSafeCardWinOrFail_Use", 
        e[e.RankSafeCardWinOrFail_Close = 141] = "RankSafeCardWinOrFail_Close", e[e.UIFightInfo_Open = 142] = "UIFightInfo_Open", 
        e[e.UIFightInfo_Close = 143] = "UIFightInfo_Close", e[e.UIFightKillTip_Open = 144] = "UIFightKillTip_Open", 
        e[e.UIFightKillTip_Close = 145] = "UIFightKillTip_Close", e[e.UIDebugInfo_Open = 146] = "UIDebugInfo_Open", 
        e[e.UIDebugInfo_SyncCheck = 147] = "UIDebugInfo_SyncCheck", e[e.UIDebugInfo_Close = 148] = "UIDebugInfo_Close", 
        e[e.UISevenDay_Open = 149] = "UISevenDay_Open", e[e.UISevenDay_Close = 150] = "UISevenDay_Close", 
        e[e.UISevenDay_ClickQuan = 151] = "UISevenDay_ClickQuan", e[e.UISevenDay_Updata = 152] = "UISevenDay_Updata", 
        e[e.UISevenDay_Common = 153] = "UISevenDay_Common", e[e.UISuperStart_Open = 154] = "UISuperStart_Open", 
        e[e.UISuperStart_Close = 155] = "UISuperStart_Close", e[e.UISHModel_Open = 156] = "UISHModel_Open", 
        e[e.UISHModel_Close = 157] = "UISHModel_Close", e[e.UISHModel_StartCallBack = 158] = "UISHModel_StartCallBack", 
        e[e.UIXPModel_Open = 159] = "UIXPModel_Open", e[e.UIXPModel_Close = 160] = "UIXPModel_Close", 
        e[e.UIDungeonReward_Open = 161] = "UIDungeonReward_Open", e[e.UIDungeonReward_Close = 162] = "UIDungeonReward_Close", 
        e[e.UIFightEndBox_Open = 163] = "UIFightEndBox_Open", e[e.UIFightEndBox_Close = 164] = "UIFightEndBox_Close", 
        e[e.UITianFu_Open = 165] = "UITianFu_Open", e[e.UITianFu_Close = 166] = "UITianFu_Close", 
        e[e.UITianFuTips_Open = 167] = "UITianFuTips_Open", e[e.UITianFuTips_Close = 168] = "UITianFuTips_Close", 
        e[e.UIPrivacyPolicy_Open = 169] = "UIPrivacyPolicy_Open", e[e.UIPrivacyPolicy_Close = 170] = "UIPrivacyPolicy_Close", 
        e[e.UIWing_Open = 171] = "UIWing_Open", e[e.UIWing_Close = 172] = "UIWing_Close", 
        e[e.UIWing_UP = 173] = "UIWing_UP", e[e.UIWing_UPUpdate = 174] = "UIWing_UPUpdate", 
        e[e.UIWing_UPDiamond = 175] = "UIWing_UPDiamond", e[e.UISkillTips_Open = 176] = "UISkillTips_Open", 
        e[e.UISkillTips_DelayOpen = 177] = "UISkillTips_DelayOpen", e[e.UISkillTips_Close = 178] = "UISkillTips_Close", 
        e[e.UIEventHome_Open = 179] = "UIEventHome_Open", e[e.UIEventHome_Close = 180] = "UIEventHome_Close", 
        e[e.UIEventHome_Red = 181] = "UIEventHome_Red", e[e.UIEventForceAD = 182] = "UIEventForceAD", 
        e[e.UIEventDSGL_Open = 183] = "UIEventDSGL_Open", e[e.UIEventDSGL_Close = 184] = "UIEventDSGL_Close", 
        e[e.UIEventNQCT_Open = 185] = "UIEventNQCT_Open", e[e.UIEventNQCT_Close = 186] = "UIEventNQCT_Close", 
        e[e.UIEventNQCT_Data = 187] = "UIEventNQCT_Data", e[e.UIEventATM_Open = 188] = "UIEventATM_Open", 
        e[e.UIEventATM_Close = 189] = "UIEventATM_Close", e[e.UIEventATM_Data = 190] = "UIEventATM_Data", 
        e[e.UIEventALS_Open = 191] = "UIEventALS_Open", e[e.UIEventALS_Close = 192] = "UIEventALS_Close", 
        e[e.UIEventALS_Data = 193] = "UIEventALS_Data", e[e.UIEventZY_Open = 194] = "UIEventZY_Open", 
        e[e.UIEventZY_Close = 195] = "UIEventZY_Close", e[e.UIEventZY_Data = 196] = "UIEventZY_Data", 
        e[e.UIEventCFKJ_Open = 197] = "UIEventCFKJ_Open", e[e.UIEventCFKJ_Close = 198] = "UIEventCFKJ_Close", 
        e[e.UIEventCFKJ_Data = 199] = "UIEventCFKJ_Data", e[e.UIEventXSLB_Open = 200] = "UIEventXSLB_Open", 
        e[e.UIEventXSLB_Close = 201] = "UIEventXSLB_Close", e[e.UIEventXSLB_Data = 202] = "UIEventXSLB_Data", 
        e[e.UIEventBZSK_Open = 203] = "UIEventBZSK_Open", e[e.UIEventBZSK_Close = 204] = "UIEventBZSK_Close", 
        e[e.UIEventBZSK_Data = 205] = "UIEventBZSK_Data", e[e.UIEventBZSK_Share = 206] = "UIEventBZSK_Share", 
        e[e.UIEventCFTT_Open = 207] = "UIEventCFTT_Open", e[e.UIEventCFTT_Close = 208] = "UIEventCFTT_Close", 
        e[e.UIGetFuWen_Open = 209] = "UIGetFuWen_Open", e[e.UIGetFuWen_ShowPrize = 210] = "UIGetFuWen_ShowPrize", 
        e[e.UIGetFuWen_Close = 211] = "UIGetFuWen_Close", e[e.UIHeroShow3d_Open = 212] = "UIHeroShow3d_Open", 
        e[e.UIHeroShow3d_Close = 213] = "UIHeroShow3d_Close", e[e.UIHeroShow3d_UpdateRes = 214] = "UIHeroShow3d_UpdateRes", 
        e[e.UIBuyEqTips_Open = 215] = "UIBuyEqTips_Open", e[e.UIBuyEqTips_WaitShow = 216] = "UIBuyEqTips_WaitShow", 
        e[e.UIBuyEqTips_Close = 217] = "UIBuyEqTips_Close", e[e.UIFightEndRankShow_Open = 218] = "UIFightEndRankShow_Open", 
        e[e.UIFightEndRankShow_SetData = 219] = "UIFightEndRankShow_SetData", e[e.UIFightEndRankShow_UpdateStar = 220] = "UIFightEndRankShow_UpdateStar", 
        e[e.UIFightEndRankShow_Close = 221] = "UIFightEndRankShow_Close", e[e.UIFightEndRankShow_DelayOpen = 222] = "UIFightEndRankShow_DelayOpen", 
        e[e.UIFightEndRankShow_ShowOppoNative = 223] = "UIFightEndRankShow_ShowOppoNative", 
        e[e.UIFightEndSHShow_Open = 224] = "UIFightEndSHShow_Open", e[e.UIFightEndSHShow_SetData = 225] = "UIFightEndSHShow_SetData", 
        e[e.UIFightEndSHShow_UpdateStar = 226] = "UIFightEndSHShow_UpdateStar", e[e.UIFightEndSHShow_Close = 227] = "UIFightEndSHShow_Close", 
        e[e.UIFightEndSHShow_DelayOpen = 228] = "UIFightEndSHShow_DelayOpen", e[e.UIFightEndSHShow_ShowOppoNative = 229] = "UIFightEndSHShow_ShowOppoNative", 
        e[e.UIFightEnd_Close = 230] = "UIFightEnd_Close", e[e.UIFightEnd_Open = 231] = "UIFightEnd_Open", 
        e[e.UIFightEnd_OnVideoShared = 232] = "UIFightEnd_OnVideoShared", e[e.UIFightShop_Open = 233] = "UIFightShop_Open", 
        e[e.UIFightShop_Close = 234] = "UIFightShop_Close", e[e.UIFightShop_Update = 235] = "UIFightShop_Update", 
        e[e.UIFightShop_CheckBuyID = 236] = "UIFightShop_CheckBuyID", e[e.UIFightShop_UpdateCoin = 237] = "UIFightShop_UpdateCoin", 
        e[e.UIGameFight_showDeadTime = 238] = "UIGameFight_showDeadTime", e[e.UIGameFight_hideDeadTime = 239] = "UIGameFight_hideDeadTime", 
        e[e.UIGameFight_setPlayers = 240] = "UIGameFight_setPlayers", e[e.UIGameFight_updateSkill = 241] = "UIGameFight_updateSkill", 
        e[e.UIGameFight_showKillInfo = 242] = "UIGameFight_showKillInfo", e[e.UIGameFight_updateSelfPointUI = 243] = "UIGameFight_updateSelfPointUI", 
        e[e.UIGameFight_updatePointUI = 244] = "UIGameFight_updatePointUI", e[e.UIGameFight_updateKillAnim = 245] = "UIGameFight_updateKillAnim", 
        e[e.UIGameFight_playSKillUPAnim = 246] = "UIGameFight_playSKillUPAnim", e[e.UIGameFight_updateGlod = 247] = "UIGameFight_updateGlod", 
        e[e.UIFightMainModel_WaitBuy = 248] = "UIFightMainModel_WaitBuy", e[e.UIFightMainModel_TestInfo = 249] = "UIFightMainModel_TestInfo", 
        e[e.UIFightMainModel_TouchMove = 250] = "UIFightMainModel_TouchMove", e[e.UIFightMainModel_PlaySkill = 251] = "UIFightMainModel_PlaySkill", 
        e[e.UIFightMainModel_EndPlaySkill = 252] = "UIFightMainModel_EndPlaySkill", e[e.UIFightMainModel_UpdateSkill = 253] = "UIFightMainModel_UpdateSkill", 
        e[e.UIFightMainModel_Open = 254] = "UIFightMainModel_Open", e[e.UIFightMainModel_Close = 255] = "UIFightMainModel_Close", 
        e[e.UIFightMainModel_UpdateWaitBuy = 256] = "UIFightMainModel_UpdateWaitBuy", e[e.UIFightMainModel_UpdateSelfInfo = 257] = "UIFightMainModel_UpdateSelfInfo", 
        e[e.UIFightMainModel_UpdateShowDead = 258] = "UIFightMainModel_UpdateShowDead", 
        e[e.UIFightMainModel_UpdateKill = 259] = "UIFightMainModel_UpdateKill", e[e.UIFightMainModel_UpdateRes = 260] = "UIFightMainModel_UpdateRes", 
        e[e.UIFightMainModel_Pause = 261] = "UIFightMainModel_Pause", e[e.UIFightMainModel_Quest = 262] = "UIFightMainModel_Quest", 
        e[e.UIFightMainModel_Stroy = 263] = "UIFightMainModel_Stroy", e[e.UIFightMainModel_QuestGuide = 264] = "UIFightMainModel_QuestGuide", 
        e[e.UIFightMainModel_SwitchHero = 265] = "UIFightMainModel_SwitchHero", e[e.UIFightMainModel_UpdateSwitchHero = 266] = "UIFightMainModel_UpdateSwitchHero", 
        e[e.UIFightMainModel_HideShowSkill = 267] = "UIFightMainModel_HideShowSkill", e[e.UIFightMainModel_UpdateRandomBuff = 268] = "UIFightMainModel_UpdateRandomBuff", 
        e[e.UIFightMainModel_UpdateRandomBuffTime = 269] = "UIFightMainModel_UpdateRandomBuffTime", 
        e[e.UIFightMainModel_UpdateRandomBuffInit = 270] = "UIFightMainModel_UpdateRandomBuffInit", 
        e[e.UIFightMainModel_UpdateXPSkillShow = 271] = "UIFightMainModel_UpdateXPSkillShow", 
        e[e.UIFightMainModel_UpdateXPSkillReday = 272] = "UIFightMainModel_UpdateXPSkillReday", 
        e[e.UIFightMainModel_AutoTraceUnit = 273] = "UIFightMainModel_AutoTraceUnit", e[e.UIFightMainModel_TouchSkillEnd = 274] = "UIFightMainModel_TouchSkillEnd", 
        e[e.UIFightMainModel_TouchHuiChengEnd = 275] = "UIFightMainModel_TouchHuiChengEnd", 
        e[e.UIFightMainModel_TouchHuiChengStart = 276] = "UIFightMainModel_TouchHuiChengStart", 
        e[e.UIFightMainModel_BuildDanaged = 277] = "UIFightMainModel_BuildDanaged", e[e.UIFightMainModel_Talk = 278] = "UIFightMainModel_Talk", 
        e[e.UIFightSkill_Open = 279] = "UIFightSkill_Open", e[e.UIFightSkill_Close = 280] = "UIFightSkill_Close", 
        e[e.UIFightSkill_Select = 281] = "UIFightSkill_Select", e[e.UIFightLvUp_Open = 282] = "UIFightLvUp_Open", 
        e[e.UIFightLvUp_Close = 283] = "UIFightLvUp_Close", e[e.UIFightLvUp_Select = 284] = "UIFightLvUp_Select", 
        e[e.UIWarning_Open = 285] = "UIWarning_Open", e[e.UIWarning_Close = 286] = "UIWarning_Close", 
        e[e.UIHeroLvUp_Open = 287] = "UIHeroLvUp_Open", e[e.UIHeroLvUp_Close = 288] = "UIHeroLvUp_Close", 
        e[e.UIGuide_Open = 289] = "UIGuide_Open", e[e.UIGuide_Close = 290] = "UIGuide_Close", 
        e[e.UIStoryTalk_Open = 291] = "UIStoryTalk_Open", e[e.UIStoryTalk_Close = 292] = "UIStoryTalk_Close", 
        e[e.UIOneDayEnd_Open = 293] = "UIOneDayEnd_Open", e[e.UIOneDayEnd_Close = 294] = "UIOneDayEnd_Close", 
        e[e.UIOneDayEnd_Update = 295] = "UIOneDayEnd_Update", e[e.UIOneDayEnd_Get = 296] = "UIOneDayEnd_Get", 
        e[e.UIOneDayEnd_UpdateRes = 297] = "UIOneDayEnd_UpdateRes", e[e.UINativeInterstitial_Open = 298] = "UINativeInterstitial_Open", 
        e[e.UINativeInterstitial_Close = 299] = "UINativeInterstitial_Close", e[e.UINativeInterstitial_Ok = 300] = "UINativeInterstitial_Ok", 
        e[e.UIConfirm_Open = 301] = "UIConfirm_Open", e[e.UIConfirm_Close = 302] = "UIConfirm_Close", 
        e[e.UIConfirm_OK = 303] = "UIConfirm_OK", e[e.UIConfirm_Cancle = 304] = "UIConfirm_Cancle", 
        e[e.UISuperStartConfirm_Open = 305] = "UISuperStartConfirm_Open", e[e.UISuperStartConfirm_Close = 306] = "UISuperStartConfirm_Close", 
        e[e.UIVideoToNavigateGame_Open = 307] = "UIVideoToNavigateGame_Open", e[e.UIVideoToNavigateGame_Close = 308] = "UIVideoToNavigateGame_Close", 
        e[e.UIFightSet_Open = 309] = "UIFightSet_Open", e[e.UIFightSet_Close = 310] = "UIFightSet_Close", 
        e[e.UIFightSet_Exit = 311] = "UIFightSet_Exit", e[e.UIFightSet_Select = 312] = "UIFightSet_Select", 
        e[e.UIFindRes_Open = 313] = "UIFindRes_Open", e[e.UIFindRes_Close = 314] = "UIFindRes_Close", 
        e[e.UIFindRes_StartFind = 315] = "UIFindRes_StartFind", e[e.UICode_Open = 316] = "UICode_Open", 
        e[e.UICode_Close = 317] = "UICode_Close", e[e.UIRankPos_Open = 318] = "UIRankPos_Open", 
        e[e.UIRankPos_Close = 319] = "UIRankPos_Close", e[e.UIRankPos_Save = 320] = "UIRankPos_Save", 
        e[e.UIRankPos_Pop = 321] = "UIRankPos_Pop", e[e.UIRankPos_Select = 322] = "UIRankPos_Select", 
        e[e.UIFightInvite_Open = 323] = "UIFightInvite_Open", e[e.UIFightInvite_Close = 324] = "UIFightInvite_Close", 
        e[e.UIFriendDel_Open = 325] = "UIFriendDel_Open", e[e.UIFriendDel_Close = 326] = "UIFriendDel_Close", 
        e[e.UIFriendAdd_Open = 327] = "UIFriendAdd_Open", e[e.UIFriendAdd_Close = 328] = "UIFriendAdd_Close", 
        e[e.UIRank_Open = 329] = "UIRank_Open", e[e.UIRank_Close = 330] = "UIRank_Close", 
        e[e.UIRank_Switch = 331] = "UIRank_Switch", e[e.UIRank_MoreData = 332] = "UIRank_MoreData", 
        e[e.UIRank_GetRankInfo = 333] = "UIRank_GetRankInfo", e[e.UISeason_Open = 334] = "UISeason_Open", 
        e[e.UISeason_Close = 335] = "UISeason_Close", e[e.UISeasonGet_Open = 336] = "UISeasonGet_Open", 
        e[e.UISeasonGet_Close = 337] = "UISeasonGet_Close", e[e.UISocial_Open = 338] = "UISocial_Open", 
        e[e.UISocial_Close = 339] = "UISocial_Close", e[e.UISocial_SetTeam = 340] = "UISocial_SetTeam", 
        e[e.UISocial_TeamTalk = 341] = "UISocial_TeamTalk", e[e.UISocial_UpdateTalkList = 342] = "UISocial_UpdateTalkList", 
        e[e.UISocial_s2c_push_chat = 343] = "UISocial_s2c_push_chat", e[e.UISocial_s2c_chat_friend = 344] = "UISocial_s2c_chat_friend", 
        e[e.LocalServer_Pause = 345] = "LocalServer_Pause", e[e.LocalServer_Resume = 346] = "LocalServer_Resume", 
        e[e.LocalServer_StartLocalFight = 347] = "LocalServer_StartLocalFight", e[e.LocalServer_End = 348] = "LocalServer_End", 
        e[e.LocalServer_CacheAction = 349] = "LocalServer_CacheAction", e[e.UIFightDead_Open = 350] = "UIFightDead_Open", 
        e[e.UIFightDead_Close = 351] = "UIFightDead_Close", e[e.UIFightDead_Relive = 352] = "UIFightDead_Relive", 
        e[e.UIFightDead_GameEnd = 353] = "UIFightDead_GameEnd", e[e.UIFightDead_Init = 354] = "UIFightDead_Init", 
        e[e.UISafeFail_Open = 355] = "UISafeFail_Open", e[e.UISafeFail_Close = 356] = "UISafeFail_Close", 
        e[e.UISafeFail_Relive = 357] = "UISafeFail_Relive", e[e.UISafeFail_GameEnd = 358] = "UISafeFail_GameEnd", 
        e[e.UISafeFail_Init = 359] = "UISafeFail_Init", e[e.UIMoreGame_Open = 360] = "UIMoreGame_Open", 
        e[e.UIMoreGame_Close = 361] = "UIMoreGame_Close", e[e.UIMoreGameFull_Open = 362] = "UIMoreGameFull_Open", 
        e[e.UIMoreGameFull_Close = 363] = "UIMoreGameFull_Close", e[e.UIMoreGameFull_Opened = 364] = "UIMoreGameFull_Opened", 
        e[e.UISign_Open = 365] = "UISign_Open", e[e.UISign_Close = 366] = "UISign_Close", 
        e[e.UIGetFreeSkin_Open = 367] = "UIGetFreeSkin_Open", e[e.UIGetFreeSkin_Close = 368] = "UIGetFreeSkin_Close", 
        e[e.UIGetFreeSkin_State = 369] = "UIGetFreeSkin_State", e[e.UIGetFreeSkin_ClickFree = 370] = "UIGetFreeSkin_ClickFree", 
        e[e.UIGetFreeSkin_ClickVideo = 371] = "UIGetFreeSkin_ClickVideo", e[e.UIGetFreeSkin_ClickQuan = 372] = "UIGetFreeSkin_ClickQuan", 
        e[e.UIGetFreeSkin_Updata = 373] = "UIGetFreeSkin_Updata", e[e.UIGetFreeSkin_Common = 374] = "UIGetFreeSkin_Common", 
        e[e.UIGetFreeDiamond_Open = 375] = "UIGetFreeDiamond_Open", e[e.UIGetFreeDiamond_Close = 376] = "UIGetFreeDiamond_Close", 
        e[e.UIGetFreeDiamond_ClickVideo = 377] = "UIGetFreeDiamond_ClickVideo", e[e.UIGetFreeGlod_Open = 378] = "UIGetFreeGlod_Open", 
        e[e.UIGetFreeGlod_Close = 379] = "UIGetFreeGlod_Close", e[e.UIGetFreeGlod_ClickVideo = 380] = "UIGetFreeGlod_ClickVideo", 
        e[e.UIGetFreeSP_Open = 381] = "UIGetFreeSP_Open", e[e.UIGetFreeSP_Close = 382] = "UIGetFreeSP_Close", 
        e[e.UIGetFreeSP_ClickVideo = 383] = "UIGetFreeSP_ClickVideo", e[e.UIVideoTreasure_Open = 384] = "UIVideoTreasure_Open", 
        e[e.UIVideoTreasure_Close = 385] = "UIVideoTreasure_Close", e[e.UIVideoTreasure_GetRed = 386] = "UIVideoTreasure_GetRed", 
        e[e.UIVideoTreasure_ClickOpen = 387] = "UIVideoTreasure_ClickOpen", e[e.UIVideoTreasure_ClickVideo = 388] = "UIVideoTreasure_ClickVideo", 
        e[e.UIOpenBox_Open = 389] = "UIOpenBox_Open", e[e.UIOpenBox_Close = 390] = "UIOpenBox_Close", 
        e[e.UIOpenBox_onClickOpen = 391] = "UIOpenBox_onClickOpen", e[e.UIOpenBox_setBoxsData = 392] = "UIOpenBox_setBoxsData", 
        e[e.UIShowPrize_Open = 393] = "UIShowPrize_Open", e[e.UIShowPrize_SetSPPrize = 394] = "UIShowPrize_SetSPPrize", 
        e[e.UIShowPrize_Close = 395] = "UIShowPrize_Close", e[e.UIShowPrize_OnClickNext = 396] = "UIShowPrize_OnClickNext", 
        e[e.UIShowPrize_OnClickAdd = 397] = "UIShowPrize_OnClickAdd", e[e.UIShare_Open = 398] = "UIShare_Open", 
        e[e.UIShare_Close = 399] = "UIShare_Close", e[e.UIShare_Invite = 400] = "UIShare_Invite", 
        e[e.UIShare_UpLoad = 401] = "UIShare_UpLoad", e[e.UIVideoPrize_Open = 402] = "UIVideoPrize_Open", 
        e[e.UIVideoPrize_Close = 403] = "UIVideoPrize_Close", e[e.UIVideoPrize_Get = 404] = "UIVideoPrize_Get", 
        e[e.GameRecorder_autoRecorder = 405] = "GameRecorder_autoRecorder", e[e.GameRecorder_stopAutoRecorder = 406] = "GameRecorder_stopAutoRecorder", 
        e[e.GameRecorder_clearAuto = 407] = "GameRecorder_clearAuto", e[e.GameRecorder_start = 408] = "GameRecorder_start", 
        e[e.GameRecorder_stop = 409] = "GameRecorder_stop", e[e.GameRecorder_startClip = 410] = "GameRecorder_startClip", 
        e[e.GameRecorder_videoEnable = 411] = "GameRecorder_videoEnable", e[e.UIOnlineReward_Open = 412] = "UIOnlineReward_Open", 
        e[e.UIOnlineReward_Close = 413] = "UIOnlineReward_Close", e[e.UIEventXRKH_ZY_Open = 414] = "UIEventXRKH_ZY_Open", 
        e[e.UIEventXRKH_ZY_Close = 415] = "UIEventXRKH_ZY_Close", e[e.UIEventXRKH_ZY_Data = 416] = "UIEventXRKH_ZY_Data", 
        e[e.UIEventXRKH_NQ_Open = 417] = "UIEventXRKH_NQ_Open", e[e.UIEventXRKH_NQ_Close = 418] = "UIEventXRKH_NQ_Close", 
        e[e.UIEventXRKH_NQ_Data = 419] = "UIEventXRKH_NQ_Data";
    }(a || (a = {}));
    class d {
        constructor() {
            this.MsgCallBackDic = {};
        }
        static get Instance() {
            return null == d.instance && (d.instance = new d()), d.instance;
        }
        Reg(e, t) {
            let i = this.MsgCallBackDic[e];
            if (null == i) return i = [ t ], void (this.MsgCallBackDic[e] = i);
            i[i.length] = t;
        }
        UnReg(e, t) {
            let i = this.MsgCallBackDic[e];
            if (null != i) {
                let e = i.indexOf(t);
                -1 != e && i.splice(e, 1);
            }
        }
        Send(e, ...t) {
            let i = this.MsgCallBackDic[e];
            if (null != i) for (let e = 0; e < i.length; e++) i[e](t);
        }
    }
    d.instance = null;
    class u {
        static TrigonometricFunction() {
            u.SIN_TAB.push(0), u.SIN_TAB.push(.245), u.SIN_TAB.push(.491), u.SIN_TAB.push(.735), 
            u.SIN_TAB.push(.98), u.SIN_TAB.push(.1224), u.SIN_TAB.push(.1467), u.SIN_TAB.push(.171), 
            u.SIN_TAB.push(.1951), u.SIN_TAB.push(.2191), u.SIN_TAB.push(.243), u.SIN_TAB.push(.2667), 
            u.SIN_TAB.push(.2903), u.SIN_TAB.push(.3137), u.SIN_TAB.push(.3369), u.SIN_TAB.push(.3599), 
            u.SIN_TAB.push(.3827), u.SIN_TAB.push(.4052), u.SIN_TAB.push(.4276), u.SIN_TAB.push(.4496), 
            u.SIN_TAB.push(.4714), u.SIN_TAB.push(.4929), u.SIN_TAB.push(.5141), u.SIN_TAB.push(.535), 
            u.SIN_TAB.push(.5556), u.SIN_TAB.push(.5758), u.SIN_TAB.push(.5957), u.SIN_TAB.push(.6152), 
            u.SIN_TAB.push(.6344), u.SIN_TAB.push(.6532), u.SIN_TAB.push(.6716), u.SIN_TAB.push(.6895), 
            u.SIN_TAB.push(.7071), u.SIN_TAB.push(.7242), u.SIN_TAB.push(.741), u.SIN_TAB.push(.7572), 
            u.SIN_TAB.push(.773), u.SIN_TAB.push(.7883), u.SIN_TAB.push(.8032), u.SIN_TAB.push(.8176), 
            u.SIN_TAB.push(.8315), u.SIN_TAB.push(.8449), u.SIN_TAB.push(.8577), u.SIN_TAB.push(.8701), 
            u.SIN_TAB.push(.8819), u.SIN_TAB.push(.8932), u.SIN_TAB.push(.904), u.SIN_TAB.push(.9142), 
            u.SIN_TAB.push(.9239), u.SIN_TAB.push(.933), u.SIN_TAB.push(.9415), u.SIN_TAB.push(.9495), 
            u.SIN_TAB.push(.9569), u.SIN_TAB.push(.9638), u.SIN_TAB.push(.97), u.SIN_TAB.push(.9757), 
            u.SIN_TAB.push(.9808), u.SIN_TAB.push(.9853), u.SIN_TAB.push(.9892), u.SIN_TAB.push(.9925), 
            u.SIN_TAB.push(.9952), u.SIN_TAB.push(.9973), u.SIN_TAB.push(.9988), u.SIN_TAB.push(.9997), 
            u.SIN_TAB.push(1);
        }
        static Sin(e) {
            var t = 0, i = 0, s = u.TAB_N, n = u.SIN_TAB;
            return (t = parseInt(e * s / 2 / u.PI + "")) >= 0 && t <= s / 4 ? i = n[t] : t > s / 4 && t < s / 2 ? i = n[s / 4 - (t -= s / 4)] : t >= s / 2 && t < 3 * s / 4 ? i = -n[t -= s / 2] : t >= 3 * s / 4 && t < s && (i = -n[t = s - t]), 
            i;
        }
        static Cos(e) {
            var t = u.PI, i = e + t / 2;
            return i > 2 * t && (i -= 2 * t), u.Sin(i);
        }
        static random() {
            return u.seed = (9301 * u.seed + 49297) % 233280, u.decimalRound(u.seed / 233280);
        }
        static round(e) {
            return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e);
        }
        static noDecimalRound(e) {
            return (e *= 100) < 0 ? -1 * Math.round(-1 * e) : Math.round(e);
        }
        static decimalRound(e) {
            return (e *= 100) < 0 ? -1 * Math.round(-1 * e) / 100 : Math.round(e) / 100;
        }
        static decimalFloor(e) {
            return (e *= 100) < 0 ? -1 * Math.floor(-1 * e) / 100 : Math.floor(e) / 100;
        }
        static decimalOneRound(e) {
            return (e *= 10) < 0 ? -1 * Math.round(-1 * e) / 10 : Math.round(e) / 10;
        }
        static decimalOneFloor(e) {
            return (e *= 10) < 0 ? -1 * Math.floor(-1 * e) / 10 : Math.floor(e) / 10;
        }
        static NumberToK(e) {
            return e < 1e3 ? e + "" : u.decimalOneRound(e / 1e3) + "k";
        }
    }
    u.lookUp = new Laya.Vector3(0, 1, 0), u.seed = 1e4, u.TAB_N = 256, u.PI = 3.14159265, 
    u.SIN_TAB = [], u.netPrecision = 100;
    class p {}
    class m {}
    class g extends Laya.Timer {
        constructor(e) {
            super(e);
        }
        _update() {
            super._update();
        }
    }
    !function(e) {
        e[e.MOVE = 1] = "MOVE", e[e.ATTACK = 2] = "ATTACK", e[e.DEAD = 3] = "DEAD", e[e.SKILLUP = 4] = "SKILLUP", 
        e[e.BUY = 5] = "BUY", e[e.SELL = 6] = "SELL", e[e.NETSTOP = 7] = "NETSTOP", e[e.NETCONNECT = 8] = "NETCONNECT", 
        e[e.RELIVE = 9] = "RELIVE", e[e.QUICKLYTALK = 10] = "QUICKLYTALK", e[e.PAUSEGAME = 11] = "PAUSEGAME", 
        e[e.RESUMEGAME = 12] = "RESUMEGAME", e[e.SYNCCHECK = 13] = "SYNCCHECK", e[e.XPSKILL = 14] = "XPSKILL", 
        e[e.PINGTEST = 15] = "PINGTEST";
    }(o || (o = {}));
    class f {
        constructor() {
            this.isSpeedPlay = !1, this.serverFrame = 0, this.currentFrameTime = 0, this.pauseFrame = 0, 
            this.totalFrame = 0, this.currentFrame = 0, this.currentRenderFrame = 0, this.isReConnect = !1, 
            this.frameStartCall = [], this.frameEndCall = [];
        }
        static get Instance() {
            return null == this.instance && (f.instance = new f()), f.instance;
        }
        init() {
            f.framePing = 10, f.pingCheckSpace = 0, f.oldFrameTime = 0, f.baseFrameTime = Laya.Browser.now(), 
            this.frameTimer = new g(!1), this.localFrameTimer = new g(!1), this.renderFrameTimer = new g(!1);
        }
        static reSetLogicFrame(e) {
            f.logicFrame = Math.round(1e3 / e), isNaN(f.logicFrame) && (f.logicFrame = 13), 
            f.logicFrameTime = Math.round(1e3 / f.logicFrame), f.renderFrameRatio = Math.round(f.renderFrame / f.logicFrame), 
            console.log("logicFrame " + f.logicFrame);
        }
    }
    f.instance = null, f.isLocalServer = !1, f.logicFrame = 13, f.renderFrame = 60, 
    f.logicFrameBuff = 1, f.logicFrameTime = Math.round(1e3 / f.logicFrame), f.renderTimeRatio = Math.round(1e3 / f.renderFrame), 
    f.renderFrameRatio = Math.round(f.renderFrame / f.logicFrame), f.framePing = 0, 
    f.oldFrameTime = 0, f.baseFrameTime = 0, f.pingCheckSpace = 0;
    var I, v, _ = Laya.Byte, y = Laya.Browser;
    class S {
        Send(e) {
            if (this.msgData) if (w.Instance.NetConnect && (s.isLogin || this.id < 10100)) w.Instance.DoSend(this.id, this.msgData, e); else if (11003 != this.id && 11004 != this.id && 12010 != this.id && 12011 != this.id && 12036 != this.id && w.Instance.cacheSendMsg.length <= 5) {
                var t = new p();
                t.AwesomeData = this, t.data = e, w.Instance.cacheSendMsg.push(t);
            }
        }
    }
    class w {
        constructor() {
            this.ProtoBuf = y.window.protobuf, this.AwesomeMessagDic = {}, this.ProtoNameToIDDic = {}, 
            this.ProtoIDToNameDic = {}, this.MsgCallBackDic = {}, this.NetHeartNum = 0, this.Ping = 0, 
            this.PingArray = [], this.InitNet = !1, this.severTime = 0, this.reConnectIng = !1, 
            this.getLoginHostIP = !1, this.reConnetNum = 0, this.cacheSendMsg = [], this.oldCurrTimer = 0, 
            this.minP = 0, this.maxP = 0, this.ping = 0, this.pingSum = 0, this.oncePing = 0, 
            this.RecvByte = new _(), this.RecvByte.endian = "LITTLE_ENDIAN", this.SendByte = new _(), 
            this.SendByte.endian = "LITTLE_ENDIAN", this.CommonByteBuffer = new y.window.dcodeIO.ByteBuffer(), 
            Laya.timer.loop(2e3, this, this.NetHeart);
        }
        static get Instance() {
            return null == this.instance && (w.instance = new w()), w.instance;
        }
        Init(e, t) {
            console.error("NetSocketManager Init server: " + e), this.serverip = e, this.protoPaht = t, 
            this.loadProtoBuf(), this.RegisterNet(11004, e => {
                this.s2c_heart_check(e);
            });
        }
        loadProtoBuf() {
            this.ProtoBuf = y.window.dcodeIO.ProtoBuf, this.ProtoBuf.loadProtoFile(this.protoPaht, (e, t) => {
                this.onAssetsLoaded(e, t);
            }), Laya.timer.once(5e3, this, this.loadProtoBufTimeOut);
        }
        loadProtoBufTimeOut() {
            console.log("loadProtoBufTimeOut 重试加载"), this.loadProtoBuf();
        }
        connect() {
            f.isLocalServer || d.Instance.Send(a.UIGameTipsModel_SetTips, "正在连接服务器..."), d.Instance.Send(a.UILoginModel_waitServer), 
            console.log("connect " + this.serverip), this.stopConnect(), this.webSocket = new WebSocket(this.serverip), 
            this.webSocket.binaryType = "arraybuffer", this.webSocket.onopen = (() => {
                this.onSocketOpen();
            }), this.webSocket.onclose = (() => {
                this.onSocketClose();
            }), this.webSocket.onmessage = (e => {
                this.onMessageReveived(e);
            }), this.webSocket.onerror = (e => {
                this.onConnectError(e);
            }), s.isGs || s.isTestVersion || (Laya.timer.clear(this, this.waitCheckNet), Laya.timer.once(8e3, this, this.waitCheckNet));
        }
        waitCheckNet() {
            if (!this.InitNet) {
                if (Laya.timer.clear(this, this.waitCheckNet), null != s.cacheServerList && null != s.cacheServerList.server) {
                    var e = Math.floor(10 * Math.random()) % s.cacheServerList.server.length;
                    s.serverip = s.cacheServerList.server[e], this.serverip = s.serverip;
                }
                this.ReConnect();
            }
        }
        onSocketOpen() {
            this.InitNet = !0, d.Instance.Send(a.UIGameTipsModel_Close), console.log("onSocketOpen"), 
            this.NetConnect = !0, this.NetHeartNum = 0, this.reConnetNum = 0, d.Instance.Send(a.UILoginModel_PlayerLogin, 1, 2, 3, 4), 
            this.reConnectIng = !1, this.NetHeart();
        }
        onSocketClose() {
            this.reConnectIng = !1, this.InitNet = !0, s.isLogin = !1, s.isGetPlayerInfo = !1, 
            f.isLocalServer || d.Instance.Send(a.UIGameTipsModel_SetTips, "与服务器断开连接..."), console.log("onSocketClose"), 
            this.NetConnect = !1;
        }
        onMessageReveived(e) {
            null != e && w.instance.Recv(e.data);
        }
        onConnectError(e) {
            this.reConnectIng = !1, this.InitNet = !0, s.isLogin = !1, f.isLocalServer || d.Instance.Send(a.UIGameTipsModel_SetTips, "与服务器断开连接..."), 
            console.log("onConnectError ", e), this.NetConnect = !1;
        }
        onAssetsLoaded(e, t) {
            if (e) console.log("protobuf load error!", e); else {
                console.log("protobuf onAssetsLoaded"), Laya.timer.clear(this, this.loadProtoBufTimeOut), 
                this.ProtoBufRoot = t;
                var i = t.build("serviceNo");
                for (var s in i) this.ProtoNameToIDDic[s] = i[s], this.ProtoIDToNameDic[i[s]] = s;
                this.connect();
            }
        }
        checkWaitConnect() {
            s.isResLoad ? this.connect() : Laya.timer.once(500, this, this.checkWaitConnect);
        }
        GetNetMsgData(e) {
            if (null != this.AwesomeMessagDic) {
                var t = this.AwesomeMessagDic[e];
                if (null == t && ((t = new S()).name = e, null != this.ProtoBufRoot && (this.ProtoBufRoot.build(e), 
                t.msgData = this.ProtoBufRoot.lookup(e), null != t.msgData && (t.id = this.ProtoNameToIDDic[e]))), 
                null != t.msgData) return t;
            }
            return new S();
        }
        DoSend(e, t, i) {
            this.CommonByteBuffer.reset(), t.encode(i, this.CommonByteBuffer), null != this.SendByte && (11003 != e && 11004 != e && 12010 != e && console.log("Send " + e), 
            this.SendByte.clear(), this.SendByte.writeInt16(e), this.CommonByteBuffer.offset > 0 && this.SendByte.writeArrayBuffer(this.CommonByteBuffer.view, 0, this.CommonByteBuffer.offset), 
            this.NetConnect && null != this.webSocket && this.webSocket.send(this.SendByte.buffer));
        }
        Recv(e) {
            if (null != e && (this.RecvByte.clear(), this.RecvByte.writeArrayBuffer(e), this.RecvByte.length > 0 && (this.RecvByte.pos = 0, 
            this.RecvID = this.RecvByte.getInt16(), this.RecvLen = this.RecvByte.length - 2, 
            11003 != this.RecvID && 11004 != this.RecvID && 12009 != this.RecvID && console.log("Recv " + this.RecvID), 
            this.RecvAwesomeData = this.GetNetMsgData(this.ProtoIDToNameDic[this.RecvID]), null != this.RecvAwesomeData && null != this.RecvAwesomeData.msgData && null != this.RecvAwesomeData.msgData.decode))) {
                var t;
                this.RecvLen > 0 ? (this.CommonByteBuffer.reset(), this.CommonByteBuffer.append(this.RecvByte.getUint8Array(2, this.RecvLen), "binary", 0), 
                this.CommonByteBuffer.limit = this.RecvLen, t = this.RecvAwesomeData.msgData.decode(this.CommonByteBuffer, this.RecvLen)) : t = null;
                var i = this.MsgCallBackDic[this.RecvID];
                if (null != i) for (var s = 0; s < i.length; s++) i[s](t);
            }
        }
        RegisterNet(e, t) {
            var i = this.MsgCallBackDic[e];
            if (null == i) return i = [ t ], void (this.MsgCallBackDic[e] = i);
            i[i.length] = t;
        }
        UnRegisterNet(e, t) {
            var i = this.MsgCallBackDic[e];
            if (null != i) {
                var s = i.indexOf(t);
                -1 != s && i.splice(s, 1);
            }
        }
        stopConnect() {
            s.isLogin = !1, null != this.webSocket && (this.webSocket.close(), this.webSocket = null, 
            this.NetConnect = !1);
        }
        ReConnect() {
            if (this.reConnectIng) console.log("正在重连中...."); else {
                if (s.is4399H5Platform) return d.Instance.Send(a.UIGameTipsModel_Close), void (s.other_login || d.Instance.Send(a.UIGameExit_Open, !0));
                if (f.isLocalServer || d.Instance.Send(a.UIGameTipsModel_SetTips, "正在重新连接服务器..."), 
                this.stopConnect(), null != this.serverip && "" != this.serverip) {
                    if (console.log("Start ReConnect " + this.serverip), this.reConnetNum++, this.reConnetNum > 2 && !s.isGs && !s.isTestVersion && null != s.cacheServerList && null != s.cacheServerList.server) {
                        var e = Math.floor(10 * Math.random()) % s.cacheServerList.server.length;
                        s.serverip = s.cacheServerList.server[e], this.serverip = s.serverip;
                    }
                    this.connect(), this.reConnectIng = !0;
                }
            }
        }
        NetHeart() {
            !this.NetConnect || s.isLogin ? (this.NetHeartNum = this.NetHeartNum + 1, this.PingTest = Laya.timer.currTimer, 
            this.InitNet && w.Instance.GetNetMsgData("c2s_heart_check").Send({}), (this.NetHeartNum > 8 || this.InitNet) && (!this.NetConnect || this.NetHeartNum > 4) && (this.reConnectIng && this.NetHeartNum > 8 && (this.reConnectIng = !1), 
            this.InitNet = !1, this.NetHeartNum = 0, this.ReConnect())) : console.log("未登录 不发送心跳...");
        }
        s2c_heart_check(e) {
            this.oldCurrTimer = Laya.Browser.now(), this.oncePing = u.round(this.oldCurrTimer - this.PingTest);
            var t = e.time;
            this.severTime = t.toNumber() + this.oncePing, this.NetHeartNum = this.NetHeartNum - 1, 
            this.PingArray.push(this.oncePing), this.PingArray.length > 10 && this.PingArray.shift(), 
            this.MathPing();
        }
        MathPing() {
            if (this.minP = 0, this.maxP = 0, this.ping = 0, this.pingSum = 0, this.PingArray.length > 3) {
                for (var e = 0; e < this.PingArray.length; e++) (this.PingArray[e] < this.minP || 0 == this.minP) && (this.minP = this.PingArray[e]), 
                (this.PingArray[e] > this.maxP || 0 == this.maxP) && (this.maxP = this.PingArray[e]), 
                this.pingSum = this.pingSum + this.PingArray[e];
                this.ping = u.round(this.pingSum / (this.PingArray.length - 2));
            } else this.ping = 0;
        }
        getNewSeverTime() {
            return 0 == this.severTime ? 0 : this.severTime + Laya.Browser.now() - this.oldCurrTimer;
        }
        changeServerUrl(e) {
            this.serverip = e;
        }
    }
    w.instance = null;
    class D {
        constructor() {
            this.api = null, this.cspsdk = null, this.nativeAdData = [], this.nativeOverAdData = [], 
            this.appbox = null, this.blockadL = null, this.blockadR = null, this.blockadC = null, 
            this.blockadLShow = !1, this.blockadRShow = !1, this.blockadCShow = !1, this.isVideoShared = !1, 
            this.isTTGuanZhu = !1, this.isaddShortcuted = !1, this.nativeInterstitialAdData = [], 
            this.gameBannerADData = [], this.gamePortalAdData = [], this.AppLogincallBack = null, 
            this.AppShowNativecallBack = null, this.boxPortalAd = null, this.boxBannerAd = null, 
            this.AllScreenVideoCallBack = null, this.isInterVideoShowing = !1, this.bannerPos = {
                1: {
                    left: 517,
                    top: 645,
                    width: 300,
                    height: 105,
                    iPhoneXShow: !1
                },
                2: {
                    left: 1034,
                    top: 645,
                    width: 300,
                    height: 105,
                    iPhoneXShow: !1
                },
                3: {
                    left: 0,
                    top: 645,
                    width: 300,
                    height: 105,
                    iPhoneXShow: !1
                },
                4: {
                    left: 0,
                    top: 0,
                    width: 300,
                    height: 105,
                    iPhoneXShow: !1
                }
            }, this.lastNativeIconErrClickTime = 0, this.todayNativeIconErrClickNum = 0, this.lastNativeIconLoadTime = 0, 
            this.lastNativeBigImageErrClickTime = 0, this.todayNativeBigImageErrClickNum = 0, 
            this.lastNativeImageLoadTime = 0, this.dic_nativeAdData = {}, this.ad_ID = new b(), 
            this.share_data = new P(), this.ad_ControlParameter = new C(), this.lastShowSystemInsertIntervalTime = 0, 
            this.TodayShowSysInterNum = 0, this.lastShowNativeInsertIntervalTime = 0, this.lastShowInsertVideoIntervalTime = 0, 
            this.lastShowAllScreenVideoTime = 0, this.lastShowNativeImageTime = 0, this.lastLoadRewardVideoTime = 0, 
            this.lastNativeInsertErrClickTime = 0, this.todayNativeInsertErrClickNum = 0;
        }
        initFileSystemManager() {
            this.fsManager = this.api ? this.api.getFileSystemManager() : null;
        }
        access(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("access") ? this.fsManager.access(e) : e.fail();
        }
        unzip(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("unzip") ? this.fsManager.unzip(e) : e.fail();
        }
        openSync(e) {
            return null != this.fsManager && this.fsManager.hasOwnProperty("openSync") ? this.fsManager.openSync(e) : null;
        }
        closeSync(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("closeSync") && this.fsManager.closeSync(e);
        }
        writeSync(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("writeSync") && this.fsManager.writeSync(e);
        }
        readSync(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("readSync") && this.fsManager.readSync(e);
        }
        readFileSync(e) {
            if (null != this.fsManager && this.fsManager.hasOwnProperty("readFileSync")) return this.fsManager.readFileSync(e);
        }
        getFileInfo(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("getFileInfo") ? this.fsManager.getFileInfo(e) : e.fail();
        }
        writeFileSync(e) {
            if (null != this.fsManager && this.fsManager.hasOwnProperty("writeFileSync")) try {
                const t = this.fsManager.writeFileSync(e.filePath, e.data, e.encoding);
                e.success(t);
            } catch (t) {
                t = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(t);
                e.fail(t);
            } else e.fail();
        }
        downloadFile(e) {
            null != this.api && this.api.hasOwnProperty("downloadFile") ? this.api.downloadFile(e) : e.fail();
        }
        getLoginCode(e) {
            if (!Laya.Browser.onAndroid || s.isH5Platform || s.isPCPlatform) {
                if (!window.localStorage) return console.log("浏览器不支持localstorage"), void (null != e && e(0, !1));
                var t = window.localStorage, i = t.getItem("playerID");
                null == i || "" == i ? (i = this.GetRandomPlayerID(), t.setItem("playerID", i), 
                console.log("GetPlayerID setItem " + i), null != e && e(i, !1)) : null != e && e(i, !1);
            } else {
                console.log("安卓设备,反射方式获取ID");
                var n = Laya.Browser.window.PlatformClass.createClass("demo.DeviceIdUtil");
                if (null != n) {
                    var a = n.call("getPlayerId");
                    console.log("获得 demo.DeviceIdUtil  api" + a), null != e && e(a);
                }
            }
        }
        setShowNativeCallBack(e) {
            this.AppShowNativecallBack = e;
        }
        GetRandomPlayerID() {
            return "" + Math.floor(1e6 * Math.random());
        }
        getPixelRatio() {
            return "android" == s.systemInfo.platform ? s.systemInfo.pixelRatio : 1;
        }
        setPreferredFramesPerSecond(e) {
            this.api && this.api.setPreferredFramesPerSecond(e);
        }
        onShow(e) {
            this.api && this.api.onShow(e);
        }
        onHide(e) {
            this.api && this.api.onHide(e);
        }
        onShareAppMessage(e) {
            this.api && this.api.onShareAppMessage(e);
        }
        getUpdateManager() {
            return null == this.api ? null : this.api.getUpdateManager();
        }
        login(e) {
            null != this.api && this.api.login(e);
        }
        getNetworkType(e) {
            this.api && this.api.getNetworkType(e);
        }
        onNetworkStatusChange(e) {
            this.api && this.api.onNetworkStatusChange(e);
        }
        showModal(e) {
            this.api && this.api.showModal(e);
        }
        getSetting(e) {
            this.api && this.api.getSetting(e);
        }
        getUserInfo(e) {
            this.api && this.api.getUserInfo(e);
        }
        getNMUserInfo(e) {}
        createUserInfoButton(e) {
            return null == this.api ? null : this.api.createUserInfoButton(e);
        }
        shareAppMessage(e) {
            this.api && this.api.shareAppMessage(e);
        }
        addShortcut(e) {
            this.api && this.api.addShortcut(e);
        }
        setUserCloudStorage(e) {
            this.api && this.api.aldShareAppMessage(e);
        }
        createBannerAd(e) {
            return null == this.api ? null : this.api.createBannerAd(e);
        }
        createRewardedVideoAd(e) {
            return null == this.api ? null : this.api.createRewardedVideoAd(e);
        }
        navigateToMiniProgram(e) {
            this.api && this.api.navigateToMiniProgram(e);
        }
        showShareMenu() {
            this.api && this.api.showShareMenu();
        }
        hideShareMenu() {
            this.api && this.api.hideShareMenu();
        }
        setInnerAudioOption(e) {
            this.api && this.api.setInnerAudioOption(e);
        }
        hasOwnProperty(e) {
            return !0;
        }
        openSetting() {}
        getGameRecorderManager() {
            return null;
        }
        openCustomerServiceConversation(e) {}
        createGameBanner(e) {}
        createGamePortal(e) {}
        oppoCreateGameBannerAd() {}
        oppoCreateGamePortal() {}
        createMoreGamesButton() {
            return null;
        }
        createMoreGamesButtonCenter() {
            return null;
        }
        createGameIcon(e) {
            return null;
        }
        aldSendEvent(e, t) {}
        createAppBox(e) {
            return null;
        }
        aldSendOpenid(e) {}
        loadSubpackage(e) {}
        hasloadSubpackage() {
            return null != this.api && null != this.api.loadSubpackage;
        }
        createInterstitialAd(e) {}
        triggerGC() {}
        getSystemInfoSync() {
            return null == this.api ? null : this.api.getSystemInfoSync();
        }
        createInnerAudioContext() {
            return null == this.api ? null : this.api.createInnerAudioContext();
        }
        createAppInteractionAd() {}
        InitBanner() {
            let e = {
                1: {
                    top: s.systemInfo.windowHeight - 105,
                    left: s.systemInfo.windowWidth / 2 - 150,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                2: {
                    top: s.systemInfo.windowHeight - 105,
                    left: s.systemInfo.windowWidth - 302,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                3: {
                    top: s.systemInfo.windowHeight - 105,
                    left: 0,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                4: {
                    top: 0,
                    left: 0,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                5: {
                    top: s.systemInfo.windowHeight / 2 - 180,
                    left: s.systemInfo.windowWidth / 2 - 330,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                6: {
                    top: s.systemInfo.windowHeight / 2 - 180,
                    left: s.systemInfo.windowWidth / 2 + 330 - 72,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                7: {
                    top: s.systemInfo.windowHeight / 2 - 130,
                    left: s.systemInfo.windowWidth / 2 - 237.5,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                }
            };
            d.Instance.Send(a.PlatformManger_SetBannerPos, e);
        }
        GetNativeBanner() {}
        createNativeInterstitialAd1() {}
        createNativeOverAd() {}
        CreateNativeAd1() {}
        GetoppoGameBannerAD() {}
        GetoppoGamePortalAd() {}
        GetNativeInterstitialAd() {}
        GetNativeOverAd() {}
        subscribeAppMsg(e, t) {
            t && t();
        }
        addColorSign(e, t) {
            t && t();
        }
        createBlockAd(e) {}
        getBlockadL() {}
        getBlockadR() {}
        getBlockadC() {}
        getStorageSync(e) {
            return null != this.api && this.api.hasOwnProperty("getStorageSync") ? this.api.getStorageSync(e) : null;
        }
        setStorageSync(e, t) {
            null != this.api && this.api.hasOwnProperty("setStorageSync") && this.api.setStorageSync(e, t);
        }
        createCustomAd(e, t, i, s) {}
        vibrateShort(e) {
            null != this.api && this.api.hasOwnProperty("vibrateShort") && this.api.vibrateShort(e);
        }
        vibrateLong(e) {
            null != this.api && this.api.hasOwnProperty("vibrateLong") && this.api.vibrateLong(e);
        }
        createGridAd() {}
        openAwemeUserProfile() {}
        joinVoIPChat(e) {}
        exitVoIPChat(e) {}
        setClipboardData(e) {}
        updateVoIPChatMuteConfig(e) {}
        onVoIPChatMembersChanged(e) {}
        onVoIPChatStatusChanged(e) {}
        onVoIPChatSpeakersChanged(e) {}
        offVoIPChatMembersChanged(e) {}
        offVoIPChatSpeakersChanged(e) {}
        offVoIPChatStatusChanged(e) {}
        onVoIPChatInterrupted(e) {}
        offVoIPChatInterrupted(e) {}
        createGameClubButton() {}
        createBoxPortalAd() {}
        createBoxBannerAd() {}
        loadNativeAd1() {}
        creatNativeContainer() {
            this.nativeAd_AdImage = new Laya.Sprite(), this.nativeAd_AdImage.on(Laya.Event.CLICK, this, this.onClickNativeImage), 
            this.nativeAd_AdImage.zOrder = 9999, this.nativeAd_AdTip = new Laya.Sprite(), this.nativeAd_AdTip.x = 429, 
            this.nativeAd_AdTip.y = 193, this.nativeAd_AdTip.width = 83, this.nativeAd_AdTip.height = 31, 
            this.nativeAd_AdTip.loadImage("login/ad.png"), this.nativeAd_AdImage.addChild(this.nativeAd_AdTip), 
            this.nativeAd_Close = new Laya.Sprite(), this.nativeAd_Close.on(Laya.Event.CLICK, this, this.onClickNativeClose), 
            this.nativeAd_Close.loadImage("login/dislike_icon.png"), this.nativeAd_Close.x = 0, 
            this.nativeAd_Close.y = 0, this.nativeAd_Close.width = 45, this.nativeAd_Close.height = 45, 
            this.nativeAd_AdImage.addChild(this.nativeAd_Close);
        }
        onClickNativeImage() {}
        onClickNativeClose(e) {
            e.stopPropagation();
        }
        getTodayNativeIconErrClick() {
            var e = new Date();
            let t = "NativeIconErrClick" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate();
            return void 0 !== Laya.LocalStorage.getItem(t) && (this.todayNativeIconErrClickNum = Number(Laya.LocalStorage.getItem(t))), 
            console.log("今日原生icon误点次数: " + this.todayNativeIconErrClickNum), this.todayNativeIconErrClickNum;
        }
        addTodayNativeIconErrClick() {
            var e = new Date();
            let t = "NativeIconErrClick" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate();
            this.todayNativeIconErrClickNum++, Laya.LocalStorage.setItem(t, this.todayNativeIconErrClickNum + "");
        }
        getTodayNativeBigImageErrClick() {
            var e = new Date();
            let t = "NativeBigImageErrClick" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate();
            return void 0 !== Laya.LocalStorage.getItem(t) && (this.todayNativeBigImageErrClickNum = Number(Laya.LocalStorage.getItem(t))), 
            console.log("今日原生大图误点次数: " + this.todayNativeBigImageErrClickNum), this.todayNativeBigImageErrClickNum;
        }
        addTodayNativeBigImageErrClick() {
            var e = new Date();
            let t = "NativeBigImageErrClick" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate();
            this.todayNativeBigImageErrClickNum++, Laya.LocalStorage.setItem(t, this.todayNativeBigImageErrClickNum + "");
        }
        showSystemBanner(...e) {}
        hideSystemBanner(...e) {}
        loadNativeInterstitialAd1() {}
        hideKeyboard(e) {}
        onKeyboardComplete(e) {}
        onKeyboardConfirm(e) {}
        ShowNewNativeAd(...e) {}
        HideNewNativeAd(...e) {}
        Init(...e) {}
        GetAdControlParameters(e, t) {
            this.callback = t;
            let i = e + "?ts=" + new Date().getTime();
            if (console.log("ttad开始加载LoadADJson:" + i), s.isHuaweiMiniPlatform) Laya.loader.load(i, Laya.Handler.create(this, e => {
                this.OnComplateLoadAppJson(JSON.stringify(e));
            })); else {
                var n = new Laya.HttpRequest();
                n.http.timeout = 5e3, n.once(Laya.Event.COMPLETE, this, this.OnComplateLoadAppJson), 
                n.once(Laya.Event.ERROR, this, this.XhrErrorHandler), n.send(i, "", "get", "text");
            }
        }
        OnComplateLoadAppJson(e) {
            console.log("qddlogGetAdControlParameters:" + JSON.stringify(e));
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("GetAdControlParameters data error ", e);
            }
            if (t) {
                if (t.data.gameConfig && t.data.gameInfo) {
                    let e = Object.keys(this.ad_ID);
                    for (let i in e) {
                        let s = e[i];
                        void 0 !== t.data.gameConfig[s] && (this.ad_ID[s] = t.data.gameConfig[s]), void 0 !== t.data.gameInfo[s] && (this.ad_ID[s] = t.data.gameInfo[s]);
                    }
                    let i = Object.keys(this.ad_ControlParameter);
                    for (let e in i) {
                        let s = i[e];
                        void 0 !== t.data.gameConfig[s] && (this.ad_ControlParameter[s] = t.data.gameConfig[s]), 
                        void 0 !== t.data.gameInfo[s] && (this.ad_ControlParameter[s] = t.data.gameInfo[s]);
                    }
                }
                if (t.data.share) {
                    let e = Object.keys(this.share_data);
                    for (let i in e) {
                        let s = e[i];
                        void 0 !== t.data.share[s] && (this.share_data[s] = t.data.share[s]);
                    }
                }
                Laya.LocalStorage.setJSON("ad_ID", this.ad_ID), Laya.LocalStorage.setJSON("ad_ControlParameter", this.ad_ControlParameter), 
                Laya.LocalStorage.setJSON("share_data", this.share_data);
            } else this.getLocalStorageParameter();
            console.log("qddlog", "this.ad_ControlParameter", JSON.stringify(this.ad_ControlParameter)), 
            console.log("qddlog", "this.ad_ID", JSON.stringify(this.ad_ID)), console.log("qddlog", "this.share_data", JSON.stringify(this.share_data)), 
            this.callback && this.callback();
        }
        getLocalStorageParameter() {
            let e = Laya.LocalStorage.getJSON("ad_ID");
            e && (this.ad_ID = e);
            let t = Laya.LocalStorage.getJSON("ad_ControlParameter");
            t && (this.ad_ControlParameter = t);
            let i = Laya.LocalStorage.getJSON("share_data");
            i && (this.share_data = i);
        }
        XhrErrorHandler(e) {
            console.log("XhrErrorHandler:" + e), this.getLocalStorageParameter(), this.callback && this.callback();
        }
        getTodayShowSysInterNum() {
            var e = new Date();
            return Laya.LocalStorage.getItem("TodayShowSysInterNum" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate()) || Laya.LocalStorage.setItem("TodayShowSysInterNum" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate(), this.TodayShowSysInterNum + ""), 
            console.log("今日展示系统插屏次数: " + Laya.LocalStorage.getItem("TodayShowSysInterNum" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate())), 
            Number(Laya.LocalStorage.getItem("TodayShowSysInterNum" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate()));
        }
        addTodayShowSysInterNum() {
            var e = new Date();
            this.TodayShowSysInterNum++, Laya.LocalStorage.setItem("TodayShowSysInterNum" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate(), this.TodayShowSysInterNum + "");
        }
        getTodayNativeInsertErrClick() {
            var e = new Date();
            let t = "NativeInsertErrClick" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate();
            return void 0 !== Laya.LocalStorage.getItem(t) && (this.todayNativeInsertErrClickNum = Number(Laya.LocalStorage.getItem(t))), 
            console.log("今日原生插屏误点次数: " + this.todayNativeInsertErrClickNum), this.todayNativeInsertErrClickNum;
        }
        addTodayNativeInsertErrClick() {
            var e = new Date();
            let t = "NativeInsertErrClick" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate();
            this.todayNativeInsertErrClickNum++, Laya.LocalStorage.setItem(t, this.todayNativeInsertErrClickNum + "");
        }
        ShowInter() {}
    }
    class k {}
    !function(e) {
        e.bigImage = "nativeImageId", e.icon = "nativeIconId", e.insert = "nativeInsertId";
    }(I || (I = {}));
    class C {
        constructor() {
            this.systemBannerRefreshTime = 30, this.systemBannerSwitch = !0, this.systemBannerDelayTime = 0, 
            this.systemInsertSwitch = !0, this.systemInsertIntervalTime = 0, this.systemInsertProbability = 1, 
            this.systemInsertToNativeInsertNumber = 3, this.nativeInsertSwitch = !0, this.nativeInsertDelayTime = 0, 
            this.nativeInsertIntervalTime = 0, this.nativeInsertProbability = 1, this.insertVideoSwitch = !0, 
            this.insertVideoInterval = 120, this.nativeInsertStyle = "default", this.nativeInsertErrInterval = 60, 
            this.nativeInsertErrNumber = 2, this.nativeInsertErrProbability = 0, this.nativeImageSwitch = !0, 
            this.nativeImageRefreshTime = 15, this.nativeClickBtnSwitch = !0, this.nativeImageDelayTime = 0, 
            this.nativeInsertCloseBtnDelayTime = 0, this.nativeCountLimit = !1, this.nativeImageErrProbability = 0, 
            this.nativeImageErrInterval = 60, this.nativeImageErrNumber = 2, this.startNoNativeAdTime = 0, 
            this.startNoAdTime = 60, this.nativeIconSwitch = !0, this.nativeIconRefreshTime = 15, 
            this.nativeIconDelayTime = 0, this.nativeIconErrInterval = 60, this.nativeIconErrNumber = 2, 
            this.nativeIconErrProbability = 0, this.rewardedVideoSwitch = !0, this.rewardedvideoInterval = 1, 
            this.showVideoSwitch = !1, this.videoPlayConfirmProbability = !1, this.GameSplashSwitch = !0, 
            this.gameSplashInterval = 0, this.pushGameSwitch = !0, this.closeAdButtonDelayTime = 0, 
            this.addDesktopIconSwith = !0, this.authenticationSwitch = !0, this.privacyPolicySwitch = !0, 
            this.logSwitch = !0;
        }
    }
    class b {
        constructor() {
            this.AppId = "", this.appKey = "", this.AppSecret = "", this.mediaId = "", this.cpId = "", 
            this.gameAppkey = "", this.nativeImageId = "", this.nativeIconId = "", this.nativeInsertId = "", 
            this.gameBannerId = "", this.gamePortalId = "", this.SplashId = "", this.privacyPolicyCompany = "", 
            this.rewardedVideoId = "", this.systemBannerId = "", this.systemInsertId = "", this.insertVideoId = "", 
            this.appBoxId = "", this.blockId = "";
        }
    }
    class P {
        constructor() {
            this.imageUrl = "https://www.quduoduodata.top/ossfile/adminbase/gameShare/icon/1642558631289-517863f7-4bc2-417a.png", 
            this.title = "第一5V5团队公平竞技小游戏";
        }
    }
    !function(e) {
        e[e.Center_bottom = 1] = "Center_bottom", e[e.Right_bottom = 2] = "Right_bottom", 
        e[e.Left_top = 4] = "Left_top";
    }(v || (v = {}));
    class x extends D {
        constructor() {
            super(), this.api = Laya.Browser.window.tt, this.api.onTouchEnd(e => {
                this.isVideoShared && (this.isVideoShared = !1, d.Instance.Send(a.PlatformManger_wxShareVideo)), 
                this.isTTGuanZhu && (this.isTTGuanZhu = !1, this.api.openAwemeUserProfile ? this.api.openAwemeUserProfile() : this.api.showModal({
                    title: "提示",
                    content: "当前客户端版本过低，无法使用该功能，请升级客户端或关闭后重启更新。"
                })), this.isaddShortcuted && (this.isaddShortcuted = !1, d.Instance.Send(a.PlatformManger_ttaddShortcut, e => {
                    1 == e && (w.Instance.GetNetMsgData("c2s_ad_res_index_forever_add").Send({
                        type: 1
                    }), Laya.timer.once(100, this, () => {
                        w.Instance.GetNetMsgData("c2s_ad_res_index_forever").Send({
                            type: 1,
                            act: 2
                        });
                    }));
                }));
            });
        }
        writeFileSync(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("writeFileSync") && this.fsManager.writeFileSync(e.filePath, e.data, e.encoding);
        }
        readFileSync(e) {
            if (null != this.fsManager && this.fsManager.hasOwnProperty("readFileSync")) return this.fsManager.readFileSync(e.filePath, e.encoding);
        }
        openAwemeUserProfile() {
            this.isTTGuanZhu = !0;
        }
        onShareAppMessage(e) {
            this.api && this.api.onShareAppMessage(e => {
                console.log(e.channel);
                const t = {
                    templateId: "4g9fp9pft6qn3dqq6m",
                    extra: {},
                    query: "",
                    success(e) {
                        console.error("分享成功", e);
                    },
                    fail(e) {
                        console.error("分享失败", e);
                    }
                }, i = Object.assign({
                    channel: e.channel
                }, t);
                switch (e.channel) {
                  case "video":
                    i.extra = {
                        withVideoId: !0,
                        videoTopics: [ "乱斗我最牛" ],
                        hashtag_list: [ "乱斗我最牛" ],
                        video_title: "极限走位，疯狂超神"
                    };
                }
                return i;
            });
        }
        getLoginCode(e) {
            this.api.login({
                force: !1,
                success: t => {
                    if (console.log("login success", t), s.isTTPlatform && (s.isTTNMLogin = !1), null != e && "" != t.code && null != t.code) {
                        var i = t.code;
                        e(i, !0);
                    }
                    t.code ? console.log("登录成功！", t.code) : console.log("登录失败！", t.errMsg), s.isTTPlatform && (null == e || "" != t.code && null != t.code || "" == t.anonymousCode || null == t.anonymousCode || (s.isTTNMLogin = !0, 
                    e(t.anonymousCode, !0, {
                        avatarUrl: "res/tt/tthead.png",
                        nickName: "游客",
                        encryptedData: "",
                        iv: ""
                    }), console.log("TT匿名登录" + t.anonymousCode)));
                },
                fail: t => {
                    console.log("登录失败！重试登录", t), Laya.timer.once(100, this, this.getLoginCode, [ e ]);
                },
                complete: function(e) {
                    console.log("login complete", e);
                }
            });
        }
        createMoreGamesButton() {
            return null != this.api && this.api.hasOwnProperty("createMoreGamesButton") ? this.api.createMoreGamesButton({
                type: "image",
                image: "res/tt/moregame.png",
                style: {
                    left: s.systemInfo.windowWidth - Math.floor(110 / s.systemInfo.pixelRatio) - 10,
                    top: s.systemInfo.windowHeight - Math.floor(124 / s.systemInfo.pixelRatio) - 10,
                    width: Math.floor(110 / s.systemInfo.pixelRatio),
                    height: Math.floor(124 / s.systemInfo.pixelRatio),
                    lineHeight: 40,
                    backgroundColor: "#ff0000",
                    textColor: "#ffffff",
                    textAlign: "center",
                    fontSize: 16,
                    borderRadius: 0,
                    borderWidth: 0,
                    borderColor: "#ff0000"
                },
                appLaunchOptions: [ {
                    appId: "ttd3fba5464cd146aa",
                    query: "foo=bar&baz=qux",
                    extraData: {}
                } ],
                onNavigateToMiniGame(e) {
                    console.log("跳转其他小游戏", e);
                }
            }) : null;
        }
        setPreferredFramesPerSecond(e) {}
        createUserInfoButton(e) {
            return this.api && this.api.authorize({
                scope: "scope.userInfo",
                success(e) {
                    console.log("authorize", e.scope), d.Instance.Send(a.PlatformManger_GetWXUserInfo);
                },
                fail(e) {
                    console.log("authorize run fail", e);
                },
                complete(e) {
                    console.log("authorize run done", e);
                }
            });
        }
        openSetting() {
            return this.api && this.api.openSetting({
                success(e) {
                    console.log("openSetting", e), e.authSetting["scope.userInfo"] && d.Instance.Send(a.PlatformManger_GetWXUserInfo);
                },
                fail(e) {
                    console.log("openSetting run fail", e);
                },
                complete(e) {
                    console.log("openSetting run done", e);
                }
            });
        }
        getGameRecorderManager() {
            return null == this.api ? null : this.api.getGameRecorderManager();
        }
        navigateToMiniProgram(e) {}
        createInterstitialAd(e) {
            return null != this.api && this.api.hasOwnProperty("createInterstitialAd") ? this.api.createInterstitialAd(e) : null;
        }
        loadSubpackage(e) {
            return null != this.api && this.api.hasOwnProperty("loadSubpackage") ? this.api.loadSubpackage(e) : (e.fail(), 
            null);
        }
        hasloadSubpackage() {
            return null != this.api && null != this.api.loadSubpackage;
        }
        getStorageSync(e) {
            return null != this.api && this.api.hasOwnProperty("getStorageSync") ? this.api.getStorageSync(e) : null;
        }
        setStorageSync(e, t) {
            null != this.api && this.api.hasOwnProperty("setStorageSync") && this.api.setStorageSync(e, t);
        }
        setClipboardData(e) {
            if (null != this.api && this.api.hasOwnProperty("setClipboardData")) return this.api.setClipboardData({
                data: e,
                success(e) {
                    d.Instance.Send(a.UIGameTipsModel_SetTips, "复制成功!", 1e3);
                },
                fail(e) {
                    d.Instance.Send(a.UIGameTipsModel_SetTips, "复制失败!", 1e3);
                }
            });
        }
    }
    class T extends D {
        constructor() {
            super(), this.api = Laya.Browser.window.qq;
        }
        getLoginCode(e) {
            this.api.login({
                force: !1,
                success: t => {
                    if (console.log("login success", t), null != e && null != t.code) {
                        var i = t.code;
                        s.isWXPlatform && !s.isWXNMLogin ? this.api.getUserInfo({
                            success: t => {
                                e(i, !0, {
                                    avatarUrl: t.avatarUrl,
                                    nickName: t.nickName,
                                    encryptedData: t.encryptedData,
                                    iv: t.iv
                                });
                            },
                            fail: t => {
                                e(i, !0);
                            }
                        }) : e(i, !0);
                    }
                    t.code ? console.log("登录成功！", t.code) : console.log("登录失败！", t.errMsg);
                },
                fail: t => {
                    console.log("登录失败！重试登录", t), Laya.timer.once(100, this, this.getLoginCode, [ e ]);
                },
                complete: function(e) {
                    console.log("login complete", e);
                }
            });
        }
        getBlockadL() {
            return this.blockadL = this.createBlockAd({
                adUnitId: "7192ad1702507bd3a0259827fb202392",
                size: 4,
                orientation: "vertical",
                style: {
                    left: 40,
                    top: 100
                }
            }), this.blockadL && this.blockadL.onLoad(function() {
                console.log("blockadL.onLoad Show" + D.Instance.blockadLShow), D.Instance.blockadLShow || D.Instance.blockadL.destroy();
            }), this.blockadL && this.blockadL.onResize(function(e) {
                console.log("blockadL onResize realWidth " + e.width + " realHeight " + e.height), 
                D.Instance.blockadL.style.left = 40 + e.width, D.Instance.blockadL.style.top = s.systemInfo.windowHeight * D.Instance.getPixelRatio() - e.height - 100;
            }), this.blockadL && this.blockadL.onError(function(e) {
                console.log("blockadL onError" + e.errMsg + " code " + e.errCode);
            }), this.blockadL;
        }
        getBlockadR() {
            return this.blockadR = this.createBlockAd({
                adUnitId: "f0e3cd39e83aa1d7809a7b8dc161af5f",
                size: 4,
                orientation: "vertical",
                style: {
                    left: s.systemInfo.windowWidth - 100,
                    top: 100
                }
            }), this.blockadR && this.blockadR.onLoad(function() {
                console.log("blockadR.onLoad Show" + D.Instance.blockadRShow), D.Instance.blockadRShow || D.Instance.blockadR.destroy();
            }), this.blockadR && this.blockadR.onResize(function(e) {
                D.Instance.blockadRShow || D.Instance.blockadR.destroy(), console.log("blockadR onResize realWidth " + e.width + " realHeight " + e.height), 
                D.Instance.blockadR.style.left = s.systemInfo.windowWidth * D.Instance.getPixelRatio() - e.width - 120, 
                D.Instance.blockadR.style.top = s.systemInfo.windowHeight * D.Instance.getPixelRatio() - e.height - 100;
            }), this.blockadR && this.blockadR.onError(function(e) {
                console.log("blockadR onError" + e.errMsg + " code " + e.errCode);
            }), this.blockadR;
        }
        getBlockadC() {
            return this.blockadC = this.createBlockAd({
                adUnitId: "451ab780371332f05401ff0f51e51027",
                size: 5,
                orientation: "landscape",
                style: {
                    left: 40,
                    top: s.systemInfo.windowHeight * D.Instance.getPixelRatio() - 83 * D.Instance.getPixelRatio()
                }
            }), this.blockadC && this.blockadC.onLoad(function() {
                console.log("blockadC.onLoad Show" + D.Instance.blockadCShow), D.Instance.blockadCShow || D.Instance.blockadC.destroy();
            }), this.blockadC && this.blockadC.onResize(function(e) {
                console.log("blockadC onResize realWidth " + e.width + " realHeight " + e.height);
            }), this.blockadC && this.blockadC.onError(function(e) {
                console.log("blockadC onError" + e.errMsg + " code " + e.errCode);
            }), this.blockadC;
        }
        getNMUserInfo(e) {
            this.cspsdk.getDyb().getDybUserInfo({}, !1, function(t) {
                console.log(">>>>getNMUserInfo:" + JSON.stringify(t));
                var i = {
                    openid: t.data.user.openid,
                    timestamp: t.data.user.timestamp,
                    sign: t.data.user.sign
                };
                e.success({
                    userInfo: i
                });
            });
        }
        getUserInfo(e) {
            if (null != this.cspsdk) {
                console.log(">>>>this.cspsdk getUserInfo");
                this.cspsdk.getDyb().getDybUserInfo({
                    imageUrl: "https://csdjres.haowan823.cn/zwzl/rescdn_/ui_/touxiang_fangyutahong.png",
                    left: 0,
                    top: 0,
                    width: 10,
                    height: 10
                }, !0, function(t) {
                    console.log(">>>>getDybUserInfo:" + JSON.stringify(t));
                    var i = {
                        openid: t.data.user.openid,
                        nickName: t.data.user.nickname,
                        avatarUrl: t.data.user.avatarUrl,
                        country: t.data.user.country,
                        province: t.data.user.province,
                        city: t.data.user.city,
                        gender: t.data.user.gender,
                        timestamp: t.data.user.timestamp,
                        sign: t.data.user.sign
                    };
                    e.success({
                        userInfo: i
                    });
                });
            } else this.api && this.api.getUserInfo(e);
        }
        onShareAppMessage(e) {
            null != this.cspsdk ? this.cspsdk.getDyb().onshare(e, function(e) {}) : this.api && this.api.onShareAppMessage(e);
        }
        shareAppMessage(e) {
            null != this.cspsdk ? this.cspsdk.getDyb().share(e, function(e) {}) : this.api && this.api.shareAppMessage(e);
        }
        getUpdateManager() {
            return null != this.api && this.api.hasOwnProperty("getUpdateManager") ? super.getUpdateManager() : null;
        }
        getNetworkType(e) {
            return null != this.api && this.api.hasOwnProperty("getNetworkType") ? super.getNetworkType(e) : null;
        }
        onNetworkStatusChange(e) {
            return null != this.api && this.api.hasOwnProperty("onNetworkStatusChange") ? super.onNetworkStatusChange(e) : null;
        }
        createUserInfoButton(e) {
            return null != this.api && this.api.hasOwnProperty("createUserInfoButton") ? super.createUserInfoButton(e) : null;
        }
        createBannerAd(e) {
            return null != this.api && this.api.hasOwnProperty("createBannerAd") ? super.createBannerAd(e) : null;
        }
        createRewardedVideoAd(e, t) {
            if (null != this.cspsdk) {
                var i = {
                    adUnitId: e.adUnitId,
                    state: "load",
                    object: t
                };
                return this.cspsdk.getDyb().createVideoAd(i, function(e) {
                    console.log("createVideoAd: 1 " + JSON.stringify(e)), t = e.videoAd;
                }), null == t && (console.log("createVideoAd: 2 createRewardedVideoAd"), null != this.api && this.api.hasOwnProperty("createRewardedVideoAd")) ? super.createRewardedVideoAd(e) : t;
            }
            return null != this.api && this.api.hasOwnProperty("createRewardedVideoAd") ? super.createRewardedVideoAd(e) : null;
        }
        createInterstitialAd(e) {
            return null != this.api && this.api.hasOwnProperty("createInterstitialAd") ? this.api.createInterstitialAd(e) : null;
        }
        navigateToMiniProgram(e) {
            return null != this.api && this.api.hasOwnProperty("navigateToMiniProgram") ? super.navigateToMiniProgram(e) : null;
        }
        openCustomerServiceConversation(e) {
            null != this.api && this.api.hasOwnProperty("openCustomerServiceConversation") && this.api.openCustomerServiceConversation(e);
        }
        createAppBox(e) {
            null != this.api && this.api.hasOwnProperty("createAppBox") && (this.appbox = this.api.createAppBox(e));
        }
        createBlockAd(e) {
            if (null != this.api && this.api.hasOwnProperty("createBlockAd")) return this.api.createBlockAd(e);
        }
        loadSubpackage(e) {
            return null != this.api && this.api.hasOwnProperty("loadSubpackage") ? this.api.loadSubpackage(e) : (e.fail(), 
            null);
        }
        hasloadSubpackage() {
            return null != this.api && null != this.api.loadSubpackage;
        }
        subscribeAppMsg(e, t) {
            null != this.api && this.api.hasOwnProperty("subscribeAppMsg") ? this.api.subscribeAppMsg({
                subscribe: !0,
                success(t) {
                    console.log("----subscribeAppMsg----success", t), e && e();
                },
                fail(e) {
                    console.log("----subscribeAppMsg----fail", e), t && t();
                }
            }) : t();
        }
        addColorSign(e, t) {
            null != this.api && this.api.hasOwnProperty("addColorSign") ? this.api.addColorSign({
                success(t) {
                    console.log("----addColorSign----success", t), e && e();
                },
                fail(e) {
                    console.log("----addColorSign----fail", e), t && t();
                },
                complete(e) {
                    console.log("----addColorSign----complete", e);
                }
            }) : t();
        }
    }
    class U extends D {
        constructor() {
            super(), this.api = Laya.Browser.window.wx, this.InitAndRegMsg_App();
        }
        createBannerAd(e) {
            return new L();
        }
        createRewardedVideoAd(e) {
            return console.log("layattad new"), new O();
        }
        getLoginCode(e) {
            if (!Laya.Browser.onAndroid || s.isH5Platform) {
                if (!window.localStorage) return console.log("浏览器不支持localstorage"), void (null != e && e(0, !1));
                var t = window.localStorage, i = t.getItem("playerID");
                null == i || "" == i ? (i = this.GetRandomPlayerID(), t.setItem("playerID", i), 
                console.log("GetPlayerID setItem " + i), null != e && e(i, !1)) : null != e && e(i, !1);
            } else {
                if (null != s.loginToken) return void e(s.loginToken);
                this.AppLogincallBack = e;
                var n = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != n && n.call("doLogin");
            }
        }
        InitAndRegMsg_App() {
            if (s.isAppPlatform && Laya.Browser.window.PlatformClass) {
                console.log("注册回调 appLoginCallBack");
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && (e.callWithBack(function(e) {
                    if (console.log("登录回调 code" + e), 1 == e) d.Instance.Send(a.PlatformManger_GetAppUserInfo); else if (s.is233Platform) {
                        var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                        null != t && t.call("doLogin");
                    }
                    s.isApplogined = 1 == e;
                }, "appLoginCallBack"), e.callWithBack(function(e) {
                    console.log("ttadNativeOne回调 code" + e);
                    let t = JSON.parse(e), i = {
                        adId: "",
                        title: "",
                        desc: "",
                        icon: "",
                        imgUrlList: [],
                        logoUrl: "",
                        clickBtnTxt: "",
                        creativeType: "",
                        interactionType: ""
                    }, s = t.url.replace(".short.webp", "");
                    i.imgUrlList = [ s ], i.icon = s, i.logoUrl = s, i.title = t.title, console.log(">>>原生广告1加载 icon" + i.icon + " " + i.title), 
                    D.Instance.nativeAdData.push({
                        nativeAd: new N(),
                        data: i
                    });
                }, "onNativeOneLoad"), e.callWithBack(function(e) {
                    console.log("ttadNativeTwo回调 code" + e);
                    let t = JSON.parse(e), i = {
                        adId: "",
                        title: "",
                        desc: "",
                        icon: "",
                        imgUrlList: [],
                        logoUrl: "",
                        clickBtnTxt: "",
                        creativeType: "",
                        interactionType: ""
                    }, s = t.url.replace(".short.webp", "");
                    i.imgUrlList = [ s ], i.icon = s, i.logoUrl = s, i.title = t.title, console.log(">>>原生广告2加载 icon" + i.icon + " " + i.title), 
                    D.Instance.nativeInterstitialAdData.push({
                        nativeAd: new M(),
                        data: i
                    });
                }, "onNativeTwoLoad"), e.callWithBack(function(e) {
                    console.log("ttadNativeThree回调 code" + e);
                    let t = JSON.parse(e), i = {
                        adId: "",
                        title: "",
                        desc: "",
                        icon: "",
                        imgUrlList: [],
                        logoUrl: "",
                        clickBtnTxt: "",
                        creativeType: "",
                        interactionType: ""
                    }, s = t.url.replace(".short.webp", "");
                    i.imgUrlList = [ s ], i.icon = s, i.logoUrl = s, i.title = t.title, console.log(">>>原生广告3加载 icon" + i.icon + " " + i.title), 
                    D.Instance.nativeOverAdData.push({
                        nativeAd: new A(),
                        data: i
                    });
                }, "onNativeThreeLoad"), e.callWithBack(function(e) {
                    console.log("ttad显示原生回调 code" + e), d.Instance.Send(a.PlatformManger_NativeCallback, e);
                }, "showNativeCallback"), e.callWithBack(function(e) {
                    console.log("ttad显示auth回调 code" + e), d.Instance.Send(a.UIAuth_Open);
                }, "AuthOpenCallback"), e.callWithBack(function(e) {
                    console.log("ttad显示HideReg回调 code" + e), d.Instance.Send(a.UIAuth_HideReg);
                }, "AuthHideRegCallback"), e.callWithBack(function(e) {
                    console.log("ttad显示tips回调 code" + e), d.Instance.Send(a.UIGameTipsModel_SetTips, e, 1500);
                }, "AuthTipsCallback"), e.callWithBack(function(e) {
                    console.log("ttad显示forceVideo回调 code" + e), d.Instance.Send(a.PlatformManger_ForceVideo);
                }, "forceVideo"), e.callWithBack(function(e) {
                    console.log("ttad显ChangeAccount回调 code" + e), d.Instance.Send(a.PlatformManger_ChangeAccount);
                }, "ChangeAccount"), e.callWithBack(function(e) {
                    console.log("ttad显AdDislike回调 code" + e), d.Instance.Send(a.PlatformManger_AdDislike);
                }, "AdDislike"), e.callWithBack(function(e) {
                    console.log("ttad显showInterCallback回调 code" + e), d.Instance.Send(a.PlatformManger_ShowInter);
                }, "showInterCallback"), e.callWithBack(function(e) {
                    console.log("ttad显allScreenVideoCallback回调 code" + e), d.Instance.Send(a.PlatformManger_allScreenVideo);
                }, "allScreenVideoCallback"), e.callWithBack(function(e) {
                    console.log("ttad显PlatformManger_setFixedModeSCALE_SHOWALL回调 code" + e), d.Instance.Send(a.PlatformManger_setFixedModeSCALE_SHOWALL, e);
                }, "PlatformManger_setFixedModeSCALE_SHOWALL"), e.callWithBack(function(e) {
                    console.log("ttad1显setisInterVideoShowingcode回调 code" + e), D.Instance.isInterVideoShowing = 1 == e;
                }, "setisInterVideoShowingcode"), e.callWithBack(function(e) {
                    console.log("Main_233BannerCheck code" + e), 1 == e && d.Instance.Send(a.Main_233BannerCheck);
                }, "Main_233BannerCheck"), e.callWithBack(function(e) {
                    console.log("appInterShown code" + e), d.Instance.Send(a.PlatformManger_APPInterShown);
                }, "appInterShown"), e.callWithBack(function(e) {
                    console.log("onAppInterstitialadClose code" + e), d.Instance.Send(a.PlatformManger_onAppInterstitialadClose);
                }, "onAppInterstitialadClose"));
            }
        }
        GetNativeInterstitialAd() {
            var e;
            if (D.Instance.nativeInterstitialAdData.length > 0) e = D.Instance.nativeInterstitialAdData.shift(); else {
                var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != t && (t.call("LoadNativeTwo"), console.log("ttad LoadNativeTwo 0"));
            }
            return console.log("ttad GetNativeInterstitialAd:" + e), e;
        }
        GetNativeBanner() {
            var e;
            if (D.Instance.nativeAdData.length > 0) e = D.Instance.nativeAdData.shift(); else {
                var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != t && t.call("LoadNativeOne");
            }
            return console.log("ttad GetNativeBanner:" + e), e;
        }
        GetNativeOverAd() {
            var e;
            if (D.Instance.nativeOverAdData.length > 0) e = D.Instance.nativeOverAdData.shift(); else {
                var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != t && t.call("LoadNativeThree");
            }
            return console.log("ttad GetNativeOverAd:" + e), e;
        }
    }
    class L {
        constructor() {
            this.style = {
                top: 0,
                left: 0,
                realHeight: 200
            };
        }
        show() {}
        hide() {}
        onError(e) {}
        onLoad(e) {
            e && e();
        }
    }
    class N {
        reportAdShow(e) {
            var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != t && t.call("reportAdShowOne");
        }
        load() {
            var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != e && e.call("LoadNativeOne");
        }
        reportAdClick() {
            var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != e && e.call("reportAdClickOne");
        }
    }
    class M {
        reportAdShow(e) {
            var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != t && t.call("reportAdShowTwo");
        }
        load() {
            var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != e && (e.call("LoadNativeTwo"), console.log("ttad LoadNativeTwo 1"));
        }
        reportAdClick() {
            var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != e && e.call("reportAdClickTwo");
        }
    }
    class A {
        reportAdShow(e) {
            var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != t && t.call("reportAdShowThree");
        }
        load() {
            var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != e && (e.call("LoadNativeThree"), console.log("ttad LoadNativeThree"));
        }
        reportAdClick() {
            var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != e && e.call("reportAdClickThree");
        }
    }
    class O {
        load() {}
        show() {
            if (console.log("layattad show"), null != Laya.Browser.window.PlatformClass) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && (O.callState = !0, O.init || (O.init = !0, e.callWithBack(function(e) {
                    O.callState && null != O.errorCall && (console.log("视频播放错误" + e), O.callState = !1, 
                    O.errorCall(e, 0));
                }, "InciteVideoeErrorCallback"), e.callWithBack(function(e) {
                    O.callState && null != O.closeCall && (console.log("视频播放完成 code" + e), O.callState = !1, 
                    O.closeCall("0" == e ? {
                        isEnded: !1
                    } : {
                        isEnded: !0
                    }));
                }, "InciteVideoeCloseCallback")), e.call("loadVideoAd"));
            } else null != O.errorCall && O.errorCall();
            return new Laya.Browser.window.Promise(() => {
                if (null == Laya.Browser.window.PlatformClass) throw 0;
            });
        }
        onError(e) {
            console.log("layattad onError"), O.errorCall = e;
        }
        onClose(e) {
            console.log("layattad onClose"), O.closeCall = e;
        }
    }
    O.callState = !1, O.init = !1;
    class E {
        constructor() {
            this.token = "";
        }
        static get Instance() {
            return null == E.instance && (E.instance = new E()), E.instance;
        }
        init(e, t) {
            this.api = e;
        }
        SaveKey(e, t) {
            if (e = this.token + e, s.onMiniGame) console.log("SaveKey " + e + " data " + t), 
            this.api.setStorageSync(e, t); else if (s.is4399H5Platform) Laya.LocalStorage.setItem(e, t); else {
                var i = window.localStorage;
                if (!i) return void console.log("浏览器不支持localstorage");
                i.setItem(e, t);
            }
        }
        GetKey(e) {
            var t;
            if (e = this.token + e, s.onMiniGame) t = this.api.getStorageSync(e), console.log("GetKey " + e + " data " + t); else if (s.is4399H5Platform) Laya.LocalStorage.getItem(e); else {
                var i = window.localStorage;
                if (!i) return console.log("浏览器不支持localstorage"), "";
                t = i.getItem(e);
            }
            return t;
        }
        ContainKey(e) {
            var t;
            if (e = this.token + e, s.onMiniGame) return t = this.api.getStorageSync(e), console.log("ContainKey wx.getStorageSync(key) " + e + " data " + (null != t)), 
            "" != t;
            if (s.is4399H5Platform) Laya.LocalStorage.getItem(e); else {
                var i = window.localStorage;
                if (!i) return void console.log("浏览器不支持localstorage");
                t = i.getItem(e);
            }
            return null != t;
        }
        ClearData() {
            if (console.log("ClearData"), Laya.Browser.onWeiXin) console.log("removeStorageSync"), 
            Laya.Browser.window.wx.clearStorageSync(); else if (s.is4399H5Platform) Laya.LocalStorage.clear(), 
            Laya.LocalStorage.setItem("playerID", this.token); else {
                var e = window.localStorage;
                e.clear(), e.setItem("playerID", this.token);
            }
        }
        ClearKey(e) {
            if (Laya.Browser.onWeiXin) Laya.Browser.window.wx.removeStorageSync(e); else if (s.is4399H5Platform) Laya.LocalStorage.removeItem(e); else {
                window.localStorage.removeItem(e);
            }
        }
    }
    E.instance = null;
    class G {
        constructor() {
            this.clickAppID = null;
        }
        static get Instance() {
            return null == G.instance && (G.instance = new G()), G.instance;
        }
        initClickAPPID() {
            if (null == this.clickAppID) {
                this.clickAppID = [];
                var e = new Date(), t = E.Instance.GetKey("clickApp_" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate());
                null != t && (this.clickAppID = t.split(",")), console.log("initClickAPPID " + t);
            }
        }
        NoContainClickAppID(e) {
            return -1 == this.clickAppID.indexOf(e);
        }
        GetNoClickAppIDList(e) {
            var t = [];
            if (null == e || 0 == e.length) return t;
            for (var i = 0; i < e.length; i++) {
                var s = e[i];
                G.Instance.NoContainClickAppID(s.otherAppId) && t.push(s);
            }
            return t;
        }
        ListSortByClick(e) {
            return e.length > 1 && null != this.clickAppID && this.clickAppID.length > 0 && e.sort((e, t) => {
                return (-1 == this.clickAppID.indexOf(e.otherAppId) ? 0 : 1) - (-1 == this.clickAppID.indexOf(t.otherAppId) ? 0 : 1);
            }), e;
        }
        AddClickApp(e) {
            if (null == this.clickAppID && this.initClickAPPID(), -1 == this.clickAppID.indexOf(e.otherAppId)) {
                this.clickAppID.push(e.otherAppId);
                for (var t = "", i = 0; i < this.clickAppID.length; i++) {
                    t += this.clickAppID[i] + ",";
                }
                var s = new Date();
                E.Instance.SaveKey("clickApp_" + s.getFullYear() + "_" + (s.getMonth() + 1) + "_" + s.getDate(), t);
            }
        }
    }
    G.instance = null;
    var R = Laya.HttpRequest;
    class B {
        constructor() {
            this.isAddVideoBList = !1, this.isGetLoginGameData = !1, this.sdkInitInfo = !1, 
            this.allAdvButData = [], this.advButData = [], this.advImageButData = [], this.adVideoData = [], 
            this.ylADVideoData_B = [], this.finishBattle = 0, this.addBListStart = 4, this.adGotoGameData = [], 
            this.adGotoGameIndex = 0, this.adImageData = null, this.advImageIndex = 0, this.advMoreButData = null, 
            this.adLoginGameData = null, this.OppoADData = {
                platformdata: {
                    appid: "30459551",
                    appkey: "4yzlZvra4bokwO8gksSWk8Kgc",
                    appsercet: "E55e511aaEcF70F56186C22AC464f41e",
                    cpid: ""
                },
                adddata: {
                    appid: "30459551",
                    bannerid: [ "281321" ],
                    gamedesc: "",
                    interid: [ "12345" ],
                    mediaid: [ "Oppo有其他平台没有" ],
                    nativeid: [ "305770", "305768" ],
                    splashid: [ "281322" ],
                    videoid: [ "281328" ]
                },
                haveAd: !0
            }, this.VivoADData = {
                platformdata: {
                    appid: "105463774",
                    appkey: "73df2a3b340f4dfb6d05604b62418fd5",
                    appsercet: "c4222139d90db7b39f86929627b6fce5",
                    cpid: ""
                },
                adddata: {
                    appid: "105463774",
                    bannerid: [ "c920109ba27649c1a73ed5b5e85663a3" ],
                    gamedesc: "",
                    interid: [ "4b861018f8424e38ba27376a980c9a22" ],
                    mediaid: [ "Oppo有其他平台没有" ],
                    nativeid: [ "7222160ada37431bb75a81e06b76a807", "b03215c4e7ca4f099c9ff825854a98a0" ],
                    splashid: [ "" ],
                    videoid: [ "531d83fda31c47e0830468b002ffaa60" ]
                },
                haveAd: !0
            }, this.OppoGameCenterADData = {
                platformdata: {
                    appid: "30478345",
                    appkey: "d26a12448c3841b5a31f9a6432a35731",
                    appsercet: "3787d1c6565c4451ba874c81f8447575",
                    cpid: ""
                },
                adddata: {
                    appid: "30478345",
                    bannerid: [ "294609" ],
                    gamedesc: "",
                    interid: [ "294610", "307634" ],
                    mediaid: [ "Oppo有其他平台没有" ],
                    nativeid: [ "294615", "294614", "310425" ],
                    splashid: [ "294613" ],
                    videoid: [ "294616" ]
                },
                haveAd: !0
            }, this.quduoduoOppoAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.lm.xxwzdld.nearme.gamecenter", 
            this.quduoduoOppoAddataUrl = "http://quduoduodata.top/Game/getad?type=h5&platform=Oppo&packagename=com.lm.xxwzdld.nearme.gamecenter", 
            this.quduoduoOppoAdHutuiUrl = "http://quduoduodata.top/Game/getdata?platform=Oppo&packagename=com.lm.xxwzdld.nearme.gamecenter", 
            this.quduoduoVivoAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.lm.xxwzdld.vivominigame", 
            this.quduoduoVivoAddataUrl = "http://quduoduodata.top/Game/getad?type=h5&platform=Oppo&packagename=com.lm.xxwzdld.vivominigame", 
            this.quduoduoOppoGameCenterAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.qdd.xxwzdld.nearme.gamecenter", 
            this.quduoduoOppoGameCenterAddataUrl = "http://quduoduodata.top/Game/getad?type=h5&platform=Oppo&packagename=com.qdd.xxwzdld.nearme.gamecenter", 
            this.quduoduoDYVIVOAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.dy.xxwzdld.vivo", 
            this.quduoduoTOPONAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.xxwzdld.hykb", 
            this.quduoduoXiaoMiAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.xxwzdld.mi", 
            this.quduoduoXiaoMiAdCtrJson = "https://www.quduoduodata.top/ossfile/adminbase/configList/xiaoMiApp/02ec0531435a5fb4166b2278ccb25362.json", 
            this.quduoduo4399AdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.qddxxwzdld.m4399", 
            this.quduoduoHuaweiAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.xxwzdld.huawei", 
            this.quduoduoBaiduAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.xxwzdld.baidu", 
            this.quduoduoTapTapAdCtrUrl = "http://quduoduodata.top/Nativegame/Get?name=com.xxwzdld.qudd", 
            this.curTime = 1, this.openSceneList = [], this.localmlkg = !1, this.curTime = new Date().getTime();
        }
        static get Instance() {
            return null == B.instance && (B.instance = new B()), B.instance;
        }
        init() {
            s.isWXPlatform ? this.init_WX() : s.isOppoPlatform ? this.init_Oppo() : s.isVivoPlatform ? this.init_Vivo() : s.isOppoGameCenterPlatform ? this.init_oppoGameCenter() : s.isDYVivoPlatform ? this.init_VivoDy() : s.isTopOnPlatform ? this.init_TopOn() : s.isTapTapPlatform ? this.init_TapTap() : s.isXiaoMiPlatform ? this.init_XiaoMi() : s.is4399Platform ? this.init_4399() : s.isHuaweiPlatform ? this.init_huawei() : s.isBaiduPlatform && this.init_baidu();
        }
        init_WX() {
            if (this.finishBattle = 0, null == this.ylsdk) {
                var e = Laya.Browser.window.wx.getLaunchOptionsSync();
                this.ylsdk = Laya.Browser.window.require("js/yl_sdk.js"), this.ylsdk.InitSDK2(s.appid, e, "20201201328907", "20201202867934"), 
                this.sdkInitInfo = !1, this.isGetLoginGameData = !0, this.SetAdvButData_WX();
            }
        }
        init_Oppo() {
            s.oppoNativeDelay = 0, this.GetAdData(this.quduoduoOppoAddataUrl), this.GetAdctr(this.quduoduoOppoAdCtrUrl), 
            this.GetAdHutui(this.quduoduoOppoAdHutuiUrl);
        }
        init_Vivo() {
            s.oppoNativeDelay = 0, this.GetAdData(this.quduoduoVivoAddataUrl), this.GetAdctr(this.quduoduoVivoAdCtrUrl);
        }
        init_oppoGameCenter() {
            s.oppoNativeDelay = 0, this.GetAdData(this.quduoduoOppoGameCenterAddataUrl), this.GetAdctr(this.quduoduoOppoGameCenterAdCtrUrl);
        }
        init_VivoDy() {
            s.oppoNativeDelay = 0, this.GetAdctr(this.quduoduoDYVIVOAdCtrUrl);
        }
        init_TopOn() {
            s.oppoNativeDelay = 0, this.GetAdctr(this.quduoduoTOPONAdCtrUrl);
        }
        init_XiaoMi() {
            s.oppoNativeDelay = 0, this.GetAdSwitch(this.quduoduoXiaoMiAdCtrJson);
        }
        init_4399() {
            s.oppoNativeDelay = 0, this.GetAdctr(this.quduoduo4399AdCtrUrl);
        }
        init_huawei() {
            s.oppoNativeDelay = 0, this.GetAdctr(this.quduoduoHuaweiAdCtrUrl);
        }
        init_baidu() {
            s.oppoNativeDelay = 0, this.GetAdctr(this.quduoduoBaiduAdCtrUrl);
        }
        init_TapTap() {
            s.oppoNativeDelay = 0, this.GetAdctr(this.quduoduoTapTapAdCtrUrl);
        }
        GetAdctr(e) {
            let t = e + "&ts=" + new Date().getTime();
            console.log("ttad开始加载LoadADJson:" + t);
            var i = new R();
            i.http.timeout = 5e3, i.once(Laya.Event.COMPLETE, this, this.OnComplateLoadAppJson), 
            i.once(Laya.Event.ERROR, this, this.XhrErrorHandler), i.on(Laya.Event.PROGRESS, this, this.XhrProcessHandler), 
            i.send(t, "", "get", "text");
        }
        OnComplateLoadAppJson(e) {
            console.log("ttad adctr:" + e);
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("OnComplateLoadHutui.json error ", e);
            }
            if (t) this.OppoADctr = t, Laya.LocalStorage.setJSON("OppoAdctr", t); else {
                let e = Laya.LocalStorage.getJSON("OppoAdctr");
                this.OppoADctr = e || {
                    aderrorrate: .2,
                    aderrormaxcount: 2,
                    addelay: .5,
                    adcd: 0,
                    intermax: 99999,
                    isOnline: 1,
                    nativemax: 0,
                    isaggreation: 0
                };
            }
            s.oppoNativeDelay = 1e3 * Number(this.OppoADctr.addelay), s.oppoNativeAdcd = 1e3 * Number(this.OppoADctr.adcd), 
            s.cpdelay = s.oppoNativeDelay, s.isOppoPlatform || s.isVivoPlatform || s.isOppoGameCenterPlatform ? s.isOnline = 1 == this.OppoADctr.isOnline : s.isOnline = !0, 
            (s.isOppoGameCenterPlatform || s.isOppoPlatform) && d.Instance.Send(a.PlatformManger_InitAndRegMsg_AppOppoGameCenter);
        }
        GetAdHutui(e) {
            console.log("开始加载GetAdHutui");
            var t = new R();
            t.http.timeout = 5e3, t.once(Laya.Event.COMPLETE, this, this.OnComplateLoadHutui), 
            t.once(Laya.Event.ERROR, this, this.XhrErrorHandler), t.on(Laya.Event.PROGRESS, this, this.XhrProcessHandler), 
            t.send(e + "&ts=" + new Date().getTime(), "", "get", "text");
        }
        OnComplateLoadHutui(e) {
            console.log("ttad hutui:" + e);
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("OnComplateLoadHutui.json error ", e);
            }
            if (t) this.OppoAdHuitui = t, Laya.LocalStorage.setJSON("OppoAdHuitui", t); else {
                let e = Laya.LocalStorage.getJSON("OppoAdHuitui");
                this.OppoAdHuitui = e || null;
            }
            let i = [];
            for (let e = 0; e < this.OppoAdHuitui.diversion.length; e++) {
                var n = this.OppoAdHuitui.diversion[e];
                i.push({
                    otherIconUrl: n.iconPath,
                    otherName: n.name,
                    jumpKey: n.packageName
                });
            }
            let a = [];
            for (let e = 0; e < this.OppoAdHuitui.iconlist.length; e++) {
                n = this.OppoAdHuitui.iconlist[e];
                a.push({
                    otherIconUrl: n.iconPath,
                    otherName: n.name,
                    jumpKey: n.packageName
                });
            }
            s.oppoMoreGames = i, s.oppoIconGames = a;
        }
        GetAdData(e) {
            var t = new R();
            t.http.timeout = 5e3, t.once(Laya.Event.COMPLETE, this, this.OnComplateLoaddataJson), 
            t.once(Laya.Event.ERROR, this, this.XhrErrorHandler), t.on(Laya.Event.PROGRESS, this, this.XhrProcessHandler), 
            t.send(e + "&ts=" + new Date().getTime(), "", "get", "text");
        }
        OnComplateLoaddataJson(e) {
            console.log("ttad addata:" + e);
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("OnComplateLoaddataJson.json error ", e);
            }
            if (t) this.OppoADData = t, Laya.LocalStorage.setJSON("OppoADData", t); else {
                let e = Laya.LocalStorage.getJSON("OppoADData");
                e ? this.OppoADData = e : (s.isVivoPlatform && (this.OppoADData = this.VivoADData), 
                s.isOppoGameCenterPlatform && (this.OppoADData = this.OppoGameCenterADData));
            }
            if (s.isOppoGameCenterPlatform) {
                let e = this.OppoADData.adddata.bannerid ? this.OppoADData.adddata.bannerid[0] : "", t = this.OppoADData.adddata.interid ? this.OppoADData.adddata.interid[0] : "", i = this.OppoADData.adddata.nativeid && this.OppoADData.adddata.nativeid[0] ? this.OppoADData.adddata.nativeid[0] : "", s = this.OppoADData.adddata.nativeid && this.OppoADData.adddata.nativeid[1] ? this.OppoADData.adddata.nativeid[1] : "", n = this.OppoADData.adddata.nativeid && this.OppoADData.adddata.nativeid[2] ? this.OppoADData.adddata.nativeid[2] : "", o = this.OppoADData.adddata.splashid && this.OppoADData.adddata.splashid[0] ? this.OppoADData.adddata.splashid[0] : "", l = this.OppoADData.adddata.videoid && this.OppoADData.adddata.videoid[0] ? this.OppoADData.adddata.videoid[0] : "";
                d.Instance.Send(a.PlatformManger_AppSetAdID, e, t, i, s, n, o, l);
            }
        }
        GetAdSwitch(e) {
            let t = e + "?ts=" + new Date().getTime();
            console.log("ttad开始加载LoadADswitchJson:" + t);
            var i = new R();
            i.http.timeout = 5e3, i.once(Laya.Event.COMPLETE, this, this.OnComplateLoadADSwitchJson), 
            i.once(Laya.Event.ERROR, this, this.XhrErrorHandler), i.on(Laya.Event.PROGRESS, this, this.XhrProcessHandler), 
            i.send(t, "", "get", "text");
        }
        OnComplateLoadADSwitchJson(e) {
            console.log("ttad switch:" + e);
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("OnComplateLoadHutui.json error ", e);
            }
            t && (s.xiaomiAppAdSwich = t.data.gameConfig, d.Instance.Send(a.PlatformManger_initLoopIntervideo));
        }
        XhrErrorHandler(e) {}
        XhrProcessHandler(e) {}
        XhrCompleteHandler(e) {
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("mrqz_oppoconfig.json error ", e);
            }
            if (null != t) if (s.isOppoPlatform) {
                s.oppoNativeDelay = t.delayTime ? t.delayTime : 0;
                for (let e = 0; e < t.appList.length; e++) {
                    (i = t.appList[e]).otherIconUrl = "https://oss-game-res.oss-cn-shanghai.aliyuncs.com/other_game_data/other_game_res/" + i.otherIconUrl;
                }
                s.oppoMoreGames = t.appList;
            } else if (null != t.interstitial) {
                s.vivoInterstitial = {};
                for (let e = 0; e < t.interstitial.length; e++) {
                    var i = t.interstitial[e];
                    s.vivoInterstitial[a[i.enum]] = i;
                }
            }
        }
        getSceneList(e) {
            var t = !1;
            if (e) {
                var i = e.indexOf("scenelist=");
                if (-1 != i) {
                    console.log("getSceneList " + e), t = !0;
                    for (var s = 0, n = 0, a = e.substring(i + 10), o = 10; -1 != s || o < 0; ) o--, 
                    (s = a.indexOf(".")) > 0 ? (n = parseInt(a.substring(0, s)), a = a.substring(s + 1)) : (n = parseInt(a.substring(0, 4)), 
                    a = a.substring(s + 1)), isNaN(n) || (this.openSceneList.push(n), console.log("sceneID " + n));
                }
            }
            return t;
        }
        SetAdvButData_WX() {
            G.Instance.initClickAPPID(), null != this.ylsdk && (this.ylsdk.getAppMoreInfo(function(e) {
                console.log("getAppMoreInfo", e), B.Instance.advMoreButData = e;
            }), this.ylsdk.getAppAll({
                success: function(e) {
                    for (var t = [], i = [], s = [], n = [], a = [], o = [], l = e.videoOtherAppIds, h = 0; h < e.tgDatas.length; h++) {
                        var r = e.tgDatas[h];
                        B.Instance.localmlkg || -1 == r.otherIndexPath.indexOf("localmlkg=") || (B.Instance.localmlkg = !0, 
                        console.log("本地开关启用 " + B.Instance.localmlkg)), B.Instance.getSceneList(r.otherIndexPath) || (i.push(r), 
                        s.push(r), "" != r.otherScreenImgUrl && G.Instance.NoContainClickAppID(r.otherAppId) && t.push(r), 
                        -1 != l.indexOf(r.otherAppId) && a.push(r), "" != r.otherImageUrl && n.push(r));
                    }
                    B.Instance.allAdvButData = i;
                    for (h = 0; h < l.length; h++) {
                        var c = B.Instance.getAdvDataByAppID(l[h]);
                        null != c && a.push(c);
                    }
                    for (h = 0; h < B.Instance.allAdvButData.length; h++) {
                        r = B.Instance.allAdvButData[h];
                        -1 == l.indexOf(r.otherAppId) && -1 == o.indexOf(r) && o.push(r);
                    }
                    B.Instance.adLoginGameData = t, B.Instance.advImageButData = n, B.Instance.advButData = s, 
                    B.Instance.adVideoData = a, B.Instance.ylADVideoData_B = o, console.log("adLoginGameData", B.Instance.adLoginGameData), 
                    console.log("advImageButData", B.Instance.advImageButData), console.log("advButData", B.Instance.advButData), 
                    console.log("adVideoData", B.Instance.adVideoData), console.log("ylADVideoData_B", B.Instance.ylADVideoData_B);
                },
                fail: function(e) {},
                complete: function(e) {}
            }), Laya.timer.once(1e4, this, () => {
                null != this.advButData && 0 != this.advButData.length || (console.log("重新请求广告数据..."), 
                this.SetAdvButData_WX());
            }));
        }
        SetUsetInfo(e) {
            this.sdkInitInfo || null == this.ylsdk || (this.sdkInitInfo = !0, this.ylsdk.InitUserInfo(e), 
            this.ylsdk.auth());
        }
        SetUsetAuth() {
            null != this.ylsdk && this.ylsdk.auth();
        }
        CheckAddBList(e) {
            (e >= this.addBListStart || this.finishBattle >= 2) && this.AddVideoBList();
        }
        SetADData(e) {
            this.addBListStart = e.stageBtl, this.finishBattle = e.finishBattle;
        }
        AddVideoBList() {
            if (1 == s.TaoLuConfig[e.OpenBList]) {
                if (console.log("开启视频B列表"), null != this.ylADVideoData_B) {
                    for (var t = [], i = 0; i < this.ylADVideoData_B.length; i++) t.push(this.ylADVideoData_B[i]);
                    for (i = 0; i < this.adVideoData.length; i++) t.push(this.adVideoData[i]);
                    this.adVideoData = t, this.isAddVideoBList = !0, console.log("新的视频列表 ylADVideoData", this.adVideoData);
                }
                this.ylADVideoData_B = null;
            } else console.log("未开启B列表功能");
        }
        getAdvDataByAppID(e) {
            for (var t = 0; t < this.allAdvButData.length; t++) {
                var i = this.allAdvButData[t];
                if (i.otherAppId == e) return i;
            }
            return console.log("没有找到 ", e), null;
        }
        OnShow(e, t, i) {
            null != this.ylsdk && this.ylsdk.hasOwnProperty("OnShow") && this.ylsdk.OnShow(e, t, i);
        }
        OnHide(e, t) {
            null != this.ylsdk && this.ylsdk.hasOwnProperty("OnHide") && this.ylsdk.OnHide(e, t);
        }
        getShareQuery() {
            return null != this.ylsdk && this.ylsdk.hasOwnProperty("getShareQuery") ? this.ylsdk.getShareQuery() : "";
        }
        gameIconClick(e, t) {
            null != this.ylsdk && this.ylsdk.hasOwnProperty("gameIconClick") && this.ylsdk.gameIconClick(e, t);
        }
        valideUser1() {
            null != this.ylsdk && this.ylsdk.hasOwnProperty("valideUser1") && this.ylsdk.valideUser1();
        }
        GetNoClickAppIDList() {
            return G.Instance.GetNoClickAppIDList(this.adVideoData);
        }
        GetNoClickAppIDList_All() {
            return G.Instance.GetNoClickAppIDList(this.allAdvButData);
        }
    }
    B.instance = null;
    class H extends D {
        constructor() {
            super(), this.api = Laya.Browser.window.qg;
        }
        getLoginCode(e) {
            null != this.api ? this.api.login({
                success: function(t) {
                    console.log("oppo token: " + JSON.stringify(t)), s.isTourist = t.isTourist, e(t.data.token, !0, {
                        avatarUrl: t.data.avatar,
                        nickName: t.data.nickName,
                        encryptedData: "",
                        iv: ""
                    });
                },
                fail: function(e) {
                    console.log(JSON.stringify(e));
                }
            }) : e("123145", !1);
        }
        InitBanner() {
            if (null == this.api) return;
            this.api.initAdService({
                appId: B.Instance.OppoADData.platformdata.appid,
                isDebug: !1,
                success: function(e) {
                    console.log("oppo initAdService success"), B.Instance.OppoADData.adddata.nativeid[0] && D.Instance.createNativeInterstitialAd1(), 
                    Laya.timer.once(11e3, this, () => {
                        B.Instance.OppoADData.adddata && B.Instance.OppoADData.adddata.nativeid[0] && B.Instance.OppoADData.adddata.nativeid[1] && B.Instance.OppoADData.adddata.nativeid[0] != B.Instance.OppoADData.adddata.nativeid[1] && B.Instance.OppoADData.adddata.nativeid[0] && D.Instance.CreateNativeAd1();
                    });
                },
                fail: function(e) {
                    console.log("oppo initAdService fail:" + e.code + e.msg);
                },
                complete: function(e) {
                    console.log("oppo initAdService complete");
                }
            });
            let e = {
                1: {
                    top: s.systemInfo.windowHeight - 105,
                    left: s.systemInfo.windowWidth / 2 - 150,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                2: {
                    top: s.systemInfo.windowHeight - 105,
                    left: s.systemInfo.windowWidth - 302,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                3: {
                    top: s.systemInfo.windowHeight - 105,
                    left: 0,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                }
            };
            d.Instance.Send(a.PlatformManger_SetBannerPos, e);
        }
        createNativeInterstitialAd1() {
            D.Instance.nativeInterstitialAd1 = D.Instance.api.createNativeAd({
                adUnitId: B.Instance.OppoADData.adddata.nativeid[0]
            }), D.Instance.nativeInterstitialAd1 && D.Instance.nativeInterstitialAd1.onError(function(e) {
                console.error(">>>原生广告0加载失败" + B.Instance.OppoADData.adddata.nativeid[0], JSON.stringify(e));
            }), D.Instance.nativeInterstitialAd1 && D.Instance.nativeInterstitialAd1.onLoad(function(e) {
                for (var t = 0; t < e.adList.length; t++) {
                    var i = e.adList[t];
                    console.log("NavigateADManager.Instance.OppoADData.adddata.nativeid[0]" + B.Instance.OppoADData.adddata.nativeid[0]), 
                    console.log(">>>原生广告0加载 adId", i.adId), console.log(">>>原生广告0加载 title", i.title), 
                    console.log(">>>原生广告0加载 desc", i.desc), console.log(">>>原生广告0加载 icon", i.icon);
                    for (var s = 0; s < i.imgUrlList.length; s++) console.log(">>>原生广告0加载 imgUrlList ", i.imgUrlList[s]), 
                    i.imgUrlList[s] && (i.imgUrlList[s] = i.imgUrlList[s].replace(".short.webp", ""));
                    i.logoUrl && (i.logoUrl = i.logoUrl.replace(".short.webp", "")), i.icon && (i.icon = i.icon.replace(".short.webp", "")), 
                    console.log(">>>原生广告0加载 logoUrl", i.logoUrl), console.log(">>>原生广告0加载 clickBtnTxt", i.clickBtnTxt), 
                    console.log(">>>原生广告0加载 creativeType", i.creativeType), console.log(">>>原生广告0加载 interactionType", i.interactionType), 
                    D.Instance.nativeInterstitialAdData.push({
                        nativeAd: D.Instance.nativeInterstitialAd1,
                        data: i
                    });
                }
            }), D.Instance.nativeInterstitialAd1 && D.Instance.nativeInterstitialAd1.load();
        }
        CreateNativeAd1() {
            D.Instance.nativeAd1 = D.Instance.api.createNativeAd({
                adUnitId: B.Instance.OppoADData.adddata.nativeid[1]
            }), D.Instance.nativeAd1 && D.Instance.nativeAd1.onError(function(e) {
                console.error(">>>原生广告1加载失败" + B.Instance.OppoADData.adddata.nativeid[1], JSON.stringify(e));
            }), D.Instance.nativeAd1 && D.Instance.nativeAd1.onLoad(function(e) {
                for (var t = 0; t < e.adList.length; t++) {
                    var i = e.adList[t];
                    console.log("NavigateADManager.Instance.OppoADData.adddata.nativeid[1]" + B.Instance.OppoADData.adddata.nativeid[1]), 
                    console.log(">>>原生广告1加载 adId", i.adId), console.log(">>>原生广告1加载 title", i.title), 
                    console.log(">>>原生广告1加载 desc", i.desc), console.log(">>>原生广告1加载 icon", i.icon);
                    for (var s = 0; s < i.imgUrlList.length; s++) console.log(">>>原生广告1加载 imgUrlList ", i.imgUrlList[s]), 
                    i.imgUrlList[s] && (i.imgUrlList[s] = i.imgUrlList[s].replace(".short.webp", ""));
                    i.logoUrl && (i.logoUrl = i.logoUrl.replace(".short.webp", "")), i.icon && (i.icon = i.icon.replace(".short.webp", "")), 
                    console.log(">>>原生广告1加载 logoUrl", i.logoUrl), console.log(">>>原生广告1加载 clickBtnTxt", i.clickBtnTxt), 
                    console.log(">>>原生广告1加载 creativeType", i.creativeType), console.log(">>>原生广告1加载 interactionType", i.interactionType), 
                    D.Instance.nativeAdData.push({
                        nativeAd: D.Instance.nativeAd1,
                        data: i
                    });
                }
            }), D.Instance.nativeAd1 && D.Instance.nativeAd1.load();
        }
        createNativeOverAd() {
            D.Instance.nativeAd3 = D.Instance.api.createNativeAd({
                adUnitId: "281326"
            }), D.Instance.nativeAd3 && D.Instance.nativeAd3.onError(function(e) {
                console.error(">>>原生广告3加载失败281326", JSON.stringify(e));
            }), D.Instance.nativeAd3 && D.Instance.nativeAd3.onLoad(function(e) {
                for (var t = 0; t < e.adList.length; t++) {
                    var i = e.adList[t];
                    console.log("NavigateADManager.Instance.OppoADData.adddata.nativeid[3] 281326"), 
                    console.log(">>>原生广告3加载 adId", i.adId), console.log(">>>原生广告3加载 title", i.title), 
                    console.log(">>>原生广告3加载 desc", i.desc), console.log(">>>原生广告3加载 icon", i.icon);
                    for (var s = 0; s < i.imgUrlList.length; s++) console.log(">>>原生广告3加载 imgUrlList ", i.imgUrlList[s]), 
                    i.imgUrlList[s] && (i.imgUrlList[s] = i.imgUrlList[s].replace(".short.webp", ""));
                    i.logoUrl && (i.logoUrl = i.logoUrl.replace(".short.webp", "")), i.icon && (i.icon = i.icon.replace(".short.webp", "")), 
                    console.log(">>>原生广告3加载 logoUrl", i.logoUrl), console.log(">>>原生广告3加载 clickBtnTxt", i.clickBtnTxt), 
                    console.log(">>>原生广告3加载 creativeType", i.creativeType), console.log(">>>原生广告3加载 interactionType", i.interactionType), 
                    D.Instance.nativeOverAdData.push({
                        nativeAd: D.Instance.nativeAd3,
                        data: i
                    });
                }
            }), D.Instance.nativeAd3 && D.Instance.nativeAd3.load();
        }
        GetNativeOverAd() {
            var e;
            return console.log("GetNativeOverAd"), D.Instance.nativeOverAdData.length > 0 ? e = D.Instance.nativeOverAdData.shift() : D.Instance.nativeAd3 ? D.Instance.nativeAd3.load() : D.Instance.createNativeOverAd(), 
            e;
        }
        GetNativeInterstitialAd() {
            var e;
            return console.log("GetNativeInterstitialAd"), D.Instance.nativeInterstitialAdData.length > 0 ? e = D.Instance.nativeInterstitialAdData.shift() : D.Instance.nativeInterstitialAd1 ? D.Instance.nativeInterstitialAd1.load() : D.Instance.createNativeInterstitialAd1(), 
            e;
        }
        oppoCreateGameBannerAd() {
            D.Instance.api.getSystemInfoSync().platformVersionCode >= 1076 ? (D.Instance.oppoGameBannerAD = D.Instance.api.createGameBannerAd({
                adUnitId: "291804"
            }), D.Instance.oppoGameBannerAD.onError(function(e) {
                console.log("互推盒子横幅广告加载失败" + e), D.Instance.oppoGameBannerAD.destroy(), D.Instance.oppoGameBannerAD = null;
            }), D.Instance.oppoGameBannerAD.onLoad(function() {
                console.log("互推盒子横幅广告加载成功");
            }), D.Instance.oppoGameBannerAD && D.Instance.oppoGameBannerAD.show().then(function() {
                console.log("互推盒子横幅广告show success");
            }).catch(function(e) {
                console.log("互推盒子横幅广告show fail with:" + e.errCode + "," + e.errMsg);
            })) : console.log("快应用平台版本号低于1076，暂不支持互推盒子相关 API");
        }
        oppoCreateGamePortal() {
            D.Instance.api.getSystemInfoSync().platformVersionCode >= 1076 ? (D.Instance.oppogamePortalAd = D.Instance.api.createGamePortalAd({
                adUnitId: "291802"
            }), D.Instance.oppogamePortalAd.onError(function(e) {
                console.log("互推盒子九宫格广告加载失败" + JSON.stringify(e)), D.Instance.oppogamePortalAd.destroy(), 
                D.Instance.oppogamePortalAd = null;
            }), D.Instance.oppogamePortalAd.onLoad(function() {
                console.log("互推盒子九宫格广告加载成功"), D.Instance.oppogamePortalAd.show().then(function() {
                    console.log("互推盒子九宫格show success");
                }).catch(function(e) {
                    console.log("互推盒子九宫格show fail with:" + e.errCode + "," + e.errMsg);
                });
            }), D.Instance.oppogamePortalAd.onClose(function() {
                console.log("互推盒子九宫格广告关闭"), D.Instance.oppogamePortalAd.destroy(), D.Instance.oppogamePortalAd = null;
            })) : console.log("快应用平台版本号低于1076，暂不支持互推盒子相关 API");
        }
        loadSubpackage(e) {
            return null != this.api && this.api.hasOwnProperty("loadSubpackage") ? this.api.loadSubpackage(e) : (e.fail(), 
            null);
        }
        hasloadSubpackage() {
            return null != this.api && null != this.api.loadSubpackage;
        }
        GetNativeBanner() {
            var e;
            return console.log("GetNativeBanner"), D.Instance.nativeAdData.length > 0 ? e = D.Instance.nativeAdData.shift() : D.Instance.nativeAd1 ? D.Instance.nativeAd1.load() : D.Instance.CreateNativeAd1(), 
            e;
        }
        setPreferredFramesPerSecond(e) {}
        onShow(e) {}
        onHide(e) {}
        onShareAppMessage(e) {}
        getUpdateManager() {
            return null;
        }
        getNetworkType(e) {}
        onNetworkStatusChange(e) {}
        showModal(e) {}
        getSetting(e) {}
        getUserInfo(e) {}
        createUserInfoButton(e) {
            return null;
        }
        shareAppMessage(e) {}
        setUserCloudStorage(e) {}
        navigateToMiniProgram(e) {}
        showShareMenu() {}
        hideShareMenu() {}
        setInnerAudioOption(e) {}
        hasOwnProperty(e) {
            return !0;
        }
        openSetting() {}
        getGameRecorderManager() {
            return null;
        }
        openCustomerServiceConversation(e) {}
        createMoreGamesButton() {
            return null;
        }
        createMoreGamesButtonCenter() {
            return null;
        }
        createGameIcon(e) {
            return null;
        }
        aldSendEvent(e, t) {}
        createBannerAd(e) {
            return null != this.api && this.api.hasOwnProperty("createBannerAd") ? this.api.createBannerAd(e) : null;
        }
        createRewardedVideoAd(e) {
            return null != this.api && this.api.hasOwnProperty("createRewardedVideoAd") ? this.api.createRewardedVideoAd(e) : null;
        }
        createAppInteractionAd() {
            return null != this.api && this.api.hasOwnProperty("createInsertAd") ? this.api.createInsertAd({
                adUnitId: "224251"
            }) : null;
        }
        joinVoIPChat(e) {
            if (null != this.api && this.api.hasOwnProperty("joinVoIPChat")) return this.api.joinVoIPChat(e);
        }
        exitVoIPChat(e) {
            if (null != this.api && this.api.hasOwnProperty("exitVoIPChat")) return this.api.exitVoIPChat(e);
        }
        updateVoIPChatMuteConfig(e) {
            if (null != this.api && this.api.hasOwnProperty("updateVoIPChatMuteConfig")) return this.api.updateVoIPChatMuteConfig(e);
        }
        onVoIPChatMembersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("onVoIPChatMembersChanged")) return this.api.onVoIPChatMembersChanged(e);
        }
        onVoIPChatSpeakersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("onVoIPChatSpeakersChanged")) return this.api.onVoIPChatSpeakersChanged(e);
        }
        onVoIPChatStatusChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("onVoIPChatStatusChanged")) return this.api.onVoIPChatStatusChanged(e);
        }
        offVoIPChatSpeakersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("offVoIPChatSpeakersChanged")) return this.api.offVoIPChatSpeakersChanged(e);
        }
        offVoIPChatStatusChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("offVoIPChatStatusChanged")) return this.api.offVoIPChatStatusChanged(e);
        }
        offVoIPChatMembersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("offVoIPChatMembersChanged")) return this.api.offVoIPChatMembersChanged(e);
        }
        setClipboardData(e) {
            if (null != this.api && this.api.hasOwnProperty("setClipboardData")) return this.api.setClipboardData({
                data: e,
                success(e) {
                    d.Instance.Send(a.UIGameTipsModel_SetTips, "复制成功!", 1e3);
                },
                fail(e) {
                    d.Instance.Send(a.UIGameTipsModel_SetTips, "复制失败!", 1e3);
                }
            });
        }
        writeFileSync(e) {
            null != this.fsManager && this.fsManager.hasOwnProperty("writeFileSync") && this.fsManager.writeFileSync(e.filePath, e.data, e.encoding);
        }
        readFileSync(e) {
            if (null != this.fsManager && this.fsManager.hasOwnProperty("readFileSync")) return this.fsManager.readFileSync(e.filePath, e.encoding);
        }
    }
    class F extends D {
        constructor() {
            super(), this.dic_systemBanner = {}, this.nativeLoadCD = 11, this.currentNativeLoadCD = 0, 
            this.currentShowNativeAd_Showing = !1, this.nativeAdBigImage_showCount = 0, this.nativeAdBigImage_showTime = 0, 
            this.nativeResetTime = 0, this.nativeResetInterval = 0, this.nativeResetLoopSwith = !1, 
            this.canshwBannerAd = !1, this.api = Laya.Browser.window.qg;
        }
        Init() {
            this.GetAdControlParameters("https://www.quduoduodata.top/ossfile/adminbase/configList/vivo/decd8c07a78277e0c06036eaab7cefa6.json", this.getParas.bind(this)), 
            this.creatNativeContainer(), Laya.timer.loop(1e3, this, this.update_OneSecond);
        }
        getParas() {
            this.nativeLoadCD = this.ad_ControlParameter.nativeIconRefreshTime ? this.ad_ControlParameter.nativeIconRefreshTime : 11, 
            this.createNativeAd(), this.InitBanner();
        }
        getLoginCode(e) {
            var t;
            null != this.api ? null == (t = this.api.getStorageSync({
                key: "vivoAccount"
            })) || "" == t ? this.api.getSystemInfoSync().platformVersionCode >= 1053 ? this.api.login().then(t => {
                t.data.token && e(t.data.token, !0);
            }, t => {
                console.log("登录失败1" + JSON.stringify(t));
                var i = this.api.getStorageSync({
                    key: "vivoAccount"
                });
                null != i && "" != i || (i = this.GetRandomPlayerID() + this.GetRandomPlayerID(), 
                this.api.setStorageSync({
                    key: "vivoAccount",
                    value: i
                })), e(i, !1);
            }) : (null != (t = this.api.getStorageSync({
                key: "vivoAccount"
            })) && "" != t || (t = this.GetRandomPlayerID() + this.GetRandomPlayerID(), this.api.setStorageSync({
                key: "vivoAccount",
                value: t
            })), e(t, !1)) : e(t, !1) : e("123145", !1);
        }
        InitBanner() {
            if (null == this.api) return;
            this.api.setKeepScreenOn({
                keepScreenOn: !0,
                success: function() {
                    console.log("handling success");
                },
                fail: function(e, t) {
                    console.log(`handling fail, code = ${t}`);
                }
            });
            let e = {
                1: {
                    top: s.systemInfo.windowHeight - 50,
                    left: s.systemInfo.windowWidth / 2 - 75,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                2: {
                    top: s.systemInfo.windowHeight - 50,
                    left: s.systemInfo.windowWidth - 75,
                    width: 300,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                },
                3: {
                    top: s.systemInfo.windowHeight - 50,
                    left: 0,
                    width: 150,
                    height: 200,
                    autoTop: !1,
                    btnlist: null,
                    btnInitY: 0,
                    btnEndY: 0,
                    iPhoneXShow: !0
                }
            };
            d.Instance.Send(a.PlatformManger_SetBannerPos, e);
        }
        loadSubpackage(e) {
            return null != this.api && this.api.hasOwnProperty("loadSubpackage") ? this.api.loadSubpackage(e) : (e.fail(), 
            null);
        }
        hasloadSubpackage() {
            return null != this.api && null != this.api.loadSubpackage;
        }
        setPreferredFramesPerSecond(e) {}
        onShow(e) {}
        onHide(e) {}
        onShareAppMessage(e) {}
        getUpdateManager() {
            return null;
        }
        getNetworkType(e) {}
        onNetworkStatusChange(e) {}
        showModal(e) {}
        getSetting(e) {}
        getUserInfo(e) {}
        createUserInfoButton(e) {
            return null;
        }
        shareAppMessage(e) {}
        setUserCloudStorage(e) {}
        navigateToMiniProgram(e) {}
        showShareMenu() {}
        hideShareMenu() {}
        setInnerAudioOption(e) {}
        hasOwnProperty(e) {
            return !0;
        }
        openSetting() {}
        getGameRecorderManager() {
            return null;
        }
        openCustomerServiceConversation(e) {}
        createGameBanner(e) {}
        createGamePortal(e) {}
        createMoreGamesButton() {
            return null;
        }
        createMoreGamesButtonCenter() {
            return null;
        }
        createGameIcon(e) {
            return null;
        }
        aldSendEvent(e, t) {}
        createBannerAd(e) {
            return null != this.api && this.api.hasOwnProperty("createBannerAd") ? this.api.createBannerAd(e) : null;
        }
        createRewardedVideoAd(e) {
            return e.posId = e.adUnitId, null != this.api && this.api.hasOwnProperty("createRewardedVideoAd") ? this.api.createRewardedVideoAd(e) : null;
        }
        createAppInteractionAd() {
            return null != this.api && this.api.hasOwnProperty("createInterstitialAd") ? this.api.createInterstitialAd({
                posId: "4b861018f8424e38ba27376a980c9a22"
            }) : null;
        }
        setClipboardData(e) {
            if (null != this.api && this.api.hasOwnProperty("setClipboardData")) return this.api.setClipboardData({
                data: e,
                success(e) {
                    d.Instance.Send(a.UIGameTipsModel_SetTips, "复制成功!", 1e3);
                },
                fail(e) {
                    d.Instance.Send(a.UIGameTipsModel_SetTips, "复制失败!", 1e3);
                }
            });
        }
        createBoxPortalAd() {
            this.api.createBoxPortalAd ? (this.boxPortalAd = this.api.createBoxPortalAd({
                posId: "6154876a085947af89e86acc7033d3fe",
                image: "",
                marginTop: .6 * Laya.stage.height
            }), this.boxPortalAd.onError(function(e) {
                console.log("盒子九宫格广告加载失败", e);
            }), this.boxPortalAd.onClose(function() {
                console.log("close"), this.boxPortalAd && this.boxPortalAd.isDestroyed || this.boxPortalAd && this.boxPortalAd.show();
            }), this.boxPortalAd.show().then(function() {
                console.log("show success");
            })) : console.log("暂不支持互推盒子相关 API");
        }
        createBoxBannerAd() {
            this.api.createBoxBannerAd ? (this.boxBannerAd = this.api.createBoxBannerAd({
                posId: "60b14df98b844e53a1b4d631add5d25d"
            }), this.boxBannerAd && this.boxBannerAd.onError(function(e) {
                console.log("盒子横幅广告加载失败", e);
            }), this.boxBannerAd && this.boxBannerAd.show().then(function() {
                console.log("show success");
            })) : console.log("暂不支持互推盒子相关 API");
        }
        createSystemBanner() {
            this.ad_ControlParameter.systemBannerSwitch && this.ad_ID.systemBannerId && (this.dic_systemBanner[this.ad_ID.systemBannerId] = this.api.createBannerAd({
                adUnitId: this.ad_ID.systemBannerId,
                style: {
                    top: s.systemInfo.windowHeight - 105,
                    left: s.systemInfo.windowWidth / 2 - 150,
                    width: 300,
                    height: 200
                }
            }));
        }
        showSystemBanner(e) {
            if (!this.ad_ControlParameter.systemBannerSwitch) return;
            this.bannerPos[e.style] && (this.dic_systemBanner[this.ad_ID.systemBannerId] = this.api.createBannerAd({
                adUnitId: this.ad_ID.systemBannerId
            }), this.dic_systemBanner[this.ad_ID.systemBannerId] && Laya.timer.once(1e3 * this.ad_ControlParameter.systemBannerDelayTime, this, () => {
                this.dic_systemBanner[this.ad_ID.systemBannerId].show(), this.canshwBannerAd = !0;
            }));
        }
        hideSystemBanner() {
            this.dic_systemBanner[this.ad_ID.systemBannerId] && (this.dic_systemBanner[this.ad_ID.systemBannerId].hide(), 
            this.dic_systemBanner[this.ad_ID.systemBannerId].destroy(), this.dic_systemBanner[this.ad_ID.systemBannerId] = null), 
            this.canshwBannerAd = !1;
        }
        createNativeAd() {
            let e = [ this.ad_ID.nativeIconId, this.ad_ID.nativeImageId, this.ad_ID.nativeInsertId ], t = this;
            this.currentNativeLoadCD = 0, this.nativeInit(e.shift());
            var i = setInterval(() => {
                e.length <= 0 ? clearInterval(i) : (t.currentNativeLoadCD = 0, t.nativeInit(e.shift()));
            }, 1e3 * t.nativeLoadCD + 2e3);
        }
        nativeInit(e) {
            if (this.api.createNewNativeAd) return;
            this.dic_nativeAdData[e] = new k(), console.log("开始加载native " + e);
            let t = this.api.createNativeAd({
                adUnitId: e
            });
            this.dic_nativeAdData[e].component = t, this.dic_nativeAdData[e].adDataList = [], 
            this.dic_nativeAdData[e].showingAdData = null, this.loadOverride(t), function(e, t, i) {
                console.log("开始加载native " + i), e && (e.onLoad(function(e) {
                    console.log(i + "_native加载成功", JSON.stringify(e));
                    for (var s = 0; s < e.adList.length; s++) {
                        for (var n = e.adList[s], a = 0; a < n.imgUrlList.length; a++) n.imgUrlList[a] && (n.imgUrlList[a] = n.imgUrlList[a].replace(".short.webp", ""));
                        n.logoUrl && (n.logoUrl = n.logoUrl.replace(".short.webp", "")), n.icon && (n.icon = n.icon.replace(".short.webp", "")), 
                        t.push(n);
                    }
                }), e.onError(function(e) {
                    console.log(i + "_native加载失败", JSON.stringify(e));
                }), e.load());
            }(t, this.dic_nativeAdData[e].adDataList, e);
        }
        loadOverride(e) {
            if (!e || !e.load) return;
            var t = e.load;
            let i = this;
            e.load = function() {
                i.currentNativeLoadCD > 0 || (i.currentNativeLoadCD = i.nativeLoadCD, t.call(e));
            };
        }
        ShowNewNativeAd(e) {
            if (!this.api.createNewNativeAd) return this.ShowNativeAd(e), void console.log("引擎版本不支持原生2.0");
            let t = e[0], i = t.style, n = t.gravity;
            if (!this.dic_nativeAdData) return;
            let a = this.ad_ID[i];
            if (!a) return;
            let o = !0, l = !0, h = 0;
            switch (i) {
              case I.bigImage:
                o = this.ad_ControlParameter.nativeImageSwitch, this.nativeResetInterval = this.ad_ControlParameter.nativeImageRefreshTime, 
                n || (n = "bottom|right"), h = 4, l = w.Instance.severTime - this.lastNativeImageLoadTime >= 1e3 * this.nativeLoadCD;
                break;

              case I.icon:
                o = this.ad_ControlParameter.nativeIconSwitch, this.nativeResetInterval = this.ad_ControlParameter.nativeIconRefreshTime, 
                h = 0, l = w.Instance.severTime - this.lastNativeIconLoadTime >= 1e3 * this.nativeLoadCD;
                break;

              case I.insert:
            }
            if (!o) return;
            if (!l) return void console.log(a + " 不符合加载间隔");
            this.dic_nativeAdData[a] = new k(), console.log("开始加载native " + a, window.screen.width, window.devicePixelRatio);
            const r = this.api.createNewNativeAd({
                posId: a
            });
            let c = (s.fixStageX + t.x) * s.screenScale / s.systemInfo.pixelRatio, d = (s.fixStageY + t.y) * s.screenScale / s.systemInfo.pixelRatio;
            if (t.width) {
                let e = t.width * s.screenScale / s.systemInfo.pixelRatio;
                console.log("原生自渲染2.0广告 width" + a, e);
            }
            if (t.height) {
                let e = t.width * s.screenScale / s.systemInfo.pixelRatio;
                console.log("原生自渲染2.0广告 height" + a, e);
            }
            r.onLoad(function(e) {
                if (console.log("原生自渲染2.0广告加载完成-onload触发" + a, JSON.stringify(e)), e && e.adList) {
                    var t = {};
                    t = n ? {
                        adId: e.adList[0].adId,
                        formType: h,
                        style: {
                            gravity: n
                        }
                    } : {
                        adId: e.adList[0].adId,
                        formType: h,
                        style: {
                            left: c,
                            top: d
                        }
                    }, console.log("原生自渲染2.0广告展示尺寸 " + a, JSON.stringify(t));
                    let s = !1;
                    if (e.adList[0].formType) for (let t = 0; t < e.adList[0].formType.length; t++) {
                        e.adList[0].formType[t] == h && (s = !0);
                    }
                    s ? r.show(t).then(() => {
                        switch (i) {
                          case I.bigImage:
                            D.Instance.lastNativeImageLoadTime = w.Instance.severTime;
                            break;

                          case I.icon:
                            D.Instance.lastNativeIconLoadTime = w.Instance.severTime;
                            break;

                          case I.insert:
                        }
                        console.log("原生自渲染2.0广告展示完成 " + a), D.Instance.dic_nativeAdData[a].newNativeAdShowing = !0;
                    }).catch(e => {
                        console.log("原生自渲染2.0广告展示失败" + a, JSON.stringify(e));
                    }) : console.log("原生自渲染2.0广告 不存在指定样式：" + h);
                }
            }), r.onClose(() => {
                console.log("原生自渲染2.0广告关闭" + a);
            }), r.onError(e => {
                console.log("原生自渲染2.0广告加载失败" + a, JSON.stringify(e));
            }), this.dic_nativeAdData[a].component = r;
        }
        HideNewNativeAd(e) {
            if (!this.api.createNewNativeAd) return this.HideNativeAd(), void console.log("引擎版本不支持原生2.0");
            let t = this.ad_ID[e];
            t && this.dic_nativeAdData[t] && this.dic_nativeAdData[t].component && this.dic_nativeAdData[t].component.hide && (this.dic_nativeAdData[t].component.hide(), 
            this.dic_nativeAdData[t].component = null, console.log("原生自渲染2.0广告关闭 " + t));
        }
        ShowNativeAd(e) {
            if (this.api.createNewNativeAd) return;
            let t = e[0], i = t.uiRoot, s = t.x, n = t.y;
            var a = t.width, o = t.height;
            let l = t.style, h = t.taoluBtn;
            if (h && (h.visible = !1), !this.dic_nativeAdData) return;
            if (!this.nativeAd_AdImage) return;
            let r = this.ad_ID[l];
            if (!r) return;
            if (!this.dic_nativeAdData[r] || !this.dic_nativeAdData[r].component) return;
            this.currentShowNativeAd_Style = l;
            let c = !0, d = !1, u = 0, p = 0;
            switch (this.nativeResetInterval = 0, this.nativeResetLoopSwith = !1, l) {
              case I.bigImage:
                c = this.ad_ControlParameter.nativeImageSwitch, u = this.ad_ControlParameter.nativeImageDelayTime, 
                p = this.ad_ControlParameter.nativeInsertCloseBtnDelayTime, d = new Date().getTime() - this.gameStartTime < 1e3 * this.ad_ControlParameter.startNoNativeAdTime, 
                this.nativeResetInterval = this.ad_ControlParameter.nativeImageRefreshTime;
                break;

              case I.icon:
                c = this.ad_ControlParameter.nativeIconSwitch, u = this.ad_ControlParameter.nativeIconDelayTime, 
                this.nativeResetInterval = this.ad_ControlParameter.nativeIconRefreshTime;
                break;

              case I.insert:
            }
            if (c && !d && this.resetNativeAdInfoInContainner(r)) {
                a = a || 512, o = o || 224;
                this.nativeAd_AdTip.x = a - 83, this.nativeAd_AdTip.y = o - 31, this.nativeAd_AdImage.x = s, 
                this.nativeAd_AdImage.y = n, this.nativeAd_AdImage.width = a, this.nativeAd_AdImage.height = o, 
                h && this.ad_ControlParameter.nativeClickBtnSwitch && (h.visible = !0, h.offAllCaller(this), 
                h.on(Laya.Event.MOUSE_DOWN, this, this.onClickNativeImage)), null != i && (Laya.timer.once(u, this, this.showNativeAdContainner, [ i ]), 
                this.nativeAd_Close.visible = !1, Laya.timer.once(p, this, this.showNativeAdCloseBtn)), 
                this.fillNativeAdOrignData(r), this.nativeResetLoopSwith = this.nativeResetInterval > 0, 
                this.nativeResetTime = this.nativeResetInterval;
            }
        }
        update_OneSecond() {
            if (this.canshwBannerAd || this.hideSystemBanner(), this.currentNativeLoadCD > 0 && this.currentNativeLoadCD--, 
            this.nativeResetLoopSwith && (this.nativeResetTime--, this.nativeResetTime <= 0)) {
                let e = this.ad_ID[this.currentShowNativeAd_Style];
                if (!e) return;
                if (!this.dic_nativeAdData[e] || !this.dic_nativeAdData[e].component) return;
                this.resetNativeAdInfoInContainner(e), this.fillNativeAdOrignData(e), this.nativeResetTime = this.nativeResetInterval;
            }
        }
        fillNativeAdOrignData(e) {
            e && this.dic_nativeAdData[e] && this.dic_nativeAdData[e].component && 0 == this.dic_nativeAdData[e].adDataList.length && this.dic_nativeAdData[e].component.load();
        }
        resetNativeAdInfoInContainner(e) {
            let t = this.dic_nativeAdData[e];
            if (!t) return;
            if (t.adDataList.length > 0 ? t.showingAdData = t.adDataList.shift() : t.component.load(), 
            !t.showingAdData) return !1;
            let i = t.showingAdData.imgUrlList[0];
            switch (this.currentShowNativeAd_Style) {
              case I.bigImage:
                i = t.showingAdData.imgUrlList[0];
                break;

              case I.icon:
                t.showingAdData.icon ? i = t.showingAdData.icon : t.showingAdData.iconUrlList && t.showingAdData.iconUrlList.length > 0 && (i = t.showingAdData.iconUrlList[0]);
                break;

              case I.insert:
                i = t.showingAdData.imgUrlList[0];
            }
            this.nativeAd_AdImage.visible = !0, this.nativeAd_AdImage.graphics.clear();
            try {
                this.nativeAd_AdImage.loadImage(i);
            } catch (e) {}
            return !0;
        }
        showNativeAdContainner(e) {
            e.addChild(this.nativeAd_AdImage), this.currentShowNativeAd_Showing = !0;
            let t = this.ad_ID[this.currentShowNativeAd_Style];
            this.dic_nativeAdData[t] && this.dic_nativeAdData[t].component && this.dic_nativeAdData[t].showingAdData && (this.dic_nativeAdData[t].component.reportAdShow({
                adId: this.dic_nativeAdData[t].showingAdData.adId
            }), this.currentShowNativeAd_Style == I.bigImage && (w.Instance.severTime - this.nativeAdBigImage_showTime >= 6e4 && (this.nativeAdBigImage_showTime = w.Instance.severTime, 
            this.nativeAdBigImage_showCount = 0), this.nativeAdBigImage_showCount++));
        }
        showNativeAdCloseBtn() {
            this.nativeAd_Close.visible = !0;
        }
        HideNativeAd() {
            this.nativeAd_AdImage && (this.nativeAd_AdImage.removeSelf(), Laya.timer.clear(this, this.showNativeAdContainner), 
            Laya.timer.clear(this, this.showNativeAdCloseBtn), this.currentShowNativeAd_Showing = !1, 
            this.nativeResetLoopSwith = !1);
        }
        nativeTaolu() {
            let e = Math.random();
            if (this.currentShowNativeAd_Showing) if (this.currentShowNativeAd_Style == I.icon) {
                console.log("nativeIconErrInterval:", this.ad_ControlParameter.nativeIconErrInterval), 
                console.log("lastNativeIconErrClickTime:", this.lastNativeIconErrClickTime);
                let t = w.Instance.severTime - 1e3 * this.ad_ControlParameter.nativeIconErrInterval >= this.lastNativeIconErrClickTime, i = this.getTodayNativeIconErrClick();
                console.log("nativeIconErrNumber", this.ad_ControlParameter.nativeIconErrNumber), 
                console.log("errClickTime", i);
                let s = i >= this.ad_ControlParameter.nativeIconErrNumber;
                console.log("nativeIconErrProbability", this.ad_ControlParameter.nativeIconErrProbability);
                let n = this.ad_ControlParameter.nativeIconErrProbability >= e;
                console.log("probability", n), n && t && !s && (this.lastNativeIconErrClickTime = w.Instance.severTime, 
                this.onClickNativeImage(), this.addTodayNativeIconErrClick());
            } else if (this.currentShowNativeAd_Style == I.bigImage) {
                let t = w.Instance.severTime - 1e3 * this.ad_ControlParameter.nativeImageErrInterval >= this.lastNativeBigImageErrClickTime, i = this.getTodayNativeBigImageErrClick() >= this.ad_ControlParameter.nativeImageErrNumber;
                this.ad_ControlParameter.nativeImageErrProbability >= e && t && !i && (this.lastNativeBigImageErrClickTime = w.Instance.severTime, 
                this.onClickNativeImage(), this.addTodayNativeBigImageErrClick());
            }
        }
        onClickNativeImage() {
            let e = this.ad_ID[this.currentShowNativeAd_Style];
            this.dic_nativeAdData[e] && this.dic_nativeAdData[e].component && this.dic_nativeAdData[e].showingAdData && (console.log("原生广告点击 " + this.dic_nativeAdData[e].showingAdData.adId), 
            this.dic_nativeAdData[e].component.reportAdClick({
                adId: this.dic_nativeAdData[e].showingAdData.adId
            }));
        }
        onClickNativeClose(e) {
            super.onClickNativeClose(e), this.nativeTaolu(), this.HideNativeAd();
        }
        ShowInter() {
            console.log("qddLog", "系统插屏开关:" + this.ad_ControlParameter.systemInsertSwitch, "系统插屏id:" + this.ad_ID.systemInsertId, "系统插屏转原生插屏次数:" + this.ad_ControlParameter.systemInsertToNativeInsertNumber, "今日展示系统插屏次数:" + this.getTodayShowSysInterNum());
            let e = Math.random();
            console.log("qddLog", "原生插屏开关:" + this.ad_ControlParameter.nativeInsertSwitch, "原生插屏id:" + this.ad_ID.nativeInsertId, "展示原生插屏的概率:" + this.ad_ControlParameter.nativeInsertProbability, "本次显示概率:" + e, "显示间隔:" + this.ad_ControlParameter.nativeInsertIntervalTime + "秒", "是否符合原生插屏间隔:" + (w.Instance.severTime - 1e3 * this.ad_ControlParameter.nativeInsertIntervalTime >= this.lastShowNativeInsertIntervalTime)), 
            this.ad_ControlParameter.systemInsertSwitch && this.ad_ID.systemInsertId ? (console.log("qddLog", "展示系统插屏的概率:" + this.ad_ControlParameter.systemInsertProbability, "本次显示概率:" + e, "显示间隔:" + this.ad_ControlParameter.systemInsertIntervalTime + "秒", "是否符合系统插屏间隔:" + (w.Instance.severTime - 1e3 * this.ad_ControlParameter.systemInsertIntervalTime >= this.lastShowSystemInsertIntervalTime)), 
            this.ad_ControlParameter.systemInsertProbability >= e && w.Instance.severTime - 1e3 * this.ad_ControlParameter.systemInsertIntervalTime >= this.lastShowSystemInsertIntervalTime && (console.log("qddLog", "请求显示系统插屏"), 
            this.lastShowSystemInsertIntervalTime = w.Instance.severTime, this.HideNativeAd(), 
            this.showSystemInter(), this.addTodayShowSysInterNum())) : this.ad_ControlParameter.nativeInsertSwitch && this.ad_ID.nativeInsertId && w.Instance.severTime - 1e3 * this.ad_ControlParameter.nativeInsertIntervalTime >= this.lastShowNativeInsertIntervalTime && this.ad_ControlParameter.nativeInsertProbability >= e && Laya.timer.once(1e3 * this.ad_ControlParameter.nativeInsertDelayTime, this, () => {
                if (console.log("qddLog", "请求显示原生插屏"), this.lastShowNativeInsertIntervalTime = w.Instance.severTime, 
                !this.dic_nativeAdData) return;
                let e = this.ad_ID[I.insert];
                if (!e) return;
                let t = this.dic_nativeAdData[e];
                t && (t.component || (t.adDataList.length > 0 ? t.showingAdData = t.adDataList.shift() : t.component.load(), 
                t.showingAdData && (this.HideNativeAd(), d.Instance.Send(a.UINativeInterstitial_Open, t.showingAdData))));
            });
        }
        showSystemInter() {
            if (this.HideNewNativeAd(I.icon), this.HideNewNativeAd(I.bigImage), null != this.api && this.api.hasOwnProperty("createInterstitialAd") && this.ad_ID.systemInsertId) {
                const e = this.api.createInterstitialAd({
                    posId: this.ad_ID.systemInsertId
                });
                e.onError(e => {
                    console.log("插屏广告加载失败", e);
                }), e.show().then(() => {
                    console.log("插屏广告展示完成");
                }).catch(e => {
                    console.log("插屏广告展示失败", JSON.stringify(e));
                });
            }
        }
    }
    class V extends D {
        constructor() {
            super(), this.gridAd = null, this.gameClubButton = null, this.waitGetSetting = !1, 
            this.cacheCallBack = [], this.api = Laya.Browser.window.wx, Laya.Browser.window.selfwx = this;
        }
        getLoginCode(e) {
            this.api.login({
                force: !1,
                success: t => {
                    if (console.log("login success", t), null != e && null != t.code) {
                        var i = t.code;
                        s.isWXPlatform && !s.isWXNMLogin ? this.getUserInfo({
                            success: t => {
                                e(i, !0, {
                                    avatarUrl: t.avatarUrl,
                                    nickName: t.nickName,
                                    encryptedData: t.encryptedData,
                                    iv: t.iv
                                });
                            },
                            fail: t => {
                                e(i, !0, {
                                    avatarUrl: "",
                                    nickName: "游客",
                                    encryptedData: "",
                                    iv: ""
                                });
                            }
                        }) : e(i, !0, {
                            avatarUrl: "",
                            nickName: "游客",
                            encryptedData: "",
                            iv: ""
                        });
                    }
                    t.code ? console.log("登录成功！", t.code) : console.log("登录失败！", t.errMsg);
                },
                fail: t => {
                    console.log("登录失败！重试登录", t), Laya.timer.once(100, this, this.getLoginCode, [ e ]);
                },
                complete: function(e) {
                    console.log("login complete", e);
                }
            });
        }
        getSetting(e) {
            if (console.log("getSetting 1"), e && null != this.cacheGetSettingRes) return e.success && e.success(this.cacheGetSettingRes), 
            void console.log("getSetting cache");
            this.cacheCallBack.push(e), this.waitGetSetting || this.api && (this.waitGetSetting = !0, 
            console.log("getSetting 2"), this.api.getSetting({
                success: e => {
                    for (this.waitGetSetting = !1, console.log("getSetting 3"), e.authSetting["scope.userInfo"] && (this.cacheGetSettingRes = e); this.cacheCallBack.length > 0; ) {
                        var t = this.cacheCallBack.pop();
                        t.success && t.success(e);
                    }
                },
                fail: e => {
                    for (this.waitGetSetting = !1; this.cacheCallBack.length > 0; ) {
                        var t = this.cacheCallBack.pop();
                        t.fail && t.fail(e);
                    }
                },
                complete: e => {
                    for (this.waitGetSetting = !1; this.cacheCallBack.length > 0; ) {
                        var t = this.cacheCallBack.pop();
                        t.complete && t.complete(e);
                    }
                }
            }));
        }
        getUserInfo(e) {
            e && null != this.cacheGetUserInfoRes ? e.success && e.success(this.cacheGetUserInfoRes) : this.api && this.api.getUserInfo({
                success: t => {
                    this.cacheGetUserInfoRes = t, e.success && e.success(this.cacheGetUserInfoRes);
                },
                fail: t => {
                    e.fail && e.fail(t);
                },
                complete: t => {
                    e.complete && e.complete(t);
                }
            });
        }
        createGridAd() {
            return null != this.api && this.api.hasOwnProperty("createGridAd") && null == this.gridAd ? (this.gridAd = this.api.createGridAd({
                adUnitId: "adunit-648e4ea83c800b09",
                adIntervals: 30,
                adTheme: "white",
                gridCount: 5,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                    opacity: .8
                }
            }), this.gridAd) : this.gridAd;
        }
        triggerGC() {
            return null == this.api ? null : this.api.triggerGC();
        }
        aldSendOpenid(e) {
            if (null != this.api && this.api.hasOwnProperty("aldSendOpenid")) return this.api.aldSendOpenid(e);
        }
        aldSendEvent(e, t) {}
        onShareAppMessage(e) {
            this.api && this.api.onShareAppMessage(e);
        }
        shareAppMessage(e) {
            this.api && this.api.shareAppMessage(e);
        }
        getUpdateManager() {
            return null != this.api && this.api.hasOwnProperty("getUpdateManager") ? super.getUpdateManager() : null;
        }
        getNetworkType(e) {
            return null != this.api && this.api.hasOwnProperty("getNetworkType") ? super.getNetworkType(e) : null;
        }
        onNetworkStatusChange(e) {
            return null != this.api && this.api.hasOwnProperty("onNetworkStatusChange") ? super.onNetworkStatusChange(e) : null;
        }
        createUserInfoButton(e) {
            return null != this.api && this.api.hasOwnProperty("createUserInfoButton") ? super.createUserInfoButton(e) : null;
        }
        createBannerAd(e) {
            return null != this.api && this.api.hasOwnProperty("createBannerAd") ? super.createBannerAd(e) : null;
        }
        createRewardedVideoAd(e) {
            return null != this.api && this.api.hasOwnProperty("createRewardedVideoAd") ? super.createRewardedVideoAd(e) : null;
        }
        navigateToMiniProgram(e) {
            return null != this.api && this.api.hasOwnProperty("navigateToMiniProgram") ? super.navigateToMiniProgram(e) : null;
        }
        openCustomerServiceConversation(e) {
            null != this.api && this.api.hasOwnProperty("openCustomerServiceConversation") && this.api.openCustomerServiceConversation(e);
        }
        createGameBanner(e) {
            return null != this.api && this.api.hasOwnProperty("createGameBanner") ? this.api.createGameBanner(e) : null;
        }
        createGamePortal(e) {
            return null != this.api && this.api.hasOwnProperty("createGamePortal") ? this.api.createGamePortal(e) : null;
        }
        createGameIcon(e) {
            if (null != this.api && this.api.hasOwnProperty("createGameIcon")) {
                for (var t = [], i = 0; i < 6; i++) {
                    var n = {
                        appNameHidden: !0,
                        color: "#ffffff",
                        size: 100,
                        borderWidth: -10,
                        borderColor: "#ff0000",
                        left: 20,
                        top: s.systemInfo.windowHeight - 2 * Math.floor(100 / s.systemInfo.pixelRatio) - 100 * i
                    };
                    t.push(n);
                }
                return this.api.createGameIcon({
                    adUnitId: e,
                    count: 6,
                    style: t
                });
            }
            return null;
        }
        loadSubpackage(e) {
            return null != this.api && this.api.hasOwnProperty("loadSubpackage") ? this.api.loadSubpackage(e) : (e.fail(), 
            null);
        }
        hasloadSubpackage() {
            return null != this.api && null != this.api.loadSubpackage;
        }
        createInterstitialAd(e) {
            return null != this.api && this.api.hasOwnProperty("createInterstitialAd") ? this.api.createInterstitialAd(e) : null;
        }
        getStorageSync(e) {
            return null != this.api && this.api.hasOwnProperty("getStorageSync") ? this.api.getStorageSync(e) : null;
        }
        setStorageSync(e, t) {
            null != this.api && this.api.hasOwnProperty("setStorageSync") && this.api.setStorageSync(e, t);
        }
        createCustomAd(e, t, i, n) {
            var a;
            if (null == a && null != this.api && this.api.hasOwnProperty("createCustomAd")) {
                let o;
                o = 3 == t ? {
                    left: i,
                    top: n,
                    width: .6 * s.systemInfo.windowWidth,
                    fixed: !1
                } : {
                    left: i,
                    top: n,
                    fixed: !1
                }, a = this.api.createCustomAd({
                    adUnitId: e,
                    adIntervals: 30,
                    style: o
                });
            }
            return a;
        }
        joinVoIPChat(e) {
            var t = {
                muteMicrophone: e.muteConfig.muteMicrophone,
                muteEarphone: e.muteConfig.muteSpeakerPhone
            };
            if (e.muteConfig = t, null != this.api && this.api.hasOwnProperty("joinVoIPChat")) return this.api.joinVoIPChat(e);
        }
        exitVoIPChat(e) {
            if (null != this.api && this.api.hasOwnProperty("exitVoIPChat")) return this.api.exitVoIPChat(e);
        }
        updateVoIPChatMuteConfig(e) {
            var t = {
                muteMicrophone: e.muteConfig.muteMicrophone,
                muteEarphone: e.muteConfig.muteSpeakerPhone
            };
            if (e.muteConfig = t, null != this.api && this.api.hasOwnProperty("updateVoIPChatMuteConfig")) return this.api.updateVoIPChatMuteConfig(e);
        }
        onVoIPChatMembersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("onVoIPChatMembersChanged")) return this.api.onVoIPChatMembersChanged(e);
        }
        onVoIPChatSpeakersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("onVoIPChatSpeakersChanged")) return this.api.onVoIPChatSpeakersChanged(e);
        }
        onVoIPChatStatusChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("onVoIPChatStatusChanged")) return this.api.onVoIPChatStatusChanged(e);
        }
        offVoIPChatSpeakersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("offVoIPChatSpeakersChanged")) return this.api.offVoIPChatSpeakersChanged(e);
        }
        offVoIPChatStatusChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("offVoIPChatStatusChanged")) return this.api.offVoIPChatStatusChanged(e);
        }
        offVoIPChatMembersChanged(e) {
            if (null != this.api && this.api.hasOwnProperty("offVoIPChatMembersChanged")) return this.api.offVoIPChatMembersChanged(e);
        }
        onVoIPChatInterrupted(e) {
            if (null != this.api && this.api.hasOwnProperty("onVoIPChatInterrupted")) return this.api.onVoIPChatInterrupted(e);
        }
        offVoIPChatInterrupted(e) {
            if (null != this.api && this.api.hasOwnProperty("offVoIPChatInterrupted")) return this.api.offVoIPChatInterrupted(e);
        }
        createGameClubButton() {
            return null == this.gameClubButton && null != s.systemInfo && null != this.api && this.api.hasOwnProperty("createGameClubButton") && (this.gameClubButton = this.api.createGameClubButton({
                icon: "light",
                style: {
                    left: 30 + s.fixStageX / s.systemInfo.pixelRatio,
                    top: s.systemInfo.windowHeight - 105,
                    width: 30,
                    height: 30
                }
            })), this.gameClubButton;
        }
    }
    class j {
        constructor() {
            this.recorder = null, this.playing = !1, this.recorderTime = 0, this.videoPath = "", 
            this.videoEnable = !0, this.newPath = "", this.maxLength = 240, this.recordClipTime = 0, 
            this.clipIndexList = [], this.isAuto = !1, this.autoTempLen = 0, this.autoBaseLen = 30, 
            this.autoMaxLen = 60, this.dicAuto = {}, this.curKillNum = 0, this.isShareGetRC = !1, 
            this.isStartClip = !1, this.ksrecording = !1, this.clipList = [], this.videoUrl = null, 
            this.ShareVideoCallback = null, d.Instance.Reg(a.GameRecorder_autoRecorder, e => {
                this.autoRecorder();
            }), d.Instance.Reg(a.GameRecorder_stopAutoRecorder, e => {
                this.stopAutoRecorder();
            }), d.Instance.Reg(a.GameRecorder_clearAuto, e => {
                this.clearAuto();
            }), d.Instance.Reg(a.GameRecorder_start, e => {
                this.start();
            }), d.Instance.Reg(a.GameRecorder_stop, e => {
                this.stop();
            }), d.Instance.Reg(a.GameRecorder_startClip, e => {
                this.setStartClip();
            }), d.Instance.Reg(a.GameRecorder_videoEnable, e => {
                this.videoEnable = e[0];
            });
        }
        static get Instance() {
            return null == this.instance && (j.instance = new j()), j.instance;
        }
        autoRecorder() {
            this.isAuto = !0, this.start();
        }
        stopAutoRecorder() {
            this.isAuto = !1, this.dicAuto = {}, this.stop();
        }
        clearAuto() {
            this.isShareGetRC = !1, this.curKillNum = 0, this.dicAuto = {};
        }
        waitStartAutoRecorder() {
            this.isAuto && this.autoRecorder();
        }
        addKillNum() {
            this.curKillNum++, this.autoTempLen = 5, this.curKillNum > 5 && (this.curKillNum = 5);
        }
        getVideoPath() {
            if (null != this.dicAuto) for (var e = 5; e >= 0; e--) if (null != this.dicAuto[e]) return this.dicAuto[e];
            return "";
        }
        init() {
            this.recorder = D.Instance.api.getGameRecorderManager(), null != this.recorder && (this.recorder.onStart(e => {
                console.log("recorder onStart"), this.newPath = "", this.playing = !0, this.recorderTime = 0, 
                this.recordClipTime = 0, this.clipIndexList = [], Laya.timer.clear(this, this.changeTime), 
                Laya.timer.loop(1e3, this, this.changeTime);
            }), this.recorder.onStop(e => {
                console.log("recorder onStop ", e.videoPath), Laya.timer.clear(this, this.changeTime), 
                this.recorderTime > 3 && this.recorder.clipVideo({
                    path: e.videoPath,
                    clipRange: this.clipIndexList,
                    success(e) {
                        j.Instance.newPath = e.videoPath, console.log("剪辑后的视频 " + e.videoPath);
                    },
                    fail(e) {
                        console.log("剪辑失败 " + e);
                    }
                }), this.playing = !1;
            }), this.recorder.onError(e => {
                Laya.timer.clear(this, this.changeTime), j.instance.playing = !1, console.log("recorder onError", e);
            }));
        }
        start() {
            this.isAuto = !1, null != this.recorder && (console.log("开始录制"), this.recorder.start({
                duration: this.maxLength
            }));
        }
        stop() {
            this.isAuto = !1, null != this.recorder && this.playing && (console.log("结束录制"), 
            this.recorderTime <= 3 && d.Instance.Send(a.UIGameTipsModel_SetTips, "视频录制时间需大于3秒！", 1e3), 
            this.recordClipTime > 1 ? this.recorder.recordClip({
                timeRange: [ this.recordClipTime - 1, 0 ],
                success(e) {
                    j.Instance.clipIndexList.push(e.index), j.Instance.recorder.stop();
                },
                fail(e) {
                    j.Instance.recorder.stop();
                }
            }) : this.recorder.stop());
        }
        getPath() {
            return this.newPath;
        }
        setStartClip() {
            this.isStartClip || (this.isStartClip = !0);
        }
        changeTime() {
            this.recorderTime++, this.recordClipTime++, this.recorder && this.playing && this.recordClipTime > 15 && this.isStartClip && (this.isStartClip = !1, 
            this.recordClipTime = 0, this.recorder.recordClip({
                timeRange: [ 5, 0 ],
                success(e) {
                    console.log(e.index), j.Instance.clipIndexList.push(e.index);
                }
            })), this.isAuto && (this.autoTempLen--, this.autoTempLen < 0 && (this.autoTempLen = 0), 
            (this.recorderTime >= this.autoBaseLen + this.autoTempLen || this.recorderTime >= this.autoMaxLen) && this.stop()), 
            this.recorderTime == this.maxLength && this.stop();
        }
        KsGameRecorderStart() {
            s.isKSPlatform && this.ksGameRecorderManager && (this.ksrecording || this.ksGameRecorderManager.start());
        }
        KsGameRecorderPause() {
            s.isKSPlatform && this.ksGameRecorderManager && this.ksGameRecorderManager.pause();
        }
        KsGameRecorderResume() {
            s.isKSPlatform && this.ksGameRecorderManager && this.ksGameRecorderManager.resume();
        }
        KsGameRecorderStop() {
            s.isKSPlatform && this.ksGameRecorderManager && this.ksGameRecorderManager.stop();
        }
        InitKsGameRecorder() {
            if (!s.isKSPlatform) return;
            if (this.ksGameRecorderManager = Laya.Browser.window.ks.getGameRecorder(), !this.ksGameRecorderManager) return;
            let e = this;
            this.ksGameRecorderManager.on("start", () => {
                console.log("录屏开始"), e.videoUrl = null, e.ksrecording = !0, e.ksVideoStartTime = new Date().getTime(), 
                e.clipList = [], d.Instance.Send(a.KsVideoRecordStart);
            }), this.ksGameRecorderManager.on("error", t => {
                t && (console.log("录屏错误", JSON.stringify(t)), e.videoUrl = null, t.error && t.error.code && -100015 == t.error.code && d.Instance.Send(a.UIGameTipsModel_SetTips, "录屏时间过短", 1500));
            }), this.ksGameRecorderManager.on("stop", t => {
                console.log("录屏结束"), e.ksrecording = !1, console.log(t), t && t.videoID ? (console.log(`videoID is ${t.videoID}`), 
                console.log("录屏停止，录制成功"), e.videoUrl = t.videoID, d.Instance.Send(a.KsVideoRecordStop)) : (e.videoUrl = null, 
                console.log("录屏停止，录制失败"), d.Instance.Send(a.KsVideoRecordStop));
            }), this.ksGameRecorderManager.on("pause", () => {
                console.log("暂停录制");
            }), this.ksGameRecorderManager.on("resume", () => {
                console.log("继续录制");
            }), this.ksGameRecorderManager.on("abort", () => {
                console.log("废弃已录制视频");
            });
        }
        ShareVedioKs(e) {
            if (!s.isKSPlatform) return;
            if (!this.ksGameRecorderManager) return;
            this.ShareVideoCallback = e;
            this.ksGameRecorderManager.publishVideo({
                video: this.videoUrl,
                callback: t => {
                    if (null != t && null != t) return console.log("分享录屏失败: " + JSON.stringify(t)), 
                    void (this.ShareVideoCallback && this.ShareVideoCallback(t.code));
                    console.log("分享录屏成功"), this.ShareVideoCallback && this.ShareVideoCallback(1), e && e();
                }
            });
        }
    }
    j.instance = null;
    class W extends D {
        constructor() {
            super();
        }
    }
    var X, K = Laya.Tween;
    class q {
        constructor() {}
        static findChild(e, t) {
            return e.name == t ? e : this._findChild(e._children, t);
        }
        static _findChild(e, t) {
            for (var i = [], s = 0; s < e.length; s++) {
                var n = e[s];
                if (n.name == t) return n;
                n.numChildren && (i = i.concat(n._children));
            }
            return i.length ? this._findChild(i, t) : null;
        }
        static getAnimator(e) {
            var t = e.getComponent(Laya.Animator);
            if (null == t) for (let i = 0; i < e.numChildren; i++) if (null != (t = this.getAnimator(e.getChildAt(i)))) return t;
            if (null != t) return t;
        }
        static getMeshRenderersByName(e, t) {
            var i = [];
            if (null == t || 0 == t.length) return i;
            for (let a = 0; a < e.numChildren; a++) {
                var s = e.getChildAt(a);
                if (-1 != t.indexOf(s.name)) i.push(s); else {
                    var n = this.getMeshRenderersByName(s, t);
                    null != n && (i = i.concat(n));
                }
            }
            return i;
        }
        static getFirstMeshRenderer(e) {
            var t;
            for (let i = 0; i < e.numChildren; i++) {
                if (e.getChildAt(i).skinnedMeshRenderer || e.getChildAt(i).meshRenderer) return e.getChildAt(i);
                if (null != (t = this.getFirstMeshRenderer(e.getChildAt(i)))) return t;
            }
            if (null != t) return t;
        }
        static getMeshRenderer(e) {
            var t = [];
            for (let i = 0; i < e.numChildren; i++) e.getChildAt(i).skinnedMeshRenderer || e.getChildAt(i).meshRenderer ? t.push(e.getChildAt(i)) : t.push(this.getMeshRenderer(e.getChildAt(i)));
            return t;
        }
        static changeTimeByServer(e) {
            var t = Math.round((e - w.Instance.severTime) / 1e3);
            return this.changeTime(t);
        }
        static changeTimeSecondByServer(e) {
            var t = Math.round((1e3 * e - w.Instance.severTime) / 1e3);
            return this.changeBigTime(t);
        }
        static changeBigTime(e) {
            var t = "";
            if (e <= 0) t = "已结束"; else if (e <= 60) t = "1分钟"; else if (e <= 3600) t = "1小时"; else if (e <= 86400) {
                t = e % 3600 + "小时";
            } else {
                t = Math.floor(e / 3600 / 24) + "天";
            }
            return t;
        }
        static formatDate(e) {
            var t = new Date(e);
            return t.getFullYear() + "-" + ((t.getMonth() + 1 < 10 ? "0" + (t.getMonth() + 1) : t.getMonth() + 1) + "-") + (t.getDate() < 10 ? "0" + t.getDate() : t.getDate()) + " " + ((t.getHours() < 10 ? "0" + t.getHours() : t.getHours()) + ":") + ((t.getMinutes() < 10 ? "0" + t.getMinutes() : t.getMinutes()) + ":") + (t.getSeconds() < 10 ? "0" + t.getSeconds() : t.getSeconds());
        }
        static formatTimeToC(e) {
            var t = "";
            if (e <= 0) t = "已结束"; else if (e <= 60) t = e + "秒"; else if (e <= 3600) t = Math.floor(e / 60) + "分钟"; else if (e <= 86400) {
                t = Math.floor(e / 3600) + "小时";
            } else {
                t = Math.floor(e / 3600 / 24) + "天";
            }
            return t;
        }
        static ChangeHourMinutestr(e) {
            var t = "";
            return e <= 60 && (t = (e % 60 < 10 ? "0" + e % 60 : e % 60) + ":"), t;
        }
        static changeTime(e) {
            var t = "";
            if (e <= 60) t = "00:" + (e % 60 < 10 ? "0" + e % 60 : e % 60); else if (e <= 3600) t = (Math.floor(e / 60) < 10 ? "0" + Math.floor(e / 60) : Math.floor(e / 60)) + ":" + (e % 60 < 10 ? "0" + e % 60 : e % 60); else {
                var i = e % 3600;
                t = (Math.floor(e / 3600) < 10 ? "0" + Math.floor(e / 3600) : Math.floor(e / 3600)) + ":" + (Math.floor(i / 60) < 10 ? "0" + Math.floor(i / 60) : Math.floor(i / 60)) + ":" + (i % 60 < 10 ? "0" + i % 60 : i % 60);
            }
            return t;
        }
        static GetDateString(e) {
            var t = new Date(1e3 * e);
            return t.getFullYear() + "年" + (t.getMonth() + 1) + "月" + t.getDate() + "日" + t.getHours() + "时";
        }
        static GetDateString2(e) {
            var t = new Date(1e3 * e);
            return t.getMonth() + 1 + "月" + t.getDate() + "日" + t.getHours() + "时" + t.getMinutes() + "分";
        }
        static GetToayEndTime() {
            var e = new Date(1e3 * w.Instance.severTime), t = 24 - e.getHours() - 1, i = 60 - e.getMinutes() - 1, s = 60 - e.getSeconds();
            return w.Instance.severTime + 3600 * t + 60 * i + s;
        }
        static NumToString(e) {
            var t = "";
            switch (e) {
              case 1:
                t = "一";
                break;

              case 2:
                t = "二";
                break;

              case 3:
                t = "三";
                break;

              case 4:
                t = "四";
                break;

              case 5:
                t = "五";
                break;

              case 6:
                t = "六";
                break;

              case 7:
                t = "七";
                break;

              case 8:
                t = "八";
                break;

              case 9:
              default:
                t = "九";
            }
            return t;
        }
        static getFixedMode() {
            return console.log("ttad1 大小" + s.systemInfo.windowWidth / s.systemInfo.windowHeight), 
            s.is4399H5Platform || s.isH5Test || s.isPCPlatform ? Laya.Stage.SCALE_SHOWALL : s.onMiniGame && s.systemInfo.windowWidth / s.systemInfo.windowHeight <= 1.55 ? Laya.Stage.SCALE_FIXED_WIDTH : Laya.Stage.SCALE_FIXED_HEIGHT;
        }
        static fixedFullBG(e, t) {
            if (Laya.stage.scaleMode == Laya.Stage.SCALE_FIXED_HEIGHT) {
                if (null != t) for (var i = 0; i < t.length; i++) {
                    null != (n = e[t[i]]) && (n.x -= s.fixStageX, n.width = Laya.stage.designWidth + 2 * s.fixStageX);
                }
            } else if (null != t) for (i = 0; i < t.length; i++) {
                var n;
                null != (n = e[t[i]]) && (n.y -= s.fixStageY, n.height = Laya.stage.designHeight + 2 * s.fixStageY);
            }
        }
        static fixedCurSceneBG(e) {
            s.curScene && s.curScene.img_backbg && (s.curScene.img_backbg.skin = e ? "bigpic/zqzb_bg_001.jpg" : s.curGameScene == i.HomeScene ? "login/beijing.jpg" : "login/tongyong_bg_004.jpg");
        }
        static FixEdges(e, t, i) {
            return i < e ? e : i > t ? t : Math.floor(i);
        }
        static VectorNormal(e, t, i) {
            if (0 != e || 0 != t) {
                var s = Math.sqrt(e * e + t * t);
                i.x = e / s, i.y = t / s;
            }
        }
        static changeAngleNormal(e, t) {
            if (0 == e || 360 == e) return t;
            var i = 2 * u.PI / 360 * e, s = u.Sin(i), n = u.Cos(i), a = 0 == n ? 0 : (0 == s ? 0 : 100 / s) * n;
            return q.VectorNormal(a, 100, t), t;
        }
        static changeVectorAngle(e, t, i) {
            i.x = e.x, i.y = e.y;
            var s = 2 * u.PI / 360 * t;
            t > 0 ? (i.x = e.x * u.Cos(s) - e.y * u.Sin(s), i.y = e.x * u.Sin(s) + e.y * u.Cos(s)) : (i.x = e.x * u.Cos(s) + e.y * u.Sin(s), 
            i.y = -e.x * u.Sin(s) + e.y * u.Cos(s));
        }
        static changeVectorAngleTo270(e) {
            e.x, e.y;
            return {
                x: e.x * q.cos270 - e.y * q.sin270,
                y: e.x * q.sin270 + e.y * q.cos270
            };
        }
        static changeVectorAngleTo240(e) {
            e.x, e.y;
            return {
                x: e.x * q.cos240 - e.y * q.sin240,
                y: e.x * q.sin240 + e.y * q.cos240
            };
        }
        static changeVectorAngleTo120(e) {
            e.x, e.y;
            return {
                x: e.x * q.cos120 - e.y * q.sin120,
                y: e.x * q.sin120 + e.y * q.cos120
            };
        }
        static changeVectorAngleTo45(e) {
            e.x, e.y;
            return {
                x: e.x * q.cos45 - e.y * q.sin45,
                y: e.x * q.sin45 + e.y * q.cos45
            };
        }
        static changeVectorRotate(e, t, i, s) {
            var n = 2 * u.PI / 360 * s, a = u.Cos(n), o = u.Sin(n), l = e.x - t, h = e.y - i;
            return {
                x: a * l - o * h + t,
                y: o * l + a * h + i
            };
        }
        static GetAngleByPos(e, t) {
            return 180 * Math.atan2(t.y - e.y, t.x - e.x) / u.PI;
        }
        static TransformDirection(e) {
            e.x = e.x < 0 ? Math.abs(e.x) : -e.x, e.y = e.y < 0 ? Math.abs(e.y) : -e.y;
        }
        static viewAngleChange(e) {
            return e;
        }
        static lookAtAngle(e, t) {
            var i = 0;
            if (t.x == e.x && t.y == e.y) return i;
            var s = {
                x: 0,
                y: 0
            };
            return q.VectorNormal(t.x - e.x, t.y - e.y, s), (i = 90 + q.GetAngleByPos({
                x: e.x + s.x,
                y: e.y + s.y
            }, {
                x: e.x,
                y: e.y
            })) < 0 && (i = 360 + i), i;
        }
        static getPlatfromName() {
            return s.isOppoPlatform ? "oppo" : s.isVivoPlatform ? "vivo" : s.isAppPlatform ? "mgc" : s.isWXPlatform ? "wx" : s.isTTPlatform ? s.isTTNMLogin ? "ttnm" : "tt" : s.is4399H5Platform ? "4399h5" : s.isH5Platform ? "h5" : s.isKSPlatform ? "ks" : "pc";
        }
        static oppoInstallShortcut() {
            (s.isOppoPlatform || s.isVivoPlatform) && Laya.Browser.window.qg.hasShortcutInstalled({
                success: function(e) {
                    0 == e && Laya.Browser.window.qg.installShortcut({
                        success: function() {},
                        fail: function(e) {},
                        complete: function() {}
                    });
                },
                fail: function(e) {},
                complete: function() {}
            });
        }
        static oppoInstallShortcutVisible(e) {
            s.isOppoPlatform || s.isVivoPlatform ? Laya.Browser.window.qg.hasShortcutInstalled({
                success: function(t) {
                    e.visible = !t;
                },
                fail: function(e) {},
                complete: function() {}
            }) : e.visible = !1;
        }
        static AnimationScale(e) {
            if (null != e) {
                K.clearAll(e);
                var t = 1;
                e.scaleX < 0 && (t = -1), K.to(e, {
                    scaleX: 1.2 * t
                }, 100, null, null, 0), K.to(e, {
                    scaleX: 1 * t
                }, 100, null, null, 100);
            }
        }
        static AnimationRotation(e) {
            null != e && (K.clearAll(e), K.to(e, {
                rotation: 4
            }, 100, null, null, 0), K.to(e, {
                rotation: 0
            }, 100, null, null, 100), K.to(e, {
                rotation: -4
            }, 100, null, null, 200), K.to(e, {
                rotation: 0
            }, 100, null, null, 300));
        }
        static AnimationEnd(e, t) {
            if (null != e) {
                K.clearAll(e), e.alpha = 1;
                var i = e.y - 120;
                K.to(e, {
                    y: i
                }, 1500, null, null, 0);
                K.to(e, {
                    alpha: 0
                }, 500, null, Laya.Handler.create(this, (e, t) => {
                    t && t();
                }, [ e, t ]), 1e3);
            }
        }
        static AnimationDamage(e, t, i, s) {
            if (null != e) {
                K.clearAll(e), e.alpha = 1, e.scaleX = .5 + i, e.scaleY = .5 + i;
                var n = e.x + 80 * (t ? 1 : -1), a = e.y - 100, o = e.y - 70;
                K.to(e, {
                    x: n
                }, 300, null, null, 0), K.to(e, {
                    y: a,
                    scaleX: i + (t ? 1.2 : 1),
                    scaleY: i + (t ? 1.2 : 1)
                }, 200, null, null, 0), K.to(e, {
                    y: o,
                    scaleX: i + (t ? 1 : .8),
                    scaleY: i + (t ? 1 : .8)
                }, 300, null, null, 200), K.to(e, {
                    alpha: 0
                }, 500, null, Laya.Handler.create(this, (e, t) => {
                    t && t();
                }, [ e, s ]), 500);
            }
        }
        static checkHitBuffData(e) {
            return 0 == e.countType ? e.addCount > 0 : e.addCount <= e.addMaxCount;
        }
        static scalarLength(e) {
            e.y = 0;
            var t = 2 - Laya.Vector3.scalarLength(e);
            Laya.Vector3.scale(e, t, e), t = 2 - Laya.Vector3.scalarLength(e), Laya.Vector3.scale(e, t, e);
        }
        static getSoundType(e) {
            if (null != e && "" != e) return s.isAppPlatform ? e = (e = e.replace("sound", "sound_wav")).replace(".mp3", ".wav") : e;
        }
    }
    q.sin270 = -1, q.cos270 = 0, q.sin240 = -.866, q.cos240 = -.5, q.sin120 = .866, 
    q.cos120 = -.5, q.sin30 = .5, q.cos30 = .866, q.sin45 = .7071, q.cos45 = .7071;
    class z {
        constructor() {
            this.isInit = !1, this.isInitComplete = !1, this.heightMapWidth = 0, this.heightMapHeight = 0, 
            this.terrainMinX = 0, this.terrainMinZ = 0, this.curGrid = new Laya.Vector2();
        }
        static get Instance() {
            return null == this.instance && (z.instance = new z()), z.instance;
        }
        init(e, t) {
            this.isInit ? t && t() : (this.tempCall = t, this.isInit = !0, this.isInitComplete = !1, 
            this.sceneTerrainData = e, Laya.loader.create([ {
                url: this.sceneTerrainData.heightmapPath,
                clas: Laya.Texture2D,
                priority: 1,
                constructParams: [ 0, 0, 1, !1, !0 ]
            } ], Laya.Handler.create(this, this.createHeightMap)));
        }
        createHeightMap() {
            var e = Laya.Loader.getRes(this.sceneTerrainData.heightmapPath);
            this.heightMap = this.createFromImage(e, this.sceneTerrainData.terrainHeightMin, this.sceneTerrainData.terrainHeightMax), 
            this.heightMapWidth = e.width, this.heightMapHeight = e.height, this.terrainMinX = this.sceneTerrainData.terrainMinX, 
            this.terrainMinZ = this.sceneTerrainData.terrainMinZ, this.terrainCellX = this.sceneTerrainData.terrainWidth / this.heightMapWidth, 
            this.terrainCellZ = this.sceneTerrainData.terrainLength / this.heightMapHeight, 
            this.tempCall && this.tempCall(), this.tempCall = null;
        }
        createFromImage(e, t, i) {
            this.isInitComplete = !0, this.textureHalfWidth = Math.floor(e.width), this.textureHalfHeight = Math.floor(e.height);
            for (var s = new Laya.HeightMap(this.textureHalfWidth, this.textureHalfHeight, t, i), n = i / 254, a = e.getPixels(), o = 0, l = 0; l < this.textureHalfHeight; l++) for (var h = s._datas[l] = [], r = 0; r < this.textureHalfWidth; r++) {
                var c = a[o++], d = a[o++], p = a[o++], m = a[o++];
                if (255 == c && 255 == d && 255 == p && 255 == m) h[r] = NaN; else if (0 == c && 0 == d && 0 == p && 255 == m) h[r] = NaN; else {
                    var g = u.decimalRound(c * n + t);
                    h[r] = c != p ? 100 * p + g : g;
                }
            }
            return s;
        }
        getHeightMap(e, t, i) {
            if (!this.isInitComplete) return i || NaN;
            if (this.getGridIndex(-1 * e, t, this.curGrid), null != this.heightMap) {
                var s = this.heightMap.getHeight(this.curGrid.x, this.curGrid.y);
                if (!isNaN(s)) return s;
            }
            return i || NaN;
        }
        getGridIndex(e, t, i) {
            var s = Math.floor((e - this.terrainMinX) / this.terrainCellX), n = this.heightMapHeight - Math.floor((t - this.terrainMinZ) / this.terrainCellZ);
            return i.setValue(n, s), i;
        }
        getHeightValue(e, t) {
            return this.getGridIndex(-e, t, this.curGrid), this.curGrid.x < 0 || this.curGrid.x > this.textureHalfWidth || this.curGrid.y < 0 || this.curGrid.y > this.textureHalfHeight ? 9999 : null != this.heightMap ? this.heightMap.getHeight(this.curGrid.x, this.curGrid.y) : 9999;
        }
    }
    z.instance = null;
    class Y {
        constructor() {
            this.scene2D = new Laya.Sprite(), this.mainCameraFloorPos = new Laya.Vector3(), 
            this.mainCameraInitRotationEuler = new Laya.Vector3(), this.mainCameraPos = new Laya.Vector3(), 
            this.mainCameraForward = new Laya.Vector3(), this.mainCameraForwardScale = new Laya.Vector3(), 
            this.mainCameraFixRotation = !1, this.mainCameraFinalPosition = new Laya.Vector3(), 
            this.cameraFixPosDir = new Laya.Vector3(), this.cameraLookPos = new Laya.Vector3(), 
            this.checkRay = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3()), this.mapMoveIng = !1, 
            this.isDeadMoveIng = !1, this.downMousePos = new Laya.Vector2(), this.dirX = 0, 
            this.dirY = 0, this.joyDiretion = new Laya.Vector2(), this.joy3DDiretion = new Laya.Vector3(), 
            this.joyCameraDiretion = new Laya.Vector3(), this.cacheLookViewPos = new Laya.Vector3(), 
            this.isDestroy = !1, this.pointKey = [ "point_ab1", "point_ab2", "point_ab3", "point_bb1", "point_bb2", "point_bb3", "point_ac", "point_bc" ], 
            this.pointDic = {}, this.grassName = [ "u_caocong01", "u_caocong01 (1)", "u_caocong01 (2)", "u_caocong01 (3)" ];
        }
        static get Instance() {
            return null == this.instance && (Y.instance = new Y()), Y.instance;
        }
        loadScene(e, t) {
            this.completeHandler = t, this.sceneTerrainData = e, this.isDestroy = !1, Laya.Scene.open("scenes/s_Dungeon.scene", !0, null, Laya.Handler.create(this, e => {
                s.curScene = e, s.curScene.x += s.fixStageX, s.curGameScene = i.FightScene, e.autoDestroyAtClosed = !0, 
                w.Instance.GetNetMsgData("c2s_set_chat_state").Send({
                    type: 0
                }), console.log("不接收世界聊天"), s.fixStageY > 0 && (e.y = s.fixStageY), Laya.Scene3D.load(this.sceneTerrainData.scenePath, Laya.Handler.create(this, this.sceneLoadFinished));
            }));
        }
        clear() {
            this.mapMoveIng = !1, this.isDestroy = !0, this.scene3D && (this.scene3D.removeSelf(!0), 
            this.scene3D.destroy(!0)), this.scene2D && this.scene2D.removeSelf(), this.mainCamera = null;
        }
        sceneLoadFinished(e) {
            this.isDestroy ? this.clear() : (this.scene3D = e, Laya.stage.addChild(e), Laya.stage.addChild(this.scene2D), 
            this.mainCamera = e.getChildByName("Main Camera"), this.mainCameraInitRotationEuler.setValue(this.mainCamera.transform.rotationEuler.x, this.mainCamera.transform.rotationEuler.y, this.mainCamera.transform.rotationEuler.z), 
            z.Instance.init(this.sceneTerrainData, () => {
                this.loadScenePoint(), this.completeHandler && this.completeHandler.run();
            }));
        }
        loadScenePoint() {
            var e = this.scene3D;
            for (let i = 0; i < this.pointKey.length; i++) {
                const s = this.pointKey[i];
                var t = e.getChildByName(s);
                null != t && (this.pointDic[s] = new Laya.Vector3(u.decimalRound(t.transform.position.x), u.decimalRound(t.transform.position.y), u.decimalRound(t.transform.position.z)), 
                this.pointDic[s].y = z.Instance.getHeightMap(this.pointDic[s].x, this.pointDic[s].z, this.pointDic[s].y));
            }
            var i = e.getChildByName("point_pathl");
            if (null != i) {
                var s;
                this.point_pathl = [], this.point_pathr = [];
                for (let e = 0; e < 16 && null != (s = i.getChildAt(e)); e++) {
                    var n = new Laya.Vector3(u.noDecimalRound(s.transform.position.x), 0, u.noDecimalRound(s.transform.position.z)), a = new Laya.Vector3(-1 * n.x, n.y, n.z);
                    this.point_pathl.push(n), this.point_pathr.push(a);
                }
            }
        }
        addChild(e) {
            this.scene3D && this.scene3D.addChild(e);
        }
        addChild2D(e) {
            this.scene2D && this.scene2D.addChild(e);
        }
        setCameraEulerByTeam(e) {
            this.mainCamera && (this.mainCameraFixRotation = 2 == e, this.mainCamera.transform.getForward(this.mainCameraForward), 
            this.mainCameraFixRotation ? this.mainCamera.transform.rotationEuler = new Laya.Vector3(-1 * (this.mainCameraInitRotationEuler.x + 180), this.mainCameraInitRotationEuler.y, this.mainCameraInitRotationEuler.z + 180) : this.mainCamera.transform.rotationEuler = new Laya.Vector3(this.mainCameraInitRotationEuler.x, this.mainCameraInitRotationEuler.y, this.mainCameraInitRotationEuler.z), 
            this.mainCamera.transform.getForward(this.mainCameraForward), this.mainCameraHeight = Math.abs((this.mainCamera.transform.position.y - this.sceneTerrainData.terrainHeightMin) / this.mainCameraForward.y), 
            Laya.Vector3.scale(this.mainCameraForward, this.mainCameraHeight, this.mainCameraForwardScale), 
            Laya.Vector3.transformQuat(new Laya.Vector3(0, 0, 1), this.mainCamera.transform.rotation, this.cameraFixPosDir), 
            q.scalarLength(this.cameraFixPosDir), Laya.Vector3.scale(this.cameraFixPosDir, 1.5, this.cameraFixPosDir)), 
            this.setGrassEuler();
        }
        setGrassEuler() {
            if (this.mainCameraFixRotation) for (let s = 0; s < this.grassName.length; s++) {
                var e = this.scene3D.getChildByName("dibiao");
                if (e) {
                    var t = e.getChildByName(this.grassName[s]);
                    if (t) for (let e = 0; e < 4; e++) {
                        var i = t.getChildAt(e);
                        i && (i.transform.rotationEuler = new Laya.Vector3(-1 * i.transform.rotationEuler.x, i.transform.rotationEuler.y, i.transform.rotationEuler.z));
                    }
                }
            }
        }
        lookAt(e, t) {
            t && (this.cacheLookViewPos = e), this.isDeadMoveIng && (this.isDeadMoveIng = !1), 
            this.mapMoveIng || (Laya.Vector3.subtract(e, this.cameraFixPosDir, this.cameraLookPos), 
            Laya.Vector3.subtract(this.cameraLookPos, this.mainCameraForwardScale, this.mainCameraPos), 
            this.mainCamera.transform.position = this.mainCameraPos);
        }
        cameraMovePos(e) {
            null != this.mainCamera && null != this.mainCamera.transform && (this.mapMoveIng = !0, 
            Laya.Vector3.subtract(e, this.mainCameraForwardScale, this.mainCameraPos), this.mainCameraFinalPosition.setValue(this.mainCamera.transform.position.x, this.mainCamera.transform.position.y, this.mainCamera.transform.position.z), 
            Laya.Tween.to(this.mainCameraFinalPosition, {
                x: this.mainCameraPos.x,
                z: this.mainCameraPos.z
            }, 1e3).update = new Laya.Handler(this, () => {
                this.mainCamera && (this.mainCamera.transform.position = this.mainCameraFinalPosition);
            }));
        }
        Pos3DTo2D(e, t) {
            this.mainCamera && (this.mainCamera.viewport.project(e, this.mainCamera.projectionViewMatrix, t), 
            (s.isOppoPlatform || s.isVivoPlatform || s.isH5Test || s.is4399H5Platform || s.isPCPlatform) && (t.x /= Laya.stage.clientScaleX, 
            t.y /= Laya.stage.clientScaleY));
        }
        Pos2DTo3D(e, t, i) {
            if (this.mainCamera) {
                (s.isOppoPlatform || s.isVivoPlatform || s.isH5Test || s.is4399H5Platform || s.isPCPlatform) && (e.x *= Laya.stage.clientScaleX, 
                e.y *= Laya.stage.clientScaleY), this.mainCamera.viewportPointToRay(e, this.checkRay);
                var n = (t - this.checkRay.origin.y) / this.checkRay.direction.y;
                i.x = this.checkRay.origin.x + this.checkRay.direction.x * n, i.y = this.checkRay.origin.y + this.checkRay.direction.y * n, 
                i.z = this.checkRay.origin.z + this.checkRay.direction.z * n;
            }
            return i;
        }
        MoveView(e, t) {
            if (!this.mapMoveIng) {
                if (this.touchInfo = null, this.touchID = e.touchId, null != e.touches) for (var i = 0; i < e.touches.length; i++) if (this.touchID == e.touches[i].identifier) {
                    this.touchInfo = e.touches[i];
                    break;
                }
                this.downMousePos.x = null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX, 
                this.downMousePos.y = null == this.touchInfo ? Laya.stage.mouseY : this.touchInfo.stageY, 
                this.mapMoveIng = !0, this.isDeadMoveIng = t, Laya.stage.timer.frameLoop(1, this, this.touchLoop), 
                Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.touchMove), Laya.stage.on(Laya.Event.MOUSE_UP, this, this.MoveViewEnd), 
                Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.MoveViewEnd), Laya.Vector3.add(this.mainCameraPos, this.mainCameraForwardScale, this.mainCameraFloorPos), 
                d.Instance.Send(a.FightManager_CheckUnitInViewRange);
            }
        }
        MoveViewEnd(e) {
            this.mapMoveIng = !1, d.Instance.Send(a.FightManager_CheckUnitInViewRange), e && this.touchID != e.touchId || (Laya.stage.timer.clear(this, this.touchLoop), 
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.touchMove), Laya.stage.off(Laya.Event.MOUSE_UP, this, this.MoveViewEnd), 
            Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.MoveViewEnd), this.touchID = -1, 
            this.isDeadMoveIng || this.lookAt(this.cacheLookViewPos));
        }
        touchMove(e) {
            if (this.touchID == e.touchId && (this.touchInfo = null, null != e.touches)) for (var t = 0; t < e.touches.length; t++) if (this.touchID == e.touches[t].identifier) {
                this.touchInfo = e.touches[t];
                break;
            }
        }
        touchLoop() {
            -1 != this.touchID && null != this.mainCamera && null != this.mainCamera.transform && (this.dirX = (null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX) - this.downMousePos.x, 
            this.dirY = (null == this.touchInfo ? Laya.stage.mouseY : this.touchInfo.stageY) - this.downMousePos.y, 
            this.downMousePos.x = null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX, 
            this.downMousePos.y = null == this.touchInfo ? Laya.stage.mouseY : this.touchInfo.stageY, 
            0 == this.dirX && 0 == this.dirY || (q.VectorNormal(this.dirX, this.dirY, this.joyDiretion), 
            this.joy3DDiretion.setValue(this.joyDiretion.x, 0, this.joyDiretion.y), Laya.Vector3.transformQuat(this.joy3DDiretion, this.mainCamera.transform.rotation, this.joyCameraDiretion), 
            q.scalarLength(this.joyCameraDiretion), this.mainCameraPos.x += this.joyCameraDiretion.x * (this.isDeadMoveIng ? -1 : 1), 
            this.mainCameraPos.z += this.joyCameraDiretion.z * (this.isDeadMoveIng ? -1 : 1), 
            this.moveCamera() || (this.mainCameraPos.x += this.joyCameraDiretion.x * (this.isDeadMoveIng ? -1 : 1), 
            this.moveCamera() || (this.mainCameraPos.z += this.joyCameraDiretion.z * (this.isDeadMoveIng ? -1 : 1), 
            this.moveCamera()))));
        }
        moveCamera() {
            return Laya.Vector3.add(this.mainCameraPos, this.mainCameraForwardScale, this.mainCameraFloorPos), 
            9999 != z.Instance.getHeightValue(this.mainCameraFloorPos.x, this.mainCameraFloorPos.z) ? (this.mainCamera.transform.position = this.mainCameraPos, 
            d.Instance.Send(a.FightManager_CheckUnitInViewRange), !0) : (this.mainCameraPos.x = this.mainCamera.transform.position.x, 
            this.mainCameraPos.z = this.mainCamera.transform.position.z, !1);
        }
    }
    Y.instance = null, Y.mapID_55 = 1055, Y.mapID_33 = 1033, Y.mapID_11 = 1011, Y.mapID_sh = 1036, 
    Y.curMapID = 1055;
    class J {
        constructor() {
            this.unitID = 0, this.baseID = 0, this.modelID = 0, this.classType = 0, this.unitType = 0, 
            this.isYCUnit = 0, this.skill = [], this.aiTraceDis = 4, this.moveBaseSpeed = 2, 
            this.atkSpeed = 1, this.atkSpeedRange = [], this.skCD = 1, this.hp = 0, this.phyAtk = 0, 
            this.phyDef = 0, this.magAtk = 0, this.magDef = 0, this.penetratePhyDef = 0, this.penetrateMagDef = 0, 
            this.ignorePhyDef = 0, this.ignoreMagDef = 0, this.superAtk = 0, this.superAtkRatio = 1.5, 
            this.phyAtkRecoverHP = 0, this.magAtkRecoverHP = 0, this.recovertimeHp = 0, this.killExp = 0, 
            this.killCoin = 0, this.atkkillExp = 0, this.atkkillCoin = 0, this.lvData = [];
        }
    }
    class Q {
        constructor() {
            this.isLoadComplete = !1, this._heroShowList = [], this._heroShowList_sh = [], this.skinMap = {}, 
            this.skinMap_sh = {}, this.skinBaseIdMap = {};
        }
        static get Instance() {
            return null == this.instance && (Q.instance = new Q()), Q.instance;
        }
        get heroShowList() {
            return Y.curMapID == Y.mapID_sh ? this._heroShowList_sh : this._heroShowList;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/unitAttribute.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON), 
            Laya.loader.load("config/unitAttribute_sh.json", Laya.Handler.create(this, this.loadComplete_sh), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            if (null != e) {
                if (this.isLoadComplete = !0, this.configData = {}, null != e.data) for (let t = 0; t < e.data.length; t++) {
                    let i = e.data[t];
                    i.baseID = i.unitID, this.configData[i.unitID] = i;
                }
                if (this.skinMap = e.skinMap, this.skinMap) for (const e in this.skinMap) {
                    const i = this.skinMap[e];
                    if (i) for (let s = 0; s < i.length; s++) {
                        const n = i[s];
                        var t = this.deepCopy(this.configData[e]);
                        t && (this.skinBaseIdMap[n.unitID] = parseInt(e), t.unitID = n.unitID, t.modelID = n.modelID, 
                        t.hp += n.addHp, t.phyAtk += n.addAtkPhy, t.magAtk += n.addAtkMag, this.configData[n.unitID] = t);
                    }
                }
                this._heroShowList = e.heroShowList, s.isWXPlatform && s.isGs && (this._heroShowList = [ 1 ], 
                this.skinMap = {});
            } else console.log("config/unitAttribute.json load fail!");
            this.callBack && this.callBack();
        }
        loadComplete_sh(e) {
            if (null != e) {
                if (this.isLoadComplete = !0, this.configData_sh = {}, null != e.data) for (let t = 0; t < e.data.length; t++) {
                    let i = e.data[t];
                    i.baseID = i.unitID, this.configData_sh[i.unitID] = i;
                }
                if (this.skinMap_sh = e.skinMap, this.skinMap_sh) for (const e in this.skinMap_sh) {
                    const i = this.skinMap_sh[e];
                    if (i) for (let s = 0; s < i.length; s++) {
                        const n = i[s];
                        var t = this.deepCopy(this.configData_sh[e]);
                        t && (t.unitID = n.unitID, t.modelID = n.modelID, t.hp += n.addHp, t.phyAtk += n.addAtkPhy, 
                        t.magAtk += n.addAtkMag, this.configData_sh[n.unitID] = t);
                    }
                }
                this._heroShowList_sh = e.heroShowList, s.isWXPlatform && s.isGs && (this._heroShowList_sh = [ 1 ], 
                this.skinMap = {});
            } else console.log("config/unitAttribute_sh.json load fail!");
            this.callBack && this.callBack();
        }
        getUnitAttribute(e) {
            return Y.curMapID == Y.mapID_sh ? this.configData_sh[e] : this.configData[e];
        }
        getUnitSkinInfo(e) {
            return Y.curMapID == Y.mapID_sh ? this.skinMap_sh[e] : this.skinMap[e];
        }
        getBaseID(e) {
            return this.skinBaseIdMap[e] ? this.skinBaseIdMap[e] : e;
        }
        deepCopy(e) {
            if (null != e) {
                var t = new J();
                return t.unitID = e.unitID, t.baseID = e.baseID, t.modelID = e.modelID, t.unitType = e.unitType, 
                t.isYCUnit = e.isYCUnit, t.skill = e.skill, t.aiTraceDis = e.aiTraceDis, t.moveBaseSpeed = e.moveBaseSpeed, 
                t.atkSpeed = e.atkSpeed, t.atkSpeedRange = e.atkSpeedRange, t.skCD = e.skCD, t.hp = e.hp, 
                t.phyAtk = e.phyAtk, t.phyDef = e.phyDef, t.magAtk = e.magAtk, t.magDef = e.magDef, 
                t.penetratePhyDef = e.penetratePhyDef, t.penetrateMagDef = e.penetrateMagDef, t.ignorePhyDef = e.ignorePhyDef, 
                t.ignoreMagDef = e.ignoreMagDef, t.superAtk = e.superAtk, t.superAtkRatio = e.superAtkRatio, 
                t.phyAtkRecoverHP = e.phyAtkRecoverHP, t.magAtkRecoverHP = e.magAtkRecoverHP, t.recovertimeHp = e.recovertimeHp, 
                t.killExp = e.killExp, t.killCoin = e.killCoin, t.atkkillExp = e.atkkillExp, t.atkkillCoin = e.atkkillCoin, 
                t.lvData = e.lvData, t.classType = e.classType, t;
            }
        }
    }
    Q.instance = null, function(e) {
        e[e.gold = 1] = "gold", e[e.diamond = 2] = "diamond", e[e.lv = 3] = "lv", e[e.exp = 4] = "exp", 
        e[e.relive = 5] = "relive", e[e.czzl = 6] = "czzl", e[e.pfsp = 7] = "pfsp", e[e.yxsp = 8] = "yxsp", 
        e[e.yxdq = 9] = "yxdq", e[e.cbym = 10] = "cbym", e[e.menpiao = 11] = "menpiao", 
        e[e.bbt1 = 12] = "bbt1", e[e.bbt2 = 13] = "bbt2", e[e.item1 = 14] = "item1", e[e.item2 = 15] = "item2", 
        e[e.zysp = 16] = "zysp", e[e.dhwjsp = 18] = "dhwjsp", e[e.pintu1 = 20] = "pintu1", 
        e[e.pintu2 = 21] = "pintu2", e[e.pintu3 = 22] = "pintu3", e[e.pintu4 = 23] = "pintu4", 
        e[e.bdsp = 24] = "bdsp", e[e.tigersp = 25] = "tigersp", e[e.YGBHsp = 26] = "YGBHsp", 
        e[e.bsxg = 27] = "bsxg", e[e.bsyl = 28] = "bsyl";
    }(X || (X = {}));
    class Z {
        constructor() {
            this.rank = 0, this.gold = -1, this.diamond = 0, this.yb = 0, this.menpiao = 0, 
            this.shModelCurLv = 0, this.shModelMaxLv = 0, this.heroSP = 0, this.skinSP = 0, 
            this.wingSP = 0, this.bbt1 = 0, this.bbt2 = 0, this.mwInfo = {}, this.reliveCoin = 0, 
            this.reliveCurGet = 0, this.reliveLimit = 0, this.lv = 0, this.exp = 0, this.czzlExp = 0, 
            this.cityID = 0, this.provinceID = 0, this.changePostime = 0, this.curHeroID = 0, 
            this.rankScore = 0, this.haveHero = [], this.dicHeroUseTime = {}, this.isNewPlayerFlag = !1, 
            this.firstMsgData = !0, this.isStarSmall2 = !1;
        }
        static get Instance() {
            return null == this.instance && (Z.instance = new Z()), Z.instance;
        }
        UpdatePlayerData(e) {
            if (this.gold = e.gold, this.diamond = e.diamond, this.rankScore = e.score, this.heroSP = e.heroSP, 
            this.wingSP = e.cbym, this.exp = e.exp, this.lv = e.lv, this.reliveCoin = e.relive, 
            this.provinceID = e.shen, this.changePostime = e.sstime, this.cityID = e.shi, this.curHeroID = e.role_id, 
            this.rank = e.stage, this.isStarSmall2 = e.stage <= 2, this.isNewPlayerFlag = 1 == e.isnew, 
            this.isNewPlayerFlag ? this.firstMsgData && (this.firstMsgData = !1) : this.firstMsgData = !1, 
            s.isWXPlatform && B.Instance.CheckAddBList(this.rank), this.yb = e.yxdq, this.heroSP = e.yxsp, 
            this.skinSP = e.pfsp, e.mw_info) for (let t = 0; t < e.mw_info.length; t++) {
                const i = e.mw_info[t];
                this.mwInfo[i.id] = i.num;
            }
            this.UpdatePlayerAttrs(e.itemkv), this.shModelCurLv = e.xxlv, this.shModelMaxLv = e.xxmaxlv;
        }
        UpdatePlayerAttrs(e) {
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                i.id == X.gold ? this.gold = i.num : i.id == X.diamond ? this.diamond = i.num : i.id == X.lv ? this.lv = i.num : i.id == X.exp ? this.exp = i.num : i.id == X.relive ? this.reliveCoin = i.num : i.id == X.czzl ? this.czzlExp = i.num : i.id == X.pfsp ? this.skinSP = i.num : i.id == X.yxsp ? this.heroSP = i.num : i.id == X.yxdq ? this.yb = i.num : i.id == X.cbym ? this.wingSP = i.num : i.id == X.menpiao ? this.menpiao = i.num : i.id == X.bbt1 ? this.bbt1 = i.num : i.id == X.bbt2 ? this.bbt2 = i.num : this.mwInfo[i.id] = i.num;
            }
            d.Instance.Send(a.UIGameMain_UpdateRes);
        }
        UpdateHaveHero(e) {
            for (var t = 0; t < e.length; t++) {
                var i = e[t], s = this.dicHeroUseTime[Q.Instance.getBaseID(i.id)];
                if (null != s ? s.time < i.useTime && (s.id = i.id, s.time = i.useTime) : (s = {
                    id: i.id,
                    time: i.useTime
                }, this.dicHeroUseTime[Q.Instance.getBaseID(i.id)] = s), null != (l = this.getHaveHero(i.id))) l.id = i.id, 
                l.count = i.demoCount, l.buy = i.buy, l.useSkin = 0, l.lv = i.lv, l.exp = i.exp, 
                -1 != l.count ? (l.demoEtime = i.demoEtime, i.demoEtime > w.Instance.severTime / 1e3 && (l.count = -1)) : l.demoEtime = 0, 
                l.demoTodayCount = i.demoTodayCount, l.demoTodayLimit = i.demoTodayLimit; else {
                    var n = new m();
                    n.id = i.id, n.count = i.demoCount, n.buy = i.buy, n.useSkin = 0, n.lv = i.lv, n.exp = i.exp, 
                    -1 != n.count ? (n.demoEtime = i.demoEtime, i.demoEtime > w.Instance.severTime / 1e3 && (n.count = -1)) : n.demoEtime = 0, 
                    n.demoTodayCount = i.demoTodayCount, n.demoTodayLimit = i.demoTodayLimit, this.haveHero.push(n);
                }
            }
            for (var o in this.dicHeroUseTime) {
                var l, h = this.dicHeroUseTime[o];
                null != (l = this.getHaveHero(0 == h.time ? Q.Instance.getBaseID(h.id) : h.id)) && (l.useSkin = 1);
            }
            d.Instance.Send(a.UIOneDayEnd_UpdateRes), d.Instance.Send(a.UIFightReady_UpdateHeroList), 
            d.Instance.Send(a.UIAllHeroShow_UpdateRes), d.Instance.Send(a.UIHeroShow3d_UpdateRes);
        }
        getHaveHero(e) {
            for (var t = 0; t < this.haveHero.length; t++) {
                var i = this.haveHero[t];
                if (i.id == e) return i;
            }
            return null;
        }
        getTpyeValue(e) {
            return 1 == e ? this.gold : 2 == e ? this.diamond : 3 == e ? this.lv : 4 == e ? this.exp : 5 == e ? this.reliveCoin : 6 == e ? this.czzlExp : 7 == e ? this.skinSP : 8 == e ? this.heroSP : 9 == e ? this.yb : 0;
        }
        getTpyeName(e) {
            return 1 == e ? "金币" : 2 == e ? "钻石" : 3 == e ? "等级" : 4 == e ? "经验" : 5 == e ? "复活币" : 6 == e ? "成长之路经验" : 7 == e ? "皮肤碎片" : 8 == e ? "英雄碎片" : 9 == e ? "点卷" : "未知";
        }
        getTpyeIcon(e) {
            return 1 == e ? "common/daoju_img_003.png" : 2 == e ? "common/daoju_img_008.png" : 3 == e ? "等级" : 4 == e ? "经验" : 5 == e ? "复活币" : 6 == e ? "成长之路经验" : 7 == e ? "common/daoju_img_011.png" : 8 == e ? "common/daoju_img_010.png" : 9 == e ? "点卷" : "未知";
        }
        getHreoType(e) {
            return 1 == e ? "战士" : 2 == e ? "法师" : 3 == e ? "射手" : 4 == e ? "刺客" : "未知";
        }
    }
    Z.instance = null;
    class $ {
        constructor() {
            this.modelRotationEuler = new Laya.Vector3(), this.scene3DShowPos = new Laya.Vector3(), 
            this.isDestroy = !1, this.animPlaying = !1, this.isLoading = !1;
        }
        loadRes() {
            null != this.model ? (this.model.removeSelf(), this.modelLoadComplete()) : this.isLoading || (this.isLoading = !0, 
            Laya.Sprite3D.load(this.curShowRes, Laya.Handler.create(this, (e, t, i) => {
                t.curShowRes != e || t.isDestroy || null == this.scene3D || (t.model = Laya.Loader.getRes(e).clone(), 
                t.modelLoadComplete());
            }, [ this.curShowRes, this ])));
        }
        modelLoadComplete() {
            if (this.model && this.scene3D) {
                null == this.modelNode ? (this.scene3D.addChild(this.model), this.model.transform.position = this.scene3DShowPos, 
                this.modelRotationEuler.setValue(0, this.modelInitAnalge, 0), this.model.transform.rotationEuler = this.modelRotationEuler, 
                this.model.transform.localScale = new Laya.Vector3(this.scale, this.scale, this.scale)) : (this.scene3DShowPos.setValue(0, 0, 0), 
                this.model.transform.position = this.scene3DShowPos, this.modelNode.getChildAt(0).addChild(this.model), 
                this.modelRotationEuler.setValue(0, 0, 0), this.modelNode.transform.rotationEuler = this.modelRotationEuler);
                var e = q.getAnimator(this.model);
                if (e && !this.animPlaying) {
                    this.animPlaying = !0;
                    var t = e.getControllerLayer(0).getAnimatorState("idle");
                    t && t.clip && (t.clip.islooping = !0, e.play("idle"));
                }
                if (null != this.modelData) {
                    var i;
                    if (null != this.modelData.blueTexture && "" != this.modelData.blueTexture && (i = this.modelData.blueTexture), 
                    this.meshRenderers = q.getMeshRenderersByName(this.model, this.modelData.meshNodeName), 
                    null != i && null != this.meshRenderers) {
                        var s = Laya.Loader.getRes(i);
                        if (null != s) {
                            if (this.meshRenderers) for (let e = 0; e < this.meshRenderers.length; e++) {
                                const t = this.meshRenderers[e];
                                var n = t.meshRenderer;
                                if (null == n && (n = t.skinnedMeshRenderer), n) {
                                    var a = n.material;
                                    null != a && (a.albedoTexture = s);
                                }
                            }
                        } else Laya.Texture2D.load(i, Laya.Handler.create(null, function(e, t) {
                            if (t && e) for (let n = 0; n < e.length; n++) {
                                const a = e[n];
                                var i = a.meshRenderer;
                                if (null == i && (i = a.skinnedMeshRenderer), i) {
                                    var s = i.material;
                                    null != s && (s.albedoTexture = t);
                                }
                            }
                        }, [ this.meshRenderers ]));
                    }
                    this.headPointSprite3D = q.findChild(this.model, "sh_fx"), null != this.modelData.headEffect && "" != this.modelData.headEffect && this.loadSHEffect(this.modelData.headEffect);
                }
            }
        }
        loadSHEffect(e) {
            null != this.headPointSprite3D && Laya.Sprite3D.load(e, Laya.Handler.create(this, (e, t, i) => {
                if (null != t.headPointSprite3D && (t.setModelVisible && t.setModelVisible(1, !0), 
                t.headEffectSprite3D = Laya.Loader.getRes(e).clone(), t.headEffectSprite3D)) {
                    var s = new Laya.Vector3();
                    t.headEffectSprite3D.transform.localPosition = s, t.headPointSprite3D.addChild(t.headEffectSprite3D);
                }
            }, [ e, this ]));
        }
        destroy(e) {
            this.isDestroy = !0, null != this.model && this.model.removeSelf(), e && (this.scene3D = null, 
            this.headEffectSprite3D = null, this.headPointSprite3D = null, this.meshRenderers = null, 
            Laya.Loader.clearRes(this.curShowRes), this.model && this.model.destroy(), this.model = null);
        }
    }
    class ee {
        constructor() {
            this.model = [];
        }
    }
    class te {
        constructor() {
            this.modelIDAdd = 1, this.uiList = [], this.isInit3d = !1, this.touchID = -1, this.moveX = 0, 
            this.oldMoveX = 0, this.startMoveX = 0, this.modelData = [], this.waitDestroyModelData = [], 
            this.hideModelData = [], this.isShow = !1, this.isLoadScene = !1;
        }
        static get Instance() {
            return null == this.instance && (te.instance = new te()), te.instance;
        }
        loadUnit3DScene(e) {
            e && (this.loadSceneCall = e), this.isLoadScene || (this.isLoadScene = !0, Laya.Scene3D.load("3dres/scene/s_show.ls", Laya.Handler.create(this, this.sceneLoadFinished)));
        }
        sceneLoadFinished(e) {
            this.unitScene3D = e, this.loadSceneCall && this.loadSceneCall();
        }
        initUnit3DScene(e, t) {
            null != this.unitScene3D ? (this.isShow = !0, this.curUIName = e, this.unitNode = this.unitScene3D.getChildByName("yuan"), 
            this.unitScene3DCamera = this.unitScene3D.getChildByName("Main Camera"), t ? t.addChild(this.unitScene3D) : Laya.stage.addChild(this.unitScene3D), 
            this.touchID = -1, Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.touchStart), 
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.touchUp), Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.touchUp)) : this.init3DScene(e, t);
        }
        init3DScene(e, t) {
            this.isShow = !0, this.curUIName = e, this.isInit3d || (this.isInit3d = !0, this.scene3D = new Laya.Scene3D(), 
            this.scene3DCamera = new Laya.Camera(0, .1, 1e3), this.scene3D.addChild(this.scene3DCamera), 
            this.scene3DCamera.transform.translate(new Laya.Vector3(5, -10, 1)), this.scene3DCamera.clearFlag = Laya.CameraClearFlags.DepthOnly, 
            this.scene3DCamera.orthographic = !0, this.scene3DCamera.orthographicVerticalSize = 10), 
            t ? t.addChild(this.scene3D) : Laya.stage.addChild(this.scene3D), this.touchID = -1, 
            Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.touchStart), Laya.stage.on(Laya.Event.MOUSE_UP, this, this.touchUp), 
            Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.touchUp);
        }
        checkShowModel(e) {
            if (this.hideModelData) for (let t = 0; t < this.hideModelData.length; t++) {
                if (this.hideModelData[t].uiName == e) return !1;
            }
            return !0;
        }
        hideCurSceneModel(e, t) {
            if (this.modelData.length > 0) {
                var i = new ee();
                for (i.uiName = this.curUIName; this.modelData.length > 0; ) {
                    const e = this.modelData.shift();
                    e.destroy(), i.model.push(e);
                }
                this.hideModelData.push(i);
            }
            this.scene3D ? (this.scene3D.removeSelf(), t ? t.addChild(this.scene3D) : Laya.stage.addChild(this.scene3D)) : this.init3DScene(e, t), 
            this.curUIName = e;
        }
        removeScene3d() {
            for (;this.modelData.length > 0; ) {
                this.modelData.shift().destroy(!0);
            }
            for (;this.waitDestroyModelData.length > 0; ) {
                this.waitDestroyModelData.shift().destroy(!0);
            }
            if ((this.scene3D || this.unitScene3D) && this.hideModelData.length > 0) {
                this.unitNode ? (this.unitScene3D.removeSelf(), Laya.stage.addChild(this.unitScene3D)) : (this.scene3D.removeSelf(), 
                Laya.stage.addChild(this.scene3D));
                var e = this.hideModelData.pop();
                if (e) {
                    for (d.Instance.Send(a.UIShowModel_Resume, e.uiName); e.model.length > 0; ) {
                        const t = e.model.shift();
                        t.isDestroy = !1, t.modelLoadComplete(), this.modelData.push(t);
                    }
                    this.curUIName = e.uiName;
                }
            } else this.isShow = !1, this.unitNode && this.unitScene3D ? (this.unitNode = null, 
            Laya.stage.removeChild(this.unitScene3D)) : this.scene3D && Laya.stage.removeChild(this.scene3D), 
            Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.touchStart), Laya.stage.off(Laya.Event.MOUSE_UP, this, this.touchUp), 
            Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.touchUp);
        }
        touchUp(e) {
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.touchMove);
        }
        touchStart(e) {
            if (this.touchID = e.touchId, this.touchInfo = null, null != e.touches) for (var t = 0; t < e.touches.length; t++) if (this.touchID == e.touches[t].identifier) {
                this.touchInfo = e.touches[t];
                break;
            }
            this.oldMoveX = null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX, 
            this.startMoveX = this.oldMoveX, Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.touchMove);
        }
        touchMove(e) {
            if (this.touchID == e.touchId) {
                if (this.touchInfo = null, null != e.touches) for (var t = 0; t < e.touches.length; t++) if (this.touchID == e.touches[t].identifier) {
                    this.touchInfo = e.touches[t];
                    break;
                }
                if (this.moveX = null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX, 
                Math.abs(this.moveX - this.oldMoveX) > 1) {
                    for (let e = 0; e < this.modelData.length; e++) {
                        const t = this.modelData[e];
                        if (this.startMoveX > t.touchXMin && this.startMoveX < t.touchXMax) {
                            t.modelRotationEuler.y += this.moveX - this.oldMoveX < 0 ? -5 : 5, t.modelNode && t.modelNode.transform ? t.modelNode.transform.rotationEuler = t.modelRotationEuler : t.model && t.model.transform && (t.model.transform.rotationEuler = t.modelRotationEuler);
                            break;
                        }
                    }
                    this.oldMoveX = this.moveX;
                }
            }
        }
        load3DModel(e, t, i, s, n, a, o, l, h, r, c) {
            if (null == this.unitNode && (null == this.scene3D || null == this.scene3DCamera)) return null;
            var d;
            for (let e = 0; e < this.waitDestroyModelData.length; e++) {
                const s = this.waitDestroyModelData[e];
                s.curShowRes == i && s.modelData == t && (d = s, this.waitDestroyModelData.splice(e, 1));
            }
            return null == d && (d = new $()), d.instanceId = this.modelIDAdd++, d.isDestroy = !1, 
            d.modelData = t, this.scene3DCamera && this.scene3DCamera.convertScreenCoordToOrthographicCoord(new Laya.Vector3(s, n), d.scene3DShowPos), 
            d.touchXMin = l, d.touchXMax = h, d.curShowRes = i, d.modelInitAnalge = o, d.scale = a, 
            d.scene3D = r ? this.unitScene3D : this.scene3D, d.modelNode = !r || c ? null : this.unitNode, 
            r && c && (d.scene3DShowPos.x = -8, d.scene3DShowPos.y = 11.5, d.scene3DShowPos.z = 0), 
            d.loadRes(), this.modelData.push(d), d;
        }
        destroyModelById(e) {
            for (let t = 0; t < this.modelData.length; t++) {
                const i = this.modelData[t];
                i.instanceId == e && (i.destroy(), this.waitDestroyModelData.push(i), this.modelData.splice(t, 1));
            }
            for (let t = 0; t < this.hideModelData.length; t++) {
                const i = this.hideModelData[t];
                for (let t = 0; t < i.model.length; t++) {
                    const s = i.model[t];
                    s.instanceId == e && (s.destroy(), this.waitDestroyModelData.push(s), i.model.splice(t, 1));
                }
            }
        }
    }
    te.instance = null;
    class ie {
        constructor() {
            this.uiList = [];
        }
        static get Instance() {
            return null == this.instance && (ie.instance = new ie()), ie.instance;
        }
        addUI(e) {
            e.uiControl && (e.uiControl.x = s.fixStageX, e.uiControl.y = s.fixStageY), -1 == this.uiList.indexOf(e) && (this.uiList.push(e), 
            e.isOpen = !0, e.uiControl && Laya.stage.addChild(e.uiControl));
        }
        removeUI(e) {
            var t = this.uiList.indexOf(e);
            -1 != t && this.uiList.splice(t, 1), e && (e.uiControl && e.uiControl.removeSelf(), 
            e.isOpen = !1);
        }
        showOri() {
            null == this.oriView && (this.oriView = new n.scenes.s_orientationUI(), Laya.stage.addChild(this.oriView), 
            this.oriView.zOrder = 99999);
        }
        closeOri() {
            null != this.oriView && (Laya.stage.removeChild(this.oriView), this.oriView.destroy(), 
            this.oriView = null);
        }
        closeAllUI() {
            for (;this.uiList.length > 0; ) this.removeUI(this.uiList.shift());
            te.Instance.removeScene3d(), Laya.Dialog.closeAll();
        }
    }
    ie.instance = null;
    class se extends D {
        constructor() {
            super(), this.api = Laya.Browser.window.H5API;
        }
        getLoginCode(e) {
            e(s.userId, !1);
        }
    }
    class ne extends D {
        constructor() {
            super(), this.api = Laya.Browser.window.wx;
        }
        openAwemeUserProfile() {
            this.isTTGuanZhu = !0;
        }
        getLoginCode(e) {
            this.api.login({
                force: !1,
                success: t => {
                    if (console.log("login success", t), null != e && (t.gameUserId || t.game_id)) {
                        var i = t.gameUserId ? t.gameUserId : t.game_id;
                        e(i, !0);
                    }
                },
                fail: t => {
                    console.log("登录失败！重试登录", t), Laya.timer.once(100, this, this.getLoginCode, [ e ]);
                },
                complete: function(e) {
                    console.log("login complete", e);
                }
            });
        }
        createMoreGamesButton() {
            return null != this.api && this.api.hasOwnProperty("createMoreGamesButton") ? this.api.createMoreGamesButton({
                type: "image",
                image: "res/tt/moregame.png",
                style: {
                    left: s.systemInfo.windowWidth - Math.floor(110 / s.systemInfo.pixelRatio) - 10,
                    top: s.systemInfo.windowHeight - Math.floor(124 / s.systemInfo.pixelRatio) - 10,
                    width: Math.floor(110 / s.systemInfo.pixelRatio),
                    height: Math.floor(124 / s.systemInfo.pixelRatio),
                    lineHeight: 40,
                    backgroundColor: "#ff0000",
                    textColor: "#ffffff",
                    textAlign: "center",
                    fontSize: 16,
                    borderRadius: 0,
                    borderWidth: 0,
                    borderColor: "#ff0000"
                },
                appLaunchOptions: [ {
                    appId: "ttd3fba5464cd146aa",
                    query: "foo=bar&baz=qux",
                    extraData: {}
                } ],
                onNavigateToMiniGame(e) {
                    console.log("跳转其他小游戏", e);
                }
            }) : null;
        }
        setPreferredFramesPerSecond(e) {}
        createUserInfoButton(e) {
            return this.api && this.api.authorize({
                scope: "scope.userInfo",
                success(e) {
                    console.log("authorize" + JSON.stringify(e)), d.Instance.Send(a.PlatformManger_GetWXUserInfo);
                },
                fail(e) {
                    console.log("authorize run fail:" + JSON.stringify(e)), d.Instance.Send(a.PlatformManger_NMLogin);
                },
                complete(e) {
                    console.log("authorize run done", e);
                }
            });
        }
        openSetting() {
            return this.api && this.api.openSetting({
                success(e) {
                    console.log("openSetting", e), e.authSetting["scope.userInfo"] && d.Instance.Send(a.PlatformManger_GetWXUserInfo);
                },
                fail(e) {
                    console.log("openSetting run fail", e);
                },
                complete(e) {
                    console.log("openSetting run done", e);
                }
            });
        }
        getGameRecorderManager() {
            return null == this.api ? null : this.api.getGameRecorder();
        }
        navigateToMiniProgram(e) {}
        createInterstitialAd(e) {
            return null != this.api && this.api.hasOwnProperty("createInterstitialAd") ? this.api.createInterstitialAd(e) : null;
        }
        loadSubpackage(e) {
            return null != this.api && this.api.hasOwnProperty("loadSubpackage") ? this.api.loadSubpackage(e) : (e.fail(), 
            null);
        }
        hasloadSubpackage() {
            return null != this.api && null != this.api.loadSubpackage;
        }
        getStorageSync(e) {
            return null != this.api && this.api.hasOwnProperty("getStorageSync") ? this.api.getStorageSync(e) : null;
        }
        setStorageSync(e, t) {
            null != this.api && this.api.hasOwnProperty("setStorageSync") && this.api.setStorageSync(e, t);
        }
        getUpdateManager() {
            return null;
        }
        getNetworkType() {
            return null;
        }
        onNetworkStatusChange() {
            return null;
        }
        showShareMenu() {}
        hideShareMenu() {}
        onShareAppMessage() {}
        createBannerAd() {}
    }
    var ae, oe = Laya.Sprite;
    class le {
        constructor() {
            this.IsGetUserInfo = !1, this.shareData = null, this.shareBegin = !1, this.shareCallBack = null, 
            this.shareBeginTime = 0, this.shareWaitTime = 3e3, this.shareCount = 0, this.shareMaxCount = 4, 
            this.showInciteADCount = 0, this.showInciteADMaxCount = 10, this.showInciteSuccess = !1, 
            this.loadInciteBanner = !1, this.inciteVideoPos = 0, this.date = null, this.onShowOptionsData = null, 
            this.IsShow = !1, this.gotoGameBegin = !1, this.gotoGameCallBack = null, this.gotoGameBeginTime = 0, 
            this.gotoGameWaitTime = 5e3, this.ResultPrizeCount = 0, this.ResultPrizeMaxCount = 10, 
            this.initInciteBanner = !1, this.InciteCallBack = null, this.waitAppUpdata = !1, 
            this.reLoadSubPackCount = 0, this.reLoadSubPackMaxCount = 5, this.curBannerIndex = 0, 
            this.LoadBanner = [], this.waitLoadBanner = [], this.bannerRandomIndex = [], this.bannerPos = {}, 
            this.adList = [], this.createADIndex = 0, this.switchAD = 0, this.switchShare = 0, 
            this.isCreateAd = !1, this.waitADTime = 800, this.gameADImage = null, this.exitGameADImage = null, 
            this.oppoNativeShow = !1, this.oppoNativeImage = null, this.oppoNativeAD = null, 
            this.oppoNativeClose = null, this.oppoNativeADIndex = 0, this.adImageData = null, 
            this.gotoGameRatio = 0, this.gotoGameRatioB = 0, this.bannerNum = 1, this.networkType = "", 
            this.skipBanner = !1, this.newBIndex = [], this.isCreateMoreAD = !1, this.adGameList = [], 
            this.showGameBannerIndex = 0, this.gameBanner = [], this.waitGameBanner = [], this.createADGameIndex = 0, 
            this.clickBannerCheck = !1, this.clickBannerIndex = [], this.cacheBanerShowPos = 0, 
            this.showBannerType = 0, this.isCustomBanner = !1, this.enableCreateNextAD = !0, 
            this.dicBannerShowCount = {}, this.bannerMaxShowCount = 2, this.vivoBannerTrueHide = !1, 
            this.vivoBannerSpaceTime = !1, this.vivoBannerID = 1, this.vivoBanner = [], this.interstitialAdID = "", 
            this.interstitialAdIndex = 0, this.oldShowInterstitialAdTime = 0, this.vivoInterstitialDelayCount = 2, 
            this.videoAdID = "", this.wxCustomAdID = [], this.wxCustomAd = [], this.UserInfo = {
                nickName: "",
                avatarUrl: "",
                gender: "",
                country: "",
                city: "",
                province: "",
                encryptedData: "",
                iv: ""
            }, this.storagelocalmlkgKey = "localmlkg_1", this.getCount = 3, this.isInitLoop = !1, 
            this.createCount = 0, this.isCreateUserInfoButton = !1, this.showVivoInterSucCount = 0, 
            this.xiaomiNativeAdcd = !1, this.is4399ShowInter = !1, this.lastXiaomiInterTime = 0, 
            this.lastXiaomiVideoInterTime = 0, this.isintime = !1, this.oldShowNativeAdTime = 0, 
            this.isshowInterVideo = !1, this.CustomAdCallBack = null, this.showAppInterstitialadCallback = null, 
            d.Instance.Reg(a.PlatformManger_SetBannerPos, e => {
                this.SetBannerPos(e[0]);
            }), d.Instance.Reg(a.PlatformManger_GetWXUserInfo, e => {
                this.GetWXUserInfo();
            }), d.Instance.Reg(a.PlatformManger_wxShareVideo, e => {
                this.wxShareVideo(e[0]);
            }), d.Instance.Reg(a.PlatformManger_ttaddShortcut, e => {
                this.ttaddShortcut(e[0]);
            }), d.Instance.Reg(a.PlatformManger_ShowInciteAD, e => {
                this.ShowVideoAD(e[0], e[1]);
            }), d.Instance.Reg(a.PlatformManger_getUserInfo, e => {
                this.api && this.api.getUserInfo(e);
            }), d.Instance.Reg(a.PlatformManger_GotoOtherGame, e => {
                this.GotoOtherGame(e[0], e[1], e[2], e[3], e[4]);
            }), d.Instance.Reg(a.PlatformManger_GetAppUserInfo, e => {
                this.GetAppUserInfo();
            }), d.Instance.Reg(a.PlatformManger_NativeCallback, e => {
                this.NativeCallback(e[0]);
            }), d.Instance.Reg(a.PlatformManger_ForceVideo, e => {
                this.forceVideo();
            }), d.Instance.Reg(a.PlatformManger_ChangeAccount, e => {
                this.ChangeAccount();
            }), d.Instance.Reg(a.PlatformManger_AdDislike, e => {
                this.AdDislike();
            }), d.Instance.Reg(a.PlatformManger_NMLogin, e => {
                this.WXNMLogin();
            }), d.Instance.Reg(a.PlatformManger_allScreenVideo, e => {
                this.allScreenVideo();
            }), d.Instance.Reg(a.PlatformManger_onAppInterstitialadClose, e => {
                this.onAppInterstitialadClose();
            }), d.Instance.Reg(a.PlatformManger_ShowInter, e => {
                d.Instance.Send(a.UINativeInterstitial_Open, 400, !1);
            }), d.Instance.Reg(a.PlatformManger_APPInterShown, e => {
                le.Instance.oldShowInterstitialAdTime = w.Instance.severTime;
            }), d.Instance.Reg(a.PlatformManger_InitAndRegMsg_AppOppoGameCenter, e => {
                s.isOppoGameCenterPlatform && this.InitAndRegMsg_AppOppoGameCenter(), s.isOppoPlatform && this.initNative();
            }), d.Instance.Reg(a.PlatformManger_AppSetAdID, e => {
                this.setAdID(e[0], e[1], e[2], e[3], e[4], e[5], e[6]);
            }), d.Instance.Reg(a.PlatformManger_setFixedModeSCALE_SHOWALL, e => {
                this.onConfigurationChanged(e[0]);
            }), d.Instance.Reg(a.PlatformManger_initLoopIntervideo, e => {
                le.Instance.canshowInterVideo();
            });
        }
        static get Instance() {
            return null == le.instance && (le.instance = new le()), le.instance;
        }
        onConfigurationChanged(e) {
            Laya.stage.scaleMode = 1 == e ? Laya.Stage.SCALE_SHOWALL : Laya.Stage.SCALE_FIXED_HEIGHT;
        }
        ShowAllScreenVideo(e) {
            var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != t && (t.call("loadAllScreenVideoAd"), e && this.api && (this.api.AllScreenVideoCallBack = e));
        }
        allScreenVideo() {
            this.api && this.api.AllScreenVideoCallBack && (this.api.AllScreenVideoCallBack(1), 
            this.api.AllScreenVideoCallBack = null);
        }
        AdDislike() {
            this.xiaomiNativeAdcd = !0;
        }
        NativeCallback(e) {
            le.Instance.api.AppShowNativecallBack && le.Instance.api.AppShowNativecallBack(1 == e), 
            le.Instance.api.AppShowNativecallBack = null;
        }
        GetAppUserInfo() {
            console.log("安卓设备,反射方式获取ID GetAppUserInfo");
            var e = Laya.Browser.window.PlatformClass.createClass("demo.DeviceIdUtil");
            if (null != e) {
                var t, i;
                if (s.is233Platform) {
                    if (s.oldID = e.call("getPlayerId"), t = e.call("getPlayerId233"), i = e.call("getPlayersId"), 
                    !t) {
                        if (le.Instance.getCount--, console.log("ttad  PlatformManager.Instance.getCount" + le.Instance.getCount), 
                        !(le.Instance.getCount < 0)) return;
                        t = s.oldID;
                    }
                } else t = e.call("getPlayerId");
                console.log("获得 demo.DeviceIdUtil appuser" + t + " sid " + i), s.loginToken = t, 
                s.playersid = i;
                var n = e.call("getPlayerName");
                null != n && (le.Instance.UserInfo.nickName = n);
                var a = e.call("getPlayerImg");
                null != a && (le.Instance.UserInfo.avatarUrl = a), console.log("玩家信息playerID:" + t + " sid " + i + "  " + le.Instance.UserInfo.nickName + "++++" + le.Instance.UserInfo.avatarUrl + "++++3"), 
                le.Instance.IsGetUserInfo = !0, le.Instance.api.AppLogincallBack && le.Instance.api.AppLogincallBack(t), 
                s.isOppoGameCenterPlatform && (le.Instance.api.GetNativeOverAd(), le.Instance.api.GetNativeBanner(), 
                le.Instance.api.GetNativeInterstitialAd());
            }
        }
        Init() {
            s.is4399H5Platform ? this.api = new se() : s.isPCPlatform || s.isH5Platform ? this.InitAndRegMsg_PC() : (this.gameADImage = new oe(), 
            this.gameADImage.on(Laya.Event.CLICK, this, this.gotoGame), this.gameADImage.zOrder = 9999, 
            (s.isOppoPlatform || s.isVivoPlatform || s.isOppoGameCenterPlatform) && (this.oppoNativeImage = new oe(), 
            this.oppoNativeImage.on(Laya.Event.CLICK, this, this.onClickOppoNative), this.oppoNativeImage.zOrder = 9999, 
            this.oppoNativeClose = new oe(), this.oppoNativeClose.on(Laya.Event.CLICK, this, this.onClickCloseOppoNative), 
            this.oppoNativeClose.loadImage("login/dislike_icon.png"), this.oppoNativeClose.x = 7, 
            this.oppoNativeClose.y = 7, this.oppoNativeClose.width = 30, this.oppoNativeClose.height = 30, 
            this.oppoNativeImage.addChild(this.oppoNativeClose), this.oppoNativeAD = new oe(), 
            this.oppoNativeAD.x = 429, this.oppoNativeAD.y = 193, this.oppoNativeAD.width = 83, 
            this.oppoNativeAD.height = 31, this.oppoNativeAD.loadImage("login/ad.png"), this.oppoNativeAD.on(Laya.Event.CLICK, this, this.onClickOppoNative), 
            this.oppoNativeImage.addChild(this.oppoNativeAD)), s.isKSPlatform ? this.InitAndRegMsg_KS() : s.isTTPlatform ? this.InitAndRegMsg_TT() : s.isQQPlatform ? (this.api = new T(), 
            this.bannerNum = 1) : s.isAppPlatform ? (this.api = new U(), this.bannerNum = 1, 
            s.is233Platform && this.InitAndRegMsg_233(), this.InitAndRegMsg_App2(), s.isXiaoMiPlatform && (console.log("ttad2 canshowInterVideo"), 
            d.Instance.Reg(a.UISevenDay_Open, e => {
                le.Instance.showXiaomiBanner();
            }), d.Instance.Reg(a.UIGetFreeDiamond_Open, e => {
                le.Instance.showXiaomiBanner();
            }), d.Instance.Reg(a.UIGetFreeGlod_Open, e => {
                le.Instance.showXiaomiBanner();
            }), d.Instance.Reg(a.UIGetFreeSP_Open, e => {
                le.Instance.showXiaomiBanner();
            }), d.Instance.Reg(a.UICode_Open, e => {
                le.Instance.showXiaomiBanner();
            }), d.Instance.Reg(a.UICode_Close, e => {
                le.Instance.HideBannerAD();
            }))) : s.isOppoPlatform ? this.InitAndRegMsg_Oppo() : s.isVivoPlatform ? this.InitAndRegMsg_Vivo() : (this.bannerNum = 4, 
            this.InitAndRegMsg_Wx()), E.Instance.init(this.api, ""), D.Instance = this.api, 
            d.Instance.Send(a.Main_GetSystemInfo, null), this.api.Init(), this.api.InitBanner(), 
            this.api.setPreferredFramesPerSecond(60), this.IsShow = !1, this.api.onShow(e => {
                d.Instance.Send(a.Sound_ResumeBGSound), console.log("WXonShow", new Date().getTime()), 
                this.IsShow || (s.inviterID = this.GetShareInviterID(e), console.log("邀请ID：" + s.inviterID), 
                s.sceneID = parseInt(this.GetSceneID(e)), console.log("场景ID：" + s.sceneID), s.channelInfo = this.GetChannel(e), 
                console.log("channelInfo：", s.channelInfo), 1011 == s.sceneID && (s.isSearchEnter = !0), 
                null != s.channelInfo && (s.fixMisleadAD = !0, E.Instance.SaveKey(this.storagelocalmlkgKey, "open"), 
                console.log("AD修正" + s.fixMisleadAD)), this.IsShow = !0, this.onShowOptionsData = e, 
                Laya.timer.clear(this, this.onShowGameReConnect), Laya.timer.once(500, this, this.onShowGameReConnect));
            }), this.api.onHide(() => {
                this.clickBannerCheck && 0 == this.showBannerType && -1 == this.clickBannerIndex.indexOf(this.curBannerIndex) && (this.clickBannerIndex.push(this.curBannerIndex), 
                console.log("点击广告 " + this.curBannerIndex)), d.Instance.Send(a.Sound_PauseBGSound), 
                console.log("WXonHide", new Date().getTime()), this.IsShow = !1, this.date = new Date(), 
                this.shareBegin && (this.shareBeginTime = this.date.getTime()), this.gotoGameBegin && (this.gotoGameBeginTime = this.date.getTime()), 
                B.Instance.OnHide(s.appid, s.loginToken), console.log("Main.ylsdk.OnHide");
            }), s.isQQPlatform || this.api.onShareAppMessage(function() {
                return le.instance.GetShareData();
            }), this.waitAppUpdata = !1, s.isVivoPlatform && null != le.instance.api.api && le.instance.api.api.onUpdateReady(function(e) {
                1 == e && (le.instance.api.api.showToast({
                    message: "正在更新游戏"
                }), le.instance.api.api.applyUpdate());
            }), this.api.hasOwnProperty("getUpdateManager") && (this.updateManager = this.api.getUpdateManager(), 
            null != this.updateManager && (this.updateManager.onCheckForUpdate(function(e) {
                console.log("当前版本是否需要更新：", e.hasUpdate), le.instance.waitAppUpdata = e.hasUpdate;
            }), this.updateManager.onUpdateReady(() => {
                this.ShowAppUpdata();
            }), this.updateManager.onUpdateFailed(function() {}))), this.api.hasOwnProperty("getNetworkType") && this.api.getNetworkType({
                success: e => {
                    le.instance.networkType = e.networkType, console.log("networkType ", le.instance.networkType);
                }
            }), this.api.hasOwnProperty("onNetworkStatusChange") && this.api.onNetworkStatusChange(e => {
                le.instance.networkType = e.networkType, console.log("networkType ", le.instance.networkType);
            }));
        }
        canshowInterVideo() {
            console.log("ttad isInitLoop " + s.xiaomiAppAdSwich.insertVideoSwitch + " " + s.xiaomiAppAdSwich.insertVideoInterval + " " + !this.isInitLoop), 
            s.xiaomiAppAdSwich.insertVideoSwitch && s.xiaomiAppAdSwich.insertVideoInterval > 0 && !this.isInitLoop && (this.isInitLoop = !0, 
            console.log("ttad isInitLoop " + s.xiaomiAppAdSwich.insertVideoInterval), Laya.timer.loop(1e3 * s.xiaomiAppAdSwich.insertVideoInterval, this, () => {
                d.Instance.Send(a.Main_canshowInterVideo);
            })), this.inittime();
        }
        inittime() {
            this.lastXiaomiInterTime = w.Instance.severTime, this.lastXiaomiVideoInterTime = w.Instance.severTime, 
            this.oldShowNativeAdTime = w.Instance.severTime, this.oldShowInterstitialAdTime = w.Instance.severTime;
        }
        InitAndRegMsg_AppOppoGameCenter() {
            let e = 0;
            B.Instance.OppoADctr && Number(B.Instance.OppoADctr.isaggreation) && (e = Number(B.Instance.OppoADctr.isaggreation)), 
            console.log("ttad nativetime" + e + B.Instance.OppoADctr), Laya.timer.once(1e3 * e * 60, this, () => {
                s.canShowNative = !0;
            });
        }
        InitAndRegMsg_PC() {
            this.api = new W();
        }
        InitAndRegMsg_233() {}
        InitAndRegMsg_Wx() {
            this.api = new V(), this.bannerNum = 8, this.adGameList = [], this.interstitialAdID = "adunit-0aa09aefe11da65b", 
            this.videoAdID = "adunit-80e577085ffe0f3d", this.wxCustomAdID = [ "adunit-cccb185c2799547f" ], 
            this.wxCustomAdID = [ "adunit-1841a62027205b43", "adunit-d84c67cd8286f500", "adunit-5ed032133e17efff", "adunit-53b3dbf651a4b040", "adunit-1f33ff92c1aee939", "adunit-637bc8cebf82afd3", "adunit-63fd020a2dfb9780" ];
            for (let e = 0; e < this.wxCustomAdID.length + 1; e++) this.wxCustomAd.push(null);
            d.Instance.Reg(a.UIRank_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UIpersonal_info_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UISocial_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UISeason_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UIWing_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UIGetFuWen_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UITianFu_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UIFightReady_Open, e => {
                this.wxShowInterstitialAd(90);
            }), d.Instance.Reg(a.UIEventHome_Open, e => {
                this.wxShowInterstitialAd(90);
            });
        }
        InitAndRegMsg_TT() {
            this.api = new x(), this.bannerNum = 1, this.adList = [ "1c58nfkcmsb6nbm95c", "506du3oedoh34fhb87", "1b88bsrgjgr19k3j12", "92h6gj7c00c16bnnpu", "dckdeh04bfb79cfik9", "1do0aojh34ch2n4epj", "360cqfnn8xs1020f84", "2a85hlid63nhhknj3g" ], 
            this.adGameList = [], this.interstitialAdID = "4jk4eap5jp95fg45c7", this.videoAdID = "3ejh9l4e0fr2k7ve75";
        }
        InitAndRegMsg_KS() {
            this.api = new ne(), this.bannerNum = 1, this.adList = [ "348577" ], this.adGameList = [], 
            this.interstitialAdID = "", this.videoAdID = "2300001454_01", j.Instance.InitKsGameRecorder();
        }
        InitAndRegMsg_Oppo() {
            this.api = new H(), this.bannerNum = 1, this.adList = [ "281321" ], this.adGameList = [], 
            this.interstitialAdID = "", this.videoAdID = "281328";
        }
        initNative() {
            let e = 0;
            s.isOnline || (e = 60), Laya.timer.once(1e3 * e, this, () => {
                s.canShowNative = !0;
            });
        }
        InitAndRegMsg_Vivo() {
            this.api = new F(), this.bannerNum = 1, this.adList = [ "c920109ba27649c1a73ed5b5e85663a3" ], 
            this.adGameList = [], this.interstitialAdID = "", this.videoAdID = "531d83fda31c47e0830468b002ffaa60", 
            this.vivoInterstitialDelayCount = 2, s.canShowNative = !0, s.isOnline = !0, d.Instance.Reg(a.UIFightEnd_Open, e => {
                this.ShowVivoInterstitialAd(a.UIFightEnd_Open);
            });
        }
        getVerifiedInfo() {
            if (s.isOppoGameCenterPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("getVerifiedInfo");
            }
        }
        sendRoleInfo() {
            if (s.isOppoGameCenterPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && (console.log("ttad:" + s.loginToken + " " + le.Instance.UserInfo.nickName + " " + Z.Instance.rank), 
                e.call("sendRoleInfo", s.loginToken + "", le.Instance.UserInfo.nickName, Z.Instance.rank));
            }
        }
        jumpLeisureSubject() {
            if (s.isOppoGameCenterPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("jumpLeisureSubject");
            }
        }
        AppLogin() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && (s.isTopOnPlatform || s.isTapTapPlatform || e.call("doLogin"), (s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform) && e.call("initVideoAd"));
            }
        }
        CreateAD() {
            if (s.isWXPlatform) {
                if (this.createCount >= 5) return;
                this.createCount++;
                var e = new Laya.HttpRequest();
                e.http.timeout = 5e3, e.once(Laya.Event.COMPLETE, this, this.XhrCompleteHandler), 
                e.once(Laya.Event.ERROR, this, this.XhrErrorHandler), e.on(Laya.Event.PROGRESS, this, this.XhrProcessHandler), 
                e.send("https://csdjres.haowan823.cn/json_tl/json_tl_33_wx.json?ts=" + new Date().getTime(), "", "get", "text");
            } else this._CreateAD();
        }
        XhrErrorHandler(e) {
            Laya.timer.once(100, this, this.CreateAD);
        }
        XhrProcessHandler(e) {}
        XhrCompleteHandler(e) {
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("adlist.json error ", e), Laya.timer.once(100, this, this.CreateAD);
            }
            null != t && (console.log("ttad " + JSON.stringify(t)), this.adList = t.adList ? t.adList : t, 
            s.sevendaySwitch = t.sevendaySwitch, s.diedSwitch = t.diedSwitch, this._CreateAD());
        }
        _CreateAD() {
            if (this.isCreateAd = !0, null == this.api || s.wxSDKVersion < (s.isWXPlatform ? 204 : 0)) console.log("SDKVersion 版本太低"); else {
                if (8 == this.adList.length) {
                    if (0 == this.bannerRandomIndex.length) for (;this.bannerRandomIndex.length < 4; ) {
                        var e = Math.floor(10 * Math.random()) % 4;
                        -1 == this.bannerRandomIndex.indexOf(e) && this.bannerRandomIndex.push(e);
                    }
                    for (var t = 0; t < this.bannerRandomIndex.length; t++) {
                        var i = this.bannerRandomIndex[t++], n = this.bannerRandomIndex[t];
                        this.switchPos(this.adList, i, n);
                    }
                }
                this.bannerRandomIndex = [];
                for (t = 0; t < this.bannerNum; t++) this.bannerRandomIndex.push(t), this.createBanner(this.createADIndex++);
                this.adGameList.length > 0 && this.createGameBanner(this.createADGameIndex++), "" != this.interstitialAdID && (this.interstitialAd = this.api.createInterstitialAd({
                    adUnitId: this.interstitialAdID
                }), s.isTTPlatform && this.interstitialAd && "devtools" != s.systemInfo.appName && (this.interstitialAd.onError(function(e) {
                    console.log("插屏广告错误：" + JSON.stringify(e));
                }), this.interstitialAd.onClose(function() {
                    console.log("插屏广告关闭：");
                })));
            }
        }
        createVideoAD() {
            let e = this.videoAdID;
            this.RewardVideo = this.api.createRewardedVideoAd({
                adUnitId: e
            }), null != this.RewardVideo && (this.initInciteBanner || (this.initInciteBanner = !0, 
            this.RewardVideo.onError((e, t) => {
                le.Instance.loadInciteBanner = !1, console.log("激励视屏报错 onError ：", JSON.stringify(e), t), 
                s.isWXPlatform && B.Instance.GetNoClickAppIDList().length > 0 ? d.Instance.Send(a.UIVideoToNavigateGame_Open, this.InciteCallBack) : d.Instance.Send(a.UIGameTipsModel_SetTips, "当前没有视频可以观看,请稍后再试！", 1500);
            }), this.RewardVideo.onClose(e => ((s.isOppoPlatform || s.isVivoPlatform) && (Laya.SoundManager.muted = !1, 
            d.Instance.Send(a.Sound_SetEnable, !0), d.Instance.Send(a.Sound_ResumeBGSound)), 
            s.isQQPlatform && this.RewardVideo.offClose(this.RewardVideo.onClose()), this.loadInciteBanner = !1, 
            e && e.isEnded || void 0 === e && !s.isOppoPlatform ? (this.showInciteSuccess = !0, 
            this.InciteCallBack && this.InciteCallBack(1), w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 300 + this.inciteVideoPos
            }), console.log("正常播放结束，可以下发游戏奖励 次数：", this.showInciteADCount), s.isOppoPlatform && (this.InciteCallBack = null), 
            w.Instance.GetNetMsgData("c2s_ad_box_add").Send({}), w.Instance.GetNetMsgData("c2s_czzl_exp_add").Send({}), 
            void w.Instance.GetNetMsgData("c2s_watch_ad_upload_forever").Send({
                type: 2
            })) : void 0)), (s.isOppoPlatform || s.isVivoPlatform) && this.RewardVideo.onLoad(function() {
                console.log("激励视频加载成功2"), s.isVivoPlatform && (Laya.SoundManager.muted = !0, d.Instance.Send(a.Sound_SetEnable, !1), 
                d.Instance.Send(a.Sound_PauseBGSound)), le.instance.RewardVideo.show();
            })));
        }
        SetBannerPos(e) {
            this.bannerPos = e;
        }
        fixBannerPos() {
            if (s.fixStageY > 0) {
                var e = Math.floor(s.fixStageY / s.systemInfo.pixelRatio);
                this.bannerPos[1].top -= e, this.bannerPos[2].top -= e, this.bannerPos[3].top -= e, 
                this.bannerPos[4].top += e;
            }
        }
        ShowSelfExitGame() {
            s.isWXPlatform && (this.exitGameADImage = new oe(), this.exitGameADImage.on(Laya.Event.CLICK, this, this.onBackGameList), 
            this.exitGameADImage.zOrder = 9999, this.exitGameADImage.loadImage("zj_mainui/zhujiemian_tuichuanniu2.png"), 
            this.exitGameADImage.x = 569, this.exitGameADImage.y = 80 + s.fixStageY / 2 + (s.fixStageY > 0 ? 0 : 10), 
            Laya.stage.addChild(this.exitGameADImage));
        }
        isMoveNetWork() {
            return "2g" == le.instance.networkType || "3g" == le.instance.networkType || "4g" == le.instance.networkType;
        }
        ShowAppUpdata() {
            this.waitAppUpdata = !1, s.loadSubpackageSuccess = 0, this.api.showModal({
                title: "更新提示",
                content: "当前游戏有新的版本，需要重启更新！",
                showCancel: !1,
                confirmText: "重启",
                success: e => {
                    e.confirm && null != le.Instance.updateManager && le.Instance.updateManager.applyUpdate();
                }
            });
        }
        ShowWxUpdata() {
            null != this.api && this.api.showModal({
                title: "提示",
                content: s.isWXPlatform ? "当前微信版本太低，不支持此游戏，请先更新微信！" : "当前应用版本太低，不支持此游戏，请先更新应用！",
                showCancel: !1,
                confirmText: "确定",
                success: e => {}
            });
        }
        onShowGameReConnect() {
            0 == s.playerID || w.Instance.NetConnect ? s.isGetPlayerInfo ? (console.log(">> onShowGameReConnect onShowGame"), 
            this.IsShow && this.onShowGame()) : (console.log(">> onShowGameReConnect isGetPlayerInfo"), 
            w.Instance.onOnceConnetSucess = (() => {
                this.onShowGame();
            })) : (console.log(">> onShowGameReConnect ReConnect"), w.Instance.ReConnect(), 
            w.Instance.onOnceConnetSucess = (() => {
                this.onShowGame();
            }));
        }
        onShowGame() {
            var e = this.onShowOptionsData;
            this.date = new Date(), console.log("WXonShowGame", new Date().getTime()), this.shareBegin && (this.ShareWaitResult(this.date.getTime() - this.shareBeginTime >= this.shareWaitTime), 
            this.shareBegin = !1), this.gotoGameBegin && (this.GotoGameWaitResult(this.date.getTime() - this.gotoGameBeginTime >= this.gotoGameWaitTime), 
            this.gotoGameBegin = !1), s.inviterID = this.GetShareInviterID(e), s.waitJoinRoom = parseInt(this.GetShareRoomID(e)), 
            console.log("好友邀请ID：" + s.inviterID), console.log("准备加入房间ID：" + s.waitJoinRoom), 
            s.waitJoinRoom > 0 && d.Instance.Send(a.UIGameMain_WaitJoinRoom, s.waitJoinRoom);
            var t = Laya.Browser.window.wx.getLaunchOptionsSync();
            B.Instance.OnShow(s.appid, s.loginToken, t), console.log("Main.ylsdk.onShow");
        }
        WXNMLogin() {
            s.isQQPlatform ? le.instance.api.getNMUserInfo({
                success: function(e) {
                    le.instance.IsGetUserInfo = !0, s.isWXNMLogin = !0, le.Instance.UserInfo.nickName = "游客", 
                    le.Instance.UserInfo.avatarUrl = "", le.Instance.UserInfo.city = "", le.Instance.UserInfo.province = "", 
                    le.Instance.UserInfo.country = "", le.Instance.UserInfo.gender = "1", le.Instance.UserInfo.encryptedData = "", 
                    le.Instance.UserInfo.iv = "", d.Instance.Send(a.Main_SendLogin, null);
                }
            }) : (le.instance.IsGetUserInfo = !0, s.isWXNMLogin = !0, le.Instance.UserInfo.nickName = "游客", 
            le.Instance.UserInfo.avatarUrl = "", le.Instance.UserInfo.city = "", le.Instance.UserInfo.province = "", 
            le.Instance.UserInfo.country = "", le.Instance.UserInfo.gender = "1", le.Instance.UserInfo.encryptedData = "", 
            le.Instance.UserInfo.iv = "", d.Instance.Send(a.Main_SendLogin, null));
        }
        GetWXUserInfo() {
            if (console.log("检查用户信息权限"), null != this.api) return s.is4399H5Platform ? (le.Instance.UserInfo.nickName = s.nick, 
            void (le.Instance.UserInfo.avatarUrl = Laya.Browser.window.H5API.getUserAvatar(s.userId))) : void this.api.getSetting({
                success(e) {
                    console.log("res.authSetting " + JSON.stringify(e)), !s.isKSPlatform && e.authSetting["scope.userInfo"] || s.isKSPlatform && e["scope.userInfo"] ? le.instance.api.getUserInfo({
                        success: function(e) {
                            le.instance.IsGetUserInfo = !0, s.isTTGetUserInfo = !0, console.log("getUserInfo" + e.userInfo), 
                            s.isWXNMLogin = !1, s.isKSPlatform ? (le.Instance.UserInfo.nickName = e.userName, 
                            le.Instance.UserInfo.avatarUrl = e.userHead, le.Instance.UserInfo.city = e.userCity, 
                            le.Instance.UserInfo.gender = "M" == e.gender ? "1" : "0") : (le.Instance.UserInfo.nickName = e.userInfo.nickName, 
                            le.Instance.UserInfo.avatarUrl = e.userInfo.avatarUrl, le.Instance.UserInfo.city = e.userInfo.city, 
                            le.Instance.UserInfo.province = e.userInfo.province, le.Instance.UserInfo.country = e.userInfo.country, 
                            le.Instance.UserInfo.gender = "" + e.userInfo.gender, le.Instance.UserInfo.encryptedData = s.isQQPlatform || s.isTTPlatform || s.isVivoPlatform || s.isOppoPlatform || s.isAppPlatform ? "" : e.encryptedData, 
                            le.Instance.UserInfo.iv = s.isQQPlatform || s.isTTPlatform || s.isVivoPlatform || s.isOppoPlatform || s.isAppPlatform ? "" : e.iv, 
                            console.log("encryptedData", le.Instance.UserInfo.encryptedData), console.log("iv", e.iv), 
                            s.isTTPlatform && le.Instance.UserInfo.avatarUrl.replace("http:", "https:")), d.Instance.Send(a.Main_SendLogin, null);
                        },
                        fail: function(e) {
                            console.log("wx.getUserInfo fail", e), le.instance.CreateUserInfoButton();
                        }
                    }) : le.instance.CreateUserInfoButton();
                },
                fail(e) {
                    console.log("getSetting fail:" + JSON.stringify(e));
                }
            });
        }
        CreateUserInfoButton() {
            if (s.wxSDKVersion < (s.isWXPlatform ? 201 : 0) || !this.api.hasOwnProperty("createUserInfoButton")) return console.log("SDKVersion 版本太低"), 
            void this.ShowWxUpdata();
            null != this.api && null == le.UserInfoButton && (le.Instance.isCreateUserInfoButton || (le.Instance.isCreateUserInfoButton = !0, 
            console.log("createUserInfoButton"), le.UserInfoButton = this.api.createUserInfoButton({
                type: "image",
                image: "login/userinfo.png",
                style: {
                    left: 0,
                    top: 0,
                    width: 750,
                    height: 1334
                }
            }), le.UserInfoButton && le.UserInfoButton.onTap(e => {
                console.log(e), s.isClickLoginBtn = !0, le.UserInfoButton && le.UserInfoButton.destroy(), 
                le.UserInfoButton = null, s.isWXPlatform || s.isKSPlatform ? null != e.rawData ? le.instance.GetWXUserInfo() : le.instance.WXNMLogin() : le.instance.GetWXUserInfo();
            })));
        }
        HideUserInfoButton() {
            null != le.UserInfoButton && le.UserInfoButton.hide();
        }
        ShowUserInfoButton() {
            null != le.UserInfoButton && le.UserInfoButton.show();
        }
        Share(e) {
            null != this.api && this.api.shareAppMessage(e);
        }
        GetShareRoomID(e) {
            if (null != this.api) {
                if (console.log("getLaunchOptionsSync"), console.log(e), e.hasOwnProperty("query")) {
                    var t = e.query;
                    if (t.hasOwnProperty("roomId")) return t.roomId;
                }
                return 0;
            }
        }
        GetSceneID(e) {
            if (null != this.api) return e.hasOwnProperty("scene") ? e.scene : 0;
        }
        GetChannel(e) {
            if (null == this.api) return null;
            if (e && e.hasOwnProperty("query")) {
                var t = e.query;
                if (t && t.hasOwnProperty("channel")) return t.channel;
                if (t && t.hasOwnProperty("wxgamecid")) return t.wxgamecid;
            }
            if (e && e.hasOwnProperty("referrerInfo")) {
                var i = e.referrerInfo;
                if (i && i.hasOwnProperty("extraData")) {
                    var s = i.extraData;
                    if (s && s.hasOwnProperty("channel")) return s.channel;
                    if (s && s.hasOwnProperty("wxgamecid")) return s.wxgamecid;
                }
            }
            return null;
        }
        GetShareInviterID(e) {
            if (null != this.api) {
                if (console.log("getLaunchOptionsSync"), console.log(e), e.hasOwnProperty("query")) {
                    var t = e.query;
                    if (t && t.hasOwnProperty("inviterId")) return t.inviterId;
                }
                return 0;
            }
        }
        SetNewScore(e) {
            null != this.api && this.api.setUserCloudStorage({
                KVDataList: [ {
                    key: "score",
                    value: e + ""
                } ],
                success: e => {
                    console.log("setUserCloudStorage success", e);
                },
                fail: e => {
                    console.error("setUserCloudStorage fail", e);
                }
            });
        }
        createBanner(e) {
            if (e >= this.bannerNum) return;
            var t = this.adList[e];
            console.log("开始创建广告 ", e + 1);
            var i = null;
            let n = null;
            if (n = s.isOppoPlatform ? {
                top: s.systemInfo.windowHeight - 300,
                left: s.systemInfo.windowWidth / 2 - 450,
                width: 1800,
                height: 600
            } : {
                top: s.systemInfo.windowHeight - 100,
                left: s.systemInfo.windowWidth / 2 - 150,
                width: 300,
                height: 200
            }, !this.api.hasOwnProperty("createBannerAd")) return console.log("SDKVersion 版本太低"), 
            void this.ShowWxUpdata();
            if (t) {
                i = this.api.createBannerAd({
                    adUnitId: t,
                    style: n
                });
                var a = this.waitLoadBanner.length;
                this.waitLoadBanner.push(i), null != i ? ((s.isWXPlatform || s.isQQPlatform || s.isAppPlatform || s.isVivoPlatform || s.isOppoPlatform) && this.LoadBanner.push(i), 
                i.onError(e => {
                    (!s.isOppoPlatform || s.isVivoPlatform || s.isQQPlatform) && (this.LoadBanner[a] = null), 
                    console.log("BannerBanner 广告获取错误：bannerIndex " + a, e);
                }), i.onLoad(e => {
                    s.isTTPlatform && this.LoadBanner.push(i), this.skipBanner && this.newBIndex.push(a), 
                    console.log("BannerBanner 广告加载完成 bannerIndex ", a);
                })) : this.LoadBanner[a] = null;
            }
        }
        createGamePortal(e) {
            this.portalAd = this.api.createGamePortal({
                adUnitId: e
            });
        }
        createGameIconPortal(e) {
            null != this.portalGameIconAd && this.portalGameIconAd.destroy(), this.portalGameIconAd = this.api.createGameIcon(e);
        }
        createGameBanner(e) {
            if (e >= this.adGameList.length) return;
            var t = this.adGameList[e];
            console.log("开始创建GameList ", e);
            var i = null;
            let n = {
                top: s.systemInfo.windowHeight - 100,
                left: s.systemInfo.windowWidth / 2 - 150,
                width: 300,
                height: 200
            };
            if (this.api.hasOwnProperty("createGameBanner")) {
                i = this.api.createGameBanner({
                    adUnitId: t,
                    style: n
                });
                var a = this.waitGameBanner.length;
                this.waitGameBanner.push(i), null != i && (this.gameBanner.push(i), i.onError(e => {
                    this.gameBanner[a] = null, console.log("gameBanner 广告获取错误：bannerIndex ", a);
                }), i.onLoad(e => {
                    console.log("gameBanner 广告加载完成 bannerIndex ", a);
                }));
            } else console.log("SDKVersion 版本太低");
        }
        switchPos(e, t, i) {
            var s = e[i];
            e[i] = e[t], e[t] = s;
        }
        createMoreAD() {
            if (!s.isTTPlatform && !this.isCreateMoreAD) {
                this.isCreateMoreAD = !0;
                var e = this.bannerNum;
                this.bannerNum = this.adList.length, this.bannerRandomIndex = [], this.skipBanner = !0, 
                this.newBIndex = [];
                for (var t = e; t < this.bannerNum; t++) this.createBanner(this.createADIndex++);
            }
        }
        createNextAD() {
            this.bannerNum <= this.adList.length && (this.bannerNum++, this.createBanner(this.createADIndex++), 
            this.bannerRandomIndex = [ this.LoadBanner.length ]);
        }
        setAllAD() {
            this.skipBanner = !1, this.newBIndex = [];
        }
        ShowGamePortal() {
            null != this.portalAd && this.portalAd.load().then(() => {
                this.portalAd.show();
            }).catch(e => {
                console.error(e);
            });
        }
        ShowVivoInterstitialAd(e) {
            let t = 1;
            s.isVivoPlatform && (t = Math.random()), (t >= .5 || e == a.UIFightEnd_Open) && (s.isVivoPlatform && this.showVivoInterSucCount < 2 ? this.ShowInterstitialAd(0) : this._ShowVivoInterstitialAd(e));
        }
        _ShowVivoInterstitialAd(e) {
            if (console.log(">>>>准备弹出插屏广告 uiEnum " + e), w.Instance.severTime - this.oldShowInterstitialAdTime > (s.isOppoPlatform ? 6e4 : s.oppoNativeAdcd)) {
                var t = {
                    showDelay: s.oppoNativeDelay,
                    width: 400
                };
                console.log(">>>>准备弹出插屏广告 showDelay " + t.showDelay + " width " + t.width), null == t.showDelay || 0 == t.showDelay ? d.Instance.Send(a.UINativeInterstitial_Open, t.width) : Laya.timer.once(t.showDelay, this, e => {
                    d.Instance.Send(a.UINativeInterstitial_Open, e.width);
                }, [ t ]);
            }
        }
        wxShowInterstitialAd(e) {
            this.oldShowInterstitialAdTime <= 0 && (this.oldShowInterstitialAdTime = w.Instance.severTime);
            let t = w.Instance.severTime - this.oldShowInterstitialAdTime > 1e3 * e;
            s.isWXPlatform && t && this.ShowInterstitialAd(0);
        }
        ShowInterstitialAd(e) {
            (s.isOppoPlatform || s.isVivoPlatform || this.interstitialAd) && (s.isWXPlatform ? (this.interstitialAd.show().catch(e => {
                console.error(e);
            }), this.oldShowInterstitialAdTime = w.Instance.severTime) : s.isQQPlatform ? this.interstitialAd.load().then(() => {
                le.Instance.interstitialAd.show().catch(t => {
                    console.error("插屏失败1>>adIndex" + e, t), e > 0 && le.Instance.ShowBannerAD(e, this);
                });
            }).catch(t => {
                console.log("插屏失败2>>adIndex" + e, t), e > 0 && le.Instance.ShowBannerAD(e, this);
            }) : s.isTTPlatform ? (console.log("即将插屏广告展示"), this.interstitialAd.load().then(() => {
                le.Instance.interstitialAd.show().then(() => {
                    console.log("插屏广告展示成功");
                });
            }).catch(t => {
                console.log("插屏load失败" + t), e > 0 && le.Instance.ShowBannerAD(e, this);
            })) : (s.isOppoPlatform || s.isVivoPlatform) && (console.log(">>>>>>> this.interstitialAd.load() severTime " + (w.Instance.severTime - this.oldShowInterstitialAdTime)), 
            w.Instance.severTime - this.oldShowInterstitialAdTime > (s.isOppoPlatform ? 6e4 : s.oppoNativeAdcd) ? (s.isOppoPlatform && le.Instance.interstitialAdIndex, 
            null == this.interstitialAd || s.isVivoPlatform ? (this.interstitialAd = le.Instance.api.createAppInteractionAd(), 
            null != this.interstitialAd && (this.interstitialAd.onLoad(function() {
                console.log(">>>>插屏广告加载"), le.Instance.interstitialAdIndex++, Laya.timer.once(s.cpdelay, this, () => {
                    s.isOppoPlatform || s.isVivoPlatform || le.instance.HideBannerAD(), s.isVivoPlatform && le.instance.HideBannerAD(), 
                    le.instance.showVivoInterSucCount++, le.instance.interstitialAd.show();
                });
            }), this.interstitialAd.onClose(function() {
                console.log(">>>>插屏广告关闭"), s.isVivoPlatform && (le.Instance.interstitialAd = null, 
                le.Instance.oldShowInterstitialAdTime = w.Instance.severTime);
            }), this.interstitialAd.onError(function(e) {
                console.log(e);
            }))) : this.interstitialAd.load(), s.isVivoPlatform || (this.oldShowInterstitialAdTime = w.Instance.severTime)) : e > 0 && le.Instance.ShowBannerAD(e, this)));
        }
        SwitchNative(e) {
            if (this.oppoNativeShow && (this.curNativeData = this.api.GetNativeBanner(), this.curNativeData)) {
                var t = this.curNativeData.data.imgUrlList[0];
                try {
                    this.oppoNativeImage.loadImage(t);
                } catch (e) {}
                console.log("reportAdShow2:", this.curNativeData.data.adId), this.curNativeData.nativeAd.reportAdShow({
                    adId: this.curNativeData.data.adId
                }), this.curNativeData.nativeAd.load(), console.log("ttad nativeAd.load 0"), Laya.timer.once(15e3, this, () => {
                    le.Instance.oppoNativeShow && e == le.Instance.oppoNativeADIndex && le.Instance.SwitchNative(e);
                }, [ e ]);
            }
        }
        ShowGameBannerAd() {
            s.isOppoPlatform && s.isOnline && D.Instance.oppoCreateGameBannerAd();
        }
        HideGameBannerAd() {
            s.isOppoPlatform && D.Instance.oppoGameBannerAD && D.Instance.oppoGameBannerAD.hide().then(function() {
                D.Instance.oppogamePortalAd.destroy(), D.Instance.oppogamePortalAd = null, console.log("互推盒子横幅广告hide success");
            }).catch(function(e) {
                console.log("互推盒子横幅广告hide fail with:" + e.errCode + "," + e.errMsg);
            });
        }
        ShowGamePortalAd() {
            (s.isOppoPlatform || s.isVivoPlatform) && (le.Instance.HideBannerAD(), D.Instance.oppoCreateGamePortal());
        }
        dyVivoShowNativeAd(t, i, n, a) {
            if (s.isDYVivoPlatform || s.isOppoGameCenterPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform && 0 == s.TaoLuConfig[e.NOBanner] || s.is4399Platform || s.isHuaweiPlatform) {
                t = s.fixStageX * s.screenScale + (window.screen.width * window.devicePixelRatio - s.fixStageX * s.screenScale * 2) * (t / Laya.stage.designWidth), 
                i = window.screen.height * window.devicePixelRatio * (i / Laya.stage.designHeight), 
                n = window.screen.width * window.devicePixelRatio * (n / Laya.stage.designWidth), 
                a = window.screen.height * window.devicePixelRatio * (a / Laya.stage.designHeight);
                var o = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != o && (console.log("ttad显示Native:" + Math.round(t) + "  " + Math.round(i) + "  " + Math.round(n) + "  " + Math.round(a)), 
                o.call("showNative", Math.round(t), Math.round(i), Math.round(n), Math.round(a)));
            }
        }
        ShowNativeBannerAD(e, t, i, n, a, o, l) {
            if (s.isDYVivoPlatform || s.isOppoGameCenterPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.isHuaweiPlatform) s.isXiaoMiPlatform ? s.xiaomiAppAdSwich.nativeImageSwitch && this.dyVivoShowNativeAd(i, n, a, o) : this.dyVivoShowNativeAd(i, n, a, o); else if (!s.isOppoPlatform && !s.isOppoGameCenterPlatform || s.canShowNative) {
                var h = this.bannerPos[e];
                if (null != h && !s.isVivoPlatform) if (console.log(">>>原生广告准备展示"), (s.isVivoPlatform || s.isOppoPlatform || s.isOppoGameCenterPlatform) && (1 == l ? (s.isOppoPlatform && B.Instance.OppoADData.adddata && B.Instance.OppoADData.adddata.nativeid[0] && B.Instance.OppoADData.adddata.nativeid[1] && B.Instance.OppoADData.adddata.nativeid[0] === B.Instance.OppoADData.adddata.nativeid[1] ? this.curNativeData = this.api.GetNativeInterstitialAd() : this.curNativeData = this.api.GetNativeBanner(), 
                (s.isOppoPlatform || s.isVivoPlatform) && (this.curNativeData ? this.cashNativeData1 = this.curNativeData : this.curNativeData = this.cashNativeData1)) : (s.isOppoPlatform || s.isOppoGameCenterPlatform ? this.curNativeData = 3 == l ? this.api.GetNativeOverAd() : this.api.GetNativeInterstitialAd() : this.curNativeData = this.api.GetNativeBanner(), 
                (s.isOppoPlatform || s.isVivoPlatform) && (this.curNativeData ? this.cashNativeData2 = this.curNativeData : this.curNativeData = this.cashNativeData2)), 
                this.curNativeData)) {
                    var r = this.curNativeData.data.imgUrlList[0], c = a || 512, d = o || 224;
                    if (c <= 100 && (r = this.curNativeData.data.icon), console.log(">>>>>>>>>>>>>>>>>>>ttadNative AD " + r + " w " + c + " h " + d), 
                    this.oppoNativeAD && (this.oppoNativeAD.x = c - 83, this.oppoNativeAD.y = d - 31, 
                    s.isOppoGameCenterPlatform && (this.oppoNativeClose.x = c - 30)), null != this.oppoNativeImage) {
                        if (this.oppoNativeImage.parent && this.oppoNativeImage.removeSelf(), this.oppoNativeImage.graphics.clear(), 
                        null == r && (r = this.curNativeData.data.icon), !r) return;
                        this.oppoNativeImage.x = 0, this.oppoNativeImage.y = 0, this.oppoNativeImage.width = c, 
                        this.oppoNativeImage.height = d;
                        try {
                            this.oppoNativeImage.loadImage(r);
                        } catch (e) {}
                        0 == h.top && 0 == h.left ? (this.oppoNativeImage.x = 50, this.oppoNativeImage.y = 0) : -1 == h.top && -1 == h.left ? (this.oppoNativeImage.x = s.fixStageX + 120, 
                        this.oppoNativeImage.y = 132) : (h.left == s.systemInfo.windowWidth / 2 - 450 ? this.oppoNativeImage.x = s.fixStageX + Laya.stage.designWidth / 2 - c / 2 : this.oppoNativeImage.x = Laya.stage.designWidth - c, 
                        this.oppoNativeImage.y = Laya.stage.designHeight - d), null != i && (this.oppoNativeImage.x = i), 
                        null != n && (this.oppoNativeImage.y = n), null != t ? t.addChild(this.oppoNativeImage) : (this.oppoNativeImage.x += s.fixStageX, 
                        Laya.stage.addChild(this.oppoNativeImage)), this.oppoNativeShow = !0, console.log("reportAdShow1:", this.curNativeData.data.adId), 
                        this.curNativeData.nativeAd.reportAdShow({
                            adId: this.curNativeData.data.adId
                        }), s.isOppoGameCenterPlatform || (this.curNativeData.nativeAd.load(), console.log("ttad nativeAd.load 1")), 
                        this.oppoNativeADIndex++;
                        var u = this.oppoNativeADIndex;
                        Laya.timer.once(15e3, this, () => {
                            u == le.Instance.oppoNativeADIndex && s.isWXPlatform && le.Instance.SwitchNative(u);
                        }, [ u ]);
                    }
                } else ;
            }
        }
        bannerRandom() {
            if (this.skipBanner && 0 != this.newBIndex.length) for (var e = 0; e < this.newBIndex.length; e++) this.bannerRandomIndex.push(this.newBIndex[e]); else for (;this.bannerRandomIndex.length < this.bannerNum; ) {
                var t = Math.floor(10 * Math.random()) % this.bannerNum + 1;
                -1 == this.bannerRandomIndex.indexOf(t) && this.bannerRandomIndex.push(t);
            }
        }
        ShowDYVIVOBannerAD(e, t, i, n) {
            e = s.fixStageX * s.screenScale + (window.screen.width * window.devicePixelRatio - s.fixStageX * s.screenScale * 2) * (e / Laya.stage.designWidth), 
            t = window.screen.height * window.devicePixelRatio * (t / Laya.stage.designHeight), 
            i = window.screen.width * window.devicePixelRatio * (i / Laya.stage.designWidth), 
            n = window.screen.height * window.devicePixelRatio * (n / Laya.stage.designHeight);
            var a = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != a && (console.log("ttad显示Banner:"), a.call("showBanner", Math.round(e), Math.round(t), Math.round(i), Math.round(n)));
        }
        ShowBannerAD(e, t) {
            if (s.isHaveAd && !s.isVivoPlatform) {
                this.clickBannerCheck = !1;
                var i = this.bannerPos[e];
                if (null != i) {
                    var n;
                    if (0 == this.bannerRandomIndex.length && this.bannerRandom(), n = this.bannerRandomIndex.shift(), 
                    console.log("准备显示广告", n), this.enableCreateNextAD || this.dicBannerShowCount[1] >= this.bannerMaxShowCount && this.dicBannerShowCount[2] >= this.bannerMaxShowCount && this.dicBannerShowCount[3] >= this.bannerMaxShowCount && this.dicBannerShowCount[4] >= this.bannerMaxShowCount && (this.enableCreateNextAD = !0, 
                    console.log(">>开始创建新banner"), this.createMoreAD()), 0 != this.curBannerIndex && this.HideBannerAD(), 
                    Laya.timer.clear(this, this.delayOpenAd), !s.iPhoneX || i.iPhoneXShow) {
                        if (this.enableCreateNextAD && this.createNextAD(), this.curBannerIndex = n, (s.isOppoPlatform || s.isVivoPlatform) && (this.curBannerIndex = 1), 
                        null == this.curShowBanner && (this.showBannerType = 0, this.curShowBanner = this.LoadBanner[this.curBannerIndex - 1]), 
                        null == this.curShowBanner && this.LoadBanner.length > 0) {
                            this.showBannerType = 0;
                            var a = Math.floor(10 * Math.random()) % this.LoadBanner.length;
                            this.curShowBanner = this.LoadBanner[a], null == this.curShowBanner && (this.curShowBanner = this.LoadBanner[0], 
                            this.curBannerIndex = 1);
                        }
                        var o = this.dicBannerShowCount[this.curBannerIndex];
                        if (o ? o++ : o = 1, this.dicBannerShowCount[this.curBannerIndex] = o, console.log(">>广告" + this.curBannerIndex + " 展示 " + this.dicBannerShowCount[this.curBannerIndex] + " 次"), 
                        this.isCustomBanner = !1, s.isWXPlatform && null == this.curShowBanner && e <= 3 && this.wxCustomAdID.length > 0 && (this.isCustomBanner = !0, 
                        this.curShowBanner = this.api.createCustomAd(this.wxCustomAdID[0], e, i.left, i.top)), 
                        null != this.curShowBanner) {
                            if (null != this.curShowBanner.style) {
                                this.curShowBanner.style.left = i.left + (s.isTTPlatform ? 50 : 0), this.curShowBanner.style.realHeight < 100 ? this.curShowBanner.style.top = i.top + 16 - s.fixStageY / s.systemInfo.pixelRatio : this.curShowBanner.style.top = i.top + (s.isTTPlatform ? -15 : 0) - s.fixStageY / s.systemInfo.pixelRatio, 
                                2 == this.showBannerType && (this.curShowBanner.style.top += 20);
                                var l = this.curShowBanner.style.realHeight;
                                (isNaN(l) || l > 120) && (l = 120);
                            }
                            null != this.curShowBanner && (s.isQQPlatform ? this.curShowBanner.show().then(() => {
                                console.log("bannerAd show ok");
                            }).catch(e => {
                                console.log("bannerAd show error", e), this.LoadBanner[this.curBannerIndex - 1] = null;
                            }) : this.curShowBanner.show(), this.clickBannerCheck = !0, this.cacheBanerShowPos = e, 
                            Laya.timer.once(3e3, this, () => {
                                this.clickBannerCheck = !1;
                            }), s.isWXPlatform && 1 == this.GetBannerType() && !this.isCustomBanner && Laya.timer.once(5e3, this, this.checkBannerSwitch), 
                            console.log("打开广告" + this.curBannerIndex + " index " + e));
                        }
                    }
                } else console.log("ShowBannerAD bPos == null index " + i);
            }
        }
        checkBannerSwitch() {
            this.cacheBanerShowPos > 0 && this.ShowBannerAD(this.cacheBanerShowPos, null);
        }
        delayOpenAd(e, t, i) {
            if (null != e && null != this.curShowBanner) {
                var s = null == this.curShowBanner.style ? 120 : this.curShowBanner.style.realHeight;
                (isNaN(s) || s > 120) && (s = 120);
                for (var n = 0; n < e.length; n++) {
                    var a = e[n];
                    a.mouseEnabled = !0, a.y = 750 - s - i.btnEndY;
                }
            }
            null != t && (t.show(), this.clickBannerCheck = !0, Laya.timer.once(3e3, this, () => {
                this.clickBannerCheck = !1;
            }));
        }
        bannerResize(e) {
            console.log("BannerW", e.width), console.log("BannerH", e.height), null != this.curShowBanner && (this.curShowBanner.top = s.systemInfo.windowHeight - e.height);
        }
        HideBannerAD() {
            if (this.cacheBanerShowPos = 0, Laya.timer.clear(this, this.checkBannerSwitch), 
            s.isForceInter = !1, null != this.gameADImage && this.gameADImage.removeSelf(), 
            (s.isOppoPlatform || s.isVivoPlatform || s.isOppoGameCenterPlatform) && null != this.oppoNativeImage && (this.oppoNativeImage.parent && this.curNativeData && this.curNativeData.nativeAd && (console.log("ttad nativeAd.load 2"), 
            this.curNativeData.nativeAd.load()), this.oppoNativeImage.removeSelf(), this.oppoNativeShow = !1), 
            s.isVivoPlatform && (this.vivoBannerTrueHide = !0, Laya.timer.once(500, this, () => {
                this.vivoBannerTrueHide && this.HideVivoPromiseAD();
            })), s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && (console.log("ttadhideNative"), e.call("hideNative"), e.call("HideBanner"), 
                e.call("hideBanner")), le.Instance.api.setShowNativeCallBack(e => {});
            }
            if (le.Instance.hideFloatIcon(), null != this.curShowBanner) {
                if (this.isCustomBanner) if (this.curShowBanner.isShow()) this.curShowBanner.hide(); else {
                    var t = this.curShowBanner, i = function() {
                        t.isShow() ? t.hide() : Laya.timer.once(500, this, i);
                    };
                    Laya.timer.once(500, this, i);
                } else this.curShowBanner.hide();
                console.log("关闭广告" + this.curBannerIndex);
            }
            if (Laya.timer.clear(this, this.delayOpenAd), this.curShowBanner = null, this.curBannerIndex = 0, 
            this.dicBannerShowCount[1] >= this.bannerMaxShowCount && this.dicBannerShowCount[2] >= this.bannerMaxShowCount && this.dicBannerShowCount[3] >= this.bannerMaxShowCount && this.dicBannerShowCount[4] >= this.bannerMaxShowCount && this.dicBannerShowCount[5] >= this.bannerMaxShowCount && this.dicBannerShowCount[6] >= this.bannerMaxShowCount && this.dicBannerShowCount[7] >= this.bannerMaxShowCount && this.dicBannerShowCount[8] >= this.bannerMaxShowCount) {
                for (var n = []; n.length < 4; ) {
                    var a = Math.floor(10 * Math.random()) % 8;
                    -1 == n.indexOf(a) && n.push(a);
                }
                for (var o = 0; o < n.length; o++) {
                    var l = n[o];
                    this.dicBannerShowCount[l + 1] = 0, this.LoadBanner[l] && this.LoadBanner[l].destroy(), 
                    console.log("重新创建广告 ", l), this.LoadBanner[l] = null, this.createBanner(l);
                }
            }
        }
        HideVivoPromiseAD() {
            for (var e = 0; e < this.vivoBanner.length; e++) {
                var t = this.vivoBanner[e];
                null != t && (1 == t.state ? null != t.banner && (t.banner.hide(), t.banner.destroy(), 
                Laya.timer.once(1e4, this, () => {
                    le.instance.vivoBannerSpaceTime = !1;
                }), this.vivoBanner.splice(e, 1), e--) : t.state = 2);
            }
        }
        CreateViVoBanner() {
            this.vivoBannerTrueHide = !1;
            for (var e = 0; e < le.instance.vivoBanner.length; e++) if (1 == le.instance.vivoBanner[e].state) return;
            if (!this.vivoBannerSpaceTime) {
                this.vivoBannerSpaceTime = !0;
                var t = this.api.createBannerAd({
                    posId: this.adList[0],
                    style: {}
                }), i = {
                    id: this.vivoBannerID++,
                    state: 0,
                    banner: t
                };
                t.onError(e => {
                    console.log("banner广告加载失败 id " + le.Instance.adList[0] + " code " + e.errCode + " msg " + e.errMsg);
                }), t.onClose(() => {}), t.onSize(e => {}), t.show().then(() => {
                    if (console.log("banner广告展示完成 vb.id " + i.id + " vb.state " + i.state), 2 == i.state) {
                        null != i.banner && (i.banner.hide(), i.banner.destroy(), Laya.timer.once(1e4, this, () => {
                            this.vivoBannerSpaceTime = !1;
                        }));
                        for (var e = 0; e < le.instance.vivoBanner.length; e++) {
                            var t = le.instance.vivoBanner[e];
                            if (t.id == i.id) {
                                le.instance.vivoBanner.splice(e, 1), console.log("移除banner广告 index " + t.id + " 还剩余 " + le.instance.vivoBanner.length);
                                break;
                            }
                        }
                    } else i.state = 1;
                }).catch(e => {
                    console.log("banner广告展示失败", JSON.stringify(e));
                }), this.vivoBanner.push(i);
            }
        }
        ShowVideoAD(t, i) {
            if (w.Instance.GetNetMsgData("c2s_ad_begin").Send({}), s.is4399H5Platform) return s.isHaveAd ? void Laya.Browser.window.H5API.callPlayAd(function(e) {
                console.log("是否可播放广告", e.canPlayAd, "剩余次数", e.remain), e.canPlayAd ? Laya.Browser.window.H5API.playAd(function(e) {
                    console.log("播放状态", e.code, e.message), 10001 == e.code && t && t(1), 10010 == e.code && d.Instance.Send(a.UIGameTipsModel_SetTips, "当前没有视频可以观看,请稍后再试！", 1500);
                }) : d.Instance.Send(a.UIGameTipsModel_SetTips, "今日广告次数已用完", 1500);
            }) : void (t && t(1));
            if (s.isXiaoMiPlatform && s.TaoLuConfig[e.NOVideo] >= 1) return t && t(1), w.Instance.GetNetMsgData("c_decrease_noad_count").Send({}), 
            void s.TaoLuConfig[e.NOVideo]--;
            if (!s.isOppoGameCenterPlatform || s.isHaveAd) if (s.isHaveAd) {
                if (!this.loadInciteBanner) {
                    if (this.inciteVideoPos = i, this.loadInciteBanner = !1, this.showInciteSuccess = !1, 
                    this.InciteCallBack = t, s.isWXPlatform && Math.floor(100 * Math.random()) < (B.Instance.isAddVideoBList ? le.Instance.gotoGameRatioB : le.Instance.gotoGameRatio)) {
                        var n = B.Instance.GetNoClickAppIDList();
                        if (console.log("可强跳转的游戏数量 " + n.length), n.length > 0) return w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                            type: this.inciteVideoPos
                        }), void d.Instance.Send(a.UIVideoToNavigateGame_Open, e => {
                            this.InciteCallBack && this.InciteCallBack(e), 1 == e && w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                                type: 100 + this.inciteVideoPos
                            });
                        });
                    }
                    if (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                        type: 200 + this.inciteVideoPos
                    }), null == this.RewardVideo && this.createVideoAD(), null == this.api || s.wxSDKVersion < (s.isWXPlatform ? 204 : 0) || null == this.RewardVideo) return console.log("SDKVersion 版本太低"), 
                    this.InciteCallBack && this.InciteCallBack(3), void this.ShowWxUpdata();
                    if (this.showInciteADCount = this.showInciteADCount + 1, w.Instance.GetNetMsgData("c2s_watch_ad").Send({
                        type: 1
                    }), this.loadInciteBanner = !0, (s.isQQPlatform || s.isAppPlatform || s.isOppoPlatform || s.isVivoPlatform) && Laya.timer.once(1e4, this, () => {
                        this.loadInciteBanner = !1;
                    }), s.isOppoPlatform || s.isVivoPlatform) {
                        var o = this.RewardVideo.load();
                        s.isVivoPlatform && o && o.then(() => {
                            console.log(">>>>>激励视频广告加载成功");
                        }).catch(e => {
                            console.log(">>>>激励视频广告加载失败", e), le.Instance.loadInciteBanner = !1;
                        });
                    } else s.isQQPlatform ? (this.RewardVideo.onClose(e => (this.RewardVideo.offClose(this.RewardVideo.onClose()), 
                    this.loadInciteBanner = !1, e && e.isEnded || void 0 === e ? (this.showInciteSuccess = !0, 
                    this.InciteCallBack(1), console.log("正常播放结束，可以下发游戏奖励 次数：", this.showInciteADCount), 
                    w.Instance.GetNetMsgData("c2s_ad_box_add").Send({}), w.Instance.GetNetMsgData("c2s_czzl_exp_add").Send({}), 
                    void w.Instance.GetNetMsgData("c2s_watch_ad_upload_forever").Send({
                        type: 2
                    })) : (console.log("播放中途退出，不下发游戏奖励"), this.InciteCallBack(0), void d.Instance.Send(a.UIGameTipsModel_SetTips, "完整观看视频，才能获得奖励！", 1500)))), 
                    this.RewardVideo.load().then(() => {
                        console.log("激励视频加载成功"), this.RewardVideo.show().then(() => {
                            console.log("激励视频 广告显示成功");
                        }).catch(e => {
                            console.log("激励视频 广告显示失败"), d.Instance.Send(a.UIGameTipsModel_SetTips, "当前没有视频可以观看,请稍后再试！", 1500), 
                            le.Instance.loadInciteBanner = !1;
                        });
                    }).catch(e => {
                        console.log("激励视频 广告显示失败"), d.Instance.Send(a.UIGameTipsModel_SetTips, "当前没有视频可以观看,请稍后再试！", 1500), 
                        le.Instance.loadInciteBanner = !1;
                    })) : this.RewardVideo.show().catch(e => {
                        this.RewardVideo.load().then(() => this.RewardVideo.show()).catch(e => {
                            console.log("激励视频 广告显示失败"), d.Instance.Send(a.UIGameTipsModel_SetTips, "当前没有视频可以观看,请稍后再试！", 1500), 
                            le.Instance.loadInciteBanner = !1;
                        }), le.Instance.loadInciteBanner = !1;
                    });
                }
            } else t && t(1); else d.Instance.Send(a.UIGameTipsModel_SetTips, "暂无视频广告！", 1e3);
        }
        ShareGame(e) {
            if (null != this.api) {
                var t = B.Instance.getShareQuery() + "&inviterId=" + s.playerID;
                console.log("setquery2: " + t);
                var i = this.GetShareData();
                i.query = t, this.api.shareAppMessage(i), this.shareBegin = !0, this.shareCallBack = e;
            }
        }
        wxShareGame() {
            if (null != this.api) {
                var e = B.Instance.getShareQuery() + "&inviterId=" + s.playerID;
                console.log("setquery2: " + e);
                var t = this.GetShareData();
                t.query = e, this.api.shareAppMessage(t);
            }
        }
        shareInviteGame() {
            if (null != this.api) if (s.isWXPlatform) {
                var e = {
                    title: "开黑了开黑了！房已建好，王者带队，进组起飞！",
                    imageUrl: "https://csdjres.haowan823.cn/3dmb/sharepic/2.png",
                    query: "roomId=" + s.teamId
                };
                this.api.shareAppMessage(e);
            } else if (s.isTTPlatform) {
                var t = {
                    templateId: "8dgf0ceg82g72e4dd8",
                    query: "roomId=" + s.teamId,
                    success() {
                        console.log("分享成功");
                    },
                    fail(e) {
                        console.log("分享失败");
                    }
                };
                this.api.shareAppMessage(t);
            } else s.is4399H5Platform && Laya.Browser.window.H5API.shareGame("roomId=" + s.teamId);
        }
        ttaddShortcut(e) {
            null != this.api ? this.api.addShortcut({
                success: function(t) {
                    e && e(1);
                },
                fail: function(e) {
                    console.log("onClickttAddDesktop_error", e);
                }
            }) : e && e(0);
        }
        wxShareVideo(e) {
            if (null != this.api) {
                var t = j.Instance.getPath();
                if ("" == t) return d.Instance.Send(a.UIGameTipsModel_SetTips, "当前没有可分享的视频,请先去战斗一场!", 1e3), 
                void (e && e(0));
                var i = B.Instance.getShareQuery() + "&inviterId=" + s.playerID;
                console.log("setquery2: " + i), d.Instance.Send(a.UIGameTipsModel_SetTips, "正在调起视频剪辑请稍等一下...", 15e3);
                var n = e, o = {
                    channel: "video",
                    extra: {
                        withVideoId: !0,
                        videoPath: t,
                        videoTopics: [ "乱斗我最牛" ],
                        hashtag_list: [ "乱斗我最牛" ],
                        video_title: "极限走位，疯狂超神"
                    },
                    success(e) {
                        console.log("分享视频成功", e), j.Instance.newPath = "", null != n && n(1), d.Instance.Send(a.UIFightEnd_OnVideoShared), 
                        d.Instance.Send(a.UIEventBZSK_Share);
                    },
                    fail(e) {
                        console.log("分享视频失败 " + JSON.stringify(e)), d.Instance.Send(a.UIGameTipsModel_SetTips, "分享视频失败", 1e3), 
                        null != n && n(0);
                    }
                };
                this.api.shareAppMessage(o);
            } else e && e(0);
        }
        ShareWaitResult(e) {
            null != this.shareCallBack && (e ? (this.shareCallBack(1), this.shareCount = this.shareCount + 1, 
            console.log("分享成功 次数：", this.shareCount)) : (this.shareCallBack(0), Math.random() > .5 ? d.Instance.Send(a.UIGameTipsModel_SetTips, "分享失败，需分享至群", 1500) : d.Instance.Send(a.UIGameTipsModel_SetTips, "分享失败，需分享至不同群", 1500), 
            console.log("分享失败")), this.shareCallBack = null);
        }
        OppoGotoOtherGame(e, t, i, n, a) {
            null != t && Laya.Browser.window.qg.navigateToMiniGame({
                pkgName: t.jumpKey,
                path: "",
                extraData: {
                    from: "pageA"
                },
                success: function() {
                    console.log(">>>> jumpKey " + t.jumpKey);
                    let e = "";
                    s.isOppoPlatform && (e = "com.lm.xxwzdld.nearme.gamecenter"), s.isVivoPlatform && (e = "com.lm.xxwzdld.vivominigame"), 
                    le.Instance.reportNavigateData(e, t.jumpKey);
                },
                fail: function(e) {
                    console.log(JSON.stringify(e));
                }
            });
        }
        reportNavigateData(e, t) {
            console.log("myPackagename: " + e + ", otherPackagename: " + t);
            let i = "http://quduoduodata.top/Mutualstatistics/add?gamepackagename=" + e + "&linkgamepackagename=" + t;
            var s = new XMLHttpRequest();
            s.onreadystatechange = (() => {
                4 == s.readyState && s.status >= 200 && s.status < 400 && console.log("reportNavigateData success=======");
            }), s.open("GET", i, !0), s.send();
        }
        GotoOtherGame(e, t, i, n, a) {
            if (s.isOppoPlatform) le.instance.OppoGotoOtherGame(e, t, i, n, a); else if (null != le.Instance.api && null != t) {
                var o = {};
                if (o["总点击"] = t.otherName, le.instance.api.aldSendEvent(e, o), null != t) {
                    let s = {
                        appId: t.otherAppId,
                        path: t.otherIndexPath,
                        success(s) {
                            le.instance.gotoGameBegin = !0, B.Instance.gameIconClick(t, {
                                clickpos: i
                            }), console.log("成功前往游戏！", s);
                            var n = {};
                            n["跳转成功"] = t.otherName, le.instance.api.aldSendEvent(e, n), le.instance.api.aldSendEvent("汇总", n), 
                            G.Instance.AddClickApp(t), G.Instance.ListSortByClick(B.Instance.adVideoData), console.log("adv sort: ", B.Instance.adVideoData);
                        },
                        fail(i) {
                            console.log("取消跳转！", i);
                            var s = {};
                            s["取消跳转"] = t.otherName, le.instance.api.aldSendEvent(e, s), le.instance.api.aldSendEvent("汇总", s), 
                            le.instance.gotoGameBegin = !1, null != le.instance.gotoGameCallBack && le.instance.gotoGameCallBack(0);
                        }
                    };
                    le.Instance.api.hasOwnProperty("navigateToMiniProgram") ? le.Instance.api.navigateToMiniProgram(s) : this.ShowWxUpdata(), 
                    null != n && (this.gotoGameCallBack = n);
                } else null != n && n(0);
            }
        }
        GotoGameWaitResult(e) {
            null != this.gotoGameCallBack && (e ? (this.gotoGameCallBack(1), w.Instance.GetNetMsgData("c2s_czzl_exp_add").Send({}), 
            w.Instance.GetNetMsgData("c2s_watch_ad_upload_forever").Send({
                type: 1
            }), console.log("前往游戏成功")) : (this.gotoGameCallBack(0), d.Instance.Send(a.UIGameTipsModel_SetTips, "试玩10秒游戏才能获得奖励！", 1500), 
            console.log("前往游戏失败")), this.gotoGameCallBack = null);
        }
        GetShareData() {
            if (s.isWXPlatform) {
                if (!s.isGs && null != le.instance.shareData) {
                    var e = Math.floor(10 * Math.random()) % le.instance.shareData.length, t = le.instance.shareData[e];
                    return {
                        title: t.title,
                        imageUrl: t.imageUrl,
                        query: "inviter=" + s.tempInviteID
                    };
                }
            } else if (s.isTTPlatform) {
                return {
                    templateId: "4g9fp9pft6qn3dqq6m",
                    query: "",
                    success() {
                        console.log("分享成功");
                    },
                    fail(e) {
                        console.log("分享失败");
                    }
                };
            }
            return {
                title: "3v3真人公平竞技场，海量英雄等你来战",
                imageUrl: "",
                query: "inviter=" + s.tempInviteID
            };
        }
        GetBannerType() {
            if (s.isGs || s.isSearchEnter || 0 == this.switchAD) return 0;
            if (s.fixMisleadAD) return 1;
            var e = new Date().getHours(), t = Math.floor(100 * Math.random());
            if (null != this.bannerTime) for (var i = 0; i < this.bannerTime.length; i++) {
                var n = this.bannerTime[i];
                if (n.bhour < n.ehour) {
                    if (0 != n.rate && n.bhour <= e && e < n.ehour) {
                        if (t < n.rate) return 1;
                        break;
                    }
                } else if (0 != n.rate && (n.bhour <= e || e < n.ehour)) {
                    if (t < n.rate) return 1;
                    break;
                }
            }
            return 0;
        }
        setAdImage() {
            null != B.Instance.advImageButData && B.Instance.advImageButData.length > 0 && (B.Instance.advImageIndex >= B.Instance.advImageButData.length && (B.Instance.advImageIndex = 0), 
            this.adImageData = B.Instance.advImageButData[B.Instance.advImageIndex], B.Instance.advImageIndex++);
        }
        gotoGame() {
            s.isQQPlatform || s.isTTPlatform || s.isAppPlatform || s.isOppoPlatform || s.isVivoPlatform || s.isH5Platform || this.GotoOtherGame("替换WXBanner", this.adImageData, 101, null);
        }
        onBackGameList() {}
        onClickOppoNative() {
            console.log("ttad原生广告点击 " + this.curNativeData), null != this.curNativeData && (s.isOppoPlatform || s.isOppoGameCenterPlatform || s.isVivoPlatform) && (console.log("原生广告点击 " + this.curNativeData.data.adId), 
            this.curNativeData.nativeAd.reportAdClick({
                adId: this.curNativeData.data.adId
            }));
        }
        onClickOppoOverNative() {
            this.curNativeData3 = this.api.GetNativeOverAd(), console.log("ttad原生广告3点击 " + this.curNativeData3), 
            null != this.curNativeData3 && (s.isOppoPlatform || s.isOppoGameCenterPlatform || s.isVivoPlatform) && (console.log("原生广告3点击 " + this.curNativeData3.data.adId), 
            this.curNativeData3.nativeAd.reportAdClick({
                adId: this.curNativeData3.data.adId
            }));
        }
        onClickCloseOppoNative() {
            s.isOppoGameCenterPlatform && s.isForceInter && s.pr_inter >= Math.random() && le.Instance.getRandInter() && (le.Instance.setRandInter(), 
            le.Instance.onClickOppoNative(), s.isForceInter = !1), console.log((this.curNativeData, 
            this.curNativeData.data.adId ? this.curNativeData.data.adId : "")), this.curNativeData = null, 
            this.HideBannerAD();
        }
        checkShowKP(e) {
            if (1 != s.taoluSwitch) return !0;
            if (s.isSearchEnter) return !1;
            if (1 == this.GetBannerType()) return !0;
            if (B.Instance.openSceneList && -1 != B.Instance.openSceneList.indexOf(e)) return !0;
            if (B.Instance.localmlkg) {
                var t = E.Instance.GetKey(this.storagelocalmlkgKey);
                if (null != t && "" != t) return !0;
            }
            return !1;
        }
        exitGame() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("ExitGame");
            }
        }
        AgreePrivacy() {
            if (s.isXiaoMiPlatform || d.Instance.Send(a.UILoginModel_AgreePrivacy, !0), s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("AgreePrivacy");
            }
        }
        showInterstitialad(e) {
            var t;
            if ((s.isDYVivoPlatform || s.isWcfjlPlatform || s.is4399Platform && Math.random() <= .5 && !this.is4399ShowInter) && (null != (t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil")) && (t.call("showInter"), 
            s.is4399Platform))) {
                this.is4399ShowInter = !0;
                let e = 0;
                B.Instance.OppoADctr && Number(B.Instance.OppoADctr.adcd) && (e = Number(B.Instance.OppoADctr.adcd)), 
                Laya.timer.once(1e3 * e, this, () => {
                    this.is4399ShowInter = !1;
                });
            }
            (s.isHuaweiPlatform && le.Instance.showNativeInterstitialad(), s.isOppoGameCenterPlatform && s.canShowNative) && (null != (t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil")) && t.call("showInter"));
        }
        showInterXiaomi() {
            if (this.lastXiaomiInterTime <= 0 && (this.lastXiaomiInterTime = w.Instance.severTime), 
            s.isXiaoMiPlatform && w.Instance.severTime - this.lastXiaomiInterTime > 1e3 * s.xiaomiAppAdSwich.systemInsertIntervalTime) {
                this.lastXiaomiInterTime = w.Instance.severTime;
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("showInter");
            }
        }
        showVideoInterXiaomi() {
            if (this.lastXiaomiVideoInterTime <= 0 && (this.lastXiaomiVideoInterTime = w.Instance.severTime), 
            console.log("ttad NetSocketManager.Instance.severTime - this.lastXiaomiVideoInterTime   " + (w.Instance.severTime - this.lastXiaomiVideoInterTime)), 
            s.isXiaoMiPlatform && s.xiaomiAppAdSwich.insertVideoSwitch && w.Instance.severTime - this.lastXiaomiVideoInterTime > 1e3 * s.xiaomiAppAdSwich.insertVideoInterval) {
                this.lastXiaomiVideoInterTime = w.Instance.severTime;
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && (this.api.isInterVideoShowing = !0, e.call("showVideoInter"));
            }
        }
        getRandAderror() {
            var e = new Date();
            return E.Instance.GetKey("randaderror" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate()) || E.Instance.SaveKey("randaderror" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate(), s.randAderror + ""), 
            console.log("ttad randInterNum " + E.Instance.GetKey("randaderror" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate())), 
            Number(s.xiaomiAppAdSwich.nativeInsertErrNumber) > Number(E.Instance.GetKey("randaderror" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate()));
        }
        setRandAderror() {
            var e = new Date();
            s.randAderror++, E.Instance.SaveKey("randaderror" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate(), s.randAderror + "");
        }
        getAderrorRate() {
            return Number(s.xiaomiAppAdSwich.nativeInsertErrProbability) >= Math.random();
        }
        showNativeInterstitialad(e = !0) {
            if (this.oldShowNativeAdTime <= 0 && (this.oldShowNativeAdTime = w.Instance.severTime), 
            s.isXiaoMiPlatform && s.xiaomiAppAdSwich.nativeInsertSwitch && w.Instance.severTime - this.oldShowNativeAdTime > 1e3 * s.xiaomiAppAdSwich.nativeInsertIntervalTime || s.isHuaweiPlatform) {
                var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != t && (s.isXiaoMiPlatform ? (this.oldShowNativeAdTime = w.Instance.severTime, 
                t.call("showNativeInter", e)) : t.call("showNativeInter"));
            }
        }
        SendPhoneNumber(e) {
            if (s.isAppPlatform) {
                var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != t && t.call("SendPhoneNumber", e);
            }
        }
        SendCodeNumber(e, t) {
            if (s.isAppPlatform) {
                var i = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != i && i.call("SendCodeNumber", e, t);
            }
        }
        SendLogin(e, t) {
            if (s.isAppPlatform) {
                var i = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != i && i.call("SendLogin", e, t);
            }
        }
        ChangeAccount() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.DeviceIdUtil");
                if (null != e) {
                    var t = e.call("getPlayerId");
                    console.log("获得 demo.DeviceIdUtil " + t), s.loginToken = t;
                    var n = e.call("getPlayerName");
                    null != n && (le.Instance.UserInfo.nickName = n), console.log("玩家信息playerID:" + t + "  " + le.Instance.UserInfo.nickName + "++++" + le.Instance.UserInfo.avatarUrl + "++++3"), 
                    le.Instance.IsGetUserInfo = !0, le.Instance.api.AppLogincallBack && le.Instance.api.AppLogincallBack(t);
                }
                le.Instance.UserInfo.nickName = "", le.Instance.UserInfo.avatarUrl = "";
            }
            s.isLoginOpen ? w.Instance.stopConnect() : (s.isChangeAccounting = !0, w.Instance.stopConnect(), 
            ie.Instance.closeAllUI(), console.log("ttad closeAllUI"), s.curGameScene == i.HomeScene ? d.Instance.Send(a.UIGameMain_Open) : s.curGameScene == i.EndScene && Laya.Scene.open("scenes/s_Common.scene", !0, null, Laya.Handler.create(this, e => {
                s.curScene = e, s.curScene.x += s.fixStageX, s.curGameScene = i.HomeScene, d.Instance.Send(a.UIGameMain_Open);
            })));
        }
        forceVideo() {
            if (s.isAppPlatform && B.Instance.OppoADctr && Number(B.Instance.OppoADctr.aderrorrate) && Number(B.Instance.OppoADctr.aderrorrate) >= Math.random()) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("loadVideoAd");
            }
        }
        showInterVideo() {
            if (s.isDYVivoPlatform && s.pr_inter >= Math.random() && !this.isshowInterVideo) {
                this.isshowInterVideo = !0;
                let t = 0;
                B.Instance.OppoADctr && Number(B.Instance.OppoADctr.adcd) && (t = Number(B.Instance.OppoADctr.adcd)), 
                Laya.timer.once(1e3 * t, this, () => {
                    le.Instance.isshowInterVideo = !1;
                });
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("showInterVideo");
            }
        }
        showAppBanner() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("showBanner");
            }
        }
        showXiaomiBanner() {
            if (s.isXiaoMiPlatform && s.xiaomiAppAdSwich.systemBannerSwitch) {
                let t = 352, i = 588, n = 630, a = 125;
                t = s.fixStageX * s.screenScale + (window.screen.width * window.devicePixelRatio - s.fixStageX * s.screenScale * 2) * (t / Laya.stage.designWidth), 
                i = window.screen.height * window.devicePixelRatio * (i / Laya.stage.designHeight), 
                n = window.screen.width * window.devicePixelRatio * (n / Laya.stage.designWidth), 
                a = window.screen.height * window.devicePixelRatio * (a / Laya.stage.designHeight);
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("showBanner", t, i, n, a);
            }
        }
        hideAppBanner() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("hideBanner");
            }
        }
        showFloatIcon(e, t) {
            if (s.isAppPlatform) {
                e = s.fixStageX * s.screenScale + (window.screen.width * window.devicePixelRatio - s.fixStageX * s.screenScale * 2) * (e / Laya.stage.designWidth), 
                t = window.screen.height * window.devicePixelRatio * (t / Laya.stage.designHeight);
                var i = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != i && i.call("showFloatIcon", e, t);
            }
        }
        hideFloatIcon() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("hideFloatIcon");
            }
        }
        getRandInter() {
            var e = new Date();
            return E.Instance.GetKey("randInter" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate()) || E.Instance.SaveKey("randInter" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate(), s.randInterNum + ""), 
            console.log("ttad randInterNum " + E.Instance.GetKey("randInter" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate())), 
            B.Instance.OppoADctr && Number(B.Instance.OppoADctr.aderrormaxcount) > Number(E.Instance.GetKey("randInter" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate()));
        }
        setRandInter() {
            var e = new Date();
            s.randInterNum++, E.Instance.SaveKey("randInter" + e.getFullYear() + "_" + (e.getMonth() + 1) + "_" + e.getDate(), s.randInterNum + "");
        }
        getAderrorrate() {
            return B.Instance.OppoADctr && Number(B.Instance.OppoADctr.aderrorrate) && Number(B.Instance.OppoADctr.aderrorrate) >= Math.random();
        }
        setAdID(e, t, i, n, a, o, l) {
            if (s.isAppPlatform) {
                var h = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != h && h.call("SetAdID", e, t, i, n, a, o, l);
            }
        }
        sendClickStartGame() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && e.call("onClickStart");
            }
        }
        sendShowSplashAd() {
            if (s.isAppPlatform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && w.Instance.severTime - this.oldShowInterstitialAdTime > s.oppoNativeAdcd && (this.oldShowInterstitialAdTime = w.Instance.severTime, 
                e.call("showSplashAd"));
            }
        }
        getUrl() {
            w.Instance.GetNetMsgData("c_get_kb_url").Send({});
        }
        openUrl(e) {
            if (s.isAppPlatform) {
                var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != t && t.call("openUrl", e);
            }
        }
        ShowBannerCSJ(e) {
            var t = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            if (null != t) {
                console.log("ttad+MainConfig.screenScale  " + s.screenScale);
                window.screen.width, window.devicePixelRatio, Laya.stage.designWidth, window.screen.height, 
                window.devicePixelRatio, Laya.stage.designHeight;
                t.call("ShowBanner", e, s.screenScale);
            }
        }
        jump5v5(e) {
            if (s.isWXPlatform) {
                let s, n = B.Instance.allAdvButData;
                for (var t = 0; t < n.length; t++) {
                    var i = n[t];
                    "wxccdf4f9e1e0a4e11" == i.otherAppId && (s = i);
                }
                if (s) le.Instance.GotoOtherGame(e, s, 100, null, !0); else {
                    let e = {
                        appId: "wxccdf4f9e1e0a4e11",
                        path: "",
                        success(e) {
                            console.log("成功前往游戏！", e);
                        },
                        fail(e) {
                            console.log("取消跳转！", e);
                        }
                    };
                    le.Instance.api.navigateToMiniProgram(e);
                }
            }
        }
        setClipboardData(e) {
            this.api && this.api.setClipboardData(e);
        }
        showBoxPortalAd() {
            s.isVivoPlatform && this.api && (this.api.createBoxPortalAd(), le.Instance.HideBannerAD());
        }
        hideBoxPortalAd() {
            s.isVivoPlatform && this.api && this.api.boxPortalAd && (this.api.boxPortalAd.hide(), 
            this.api.boxPortalAd.isDestroyed = !0, this.api.boxPortalAd.destroy());
        }
        showCustomAd(e, t, i, n) {
            s.isWXPlatform && !s.isGs && s.isHaveAd && (i = (s.fixStageX + i) * s.screenScale / s.systemInfo.pixelRatio, 
            n = (s.fixStageY + n) * s.screenScale / s.systemInfo.pixelRatio, this.wxCustomAdID[t] && (2 == e ? (this.wxCustomAd[e] || (this.wxCustomAd[e] = this.api.createCustomAd(this.wxCustomAdID[t], t, i, n)), 
            this.wxCustomAd[e] && (this.wxCustomAd[e].onHide && this.wxCustomAd[e].onHide(() => {
                d.Instance.Send(a.UIMoreGameFull_Close);
            }), this.wxCustomAd[e].onLoad(() => {
                this.hideCustomAd();
            }), this.wxCustomAd[e].onError && this.wxCustomAd[e].onError(() => {
                this.wxCustomAd[e].destroy(), this.wxCustomAd[e] = null, le.Instance.CustomAdCallBack && le.Instance.CustomAdCallBack(), 
                le.Instance.CustomAdCallBack = null, 1 == le.Instance.GetBannerType() && d.Instance.Send(a.UIMoreGameFull_Opened, !0);
            }), d.Instance.Send(a.UIMoreGameFull_Opened), this.wxCustomAd[e].show())) : (this.wxCustomAd[e] || (this.wxCustomAd[e] = this.api.createCustomAd(this.wxCustomAdID[t], t, i, n), 
            this.wxCustomAd[e] && this.wxCustomAd[e].onError(() => {
                this.wxCustomAd[e].destroy(), this.wxCustomAd[e] = null, le.Instance.CustomAdCallBack && le.Instance.CustomAdCallBack(), 
                le.Instance.CustomAdCallBack = null;
            })), this.wxCustomAd[e] && !this.wxCustomAd[e].isShow() && this.wxCustomAd[e].show())));
        }
        hideCustomAd() {
            if (s.isWXPlatform) for (let e = 0; e < this.wxCustomAd.length + 1; e++) 2 != e && this.wxCustomAd[e] && this.wxCustomAd[e].isShow() && this.wxCustomAd[e].hide();
        }
        hideCenterCustomAd() {
            this.wxCustomAd[2] && this.wxCustomAd[2].isShow() && this.wxCustomAd[2].hide();
        }
        GetFixedModeSCALE_SHOWALL() {
            var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            null != e && e.call("changeShowMobel");
        }
        showAppInterstitialad(e) {
            this.oldShowInterstitialAdTime <= 0 && (this.oldShowInterstitialAdTime = w.Instance.severTime);
            let t = w.Instance.severTime - this.oldShowInterstitialAdTime > 1e3 * e;
            console.log("showAppInterstitialad  " + w.Instance.severTime + "   " + this.oldShowInterstitialAdTime + "   " + e + t);
            var i = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
            console.log("this.showAppInterstitialadCallback  " + (null == this.showAppInterstitialadCallback) + " canShow " + t), 
            s.is233Platform && (null != i && t ? (this.oldShowInterstitialAdTime = w.Instance.severTime, 
            i.call("showInter")) : (this.showAppInterstitialadCallback && this.showAppInterstitialadCallback(), 
            this.showAppInterstitialadCallback = null));
        }
        onAppInterstitialadClose() {
            s.is233mlcsjPlatform && (console.log("this.showAppInterstitialadCallback  " + (null == this.showAppInterstitialadCallback)), 
            this.showAppInterstitialadCallback && this.showAppInterstitialadCallback(), this.showAppInterstitialadCallback = null);
        }
        InitAndRegMsg_App2() {
            s.is233Platform && (console.log("插屏广告添加InitAndRegMsg_App"), d.Instance.Reg(a.UIRank_Open, e => {
                Laya.timer.once(1e3, this, () => {
                    this.showAppInterstitialad(60);
                });
            }), d.Instance.Reg(a.UIpersonal_info_Open, e => {
                Laya.timer.once(1e3, this, () => {
                    this.showAppInterstitialad(60);
                });
            }), d.Instance.Reg(a.UISocial_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UIAllHeroShow_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UISeason_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UIWing_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UITianFu_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UIGetFuWen_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UIEventHome_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UIGetFreeSkin_Open, e => {
                this.showAppInterstitialad(60);
            }), d.Instance.Reg(a.UIFightReady_Open, e => {
                this.showAppInterstitialad(60);
            })), s.is233mlcsjPlatform && (d.Instance.Reg(a.UIEventXSLB_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIEventXSLB_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIEventDSGL_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIEventDSGL_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIEventCFTT_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIEventCFTT_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIOnlineReward_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIOnlineReward_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UISuperStart_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UISuperStart_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UISevenDay_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UISevenDay_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIGetFreeSkin_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIGetFreeSkin_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIGetFreeDiamond_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIGetFreeDiamond_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIGetFreeGlod_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIGetFreeGlod_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIGetFreeSP_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIGetFreeSP_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UICode_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UICode_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIGonggao_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIGonggao_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.UIFightInfo_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.UIFightInfo_Close, e => {
                this.hide233Banner();
            }), d.Instance.Reg(a.RankSafeCardWinOrFail_Open, e => {
                this.show233Banner();
            }), d.Instance.Reg(a.RankSafeCardWinOrFail_Close, e => {
                this.hide233Banner();
            }));
        }
        show233Banner() {
            if (s.is233Platform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && s.canshow233Banner && (s.canshow233Banner = !1, s.is233mlcsjPlatform ? e.call("showTTBanner", 1) : e.call("show233Banner"));
            }
        }
        hide233Banner() {
            if (s.is233Platform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null == e || s.canshow233Banner || (s.canshow233Banner = !0, s.is233mlcsjPlatform ? e.call("hideTTBanner") : e.call("hide233Banner"));
            }
        }
        ShowNewNativeAD(e) {
            this.api.ShowNewNativeAd(e);
        }
        HideNewNativeAD(e) {
            this.api.HideNewNativeAd(e);
        }
        ShowInter() {
            le.Instance.api.ShowInter();
        }
    }
    le.instance = null, le.UserInfoButton = null, function(e) {
        e.idle = "idle", e.move = "move", e.attack = "attack", e.skill = "skill", e.die = "die";
    }(ae || (ae = {}));
    class he {}
    class re {
        constructor() {
            this.fightScale = 0, this.uiScale = 0, this.modelHeight = 0;
        }
    }
    class ce {
        constructor() {
            this.isLoadComplete = !1;
        }
        static get Instance() {
            return null == this.instance && (ce.instance = new ce()), ce.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/unitModel.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.configData = e.data) : console.log("config/unitModel.json load fail!"), 
            this.callBack && this.callBack();
        }
        getModel(e) {
            if (null != this.configData) for (let t = 0; t < this.configData.length; t++) {
                let i = this.configData[t];
                if (i.modelID == e) return i;
            }
        }
    }
    ce.instance = null;
    class de {
        constructor() {
            this.curSelectSub2Id = 0, this.curSelectSubHeroId = 0, this.path = "ui_dialog/d_AllHeroShow.scene", 
            this.isLoad = !1, this.isOpen = !1, this.friendid = 0, this.teamID = 0, this.mapID = 0, 
            d.Instance.Reg(a.UIAllHeroShow_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UIAllHeroShow_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIAllHeroShow_UpdateRes, e => {
                this.UpdateRes();
            });
        }
        static get Instance() {
            return null == this.instance && (de.instance = new de()), de.instance;
        }
        Open(e) {
            this.cacheData = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.isOpen || (this.isOpen = !0, this.uiControl.popup(), d.Instance.Send(a.UIGameMain_HideWxClup)), 
            s.isVivoPlatform && le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 43,
                y: 242,
                width: 120,
                height: 120,
                style: I.icon
            } ]);
        }
        Close() {
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.icon), this.isOpen = !1, this.uiControl && this.uiControl.close(), 
            d.Instance.Send(a.UIGameMain_ShowWxClup);
        }
        UpdateRes() {
            this.isOpen && this.uiControl && this.uiControl.updateUI();
        }
    }
    de.instance = null;
    var ue, pe, me, ge, fe = Laya.Scene;
    class Ie {
        constructor() {
            this.path = "ui_view/v_HeroShow3d.scene", this.isOpen = !1, this.isLoad = !1, this.firstOpen = !0, 
            this.selfReady = !1, this.ShowHeroID = 1, d.Instance.Reg(a.UIHeroShow3d_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIHeroShow3d_Close, e => {
                this.Close(e[0]);
            }), d.Instance.Reg(a.UIGameMain_UpdateRes, e => {
                this.updateRes();
            }), d.Instance.Reg(a.UIHeroShow3d_UpdateRes, e => {
                this.updateHero();
            }), d.Instance.Reg(a.UIShowModel_Resume, e => {
                this.showModelResume(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (Ie.instance = new Ie()), Ie.instance;
        }
        Open() {
            d.Instance.Send(a.UIGameTipsModel_SetTips, "正在加载,请稍后..."), this.isOpen = !0, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            fe.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.selfReady = !1, te.Instance.initUnit3DScene("UI_HeroShow3d_View"), d.Instance.Send(a.UIGameTipsModel_Close), 
            ie.Instance.addUI(this), this.uiControl.init(), this.uiControl.updateRes();
        }
        showModelResume(e) {
            "UI_HeroShow3d_View" == e && this.isOpen && this.uiControl && (this.uiControl.removeSelf(), 
            Laya.stage.addChild(this.uiControl));
        }
        Close(e) {
            this.playerData = null, this.selfReady = !1, this.isOpen && (this.isOpen = !1, te.Instance.removeScene3d(), 
            ie.Instance.removeUI(this), q.fixedCurSceneBG(!1), e && d.Instance.Send(a.UIAllHeroShow_Open));
        }
        updateRes() {
            this.isOpen && this.uiControl && this.uiControl.updateRes();
        }
        updateHero() {
            this.isOpen && this.uiControl && this.uiControl.updateHeroList(Ie.Instance.ShowHeroID);
        }
    }
    Ie.instance = null, Ie.waitLogin = !1;
    class ve extends n.ui_dialog.d_AllHeroShowUI {
        constructor() {
            super(), this.classType = 0, this.isShowSkin = !1, this.showHeroID = 1, this.tempShowHeroID = 1, 
            this.showBaseHeroID = 1, this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.list_Sub2.vScrollBarSkin = "", this.list_Sub2.renderHandler = new Laya.Handler(this, this.onList_Sub2Render), 
            this.list_HeroSub.hScrollBarSkin = "", this.list_HeroSub.renderHandler = new Laya.Handler(this, this.onList_HeroSubRender), 
            this.list_hero.vScrollBarSkin = "", this.list_hero.renderHandler = new Laya.Handler(this, this.onList_heroRender);
        }
        onEnable() {
            this.box_chooseHero.visible = !0, this.list_Sub2.visible = !0, this.updateSub2(0), 
            this.updateSubHero(0);
        }
        updateUI() {
            this.updateSub2(0), this.updateSubHero(0);
        }
        closeView() {
            d.Instance.Send(a.UIAllHeroShow_Close);
        }
        onList_Sub2Render(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickUseSub2), i.on("click", this, this.onClickUseSub2, [ e, t ]);
        }
        onList_HeroSubRender(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickUseSubHero), i.on("click", this, this.onClickUseSubHero, [ e, t ]);
        }
        onClickUseSubHero(e, t) {
            this.clickUseSubHero(t), s.is233mlcsjPlatform && le.Instance.showAppInterstitialad(60);
        }
        clickUseSubHero(e) {
            this.updateSubHero(e);
        }
        updateSubHero(e) {
            de.Instance.curSelectSubHeroId = e;
            var t = [], i = [ "全部", "战士", "法师", "射手", "刺客" ];
            for (let e = 0; e < i.length; e++) {
                const n = i[e];
                if (n) {
                    var s = {
                        label_sub: {
                            text: n,
                            color: e == de.Instance.curSelectSubHeroId ? "#ffffff" : "#8da7da"
                        },
                        sp_select: {
                            visible: e == de.Instance.curSelectSubHeroId
                        }
                    };
                    t.push(s);
                }
            }
            this.list_HeroSub.array = t, this.classType = e, this.updateHero(this.showHeroID);
        }
        onClickUseSub2(e, t) {
            this.updateSub2(t);
        }
        updateSub2(e) {
            de.Instance.curSelectSub2Id = e;
            var t = [], i = [ "英雄", "皮肤" ];
            for (let e = 0; e < i.length; e++) {
                const n = i[e];
                if (n) {
                    var s = {
                        label_name: {
                            text: n,
                            color: e == de.Instance.curSelectSub2Id ? "#ffc235" : "#c8b485"
                        },
                        sp_select: {
                            visible: e == de.Instance.curSelectSub2Id
                        }
                    };
                    t.push(s);
                }
            }
            this.list_Sub2.array = t, this.isShowSkin = 1 == e, this.updateHero(this.showHeroID);
        }
        updateHero(e) {
            this.tempShowHeroID = e;
            var t = [];
            if (this.isShowSkin) {
                t = [];
                for (let e = 0; e < Q.Instance.heroShowList.length; e++) {
                    this.showBaseHeroID = Z.Instance.getHaveHero(Q.Instance.heroShowList[e]).id;
                    var i = Q.Instance.getUnitSkinInfo(Q.Instance.getBaseID(this.showBaseHeroID));
                    if (null != i && i.length > 0) {
                        var n = [];
                        n.push(Q.Instance.getBaseID(this.showBaseHeroID));
                        for (let e = 0; e < i.length; e++) n.push(i[e].unitID);
                        for (let e = 0; e < n.length; e++) {
                            const i = Z.Instance.getHaveHero(n[e]);
                            if (i) {
                                a = Q.Instance.getUnitAttribute(i.id), Q.Instance.getBaseID(i.id);
                                if (a) if (o = ce.Instance.getModel(a.modelID)) {
                                    let e = i.buy && i.buy.length > 0, n = s.isWXPlatform ? o.getMsg : o.getMsg2, h = -1 != i.count || 0 != i.demoEtime;
                                    l = {
                                        heroSort: h ? e ? 4 : n ? 3 : 2 : 1,
                                        heroInfo: i,
                                        heroID: i.id,
                                        count: i.count,
                                        canBuy: e,
                                        cacheMsg: n,
                                        img_bg: {
                                            skin: "event/yx_bg_006.png"
                                        },
                                        img_bg0: {
                                            y: h ? 219 : 250
                                        },
                                        img_bg1: {
                                            visible: h,
                                            skin: "9gongge/yx_bg_007.png"
                                        },
                                        img_heroIcon: {
                                            skin: o.heroLoadPic
                                        },
                                        label_name: {
                                            y: h ? 219 : 250,
                                            text: o.heroName
                                        },
                                        label_skinName: {
                                            y: h ? 219 : 250,
                                            visible: !0,
                                            text: o.aliasName
                                        },
                                        label_getinfo: {
                                            visible: h && !e,
                                            text: s.isWXPlatform ? o.getInfo : o.getInfo2
                                        },
                                        label_getType: {
                                            text: h ? e ? "购买" : n ? "前往获取" : "限定活动" : "已拥有"
                                        },
                                        label_countNum: {
                                            visible: h && e,
                                            text: e ? "x" + i.buy[0].num : 0
                                        },
                                        img_monetaryIcon: {
                                            visible: h && e,
                                            skin: e ? Z.Instance.getTpyeIcon(i.buy[0].id) : 0
                                        },
                                        sp_select: {
                                            visible: !1
                                        }
                                    }, this.showBaseHeroID != i.id && (this.classType ? a.classType == this.classType && t.push(l) : t.push(l));
                                }
                            }
                        }
                    }
                }
            } else for (let e = 0; e < Q.Instance.heroShowList.length; e++) {
                const i = Z.Instance.getHaveHero(Q.Instance.heroShowList[e]);
                var a, o, l;
                if (i) if (a = Q.Instance.getUnitAttribute(i.id)) if (o = ce.Instance.getModel(a.modelID)) {
                    let e = i.buy && i.buy.length > 0, n = s.isWXPlatform ? o.getMsg : o.getMsg2, h = -1 != i.count || 0 != i.demoEtime;
                    l = {
                        heroSort: h ? e ? 4 : n ? 3 : 2 : 1,
                        heroInfo: i,
                        heroID: i.id,
                        count: i.count,
                        canBuy: e,
                        cacheMsg: n,
                        img_bg: {
                            skin: "event/yx_bg_004.png"
                        },
                        img_bg0: {
                            y: h ? 219 : 250
                        },
                        img_bg1: {
                            visible: h,
                            skin: "9gongge/yx_bg_005.png"
                        },
                        img_heroIcon: {
                            skin: o.heroLoadPic
                        },
                        label_name: {
                            y: h ? 219 : 250,
                            text: o.heroName
                        },
                        label_skinName: {
                            y: h ? 219 : 250,
                            visible: !1
                        },
                        label_getinfo: {
                            visible: h && !e,
                            text: s.isWXPlatform ? o.getInfo : o.getInfo2
                        },
                        label_getType: {
                            text: h ? e ? "购买" : n ? "前往获取" : "限定活动" : "已拥有"
                        },
                        label_countNum: {
                            visible: h && e,
                            text: e ? "x" + i.buy[0].num : 0
                        },
                        img_monetaryIcon: {
                            visible: h && e,
                            skin: e ? Z.Instance.getTpyeIcon(i.buy[0].id) : 0
                        },
                        sp_select: {
                            visible: !1
                        }
                    }, this.classType ? a.classType == this.classType && t.push(l) : t.push(l);
                }
            }
            t.sort(function(e, t) {
                return t.heroSort - e.heroSort;
            }), this.list_hero.array = t;
        }
        onList_heroRender(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickHero), i.on("click", this, this.onClickHero, [ e, t ]);
            var s = e.getChildByName("label_getType");
            s.off("click", this, this.onClickGet), s.on("click", this, this.onClickGet, [ e, t ]);
        }
        onClickHero(e, t) {
            Ie.Instance.ShowHeroID = e.dataSource.heroID, d.Instance.Send(a.UIAllHeroShow_Close), 
            d.Instance.Send(a.UIHeroShow3d_Open);
        }
        onClickGet(e, t) {
            if (-1 != e.dataSource.count || 0 != e.dataSource.demoEtime) if (e.dataSource.canBuy) Z.Instance.getTpyeValue(e.dataSource.heroInfo.buy[0].id) >= e.dataSource.heroInfo.buy[0].num ? w.Instance.GetNetMsgData("c2s_buy_role").Send({
                role_id: e.dataSource.heroID,
                type: e.dataSource.heroInfo.buy[0].id
            }) : d.Instance.Send(a.UIConfirm_Open, 1, 0, "你的资源不足，无法完成购买，是否前往获取资源？", Laya.Handler.create(this, e => {
                d.Instance.Send(a.UIGetFreeSP_Open);
            })); else if (e.dataSource.cacheMsg && null != e.dataSource.cacheMsg) {
                let t = "";
                t = e.dataSource.cacheMsg, d.Instance.Send(a[t]);
            }
        }
    }
    class _e extends n.ui_dialog.d_AuthUI {
        constructor() {
            super(), this.btn_getVerificationCode.on(Laya.Event.CLICK, this, this.onVerificationCode), 
            this.btn_reg_login.on(Laya.Event.CLICK, this, this.onClickLogin), this.btn_register.on(Laya.Event.CLICK, this, this.onClicktoReg), 
            this.btn_login.on(Laya.Event.CLICK, this, this.onClicktoLogin), this.btn_gotoSignin.on(Laya.Event.CLICK, this, this.ongotoSignin), 
            this.text_input_passW.type = "password", this.text_input_password.type = "password", 
            this.text_input_password2.type = "password";
        }
        onDialogOpen() {
            this.isOpen || (this.isOpen = !0, this.box_register.visible = !1, this.box_signin.visible = !0);
        }
        ongotoSignin() {
            this.box_register.visible = !1, this.box_signin.visible = !0;
        }
        onClickLogin() {
            let e = this.text_input_number.text, t = this.text_input_password.text, i = this.text_input_password2.text;
            console.log("ttadon onClickLogin " + e), e && "" != e && t && "" != t && i && "" != i && t === i ? le.Instance.SendCodeNumber(e, t) : d.Instance.Send(a.UIGameTipsModel_SetTips, "请输入正确的信息", 1500);
        }
        onVerificationCode() {
            let e = this.text_input_phone.text;
            console.log("ttadonGetPhoneNumber " + e), e && "" != e && 11 == e.length ? le.Instance.SendPhoneNumber(e) : d.Instance.Send(a.UIGameTipsModel_SetTips, "请输入正确的信息", 1500);
        }
        onClicktoReg() {
            this.box_register.visible = !0, this.box_signin.visible = !1;
        }
        onClicktoLogin() {
            let e = this.text_input_pNum.text, t = this.text_input_passW.text;
            console.log("ttad ClicktoLogin " + e + " " + t + "opop:" + (1 == (e && "" != e && t && "" != t))), 
            e && "" != e && 11 == e.length && t && "" != t ? le.Instance.SendLogin(e, t) : d.Instance.Send(a.UIGameTipsModel_SetTips, "请输入正确的信息", 1500);
        }
    }
    !function(e) {
        e[e.changeHp = 1] = "changeHp", e[e.changeHpScale = 2] = "changeHpScale", e[e.changeHpMax = 3] = "changeHpMax", 
        e[e.changeHpMaxScale = 4] = "changeHpMaxScale", e[e.changeTempHp = 5] = "changeTempHp", 
        e[e.changeTempMaxHPRate = 6] = "changeTempMaxHPRate", e[e.changePhyAtk = 7] = "changePhyAtk", 
        e[e.changeMagAtk = 8] = "changeMagAtk", e[e.changePhyDef = 9] = "changePhyDef", 
        e[e.changeMagDef = 10] = "changeMagDef", e[e.changeAtkSpeed = 11] = "changeAtkSpeed", 
        e[e.changeSkillCD = 12] = "changeSkillCD", e[e.changeSpeed = 13] = "changeSpeed", 
        e[e.changeSpeedScale = 14] = "changeSpeedScale", e[e.changeState = 15] = "changeState", 
        e[e.changePenetrateDefPhy = 16] = "changePenetrateDefPhy", e[e.changePenetrateDefMag = 17] = "changePenetrateDefMag", 
        e[e.changeIgnorePhyDef = 18] = "changeIgnorePhyDef", e[e.changeIgnoreMagDef = 19] = "changeIgnoreMagDef", 
        e[e.changePhyRecoverHp = 20] = "changePhyRecoverHp", e[e.changeMagRecoverHp = 21] = "changeMagRecoverHp", 
        e[e.changeSuperAtk = 22] = "changeSuperAtk", e[e.changesuperAtkEffect = 23] = "changesuperAtkEffect", 
        e[e.clearBuffID = 24] = "clearBuffID", e[e.changeAllSkillCD = 25] = "changeAllSkillCD", 
        e[e.changeSkillFixCD = 26] = "changeSkillFixCD", e[e.changePhyAtkScale = 27] = "changePhyAtkScale", 
        e[e.changeMagAtkScale = 28] = "changeMagAtkScale", e[e.setSpecialSkill = 29] = "setSpecialSkill", 
        e[e.addExp = 30] = "addExp";
    }(ue || (ue = {}));
    class ye {
        constructor() {
            this.isLoadComplete = !1, this.mingwenDic = {};
        }
        static get Instance() {
            return null == this.instance && (ye.instance = new ye()), ye.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/mingwen.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            if (null != e) {
                this.isLoadComplete = !0, this.configData = e;
                for (let e = 0; e < this.configData.data.length; e++) {
                    var t = this.configData.data[e];
                    this.mingwenDic[t.mwID] = t.mwData;
                }
            } else console.log("config/mingwen.json load fail!");
            this.callBack && this.callBack();
        }
        getMingWen(e, t) {
            var i = t, s = this.mingwenDic[e];
            if (null != s) {
                var n = s[i];
                if (null != n) return n;
                if (t >= s.length) {
                    var a = s[s.length - 1], o = {
                        lv: 0,
                        video: 0,
                        mwType: 0,
                        mwsp: 0,
                        glod: 0,
                        data: []
                    };
                    return o.lv = a.lv, o.video = a.video, o.mwType = a.mwType, o.mwsp = 9999999, o.glod = a.glod, 
                    o.data = a.data, o;
                }
            }
            return null;
        }
        getAttrInfo(e) {
            if (null != this.configData) for (let t = 0; t < this.configData.desc.length; t++) {
                const i = this.configData.desc[t];
                if (i.mwID == e) return i;
            }
        }
        getAttrName(e) {
            return e == ue.changeHp ? "当前生命值" : e == ue.changePhyDef ? "物理防御" : e == ue.changeMagDef ? "法术防御" : e == ue.changeSkillCD ? "技能冷却缩减" : e == ue.changeSpeed ? "移动速度" : e == ue.changeSpeedScale ? "移动速度加成" : e == ue.changeState ? "无效属性" : e == ue.changeAtkSpeed ? "攻击速度" : e == ue.changePhyAtk ? "物理攻击" : e == ue.changeMagAtk ? "法术攻击" : e == ue.changePenetrateDefPhy ? "物理穿透" : e == ue.changePenetrateDefMag ? "法术穿透" : e == ue.changePhyRecoverHp ? "物理吸血" : e == ue.changeMagRecoverHp ? "法术吸血" : e == ue.changeSuperAtk ? "暴击几率" : e == ue.changesuperAtkEffect ? "暴击效果" : e == ue.changeHpMax ? "最大生命值" : e == ue.addExp ? "经验值" : void 0;
        }
        getAttrType(e) {
            return e == ue.changeHp ? 0 : e == ue.changePhyDef ? 0 : e == ue.changeMagDef ? 0 : e == ue.changeSkillCD ? 1 : e == ue.changeSpeed ? 0 : e == ue.changeSpeedScale ? 1 : e == ue.changeState ? 0 : e == ue.changeAtkSpeed ? 1 : e == ue.changePhyAtk ? 0 : e == ue.changeMagAtk ? 0 : e == ue.changePenetrateDefPhy ? 1 : e == ue.changePenetrateDefMag ? 1 : e == ue.changePhyRecoverHp ? 1 : e == ue.changeMagRecoverHp ? 1 : e == ue.changeSuperAtk ? 1 : e == ue.changesuperAtkEffect ? 1 : e == ue.changeHpMax ? 0 : void 0;
        }
    }
    ye.instance = null;
    class Se extends n.ui_dialog.d_BuyEqTipsUI {
        constructor() {
            super(), this.zOrder = 99999;
        }
        init(e, t) {
            this.Box_tips.visible || (this.Box_tips.y = -280, Laya.Tween.to(this.Box_tips, {
                y: 0
            }, 100), this.Box_tips.visible = !0, s.isWXPlatform && le.Instance.ShowBannerAD(4, this)), 
            this.label_tipsname.text = "成功获得：" + e;
            var i = [];
            for (var n in t) if ("-1" != n) {
                var a = t[n];
                if (a.oldV != a.newV) {
                    var o = {
                        label_attr: {
                            text: ye.Instance.getAttrName(n) + ": " + a.oldV + " -> " + a.newV
                        }
                    };
                    i.push(o);
                }
            }
            var l = t[-1];
            if (l) {
                o = {
                    label_attr: {
                        text: "" + l.newV
                    }
                };
                i.push(o);
            }
            this.list_changeattr.array = i;
        }
        closeView() {
            this.label_tipsname.text = "", this.list_changeattr.array = [], this.Box_tips.visible = !1, 
            this.Box_tips.y = -280, le.Instance.HideBannerAD();
        }
    }
    class we extends n.ui_dialog.d_CleanADUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.CLICK, this, this.onClickClose), this.sp_jump.on(Laya.Event.CLICK, this, this.onClickJump);
        }
        onClickJump() {
            le.Instance.getUrl();
        }
        onClickClose() {
            d.Instance.Send(a.UICleanAD_Close);
        }
    }
    class De extends n.ui_dialog.d_CodeUI {
        constructor() {
            super(), this.img_ok.on(Laya.Event.MOUSE_DOWN, this, this.onClickStart), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose);
        }
        onClickStart() {
            var e = this.text_input.text;
            e && "" != e && w.Instance.GetNetMsgData("c2s_use_dhm").Send({
                dhmcode: e
            }), this.text_input.text = "";
        }
        onClickClose() {
            d.Instance.Send(a.UICode_Close);
        }
        init() {
            this.text_input.text = "";
        }
    }
    class ke extends n.ui_dialog.d_ConfirmUI {
        constructor() {
            super(), this.img_ok.on(Laya.Event.MOUSE_DOWN, this, this.onClick_OK), this.img_cancle.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Cancle);
        }
        onClick_OK() {
            d.Instance.Send(a.UIConfirm_OK);
        }
        onClick_Cancle() {
            d.Instance.Send(a.UIConfirm_Cancle);
        }
        updateData(e, t, i, s, n) {
            this.img_video.visible = e >= 2, 0 == e ? (this.img_ok.x = 606, this.img_cancle.visible = !1) : (this.img_ok.x = 741, 
            this.img_cancle.visible = !0), t > 0 ? (this.label_msg.y = 254, this.img_diamond.visible = !0, 
            this.label_diamond.visible = !0, this.label_diamond.text = "x" + t, this.label_diamond.color = i ? "#ffffff" : "#ff0000") : (this.label_msg.y = 290, 
            this.img_diamond.visible = !1, this.label_diamond.visible = !1), this.label_msg.text = s, 
            this.label_title && (this.label_title.text = n);
        }
    }
    class Ce extends n.ui_dialog.d_ContinueGameUI {
        constructor() {
            super(), this.sp.on(Laya.Event.CLICK, this, this.onClickSP);
        }
        onClickSP() {
            d.Instance.Send(a.UIContinueGame_Close);
        }
    }
    class be {
        constructor() {
            this.isLoadComplete = !1, this.dicEffectModel = {};
        }
        static get Instance() {
            return null == this.instance && (be.instance = new be()), be.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/effectSkin.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            if (null != e) {
                this.isLoadComplete = !0;
                for (let t = 0; t < e.length; t++) {
                    const i = e[t];
                    this.dicEffectModel[i.name] = i.skin;
                }
            } else console.log("config/effectSkin.json load fail!");
            this.callBack && this.callBack();
        }
        getEffectSkin(e, t, i) {
            if (0 != t) {
                var s = this.dicEffectModel[e];
                if (s) for (let e = 0; e < s.length; e++) if (s[e].skinId == i) return 1 == t ? s[e].team1 : s[e].team2;
            }
            return e;
        }
    }
    be.instance = null;
    class Pe {
        constructor() {
            this.handler = new Laya.Handler(this, this.updatePos), this.bloodBarList = [], this.isEnd = !1;
        }
        static get Instance() {
            return null == this.instance && (Pe.instance = new Pe()), Pe.instance;
        }
        init() {
            this.isEnd = !1, Laya.timer.clearAll(this), f.Instance.renderFrameTimer.frameLoop(1, this, this.updatePos);
        }
        clear() {
            this.isEnd = !1, Laya.timer.clearAll(this), f.Instance.renderFrameTimer.clear(this, this.updatePos);
        }
        initTimePos() {
            this.isEnd = !0, Laya.timer.frameLoop(1, this, this.updatePos);
        }
        addUIEffect(e, t) {
            this.bloodBarList.push({
                instanceId: e,
                bar: t
            });
        }
        removeUIEffect(e) {
            for (let t = 0; t < this.bloodBarList.length; t++) this.bloodBarList[t].instanceId == e && (this.bloodBarList.splice(t, 1), 
            t--);
        }
        updatePos() {
            if (this.isEnd || !f.Instance.isSpeedPlay) for (let e = 0; e < this.bloodBarList.length; e++) {
                const t = this.bloodBarList[e].bar;
                t && t.visible && (Y.Instance.Pos3DTo2D(t.pos3D, t.pos), t.setPos(u.decimalRound(t.pos.x), u.decimalRound(t.pos.y)), 
                this.checkXY(t.pos.x, t.pos.y) ? t.root.visible = !1 : t.root.visible = !0);
            }
        }
        checkXY(e, t) {
            return e < 0 || e > s.screenScale * Laya.stage.designWidth + 2 * s.fixStageX || (t < 0 || t > s.screenScale * Laya.stage.designHeight);
        }
    }
    Pe.instance = null;
    class xe {
        constructor() {
            this.visible = !1, this.pos = new Laya.Vector4(), this.pos3D = new Laya.Vector3(), 
            this.instanceId = xe._instanceId--;
        }
        setPos(e, t) {}
    }
    xe._instanceId = -9e5;
    class Te extends xe {
        constructor() {
            super(), this.pos = new Laya.Vector4(), this.bg = new Laya.Sprite(), this.bg.cacheAs = "bitmap", 
            this.bg.zOrder = 100, this.root = new Laya.Sprite(), this.root.addChild(this.bg), 
            this.root.zOrder = 100;
        }
        play(e, t, i, s, n, a) {
            this.pos3D.setValue(e.x, e.y, e.z), Y.Instance.Pos3DTo2D(this.pos3D, this.pos), 
            this.root.pos(this.pos.x, this.pos.y), this.bg.x = 0, this.bg.y = 0, this.visible = !0, 
            this.setNum(t, s, n, a), Y.Instance.addChild2D(this.root), Pe.Instance.addUIEffect(this.instanceId, this), 
            q.AnimationDamage(this.bg, i, s ? .3 : 0, () => {
                this.visible = !1, this.root.removeSelf(), Pe.Instance.removeUIEffect(this.instanceId), 
                Laya.Pool.recover("bjShow", this);
            });
        }
        setPos(e, t) {
            this.root && this.root.pos(e, t);
        }
        setNum(e, t, i, s) {
            var n = 0, a = 0, o = "", l = "";
            if (2 == s ? (o = "fight/b_fsnum_", l = "fight/f_num_b.png") : 3 == s ? (o = "fight/b_zsnum_", 
            l = "fight/w_num_b.png") : (o = "fight/b_num_", l = "fight/r_num_b.png"), this.bg.graphics.clear(), 
            i) this.bg.graphics.loadImage("fight/miss.png", 0); else {
                for (;e > 0; ) n = e, n -= 10 * (e = Math.floor(e / 10)), this.bg.graphics.loadImage(o + n + ".png", -16 * a), 
                a++;
                t && this.bg.graphics.loadImage(l, -16 * a, -1);
            }
        }
        destroy() {
            this.visible = !1, Pe.Instance.removeUIEffect(this.instanceId), this.bg && (this.bg.removeSelf(), 
            this.bg.destroy()), this.root && (this.root.removeSelf(), this.root.destroy());
        }
    }
    class Ue extends xe {
        constructor() {
            super(), this.bg = new Laya.Sprite(), this.bg.zOrder = 100, this.bg.loadImage("fight/tongyong_img_001.png"), 
            this.label = new Laya.Text(), this.label.color = "#f4ba00", this.label.bold = !0, 
            this.label.x = 32, this.label.y = 6, this.label.fontSize = 18, this.label.width = 60, 
            this.label.align = "left", this.label.stroke = 2, this.label.strokeColor = "#000000", 
            this.bg.addChild(this.label), this.root = new Laya.Sprite(), this.root.addChild(this.bg);
        }
        play(e, t) {
            this.pos3D.setValue(e.x, e.y, e.z), Y.Instance.Pos3DTo2D(this.pos3D, this.pos), 
            this.root.pos(this.pos.x, this.pos.y), this.bg.x = 0, this.bg.y = 0, this.visible = !0, 
            this.label.text = t + "g", Y.Instance.addChild2D(this.root), Pe.Instance.addUIEffect(this.instanceId, this), 
            q.AnimationEnd(this.bg, () => {
                this.visible = !1, this.root.removeSelf(), Pe.Instance.removeUIEffect(this.instanceId), 
                Laya.Pool.recover("goldShow", this);
            });
        }
        setPos(e, t) {
            this.root && this.root.pos(e, t);
        }
        destroy() {
            this.visible = !1, Pe.Instance.removeUIEffect(this.instanceId), this.label && (this.label.removeSelf(), 
            this.label.destroy()), this.bg && (this.bg.removeSelf(), this.bg.destroy()), this.root && (this.root.removeSelf(), 
            this.root.destroy());
        }
    }
    class Le extends xe {
        constructor() {
            super(), this.bg = new Laya.Sprite(), this.bg.zOrder = 100, this.label = new Laya.Text(), 
            this.label.color = "#b9ff30", this.label.bold = !0, this.label.x = 35, this.label.y = 8, 
            this.label.fontSize = 24, this.label.width = 60, this.label.align = "left", this.label.stroke = 4, 
            this.label.strokeColor = "#457e1e", this.bg.addChild(this.label), this.root = new Laya.Sprite(), 
            this.root.addChild(this.bg);
        }
        play(e, t) {
            this.pos3D.setValue(e.x, e.y, e.z), Y.Instance.Pos3DTo2D(this.pos3D, this.pos), 
            this.root.pos(this.pos.x, this.pos.y), this.bg.x = 0, this.bg.y = 0, this.visible = !0, 
            this.label.text = "+" + t, Y.Instance.addChild2D(this.root), Pe.Instance.addUIEffect(this.instanceId, this), 
            q.AnimationEnd(this.bg, () => {
                this.visible = !1, this.root.removeSelf(), Pe.Instance.removeUIEffect(this.instanceId), 
                Laya.Pool.recover("hpShow", this);
            });
        }
        setPos(e, t) {
            this.root && this.root.pos(e, t);
        }
        destroy() {
            this.visible = !1, Pe.Instance.removeUIEffect(this.instanceId), this.label && (this.label.removeSelf(), 
            this.label.destroy()), this.bg && (this.bg.removeSelf(), this.bg.destroy()), this.root && (this.root.removeSelf(), 
            this.root.destroy());
        }
    }
    class Ne extends xe {
        constructor() {
            super(), this.label = new Laya.Text(), this.label.color = "#00ff00", this.label.bold = !0, 
            this.label.x = 0, this.label.y = 25, this.label.fontSize = 24, this.label.width = 300, 
            this.label.pivotX = 150, this.label.align = "center", this.label.stroke = 4, this.label.strokeColor = "#000000", 
            this.label.zOrder = 100, this.root = new Laya.Sprite(), this.root.addChild(this.label);
        }
        play(e, t) {
            this.pos3D.setValue(e.x, e.y, e.z), Y.Instance.Pos3DTo2D(this.pos3D, this.pos), 
            this.root.pos(this.pos.x, this.pos.y), this.label.x = 0, this.label.y = 0, this.visible = !0, 
            this.label.text = t, Y.Instance.addChild2D(this.root), Pe.Instance.addUIEffect(this.instanceId, this), 
            q.AnimationEnd(this.label, () => {
                this.visible = !1, this.root.removeSelf(), Pe.Instance.removeUIEffect(this.instanceId), 
                Laya.Pool.recover("textShow", this);
            });
        }
        setPos(e, t) {
            this.root && this.root.pos(e, t);
        }
        destroy() {
            this.visible = !1, Pe.Instance.removeUIEffect(this.instanceId), this.label && (this.label.removeSelf(), 
            this.label.destroy()), this.root && (this.root.removeSelf(), this.root.destroy());
        }
    }
    class Me {
        constructor() {
            this.openPool = !1, this.poolKey = [ "goldShow", "textShow", "hpShow", "bjShow" ], 
            this.unitList = [], this.dicEffectSprite3D = {}, this.waitDestroyEffectSprite3D = [], 
            this.loadEffectNum = 0, this.loadEffectCompleteNum = 0, this.initEffectList = [ "3dres/effect/e_ui_zhixiang.lh", "3dres/effect/e_ui_shifa.lh", "3dres/effect/e_ui_yuan.lh", "3dres/effect/e_ui_shifahong.lh", "3dres/effect/e_jiansu.lh", "3dres/effect/e_jiasu.lh", "3dres/effect/e_xuanyun.lh", "3dres/effect/e_shj.lh", "3dres/effect/e_xuebao.lh", "3dres/effect/e_shouji.lh", "3dres/effect/e_xuebao.lh" ], 
            this.initEffectList_sh = [ "3dres/effect/e_SHtbhy.lh", "3dres/effect/e_jyshu1.lh", "3dres/effect/e_jyshu2.lh", "3dres/effect/e_jyshu3.lh", "3dres/effect/e_jyshu4.lh", "3dres/effect/e_xpjn1.lh", "3dres/effect/e_xpjn2.lh", "3dres/effect/e_xpjn3.lh" ], 
            this.pcEffectList = [ "3dres/effect/e_zhixiang.lh", "3dres/effect/e_select.lh" ];
        }
        static get Instance() {
            return null == this.instance && (Me.instance = new Me()), Me.instance;
        }
        initPool() {
            this.openPool = !0, this.loadEffectNum = 0, this.loadEffectCompleteNum = 0, this.effectInitPos = null, 
            Laya.timer.clearAll(this), Laya.timer.loop(100, this, this.waitDestroyUpdate, [ !1 ]);
            for (var e = 0; e < 4; e++) {
                var t = new Ue();
                Laya.Pool.recover("goldShow", t);
            }
            for (e = 0; e < 4; e++) {
                var i = new Ne();
                Laya.Pool.recover("textShow", i);
            }
            for (e = 0; e < 2; e++) {
                var n = new Le();
                Laya.Pool.recover("hpShow", n);
            }
            for (e = 0; e < 10; e++) {
                var a = new Te();
                Laya.Pool.recover("bjShow", a);
            }
            for (let e = 0; e < this.initEffectList.length; e++) this.loadEffect(this.initEffectList[e], 0, 0);
            if (Y.curMapID == Y.mapID_sh) for (let e = 0; e < this.initEffectList_sh.length; e++) this.loadEffect(this.initEffectList_sh[e], 0, 0);
            if ((s.isPCPlatform || s.is4399H5Platform || s.isH5Test) && Laya.Browser.onPC) for (let e = 0; e < this.pcEffectList.length; e++) this.loadEffect(this.pcEffectList[e], 0, 0);
        }
        clearPool() {
            this.openPool = !1, this.loadEffectNum = 0, this.loadEffectCompleteNum = 0, this.effectInitPos = null, 
            Laya.timer.clearAll(this), this.waitDestroyUpdate(!0);
            for (let t = 0; t < this.poolKey.length; t++) {
                const i = this.poolKey[t];
                for (;;) {
                    var e = Laya.Pool.getItem(i);
                    if (null == e) break;
                    e.destroy(), e = null;
                }
                Laya.Pool.clearBySign(i);
            }
            for (;this.unitList.length > 0; ) {
                for (var t = this.unitList.shift(); ;) {
                    var i = Laya.Pool.getItem(t);
                    if (null == i) break;
                    i.destroy(), i = null;
                }
                Laya.Pool.clearBySign(t);
            }
            for (const e in this.dicEffectSprite3D) {
                const t = this.dicEffectSprite3D[e];
                for (;;) {
                    var s = Laya.Pool.getItem(e);
                    if (null == s) break;
                    t.count--, s.destroy(), s = null;
                }
                Laya.loader.clearRes(e), t.count > 0 && console.error("res destroy count error ! key " + e + " count " + t.count);
            }
            this.dicEffectSprite3D = {};
        }
        loadEffect(e, t, i) {
            var s = be.Instance.getEffectSkin(e, t, i);
            Laya.loader.getRes(s) || (this.loadEffectNum++, Laya.loader.create(s, Laya.Handler.create(this, this.onEffectComplete, [ s ])));
        }
        checkEffectLoadComplete() {
            return 0 == this.loadEffectNum ? 1 : this.loadEffectCompleteNum / this.loadEffectNum;
        }
        onEffectComplete(e, t) {
            var i;
            this.dicEffectSprite3D[e] || (this.dicEffectSprite3D[e] = {
                count: 0,
                sp: t
            }, i = t, Y.Instance.addChild(i), null == this.effectInitPos && Y.Instance.mainCamera && (this.effectInitPos = new Laya.Vector3(), 
            this.effectInitPos.x = Y.Instance.mainCamera.transform.position.x + Y.Instance.mainCameraForwardScale.x, 
            this.effectInitPos.y = Y.Instance.mainCamera.transform.position.y + Y.Instance.mainCameraForwardScale.y, 
            this.effectInitPos.z = Y.Instance.mainCamera.transform.position.z + Y.Instance.mainCameraForwardScale.z), 
            null != this.effectInitPos && (i.transform.position = this.effectInitPos)), Laya.timer.once(500, this, (e, t) => {
                this.loadEffectCompleteNum++, t && (t.removeSelf(), Laya.Pool.recover(e, t));
            }, [ e, i ]);
        }
        waitDestroyEffect(e, t, i) {
            this.waitDestroyEffectSprite3D.push({
                name: e,
                obj: t,
                time: i
            });
        }
        waitDestroyUpdate(e) {
            for (let t = 0; t < this.waitDestroyEffectSprite3D.length; t++) {
                const i = this.waitDestroyEffectSprite3D[t];
                i.time -= 100, (i.time < 0 || e) && (this.removeEffect(i.name, i.obj), this.waitDestroyEffectSprite3D.splice(t, 1), 
                t--);
            }
        }
        getEffect(e, t, i) {
            var s = be.Instance.getEffectSkin(e, t, i), n = Laya.Pool.getItem(s);
            if (null != n) return {
                name: s,
                obj: n
            };
            if (this.dicEffectSprite3D[s]) {
                var a = this.dicEffectSprite3D[s];
                if (a.sp) return a.count++, {
                    name: s,
                    obj: a.sp.clone()
                };
                console.error(s + " not found!");
            }
            return {
                name: s,
                obj: null
            };
        }
        removeEffect(e, t) {
            t && (t.removeSelf(), Laya.Pool.recover(e, t), t = null);
        }
        getUnit(e) {
            -1 == this.unitList.indexOf(e) && this.unitList.push(e);
            var t = Laya.Pool.getItem(e);
            return null != t && (t.deadTime -= 1e7), t;
        }
        addUnit(e) {
            this.openPool && e.cachePoolKey && Laya.Pool.recover(e.cachePoolKey, e);
        }
        getFlyObj(e) {
            return Laya.Pool.getItem(e);
        }
        addFlyObj(e) {
            this.openPool && Laya.Pool.recover(e.poolKey, e);
        }
    }
    Me.instance = null, function(e) {
        e.Idle = "idle", e.Move = "move", e.Attack = "attack", e.Die = "die";
    }(pe || (pe = {}));
    class Ae {}
    class Oe {
        constructor() {
            this.stateDic = {};
        }
        initFsm() {
            f.Instance.frameTimer.frameLoop(1, this, this.updateState), f.Instance.localFrameTimer.frameLoop(1, this, this.localUpdateState), 
            f.Instance.renderFrameTimer.frameLoop(1, this, this.renderUpdateState);
        }
        clearFsm() {
            this.stateDic = {}, f.Instance.frameTimer.clear(this, this.updateState), f.Instance.localFrameTimer.clear(this, this.localUpdateState), 
            f.Instance.renderFrameTimer.clear(this, this.renderUpdateState);
        }
        addState(e) {
            this.stateDic[e.stateName] = e, null == this.curState && (this.curState = e, this.curStateTime = 0, 
            this.curState.initFun(), this.stateInitFunCallComplete && this.stateInitFunCallComplete());
        }
        switchState(e) {
            if (null != this.stateDic && this.curState.stateName != e) {
                var t = this.stateDic[e];
                null != t && (s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.instanceID + " curState " + this.curState.stateName + " newState " + t.stateName), 
                null != this.curState && (this.curState.endFun(), this.stateEndFunCallComplete && this.stateEndFunCallComplete()), 
                this.curState = t, this.curStateTime = 0, this.curState.initFun(), this.stateInitFunCallComplete && this.stateInitFunCallComplete());
            }
        }
        updateState() {
            this.curStateTime = this.curStateTime + f.logicFrameTime, null != this.curState && null != this.curState.updateFun && this.curState.updateFun(), 
            this.stateUpdateFunCallComplete && this.stateUpdateFunCallComplete();
        }
        localUpdateState() {
            this.localStateUpdateFunCall && this.localStateUpdateFunCall();
        }
        renderUpdateState() {
            this.renderStateUpdateFunCall && this.renderStateUpdateFunCall();
        }
    }
    !function(e) {
        e[e.None = 0] = "None", e[e.UNIT = 1] = "UNIT", e[e.HERO = 2] = "HERO", e[e.BUILD = 3] = "BUILD";
    }(me || (me = {}));
    class Ee extends Oe {
        constructor() {
            super(...arguments), this.skinID = 0, this.modelLoadComplete = !1, this.unitType = me.None, 
            this.curPlayAnimName = "", this.animatorPlayClipDic = {}, this.isDestroy = !1, this.curAnimDuration = 0, 
            this.damageLogicPos = new Laya.Point(), this.damageLogicPosDirection = new Laya.Vector2(), 
            this._showPos = new Laya.Vector3(), this._logicPos = new Laya.Point(), this._logicToshowPos = new Laya.Vector3(), 
            this.rotationEuler = new Laya.Vector3(0, 0, 0), this.showPos2d = new Laya.Vector4();
        }
        get logicPos() {
            return this._logicPos;
        }
        get logicToShowPos() {
            return this._logicToshowPos.setValue(this._logicPos.x / 100, 0, this._logicPos.y / 100), 
            this._logicToshowPos.y = this._showPos.y, this._logicToshowPos;
        }
        get showPos() {
            return this._showPos;
        }
        getDamagePointLogicPos(e) {
            return this.modelData ? (this.damageLogicPosDirection.setValue(e.x - this._logicPos.x, e.y - this._logicPos.y), 
            Laya.Vector2.normalize(this.damageLogicPosDirection, this.damageLogicPosDirection), 
            this.damageLogicPosDirection.x = u.decimalRound(this.damageLogicPosDirection.x), 
            this.damageLogicPosDirection.y = u.decimalRound(this.damageLogicPosDirection.y), 
            this.damageLogicPos.x = this._logicPos.x + Math.floor(this.damageLogicPosDirection.x * this.modelData.radius * 100), 
            this.damageLogicPos.y = this._logicPos.y + Math.floor(this.damageLogicPosDirection.y * this.modelData.radius * 100), 
            isNaN(z.Instance.getHeightMap(this.damageLogicPos.x / 100, this.damageLogicPos.y / 100)) && (this.damageLogicPos.x = this._logicPos.x, 
            this.damageLogicPos.y = this._logicPos.y), this.damageLogicPos) : this._logicPos;
        }
        setVisible(e) {}
        initModel(e, t, i) {
            this.curSprite3D = new Laya.Sprite3D(), this.effectBindSprite3D = new Laya.Sprite3D(), 
            this.teamID = i, this.instanceID = e, this.unitID = t, this.unitData = Q.Instance.getUnitAttribute(this.unitID), 
            this.isDestroy = !1, null != this.unitData && (this.unitType = this.unitData.unitType, 
            this.modelID = this.unitData.modelID, this.cachePoolKey = 1e6 * this.teamID + this.modelID + "", 
            this.modelData = ce.Instance.getModel(this.modelID)), this.modelData && (this.initAnimatorClip(this.modelData.animator), 
            this.curSprite3D.transform.localScale = new Laya.Vector3(this.modelData.fightScale, this.modelData.fightScale, this.modelData.fightScale), 
            Laya.Loader.getRes(this.modelData.resName) ? this.onModelComplete() : Laya.loader.create(this.modelData.resName, Laya.Handler.create(this, this.onModelComplete)));
        }
        destroyModel() {
            for (const e in this.animatorPlayClipDic) {
                const t = this.animatorPlayClipDic[e];
                t.clip && t.clip.destroy();
            }
            this.curSprite3D && (this.curSprite3D.removeSelf(), this.curSprite3D.destroy(!0), 
            this.curSprite3D = null), this.effectBindSprite3D && (this.effectBindSprite3D.removeSelf(), 
            this.effectBindSprite3D.destroy(!0), this.effectBindSprite3D = null), this.wingPointSprite3D = null, 
            this.headPointSprite3D = null, this.centerPointSprite3D = null, this.topPointSprite3D = null, 
            this.shadowSprite3D = null, this.modelSprite3D = null, this.texturePath && Laya.Loader.clearRes(this.texturePath), 
            this.modelData && Laya.Loader.clearRes(this.modelData.resName);
        }
        onModelComplete() {
            if (!this.isDestroy && null != this.modelData) {
                if (this.modelLoadComplete = !0, this.modelSprite3D = Laya.Loader.getRes(this.modelData.resName).clone(), 
                this.modelSprite3D) {
                    this.modelSprite3D.transform.position = new Laya.Vector3(0, 0, 0), this.animator = q.getAnimator(this.modelSprite3D), 
                    this.createAnimatorClip(this.animator, this.modelData.animator), this.playAnim(ae.idle);
                    var e, t = this.modelSprite3D.numChildren;
                    for (let e = 0; e < t; e++) {
                        const t = this.modelSprite3D.getChildAt(e);
                        t && t.name.startsWith("shadow") && (this.shadowSprite3D = t), t && t.name.startsWith("centerPoint") && (this.centerPointSprite3D = t), 
                        t && t.name.startsWith("topPoint") && (this.topPointSprite3D = t);
                    }
                    if (this.wingPointSprite3D = q.findChild(this.modelSprite3D, "wingPoint"), this.headPointSprite3D = q.findChild(this.modelSprite3D, "sh_fx"), 
                    this.curSprite3D.addChild(this.modelSprite3D), this.setModelTypeShow(1), null != this.modelData.blueTexture && "" != this.modelData.blueTexture && 1 == this.teamID ? e = this.modelData.blueTexture : null != this.modelData.redTexture && "" != this.modelData.redTexture && 2 == this.teamID && (e = this.modelData.redTexture), 
                    this.meshRenderers = q.getMeshRenderersByName(this.modelSprite3D, this.modelData.meshNodeName), 
                    null != e && null != this.meshRenderers) {
                        this.texturePath = e;
                        var i = Laya.Loader.getRes(e);
                        if (null != i) for (let e = 0; e < this.meshRenderers.length; e++) {
                            const t = this.meshRenderers[e];
                            var s = t.meshRenderer;
                            if (null == s && (s = t.skinnedMeshRenderer), s) {
                                var n = s.material;
                                null != n && (n.albedoTexture = i);
                            }
                        } else Laya.Texture2D.load(e, Laya.Handler.create(null, function(e, t) {
                            if (t) for (let n = 0; n < e.length; n++) {
                                const a = e[n];
                                var i = a.meshRenderer;
                                if (null == i && (i = a.skinnedMeshRenderer), i) {
                                    var s = i.material;
                                    null != s && (s.albedoTexture = t);
                                }
                            }
                        }, [ this.meshRenderers ]));
                    }
                    1 == this.modelData.fixRotationByCamera && (this.rotationEuler = new Laya.Vector3(this.modelSprite3D.transform.rotationEuler.x, this.modelSprite3D.transform.rotationEuler.y + (Y.Instance.mainCameraFixRotation ? 180 : 0), this.modelSprite3D.transform.rotationEuler.z), 
                    this.curSprite3D.transform.rotationEuler = this.rotationEuler);
                }
                Y.Instance.addChild(this.curSprite3D), Y.Instance.addChild(this.effectBindSprite3D), 
                this.wingCacheRes && this.loadWing(this.wingCacheRes), null != this.modelData.headEffect && "" != this.modelData.headEffect ? this.loadSHEffect(this.modelData.headEffect) : Y.curMapID == Y.mapID_sh && 2 == this.teamID && this.loadSHEffect("3dres/effect/e_SHtbhy.lh");
            }
        }
        initAnimatorClip(e) {
            for (let i = 0; i < e.length; i++) {
                const s = e[i];
                var t;
                if ((t = new he()).clip = null, t.clipLoop = 1 == s.isLoop, t.clipDuration = s.duration ? s.duration : 0, 
                t.nextName = s.nextName ? s.nextName : "", this.animatorPlayClipDic[s.name] = t, 
                "" != t.nextName) (t = new he()).clip = null, t.clipLoop = 1 == s.isLoop, t.clipDuration = s.duration, 
                this.animatorPlayClipDic[s.nextName] = t;
            }
        }
        createAnimatorClip(e, t) {
            if (null != e && null != t) {
                var i = 0;
                for (let e = 0; e < t.length; e++) {
                    const s = t[e];
                    s.end > i && (i = s.end);
                }
                for (let a = 0; a < t.length; a++) {
                    const o = t[a];
                    var s = null;
                    if (0 != o.end) {
                        let t = new Laya.AnimatorState();
                        t.name = o.name, t.clipStart = o.start / i, t.clipEnd = o.end / i, s = e.getDefaultState().clip, 
                        t.clip = s, e.getControllerLayer(0).addState(t);
                    } else {
                        var n;
                        if ((n = e.getControllerLayer(0).getAnimatorState(o.name)) && n.clip ? s = n.clip : console.error("getAnimatorState " + o.name + " nor found!"), 
                        o.nextName && "" != o.nextName) (n = e.getControllerLayer(0).getAnimatorState(o.nextName)) && n.clip && (this.animatorPlayClipDic[o.nextName].clip = n.clip);
                    }
                    this.animatorPlayClipDic[o.name].clip = s;
                }
            }
        }
        getNextPlayAnim(e) {
            var t = this.animatorPlayClipDic[e];
            return null != t && null != t.clip && "" != t.nextName && t.animChange ? t.nextName : e;
        }
        playAnim(e, t, i) {
            var s = this.animatorPlayClipDic[e];
            if (null != s) {
                var n = i || s.clipLoop;
                this.curAnimDuration = n ? 0 : s.clipDuration / (t || 1), this.animator && null != s.clip && (s.clip.islooping = n, 
                this.animator.speed = t || 1, "" != s.nextName ? s.animChange ? (s.animChange = !1, 
                this.curPlayAnimName = s.nextName) : (s.animChange = !0, this.curPlayAnimName = e) : this.curPlayAnimName = e, 
                n ? this.animator.play(this.curPlayAnimName) : this.animator.play(this.curPlayAnimName, 0, 0));
            }
        }
        setPos(e, t) {
            this._logicPos.setTo(u.noDecimalRound(e.x), u.noDecimalRound(e.z)), null == this.initLogicPos && (this.initLogicPos = new Laya.Point(this._logicPos.x, this._logicPos.y)), 
            null == this.cacheLastLogicPos && (this.cacheLastLogicPos = new Laya.Point(this._logicPos.x, this._logicPos.y)), 
            t || this.setShowPos(e);
        }
        setShowPos(e) {
            this._showPos.setValue(e.x, e.y, e.z), f.Instance.isSpeedPlay || (this.curSprite3D.transform.position = this._showPos, 
            this.unitType != me.UNIT && this.effectBindSprite3D && (this.effectBindSprite3D.transform.position = this._showPos));
        }
        setWing(e) {
            null != this.wingPointSprite3D ? this.loadWing(e) : this.wingCacheRes = e;
        }
        loadWing(e) {
            null != this.wingPointSprite3D && Laya.Sprite3D.load(e, Laya.Handler.create(this, (e, t, i) => {
                if (null != t.wingPointSprite3D && (t.wingSprite3D = Laya.Loader.getRes(e).clone(), 
                t.wingSprite3D)) {
                    this.wingMeshRenderers = q.getMeshRenderer(t.wingSprite3D);
                    var s = new Laya.Vector3();
                    t.wingSprite3D.transform.localPosition = s, t.wingPointSprite3D.addChild(t.wingSprite3D);
                }
            }, [ e, this ]));
        }
        loadSHEffect(e) {
            null != this.headPointSprite3D && Laya.Sprite3D.load(e, Laya.Handler.create(this, (e, t, i) => {
                if (null != t.headPointSprite3D && (t.setModelVisible && t.setModelVisible(1, !0), 
                t.headEffectSprite3D = Laya.Loader.getRes(e).clone(), t.headEffectSprite3D)) {
                    var s = new Laya.Vector3();
                    t.headEffectSprite3D.transform.localPosition = s, t.headPointSprite3D.addChild(t.headEffectSprite3D);
                }
            }, [ e, this ]));
        }
        setModelTypeShow(e) {
            if (this.modelData && this.modelData.typeShowMesh && this.modelSprite3D) {
                var t = [], i = [];
                for (const s in this.modelData.typeShowMesh) {
                    const n = this.modelData.typeShowMesh[s];
                    if (n.type == e) for (let e = 0; e < n.meshName.length; e++) i.push(n.meshName[e]); else for (let e = 0; e < n.meshName.length; e++) t.push(n.meshName[e]);
                }
                var s = this.modelSprite3D.numChildren;
                for (let e = 0; e < s; e++) {
                    const s = this.modelSprite3D.getChildAt(e);
                    var n = s.numChildren;
                    for (let e = 0; e < n; e++) {
                        const n = s.getChildAt(e);
                        var a = -1;
                        n && (-1 != t.indexOf(n.name) ? a = 1 : -1 != i.indexOf(n.name) && (a = 2)), -1 != a && (n.active = 2 == a);
                    }
                }
            }
        }
    }
    class Ge {
        constructor() {
            this.dicGrassPlayer = {}, this.dicGrassPlayer[1] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[2] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[3] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[4] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[5] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[6] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[7] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[8] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[9] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[10] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            }, this.dicGrassPlayer[11] = {
                aNum: 0,
                bNum: 0,
                cNum: 0
            };
        }
        static get Instance() {
            return null == this.instance && (Ge.instance = new Ge()), Ge.instance;
        }
        init(e) {
            for (var t in this.selfTeam = e, this.dicGrassPlayer) {
                var i = this.dicGrassPlayer[t];
                i.aNum = 0, i.bNum = 0, i.cNum = 0;
            }
        }
        addGrass(e, t) {
            var i = this.dicGrassPlayer[e];
            null != i && (1 == t ? i.aNum++ : 2 == t ? i.bNum++ : i.cNum++);
        }
        removeGrass(e, t) {
            var i = this.dicGrassPlayer[e];
            null != i && (1 == t ? i.aNum-- : 2 == t ? i.bNum-- : i.cNum--);
        }
        checkGrass(e, t) {
            var i = Ge.Instance.dicGrassPlayer[e];
            return null != i ? 1 == this.selfTeam && 0 != i.aNum && (0 != i.bNum || 0 != i.cNum) || 2 == this.selfTeam && 0 != i.bNum && (0 != i.aNum || 0 != i.cNum) || 3 == this.selfTeam && 0 != i.cNum && (0 != i.aNum || 0 != i.bNum) ? .6 : this.selfTeam == t ? .6 : 0 : 1;
        }
        checkFlyObjGrass(e, t, i) {
            0 != t && 1 == this.selfTeam ? e.animation.alpha = .5 : 0 != i && 2 == this.selfTeam ? e.animation.alpha = .5 : this.selfTeam == e.owner.owner.team ? e.animation.alpha = .5 : e.animation.alpha = .05;
        }
    }
    Ge.instance = null;
    class Re {
        constructor() {
            this._instanceID = -1e4, this.dicPlayer = {}, this.dicPlayerInstance = [], this.dicTempID = {}, 
            this.dicHeroPlayer = {}, this.dicHeroPlayerInstance = [];
        }
        static get Instance() {
            return null == this.instance && (Re.instance = new Re()), Re.instance;
        }
        get instanceID() {
            return this._instanceID--;
        }
        set instanceID(e) {
            this._instanceID = e;
        }
        init() {
            this.selfPlayer = null, this.dicPlayerInstance = [], this.dicPlayer = {}, this.dicTempID = {}, 
            this.dicHeroPlayerInstance = [], this.dicHeroPlayer = {};
        }
        addPlayer(e, t) {
            this.dicPlayer[e.instanceID] = e, this.dicPlayerInstance.push(e.instanceID), e.unitType == me.HERO && (this.dicHeroPlayer[e.instanceID] = e, 
            this.dicHeroPlayerInstance.push(e.instanceID)), t && (this.dicTempID[t] = e.instanceID);
        }
        removePlayer(e, t) {
            var i = this.dicPlayerInstance.indexOf(e.instanceID);
            -1 != i && (this.dicPlayerInstance.splice(i, 1), delete this.dicPlayer[e.instanceID]), 
            t && delete this.dicTempID[t];
        }
        getPlayer(e) {
            return this.dicPlayer[e];
        }
        tempToInstaneId(e) {
            if (e < 0) return e;
            var t = this.dicTempID[e];
            return null != t ? t : e;
        }
        checkPlayerHideState() {
            for (var e = this.dicPlayer, t = this.dicPlayerInstance, i = 0; i < t.length; i++) {
                var s = e[t[i]], n = 0 == s.curGrassId ? 1 : Ge.Instance.checkGrass(s.curGrassId, s.teamID);
                n < 1 && s.isShowInGrass && (n = .6), 0 == n ? (s.curSprite3D && s.curSprite3D.active && (s.curSprite3D.active = !1), 
                !s.isDead && s.bloodBar && s.bloodBar.setVisible(!1)) : (s.curSprite3D && !s.curSprite3D.active && (s.curSprite3D.active = !0, 
                s.playAnim(s.curState.stateName)), !s.isDead && s.bloodBar && s.bloodBar.setVisible(!0), 
                s.setModelVisible(n));
            }
        }
        checkPlayerVisable(e, t) {
            var i = Ge.Instance.dicGrassPlayer[t.curGrassId];
            return null == i || (1 == e.teamID ? i.aNum > 0 : 2 == e.teamID ? i.bNum > 0 : i.cNum > 0);
        }
    }
    Re.instance = null, function(e) {
        e[e.None = 0] = "None", e[e.Sphere = 1] = "Sphere", e[e.Square = 2] = "Square";
    }(ge || (ge = {}));
    class Be {
        constructor() {
            this.colliderOffSet = 0, this.colliderCheckType = ge.Sphere, this.colliderRadius = 0, 
            this.colliderTime = 0, this.colliderCheckTime = 0, this.colliderCurCheckNum = 0, 
            this.colliderNum = 0, this.colliderNumHitAdd = 0, this.colliderLockPlayer = 0, this.fixOnceDamage = 0, 
            this.fixDamage = 1, this.isSingleCollider = !1, this.isIgnoreSameUnit = !1, this.atkUnitList = [], 
            this.isIgnoreTerrain = !0;
        }
    }
    class He {
        constructor() {
            this.tempColliderPos = new Laya.Point(), this.minDis = -1, this.curDis = -1;
        }
        static get Instance() {
            return null == this.instance && (He.instance = new He()), He.instance;
        }
        Collider(e, t) {
            var i = [], s = Re.Instance, n = s.dicPlayerInstance, a = s.dicPlayer;
            t.isOnlyAtkLockTarget && 0 != t.colliderLockPlayer && (n = [ t.colliderLockPlayer ]);
            for (var o = n.length, l = 0; l < o; l++) {
                var h = a[n[l]];
                if (!h.isDead && !h.isNoCollider && h.instanceID != e.instanceID && this.checkUnitType(h.instanceID < 0, h.teamID == e.teamID, h.unitType, t.colliderUnitType)) {
                    var r = !1;
                    if (t.colliderCheckType == ge.Sphere) {
                        if (t.colliderLogicPos.length > 0) for (let i = 0; i < t.colliderLogicPos.length; i++) {
                            const s = t.colliderLogicPos[i];
                            if (r = this.checkSphere(t.colliderRadius, s, h, e).c) break;
                        }
                        r || (r = this.checkSphere(t.colliderRadius, t.logicPos, h, e).c);
                    } else t.colliderCheckType == ge.Square && (r = this.checkSquare());
                    if (r) {
                        var c = !1;
                        if (t.isIgnoreSameUnit) for (var d = t.atkUnitList.length, u = 0; u < d; u++) if (t.atkUnitList[u] == h.instanceID) {
                            c = !0;
                            break;
                        }
                        if (c || i.push(h), t.isSingleCollider) break;
                    }
                }
            }
            var p = i.length;
            for (l = 0; l < p; l++) t.atkUnitList.push(i[l].instanceID);
            return i;
        }
        SkillAutoTargetBySkill(e, t, i) {
            return this.SkillAutoTarget(e, t.colliderUnitType, t.skillUseRadius, i);
        }
        SkillAutoTarget(e, t, i, s) {
            this.minDis = -1;
            for (var n = null, a = null, o = null, l = Re.Instance, h = l.dicPlayerInstance, r = l.dicPlayer, c = h.length, d = 0; d < c; d++) {
                var u = r[h[d]];
                if (!u.isNoCollider && !u.isDead && !u.isNoSelect && u.instanceID != e.instanceID) {
                    if (!u.isShowInGrass && !l.checkPlayerVisable(e, u) && e.teamID <= 2) continue;
                    if (this.checkUnitType(u.instanceID < 0, u.teamID == e.teamID, u.unitType, t)) {
                        var p, m = this.checkSphere(i + u.modelData.radius, e.logicPos, u, e);
                        if (m.c && m.r < 10) if (this.curDis = m.r, (null == (p = u.unitType == me.HERO ? a : u.unitType == me.UNIT ? n : o) || p.hp > u.hp) && (u.unitType == me.HERO ? a = u : u.unitType == me.UNIT ? n = u : o = u), 
                        e.isAI && e.aiControl && e.aiControl.aiLockAtkUnit && e.aiControl.aiLockAtkUnit.instanceID == u.instanceID) {
                            u.unitType == me.HERO ? a = u : n = u;
                            break;
                        }
                    }
                }
            }
            if (s == me.HERO) {
                if (null != a) return a;
                if (null != o) return o;
                if (null != n) return n;
            } else if (s == me.BUILD) {
                if (null != o) return o;
                if (null != a) return a;
                if (null != n) return n;
            } else {
                if (null != n) return n;
                if (null != o) return o;
                if (null != a) return a;
            }
            return o;
        }
        SkillAutoTargetByBuild(e, t, i) {
            return this.BuildAutoTarget(e, t.colliderUnitType, t.skillUseRadius, i);
        }
        BuildAutoTarget(e, t, i, s) {
            this.minDis = -1;
            for (var n = null, a = null, o = null, l = [], h = Re.Instance, r = h.dicPlayerInstance, c = h.dicPlayer, d = r.length, u = 0; u < d; u++) {
                var p = c[r[u]];
                if (!p.isNoCollider && !p.isDead && !p.isNoSelect && p.instanceID != e.instanceID) {
                    if (!p.isShowInGrass && !h.checkPlayerVisable(e, p) && e.teamID <= 2) continue;
                    if (this.checkUnitType(p.instanceID < 0, p.teamID == e.teamID, p.unitType, t)) {
                        var m = this.checkSphere(i + p.modelData.radius, e.logicPos, p, e);
                        if (m.c) {
                            if (this.curDis = m.r, p.unitType == me.HERO ? a : p.unitType == me.UNIT ? n : o, 
                            p.unitType == me.HERO) {
                                if (e.isAI && e.aiControl && e.aiControl.aiLockAtkUnit && e.aiControl.aiLockAtkUnit.instanceID == p.instanceID) return p;
                                l.push(p), a;
                            }
                            p.unitType == me.HERO ? a = p : (-1 == this.minDis || this.minDis > this.curDis) && (this.minDis = this.curDis, 
                            p.unitType == me.UNIT ? n = p : o = p), e.isAI && e.aiControl && e.aiControl.aiLockAtkUnit && e.aiControl.aiLockAtkUnit.instanceID == p.instanceID && (p.unitType == me.HERO ? a = p : n = p);
                        }
                    }
                }
            }
            if (l.length > 0) for (let e = 0; e < l.length; e++) {
                const t = l[e];
                if (t.nearMyAtkUnitList) for (let e = 0; e < t.nearMyAtkUnitList.length; e++) {
                    if (t.nearMyAtkUnitList[e].time > 4e3) return t;
                }
            }
            return null != n ? n : null != a ? a : o;
        }
        SkillCheckTarget(e, t, i, s, n, a) {
            var o = t;
            if (!o.isDead && !o.isNoSelect && o.instanceID != e.instanceID) {
                if (!o.isShowInGrass && !Re.Instance.checkPlayerVisable(e, o)) return !1;
                if (this.checkUnitType(o.instanceID < 0, o.teamID == e.teamID, o.unitType, s)) if (this.checkSphere(n, i, o, e).c) return !0;
            }
            return !1;
        }
        checkSphere(e, t, i, n) {
            this.tempColliderPos.x = t.x, this.tempColliderPos.y = t.y;
            var a = u.decimalRound(this.tempColliderPos.distance(i.logicPos.x, i.logicPos.y) / 100);
            return s.isSyncDebug && n && n.unitType == me.HERO && -1 == n.instanceID && console.log(f.Instance.currentFrame + " id  dis " + a + " radius " + e + " tempColliderPos " + this.tempColliderPos.x + " " + this.tempColliderPos.y + " owner " + n.instanceID + " player " + i.instanceID + " x " + i.logicPos.x + " y " + i.logicPos.y), 
            {
                c: a <= e,
                r: a
            };
        }
        checkSquare() {
            return !1;
        }
        checkUnitType(e, t, i, s) {
            if (null == s) return !1;
            for (var n = 0; n < s.length; n++) if (s[n] > 20 && !e) {
                if (!t && s[n] - 20 == i || t && s[n] - 30 == i) return !0;
            } else if (!t && s[n] == i || t && s[n] - 10 == i) return !0;
            return !1;
        }
        getRangeUnits(e, t, i) {
            for (var s = [], n = Re.Instance, a = n.dicPlayerInstance, o = n.dicPlayer, l = a.length, h = 0; h < l; h++) {
                var r = o[a[h]];
                if (!r.isNoCollider && !r.isDead && !r.isNoSelect && r.instanceID != e.instanceID) {
                    if (!r.isShowInGrass && !n.checkPlayerVisable(e, r) && e.teamID <= 2) continue;
                    if (this.checkUnitType(r.instanceID < 0, r.teamID == e.teamID, r.unitType, t)) {
                        var c = this.checkSphere(i + r.modelData.radius, e.logicPos, r, e), d = c.c;
                        this.curDis = c.r, d && s.push(r);
                    }
                }
            }
            return s;
        }
        getRangeUnitsByPos(e, t, i) {
            for (var s = [], n = Re.Instance, a = n.dicPlayerInstance, o = n.dicPlayer, l = a.length, h = 0; h < l; h++) {
                var r = o[a[h]];
                if (!r.isNoCollider && !r.isDead && !r.isNoSelect) {
                    if (t && !r.isShowInGrass && !n.checkPlayerVisable(t, r) && t.teamID <= 2) continue;
                    var c = this.checkSphere(i + r.modelData.radius, e, r, null), d = c.c;
                    this.curDis = c.r, d && s.push(r);
                }
            }
            return s;
        }
    }
    He.instance = null;
    class Fe {
        constructor() {
            this.flyObjInstanceID = 0, this.skillData = [], this.flyData = [], this.flyInGrassData = [];
        }
        static get Instance() {
            return null == this.instance && (Fe.instance = new Fe()), Fe.instance;
        }
        init() {
            this.flyObjInstanceID = 0, f.Instance.frameTimer.frameLoop(1, this, this.UpdateState);
        }
        clear() {
            for (this.flyObjInstanceID = 0, f.Instance.frameTimer.clear(this, this.UpdateState); this.skillData.length > 0; ) {
                this.skillData.shift().skill.destroy();
            }
            for (;this.flyData.length > 0; ) {
                this.flyData.shift().destroy(!0);
            }
        }
        UpdateState() {
            for (var e = Re.Instance, t = f.renderTimeRatio, i = He.Instance, s = this.skillData.length, n = 0; n < s; n++) {
                var o = this.skillData[n].skill;
                o.curCD > 0 && (0 == o.cdType && (o.curCD -= t), 1 != o.cdType || o.isPlaying || (o.curCD -= t), 
                o.curCD <= .001 && (o.curCD = 0, o.owner && o.owner.isSelf && d.Instance.Send(a.UIFightMainModel_UpdateSkill))), 
                o.isPlaying && (o.curPlayTime += t, o.curPlayTime <= o.playTime || o.playTime <= 0 ? (o.updateTime(), 
                o.playTime <= 0 && o.endPlay()) : o.endPlay());
            }
            var l = this.flyData.length;
            for (n = 0; n < l; n++) {
                var h = this.flyData[n];
                if (h.curEffectShowTime += t, h.curFlytime <= h.flytime || 0 != h.colliderLockPlayer) {
                    if (h.isOwnerDeadDestroy && h.ownerSk.owner.isDead || 0 != h.colliderLockPlayer && (null == h.tracePlayer || h.tracePlayer.isDead || h.tracePlayer.isNoCollider) || 1 == h.destroyType && !h.ownerSk.isPlaying) {
                        h.destroy(!1), this.flyData.splice(n, 1), n--, l--;
                        continue;
                    }
                    if (h.curFlytime += t, h.flySpeed < 0) {
                        if (h.colliderCurCheckNum++, 0 != h.colliderLockPlayer) {
                            var r = e.getPlayer(h.colliderLockPlayer);
                            r && (h.isOnlyAtkLockTarget ? h.colliderCallBack([ r ]) : (h.logicPos.setValue(r.logicPos.x, r.logicPos.y), 
                            this.checkObjCollider(i, h))), h.colliderLockPlayer = 0;
                        }
                        continue;
                    }
                    if (h.flyUpdate(), h.colliderCheckType == ge.None) continue;
                    if (0 == h.colliderNum || 1 == h.completeType || h.colliderCurCheckNum < h.colliderNum) {
                        if (h.noDamage || 1 == h.completeType && h.colliderCurCheckNum >= h.colliderNum) continue;
                        h.curFlytime >= h.colliderTime + h.colliderCurCheckNum * h.colliderCheckTime && (0 == h.colliderNumHitAdd && h.colliderCurCheckNum++, 
                        this.checkObjCollider(i, h));
                    } else (0 == h.effectShowTime || h.curEffectShowTime >= h.effectShowTime) && (h.destroy(!1), 
                    h = null, this.flyData.splice(n, 1), n--, l--);
                } else (0 == h.effectShowTime || h.curEffectShowTime >= h.effectShowTime) && (h.destroy(!1), 
                this.flyData.splice(n, 1), n--, l--);
            }
        }
        checkObjCollider(e, t) {
            var i = e.Collider(t.ownerSk.owner, t);
            if (i.length > 0) {
                if (t.moreHitFlyObj) for (var s = 0; s < i.length; s++) t.createBoom({
                    x: i[s].logicPos.x,
                    y: i[s].logicPos.y
                }); else t.createBoom({
                    x: i[0].logicPos.x,
                    y: i[0].logicPos.y
                });
                if (t.colliderNumHitAdd >= 1) for (let e = 0; e < i.length; e++) 2 == t.colliderNumHitAdd ? i[e].unitType == me.HERO && t.colliderCurCheckNum++ : t.colliderCurCheckNum++, 
                !t.noDamage && t.colliderCurCheckNum <= t.colliderNum && t.colliderCallBack([ i[e] ]); else t.noDamage || t.colliderCallBack(i);
            }
        }
        addSkill(e, t) {
            if (null != t) {
                var i = t.GetNewInstance();
                if (i.owner = e, i.init(i.lv), null != i.flyObj) {
                    null == i.resListName && (i.resListName = []);
                    for (var s = 0; s < i.flyObj.length; s++) {
                        var n = i.flyObj[s];
                        if (i.resListName.push(n.flyObj.effectName), null != n.flyObj.hitFlyObj) for (let e = 0; e < n.flyObj.hitFlyObj.length; e++) i.resListName.push(n.flyObj.hitFlyObj[e].effectName);
                        if (null != n.flyObj.endFlyObj) for (let e = 0; e < n.flyObj.endFlyObj.length; e++) i.resListName.push(n.flyObj.endFlyObj[e].effectName);
                    }
                }
                if (null != i.resListName) for (var a = 0; a < i.resListName.length; a++) null != i.resListName[a] && "" != i.resListName[a] && Me.Instance.loadEffect(i.resListName[a], e.teamID, e.skinID);
                return this.skillData.push({
                    skill: i
                }), i;
            }
        }
        addFlyObj(e) {
            if (this.flyData.push(e), e.instanceID = ++this.flyObjInstanceID, e.hideInGrass) {
                new Laya.Point(e.logicPos.x, e.logicPos.y);
                var t = z.Instance.getHeightMap(e.logicPos.x / 100, e.logicPos.y / 100);
                t > 100 && (e.grassId = Math.floor(t / 100), this.flyInGrassData.push(e));
            }
        }
        clearInGrass(e) {
            for (var t = 0; t < this.flyInGrassData.length; t++) {
                if (this.flyInGrassData[t].instanceID == e) {
                    this.flyInGrassData.splice(t, 1), t--;
                    break;
                }
            }
        }
    }
    Fe.instance = null;
    class Ve {
        constructor() {
            this.id = 0, this.subID = 0, this.subLv = 0, this.time = 0, this.curTime = 0, this.spaceTime = 0, 
            this.spaceNum = 0, this.buffData = [], this.isExeRestore = !1, this.isEndRestore = !1, 
            this.isAddOwner = !1, this.isEnableAddBuild = !1, this.isCover = !0, this.showUI = !1, 
            this.showText = !1, this.name = "", this.icon = "", this.desc = "", this.addCount = 1, 
            this.addMaxCount = 1, this.executeCount = 1, this.isIgnoreDead = !1, this.effectName = "", 
            this.effectObjHeightType = 0, this.effectBindType = 1, this.isLoop = !0, this.zOrder = 100, 
            this.rateExcute = 1, this.fightingExcute = !0, this.effectAutoCreate = !0, this.spaceNum = 0;
        }
        GetNewInstance() {}
        executeOnce(e) {
            if (e || this.fightingExcute || !this.owner.isFighting) {
                this.effectAutoCreate && this.createEffect(), this.showText && this.owner && this.owner.isSelf && (null == this.selfAttrChange && (this.selfAttrChange = {}, 
                this.selfAttrChange[ue.changeHpMax] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changeSpeed] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changePhyAtk] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changeMagAtk] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changePhyRecoverHp] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changeMagRecoverHp] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changeAtkSpeed] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changeSkillCD] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changeSuperAtk] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changesuperAtkEffect] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changePhyDef] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changeMagDef] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changePenetrateDefPhy] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.changePenetrateDefMag] = {
                    oldV: 0,
                    newV: 0
                }, this.selfAttrChange[ue.addExp] = {
                    oldV: 0,
                    newV: 0
                }), this.selfAttrChange[ue.changeHpMax].oldV = this.owner.hpMax, this.selfAttrChange[ue.changeSpeed].oldV = Math.floor(this.owner.moveBaseSpeed * this.owner.moveSpeedScale * 100), 
                this.selfAttrChange[ue.changePhyAtk].oldV = this.owner.phyAtk, this.selfAttrChange[ue.changeMagAtk].oldV = this.owner.magAtk, 
                this.selfAttrChange[ue.changePhyRecoverHp].oldV = Math.floor(100 * this.owner.phyAtkRecoverHP) + "%", 
                this.selfAttrChange[ue.changeMagRecoverHp].oldV = Math.floor(100 * this.owner.magAtkRecoverHP) + "%", 
                this.selfAttrChange[ue.changeAtkSpeed].oldV = Math.floor(100 * (this.owner.atkSpeed > 1.5 ? 1.5 : this.owner.atkSpeed)) + "%", 
                this.selfAttrChange[ue.changeSkillCD].oldV = Math.floor(100 * (this.owner.skillCD - 1 > 1.4 ? 1.4 : this.owner.skillCD)) + "%", 
                this.selfAttrChange[ue.changeSuperAtk].oldV = Math.floor(100 * this.owner.superAtk) + "%", 
                this.selfAttrChange[ue.changesuperAtkEffect].oldV = Math.floor(100 * this.owner.superAtkRatio) + "%", 
                this.selfAttrChange[ue.changePhyDef].oldV = this.owner.phyDef, this.selfAttrChange[ue.changeMagDef].oldV = this.owner.magDef, 
                this.selfAttrChange[ue.changePenetrateDefPhy].oldV = Math.floor(100 * this.owner.penetratePhyDef) + "%", 
                this.selfAttrChange[ue.changePenetrateDefMag].oldV = Math.floor(100 * this.owner.penetrateMagDef) + "%", 
                this.selfAttrChange[ue.addExp].oldV = this.owner.curExp);
                for (var t = 0; t < this.buffData.length; t++) {
                    var i = this.buffData[t];
                    this.isExeRestore && this.executeOnceItem(i, !0), this.executeOnceItem(i, e);
                }
                this.showText && this.owner && this.owner.isSelf && null != this.selfAttrChange && (this.selfAttrChange[ue.changeHpMax].newV = this.owner.hpMax, 
                this.selfAttrChange[ue.changeSpeed].newV = Math.floor(this.owner.moveBaseSpeed * this.owner.moveSpeedScale * 100), 
                this.selfAttrChange[ue.changePhyAtk].newV = this.owner.phyAtk, this.selfAttrChange[ue.changeMagAtk].newV = this.owner.magAtk, 
                this.selfAttrChange[ue.changePhyRecoverHp].newV = Math.floor(100 * this.owner.phyAtkRecoverHP) + "%", 
                this.selfAttrChange[ue.changeMagRecoverHp].newV = Math.floor(100 * this.owner.magAtkRecoverHP) + "%", 
                this.selfAttrChange[ue.changeAtkSpeed].newV = Math.floor(100 * (this.owner.atkSpeed > 1.5 ? 1.5 : this.owner.atkSpeed)) + "%", 
                this.selfAttrChange[ue.changeSkillCD].newV = Math.floor(100 * (this.owner.skillCD - 1 > 1.4 ? 1.4 : this.owner.skillCD)) + "%", 
                this.selfAttrChange[ue.changeSuperAtk].newV = Math.floor(100 * this.owner.superAtk) + "%", 
                this.selfAttrChange[ue.changesuperAtkEffect].newV = Math.floor(100 * this.owner.superAtkRatio) + "%", 
                this.selfAttrChange[ue.changePhyDef].newV = this.owner.phyDef, this.selfAttrChange[ue.changeMagDef].newV = this.owner.magDef, 
                this.selfAttrChange[ue.changePenetrateDefPhy].newV = Math.floor(100 * this.owner.penetratePhyDef) + "%", 
                this.selfAttrChange[ue.changePenetrateDefMag].newV = Math.floor(100 * this.owner.penetrateMagDef) + "%", 
                this.selfAttrChange[ue.addExp].newV = this.owner.curExp, this.createSkill && this.createSkill.skillInfo && (this.selfAttrChange[-1] = {
                    oldV: this.createSkill.skillInfo,
                    newV: this.createSkill.skillInfo
                }), d.Instance.Send(a.UIBuyEqTips_WaitShow, this.name, this.selfAttrChange));
            }
        }
        executeOnceItem(e, t) {
            for (var i = e.buffType, s = [], n = 0; n < e.value.length; n++) if (i == ue.setSpecialSkill && 0 == n) s.push(e.value[n]); else {
                var a = u.decimalRound(e.value[n] * this.addCount);
                s.push(a);
            }
            var o = t ? -1 : 1;
            if (i == ue.changeHp) {
                if (this.showUI && this.owner.isSelf) null != (l = Laya.Pool.getItem("hpShow")) && (this.owner.hp + o * s[0] >= this.owner.hpMax ? l.play(this.owner.showPos, this.owner.hpMax - this.owner.hp) : l.play(this.owner.showPos, o * s[0]));
                this.owner.changeHp(this.createUnit, o * s[0], !1, 3);
            } else if (i == ue.changeHpScale) {
                var l, h = o * u.round(s[0] * this.owner.hpMax);
                if (this.showUI && this.owner.isSelf) null != (l = Laya.Pool.getItem("hpShow")) && (this.owner.hp + h >= this.owner.hpMax ? l.play(this.owner.showPos, this.owner.hpMax - this.owner.hp) : l.play(this.owner.showPos, h));
                this.owner.changeHp(this.createUnit, h, !1, 3);
            } else if (i == ue.changePhyDef) this.owner.phyDef += o * s[0]; else if (i == ue.changeMagDef) this.owner.magDef += o * s[0]; else if (i == ue.changeSkillCD) this.owner.skillCD = u.decimalRound(this.owner.skillCD + u.decimalRound(o * s[0])); else if (i == ue.changeSpeed) this.owner.moveBaseSpeed = u.decimalRound(this.owner.moveBaseSpeed + o * s[0]); else if (i == ue.changeSpeedScale) this.owner.moveSpeedScale = u.decimalRound(this.owner.moveSpeedScale + u.decimalRound(o * s[0])); else if (i == ue.changeState) 1 == s[0] ? this.owner.isBaTi || (this.owner.isVertigo = 1 == o) : 2 == s[0] ? (this.owner.isShowInGrass = 1 == o, 
            Re.Instance.checkPlayerHideState()) : 3 == s[0] ? this.owner.isNoSelect = 1 == o : 4 == s[0] ? this.owner.isNoCollider = 1 == o : 5 == s[0] ? 1 == o ? (this.owner.dontDeadBuff = this, 
            this.owner.dontDeadTime = s[1], this.owner.dontDeadTriggerBuff = s[2]) : (this.owner.dontDeadBuff = null, 
            this.owner.dontDeadTime = 0) : 6 == s[0] ? this.owner.isBaTi = 1 == o : 7 == s[0] && 1 == o ? (this.owner.hitFlyUpFrame = s[1], 
            this.owner.hitFlyUpOneMove = s[2], this.owner.hitFlyDownFrame = s[3], this.owner.hitFlyDownOneMove = s[4], 
            this.owner.hitFlyYAllMove = 0) : 8 == s[0] && this.owner.setModelTypeShow(1 == o ? s[1] : s[2]); else if (i == ue.changeAtkSpeed) this.owner.atkSpeed = u.decimalRound(this.owner.atkSpeed + u.decimalRound(o * s[0])); else if (i == ue.changePhyAtk) this.owner.phyAtk += o * s[0]; else if (i == ue.changeMagAtk) this.owner.magAtk += o * s[0]; else if (i == ue.changePenetrateDefPhy) this.owner.penetratePhyDef = u.decimalRound(this.owner.penetratePhyDef + u.decimalRound(o * s[0])); else if (i == ue.changePenetrateDefMag) this.owner.penetrateMagDef = u.decimalRound(this.owner.penetrateMagDef + u.decimalRound(o * s[0])); else if (i == ue.changeIgnorePhyDef) this.owner.ignorePhyDef = u.decimalRound(this.owner.ignorePhyDef + u.decimalRound(o * s[0])); else if (i == ue.changeIgnoreMagDef) this.owner.ignoreMagDef = u.decimalRound(this.owner.ignoreMagDef + u.decimalRound(o * s[0])); else if (i == ue.changePhyRecoverHp) this.owner.phyAtkRecoverHP = u.decimalRound(this.owner.phyAtkRecoverHP + u.decimalRound(o * s[0])); else if (i == ue.changeMagRecoverHp) this.owner.magAtkRecoverHP = u.decimalRound(this.owner.magAtkRecoverHP + u.decimalRound(o * s[0])); else if (i == ue.changeSuperAtk) this.owner.superAtk = u.decimalRound(this.owner.superAtk + u.decimalRound(o * s[0])); else if (i == ue.changesuperAtkEffect) this.owner.superAtkRatio = u.decimalRound(this.owner.superAtkRatio + u.decimalRound(o * s[0])); else if (i == ue.changeHpMax) {
                var r = o * s[0], c = this.owner.hpMax;
                this.owner.baseHpMax += r, this.owner.hpMax = Math.floor(this.owner.baseHpMax * this.owner.hpScale), 
                this.owner.hp += this.owner.hpMax - c, this.owner.hp < 0 && (this.owner.hp = 1), 
                r < 0 && this.owner.hp > this.owner.hpMax && (this.owner.hp = this.owner.hpMax), 
                this.owner.changeHp(this.createUnit, 0);
            } else if (i == ue.changeHpMaxScale) {
                r = o * s[0], c = this.owner.hpMax;
                this.owner.hpScale += r, this.owner.hpMax = this.owner.baseHpMax * this.owner.hpScale, 
                this.owner.hp += this.owner.hpMax - c, this.owner.hp < 0 && (this.owner.hp = 1), 
                r < 0 && this.owner.hp > this.owner.hpMax && (this.owner.hp = this.owner.hpMax), 
                this.owner.changeHp(this.createUnit, 0);
            } else if (i == ue.clearBuffID) ; else if (i == ue.changeTempHp) null == this.owner.dicTempHP[this.id] && (this.owner.dicTempHP[this.id] = 0), 
            this.owner.dicTempHP[this.id] += o * s[0], this.owner.dicTempHP[this.id] <= 0 && delete this.owner.dicTempHP[this.id], 
            this.owner.updateBloodBar(); else if (i == ue.changeTempMaxHPRate) s[0] < 1 && (s[0] = Math.floor(this.owner.hpMax * s[0])), 
            null == this.owner.dicTempHP[this.id] && (this.owner.dicTempHP[this.id] = 0), this.owner.dicTempHP[this.id] += o * s[0], 
            this.owner.dicTempHP[this.id] <= 0 && delete this.owner.dicTempHP[this.id], this.owner.updateBloodBar(); else if (i == ue.changeAllSkillCD) for (n = 0; n < this.owner.skillData.length; n++) {
                (d = this.owner.skillData[n]).curCD -= s[0], d.curCD < 0 && (d.curCD = 0);
            } else if (i == ue.changeSkillFixCD) for (n = 0; n < this.owner.skillData.length; n++) {
                var d;
                if ((d = this.owner.skillData[n]).skillID == s[0]) {
                    d.curCD -= s[1], d.curCD < 0 && (d.curCD = 0);
                    break;
                }
            } else if (i == ue.changePhyAtkScale) this.owner.phyAtkScale = u.decimalRound(this.owner.phyAtkScale + u.decimalRound(o * s[0])); else if (i == ue.changeMagAtkScale) this.owner.magAtkScale = u.decimalRound(this.owner.magAtkScale + u.decimalRound(o * s[0])); else if (i == ue.setSpecialSkill) {
                if (1 == s[0] || 2 == s[0] || 3 == s[0]) {
                    var p, m = [], g = [];
                    if (1 == s[0] && (m = this.owner.triggerPGBuff, g = this.owner.triggerPGBuffSelf), 
                    2 == s[0] && (m = this.owner.triggerSkDamageBuff, g = this.owner.triggerSkDamageBuffSelf), 
                    3 == s[0] && (m = this.owner.triggerByAtkBuff, g = this.owner.triggerByAtkBuffSelf), 
                    s[1]) if (1 == o) m.push(s[1]); else -1 != (p = m.indexOf(s[1])) && m.splice(p, 1);
                    if (s[2]) if (1 == o) g.push(s[2]); else -1 != (p = g.indexOf(s[2])) && g.splice(p, 1);
                } else if (4 == s[0]) this.owner.addBaseSkDamage += s[1] * o; else if (5 == s[0]) this.owner.fixBaseSkDamage += s[1] * o; else if (6 == s[0]) if (1 == o) this.owner.fixDamageByMaxHp.push({
                    buffID: this.id,
                    hp: s[1],
                    addV: s[2]
                }); else for (let e = 0; e < this.owner.fixDamageByMaxHp.length; e++) {
                    if (this.owner.fixDamageByMaxHp[e].buffID == this.id) {
                        this.owner.fixDamageByMaxHp.splice(e, 1);
                        break;
                    }
                } else if (7 == s[0]) if (1 == o) this.owner.fixHitSelfDamageByMaxHp.push({
                    buffID: this.id,
                    hp: s[1],
                    addV: s[2]
                }); else for (let e = 0; e < this.owner.fixHitSelfDamageByMaxHp.length; e++) {
                    if (this.owner.fixHitSelfDamageByMaxHp[e].buffID == this.id) {
                        this.owner.fixHitSelfDamageByMaxHp.splice(e, 1);
                        break;
                    }
                }
            } else i == ue.addExp && this.owner.addExp(o * s[0], !1);
        }
        end(e) {
            if (this.spaceNum > 0 && this.isEndRestore && this.executeOnce(!0), this.destroyEffect(), 
            (null == e || !e) && null != this.buffEndFlyObj && null != this.createSkill && this.curTime < this.time) {
                var t = this.buffEndFlyObj.GetNewInstance();
                t.ownerSk = this.createSkill, t.create(this.createSkill, null, new Laya.Point(this.createSkill.owner.logicPos.x, this.createSkill.owner.logicPos.y)), 
                Fe.Instance.addFlyObj(t);
            }
        }
        createEffect() {
            if ("" != this.effectName && null == this.effectObj) {
                var e = Me.Instance.getEffect(this.effectName, this.owner.teamID, this.owner.skinID);
                this.effectName = e.name, this.effectObj = e.obj, null != this.effectObj && (null == this.effectPos && (this.effectPos = new Laya.Vector3()), 
                this.effectBindType > 0 ? (1 == this.effectObjHeightType && null != this.owner.centerPointSprite3D ? (this.effectPos.x = this.owner.centerPointSprite3D.transform.localPosition.x, 
                this.effectPos.y = this.owner.centerPointSprite3D.transform.localPosition.y, this.effectPos.z = this.owner.centerPointSprite3D.transform.localPosition.z) : 2 == this.effectObjHeightType && null != this.owner.topPointSprite3D ? (this.effectPos.x = this.owner.topPointSprite3D.transform.localPosition.x, 
                this.effectPos.y = this.owner.topPointSprite3D.transform.localPosition.y, this.effectPos.z = this.owner.topPointSprite3D.transform.localPosition.z) : this.effectPos.setValue(0, 0, 0), 
                this.effectObj.transform.position = this.effectPos, 1 == this.effectBindType ? this.owner.effectBindSprite3D.addChild(this.effectObj) : this.owner.curSprite3D.addChild(this.effectObj)) : (this.effectPos.setValue(this.owner.logicToShowPos.x, this.owner.logicToShowPos.y, this.owner.logicToShowPos.z), 
                this.effectObj.transform.position = this.effectPos, Y.Instance.addChild(this.effectObj)));
            }
        }
        destroyEffect() {
            null != this.effectObj && (Me.Instance.removeEffect(this.effectName, this.effectObj), 
            this.effectObj = null);
        }
    }
    class je extends Ve {
        GetNewInstance() {
            return new je();
        }
        constructor() {
            super(), this.id = 1, this.time = 1e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -1e4 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ -1e4 ]
            }, this.isEnableAddBuild = !0, this.isEndRestore = !0;
        }
    }
    class We extends Ve {
        GetNewInstance() {
            return new We();
        }
        constructor() {
            super(), this.id = 2, this.time = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .2 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Xe extends Ve {
        GetNewInstance() {
            return new Xe();
        }
        constructor() {
            super(), this.id = 3, this.time = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .2 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Ke extends Ve {
        GetNewInstance() {
            return new Ke();
        }
        constructor() {
            super(), this.id = 4, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.01 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class qe extends Ve {
        GetNewInstance() {
            return new qe();
        }
        constructor() {
            super(), this.id = 5, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.02 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ze extends Ve {
        GetNewInstance() {
            return new ze();
        }
        constructor() {
            super(), this.id = 6, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.03 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Ye extends Ve {
        GetNewInstance() {
            return new Ye();
        }
        constructor() {
            super(), this.id = 7, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.04 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Je extends Ve {
        GetNewInstance() {
            return new Je();
        }
        constructor() {
            super(), this.id = 8, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.05 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Qe extends Ve {
        GetNewInstance() {
            return new Qe();
        }
        constructor() {
            super(), this.id = 9, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.06 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Ze extends Ve {
        GetNewInstance() {
            return new Ze();
        }
        constructor() {
            super(), this.id = 10, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.07 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class $e extends Ve {
        GetNewInstance() {
            return new $e();
        }
        constructor() {
            super(), this.id = 11, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.08 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class et extends Ve {
        GetNewInstance() {
            return new et();
        }
        constructor() {
            super(), this.id = 12, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.09 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class tt extends Ve {
        GetNewInstance() {
            return new tt();
        }
        constructor() {
            super(), this.id = 13, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class it extends Ve {
        GetNewInstance() {
            return new it();
        }
        constructor() {
            super(), this.id = 14, this.time = 999999999, this.spaceTime = 21e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 100, 29 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class st extends Ve {
        GetNewInstance() {
            return new st();
        }
        constructor() {
            super(), this.id = 15, this.time = 999999999, this.spaceTime = 2e5, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 200, 30 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class nt extends Ve {
        GetNewInstance() {
            return new nt();
        }
        constructor() {
            super(), this.id = 16, this.time = 999999999, this.spaceTime = 19e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 300, 31 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class at extends Ve {
        GetNewInstance() {
            return new at();
        }
        constructor() {
            super(), this.id = 17, this.time = 999999999, this.spaceTime = 18e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 400, 32 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class ot extends Ve {
        GetNewInstance() {
            return new ot();
        }
        constructor() {
            super(), this.id = 18, this.time = 999999999, this.spaceTime = 17e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 500, 33 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class lt extends Ve {
        GetNewInstance() {
            return new lt();
        }
        constructor() {
            super(), this.id = 19, this.time = 999999999, this.spaceTime = 16e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 600, 34 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class ht extends Ve {
        GetNewInstance() {
            return new ht();
        }
        constructor() {
            super(), this.id = 20, this.time = 999999999, this.spaceTime = 15e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 700, 35 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class rt extends Ve {
        GetNewInstance() {
            return new rt();
        }
        constructor() {
            super(), this.id = 21, this.time = 999999999, this.spaceTime = 14e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 800, 36 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class ct extends Ve {
        GetNewInstance() {
            return new ct();
        }
        constructor() {
            super(), this.id = 22, this.time = 999999999, this.spaceTime = 13e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 900, 37 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class dt extends Ve {
        GetNewInstance() {
            return new dt();
        }
        constructor() {
            super(), this.id = 23, this.time = 999999999, this.spaceTime = 12e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 1e3, 38 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class ut extends Ve {
        GetNewInstance() {
            return new ut();
        }
        constructor() {
            super(), this.id = 24, this.time = 999999999, this.spaceTime = 144e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 1100 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0;
        }
    }
    class pt extends Ve {
        GetNewInstance() {
            return new pt();
        }
        constructor() {
            super(), this.id = 25, this.time = 999999999, this.spaceTime = 138e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 1200 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0;
        }
    }
    class mt extends Ve {
        GetNewInstance() {
            return new mt();
        }
        constructor() {
            super(), this.id = 26, this.time = 999999999, this.spaceTime = 132e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 1300 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0;
        }
    }
    class gt extends Ve {
        GetNewInstance() {
            return new gt();
        }
        constructor() {
            super(), this.id = 27, this.time = 999999999, this.spaceTime = 126e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 1400 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0;
        }
    }
    class ft extends Ve {
        GetNewInstance() {
            return new ft();
        }
        constructor() {
            super(), this.id = 28, this.time = 999999999, this.spaceTime = 12e4, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 5, 1500 ]
            }, this.effectAutoCreate = !1, this.effectName = "3dres/effect/e_cbjn3b.lh", this.isEndRestore = !0, 
            this.isIgnoreDead = !0;
        }
    }
    class It extends Ve {
        GetNewInstance() {
            return new It();
        }
        constructor() {
            super(), this.id = 29, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .03 ]
            };
        }
    }
    class vt extends Ve {
        GetNewInstance() {
            return new vt();
        }
        constructor() {
            super(), this.id = 30, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .06 ]
            };
        }
    }
    class _t extends Ve {
        GetNewInstance() {
            return new _t();
        }
        constructor() {
            super(), this.id = 31, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .09 ]
            };
        }
    }
    class yt extends Ve {
        GetNewInstance() {
            return new yt();
        }
        constructor() {
            super(), this.id = 32, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .12 ]
            };
        }
    }
    class St extends Ve {
        GetNewInstance() {
            return new St();
        }
        constructor() {
            super(), this.id = 33, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .15 ]
            };
        }
    }
    class wt extends Ve {
        GetNewInstance() {
            return new wt();
        }
        constructor() {
            super(), this.id = 34, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .18 ]
            };
        }
    }
    class Dt extends Ve {
        GetNewInstance() {
            return new Dt();
        }
        constructor() {
            super(), this.id = 35, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .21 ]
            };
        }
    }
    class kt extends Ve {
        GetNewInstance() {
            return new kt();
        }
        constructor() {
            super(), this.id = 36, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .24 ]
            };
        }
    }
    class Ct extends Ve {
        GetNewInstance() {
            return new Ct();
        }
        constructor() {
            super(), this.id = 37, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .27 ]
            };
        }
    }
    class bt extends Ve {
        GetNewInstance() {
            return new bt();
        }
        constructor() {
            super(), this.id = 38, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .3 ]
            };
        }
    }
    class Pt extends Ve {
        GetNewInstance() {
            return new Pt();
        }
        constructor() {
            super(), this.id = 39, this.time = 100, this.buffData[0] = {
                buffType: ue.addExp,
                value: [ 4410 ]
            };
        }
    }
    class xt extends Ve {
        GetNewInstance() {
            return new xt();
        }
        constructor() {
            super(), this.id = 40, this.time = 999999999, this.spaceTime = 1e4, this.buffData[0] = {
                buffType: ue.addExp,
                value: [ 225 ]
            }, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Tt extends Ve {
        GetNewInstance() {
            return new Tt();
        }
        constructor() {
            super(), this.id = 41, this.time = 100, this.buffData[0] = {
                buffType: ue.addExp,
                value: [ 610 ]
            };
        }
    }
    class Ut extends Ve {
        GetNewInstance() {
            return new Ut();
        }
        constructor() {
            super(), this.id = 42, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .01 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Lt extends Ve {
        GetNewInstance() {
            return new Lt();
        }
        constructor() {
            super(), this.id = 43, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .02 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Nt extends Ve {
        GetNewInstance() {
            return new Nt();
        }
        constructor() {
            super(), this.id = 44, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .03 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Mt extends Ve {
        GetNewInstance() {
            return new Mt();
        }
        constructor() {
            super(), this.id = 45, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .04 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class At extends Ve {
        GetNewInstance() {
            return new At();
        }
        constructor() {
            super(), this.id = 46, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .05 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Ot extends Ve {
        GetNewInstance() {
            return new Ot();
        }
        constructor() {
            super(), this.id = 47, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .06 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Et extends Ve {
        GetNewInstance() {
            return new Et();
        }
        constructor() {
            super(), this.id = 48, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .07 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Gt extends Ve {
        GetNewInstance() {
            return new Gt();
        }
        constructor() {
            super(), this.id = 49, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .08 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Rt extends Ve {
        GetNewInstance() {
            return new Rt();
        }
        constructor() {
            super(), this.id = 50, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .09 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Bt extends Ve {
        GetNewInstance() {
            return new Bt();
        }
        constructor() {
            super(), this.id = 51, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .1 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Ht extends Ve {
        GetNewInstance() {
            return new Ht();
        }
        constructor() {
            super(), this.id = 52, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .05 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Ft extends Ve {
        GetNewInstance() {
            return new Ft();
        }
        constructor() {
            super(), this.id = 500, this.time = 6e4, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .5 ]
            }, this.name = "斗战", this.icon = "icon/buff_shms_dz.png", this.desc = "所有伤害提升50%", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Vt extends Ve {
        GetNewInstance() {
            return new Vt();
        }
        constructor() {
            super(), this.id = 501, this.time = 6e4, this.buffData[0] = {
                buffType: ue.changeSuperAtk,
                value: [ 1 ]
            }, this.name = "强袭", this.icon = "icon/buff_shms_qx.png", this.desc = "暴击概率提升100%", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class jt extends Ve {
        GetNewInstance() {
            return new jt();
        }
        constructor() {
            super(), this.id = 502, this.time = 6e4, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .8 ]
            }, this.name = "睿智", this.icon = "icon/buff_shms_rz.png", this.desc = "技能冷却缩减80%", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Wt extends Ve {
        GetNewInstance() {
            return new Wt();
        }
        constructor() {
            super(), this.id = 503, this.time = 6e4, this.buffData[0] = {
                buffType: ue.changePhyRecoverHp,
                value: [ 1 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagRecoverHp,
                value: [ 1 ]
            }, this.name = "嗜血", this.icon = "icon/buff_shms_sx.png", this.desc = "吸血效果提升100%", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Xt extends Ve {
        GetNewInstance() {
            return new Xt();
        }
        constructor() {
            super(), this.id = 504, this.time = 999999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 50 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagAtk,
                value: [ 50 ]
            }, this.buffData[2] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .01 ]
            }, this.showText = !0, this.name = "力量书", this.desc = "物理、法术攻击+50,所有伤害增加1%", this.isEndRestore = !0, 
            this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class Kt extends Ve {
        GetNewInstance() {
            return new Kt();
        }
        constructor() {
            super(), this.id = 505, this.time = 999999999, this.buffData[0] = {
                buffType: ue.changeHpMax,
                value: [ 500 ]
            }, this.showText = !0, this.name = "耐力书", this.desc = "最大生命上限+500", this.isEndRestore = !0, 
            this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class qt extends Ve {
        GetNewInstance() {
            return new qt();
        }
        constructor() {
            super(), this.id = 506, this.time = 999999999, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 30 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 30 ]
            }, this.buffData[2] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.01 ]
            }, this.showText = !0, this.name = "抗性书", this.desc = "物理、法术防御+30,受到伤害降低1%", this.isEndRestore = !0, 
            this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class zt extends Ve {
        GetNewInstance() {
            return new zt();
        }
        constructor() {
            super(), this.id = 507, this.time = 999999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .02 ]
            }, this.buffData[1] = {
                buffType: ue.changeAtkSpeed,
                value: [ .01 ]
            }, this.showText = !0, this.name = "冷却缩减", this.desc = "技能冷却缩减+2%,攻击速度+1%", this.isEndRestore = !0, 
            this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class Yt extends Ve {
        GetNewInstance() {
            return new Yt();
        }
        constructor() {
            super(), this.id = 508, this.time = 6e4, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ 1 ]
            }, this.icon = "icon/buff_shms_pojia.png", this.desc = "攻速增加+100%", this.isEndRestore = !0, 
            this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Jt extends Ve {
        GetNewInstance() {
            return new Jt();
        }
        constructor() {
            super(), this.id = 509, this.time = 999999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .4 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Qt extends Ve {
        GetNewInstance() {
            return new Qt();
        }
        constructor() {
            super(), this.id = 600, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.6 ]
            }, this.name = "石肤(难度1)", this.desc = "受到的所有伤害降低60%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Zt extends Ve {
        GetNewInstance() {
            return new Zt();
        }
        constructor() {
            super(), this.id = 601, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.55 ]
            }, this.name = "石肤(难度2)", this.desc = "受到的所有伤害降低55%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class $t extends Ve {
        GetNewInstance() {
            return new $t();
        }
        constructor() {
            super(), this.id = 602, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.5 ]
            }, this.name = "石肤(难度3)", this.desc = "受到的所有伤害降低50%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ei extends Ve {
        GetNewInstance() {
            return new ei();
        }
        constructor() {
            super(), this.id = 603, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.45 ]
            }, this.name = "石肤(难度4)", this.desc = "受到的所有伤害降低45%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ti extends Ve {
        GetNewInstance() {
            return new ti();
        }
        constructor() {
            super(), this.id = 604, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.4 ]
            }, this.name = "石肤(难度5)", this.desc = "受到的所有伤害降低40%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ii extends Ve {
        GetNewInstance() {
            return new ii();
        }
        constructor() {
            super(), this.id = 605, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.38 ]
            }, this.name = "石肤(难度6)", this.desc = "受到的所有伤害降低38%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class si extends Ve {
        GetNewInstance() {
            return new si();
        }
        constructor() {
            super(), this.id = 606, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.36 ]
            }, this.name = "石肤(难度7)", this.desc = "受到的所有伤害降低36%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ni extends Ve {
        GetNewInstance() {
            return new ni();
        }
        constructor() {
            super(), this.id = 607, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.34 ]
            }, this.name = "石肤(难度8)", this.desc = "受到的所有伤害降低34%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ai extends Ve {
        GetNewInstance() {
            return new ai();
        }
        constructor() {
            super(), this.id = 608, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.32 ]
            }, this.name = "石肤(难度9)", this.desc = "受到的所有伤害降低32%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class oi extends Ve {
        GetNewInstance() {
            return new oi();
        }
        constructor() {
            super(), this.id = 609, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.3 ]
            }, this.name = "石肤(难度10)", this.desc = "受到的所有伤害降低30%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class li extends Ve {
        GetNewInstance() {
            return new li();
        }
        constructor() {
            super(), this.id = 610, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.28 ]
            }, this.name = "石肤(难度11)", this.desc = "受到的所有伤害降低28%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class hi extends Ve {
        GetNewInstance() {
            return new hi();
        }
        constructor() {
            super(), this.id = 611, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.26 ]
            }, this.name = "石肤(难度12)", this.desc = "受到的所有伤害降低26%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ri extends Ve {
        GetNewInstance() {
            return new ri();
        }
        constructor() {
            super(), this.id = 612, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.24 ]
            }, this.name = "石肤(难度13)", this.desc = "受到的所有伤害降低24%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ci extends Ve {
        GetNewInstance() {
            return new ci();
        }
        constructor() {
            super(), this.id = 613, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.22 ]
            }, this.name = "石肤(难度14)", this.desc = "受到的所有伤害降低22%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class di extends Ve {
        GetNewInstance() {
            return new di();
        }
        constructor() {
            super(), this.id = 614, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.2 ]
            }, this.name = "石肤(难度15)", this.desc = "受到的所有伤害降低20%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ui extends Ve {
        GetNewInstance() {
            return new ui();
        }
        constructor() {
            super(), this.id = 615, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.18 ]
            }, this.name = "石肤(难度16)", this.desc = "受到的所有伤害降低18%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class pi extends Ve {
        GetNewInstance() {
            return new pi();
        }
        constructor() {
            super(), this.id = 616, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.16 ]
            }, this.name = "石肤(难度17)", this.desc = "受到的所有伤害降低16%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class mi extends Ve {
        GetNewInstance() {
            return new mi();
        }
        constructor() {
            super(), this.id = 617, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.14 ]
            }, this.name = "石肤(难度18)", this.desc = "受到的所有伤害降低14%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class gi extends Ve {
        GetNewInstance() {
            return new gi();
        }
        constructor() {
            super(), this.id = 618, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.12 ]
            }, this.name = "石肤(难度19)", this.desc = "受到的所有伤害降低12%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class fi extends Ve {
        GetNewInstance() {
            return new fi();
        }
        constructor() {
            super(), this.id = 619, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "石肤(难度20)", this.desc = "受到的所有伤害降低10%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Ii extends Ve {
        GetNewInstance() {
            return new Ii();
        }
        constructor() {
            super(), this.id = 620, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.08 ]
            }, this.name = "石肤(难度21)", this.desc = "受到的所有伤害降低8%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class vi extends Ve {
        GetNewInstance() {
            return new vi();
        }
        constructor() {
            super(), this.id = 621, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.06 ]
            }, this.name = "石肤(难度22)", this.desc = "受到的所有伤害降低6%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class _i extends Ve {
        GetNewInstance() {
            return new _i();
        }
        constructor() {
            super(), this.id = 622, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.04 ]
            }, this.name = "石肤(难度23)", this.desc = "受到的所有伤害降低4%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class yi extends Ve {
        GetNewInstance() {
            return new yi();
        }
        constructor() {
            super(), this.id = 623, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.02 ]
            }, this.name = "石肤(难度24)", this.desc = "受到的所有伤害降低2%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Si extends Ve {
        GetNewInstance() {
            return new Si();
        }
        constructor() {
            super(), this.id = 624, this.time = 99999999, this.name = "石肤(难度2)", this.desc = "受到的所有伤害降低0%", 
            this.icon = "icon/buff_shms_sf.png", this.isEndRestore = !0, this.isCover = !0, 
            this.isIgnoreDead = !0;
        }
    }
    class wi extends Ve {
        GetNewInstance() {
            return new wi();
        }
        constructor() {
            super(), this.id = 625, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "石肤(难度26)", this.desc = "受到的所有伤害降低10%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Di extends Ve {
        GetNewInstance() {
            return new Di();
        }
        constructor() {
            super(), this.id = 626, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "石肤(难度27)", this.desc = "受到的所有伤害降低25%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ki extends Ve {
        GetNewInstance() {
            return new ki();
        }
        constructor() {
            super(), this.id = 627, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "石肤(难度28)", this.desc = "受到的所有伤害降低22.5%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Ci extends Ve {
        GetNewInstance() {
            return new Ci();
        }
        constructor() {
            super(), this.id = 628, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "石肤(难度29)", this.desc = "受到的所有伤害降低20%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class bi extends Ve {
        GetNewInstance() {
            return new bi();
        }
        constructor() {
            super(), this.id = 629, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "石肤(难度30)", this.desc = "受到的所有伤害降低17.5%", this.icon = "icon/buff_shms_sf.png", 
            this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Pi extends Ve {
        GetNewInstance() {
            return new Pi();
        }
        constructor() {
            super(), this.id = 700, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .2 ]
            }, this.name = "甘露(难度1)", this.desc = "脱离战斗后，每秒恢复20%最大生命值", this.icon = "icon/buff_shms_gl.png", 
            this.isEndRestore = !0, this.isCover = !0, this.fightingExcute = !1, this.isIgnoreDead = !0;
        }
    }
    class xi extends Ve {
        GetNewInstance() {
            return new xi();
        }
        constructor() {
            super(), this.id = 701, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .18 ]
            }, this.name = "甘露(难度2)", this.desc = "脱离战斗后，每秒恢复17.5%最大生命值", this.icon = "icon/buff_shms_gl.png", 
            this.isEndRestore = !0, this.isCover = !0, this.fightingExcute = !1, this.isIgnoreDead = !0;
        }
    }
    class Ti extends Ve {
        GetNewInstance() {
            return new Ti();
        }
        constructor() {
            super(), this.id = 702, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .16 ]
            }, this.name = "甘露(难度3)", this.desc = "脱离战斗后，每秒恢复15%最大生命值", this.icon = "icon/buff_shms_gl.png", 
            this.isEndRestore = !0, this.isCover = !0, this.fightingExcute = !1, this.isIgnoreDead = !0;
        }
    }
    class Ui extends Ve {
        GetNewInstance() {
            return new Ui();
        }
        constructor() {
            super(), this.id = 703, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .14 ]
            }, this.name = "甘露(难度4)", this.desc = "脱离战斗后，每秒恢复12.5%最大生命值", this.icon = "icon/buff_shms_gl.png", 
            this.isEndRestore = !0, this.isCover = !0, this.fightingExcute = !1, this.isIgnoreDead = !0;
        }
    }
    class Li extends Ve {
        GetNewInstance() {
            return new Li();
        }
        constructor() {
            super(), this.id = 704, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .12 ]
            }, this.name = "甘露(难度5)", this.desc = "脱离战斗后，每秒恢复10%最大生命值", this.icon = "icon/buff_shms_gl.png", 
            this.isEndRestore = !0, this.isCover = !0, this.fightingExcute = !1, this.isIgnoreDead = !0;
        }
    }
    class Ni extends Ve {
        GetNewInstance() {
            return new Ni();
        }
        constructor() {
            super(), this.id = 705, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .1 ]
            }, this.name = "甘露(难度6)", this.desc = "脱离战斗后，每秒恢复7.5%最大生命值", this.icon = "icon/buff_shms_gl.png", 
            this.isEndRestore = !0, this.isCover = !0, this.fightingExcute = !1, this.isIgnoreDead = !0;
        }
    }
    class Mi extends Ve {
        GetNewInstance() {
            return new Mi();
        }
        constructor() {
            super(), this.id = 706, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .1 ]
            }, this.name = "甘露(难度7)", this.desc = "脱离战斗后，每秒恢复5%最大生命值", this.icon = "icon/buff_shms_gl.png", 
            this.isEndRestore = !0, this.isCover = !0, this.fightingExcute = !1, this.isIgnoreDead = !0;
        }
    }
    class Ai extends Ve {
        GetNewInstance() {
            return new Ai();
        }
        constructor() {
            super(), this.id = 801, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .1 ]
            }, this.buffData[1] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "究极强化(群体)", this.desc = "英雄伤害增加10*等级%,受到伤害降低10*等级%", this.icon = "icon/buff_shms_jjqh.png", 
            this.isEndRestore = !0, this.addMaxCount = 3, this.isIgnoreDead = !0;
        }
    }
    class Oi extends Ve {
        GetNewInstance() {
            return new Oi();
        }
        constructor() {
            super(), this.id = 802, this.time = 1e4, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.9 ]
            }, this.name = "强化防御塔", this.desc = "己方所有防御塔无敌10秒", this.icon = "", this.effectName = "3dres/effect/e_cbjn3b.lh", 
            this.effectObjHeightType = 1, this.isEnableAddBuild = !0, this.isEndRestore = !0, 
            this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class Ei extends Ve {
        GetNewInstance() {
            return new Ei();
        }
        constructor() {
            super(), this.id = 803, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "强化防御塔", this.desc = "己方防御塔所受到伤害降低10*等级%", this.icon = "", this.isEnableAddBuild = !0, 
            this.isEndRestore = !0, this.addMaxCount = 3, this.isIgnoreDead = !0;
        }
    }
    class Gi extends Ve {
        GetNewInstance() {
            return new Gi();
        }
        constructor() {
            super(), this.id = 804, this.time = 15e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.name = "超级震荡波", this.desc = "敌方所有英雄、小兵眩晕15秒", this.icon = "", this.effectName = "3dres/effect/e_xuanyun.lh", 
            this.effectObjHeightType = 2, this.isEnableAddBuild = !0, this.isEndRestore = !0, 
            this.isCover = !1;
        }
    }
    class Ri extends Ve {
        GetNewInstance() {
            return new Ri();
        }
        constructor() {
            super(), this.id = 805, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .1 ]
            }, this.buffData[1] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.1 ]
            }, this.name = "究极强化", this.desc = "英雄伤害增加10%,受到伤害降低10%", this.icon = "icon/buff_shms_jjqh.png", 
            this.isEndRestore = !0, this.isIgnoreDead = !0;
        }
    }
    class Bi extends Ve {
        GetNewInstance() {
            return new Bi();
        }
        constructor() {
            super(), this.id = 806, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ -.5 ]
            }, this.name = "超级震荡波", this.desc = "敌方所有英雄、小兵扣除血量-50%并眩晕15秒", this.icon = "icon/buff_shms_gl.png";
        }
    }
    class Hi extends Ve {
        GetNewInstance() {
            return new Hi();
        }
        constructor() {
            super(), this.id = 807, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .5 ]
            }, this.name = "强化防御塔", this.desc = "生命恢复50%", this.isEnableAddBuild = !0;
        }
    }
    class Fi extends Ve {
        GetNewInstance() {
            return new Fi();
        }
        constructor() {
            super(), this.id = 808, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.3 ]
            }, this.name = "防御塔减伤", this.desc = "防御塔减伤30%", this.isEnableAddBuild = !0, this.isCover = !0;
        }
    }
    class Vi extends Ve {
        GetNewInstance() {
            return new Vi();
        }
        constructor() {
            super(), this.id = 809, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -1 ]
            }, this.name = "防御塔减伤", this.desc = "防御塔减伤100%", this.isEnableAddBuild = !0, this.isCover = !0;
        }
    }
    class ji extends Ve {
        GetNewInstance() {
            return new ji();
        }
        constructor() {
            super(), this.id = 810, this.time = 3e3, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -1 ]
            }, this.name = "神圣祝福", this.desc = "受到所有伤害减少100%", this.effectName = "3dres/effect/e_cbjn3b.lh", 
            this.effectObjHeightType = 0, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Wi extends Ve {
        GetNewInstance() {
            return new Wi();
        }
        constructor() {
            super(), this.id = 811, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ -.03 ]
            }, this.name = "灼伤", this.desc = "扣除3%生命值", this.isCover = !0;
        }
    }
    class Xi extends Ve {
        GetNewInstance() {
            return new Xi();
        }
        constructor() {
            super(), this.id = 812, this.time = 100, this.buffData[0] = {
                buffType: ue.changeAllSkillCD,
                value: [ 5e4 ]
            }, this.isCover = !0, this.isEndRestore = !0;
        }
    }
    class Ki extends Ve {
        GetNewInstance() {
            return new Ki();
        }
        constructor() {
            super(), this.id = 813, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 2 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class qi extends Ve {
        GetNewInstance() {
            return new qi();
        }
        constructor() {
            super(), this.id = 814, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 4 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class zi extends Ve {
        GetNewInstance() {
            return new zi();
        }
        constructor() {
            super(), this.id = 815, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 6 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class Yi extends Ve {
        GetNewInstance() {
            return new Yi();
        }
        constructor() {
            super(), this.id = 816, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 8 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class Ji extends Ve {
        GetNewInstance() {
            return new Ji();
        }
        constructor() {
            super(), this.id = 817, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 10 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class Qi extends Ve {
        GetNewInstance() {
            return new Qi();
        }
        constructor() {
            super(), this.id = 818, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 12 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class Zi extends Ve {
        GetNewInstance() {
            return new Zi();
        }
        constructor() {
            super(), this.id = 819, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 14 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class $i extends Ve {
        GetNewInstance() {
            return new $i();
        }
        constructor() {
            super(), this.id = 820, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 16 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class es extends Ve {
        GetNewInstance() {
            return new es();
        }
        constructor() {
            super(), this.id = 821, this.time = 9999999999, this.buffData[0] = {
                buffType: ue.changeHpMaxScale,
                value: [ 18 ]
            }, this.isCover = !0, this.isEndRestore = !0, this.isEnableAddBuild = !0;
        }
    }
    class ts extends Ve {
        GetNewInstance() {
            return new ts();
        }
        constructor() {
            super(), this.id = 1e3, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 2, this.isCover = !0;
        }
    }
    class is extends Ve {
        GetNewInstance() {
            return new is();
        }
        constructor() {
            super(), this.id = 1001, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .3 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 52, this.subLv = 2, this.isCover = !0;
        }
    }
    class ss extends Ve {
        GetNewInstance() {
            return new ss();
        }
        constructor() {
            super(), this.id = 1002, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 50 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 50 ]
            }, this.isEndRestore = !0;
        }
    }
    class ns extends Ve {
        GetNewInstance() {
            return new ns();
        }
        constructor() {
            super(), this.id = 1003, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1e3 ]
            }, this.effectName = "3dres/effect/e_JSckjn2hd.lh", this.isEndRestore = !0;
        }
    }
    class as extends Ve {
        GetNewInstance() {
            return new as();
        }
        constructor() {
            super(), this.id = 1004, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 2, this.isCover = !0;
        }
    }
    class os extends Ve {
        GetNewInstance() {
            return new os();
        }
        constructor() {
            super(), this.id = 1005, this.time = 1500, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.effectName = "3dres/effect/e_xuanyun.lh", this.effectObjHeightType = 2, 
            this.isEndRestore = !0;
        }
    }
    class ls extends Ve {
        GetNewInstance() {
            return new ls();
        }
        constructor() {
            super(), this.id = 1006, this.time = 1e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 2, this.isCover = !0;
        }
    }
    class hs extends Ve {
        GetNewInstance() {
            return new hs();
        }
        constructor() {
            super(), this.id = 1007, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.effectName = "3dres/effect/e_xuanyun.lh", this.effectObjHeightType = 2, 
            this.isEndRestore = !0;
        }
    }
    class rs extends Ve {
        GetNewInstance() {
            return new rs();
        }
        constructor() {
            super(), this.id = 1008, this.time = 1e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.5 ]
            }, this.buffData[1] = {
                buffType: ue.changeAtkSpeed,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 4, this.isCover = !0;
        }
    }
    class cs extends Ve {
        GetNewInstance() {
            return new cs();
        }
        constructor() {
            super(), this.id = 1010, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .05 ]
            }, this.effectName = "3dres/effect/e_huixue.lh", this.effectObjHeightType = 1;
        }
    }
    class ds extends Ve {
        GetNewInstance() {
            return new ds();
        }
        constructor() {
            super(), this.id = 1012, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .06 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class us extends Ve {
        GetNewInstance() {
            return new us();
        }
        constructor() {
            super(), this.id = 1013, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .07 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class ps extends Ve {
        GetNewInstance() {
            return new ps();
        }
        constructor() {
            super(), this.id = 1014, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .08 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class ms extends Ve {
        GetNewInstance() {
            return new ms();
        }
        constructor() {
            super(), this.id = 1015, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .09 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class gs extends Ve {
        GetNewInstance() {
            return new gs();
        }
        constructor() {
            super(), this.id = 1016, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .1 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class fs extends Ve {
        GetNewInstance() {
            return new fs();
        }
        constructor() {
            super(), this.id = 1011, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ -.12 ]
            };
        }
    }
    class Is extends Ve {
        GetNewInstance() {
            return new Is();
        }
        constructor() {
            super(), this.id = 1017, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1100 ]
            }, this.effectName = "3dres/effect/e_JSckjn2hd.lh", this.isEndRestore = !0;
        }
    }
    class vs extends Ve {
        GetNewInstance() {
            return new vs();
        }
        constructor() {
            super(), this.id = 1018, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1200 ]
            }, this.effectName = "3dres/effect/e_JSckjn2hd.lh", this.isEndRestore = !0;
        }
    }
    class _s extends Ve {
        GetNewInstance() {
            return new _s();
        }
        constructor() {
            super(), this.id = 1019, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1300 ]
            }, this.effectName = "3dres/effect/e_JSckjn2hd.lh", this.isEndRestore = !0;
        }
    }
    class ys extends Ve {
        GetNewInstance() {
            return new ys();
        }
        constructor() {
            super(), this.id = 1020, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1400 ]
            }, this.effectName = "3dres/effect/e_JSckjn2hd.lh", this.isEndRestore = !0;
        }
    }
    class Ss extends Ve {
        GetNewInstance() {
            return new Ss();
        }
        constructor() {
            super(), this.id = 1021, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1500 ]
            }, this.effectName = "3dres/effect/e_JSckjn2hd.lh", this.isEndRestore = !0;
        }
    }
    class ws extends Ve {
        GetNewInstance() {
            return new ws();
        }
        constructor() {
            super(), this.id = 1022, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 60 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 60 ]
            }, this.buffData[2] = {
                buffType: ue.changePhyRecoverHp,
                value: [ .11 ]
            }, this.isEndRestore = !0;
        }
    }
    class Ds extends Ve {
        GetNewInstance() {
            return new Ds();
        }
        constructor() {
            super(), this.id = 1023, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 70 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 70 ]
            }, this.buffData[2] = {
                buffType: ue.changePhyRecoverHp,
                value: [ .12 ]
            }, this.isEndRestore = !0;
        }
    }
    class ks extends Ve {
        GetNewInstance() {
            return new ks();
        }
        constructor() {
            super(), this.id = 1024, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 80 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 80 ]
            }, this.buffData[2] = {
                buffType: ue.changePhyRecoverHp,
                value: [ .13 ]
            }, this.isEndRestore = !0;
        }
    }
    class Cs extends Ve {
        GetNewInstance() {
            return new Cs();
        }
        constructor() {
            super(), this.id = 1025, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 90 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 90 ]
            }, this.buffData[2] = {
                buffType: ue.changePhyRecoverHp,
                value: [ .14 ]
            }, this.isEndRestore = !0;
        }
    }
    class bs extends Ve {
        GetNewInstance() {
            return new bs();
        }
        constructor() {
            super(), this.id = 1026, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 100 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 100 ]
            }, this.buffData[2] = {
                buffType: ue.changePhyRecoverHp,
                value: [ .15 ]
            }, this.isEndRestore = !0;
        }
    }
    class Ps extends Ve {
        GetNewInstance() {
            return new Ps();
        }
        constructor() {
            super(), this.id = 1027, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.5 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 4, this.isCover = !0;
        }
    }
    class xs extends Ve {
        GetNewInstance() {
            return new xs();
        }
        constructor() {
            super(), this.id = 1028, this.time = 100, this.buffData[0] = {
                buffType: ue.changeAllSkillCD,
                value: [ 1e3 ]
            }, this.isEndRestore = !0;
        }
    }
    class Ts extends Ve {
        GetNewInstance() {
            return new Ts();
        }
        constructor() {
            super(), this.id = 1029, this.time = 1e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.effectName = "3dres/effect/e_xuanyun.lh", this.effectObjHeightType = 2, 
            this.isEndRestore = !0;
        }
    }
    class Us extends Ve {
        GetNewInstance() {
            return new Us();
        }
        constructor() {
            super(), this.id = 1030, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .06 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.addMaxCount = 5;
        }
    }
    class Ls extends Ve {
        GetNewInstance() {
            return new Ls();
        }
        constructor() {
            super(), this.id = 1031, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.isEndRestore = !0;
        }
    }
    class Ns extends Ve {
        GetNewInstance() {
            return new Ns();
        }
        constructor() {
            super(), this.id = 1032, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -20 ]
            }, this.isEndRestore = !0;
        }
    }
    class Ms extends Ve {
        GetNewInstance() {
            return new Ms();
        }
        constructor() {
            super(), this.id = 1033, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -40 ]
            }, this.isEndRestore = !0;
        }
    }
    class As extends Ve {
        GetNewInstance() {
            return new As();
        }
        constructor() {
            super(), this.id = 1034, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -60 ]
            }, this.isEndRestore = !0;
        }
    }
    class Os extends Ve {
        GetNewInstance() {
            return new Os();
        }
        constructor() {
            super(), this.id = 1035, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -80 ]
            }, this.isEndRestore = !0;
        }
    }
    class Es extends Ve {
        GetNewInstance() {
            return new Es();
        }
        constructor() {
            super(), this.id = 1036, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -100 ]
            }, this.isEndRestore = !0;
        }
    }
    class Gs extends Ve {
        GetNewInstance() {
            return new Gs();
        }
        constructor() {
            super(), this.id = 1037, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -120 ]
            }, this.isEndRestore = !0;
        }
    }
    class Rs extends Ve {
        GetNewInstance() {
            return new Rs();
        }
        constructor() {
            super(), this.id = 1038, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 2, this.isCover = !0;
        }
    }
    class Bs extends Ve {
        GetNewInstance() {
            return new Bs();
        }
        constructor() {
            super(), this.id = 1039, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .01 ]
            }, this.effectName = "3dres/effect/e_huixue.lh", this.effectObjHeightType = 1;
        }
    }
    class Hs extends Ve {
        GetNewInstance() {
            return new Hs();
        }
        constructor() {
            super(), this.id = 1040, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .4 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 52, this.subLv = 2, this.isCover = !0;
        }
    }
    class Fs extends Ve {
        GetNewInstance() {
            return new Fs();
        }
        constructor() {
            super(), this.id = 1041, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1e3 ]
            }, this.effectName = "3dres/effect/e_JShzjn1.lh", this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Vs extends Ve {
        GetNewInstance() {
            return new Vs();
        }
        constructor() {
            super(), this.id = 1042, this.time = 1500, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.effectName = "3dres/effect/e_xuanyun.lh", this.effectObjHeightType = 2, 
            this.isEndRestore = !0;
        }
    }
    class js extends Ve {
        GetNewInstance() {
            return new js();
        }
        constructor() {
            super(), this.id = 1043, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1200 ]
            }, this.effectName = "3dres/effect/e_JShzjn1.lh", this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Ws extends Ve {
        GetNewInstance() {
            return new Ws();
        }
        constructor() {
            super(), this.id = 1044, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1400 ]
            }, this.effectName = "3dres/effect/e_JShzjn1.lh", this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Xs extends Ve {
        GetNewInstance() {
            return new Xs();
        }
        constructor() {
            super(), this.id = 1045, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1600 ]
            }, this.effectName = "3dres/effect/e_JShzjn1.lh", this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Ks extends Ve {
        GetNewInstance() {
            return new Ks();
        }
        constructor() {
            super(), this.id = 1046, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1800 ]
            }, this.effectName = "3dres/effect/e_JShzjn1.lh", this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class qs extends Ve {
        GetNewInstance() {
            return new qs();
        }
        constructor() {
            super(), this.id = 1047, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 2e3 ]
            }, this.effectName = "3dres/effect/e_JShzjn1.lh", this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class zs extends Ve {
        GetNewInstance() {
            return new zs();
        }
        constructor() {
            super(), this.id = 1048, this.time = 500, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.25 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Ys extends Ve {
        GetNewInstance() {
            return new Ys();
        }
        constructor() {
            super(), this.id = 1049, this.time = 5e3, this.effectName = "3dres/effect/e_JShzbuff.lh", 
            this.isCover = !0;
        }
    }
    class Js extends Ve {
        GetNewInstance() {
            return new Js();
        }
        constructor() {
            super(), this.id = 1050, this.time = 1e3, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.isEndRestore = !0;
        }
    }
    class Qs extends Ve {
        GetNewInstance() {
            return new Qs();
        }
        constructor() {
            super(), this.id = 1051, this.time = 3500, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 200 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ 200 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Zs extends Ve {
        GetNewInstance() {
            return new Zs();
        }
        constructor() {
            super(), this.id = 1052, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -75 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ -75 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class $s extends Ve {
        GetNewInstance() {
            return new $s();
        }
        constructor() {
            super(), this.id = 1053, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -100 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ -100 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class en extends Ve {
        GetNewInstance() {
            return new en();
        }
        constructor() {
            super(), this.id = 1054, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -125 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ -125 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class tn extends Ve {
        GetNewInstance() {
            return new tn();
        }
        constructor() {
            super(), this.id = 1055, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -150 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ -150 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class sn extends Ve {
        GetNewInstance() {
            return new sn();
        }
        constructor() {
            super(), this.id = 1056, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -175 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ -175 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class nn extends Ve {
        GetNewInstance() {
            return new nn();
        }
        constructor() {
            super(), this.id = 1057, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ -200 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagDef,
                value: [ -200 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class an extends Ve {
        GetNewInstance() {
            return new an();
        }
        constructor() {
            super(), this.id = 1058, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.2 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class on extends Ve {
        GetNewInstance() {
            return new on();
        }
        constructor() {
            super(), this.id = 1059, this.time = 2100, this.spaceTime = 300, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 50 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class ln extends Ve {
        GetNewInstance() {
            return new ln();
        }
        constructor() {
            super(), this.id = 1061, this.time = 2100, this.spaceTime = 300, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 65 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class hn extends Ve {
        GetNewInstance() {
            return new hn();
        }
        constructor() {
            super(), this.id = 1062, this.time = 2100, this.spaceTime = 300, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 75 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class rn extends Ve {
        GetNewInstance() {
            return new rn();
        }
        constructor() {
            super(), this.id = 1063, this.time = 2100, this.spaceTime = 300, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 90 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class cn extends Ve {
        GetNewInstance() {
            return new cn();
        }
        constructor() {
            super(), this.id = 1064, this.time = 2100, this.spaceTime = 300, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 105 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class dn extends Ve {
        GetNewInstance() {
            return new dn();
        }
        constructor() {
            super(), this.id = 1065, this.time = 2100, this.spaceTime = 300, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 125 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class un extends Ve {
        GetNewInstance() {
            return new un();
        }
        constructor() {
            super(), this.id = 1060, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 1e3 ]
            }, this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class pn extends Ve {
        GetNewInstance() {
            return new pn();
        }
        constructor() {
            super(), this.id = 1066, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.isCover = !0, 
            this.subID = 51, this.subLv = 2;
        }
    }
    class mn extends Ve {
        GetNewInstance() {
            return new mn();
        }
        constructor() {
            super(), this.id = 1067, this.time = 3500, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .2 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.subID = 52, this.subLv = 2;
        }
    }
    class gn extends Ve {
        GetNewInstance() {
            return new gn();
        }
        constructor() {
            super(), this.id = 1068, this.time = 3500, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .15 ]
            }, this.effectName = "3dres/effect/e_JSlbjn1.lh", this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class fn extends Ve {
        GetNewInstance() {
            return new fn();
        }
        constructor() {
            super(), this.id = 1069, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.5 ]
            }, this.isEndRestore = !0, this.effectName = "3dres/effect/e_jiansu.lh", this.isCover = !0, 
            this.subID = 51, this.subLv = 4;
        }
    }
    class In extends Ve {
        GetNewInstance() {
            return new In();
        }
        constructor() {
            super(), this.id = 1070, this.time = 2e3, this.spaceTime = 500, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ -.02 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class vn extends Ve {
        GetNewInstance() {
            return new vn();
        }
        constructor() {
            super(), this.id = 1071, this.time = 5e3, this.spaceTime = 500, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 150 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class _n extends Ve {
        GetNewInstance() {
            return new _n();
        }
        constructor() {
            super(), this.id = 1072, this.time = 5e3, this.spaceTime = 500, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 180 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class yn extends Ve {
        GetNewInstance() {
            return new yn();
        }
        constructor() {
            super(), this.id = 1073, this.time = 5e3, this.spaceTime = 500, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 210 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class Sn extends Ve {
        GetNewInstance() {
            return new Sn();
        }
        constructor() {
            super(), this.id = 1074, this.time = 5e3, this.spaceTime = 500, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 240 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class wn extends Ve {
        GetNewInstance() {
            return new wn();
        }
        constructor() {
            super(), this.id = 1075, this.time = 5e3, this.spaceTime = 500, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 270 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class Dn extends Ve {
        GetNewInstance() {
            return new Dn();
        }
        constructor() {
            super(), this.id = 1076, this.time = 5e3, this.spaceTime = 500, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 300 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !0;
        }
    }
    class kn extends Ve {
        GetNewInstance() {
            return new kn();
        }
        constructor() {
            super(), this.id = 1077, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class Cn extends Ve {
        GetNewInstance() {
            return new Cn();
        }
        constructor() {
            super(), this.id = 1078, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 450 ]
            }, this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class bn extends Ve {
        GetNewInstance() {
            return new bn();
        }
        constructor() {
            super(), this.id = 1079, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 500 ]
            }, this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class Pn extends Ve {
        GetNewInstance() {
            return new Pn();
        }
        constructor() {
            super(), this.id = 1080, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 550 ]
            }, this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class xn extends Ve {
        GetNewInstance() {
            return new xn();
        }
        constructor() {
            super(), this.id = 1081, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 600 ]
            }, this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class Tn extends Ve {
        GetNewInstance() {
            return new Tn();
        }
        constructor() {
            super(), this.id = 1082, this.time = 4e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 700 ]
            }, this.isEndRestore = !0, this.isCover = !1;
        }
    }
    class Un extends Ve {
        GetNewInstance() {
            return new Un();
        }
        constructor() {
            super(), this.id = 1083, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ -.16 ]
            };
        }
    }
    class Ln extends Ve {
        GetNewInstance() {
            return new Ln();
        }
        constructor() {
            super(), this.id = 1084, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ -.2 ]
            };
        }
    }
    class Nn extends Ve {
        GetNewInstance() {
            return new Nn();
        }
        constructor() {
            super(), this.id = 1085, this.time = 500, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.effectName = "3dres/effect/e_xuanyun.lh", this.effectObjHeightType = 2, 
            this.isEndRestore = !0;
        }
    }
    class Mn extends Ve {
        GetNewInstance() {
            return new Mn();
        }
        constructor() {
            super(), this.id = 1086, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .2 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 54, this.subLv = 1, this.isCover = !0;
        }
    }
    class An extends Ve {
        GetNewInstance() {
            return new An();
        }
        constructor() {
            super(), this.id = 1087, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .22 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 54, this.subLv = 2, this.isCover = !0;
        }
    }
    class On extends Ve {
        GetNewInstance() {
            return new On();
        }
        constructor() {
            super(), this.id = 1088, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .24 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 54, this.subLv = 3, this.isCover = !0;
        }
    }
    class En extends Ve {
        GetNewInstance() {
            return new En();
        }
        constructor() {
            super(), this.id = 1089, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .26 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 54, this.subLv = 4, this.isCover = !0;
        }
    }
    class Gn extends Ve {
        GetNewInstance() {
            return new Gn();
        }
        constructor() {
            super(), this.id = 1090, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .28 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 54, this.subLv = 5, this.isCover = !0;
        }
    }
    class Rn extends Ve {
        GetNewInstance() {
            return new Rn();
        }
        constructor() {
            super(), this.id = 1091, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .3 ]
            }, this.effectName = "3dres/effect/e_jiasu.lh", this.effectObjHeightType = 1, this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 54, this.subLv = 6, this.isCover = !0;
        }
    }
    class Bn extends Ve {
        GetNewInstance() {
            return new Bn();
        }
        constructor() {
            super(), this.id = 1092, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .05 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.subID = 55, this.subLv = 1, this.isCover = !0;
        }
    }
    class Hn extends Ve {
        GetNewInstance() {
            return new Hn();
        }
        constructor() {
            super(), this.id = 1093, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .06 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.subID = 55, this.subLv = 2, this.isCover = !0;
        }
    }
    class Fn extends Ve {
        GetNewInstance() {
            return new Fn();
        }
        constructor() {
            super(), this.id = 1094, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .07 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.subID = 55, this.subLv = 3, this.isCover = !0;
        }
    }
    class Vn extends Ve {
        GetNewInstance() {
            return new Vn();
        }
        constructor() {
            super(), this.id = 1095, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .08 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.subID = 55, this.subLv = 4, this.isCover = !0;
        }
    }
    class jn extends Ve {
        GetNewInstance() {
            return new jn();
        }
        constructor() {
            super(), this.id = 1096, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .09 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.subID = 55, this.subLv = 5, this.isCover = !0;
        }
    }
    class Wn extends Ve {
        GetNewInstance() {
            return new Wn();
        }
        constructor() {
            super(), this.id = 1097, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeTempMaxHPRate,
                value: [ .1 ]
            }, this.buffData[1] = {
                buffType: ue.changeTempHp,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.subID = 55, this.subLv = 6, this.isCover = !0;
        }
    }
    class Xn extends Ve {
        GetNewInstance() {
            return new Xn();
        }
        constructor() {
            super(), this.id = 1098, this.time = 8e3, this.effectName = "3dres/effect/e_atmjn1b.lh", 
            this.isCover = !0;
        }
    }
    class Kn extends Ve {
        GetNewInstance() {
            return new Kn();
        }
        constructor() {
            super(), this.id = 1099, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .3 ]
            }, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class qn extends Ve {
        GetNewInstance() {
            return new qn();
        }
        constructor() {
            super(), this.id = 1100, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 2, this.isCover = !0;
        }
    }
    class zn extends Ve {
        GetNewInstance() {
            return new zn();
        }
        constructor() {
            super(), this.id = 1101, this.time = 99999999, this.effectName = "3dres/effect/e_JSllpg3.lh", 
            this.isCover = !0;
        }
    }
    class Yn extends Ve {
        GetNewInstance() {
            return new Yn();
        }
        constructor() {
            super(), this.id = 1102, this.time = 99999999, this.spaceTime = 2e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .02 ]
            }, this.fightingExcute = !1, this.isEndRestore = !1, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Jn extends Ve {
        GetNewInstance() {
            return new Jn();
        }
        constructor() {
            super(), this.id = 1103, this.time = 800, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.buffData[1] = {
                buffType: ue.changeState,
                value: [ 7, 10, .3, 30, -.1 ]
            }, this.effectName = "", this.effectObjHeightType = 2, this.isEndRestore = !0;
        }
    }
    class Qn extends Ve {
        GetNewInstance() {
            return new Qn();
        }
        constructor() {
            super(), this.id = 1104, this.time = 800, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.effectName = "3dres/effect/e_xuanyun.lh", this.effectObjHeightType = 2, 
            this.isEndRestore = !0;
        }
    }
    class Zn extends Ve {
        GetNewInstance() {
            return new Zn();
        }
        constructor() {
            super(), this.id = 1105, this.time = 1800, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 6 ]
            }, this.isEndRestore = !0;
        }
    }
    class $n extends Ve {
        GetNewInstance() {
            return new $n();
        }
        constructor() {
            super(), this.id = 1106, this.time = 999999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .97, -.01 ]
            }, this.buffData[1] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .94, -.01 ]
            }, this.buffData[2] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .91, -.01 ]
            }, this.buffData[3] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .88, -.01 ]
            }, this.buffData[4] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .85, -.01 ]
            }, this.buffData[5] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .82, -.01 ]
            }, this.buffData[6] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .79, -.01 ]
            }, this.buffData[7] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .76, -.01 ]
            }, this.buffData[8] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .73, -.01 ]
            }, this.buffData[9] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .7, -.01 ]
            }, this.buffData[10] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .67, -.01 ]
            }, this.buffData[11] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .64, -.01 ]
            }, this.buffData[12] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .61, -.01 ]
            }, this.buffData[13] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .58, -.01 ]
            }, this.buffData[14] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .55, -.01 ]
            }, this.buffData[15] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .52, -.01 ]
            }, this.buffData[16] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .49, -.01 ]
            }, this.buffData[17] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .46, -.01 ]
            }, this.buffData[18] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .43, -.01 ]
            }, this.buffData[19] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .4, -.01 ]
            }, this.buffData[20] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .37, -.01 ]
            }, this.buffData[21] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .34, -.01 ]
            }, this.buffData[22] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .31, -.01 ]
            }, this.buffData[23] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .28, -.01 ]
            }, this.buffData[24] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .25, -.01 ]
            }, this.buffData[25] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .22, -.01 ]
            }, this.buffData[26] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .19, -.01 ]
            }, this.buffData[27] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .16, -.01 ]
            }, this.buffData[28] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .13, -.01 ]
            }, this.buffData[29] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, .1, -.01 ]
            };
        }
    }
    class ea extends Ve {
        GetNewInstance() {
            return new ea();
        }
        constructor() {
            super(), this.id = 1107, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.5 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 4, this.isCover = !0;
        }
    }
    class ta extends Ve {
        GetNewInstance() {
            return new ta();
        }
        constructor() {
            super(), this.id = 1108, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .01 ]
            }, this.buffData[1] = {
                buffType: ue.changeHp,
                value: [ 30 ]
            }, this.effectName = "3dres/effect/e_huixue.lh", this.effectObjHeightType = 1;
        }
    }
    class ia extends Ve {
        GetNewInstance() {
            return new ia();
        }
        constructor() {
            super(), this.id = 1109, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .01 ]
            }, this.buffData[1] = {
                buffType: ue.changeHp,
                value: [ 45 ]
            }, this.effectName = "3dres/effect/e_huixue.lh", this.effectObjHeightType = 1;
        }
    }
    class sa extends Ve {
        GetNewInstance() {
            return new sa();
        }
        constructor() {
            super(), this.id = 1110, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .01 ]
            }, this.buffData[1] = {
                buffType: ue.changeHp,
                value: [ 60 ]
            }, this.effectName = "3dres/effect/e_huixue.lh", this.effectObjHeightType = 1;
        }
    }
    class na extends Ve {
        GetNewInstance() {
            return new na();
        }
        constructor() {
            super(), this.id = 1111, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .2 ]
            }, this.subID = 56, this.subLv = 1, this.isCover = !0, this.isEndRestore = !0;
        }
    }
    class aa extends Ve {
        GetNewInstance() {
            return new aa();
        }
        constructor() {
            super(), this.id = 1112, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .24 ]
            }, this.subID = 56, this.subLv = 2, this.isCover = !0, this.isEndRestore = !0;
        }
    }
    class oa extends Ve {
        GetNewInstance() {
            return new oa();
        }
        constructor() {
            super(), this.id = 1113, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .28 ]
            }, this.subID = 56, this.subLv = 3, this.isCover = !0, this.isEndRestore = !0;
        }
    }
    class la extends Ve {
        GetNewInstance() {
            return new la();
        }
        constructor() {
            super(), this.id = 1114, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .32 ]
            }, this.subID = 56, this.subLv = 4, this.isCover = !0, this.isEndRestore = !0;
        }
    }
    class ha extends Ve {
        GetNewInstance() {
            return new ha();
        }
        constructor() {
            super(), this.id = 1115, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .36 ]
            }, this.subID = 56, this.subLv = 5, this.isCover = !0, this.isEndRestore = !0;
        }
    }
    class ra extends Ve {
        GetNewInstance() {
            return new ra();
        }
        constructor() {
            super(), this.id = 1116, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .4 ]
            }, this.subID = 56, this.subLv = 6, this.isCover = !0, this.isEndRestore = !0;
        }
    }
    class ca extends Ve {
        GetNewInstance() {
            return new ca();
        }
        constructor() {
            super(), this.id = 1117, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .2 ]
            };
        }
    }
    class da extends Ve {
        GetNewInstance() {
            return new da();
        }
        constructor() {
            super(), this.id = 2004, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.5 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.subID = 51, this.subLv = 4;
        }
    }
    class ua extends Ve {
        GetNewInstance() {
            return new ua();
        }
        constructor() {
            super(), this.id = 2e3, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .3 ]
            }, this.effectName = "3dres/effect/e_laohu_jn_03_b.lh", this.effectObjHeightType = 0, 
            this.effectBindType = 1, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class pa extends Ve {
        GetNewInstance() {
            return new pa();
        }
        constructor() {
            super(), this.id = 2001, this.time = 5e3, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .06 ]
            }, this.buffData[1] = {
                buffType: ue.changeHp,
                value: [ 100 ]
            };
        }
    }
    class ma extends Ve {
        GetNewInstance() {
            return new ma();
        }
        constructor() {
            super(), this.id = 2002, this.time = 5e3, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .07 ]
            }, this.buffData[1] = {
                buffType: ue.changeHp,
                value: [ 200 ]
            };
        }
    }
    class ga extends Ve {
        GetNewInstance() {
            return new ga();
        }
        constructor() {
            super(), this.id = 2003, this.time = 5e3, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .08 ]
            }, this.buffData[1] = {
                buffType: ue.changeHp,
                value: [ 300 ]
            };
        }
    }
    class fa extends Ve {
        GetNewInstance() {
            return new fa();
        }
        constructor() {
            super(), this.id = 2020, this.time = 800, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.buffData[1] = {
                buffType: ue.changeState,
                value: [ 7, 10, .3, 30, -.1 ]
            }, this.isEndRestore = !0;
        }
    }
    class Ia extends Ve {
        GetNewInstance() {
            return new Ia();
        }
        constructor() {
            super(), this.id = 2021, this.time = 8e3, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.3 ]
            }, this.buffData[1] = {
                buffType: ue.changePhyAtk,
                value: [ 150 ]
            }, this.buffData[2] = {
                buffType: ue.changeSpeedScale,
                value: [ .15 ]
            }, this.buffData[3] = {
                buffType: ue.changeState,
                value: [ 8, 2, 1 ]
            }, this.effectName = "3dres/effect/e_kaijn3b.lh", this.effectObjHeightType = 1, 
            this.isEndRestore = !0;
        }
    }
    class va extends Ve {
        GetNewInstance() {
            return new va();
        }
        constructor() {
            super(), this.id = 2022, this.time = 2e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 2, this.isCover = !0;
        }
    }
    class _a extends Ve {
        GetNewInstance() {
            return new _a();
        }
        constructor() {
            super(), this.id = 2023, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .15 ]
            }, this.buffData[1] = {
                buffType: ue.changeSpeedScale,
                value: [ .2 ]
            }, this.effectObjHeightType = 1, this.effectName = "3dres/effect/jiasu.lh", this.effectBindType = 2, 
            this.isEndRestore = !0, this.subID = 52, this.subLv = 2, this.isCover = !0;
        }
    }
    class ya extends Ve {
        GetNewInstance() {
            return new ya();
        }
        constructor() {
            super(), this.id = 2024, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .17 ]
            }, this.buffData[1] = {
                buffType: ue.changeSpeedScale,
                value: [ .22 ]
            }, this.effectName = "3dres/effect/e_kaijn2b.lh", this.effectObjHeightType = 1, 
            this.effectBindType = 2, this.isEndRestore = !0, this.subID = 52, this.subLv = 2, 
            this.isCover = !0;
        }
    }
    class Sa extends Ve {
        GetNewInstance() {
            return new Sa();
        }
        constructor() {
            super(), this.id = 2025, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .19 ]
            }, this.buffData[1] = {
                buffType: ue.changeSpeedScale,
                value: [ .24 ]
            }, this.effectName = "3dres/effect/e_kaijn2b.lh", this.effectObjHeightType = 1, 
            this.effectBindType = 2, this.isEndRestore = !0, this.subID = 52, this.subLv = 2, 
            this.isCover = !0;
        }
    }
    class wa extends Ve {
        GetNewInstance() {
            return new wa();
        }
        constructor() {
            super(), this.id = 2026, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .21 ]
            }, this.buffData[1] = {
                buffType: ue.changeSpeedScale,
                value: [ .26 ]
            }, this.effectName = "3dres/effect/e_kaijn2b.lh", this.effectObjHeightType = 1, 
            this.effectBindType = 2, this.isEndRestore = !0, this.subID = 52, this.subLv = 2, 
            this.isCover = !0;
        }
    }
    class Da extends Ve {
        GetNewInstance() {
            return new Da();
        }
        constructor() {
            super(), this.id = 2027, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .23 ]
            }, this.buffData[1] = {
                buffType: ue.changeSpeedScale,
                value: [ .28 ]
            }, this.effectName = "3dres/effect/e_kaijn2b.lh", this.effectObjHeightType = 1, 
            this.effectBindType = 2, this.isEndRestore = !0, this.subID = 52, this.subLv = 2, 
            this.isCover = !0;
        }
    }
    class ka extends Ve {
        GetNewInstance() {
            return new ka();
        }
        constructor() {
            super(), this.id = 2028, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .25 ]
            }, this.buffData[1] = {
                buffType: ue.changeSpeedScale,
                value: [ .3 ]
            }, this.effectName = "3dres/effect/e_kaijn2b.lh", this.effectObjHeightType = 1, 
            this.effectBindType = 2, this.isEndRestore = !0, this.subID = 52, this.subLv = 2, 
            this.isCover = !0;
        }
    }
    class Ca extends Ve {
        GetNewInstance() {
            return new Ca();
        }
        constructor() {
            super(), this.id = 2029, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .01 ]
            }, this.fightingExcute = !1;
        }
    }
    class ba extends Ve {
        GetNewInstance() {
            return new ba();
        }
        constructor() {
            super(), this.id = 2030, this.time = 8e3, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.35 ]
            }, this.buffData[1] = {
                buffType: ue.changePhyAtk,
                value: [ 200 ]
            }, this.buffData[2] = {
                buffType: ue.changeSpeedScale,
                value: [ .15 ]
            }, this.buffData[3] = {
                buffType: ue.changeState,
                value: [ 8, 2, 1 ]
            }, this.effectName = "3dres/effect/e_kaijn3b.lh", this.effectObjHeightType = 1, 
            this.isEndRestore = !0;
        }
    }
    class Pa extends Ve {
        GetNewInstance() {
            return new Pa();
        }
        constructor() {
            super(), this.id = 2031, this.time = 8e3, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 7, 1, -.4 ]
            }, this.buffData[1] = {
                buffType: ue.changePhyAtk,
                value: [ 250 ]
            }, this.buffData[2] = {
                buffType: ue.changeSpeedScale,
                value: [ .15 ]
            }, this.buffData[3] = {
                buffType: ue.changeState,
                value: [ 8, 2, 1 ]
            }, this.effectName = "3dres/effect/e_kaijn3b.lh", this.effectObjHeightType = 1, 
            this.isEndRestore = !0;
        }
    }
    class xa extends Ve {
        GetNewInstance() {
            return new xa();
        }
        constructor() {
            super(), this.id = 2032, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .1 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Ta extends Ve {
        GetNewInstance() {
            return new Ta();
        }
        constructor() {
            super(), this.id = 2033, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .04 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Ua extends Ve {
        GetNewInstance() {
            return new Ua();
        }
        constructor() {
            super(), this.id = 2034, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 80 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class La extends Ve {
        GetNewInstance() {
            return new La();
        }
        constructor() {
            super(), this.id = 2035, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 100 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Na extends Ve {
        GetNewInstance() {
            return new Na();
        }
        constructor() {
            super(), this.id = 2036, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 120 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Ma extends Ve {
        GetNewInstance() {
            return new Ma();
        }
        constructor() {
            super(), this.id = 2037, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 140 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Aa extends Ve {
        GetNewInstance() {
            return new Aa();
        }
        constructor() {
            super(), this.id = 2038, this.time = 100, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 160 ]
            }, this.effectName = "3dres/effect/e_huixue.lh";
        }
    }
    class Oa extends Ve {
        GetNewInstance() {
            return new Oa();
        }
        constructor() {
            super(), this.id = 2039, this.time = 500, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 1 ]
            }, this.effectName = "3dres/effect/e_xuanyun.lh", this.effectObjHeightType = 2, 
            this.isEndRestore = !0;
        }
    }
    class Ea extends Ve {
        GetNewInstance() {
            return new Ea();
        }
        constructor() {
            super(), this.id = 2040, this.time = 2100, this.buffData[0] = {
                buffType: ue.changeState,
                value: [ 6 ]
            }, this.isEndRestore = !0;
        }
    }
    class Ga extends Ve {
        GetNewInstance() {
            return new Ga();
        }
        constructor() {
            super(), this.id = 2041, this.time = 2100, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .3 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.subID = 54, this.subLv = 2;
        }
    }
    class Ra extends Ve {
        GetNewInstance() {
            return new Ra();
        }
        constructor() {
            super(), this.id = 2042, this.time = 2100, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.effectName = "3dres/effect/e_jiansu.lh", 
            this.subID = 51, this.subLv = 2;
        }
    }
    class Ba extends Ve {
        GetNewInstance() {
            return new Ba();
        }
        constructor() {
            super(), this.id = 11010, this.time = 9999999, this.buffData[0] = {
                buffType: ue.changeSpeed,
                value: [ .3 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0, this.subID = 1, 
            this.subLv = 1;
        }
    }
    class Ha extends Ve {
        GetNewInstance() {
            return new Ha();
        }
        constructor() {
            super(), this.id = 11021, this.time = 9999999, this.buffData[0] = {
                buffType: ue.changeSpeed,
                value: [ .6 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0, this.subID = 1, 
            this.subLv = 2;
        }
    }
    class Fa extends Ve {
        GetNewInstance() {
            return new Fa();
        }
        constructor() {
            super(), this.id = 11030, this.time = 9999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .15 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Va extends Ve {
        GetNewInstance() {
            return new Va();
        }
        constructor() {
            super(), this.id = 11031, this.time = 9999999, this.buffData[0] = {
                buffType: ue.changeSpeed,
                value: [ .6 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0, this.subID = 1, 
            this.subLv = 2;
        }
    }
    class ja extends Ve {
        GetNewInstance() {
            return new ja();
        }
        constructor() {
            super(), this.id = 11040, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .15 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Wa extends Ve {
        GetNewInstance() {
            return new Wa();
        }
        constructor() {
            super(), this.id = 11041, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSpeed,
                value: [ .6 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0, this.subID = 1, 
            this.subLv = 2;
        }
    }
    class Xa extends Ve {
        GetNewInstance() {
            return new Xa();
        }
        constructor() {
            super(), this.id = 12010, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeHpMax,
                value: [ 300 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Ka extends Ve {
        GetNewInstance() {
            return new Ka();
        }
        constructor() {
            super(), this.id = 12020, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 90 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class qa extends Ve {
        GetNewInstance() {
            return new qa();
        }
        constructor() {
            super(), this.id = 12030, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagDef,
                value: [ 90 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class za extends Ve {
        GetNewInstance() {
            return new za();
        }
        constructor() {
            super(), this.id = 12040, this.time = 99999999, this.spaceTime = 5e3, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 30 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Ya extends Ve {
        GetNewInstance() {
            return new Ya();
        }
        constructor() {
            super(), this.id = 12110, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeHpMax,
                value: [ 1e3 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Ja extends Ve {
        GetNewInstance() {
            return new Ja();
        }
        constructor() {
            super(), this.id = 12120, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 210 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Qa extends Ve {
        GetNewInstance() {
            return new Qa();
        }
        constructor() {
            super(), this.id = 12121, this.time = 99999999, this.spaceTime = 5e3, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 50 ]
            }, this.isEndRestore = !1, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Za extends Ve {
        GetNewInstance() {
            return new Za();
        }
        constructor() {
            super(), this.id = 12130, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagDef,
                value: [ 120 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 700 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class $a extends Ve {
        GetNewInstance() {
            return new $a();
        }
        constructor() {
            super(), this.id = 12131, this.time = 999999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .1 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class eo extends Ve {
        GetNewInstance() {
            return new eo();
        }
        constructor() {
            super(), this.id = 12132, this.time = 9999999999, this.spaceTime = 5e3, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 50 ]
            }, this.isEndRestore = !1, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class to extends Ve {
        GetNewInstance() {
            return new to();
        }
        constructor() {
            super(), this.id = 12140, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 110 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 400 ]
            }, this.buffData[2] = {
                buffType: ue.changeSkillCD,
                value: [ .1 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class io extends Ve {
        GetNewInstance() {
            return new io();
        }
        constructor() {
            super(), this.id = 12150, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 210 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class so extends Ve {
        GetNewInstance() {
            return new so();
        }
        constructor() {
            super(), this.id = 12510, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeHpMax,
                value: [ 2500 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class no extends Ve {
        GetNewInstance() {
            return new no();
        }
        constructor() {
            super(), this.id = 12511, this.time = 99999999, this.spaceTime = 5e3, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 200 ]
            }, this.isEndRestore = !1, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class ao extends Ve {
        GetNewInstance() {
            return new ao();
        }
        constructor() {
            super(), this.id = 12520, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 270 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 1e3 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class oo extends Ve {
        GetNewInstance() {
            return new oo();
        }
        constructor() {
            super(), this.id = 12521, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeIgnorePhyDef,
                value: [ 30 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class lo extends Ve {
        GetNewInstance() {
            return new lo();
        }
        constructor() {
            super(), this.id = 12530, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyDef,
                value: [ 360 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 500 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class ho extends Ve {
        GetNewInstance() {
            return new ho();
        }
        constructor() {
            super(), this.id = 12532, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .2 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ro extends Ve {
        GetNewInstance() {
            return new ro();
        }
        constructor() {
            super(), this.id = 12540, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagDef,
                value: [ 360 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 1e3 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class co extends Ve {
        GetNewInstance() {
            return new co();
        }
        constructor() {
            super(), this.id = 12541, this.time = 99999999, this.spaceTime = 5e3, this.buffData[0] = {
                buffType: ue.changeHp,
                value: [ 100 ]
            }, this.isEndRestore = !1, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class uo extends Ve {
        GetNewInstance() {
            return new uo();
        }
        constructor() {
            super(), this.id = 12550, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeHpMax,
                value: [ 900 ]
            }, this.buffData[1] = {
                buffType: ue.changePhyDef,
                value: [ 220 ]
            }, this.buffData[2] = {
                buffType: ue.changePhyAtk,
                value: [ 30 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class po extends Ve {
        GetNewInstance() {
            return new po();
        }
        constructor() {
            super(), this.id = 13010, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 40 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class mo extends Ve {
        GetNewInstance() {
            return new mo();
        }
        constructor() {
            super(), this.id = 13020, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 80 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class go extends Ve {
        GetNewInstance() {
            return new go();
        }
        constructor() {
            super(), this.id = 13030, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .08 ]
            }, this.buffData[1] = {
                buffType: ue.changeMagAtk,
                value: [ 20 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class fo extends Ve {
        GetNewInstance() {
            return new fo();
        }
        constructor() {
            super(), this.id = 13110, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 80 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Io extends Ve {
        GetNewInstance() {
            return new Io();
        }
        constructor() {
            super(), this.id = 13111, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .15 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class vo extends Ve {
        GetNewInstance() {
            return new vo();
        }
        constructor() {
            super(), this.id = 13120, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 120 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class _o extends Ve {
        GetNewInstance() {
            return new _o();
        }
        constructor() {
            super(), this.id = 13130, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 100 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class yo extends Ve {
        GetNewInstance() {
            return new yo();
        }
        constructor() {
            super(), this.id = 13131, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePenetrateDefMag,
                value: [ .15 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class So extends Ve {
        GetNewInstance() {
            return new So();
        }
        constructor() {
            super(), this.id = 13140, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 75 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class wo extends Ve {
        GetNewInstance() {
            return new wo();
        }
        constructor() {
            super(), this.id = 13141, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagRecoverHp,
                value: [ .2 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Do extends Ve {
        GetNewInstance() {
            return new Do();
        }
        constructor() {
            super(), this.id = 13150, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 75 ]
            }, this.buffData[1] = {
                buffType: ue.changeAtkSpeed,
                value: [ .15 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class ko extends Ve {
        GetNewInstance() {
            return new ko();
        }
        constructor() {
            super(), this.id = 13510, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 400 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Co extends Ve {
        GetNewInstance() {
            return new Co();
        }
        constructor() {
            super(), this.id = 13511, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeHpMax,
                value: [ 1600 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class bo extends Ve {
        GetNewInstance() {
            return new bo();
        }
        constructor() {
            super(), this.id = 13520, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 180 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 800 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Po extends Ve {
        GetNewInstance() {
            return new Po();
        }
        constructor() {
            super(), this.id = 13521, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .1 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class xo extends Ve {
        GetNewInstance() {
            return new xo();
        }
        constructor() {
            super(), this.id = 13522, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagRecoverHp,
                value: [ .25 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class To extends Ve {
        GetNewInstance() {
            return new To();
        }
        constructor() {
            super(), this.id = 13530, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 240 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Uo extends Ve {
        GetNewInstance() {
            return new Uo();
        }
        constructor() {
            super(), this.id = 13531, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePenetrateDefMag,
                value: [ .45 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Lo extends Ve {
        GetNewInstance() {
            return new Lo();
        }
        constructor() {
            super(), this.id = 13540, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 240 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class No extends Ve {
        GetNewInstance() {
            return new No();
        }
        constructor() {
            super(), this.id = 13550, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 180 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 1e3 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Mo extends Ve {
        GetNewInstance() {
            return new Mo();
        }
        constructor() {
            super(), this.id = 13560, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtk,
                value: [ 140 ]
            }, this.buffData[1] = {
                buffType: ue.changeAtkSpeed,
                value: [ .2 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Ao extends Ve {
        GetNewInstance() {
            return new Ao();
        }
        constructor() {
            super(), this.id = 13561, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 1, 0, 135610 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Oo extends Ve {
        GetNewInstance() {
            return new Oo();
        }
        constructor() {
            super(), this.id = 135610, this.time = 5e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .1 ]
            }, this.addMaxCount = 2, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Eo extends Ve {
        GetNewInstance() {
            return new Eo();
        }
        constructor() {
            super(), this.id = 14010, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 20 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Go extends Ve {
        GetNewInstance() {
            return new Go();
        }
        constructor() {
            super(), this.id = 14020, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .1 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Ro extends Ve {
        GetNewInstance() {
            return new Ro();
        }
        constructor() {
            super(), this.id = 14030, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSuperAtk,
                value: [ .08 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Bo extends Ve {
        GetNewInstance() {
            return new Bo();
        }
        constructor() {
            super(), this.id = 14110, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 10 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Ho extends Ve {
        GetNewInstance() {
            return new Ho();
        }
        constructor() {
            super(), this.id = 14111, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyRecoverHp,
                value: [ .08 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Fo extends Ve {
        GetNewInstance() {
            return new Fo();
        }
        constructor() {
            super(), this.id = 14120, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 80 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Vo extends Ve {
        GetNewInstance() {
            return new Vo();
        }
        constructor() {
            super(), this.id = 14130, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSuperAtk,
                value: [ .15 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class jo extends Ve {
        GetNewInstance() {
            return new jo();
        }
        constructor() {
            super(), this.id = 14140, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .15 ]
            }, this.buffData[1] = {
                buffType: ue.changeSuperAtk,
                value: [ .1 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class Wo extends Ve {
        GetNewInstance() {
            return new Wo();
        }
        constructor() {
            super(), this.id = 14141, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .05 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Xo extends Ve {
        GetNewInstance() {
            return new Xo();
        }
        constructor() {
            super(), this.id = 14150, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 45 ]
            }, this.buffData[1] = {
                buffType: ue.changeSkillCD,
                value: [ .1 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class Ko extends Ve {
        GetNewInstance() {
            return new Ko();
        }
        constructor() {
            super(), this.id = 14151, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeIgnorePhyDef,
                value: [ 60 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class qo extends Ve {
        GetNewInstance() {
            return new qo();
        }
        constructor() {
            super(), this.id = 14160, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 40 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 300 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class zo extends Ve {
        GetNewInstance() {
            return new zo();
        }
        constructor() {
            super(), this.id = 14510, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 110 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Yo extends Ve {
        GetNewInstance() {
            return new Yo();
        }
        constructor() {
            super(), this.id = 14511, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSuperAtk,
                value: [ .25 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class Jo extends Ve {
        GetNewInstance() {
            return new Jo();
        }
        constructor() {
            super(), this.id = 14512, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changesuperAtkEffect,
                value: [ .4 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Qo extends Ve {
        GetNewInstance() {
            return new Qo();
        }
        constructor() {
            super(), this.id = 14520, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 180 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class Zo extends Ve {
        GetNewInstance() {
            return new Zo();
        }
        constructor() {
            super(), this.id = 14530, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ .4 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class $o extends Ve {
        GetNewInstance() {
            return new $o();
        }
        constructor() {
            super(), this.id = 14531, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSuperAtk,
                value: [ .2 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class el extends Ve {
        GetNewInstance() {
            return new el();
        }
        constructor() {
            super(), this.id = 14540, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 80 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class tl extends Ve {
        GetNewInstance() {
            return new tl();
        }
        constructor() {
            super(), this.id = 14541, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .1 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class il extends Ve {
        GetNewInstance() {
            return new il();
        }
        constructor() {
            super(), this.id = 14542, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePenetrateDefPhy,
                value: [ .4 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class sl extends Ve {
        GetNewInstance() {
            return new sl();
        }
        constructor() {
            super(), this.id = 14550, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 85 ]
            }, this.buffData[1] = {
                buffType: ue.changeHpMax,
                value: [ 500 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class nl extends Ve {
        GetNewInstance() {
            return new nl();
        }
        constructor() {
            super(), this.id = 14552, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeSkillCD,
                value: [ .15 ]
            }, this.isEndRestore = !0, this.isCover = !1, this.isIgnoreDead = !0;
        }
    }
    class al extends Ve {
        GetNewInstance() {
            return new al();
        }
        constructor() {
            super(), this.id = 14553, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeIgnorePhyDef,
                value: [ 150 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ol extends Ve {
        GetNewInstance() {
            return new ol();
        }
        constructor() {
            super(), this.id = 14560, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyAtk,
                value: [ 100 ]
            }, this.isEndRestore = !0, this.isIgnoreDead = !0, this.isCover = !1;
        }
    }
    class ll extends Ve {
        GetNewInstance() {
            return new ll();
        }
        constructor() {
            super(), this.id = 14561, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changePhyRecoverHp,
                value: [ .25 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class hl extends Ve {
        GetNewInstance() {
            return new hl();
        }
        constructor() {
            super(), this.id = 11020, this.time = 9999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 5, -.1 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class rl extends Ve {
        GetNewInstance() {
            return new rl();
        }
        constructor() {
            super(), this.id = 12512, this.time = 99999999, this.spaceTime = 1e3, this.buffData[0] = {
                buffType: ue.changeHpScale,
                value: [ .03 ]
            }, this.fightingExcute = !1, this.isEndRestore = !1, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class cl extends Ve {
        GetNewInstance() {
            return new cl();
        }
        constructor() {
            super(), this.id = 12531, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 3, 125310 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class dl extends Ve {
        GetNewInstance() {
            return new dl();
        }
        constructor() {
            super(), this.id = 125310, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeAtkSpeed,
                value: [ -.3 ]
            }, this.isEndRestore = !0, this.subID = 53, this.subLv = 2, this.isCover = !0;
        }
    }
    class ul extends Ve {
        GetNewInstance() {
            return new ul();
        }
        constructor() {
            super(), this.id = 12543, this.time = 99999999, this.spaceTime = 5e3, this.isExeRestore = !0, 
            this.buffData[0] = {
                buffType: ue.changeTempHp,
                value: [ 1300 ]
            }, this.fightingExcute = !1, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class pl extends Ve {
        GetNewInstance() {
            return new pl();
        }
        constructor() {
            super(), this.id = 12542, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 3, 125420 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class ml extends Ve {
        GetNewInstance() {
            return new ml();
        }
        constructor() {
            super(), this.id = 125420, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.subID = 51, 
            this.subLv = 2, this.isCover = !0;
        }
    }
    class gl extends Ve {
        GetNewInstance() {
            return new gl();
        }
        constructor() {
            super(), this.id = 12551, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 3, 0, 125510 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class fl extends Ve {
        GetNewInstance() {
            return new fl();
        }
        constructor() {
            super(), this.id = 125510, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ .02 ]
            }, this.buffData[1] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, 1, .02 ]
            }, this.addMaxCount = 5, this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class Il extends Ve {
        GetNewInstance() {
            return new Il();
        }
        constructor() {
            super(), this.id = 13541, this.time = 99999999, this.buffData[0] = {
                buffType: ue.changeMagAtkScale,
                value: [ .3 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class vl extends Ve {
        GetNewInstance() {
            return new vl();
        }
        constructor() {
            super(), this.id = 13551, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 2, 135510 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class _l extends Ve {
        GetNewInstance() {
            return new _l();
        }
        constructor() {
            super(), this.id = 135510, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.2 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.isCover = !0;
        }
    }
    class yl extends Ve {
        GetNewInstance() {
            return new yl();
        }
        constructor() {
            super(), this.id = 14521, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 6, .5, .2 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Sl extends Ve {
        GetNewInstance() {
            return new Sl();
        }
        constructor() {
            super(), this.id = 14532, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 4, 50 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class wl extends Ve {
        GetNewInstance() {
            return new wl();
        }
        constructor() {
            super(), this.id = 13151, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 4, 30 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class Dl extends Ve {
        GetNewInstance() {
            return new Dl();
        }
        constructor() {
            super(), this.id = 14551, this.time = 99999999, this.buffData[0] = {
                buffType: ue.setSpecialSkill,
                value: [ 1, 145510 ]
            }, this.isEndRestore = !0, this.isCover = !0, this.isIgnoreDead = !0;
        }
    }
    class kl extends Ve {
        GetNewInstance() {
            return new kl();
        }
        constructor() {
            super(), this.id = 145510, this.time = 3e3, this.buffData[0] = {
                buffType: ue.changeSpeedScale,
                value: [ -.3 ]
            }, this.effectName = "3dres/effect/e_jiansu.lh", this.isEndRestore = !0, this.rateExcute = 1, 
            this.subID = 51, this.subLv = 2, this.isCover = !0;
        }
    }
    class Cl {
        constructor() {
            this.dicBuff = {};
            var e = [ new va(), new _a(), new ya(), new Sa(), new wa(), new Da(), new ka(), new xa(), new Ca(), new fa(), new Ia(), new ba(), new Pa(), new Ta(), new Ua(), new La(), new Na(), new Ma(), new Aa(), new Oa(), new Ea(), new Ga(), new ua(), new pa(), new ma(), new ga(), new We(), new Ke(), new qe(), new ze(), new Ye(), new Je(), new Qe(), new Ze(), new $e(), new et(), new tt(), new Ht(), new it(), new st(), new nt(), new at(), new ot(), new lt(), new ht(), new rt(), new ct(), new dt(), new ut(), new pt(), new mt(), new gt(), new ft(), new It(), new vt(), new _t(), new yt(), new St(), new wt(), new Dt(), new kt(), new Ct(), new bt(), new ts(), new is(), new ss(), new ws(), new Ds(), new ks(), new Cs(), new bs(), new vn(), new _n(), new yn(), new Sn(), new wn(), new Dn(), new ns(), new Is(), new vs(), new _s(), new ys(), new Ss(), new as(), new os(), new ls(), new hs(), new rs(), new Xe(), new Ps(), new xs(), new Ls(), new Hs(), new Fs(), new js(), new Ws(), new Xs(), new Ks(), new qs(), new Vs(), new Js(), new Qs(), new $s(), new en(), new tn(), new sn(), new nn(), new ln(), new hn(), new rn(), new cn(), new dn(), new In(), new kn(), new Cn(), new bn(), new Pn(), new xn(), new Tn(), new Nn(), new je(), new Ba(), new hl(), new Fa(), new ja(), new Xa(), new Ka(), new qa(), new za(), new Ya(), new Ja(), new Za(), new to(), new so(), new ao(), new lo(), new ro(), new uo(), new po(), new mo(), new go(), new fo(), new vo(), new _o(), new So(), new ko(), new bo(), new To(), new Lo(), new No(), new Eo(), new Go(), new Ro(), new Bo(), new Fo(), new Vo(), new jo(), new zo(), new Qo(), new Zo(), new el(), new sl(), new al(), new ol(), new io(), new ul(), new Wo(), new Ko(), new Xo(), new qo(), new wl(), new Do(), new Mo(), new Ao(), new Oo(), new Ha(), new Va(), new Wa(), new Qa(), new no(), new co(), new rl(), new oo(), new cl(), new $a(), new eo(), new pl(), new ho(), new Io(), new yo(), new wo(), new Po(), new nl(), new xo(), new Uo(), new Il(), new vl(), new Ho(), new Yo(), new Jo(), new yl(), new $o(), new Sl(), new tl(), new il(), new Dl(), new Co(), new gl(), new fl(), new _l(), new kl(), new ml(), new dl(), new ll(), new cs(), new ds(), new us(), new ps(), new ms(), new gs(), new fs(), new Un(), new Ln(), new Ts(), new Us(), new Ns(), new Ms(), new As(), new Os(), new Es(), new Gs(), new Rs(), new Bs(), new zs(), new Ys(), new Zs(), new an(), new on(), new un(), new pn(), new gn(), new mn(), new fn(), new Rn(), new Gn(), new En(), new On(), new An(), new Mn(), new Xn(), new Bn(), new Hn(), new Fn(), new Vn(), new jn(), new Wn(), new Kn(), new qn(), new zn(), new Yn(), new Ra(), new Jn(), new Qn(), new Ft(), new Vt(), new jt(), new Wt(), new Xt(), new Kt(), new qt(), new zt(), new Qt(), new Zt(), new $t(), new ei(), new ti(), new ii(), new si(), new ni(), new ai(), new oi(), new li(), new hi(), new ri(), new ci(), new di(), new ui(), new pi(), new mi(), new gi(), new fi(), new Ii(), new vi(), new _i(), new yi(), new Si(), new wi(), new Di(), new ki(), new Ci(), new bi(), new Pi(), new xi(), new Ti(), new Ui(), new Li(), new Ni(), new Mi(), new Pt(), new Yt(), new Jt(), new Ai(), new Oi(), new Ei(), new Gi(), new Ri(), new Bi(), new Hi(), new Fi(), new Vi(), new ji(), new Wi(), new Xi(), new xt(), new Tt(), new es(), new $i(), new Zi(), new Qi(), new Ji(), new Yi(), new zi(), new qi(), new Ki(), new Ut(), new Lt(), new Nt(), new Mt(), new At(), new Ot(), new Et(), new Gt(), new Rt(), new Bt(), new da(), new Zn(), new $n(), new ea(), new ta(), new ia(), new sa(), new na(), new aa(), new oa(), new la(), new ha(), new ra(), new ca() ];
            for (let t = 0; t < e.length; t++) this.addBuffBase(e[t]);
        }
        static get Instance() {
            return null == this.instance && (Cl.instance = new Cl()), Cl.instance;
        }
        addBuffBase(e) {
            this.dicBuff[e.id] = e;
        }
        getBuffBase(e) {
            var t = this.dicBuff[e];
            return null != t ? t.GetNewInstance() : null;
        }
    }
    Cl.instance = null;
    class bl {
        constructor() {
            this.dicBuff = {};
        }
        static get Instance() {
            return null == this.instance && (bl.instance = new bl()), bl.instance;
        }
        init() {
            f.Instance.frameTimer.frameLoop(1, this, this.UpdateState);
        }
        clear() {
            for (var e in f.Instance.frameTimer.clear(this, this.UpdateState), this.dicBuff) {
                for (var t = this.dicBuff[e], i = 0; i < t.length; i++) {
                    t[i].end(!0);
                }
                delete this.dicBuff[e];
            }
        }
        UpdateState() {
            for (var e = Re.Instance.dicPlayerInstance, t = e.length, i = f.renderTimeRatio, s = 0; s < t; s++) {
                var n = e[s], a = this.dicBuff[n];
                if (null != a) {
                    for (var o = a.length, l = 0; l < o; l++) {
                        var h = a[l];
                        null == h || null == h.owner || h.owner.isDead && !h.isIgnoreDead ? (h && h.end(), 
                        a.splice(l, 1), l--, o--) : (h.curTime += i, h.curTime < h.time ? 1 == h.executeCount ? h.curTime >= (0 == h.spaceTime ? h.time : h.spaceTime) * h.spaceNum && (h.spaceNum++, 
                        h.executeOnce()) : h.executeCount > 1 && h.executeCount <= h.addCount && (h.executeOnce(), 
                        h.end(), a.splice(l, 1), l--, o--) : (h.end(), a.splice(l, 1), l--, o--));
                    }
                    this.dicBuff[n] = a;
                }
            }
        }
        AddBuff(e, t, i, s) {
            var n = Cl.Instance.getBuffBase(i);
            if (!(null == n || n.rateExcute < 1 && u.random() > n.rateExcute) && (t.unitType != me.BUILD || n.isEnableAddBuild)) {
                var a = n.GetNewInstance();
                a.createUnit = e, a.createSkill = s, a.owner = a.isAddOwner ? e : t, a.addCount = 1;
                var o = this.dicBuff[a.owner.instanceID];
                if (null == o) o = [], a.spaceNum++, a.executeOnce(), o.push(a); else {
                    if (a.isCover) for (var l = 0; l < o.length; l++) {
                        var h = o[l].id == a.id;
                        if (!h && (h = 0 != a.subID && 0 != o[l].subID && o[l].subID == a.subID) && a.subLv < o[l].subLv) return;
                        if (h) {
                            a.addCount = o[l].addCount + 1, a.addCount > a.addMaxCount && (a.addCount = a.addMaxCount), 
                            o[l].end(!0), o.splice(l, 1);
                            break;
                        }
                    }
                    a.spaceNum++, a.executeOnce(), o.push(a);
                }
                this.dicBuff[a.owner.instanceID] = o;
            }
        }
        removeAllBuff(e) {
            var t = this.dicBuff[e.instanceID];
            if (null != t) for (var i = 0; i < t.length; i++) t[i].end(!0), t.splice(i, 1), 
            i--;
            delete this.dicBuff[e.instanceID];
        }
        getAllBuff(e) {
            return this.dicBuff[e];
        }
        removeBuff(e, t) {
            var i = this.dicBuff[e.instanceID];
            if (null != i) for (var s = 0; s < i.length; s++) if (i[s].id == t) {
                i[s].end(), i.splice(s, 1);
                break;
            }
        }
        getBuff(e, t) {
            var i = this.dicBuff[e.instanceID];
            if (null != i) for (var s = 0; s < i.length; s++) if (i[s].id == t) return i[s];
            return null;
        }
    }
    bl.instance = null;
    class Pl {
        constructor() {
            this.sellCoin = 0, this.buyCoin = 0;
        }
        GetNewInstance() {
            return Pl.cloneTo(this);
        }
        static cloneTo(e) {
            var t = new Pl();
            if (t.id = e.id, t.instanceId = Pl.InstanceID++, t.lv = e.lv, t.info = e.info, t.simpleInfo = e.simpleInfo, 
            t.name = e.name, t.icon = e.icon, t.sellCoin = e.sellCoin, t.buyCoin = e.buyCoin, 
            t.mergerOther = [], e.mergerOther) for (let i = 0; i < e.mergerOther.length; i++) t.mergerOther.push(e.mergerOther[i]);
            if (t.mergeSelf = [], e.mergeSelf) for (let i = 0; i < e.mergeSelf.length; i++) t.mergeSelf.push(e.mergeSelf[i]);
            if (t.buffID = [], e.buffID) for (let i = 0; i < e.buffID.length; i++) t.buffID.push(e.buffID[i]);
            return t;
        }
        onEquip(e) {
            if (this.owner = e, null != this.buffID && this.buffID.length > 0) for (var t = 0; t < this.buffID.length; t++) bl.Instance.AddBuff(this.owner, this.owner, this.buffID[t]);
        }
        offEquip() {
            if (null != this.buffID && this.buffID.length > 0) for (var e = 0; e < this.buffID.length; e++) bl.Instance.removeBuff(this.owner, this.buffID[e]);
            this.owner = null;
        }
    }
    Pl.InstanceID = 1;
    class xl {
        constructor() {
            this.isLoadComplete = !1, this.dicEquipModel = {};
        }
        static get Instance() {
            return null == this.instance && (xl.instance = new xl()), xl.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/equip.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            if (null != e) {
                this.isLoadComplete = !0;
                for (let t = 0; t < e.length; t++) {
                    const i = e[t];
                    this.dicEquipModel[i.id] = Pl.cloneTo(i);
                }
            } else console.log("config/equip.json load fail!");
            this.callBack && this.callBack();
        }
        getEquip(e) {
            return this.dicEquipModel[e];
        }
    }
    xl.instance = null;
    class Tl {
        constructor() {
            this.isLoadComplete = !1, this.listType = [], this.heroRecommend = {};
        }
        static get Instance() {
            return null == this.instance && (Tl.instance = new Tl()), Tl.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/shop.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            if (null != e) {
                this.isLoadComplete = !0, this.listType = e.listType;
                for (let t = 0; t < e.heroDefault.length; t++) {
                    const i = e.heroDefault[t];
                    this.heroRecommend[i.heroId] = i;
                }
            } else console.log("config/sound.json load fail!");
            this.callBack && this.callBack();
        }
        getHeroEq(e) {
            var t = this.heroRecommend[e];
            if (null == t && e >= 1e3) {
                var i = Q.Instance.getBaseID(e);
                t = this.heroRecommend[i], this.heroRecommend[e] = t;
            }
            return t;
        }
    }
    Tl.instance = null;
    class Ul {
        constructor() {
            this.isLoadComplete = !1, this.bgSound_main = "", this.bgSound_fight = "", this.sound_unitdead = "", 
            this.sound_sellEquip = "", this.sound_buyEquip = "";
        }
        static get Instance() {
            return null == this.instance && (Ul.instance = new Ul()), Ul.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/sound.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.bgSound_main = e.bgSound_main ? e.bgSound_main : "", 
            this.bgSound_fight = e.bgSound_fight ? e.bgSound_fight : "", this.sound_unitdead = e.sound_unitdead ? e.sound_unitdead : "", 
            this.sound_sellEquip = e.sound_sellEquip ? e.sound_sellEquip : "", this.sound_buyEquip = e.sound_buyEquip ? e.sound_buyEquip : "") : console.log("config/sound.json load fail!"), 
            this.callBack && this.callBack();
        }
    }
    Ul.instance = null;
    class Ll {
        constructor() {
            this.curBgUrl = "";
        }
        static get Instance() {
            return null == this.instance && (Ll.instance = new Ll()), Ll.instance;
        }
        playBgMusic(e) {
            (s.isTTPlatform || s.isVivoPlatform) && (e = e.replace("sound/", "rescdn_/sound_1/")), 
            this.curBgUrl = e, this.bgSound = Laya.SoundManager.playMusic(e, 0), (s.isTTPlatform || s.isOppoPlatform || s.isVivoPlatform) && Laya.timer.once(1e3, this, this.checkBgMusicPlay);
        }
        checkBgMusicPlay() {
            null != this.bgSound && 0 != this.bgSound.position || (this.bgSound = Laya.SoundManager.playMusic(this.curBgUrl, 0), 
            Laya.timer.once(1e3, this, this.checkBgMusicPlay));
        }
        playSound(e, t) {
            return s.isVivoPlatform && (e = e.replace("sound/", "rescdn_/sound_1/")), Laya.SoundManager.playSound(e, t);
        }
    }
    Ll.instance = null;
    class Nl {
        constructor() {
            this.selfAttrChange = {}, this.selfAttrChange[ue.changeHpMax] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changeSpeed] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changePhyAtk] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changeMagAtk] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changePhyRecoverHp] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changeMagRecoverHp] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changeAtkSpeed] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changeSkillCD] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changeSuperAtk] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changesuperAtkEffect] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changePhyDef] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changeMagDef] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changePenetrateDefPhy] = {
                oldV: 0,
                newV: 0
            }, this.selfAttrChange[ue.changePenetrateDefMag] = {
                oldV: 0,
                newV: 0
            };
        }
        static get Instance() {
            return null == this.instance && (Nl.instance = new Nl()), Nl.instance;
        }
        init() {
            Pl.InstanceID = 0;
        }
        sell(e, t) {
            for (var i = 0; i < e.equipList.length; i++) {
                if ((o = e.equipList[i]).id == t) {
                    o.offEquip(), e.equipList.splice(i, 1), i--;
                    var s = xl.Instance.getEquip(t), n = this.mathSellCoin(s);
                    e.coin += n;
                    break;
                }
            }
            for (i = 0; i < e.equipList.length; i++) {
                var o;
                (o = e.equipList[i]).offEquip(), o.onEquip(e);
            }
            e.isSelf && (d.Instance.Send(a.UIFightShop_Update), d.Instance.Send(a.UIFightMainModel_WaitBuy, e.coin), 
            f.Instance.isSpeedPlay || "" == Ul.Instance.sound_sellEquip || Ll.Instance.playSound(q.getSoundType(Ul.Instance.sound_sellEquip), 1));
        }
        mathBuyCoin(e, t, i) {
            var s = 0;
            if (null != t) {
                if (null == i) {
                    i = [];
                    for (var n = 0; n < e.equipList.length; n++) i.push(e.equipList[n].id);
                }
                if (null == t.mergeSelf || 0 == t.mergeSelf.length) s = t.buyCoin; else for (var a = 0; a < t.mergeSelf.length; a++) {
                    for (var o = t.mergeSelf[a], l = !1, h = 0; h < i.length; h++) if (o == i[h]) {
                        l = !0, delete i[h];
                        break;
                    }
                    l || (s += this.mathBuyCoin(e, xl.Instance.getEquip(o), i));
                }
            }
            return s;
        }
        mathSellCoin(e) {
            var t = 0;
            if (null != e) if (null == e.mergeSelf || 0 == e.mergeSelf.length) t = e.sellCoin; else for (var i = 0; i < e.mergeSelf.length; i++) {
                var s = e.mergeSelf[i];
                t += this.mathSellCoin(xl.Instance.getEquip(s));
            }
            return t;
        }
        buy(e, t) {
            var i, n = xl.Instance.getEquip(t), o = this.mathBuyCoin(e, n);
            if (e.isSelf && (this.selfAttrChange[ue.changeHpMax].oldV = e.hpMax, this.selfAttrChange[ue.changeSpeed].oldV = Math.floor(e.moveBaseSpeed * e.moveSpeedScale * 100), 
            this.selfAttrChange[ue.changePhyAtk].oldV = e.phyAtk, this.selfAttrChange[ue.changeMagAtk].oldV = e.magAtk, 
            this.selfAttrChange[ue.changePhyRecoverHp].oldV = Math.floor(100 * e.phyAtkRecoverHP) + "%", 
            this.selfAttrChange[ue.changeMagRecoverHp].oldV = Math.floor(100 * e.magAtkRecoverHP) + "%", 
            this.selfAttrChange[ue.changeAtkSpeed].oldV = Math.floor(100 * (e.atkSpeed > 1.5 ? 1.5 : e.atkSpeed)) + "%", 
            this.selfAttrChange[ue.changeSkillCD].oldV = Math.floor(100 * (e.skillCD - 1 > 1.4 ? 1.4 : e.skillCD)) + "%", 
            this.selfAttrChange[ue.changeSuperAtk].oldV = Math.floor(100 * e.superAtk) + "%", 
            this.selfAttrChange[ue.changesuperAtkEffect].oldV = Math.floor(100 * e.superAtkRatio) + "%", 
            this.selfAttrChange[ue.changePhyDef].oldV = e.phyDef, this.selfAttrChange[ue.changeMagDef].oldV = e.magDef, 
            this.selfAttrChange[ue.changePenetrateDefPhy].oldV = Math.floor(100 * e.penetratePhyDef) + "%", 
            this.selfAttrChange[ue.changePenetrateDefMag].oldV = Math.floor(100 * e.penetrateMagDef) + "%"), 
            null != n) {
                if (e.coin < o) return;
                if (null != n.mergeSelf && n.mergeSelf.length > 0) for (var l = 0; l < n.mergeSelf.length; l++) for (var h = n.mergeSelf[l], r = 0; r < e.equipList.length; r++) {
                    if ((I = e.equipList[r]).id == h) {
                        I.offEquip(), e.equipList.splice(r, 1), r--;
                        break;
                    }
                }
                var c = n.GetNewInstance(), u = null;
                if (null != c) {
                    var p = [];
                    this.getMergeList(e, c, null, null, p);
                    for (l = 0; l < p.length; l++) {
                        var m = p[l];
                        for (r = 0; r < e.equipList.length; r++) {
                            if ((I = e.equipList[r]).id == m) {
                                I.offEquip(), e.equipList.splice(r, 1), r--;
                                break;
                            }
                        }
                    }
                    c.onEquip(e), e.equipList.push(c), e.coin -= o, i = c;
                }
                var g = this.mergeEquipCheck(c);
                if (g) {
                    if (null != g.mergeSelf && g.mergeSelf.length > 0) for (l = 0; l < g.mergeSelf.length; l++) for (h = n.mergeSelf[l], 
                    r = 0; r < e.equipList.length; r++) {
                        var I;
                        if ((I = e.equipList[r]).id == h || I.id == c.id) {
                            I.offEquip(), e.equipList.splice(r, 1), r--;
                            break;
                        }
                    }
                    (u = g.GetNewInstance()).onEquip(e), e.equipList.push(u), i = u;
                }
                var v = e.equipList.length <= 6;
                if (e.equipList.length > 6) (n = e.equipList[e.equipList.length - 1]).offEquip(), 
                e.equipList.splice(e.equipList.length - 1, 1), e.coin += o;
                e.isSelf && (v && e.equipList.length > 0 && d.Instance.Send(a.UIFightShop_CheckBuyID, e.equipList[e.equipList.length - 1].id), 
                d.Instance.Send(a.UIFightShop_Update), d.Instance.Send(a.UIFightMainModel_WaitBuy, e.coin), 
                f.Instance.isSpeedPlay || "" == Ul.Instance.sound_buyEquip || Ll.Instance.playSound(q.getSoundType(Ul.Instance.sound_buyEquip), 1), 
                null == i || s.isGs || (this.selfAttrChange[ue.changeHpMax].newV = e.hpMax, this.selfAttrChange[ue.changeSpeed].newV = Math.floor(e.moveBaseSpeed * e.moveSpeedScale * 100), 
                this.selfAttrChange[ue.changePhyAtk].newV = e.phyAtk, this.selfAttrChange[ue.changeMagAtk].newV = e.magAtk, 
                this.selfAttrChange[ue.changePhyRecoverHp].newV = Math.floor(100 * e.phyAtkRecoverHP) + "%", 
                this.selfAttrChange[ue.changeMagRecoverHp].newV = Math.floor(100 * e.magAtkRecoverHP) + "%", 
                this.selfAttrChange[ue.changeAtkSpeed].newV = Math.floor(100 * (e.atkSpeed > 1.5 ? 1.5 : e.atkSpeed)) + "%", 
                this.selfAttrChange[ue.changeSkillCD].newV = Math.floor(100 * (e.skillCD - 1 > 1.4 ? 1.4 : e.skillCD)) + "%", 
                this.selfAttrChange[ue.changeSuperAtk].newV = Math.floor(100 * e.superAtk) + "%", 
                this.selfAttrChange[ue.changesuperAtkEffect].newV = Math.floor(100 * e.superAtkRatio) + "%", 
                this.selfAttrChange[ue.changePhyDef].newV = e.phyDef, this.selfAttrChange[ue.changeMagDef].newV = e.magDef, 
                this.selfAttrChange[ue.changePenetrateDefPhy].newV = Math.floor(100 * e.penetratePhyDef) + "%", 
                this.selfAttrChange[ue.changePenetrateDefMag].newV = Math.floor(100 * e.penetrateMagDef) + "%", 
                s.isWXPlatform && d.Instance.Send(a.UIBuyEqTips_WaitShow, i.name, this.selfAttrChange)));
            }
        }
        mergeEquipCheck(e) {
            if (null != e.mergerOther || null == e.owner) for (var t = 0; t < e.mergerOther.length; t++) {
                var i = xl.Instance.getEquip(e.mergerOther[t]);
                if (null != i && null != i.mergeSelf && i.mergeSelf.length > 0) {
                    for (var s = 0, n = [], a = 0; a < e.owner.equipList.length; a++) n.push(e.owner.equipList[a].id);
                    for (a = 0; a < i.mergeSelf.length; a++) {
                        for (var o = i.mergeSelf[a], l = !1, h = 0; h < n.length; h++) if (o == n[h]) {
                            l = !0, delete n[h];
                            break;
                        }
                        if (!l) break;
                        s++;
                    }
                    if (s == i.mergeSelf.length) return i;
                }
            }
            return null;
        }
        getAllMergeList(e, t) {
            if (null != e && null != e.mergeSelf && e.mergeSelf.length > 0) {
                null == t && (t = []);
                for (var i = 0; i < e.mergeSelf.length; i++) {
                    var s = e.mergeSelf[i];
                    -1 == t.indexOf(s) && t.push(s), this.getAllMergeList(xl.Instance.getEquip(s), t);
                }
            }
            return t;
        }
        getHeroNextBuy(e, t) {
            if (Y.curMapID != Y.mapID_sh) {
                var i = t || null;
                if (null == i) {
                    var s = Tl.Instance.getHeroEq(e.modelID);
                    if (null != s) for (var n = 0; n < 3 && null == i; n++) for (var a = 0 == n ? s.eqLv1 : 1 == n ? s.eqLv2 : s.eqLv3, o = 0; o < a.length; o++) {
                        var l = a[o], h = !1;
                        if (e.equipList) for (var r = 0; r < e.equipList.length; r++) if (e.equipList[r].id == l) {
                            h = !0;
                            break;
                        }
                        if (!h) {
                            i = xl.Instance.getEquip(l);
                            break;
                        }
                    }
                }
                if (null != i) {
                    var c = [];
                    if (e.equipList) for (r = 0; r < e.equipList.length; r++) c.push(e.equipList[r].id);
                    var d = [], u = this.getMergeList(e, i, null, null, d);
                    if (null == u) return i;
                    var p = 0, m = 0;
                    for (o = u.length - 1; o >= 0; o--) {
                        var g = u[o];
                        for (h = !1, n = 0; n < c.length; n++) if (g == c[n]) {
                            h = !0, g, delete c[n], delete u[o], o--;
                            break;
                        }
                        if (!h) {
                            var f = g, I = xl.Instance.getEquip(g), v = 0;
                            if (I.lv > 0) v = this.mathBuyCoin(e, I); else if (null != I.mergerOther && I.mergerOther.length > 0) {
                                f = I.mergerOther[0];
                                var _ = xl.Instance.getEquip(f);
                                v = this.mathBuyCoin(e, _);
                            }
                            0 != v && (v < m || 0 == m) && (m = v, p = f);
                        }
                    }
                    var y = xl.Instance.getEquip(p);
                    if (null != y && 0 != y.lv) if (e.equipList && e.equipList.length >= 6) if (d && d.length > 0) {
                        var S = this.mathBuyCoin(e, i);
                        e.coin < S && (i = null);
                    } else i = null; else i = y;
                }
                return i;
            }
        }
        getMergeList(e, t, i, s, n) {
            if (null != t && null != t.mergeSelf && t.mergeSelf.length > 0) {
                if (null == s && (s = []), null == i) {
                    i = [];
                    for (var a = 0; a < e.equipList.length; a++) i.push(e.equipList[a].id);
                }
                for (var o = 0; o < t.mergeSelf.length; o++) {
                    var l = t.mergeSelf[o], h = !1;
                    for (a = 0; a < i.length; a++) if (i[a] == l) {
                        n && n.push(l), i.splice(a, 1), a--, h = !0;
                        break;
                    }
                    h || (-1 == s.indexOf(l) && s.push(l), this.getMergeList(e, xl.Instance.getEquip(l), i, s, n));
                }
            }
            return s;
        }
    }
    Nl.instance = null;
    class Ml {}
    class Al {}
    class Ol {}
    class El {
        constructor() {
            this.isLoadComplete = !1, this.isFristBlood = !1, this.figthLoadTips = [], this.dropDataInstance = {};
        }
        static get Instance() {
            return null == this.instance && (El.instance = new El()), El.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/fightConfig.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.configData = e, this.fightData = e.fight, 
            this.bloodBarStyle = e.bloodBarStyle, this.fightKillTip = e.fightKillTip, this.figthLoadTips = e.figthLoadTips) : console.log("config/FightConfig.json load fail!"), 
            this.callBack && this.callBack();
        }
        initFight(e) {
            this.isFristBlood = !1;
            for (let t = 0; t < this.fightData.length; t++) {
                const i = this.fightData[t];
                if (i.fightID == e) {
                    this.curFightData = i;
                    break;
                }
            }
            if (null == this.curFightData && (this.curFightData = this.fightData[0]), this.dropDataInstance = {}, 
            this.curFightData && this.curFightData.dropData) for (let e = 0; e < this.curFightData.dropData.length; e++) {
                const n = this.curFightData.dropData[e];
                var t = 0, i = [];
                if (n) for (let e = 0; e < n.dropList.length; e++) {
                    const a = n.dropList[e];
                    var s = new Ml();
                    s.id = a.id, s.w = t + a.w, t += a.w, i.push(s);
                }
                this.dropDataInstance[1e5 * n.team + n.unitId] = i;
            }
            return this.curFightData;
        }
        getUnitDrop(e, t, i) {
            var s = 1e5 * t + e;
            if (this.dropDataInstance && this.dropDataInstance[s]) {
                var n = this.dropDataInstance[s];
                if (n && n.length > 0) {
                    var a = Math.floor(i * n[n.length - 1].w);
                    for (let e = 0; e < n.length; e++) {
                        const t = n[e];
                        if (a <= t.w) return t.id;
                    }
                }
            }
            return 0;
        }
        getBloodUP(e) {
            var t = "fight/bloodup1.png";
            if (null != this.bloodBarStyle) for (let i = 0; i < this.bloodBarStyle.length; i++) e >= this.bloodBarStyle[i].hp && (t = this.bloodBarStyle[i].style);
            return t;
        }
        getAIFightData(e) {
            var t = null;
            if (this.curFightData && null != this.curFightData.aIFightData) for (let i = 0; i < this.curFightData.aIFightData.length; i++) {
                const s = this.curFightData.aIFightData[i];
                (null == t || e >= s.lv) && (t = s);
            }
            return t;
        }
        getHeroDeadTime(e) {
            if (null != this.curFightData.heroDeadRule) for (let t = 0; t < this.curFightData.heroDeadRule.length; t++) if (this.curFightData.heroDeadRule[t].num == e) return s.isOppoGameCenterPlatform ? 1 == e ? 1e4 : this.curFightData.heroDeadRule[t].v + 5e3 : this.curFightData.heroDeadRule[t].v;
            return 5e3;
        }
        getHeroDeadTime_Sh(e) {
            if (null != this.curFightData.heroDeadRule_Sh) for (let t = 0; t < this.curFightData.heroDeadRule_Sh.length; t++) if (this.curFightData.heroDeadRule_Sh[t].num == e) return this.curFightData.heroDeadRule_Sh[t].v;
            return 5e3;
        }
        getInitBuff(e) {
            return this.curFightData && this.curFightData.initBuff ? this.curFightData.initBuff[e] : [];
        }
        getRandomBuff(e) {
            return this.curFightData && this.curFightData.randomBuff ? this.curFightData.randomBuff[e] ? this.curFightData.randomBuff[e] : this.curFightData.randomBuff[1] : [];
        }
        getFightKillTips(e, t, i, s, n, a) {
            var o = [];
            if (null != this.fightKillTip) {
                var l = null, h = 0, r = null, c = 0, d = null;
                for (let u = 0; u < this.fightKillTip.length; u++) {
                    const p = this.fightKillTip[u];
                    3 == p.type && e ? o.push(p) : 4 == p.type && t ? d = p : 1 == p.type && i >= p.killNum && p.killNum > h ? (l = p, 
                    h = p.killNum) : 2 == p.type && s >= p.killNum && p.killNum > c ? (r = p, c = p.killNum) : 5 == p.type && n ? o.push(p) : 6 == p.type && a && o.push(p);
                }
                1 == h && 0 == o.length && null == r && l && o.push(l), r && o.push(r), d && o.push(d);
            }
            return o;
        }
        getFightLoadTips() {
            let e = "";
            return null != this.figthLoadTips && (e = this.figthLoadTips[Math.floor(Math.random() * this.figthLoadTips.length)].tip), 
            e;
        }
    }
    El.instance = null;
    class Gl {
        constructor(e) {
            this.buildBeAtkDamageFix = 0, this.enableAI = !0, this.aiLockAtkInitPos = new Laya.Point(), 
            this.aiLockTraceDis = 4, this.aiLockBackInitPos = !1, this.movePos = new Laya.Vector2(), 
            this.moveRandomX = 0, this.moveRandomZ = 0, this.moveForward = !0, this.movePathCurIndex = 0, 
            this.movePathMaxLen = 0, this.moveForwrad = new Laya.Vector2(), this.curAttackTarget = 0, 
            this.reMathPath = !1, this.waitBuyCoin = 0, this.waitStopBuy = !1, this.baseAtkRadius = 0, 
            this.aIFightData = new Al(), this.aIFightData.lv = 0, this.aIFightData.aiCoinRatio = 1, 
            this.aIFightData.aiExpRatio = 1, this.aIFightData.aiUseSKRatio = 1, this.owner = e, 
            this.aiLockTraceDis = this.owner.unitData.aiTraceDis, this.init();
        }
        init() {}
        initAIData(e) {
            this.aIFightData = El.Instance.getAIFightData(e);
        }
        destroy() {}
        initPath() {
            if (null != this.owner) {
                u.random();
                this.curMovePos = null, this.movePath = Gl.unitMoveIndex++ % 2 == 0 ? Y.Instance.point_pathl : Y.Instance.point_pathr, 
                this.movePathMaxLen = null == this.movePath ? 0 : this.movePath.length - 1, this.moveForward = 1 == this.owner.teamID, 
                this.movePathCurIndex = 1 == this.owner.teamID ? 0 : this.movePathMaxLen;
            }
        }
        netUpdate() {}
        update() {}
        clearTraceAtk() {
            this.movePath = null, this.aiLockAtkUnit = null, this.aiLockBackInitPos = !1;
        }
        updateTraceAtkTarget() {
            if (this.aiLockBackInitPos) u.round(this.owner.logicPos.distance(this.aiLockAtkInitPos.x, this.aiLockAtkInitPos.y)) < 100 ? (this.owner.moveCacheData = [ {
                id: o.MOVE
            }, {
                id: 0
            }, {
                id: 0
            }, {
                id: 0
            } ], this.aiLockBackInitPos = !1) : (this.reMathPath = !0, q.VectorNormal(this.aiLockAtkInitPos.x - this.owner.logicPos.x, this.aiLockAtkInitPos.y - this.owner.logicPos.y, this.moveForwrad), 
            this.owner.moveCacheData = [ {
                id: o.MOVE
            }, {
                id: u.round(100 * this.moveForwrad.x) + 1e3
            }, {
                id: u.round(100 * this.moveForwrad.y) + 1e3
            }, {
                id: 0
            } ], s.isSyncDebug && this.owner.unitType == me.HERO && console.log(f.Instance.currentFrame + " id " + this.instanceID + " updateTraceAtkTarget back moveCacheData x " + this.owner.moveCacheData[1].id + " y " + this.owner.moveCacheData[2].id)); else if (this.aiLockAtkUnit) if (this.aiLockAtkUnit.isDead || this.aiLockAtkUnit.logicPos.distance(this.aiLockAtkInitPos.x, this.aiLockAtkInitPos.y) >= 100 * this.aiLockTraceDis) {
                if (this.aiLockAtkUnit = null, this.owner.logicPos.distance(this.aiLockAtkInitPos.x, this.aiLockAtkInitPos.y) > 400) {
                    var e = this.nearMathPath();
                    this.movePath && this.movePath[e] && (this.movePathCurIndex = e, this.aiLockAtkInitPos.x = this.movePath[e].x, 
                    this.aiLockAtkInitPos.y = this.movePath[e].z);
                }
            } else {
                this.reMathPath = !0, 0 == this.baseAtkRadius && this.owner.skillData[0] && (this.baseAtkRadius = 100 * this.owner.skillData[0].skillUseRadius);
                var t = u.round(this.owner.logicPos.distance(this.aiLockAtkUnit.logicPos.x, this.aiLockAtkUnit.logicPos.y));
                t > u.round(.9 * this.baseAtkRadius) ? (q.VectorNormal(this.aiLockAtkUnit.logicPos.x - this.owner.logicPos.x, this.aiLockAtkUnit.logicPos.y - this.owner.logicPos.y, this.moveForwrad), 
                this.owner.moveCacheData = [ {
                    id: o.MOVE
                }, {
                    id: u.round(100 * this.moveForwrad.x) + 1e3
                }, {
                    id: u.round(100 * this.moveForwrad.y) + 1e3
                }, {
                    id: 0
                } ], s.isSyncDebug && this.owner.unitType == me.HERO && console.log(f.Instance.currentFrame + " id " + this.instanceID + " updateTraceAtkTarget  aiLockAtkUnit moveCacheData x " + this.owner.moveCacheData[1].id + " y " + this.owner.moveCacheData[2].id)) : this.owner && this.owner.unitType == me.HERO && this.movePath && t < u.round(.5 * this.baseAtkRadius) ? (u.round(this.owner.logicPos.distance(this.aiLockAtkInitPos.x, this.aiLockAtkInitPos.y)) < 100 && this.movePath && this.movePath[this.movePathCurIndex] && (this.aiLockAtkInitPos.x = this.movePath[this.movePathCurIndex].x, 
                this.aiLockAtkInitPos.y = this.movePath[this.movePathCurIndex].z, this.movePathCurIndex += 1 == this.owner.teamID ? -1 : 1, 
                this.movePathCurIndex < 0 && (this.movePathCurIndex = 0), this.movePathCurIndex > this.movePathMaxLen && (this.movePathCurIndex = this.movePathMaxLen)), 
                q.VectorNormal(this.aiLockAtkInitPos.x - this.owner.logicPos.x, this.aiLockAtkInitPos.y - this.owner.logicPos.y, this.moveForwrad), 
                this.owner.moveCacheData = [ {
                    id: o.MOVE
                }, {
                    id: u.round(100 * this.moveForwrad.x) + 1e3
                }, {
                    id: u.round(100 * this.moveForwrad.y) + 1e3
                }, {
                    id: 0
                } ]) : this.owner.moveCacheData = [ {
                    id: o.MOVE
                }, {
                    id: 0
                }, {
                    id: 0
                }, {
                    id: 0
                } ];
            }
        }
        nearMathPath() {
            var e = 0;
            if (this.movePath) {
                var t = -1;
                for (let s = 0; s < this.movePath.length; s++) {
                    const n = this.movePath[s];
                    var i = this.owner.logicPos.distance(n.x, n.z);
                    (-1 == t || i < t) && (t = i, e = s);
                }
            }
            return e;
        }
        updateMovePath(e) {
            null == this.movePath && this.initPath(), this.movePathMaxLen <= 0 || (this.reMathPath && (this.reMathPath = !1, 
            this.curMovePos = null), null == this.curMovePos && (this.movePos.setValue(this.movePath[this.movePathCurIndex].x, this.movePath[this.movePathCurIndex].z), 
            this.aiLockAtkInitPos.x = this.movePos.x, this.aiLockAtkInitPos.y = this.movePos.y, 
            e && (this.movePos.x += this.moveRandomX, this.movePos.y += this.moveRandomZ), this.curMovePos = this.movePos), 
            null != this.curMovePos && (u.round(this.owner.logicPos.distance(this.curMovePos.x, this.curMovePos.y)) < 100 ? (this.curMovePos = null, 
            e && (this.moveRandomX = (u.random() < .5 ? 1 : -1) * Math.floor(100 * u.random()), 
            this.moveRandomZ = (u.random() < .5 ? 1 : -1) * Math.floor(100 * u.random())), this.movePathCurIndex += this.moveForward ? 1 : -1, 
            (this.movePathCurIndex <= 0 || this.movePathCurIndex >= this.movePathMaxLen) && (this.moveForward = !this.moveForward, 
            this.owner.moveCacheData = null)) : (q.VectorNormal(this.curMovePos.x - this.owner.logicPos.x, this.curMovePos.y - this.owner.logicPos.y, this.moveForwrad), 
            this.owner.moveCacheData = [ {
                id: o.MOVE
            }, {
                id: u.round(100 * this.moveForwrad.x) + 1e3
            }, {
                id: u.round(100 * this.moveForwrad.y) + 1e3
            }, {
                id: 0
            } ], s.isSyncDebug && this.owner.unitType == me.HERO && console.log(f.Instance.currentFrame + " id " + this.instanceID + " updateMovePath moveCacheData x " + this.owner.moveCacheData[1].id + " y " + this.owner.moveCacheData[2].id))));
        }
        autoBuyEq() {
            if (null != this.owner && !this.waitStopBuy) {
                if (null == this.waitBuyEquip && (s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.owner.instanceID + " this.waitBuyEquip == null"), 
                this.waitBuyEquip = Nl.Instance.getHeroNextBuy(this.owner, null), null == this.waitBuyEquip)) {
                    var e = null, t = Tl.Instance.getHeroEq(this.owner.modelID);
                    if (null != t) for (var i = 0; i < 3; i++) for (var n = 0 == i ? t.eqLv1 : 1 == i ? t.eqLv2 : t.eqLv3, a = 0; a < n.length; a++) {
                        var o = n[a], l = !1;
                        if (this.owner.equipList) for (var h = 0; h < this.owner.equipList.length; h++) if (this.owner.equipList[h].id == o) {
                            l = !0;
                            break;
                        }
                        if (!l) {
                            e = xl.Instance.getEquip(o);
                            break;
                        }
                    }
                    null == e && (this.waitStopBuy = !0);
                }
                null != this.waitBuyEquip && 0 == this.waitBuyCoin && (this.waitBuyCoin = Nl.Instance.mathBuyCoin(this.owner, this.waitBuyEquip), 
                s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.owner.instanceID + " this.waitBuyEquip != null  this.waitBuyCoin " + this.waitBuyCoin)), 
                0 != this.waitBuyCoin && this.owner.coin >= this.waitBuyCoin && (Nl.Instance.buy(this.owner, this.waitBuyEquip.id), 
                s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.owner.instanceID + " buy  waitBuyEquipID " + this.waitBuyEquip.id + " waitBuyCoin " + this.waitBuyCoin), 
                this.waitBuyEquip = null, this.waitBuyCoin = 0);
            }
        }
    }
    Gl.unitMoveIndex = 1;
    class Rl extends Gl {
        netUpdate() {}
        update() {
            if (null != this.owner && !this.owner.isDead) {
                if (!this.owner.isAttackIng) for (let i = this.owner.skillData.length - 1; i >= 0; i--) {
                    const s = this.owner.skillData[i];
                    if (null != s && s.lv > 0 && 0 == s.curCD && 0 == s.skillType && (0 == i || u.random() < this.aIFightData.aiUseSKRatio)) {
                        var e = He.Instance.SkillAutoTargetBySkill(this.owner, s, me.HERO);
                        if (null != e) {
                            var t = new Laya.Point(e.logicPos.x, e.logicPos.y);
                            1 == s.moveHeroType && t.copy(e.getDamagePointLogicPos(this.owner.logicPos)), this.owner.playSkill(i, e.instanceID, t);
                        }
                    }
                }
                null != this.aiLockAtkUnit || this.aiLockBackInitPos ? this.updateTraceAtkTarget() : (this.aiLockAtkUnit = He.Instance.SkillAutoTarget(this.owner, [ 1, 2, 3 ], this.aiLockTraceDis - .5, me.None), 
                this.aiLockAtkUnit ? (this.aiLockAtkInitPos.copy(this.owner.logicPos), this.aiLockBackInitPos = !1) : this.updateMovePath(!0));
            }
        }
    }
    class Bl {
        constructor() {
            this.dicPlayerInstance = [], this.dicPlayer = {}, this.enableAI = !0, this.instanceIndex = 0, 
            this.aiSpaceFrame = 30;
        }
        static get Instance() {
            return null == this.instance && (Bl.instance = new Bl()), Bl.instance;
        }
        init() {
            Gl.unitMoveIndex = 1, f.Instance.frameTimer.frameLoop(this.aiSpaceFrame, this, this.updateAI);
        }
        clear() {
            f.Instance.frameTimer.clear(this, this.updateAI);
        }
        addAI(e) {
            this.instanceIndex++, this.dicPlayerInstance.push(this.instanceIndex), e.instanceID = this.instanceIndex, 
            this.dicPlayer[this.instanceIndex] = e, e.enableAI = !0;
        }
        removeAI(e) {
            for (var t = 0; t < this.dicPlayerInstance.length; t++) {
                if (this.dicPlayerInstance[t] == e.instanceID) return e.destroy(), this.dicPlayerInstance.splice(t, 1), 
                t--, void delete this.dicPlayer[e.instanceID];
            }
        }
        setEnableAI(e) {
            this.enableAI = e;
            for (var t = 0; t < this.dicPlayerInstance.length; t++) {
                this.dicPlayer[this.dicPlayerInstance[t]].enableAI = e;
            }
        }
        updateAI() {
            for (var e = 0; e < this.dicPlayerInstance.length; e++) {
                var t = this.dicPlayer[this.dicPlayerInstance[e]];
                t && t.update();
            }
        }
    }
    Bl.instance = null;
    class Hl {
        constructor() {
            this.cacheLogicFrame = {}, this.cachaeAction = {}, this.cachaeSkillAction = null, 
            this.waitOpenUI = !1, this.closeTips = !1, this.syncEnd = !1, this.isPauseGame = !1, 
            this.syncCheck = [], this.cacheNum = 0, this.cacheMinNum = 1, this.cacheMaxNum = 3, 
            this.cacheChangeFrame = 0, this.nullFrame = 0, this.nullMaxFrame = 2, this.isAddLogicData = !1;
        }
        static get Instance() {
            return null == this.instance && (Hl.instance = new Hl()), Hl.instance;
        }
        initFrame(e) {
            u.seed = e, f.Instance.totalFrame = 0, f.Instance.currentFrame = 0, f.Instance.serverFrame = 0, 
            f.Instance.currentFrameTime = 0, f.Instance.currentRenderFrame = 0, f.Instance.isSpeedPlay = !1, 
            this.isAddLogicData = !1, this.isPauseGame = !1, this.cacheLogicFrame = {}, this.cachaeAction = {}, 
            this.syncEnd = !1, this.cacheChangeFrame = 0, this.cacheNum = this.cacheMinNum, 
            this.nullFrame = 0, this.cachaeSkillAction = null, Laya.timer.frameLoop(1, this, this.onLoop);
        }
        closeSync() {
            console.log(f.Instance.currentFrame, " totalFrame " + f.Instance.totalFrame), this.syncEnd = !0, 
            this.waitOpenUI && (this.waitOpenUI = !1), f.Instance.isSpeedPlay && (f.Instance.isSpeedPlay = !1, 
            d.Instance.Send(a.FightManager_ReConnectComplete)), this.closeTips = !1, Laya.timer.clearAll(this), 
            f.Instance.frameStartCall = [], f.Instance.frameEndCall = [];
        }
        onSendTime() {
            this.sendActionToServer();
        }
        onLoop() {
            if (this.syncEnd) return;
            var e = f.Instance;
            e.currentRenderFrame++;
            var t = e.totalFrame, i = e.currentFrame, s = (f.renderFrameRatio, f.renderFrame);
            let n = 0, o = t - i;
            for (this.isAddLogicData || o > 10 ? (this.isAddLogicData = !1, o = o - f.renderFrameRatio + 1) : o = 1, 
            o > 4 * s && (o = 4 * s, e.isSpeedPlay = !0), this.nullFrame++; i < t && n < o; ) {
                if (this.nullFrame = 0, this.syncEnd) return;
                var l = this.cacheLogicFrame[i];
                null != l && (this.isPauseGame && !this.checkOpsResumeGame(l) || (delete this.cacheLogicFrame[i], 
                this.checkPlayerMove(l), l.length > 0 && this.executeOrder(l))), n++, this.isPauseGame || e.frameTimer._update(), 
                i++, e.currentFrameTime += f.renderTimeRatio, e.currentFrame = i;
            }
            this.waitOpenUI && t <= i + 10 && (this.waitOpenUI = !1, d.Instance.Send(a.FightManager_waitOpenUI)), 
            this.closeTips && t <= i + 10 && (this.closeTips = !1, d.Instance.Send(a.UIGameTipsModel_Close)), 
            e.isSpeedPlay && t <= i + 10 && (e.isSpeedPlay = !1, d.Instance.Send(a.FightManager_ReConnectComplete)), 
            e.renderFrameTimer._update();
        }
        checkOpsResumeGame(e) {
            var t = e.length;
            for (let s = 0; s < t; s++) {
                var i = e[s];
                if (i.value.length > 0 && (i.value[0].id == o.RESUMEGAME || i.value[0].id == o.SYNCCHECK)) return !0;
            }
            return !1;
        }
        addLogicFrame(e, t, i) {
            1 != e || f.isLocalServer || (Laya.timer.clear(this, this.onSendTime), Laya.timer.loop(f.logicFrameTime, this, this.onSendTime));
            var s = f.Instance;
            if (!(f.Instance.isReConnect && e <= s.serverFrame)) {
                if (s.serverFrame + 1 != e) return console.log("同步数据发生异常，连接断开！ _FrameSynConfig.serverFrame " + (s.serverFrame + 1) + " serverFrame " + e), 
                void w.Instance.stopConnect();
                if (f.isLocalServer) {
                    var n = this.sendActionToServer();
                    t = n;
                }
                return s.serverFrame = e, this.cacheLogicFrame[s.totalFrame] = t, s.totalFrame += f.renderFrameRatio, 
                this.isAddLogicData = !0, i && this.onLoop(), n;
            }
        }
        addActionToServer(e) {
            for (var t = 0; t < e.length; t++) {
                if (isNaN(e[t].id)) return;
                e[t].id - Math.round(e[t].id) > 0 && console.log("111");
            }
            var i = Re.Instance.selfPlayer;
            if (null != i) {
                if (e[0].id == o.ATTACK && 0 != e[1].id && 4 != e[1].id && null == this.cachaeSkillAction && i.attackTime > 0) {
                    var s = i.curSkill, n = i.skillData[e[1].id];
                    if (s && n && n.skillPriority <= s.skillPriority) return void (this.cachaeSkillAction = e);
                }
                if (e[0].id == o.MOVE) (a = []).push(e), this.cachaeAction[e[0].id] = a; else if (null == this.cachaeAction[e[0].id]) {
                    var a = [];
                    e[0].id == o.ATTACK && null != this.cachaeSkillAction && (e = this.cachaeSkillAction, 
                    this.cachaeSkillAction = null), a.push(e), this.cachaeAction[e[0].id] = a;
                } else e[0].id == o.ATTACK ? this.cachaeSkillAction = e : this.cachaeAction[e[0].id].push(e);
            }
        }
        sendActionToServer() {
            if (!f.Instance.isSpeedPlay) {
                var e = [], t = 0, i = !1, s = Re.Instance.selfPlayer;
                if (null != s) {
                    for (var n in this.cachaeAction) {
                        var a = this.cachaeAction[n];
                        delete this.cachaeAction[n];
                        for (var l = 0; l < a.length; l++) {
                            var h = a[l];
                            h[0].id != o.MOVE || 0 == h[1].id && 0 == h[2].id || (!0, s.setTempCacheMoveAction(h)), 
                            h[0].id == o.ATTACK || h[0].id == o.MOVE && 0 == h[1].id && 0 == h[2].id ? (!0, 
                            s.setTempCacheMoveAction(null)) : h[0].id == o.ATTACK && (i = !0), e[t++] = {
                                id: s.tempFightId,
                                value: h
                            };
                        }
                    }
                    if (!i && null != this.cachaeSkillAction && s.attackTime <= 0 && (e[t++] = {
                        id: s.tempFightId,
                        value: this.cachaeSkillAction
                    }, this.cachaeSkillAction = null), f.pingCheckSpace <= 0) {
                        f.pingCheckSpace = 3 * f.logicFrame;
                        var r = Laya.Browser.now() - f.baseFrameTime;
                        e[t++] = {
                            id: s.tempFightId,
                            value: [ {
                                id: o.PINGTEST
                            }, {
                                id: r
                            } ]
                        };
                    } else f.pingCheckSpace--;
                    return t > 0 && !f.isLocalServer && w.Instance.GetNetMsgData("c2s_up_act").Send({
                        action: e
                    }), e;
                }
            }
        }
        executeOrder(e) {
            var t = e.length, i = Re.Instance;
            for (let n = 0; n < t; n++) {
                var s = e[n];
                if (s.id = i.tempToInstaneId(s.id), s.value.length > 0) if (s.value[0].id == o.MOVE) this.actionMove(s); else if (s.value[0].id == o.ATTACK) this.actionSkill(s); else if (s.value[0].id == o.DEAD) this.actionDead(s); else if (s.value[0].id == o.SKILLUP) this.actionSkillUP(s); else if (s.value[0].id == o.BUY) this.actionBuy(s); else if (s.value[0].id == o.SELL) this.actionSell(s); else if (s.value[0].id == o.NETSTOP) this.actionNetStop(s); else if (s.value[0].id == o.NETCONNECT) this.actionNetConnect(s); else if (s.value[0].id == o.RELIVE) this.actionRelive(s); else if (s.value[0].id == o.QUICKLYTALK) this.actionQuicklyText(s); else {
                    if (s.value[0].id == o.PAUSEGAME) {
                        this.isPauseGame = !0, f.Instance.pauseFrame = f.Instance.currentFrame, d.Instance.Send(a.UIDebugInfo_Open);
                        break;
                    }
                    if (s.value[0].id == o.RESUMEGAME) {
                        this.isPauseGame = !1, f.Instance.pauseFrame = 0;
                        break;
                    }
                    s.value[0].id == o.SYNCCHECK ? this.syncCheck.push(s.value) : s.value[0].id == o.XPSKILL ? this.actionXPSkill(s) : s.value[0].id == o.PINGTEST && this.actionPingTest(s);
                }
            }
            this.syncCheck.length >= 2 && (d.Instance.Send(a.UIDebugInfo_SyncCheck, this.syncCheck), 
            this.syncCheck = []);
        }
        executeOrder_Test(e) {
            var t = e.length, i = Re.Instance;
            for (let a = 0; a < t; a++) {
                var s = e[a];
                if (s.id = i.tempToInstaneId(s.id), s.value.length > 0 && s.value[0].id == o.PINGTEST) {
                    var n = Laya.Browser.now();
                    f.framePing = n - f.baseFrameTime - s.value[1].id, console.log(f.Instance.serverFrame + " ping 1 " + f.framePing);
                }
            }
        }
        checkPlayerMove(e) {
            for (var t = Re.Instance.dicPlayerInstance, i = Re.Instance.dicPlayer, s = Re.Instance.dicPlayerInstance.length, n = 0; n < s; n++) {
                var a = t[n], o = i[a];
                o.isAI && o.aiControl ? (o.aiControl.enableAI && o.aiControl.netUpdate(), null != o.moveCacheData && e.push({
                    id: a < 0 ? a : o.tempFightId,
                    value: o.moveCacheData
                })) : null == o || !o.moveIng || null == o.moveCacheData || 0 != e.length && this.checkDataByPlayer(o.tempFightId, e) || e.push({
                    id: o.tempFightId,
                    value: o.moveCacheData
                });
            }
        }
        checkDataByPlayer(e, t) {
            for (let i = 0; i < t.length; i++) {
                if (t[i].id == e) return !0;
            }
            return !1;
        }
        actionMove(e) {
            var t = Re.Instance.getPlayer(e.id);
            null == t || t.isDead || (0 == e.value[1].id && 0 == e.value[2].id ? (t.moveIng = !1, 
            t.moveFrame = 0) : t.startMove(e.value));
        }
        actionSkill(e) {
            var t = Re.Instance.getPlayer(e.id);
            if (null != t && !t.isDead) {
                var i = e.value[2].id, s = new Laya.Point();
                s.x = e.value[3].id, s.y = e.value[4].id, t.playSkill(e.value[1].id, i, s);
            }
        }
        actionDead(e) {}
        actionSkillUP(e) {
            var t = Re.Instance.getPlayer(e.id);
            if (null != t) {
                var i = e.value[1].id;
                t.skillUp(i);
            }
        }
        actionBuy(e) {
            var t = Re.Instance.getPlayer(e.id);
            if (null != t) {
                var i = e.value[1].id;
                Nl.Instance.buy(t, i);
            }
        }
        actionSell(e) {
            var t = Re.Instance.getPlayer(e.id);
            if (null != t) {
                var i = e.value[1].id;
                Nl.Instance.sell(t, i);
            }
        }
        actionNetStop(e) {
            var t = Re.Instance.getPlayer(e.id);
            null != t && (t.isAI || (t.isAI = !0, t.aiControl = new Rl(t), Bl.Instance.addAI(t.aiControl)));
        }
        actionNetConnect(e) {
            var t = Re.Instance.getPlayer(e.id);
            null != t && t.isAI && (t.isAI = !1, t.aiControl && Bl.Instance.removeAI(t.aiControl), 
            t.moveCacheData = [ {
                id: o.MOVE
            }, {
                id: 0
            }, {
                id: 0
            } ], t.stopMoveAndLastPos());
        }
        actionRelive(e) {
            var t = Re.Instance.getPlayer(e.id);
            null != t && (t.isDead && (t.relivecount++, t.deadTime -= 1e6), null != e.value[1] && 0 != e.value[1].id && (t.reliveBuffID = e.value[1].id - 1));
        }
        actionQuicklyText(e) {
            d.Instance.Send(a.QuicklyTextMsg, e.id, e.value[1].id);
        }
        actionXPSkill(e) {
            d.Instance.Send(a.FightManager_XPSkill, e.id, e.value[1].id);
        }
        actionPingTest(e) {
            var t = Re.Instance.selfPlayer;
            if (null != t && !f.Instance.isSpeedPlay && t.instanceID == e.id) {
                var i = Laya.Browser.now();
                f.framePing = i - f.baseFrameTime - e.value[1].id, f.framePing < 10 && (f.framePing = 10), 
                f.baseFrameTime = i;
            }
        }
    }
    Hl.instance = null;
    class Fl {
        constructor() {
            this.isLoadComplete = !1;
        }
        static get Instance() {
            return null == this.instance && (Fl.instance = new Fl()), Fl.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/sceneConfig.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.configData = e) : console.log("config/sceneConfig.json load fail!"), 
            this.callBack && this.callBack();
        }
        getScene(e) {
            if (null != this.configData) for (let t = 0; t < this.configData.length; t++) {
                let i = this.configData[t];
                if (i.sceneId == e) return i;
            }
        }
    }
    Fl.instance = null;
    class Vl extends xe {
        constructor(e, t, i, s, n) {
            super(), this.width = 74, this.offsetX = 0, this.offsetY = 0, this.isSelf = !1, 
            this.isAutoHide = !1, this.visible = !0, this.scaleX = 1, this.scaleY = 1, this.isSelfLockPos = !1, 
            this.curHp = 1, this.hpMax = 1, this.posText = "", this.oldTex = "", this.texLoading = !0, 
            this.type = t, t == me.UNIT ? (this.scaleX = .5, this.scaleY = .5, this.isAutoHide = !0) : t == me.BUILD ? (this.scaleX = 1, 
            this.scaleY = .5, this.isAutoHide = !1) : (this.scaleX = 1, this.scaleY = 1, this.isAutoHide = !1), 
            this.isSelf = s, this.isSelf && (this.isSelfLockPos = !0), this.offsetX = this.width * this.scaleX / 2, 
            this.offsetY = 0, this.createBloodBarHero(e, n), t == me.HERO && this.createNameLabel(i), 
            this.root = this.bloodBarBG;
        }
        destroy() {
            this.tempBloodBar && (this.tempBloodBar.removeSelf(), this.tempBloodBar.destroy()), 
            this.bloodBar && (this.bloodBar.removeSelf(), this.bloodBar.destroy()), this.bloodup && (this.bloodup.removeSelf(), 
            this.bloodup.destroy()), this.nameLabel && (this.nameLabel.removeSelf(), this.nameLabel.destroy()), 
            this.lvLabel && (this.lvLabel.removeSelf(), this.lvLabel.destroy()), this.bloodBarBG && (this.bloodBarBG.removeSelf(), 
            this.bloodBarBG.destroy()), this.bloodBarBG = null;
        }
        createNameLabel(e) {
            this.nameLabel = new Laya.Text(), this.nameLabel.color = "#FFFFFF", this.nameLabel.text = e, 
            this.nameLabel.x = -32, this.nameLabel.y = -28, this.nameLabel.fontSize = 18, this.nameLabel.bold = !0, 
            this.nameLabel.stroke = 4, this.nameLabel.strokeColor = "#000000", this.nameLabel.width = 138, 
            this.nameLabel.align = "center", this.nameLabel.overflow = "hidden", this.bloodBarBG.addChild(this.nameLabel), 
            this.lvLabel = new Laya.Text(), this.lvLabel.color = "#FFFFFF", this.lvLabel.text = "1", 
            this.lvLabel.x = -26, this.lvLabel.y = -2, this.lvLabel.fontSize = 18, this.lvLabel.width = 22, 
            this.lvLabel.align = "center", this.bloodBarBG.addChild(this.lvLabel);
        }
        createBloodBarHero(e, t) {
            if (this.bloodBarBG = new Laya.Sprite(), this.bloodBarBG.loadImage("fight/xuetiao_bg.png"), 
            this.bloodBarBG.scaleX = this.scaleX, this.bloodBarBG.scaleY = this.scaleY, this.type == me.HERO) {
                var i = new Laya.Sprite();
                i.loadImage("fight/xuetiao_lv.png"), i.x = -30, i.y = -9, this.bloodBarBG.addChild(i), 
                this.tempBloodBar = new Laya.Sprite(), this.tempBloodBar.loadImage("fight/xuetiao4.png"), 
                this.tempBloodBar.visible = !1, this.bloodBarBG.addChild(this.tempBloodBar);
            }
            this.bloodBar = new Laya.Sprite(), this.bloodBar.loadImage(this.isSelf ? "fight/xuetiao1.png" : e == t ? "fight/xuetiao2.png" : "fight/xuetiao3.png"), 
            this.bloodBarBG.addChild(this.bloodBar), this.visible = !this.isAutoHide, this.bloodBarBG.visible = this.visible;
        }
        hideHp() {
            null != this.bloodBarBG && (this.visible = !1, this.bloodBarBG.visible = this.visible);
        }
        setHp(e, t, i) {
            if (null != this.bloodBarBG) {
                if (this.isAutoHide && !this.bloodBarBG.visible && e < t && (this.visible = !0, 
                this.bloodBarBG.visible = this.visible, Laya.timer.clear(this, this.hideHp), Laya.timer.once(5e3, this, this.hideHp)), 
                this.curHp = e, this.hpMax != t && this.type == me.HERO) {
                    var s = El.Instance.getBloodUP(t);
                    null == this.bloodup && (this.bloodup = new Laya.Sprite(), this.bloodBarBG.addChild(this.bloodup)), 
                    this.oldTex != s && this.texLoading && (this.oldTex = s, this.bloodup.graphics.clear(), 
                    this.texLoading = !1, this.bloodup.loadImage(s, Laya.Handler.create(this, () => {
                        this.texLoading = !0;
                    })));
                }
                this.hpMax = t, null != this.tempBloodBar && null != i && i > 0 ? (this.tempBloodBar.visible = !0, 
                this.curHp + i > this.hpMax ? (this.bloodBar.scaleX = this.curHp / (this.hpMax + i), 
                this.tempBloodBar.scaleX = (this.curHp + i) / (this.hpMax + i)) : (this.bloodBar.scaleX = this.curHp / this.hpMax, 
                this.tempBloodBar.scaleX = (this.curHp + i) / this.hpMax)) : (this.bloodBar.scaleX = this.curHp / this.hpMax, 
                this.tempBloodBar && (this.tempBloodBar.visible = !1));
            }
        }
        setLv(e) {
            null != this.bloodBarBG && this.lvLabel && (this.lvLabel.text = e + "");
        }
        setExp(e) {}
        setName(e) {
            null != this.bloodBarBG && this.nameLabel && (this.nameLabel.text = e);
        }
        setPos(e, t) {
            this.isSelfLockPos && !Y.Instance.mapMoveIng && (null == this.lockPos ? (this.lockPos = new Laya.Vector2(), 
            this.lockPos.x = e, this.lockPos.y = t) : (e = this.lockPos.x, t = this.lockPos.y)), 
            null != this.bloodBarBG && (this.bloodBarBG.x = e - this.offsetX, this.bloodBarBG.y = t - this.offsetY);
        }
        setVisible(e) {
            this.visible = e, null != this.bloodBarBG && (this.isSelfLockPos && e && (Y.Instance.Pos3DTo2D(this.pos3D, this.pos), 
            this.setPos(this.pos.x, this.pos.y)), this.isAutoHide ? this.bloodBarBG.visible = e ? this.curHp < this.hpMax : e : this.bloodBarBG.visible = e);
        }
    }
    class jl extends Be {
        constructor() {
            super(...arguments), this.instanceID = 0, this.effectObjHeightType = 0, this.effectShowTime = 0, 
            this.curEffectShowTime = 0, this.isGlobalCreateEffect = !1, this.moreHitFlyObj = !1, 
            this.autoCreateHitFlyObj = !0, this.completeType = 0, this.scale = 1, this.fixFlyTimeType = 0, 
            this.flytime = 0, this.curFlytime = 0, this.flySpeed = 0, this.moveType = 0, this.moveLineType = 0, 
            this.isEffectYSameUnit = !1, this.isEffectYSameTeam = !1, this.M4checkNum = 0, this.M4checkRadius = 0, 
            this.isLockTarget = !1, this.isOnlyAtkLockTarget = !0, this.startSound = "", this.hitSound = "", 
            this.noDamage = !1, this.logicPos = new Laya.Vector2(), this.colliderLogicPos = [], 
            this.showPos = new Laya.Vector3(), this.hideInGrass = !1, this.grassId = 0, this.isOwnerDeadDestroy = !1, 
            this.traceLogicPos = new Laya.Point(), this.flySpeedOneFrame = 0, this.movelogicForwrad = new Laya.Vector2(), 
            this.moveShowForwrad = new Laya.Vector3(), this.destroyType = 0, this.parabolaHeightOneFrame = .05, 
            this.parabolaIndex = 0;
        }
        GetNewInstance() {
            return null;
        }
        onCeateStart() {}
        GetPoolInstance() {
            var e = null;
            return this.poolKey && (e = Me.Instance.getFlyObj(this.poolKey)), e;
        }
        createBoom(e) {}
        create(e, t, i) {
            if (this.movelogicForwrad.setValue(0, 0), this.moveShowForwrad.setValue(0, 0, 0), 
            this.flySpeedOneFrame = u.decimalRound(this.flySpeed / f.renderFrame), this.ownerSk = e, 
            this.colliderLockPlayer = 0, this.onCeateStart(), t && this.isLockTarget ? (this.tracePlayer = t, 
            this.tracePlayer.centerPointSprite3D ? this.tracePlayerDamagePoint = this.tracePlayer.centerPointSprite3D.transform : this.tracePlayerDamagePoint = this.tracePlayer.curSprite3D.transform, 
            null != this.colliderUnitType && (this.colliderLockPlayer = t.instanceID)) : this.tracePlayer = null, 
            this.traceLogicPos.copy(i), 0 == this.moveType ? this.logicPos.setValue(i.x, i.y) : this.logicPos.setValue(this.ownerSk.owner.logicPos.x, this.ownerSk.owner.logicPos.y), 
            q.VectorNormal(this.traceLogicPos.x - this.logicPos.x, this.traceLogicPos.y - this.logicPos.y, this.movelogicForwrad), 
            this.showPos.setValue(this.logicPos.x / 100, this.ownerSk.owner.showPos.y, this.logicPos.y / 100), 
            1 == this.fixFlyTimeType && this.flySpeed > 0) {
                var s = u.round(this.traceLogicPos.distance(this.logicPos.x, this.logicPos.y) / 100);
                this.flytime = u.round(1e3 * s / this.flySpeed);
            }
            if (1 == this.moveLineType) {
                var n = Math.floor(this.flytime / f.renderTimeRatio);
                if (this.parabolaIndex = 0, this.parabolaPath = [], n > 0) {
                    var a = Math.floor(n / 2);
                    for (let e = 0; e < n; e++) this.parabolaPath.push(this.parabolaHeightOneFrame * (e < a ? 1 : -1));
                }
            }
            if (1 == this.effectObjHeightType && null != this.ownerSk.owner.centerPointSprite3D ? this.showPos.y = this.ownerSk.owner.centerPointSprite3D.transform.position.y : 2 == this.effectObjHeightType && null != this.ownerSk.owner.topPointSprite3D && (this.showPos.y = this.ownerSk.owner.topPointSprite3D.transform.position.y), 
            "" != this.effectName && null == this.effectObj) {
                var o = Me.Instance.getEffect(this.effectName, this.ownerSk.owner.teamID, this.ownerSk.owner.skinID);
                this.effectName = o.name, this.effectObj = o.obj, this.effectObj && (3 == this.moveType || 6 == this.moveType ? (this.showPos.setValue(0, 0, 0), 
                this.effectObj.transform.position = this.showPos, this.ownerSk.owner.curSprite3D.addChild(this.effectObj)) : (this.isEffectYSameUnit ? this.effectObj.transform.rotationEuler = new Laya.Vector3(0, this.ownerSk.owner.rotationEuler.y, 0) : this.isEffectYSameTeam && 2 == Re.Instance.selfPlayer.teamID && (this.effectObj.transform.rotationEuler = new Laya.Vector3(0, 180, 0)), 
                this.effectObj.transform.position = this.showPos, Y.Instance.addChild(this.effectObj)));
            }
        }
        createHitFlyObj() {
            if (null != this.hitFlyObj && this.ownerSk) for (let e = 0; e < this.hitFlyObj.length; e++) {
                const t = this.hitFlyObj[e].GetNewInstance();
                t.create(this.ownerSk, null, new Laya.Point(this.logicPos.x, this.logicPos.y)), 
                Fe.Instance.addFlyObj(t);
            }
        }
        destroy(e) {
            if (null != this.endFlyObj && this.ownerSk && !e) for (let e = 0; e < this.endFlyObj.length; e++) {
                const t = this.endFlyObj[e].GetNewInstance();
                t.create(this.ownerSk, null, new Laya.Point(this.logicPos.x, this.logicPos.y)), 
                Fe.Instance.addFlyObj(t);
            }
            null != this.effectObj && (Me.Instance.removeEffect(this.effectName, this.effectObj), 
            this.effectObj = null), this.poolKey && (this.colliderCurCheckNum = 0, this.curFlytime = 0, 
            this.curEffectShowTime = 0, 1 == this.moveLineType && (this.parabolaIndex = 0, this.parabolaPath = []), 
            this.atkUnitList = [], Me.Instance.addFlyObj(this));
        }
        flyUpdate() {
            0 != this.moveType && 5 != this.moveType && (1 == this.moveType || 4 == this.moveType ? (null != this.tracePlayer ? (q.VectorNormal(this.tracePlayer.logicPos.x - this.logicPos.x, this.tracePlayer.logicPos.y - this.logicPos.y, this.movelogicForwrad), 
            this.moveShowForwrad.setValue(this.tracePlayerDamagePoint.position.x - this.showPos.x, this.tracePlayerDamagePoint.position.y - this.showPos.y, this.tracePlayerDamagePoint.position.z - this.showPos.z), 
            Laya.Vector3.normalize(this.moveShowForwrad, this.moveShowForwrad)) : (0 == this.movelogicForwrad.x && 0 == this.movelogicForwrad.y && q.VectorNormal(this.traceLogicPos.x - this.logicPos.x, this.traceLogicPos.y - this.logicPos.y, this.movelogicForwrad), 
            0 == this.moveShowForwrad.x && 0 == this.moveShowForwrad.z && (this.moveShowForwrad.setValue(this.traceLogicPos.x / 100 - this.showPos.x, 0, this.traceLogicPos.y / 100 - this.showPos.z), 
            Laya.Vector3.normalize(this.moveShowForwrad, this.moveShowForwrad))), this.moveUpdatePos()) : 2 == this.moveType ? (this.logicPos.x = this.ownerSk.owner.logicPos.x, 
            this.logicPos.y = this.ownerSk.owner.logicPos.y, this.effectObj && (this.showPos.x = this.ownerSk.owner.showPos.x, 
            this.showPos.y = this.ownerSk.owner.showPos.y, this.showPos.z = this.ownerSk.owner.showPos.z, 
            this.effectObj.transform.position = this.showPos)) : 3 == this.moveType ? (this.logicPos.x = this.ownerSk.owner.logicPos.x + Math.floor(this.movelogicForwrad.x * this.colliderOffSet * 100), 
            this.logicPos.y = this.ownerSk.owner.logicPos.y + Math.floor(this.movelogicForwrad.y * this.colliderOffSet * 100)) : 6 == this.moveType && (this.logicPos.x = this.ownerSk.owner.logicPos.x + Math.floor(this.ownerSk.owner.moveDirction.x * this.colliderOffSet * 100), 
            this.logicPos.y = this.ownerSk.owner.logicPos.y + Math.floor(this.ownerSk.owner.moveDirction.y * this.colliderOffSet * 100)));
        }
        moveUpdatePos() {
            if (this.colliderLogicPos.length > 0 && (this.colliderLogicPos = []), this.movelogicForwrad.x = u.decimalRound(this.movelogicForwrad.x), 
            this.movelogicForwrad.y = u.decimalRound(this.movelogicForwrad.y), this.colliderRadius > 0 && this.flySpeedOneFrame > 2 * this.colliderRadius) {
                var e = Math.floor(this.flySpeedOneFrame / this.colliderRadius);
                for (let i = 0; i < e; i++) {
                    var t = new Laya.Vector2(this.logicPos.x, this.logicPos.y);
                    t.x += Math.floor(i * this.movelogicForwrad.x * this.colliderRadius * 100), t.y += Math.floor(i * this.movelogicForwrad.y * this.colliderRadius * 100), 
                    this.colliderLogicPos.push(t);
                }
            }
            this.logicPos.x += Math.floor(this.movelogicForwrad.x * this.flySpeedOneFrame * 100), 
            this.logicPos.y += Math.floor(this.movelogicForwrad.y * this.flySpeedOneFrame * 100), 
            this.effectObj && (this.flySpeedOneFrame > 0 ? (this.showPos.x += this.moveShowForwrad.x * this.flySpeedOneFrame, 
            this.showPos.y += this.moveShowForwrad.y * this.flySpeedOneFrame, this.showPos.z += this.moveShowForwrad.z * this.flySpeedOneFrame, 
            1 == this.moveLineType && this.parabolaIndex < this.parabolaPath.length && (this.showPos.y += this.parabolaPath[this.parabolaIndex++]), 
            this.effectObj.transform.lookAt(this.showPos, u.lookUp), this.effectObj.transform.position = this.showPos) : (this.showPos.x += 1 * this.movelogicForwrad.x, 
            this.showPos.z += 1 * this.movelogicForwrad.y, this.effectObj.transform.lookAt(this.showPos, u.lookUp)));
        }
        colliderCallBack(e) {
            var t = this.ownerSk;
            null != t && null != t.curLvData || console.log("技能错误 skillid " + t.skillID + " lv " + t.lv), 
            f.Instance.isSpeedPlay || "" == this.hitSound || Ll.Instance.playSound(q.getSoundType(this.hitSound), 1), 
            this.onCollider(e), this.noDamage || t.colliderCallBack(e, this.fixDamage);
        }
        onCollider(e) {}
    }
    class Wl {
        constructor(e, t, i, s, n, a, o, l, h, r) {
            this.nextNeedLv = e, this.cd = t, this.addAtk = i, this.addTrueDamage = s, this.damageScale = n, 
            this.buffID = a, this.selfBuffID = o, this.lvUpBuffID = l, this.hitBuff = h, this.desc = r;
        }
    }
    class Xl {
        constructor(e, t, i, s, n, a, o) {
            this.isCreate = !1, this.createTime = 0, this.flyObjNum = 0, this.curFlyObjNum = 0, 
            this.flyObjMaxNum = 0, this.flyObjCreateSpaceTime = 0, this.flyObjCreateCount = 0, 
            this.flyObjPosType = 0, this.flyObj = null, this.flyObj = e, this.createTime = t || 0, 
            this.flyObjNum = i || 1, this.flyObjMaxNum = s || 1, this.flyObjPosType = n || 0, 
            this.flyObjCreateSpaceTime = a || 0, this.flyObjCreateCount = o || 1;
        }
    }
    class Kl {
        constructor() {
            this.skillID = 0, this.skillPriority = 0, this.skillName = "", this.skillInfo = "", 
            this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 0, this.colliderUnitType = [], this.lv = 0, 
            this.maxlv = 3, this.lvData = {}, this.cd = 0, this.cdType = 0, this.curCD = 0, 
            this.fixCurCD = 0, this.cdFixType = 2, this.playTime = 0, this.playTimeFixType = 0, 
            this.fixPlayTime = 0, this.curPlayTime = 0, this.flyObj = [], this.skillAnimLoop = !1, 
            this.skillTargetPos = new Laya.Point(), this.isMovePlay = !1, this.isMoveInterrupt = 0, 
            this.isVertigoPlay = !1, this.isVertigoStopSkill = !1, this.isPhyDamage = !0, this.recoverHpType = 0, 
            this.recoverHpValue = 1, this.isSuperDamage = !0, this.startSound = "", this.isPlaying = !1, 
            this.isBaseSk = !1, this.moveHeroType = 0, this.moveHeroTime = 0, this.moveHeroSpeed = 0, 
            this.moveHeroDelayTime = 0, this.switchSkillState = !0, this.isMustHaveTarget = !1, 
            this.isShowUI = !0, this.initMoveDir = new Laya.Vector2(), this.tempDir = new Laya.Vector2(), 
            this.tempNewDir = new Laya.Vector2();
        }
        GetNewInstance() {}
        onSkillInitLv(e) {}
        onSkillStart() {}
        onAddSkill(e) {}
        onSkillEnd() {}
        onDamageEnd(e, t) {}
        init(e) {
            if (null != this.lvData) {
                if (this.curLvData = this.lvData[e], null != this.curLvData) {
                    this.cd = this.curLvData.cd;
                    var t = this.lvData[e + 1];
                    if (t && (this.skillNeddLv = t.nextNeedLv), null != this.curLvData && null != this.curLvData.lvUpBuffID) for (var i = 0; i < this.curLvData.lvUpBuffID.length; i++) {
                        var s = this.curLvData.lvUpBuffID[i];
                        0 != s && bl.Instance.AddBuff(this.owner, this.owner, s, this);
                    }
                }
                null == this.curLvData && (this.curLvData = this.lvData[1], null != this.curLvData && (this.cd = this.curLvData.cd, 
                this.skillNeddLv = this.curLvData.nextNeedLv)), this.onSkillInitLv(e);
            }
        }
        fixCD() {
            var e = this.cd, t = this.owner.getAtkSpeed();
            return 1 == this.cdFixType ? e = u.round(this.cd * (2 - (t >= 1.5 ? 1.5 : t))) : 2 == this.cdFixType && (e = Y.curMapID == Y.mapID_sh ? u.round(this.cd * (2 - (this.owner.skillCD >= 1.8 ? 1.8 : this.owner.skillCD))) : u.round(this.cd * (2 - (this.owner.skillCD >= 1.4 ? 1.4 : this.owner.skillCD)))), 
            e += this.fixCurCD, this.fixPlayTime = u.round(this.playTime * (2 - (t >= 1.5 ? 1.5 : t))), 
            e;
        }
        destroy() {
            for (let e = 0; e < this.flyObj.length; e++) {
                this.flyObj[e].flyObj.destroy(!0);
            }
        }
        endPlay() {
            this.isPlaying = !1, this.onSkillEnd();
        }
        updateTime() {
            if (this.isVertigoStopSkill && this.owner.isVertigo) this.curPlayTime = this.playTime; else for (let e = 0; e < this.flyObj.length; e++) {
                const t = this.flyObj[e];
                !t.isCreate && this.curPlayTime >= t.createTime + t.flyObjCreateCount * t.flyObjCreateSpaceTime && this.playExecute(t);
            }
        }
        play(e, t) {
            this.isPlaying = !0, this.curCD = this.fixCD(), this.curPlayTime = 0, this.skillTarget = e, 
            this.skillTargetPos = t, "" == this.startSound || f.Instance.isSpeedPlay || Ll.Instance.playSound(q.getSoundType(this.startSound), 1), 
            1 == this.skillUseType && (this.tempDir.setValue(this.skillTargetPos.x - this.owner.logicPos.x, this.skillTargetPos.y - this.owner.logicPos.y), 
            Laya.Vector2.normalize(this.tempDir, this.tempDir), this.tempDir.x = u.round(100 * this.tempDir.x) / 100, 
            this.tempDir.y = u.round(100 * this.tempDir.y) / 100, this.initMoveDir.setValue(this.tempDir.x, this.tempDir.y), 
            this.skillTargetPos.x = this.owner.logicPos.x + Math.floor(this.tempDir.x * this.skillUseRadius * 100), 
            this.skillTargetPos.y = this.owner.logicPos.y + Math.floor(this.tempDir.y * this.skillUseRadius * 100));
            for (let e = 0; e < this.flyObj.length; e++) {
                const t = this.flyObj[e];
                t.isCreate = !1, t.curFlyObjNum = 0, t.flyObjCreateCount = 0, 0 == t.flyObjMaxNum && (t.flyObjMaxNum = t.flyObjNum);
            }
            if (null != this.curLvData && null != this.curLvData.selfBuffID) for (var i = 0; i < this.curLvData.selfBuffID.length; i++) {
                var s = this.curLvData.selfBuffID[i];
                0 != s && bl.Instance.AddBuff(this.owner, this.owner, s, this);
            }
            this.onSkillStart(), this.updateTime();
        }
        playExecute(e) {
            if (null != e) {
                e.flyObjCreateCount++, this.tempDir.setValue(this.skillTargetPos.x - this.owner.logicPos.x, this.skillTargetPos.y - this.owner.logicPos.y), 
                Laya.Vector2.normalize(this.tempDir, this.tempDir), this.tempDir.x = u.round(100 * this.tempDir.x) / 100, 
                this.tempDir.y = u.round(100 * this.tempDir.y) / 100, q.changeVectorAngle(this.tempDir, 90, this.tempNewDir), 
                this.tempNewDir.x = u.round(100 * this.tempNewDir.x) / 100, this.tempNewDir.y = u.round(100 * this.tempNewDir.y) / 100;
                for (let s = 0; s < e.flyObjNum; s++) {
                    if (e.curFlyObjNum++, 4 == e.flyObj.moveType) {
                        var t = He.Instance.getRangeUnits(this.owner, e.flyObj.colliderUnitType, e.flyObj.M4checkRadius);
                        if (null == t || 0 == t.length) {
                            if (e.curFlyObjNum >= e.flyObjMaxNum) {
                                e.isCreate = !0;
                                break;
                            }
                            continue;
                        }
                        for (let s = 0; s < e.flyObj.M4checkNum; s++) {
                            if (s < t.length) (i = e.flyObj.GetNewInstance()).traceLogicPos.copy(t[s].logicPos), 
                            i.create(this, t[s], i.traceLogicPos), Fe.Instance.addFlyObj(i);
                        }
                    } else {
                        var i;
                        (i = e.flyObj.GetNewInstance()).traceLogicPos.copy(this.skillTargetPos), 1 == e.flyObjPosType ? s > 0 && (i.traceLogicPos.x = u.round(i.traceLogicPos.x + 200 * this.tempNewDir.x * Math.floor(s / 2 + .5) * (s % 2 == 0 ? 1 : -1)), 
                        i.traceLogicPos.y = u.round(i.traceLogicPos.y + 200 * this.tempNewDir.y * Math.floor(s / 2 + .5) * (s % 2 == 0 ? 1 : -1))) : 2 == e.flyObjPosType ? (i.traceLogicPos.x = u.round(this.owner.logicPos.x + 150 * this.tempDir.x * e.curFlyObjNum), 
                        i.traceLogicPos.y = u.round(this.owner.logicPos.y + 150 * this.tempDir.y * e.curFlyObjNum)) : 5 == e.flyObjPosType ? (i.traceLogicPos.x = u.round(this.owner.logicPos.x + 150 * this.initMoveDir.x), 
                        i.traceLogicPos.y = u.round(this.owner.logicPos.y + 150 * this.initMoveDir.y)) : 4 == e.flyObjPosType && (i.moveLineType = 0 == s ? 0 : 1 == s ? 2 : 3), 
                        i.create(this, this.skillTarget, i.traceLogicPos), Fe.Instance.addFlyObj(i), 3 == e.flyObjPosType && s > 0 && (i.logicPos.x = u.round(i.logicPos.x + 100 * this.tempNewDir.x * Math.floor(s / 2 + .5) * (s % 2 == 0 ? 1 : -1)), 
                        i.logicPos.y = u.round(i.logicPos.y + 100 * this.tempNewDir.y * Math.floor(s / 2 + .5) * (s % 2 == 0 ? 1 : -1)), 
                        q.VectorNormal(i.traceLogicPos.x - i.logicPos.x, i.traceLogicPos.y - i.logicPos.y, i.movelogicForwrad), 
                        i.showPos.x = i.logicPos.x / 100, i.showPos.z = i.logicPos.y / 100);
                    }
                    if (e.curFlyObjNum >= e.flyObjMaxNum) {
                        e.isCreate = !0;
                        break;
                    }
                }
            }
        }
        GetSectorPos(e, t, i) {}
        getDamage(e, t) {
            if (null != this.curLvData) {
                var i = this.curLvData.addAtk + this.customFixAtk(e, t);
                this.isBaseSk && e.addBaseSkDamage > 0 && (i += e.addBaseSkDamage * (e.isYCUnit ? 2 : 1));
                var n = 0;
                if (this.isPhyDamage) {
                    var a = u.decimalRound(this.curLvData.damageScale * e.phyAtkScale);
                    n = this.mathPhyDamage(e, t, this.curLvData.addTrueDamage, i, a);
                } else {
                    a = u.decimalRound(this.curLvData.damageScale * e.magAtkScale);
                    n = this.mathMagDamage(e, t, this.curLvData.addTrueDamage, i, a);
                }
                if (s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + e.instanceID + " atk " + t.instanceID + " phyAtk " + e.phyAtk + " addAtk " + i + " damageScale " + a + " targetPhyDef " + t.phyDef + " ignorePhyDef " + e.ignorePhyDef + " penetratePhyDef " + e.penetratePhyDef + " penetratePhyDef " + e.fixBaseSkDamage + " damage " + n), 
                this.isBaseSk && 0 != e.fixBaseSkDamage && (n = u.round(n * (1 + e.fixBaseSkDamage))), 
                e.fixDamageByMaxHp && e.fixDamageByMaxHp.length > 0) {
                    var o = 0;
                    for (let i = 0; i < e.fixDamageByMaxHp.length; i++) {
                        const s = e.fixDamageByMaxHp[i];
                        t.hp <= u.round(t.hpMax * s.hp) && (o += s.addV);
                    }
                    n = u.round(n * (1 + o));
                }
                if (t.fixHitSelfDamageByMaxHp && t.fixHitSelfDamageByMaxHp.length > 0) {
                    o = 0;
                    for (let e = 0; e < t.fixHitSelfDamageByMaxHp.length; e++) {
                        const i = t.fixHitSelfDamageByMaxHp[e];
                        t.hp <= u.round(t.hpMax * i.hp) && (o += i.addV);
                    }
                    (n = u.round(n * (1 + o))) < 0 && (n = 0);
                }
                if (n > 0) {
                    if (this.isBaseSk && e.triggerByAtkBuff && e.triggerByAtkBuff.length > 0) for (let i = 0; i < e.triggerByAtkBuff.length; i++) bl.Instance.AddBuff(e, t, e.triggerByAtkBuff[i], null);
                    if (this.isBaseSk && e.triggerByAtkBuffSelf && e.triggerByAtkBuffSelf.length > 0) for (let i = 0; i < e.triggerByAtkBuffSelf.length; i++) bl.Instance.AddBuff(t, e, e.triggerByAtkBuffSelf[i], null);
                    if (!this.isBaseSk && e.triggerSkDamageBuff && e.triggerSkDamageBuff.length > 0) for (let i = 0; i < e.triggerSkDamageBuff.length; i++) bl.Instance.AddBuff(e, t, e.triggerSkDamageBuff[i], null);
                    if (!this.isBaseSk && e.triggerSkDamageBuffSelf && e.triggerSkDamageBuffSelf.length > 0) for (let i = 0; i < e.triggerSkDamageBuffSelf.length; i++) bl.Instance.AddBuff(t, e, e.triggerSkDamageBuffSelf[i], null);
                    if (t.triggerByAtkBuff && t.triggerByAtkBuff.length > 0) for (let i = 0; i < t.triggerByAtkBuff.length; i++) bl.Instance.AddBuff(t, e, t.triggerByAtkBuff[i], null);
                    if (t.triggerByAtkBuffSelf && t.triggerByAtkBuffSelf.length > 0) for (let i = 0; i < t.triggerByAtkBuffSelf.length; i++) bl.Instance.AddBuff(e, t, t.triggerByAtkBuffSelf[i], null);
                }
                return n = this.customFixDamage(n, e, t);
            }
        }
        customFixAtk(e, t) {
            return 0;
        }
        customFixDamage(e, t, i) {
            return e;
        }
        mathPhyDamage(e, t, i, s, n) {
            var a = t.phyDef - e.ignorePhyDef;
            a < 0 && (a = 0);
            var o = 1 - e.penetratePhyDef;
            o < 0 && (o = 0), a = Math.floor(a * o);
            var l = (e.phyAtk * n + s) * (1 - a / (a + 602));
            return u.round(l + i);
        }
        mathMagDamage(e, t, i, s, n) {
            var a = t.magDef - e.ignoreMagDef;
            a < 0 && (a = 0);
            var o = 1 - e.penetrateMagDef;
            o < 0 && (o = 0), a = Math.floor(a * o);
            var l = (e.magAtk * n + s) * (1 - a / (a + 602));
            return u.round(l + i);
        }
        colliderCallBack(e, t) {
            null == this.curLvData && console.log("技能错误 skillid " + this.skillID + " lv " + this.lv);
            for (var i = 0; i < e.length; i++) {
                var n = e[i], a = Math.floor(this.getDamage(this.owner, n) * t);
                if (null != this.curLvData && null != this.curLvData.buffID) for (let e = 0; e < this.curLvData.buffID.length; e++) {
                    const t = this.curLvData.buffID[e];
                    bl.Instance.AddBuff(this.owner, n, t, this);
                }
                if (null != this.curLvData && null != this.curLvData.hitBuff) for (let e = 0; e < this.curLvData.hitBuff.length; e++) {
                    const t = this.curLvData.hitBuff[e];
                    t && (0 == t.triggerUnit || 1 == t.triggerUnit && n.unitType == me.HERO) && (0 == t.addType ? bl.Instance.AddBuff(this.owner, n, t.buffID, this) : 1 == t.addType && bl.Instance.AddBuff(this.owner, this.owner, t.buffID, this));
                }
                var o = !1;
                if (a < 0) a = 1; else {
                    var l = u.random();
                    this.isSuperDamage && this.owner.superAtk > 0 && this.owner.superAtk >= l && (o = !0, 
                    a = u.round(a * this.owner.superAtkRatio));
                }
                s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.owner.instanceID + " skID " + this.skillID + " atk " + n.instanceID + " damage " + a + " isSuperDamage " + o), 
                this.owner.superAtk >= 1e3 && (this.owner.superAtk -= 1e3), n.changeHp(this.owner, -1 * a, o, this.isPhyDamage ? 1 : 2), 
                this.onDamageEnd(this.owner, n), this.recoverHpType > 0 && this.owner.changeHp(this.owner, u.round(a * (1 == this.recoverHpType ? this.owner.phyAtkRecoverHP : this.owner.magAtkRecoverHP) * this.recoverHpValue));
            }
        }
    }
    class ql extends Kl {
        GetNewInstance() {
            return new ql();
        }
        constructor() {
            super(), this.skillID = 100, this.skillPriority = 1, this.skillName = "回城", this.skillInfo = "", 
            this.skillIcon = "icon/jntb_huicheng.png", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_hctx.lh" ], 
            this.startSound = "", this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, 
            this.skillUseRadius = 2, this.lv = 1, this.lvData[1] = new Wl(1, 50, 0, 0, .8, null, null, null), 
            this.cdType = 0, this.cdFixType = 0, this.playTime = 5100, this.playTimeFixType = 0, 
            this.skillAnim = "idle", this.skillAnimLoop = !1, this.isMoveInterrupt = 50, this.isShowUI = !1, 
            this.flyObj = [ new Xl(new zl()), new Xl(new Yl(), 5e3) ];
        }
    }
    class zl extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new zl();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_huicheng1", this.effectName = "3dres/effect/e_hctx.lh", 
            this.flySpeed = 0, this.flytime = 5e3, this.moveType = 3, this.destroyType = 1;
        }
    }
    class Yl extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Yl();
        }
        onCreate() {}
        constructor() {
            super(), this.poolKey = "flyobj_skill_huicheng2", this.flySpeed = -1;
        }
    }
    class Jl extends Kl {
        GetNewInstance() {
            return new Jl();
        }
        constructor() {
            super(), this.skillID = 101, this.skillName = "基地恢复己方", this.lv = 1, this.lvData[1] = new Wl(1, 50, 0, 0, 1, [ 3 ]), 
            this.flyObj = [ new Xl(new Ql()) ];
        }
    }
    class Ql extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ql();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_huifujidi1", this.effectName = "3dres/effect/e_cbjn3b.lh", 
            this.flySpeed = 0, this.flytime = 9999999999, this.moveType = 0, this.colliderRadius = 3, 
            this.colliderUnitType = [ 12 ], this.colliderCheckTime = 1e3;
        }
    }
    class Zl extends Kl {
        GetNewInstance() {
            return new Zl();
        }
        constructor() {
            super(), this.skillID = 102, this.skillName = "基地恢复敌方", this.lv = 1, this.lvData[1] = new Wl(1, 50, 0, 0, 1, [ 3 ]), 
            this.flyObj = [ new Xl(new $l()) ];
        }
    }
    class $l extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new $l();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_huifujidi2", this.effectName = "3dres/effect/e_cbjn3b.lh", 
            this.flySpeed = 0, this.flytime = 9999999999, this.moveType = 0, this.colliderRadius = 3, 
            this.colliderUnitType = [ 2 ], this.colliderCheckTime = 1e3;
        }
    }
    class eh extends Kl {
        GetNewInstance() {
            return new eh();
        }
        constructor() {
            super(), this.skillID = 1, this.skillPriority = 0, this.skillName = "恢复", this.skillInfo = "恢复20%生命值", 
            this.skillIcon = "common/daoju_img_004.png", this.resListName = [ "3dres/effect/e_huixue.lh" ], 
            this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 2, this.skillUseType = 0, 
            this.skillUseRadius = 1, this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(1, 3e4, 100, 0, 1, null, [ 52 ]), 
            this.lvData[2] = new Wl(1, 3e4, 100, 0, 1, null, [ 3 ]), this.cdType = 0, this.playTime = 0, 
            this.cdFixType = 0;
        }
    }
    class th extends Kl {
        GetNewInstance() {
            return new th();
        }
        onSkillInitLv(e) {
            switch (e) {
              case 1:
                this.skillUseRadius = 1.25;
                break;

              case 2:
                this.skillUseRadius = 1.5;
                break;

              case 3:
                this.skillUseRadius = 1.75;
                break;

              case 4:
                this.skillUseRadius = 2;
                break;

              case 5:
                this.skillUseRadius = 2.25;
                break;

              case 6:
                this.skillUseRadius = 2.5;
                break;

              case 7:
                this.skillUseRadius = 2.75;
                break;

              case 8:
                this.skillUseRadius = 3;
                break;

              case 9:
                this.skillUseRadius = 3.25;
                break;

              case 10:
                this.skillUseRadius = 3.5;
                break;

              case 11:
                this.skillUseRadius = 1;
                break;

              default:
                this.skillUseRadius = 3.5;
            }
        }
        constructor() {
            super(), this.skillID = 2, this.skillPriority = 1, this.skillName = "闪现", this.skillInfo = "向指定位置跳跃一段距离", 
            this.skillIcon = "icon/jntb_shanxian.png", this.skillTypeName = "位移", this.startSound = "sound/skill_ez_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 2, this.skillUseType = 1, this.skillUseRadius = 4.2, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 10, this.lvData[1] = new Wl(0, 15e4, 0, 0, 0, null, null, null, null, "闪现距离125码"), 
            this.lvData[2] = new Wl(0, 14e4, 0, 0, 0, null, null, null, null, "闪现距离150码"), this.lvData[3] = new Wl(0, 13e4, 0, 0, 0, null, null, null, null, "闪现距离175码"), 
            this.lvData[4] = new Wl(0, 12e4, 0, 0, 0, null, null, null, null, "闪现距离200码"), this.lvData[5] = new Wl(0, 11e4, 0, 0, 0, null, null, null, null, "闪现距离225码"), 
            this.lvData[6] = new Wl(0, 1e5, 0, 0, 0, null, null, null, null, "闪现距离250码"), this.lvData[7] = new Wl(0, 9e4, 0, 0, 0, null, null, null, null, "闪现距离275码"), 
            this.lvData[8] = new Wl(0, 8e4, 0, 0, 0, null, null, null, null, "闪现距离300码"), this.lvData[9] = new Wl(0, 7e4, 0, 0, 0, null, null, null, null, "闪现距离325码"), 
            this.lvData[10] = new Wl(0, 6e4, 0, 0, 0, null, null, null, null, "闪现距离350码"), this.lvData[11] = new Wl(0, 18e4, 0, 0, 0, null, null, null, null, "闪现距离100码"), 
            this.playTime = 0, this.cdFixType = 0, this.skillAnim = "idle", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new ih()), new Xl(new sh()) ], this.moveHeroType = 1, this.moveHeroTime = 0, 
            this.cdFixType = 0;
        }
    }
    class ih extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ih();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_shanxian1", this.effectName = "3dres/effect/e_ezjn2a.lh", 
            this.flySpeed = 0, this.moveType = 1, this.colliderRadius = 1, this.flytime = 750, 
            this.noDamage = !0;
        }
    }
    class sh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new sh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_shanxian2", this.effectName = "3dres/effect/e_ezjn2b.lh", 
            this.flySpeed = 0, this.moveType = 2, this.flytime = 750, this.noDamage = !0;
        }
    }
    class nh extends Kl {
        GetNewInstance() {
            return new nh();
        }
        constructor() {
            super(), this.skillID = 3, this.skillPriority = 1, this.skillName = "守护", this.skillInfo = "受到所有伤害降低一定比例", 
            this.skillIcon = "icon/jntb_shouhu.png", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4.2, this.lv = 0, 
            this.maxlv = 10, this.lvData[1] = new Wl(0, 0, 0, 0, 0, null, null, [ 4 ], null, "受到所有伤害降低1%"), 
            this.lvData[2] = new Wl(0, 0, 0, 0, 0, null, null, [ 5 ], null, "受到所有伤害降低2%"), this.lvData[3] = new Wl(0, 0, 0, 0, 0, null, null, [ 6 ], null, "受到所有伤害降低3%"), 
            this.lvData[4] = new Wl(0, 0, 0, 0, 0, null, null, [ 7 ], null, "受到所有伤害降低4%"), this.lvData[5] = new Wl(0, 0, 0, 0, 0, null, null, [ 8 ], null, "受到所有伤害降低5%"), 
            this.lvData[6] = new Wl(0, 0, 0, 0, 0, null, null, [ 9 ], null, "受到所有伤害降低6%"), this.lvData[7] = new Wl(0, 0, 0, 0, 0, null, null, [ 10 ], null, "受到所有伤害降低7%"), 
            this.lvData[8] = new Wl(0, 0, 0, 0, 0, null, null, [ 11 ], null, "受到所有伤害降低8%"), 
            this.lvData[9] = new Wl(0, 0, 0, 0, 0, null, null, [ 12 ], null, "受到所有伤害降低9%"), 
            this.lvData[10] = new Wl(0, 0, 0, 0, 0, null, null, [ 13 ], null, "受到所有伤害降低10%"), 
            this.playTime = 0, this.isShowUI = !1, this.cdFixType = 0;
        }
    }
    class ah extends Kl {
        GetNewInstance() {
            return new ah();
        }
        constructor() {
            super(), this.skillID = 4, this.skillPriority = 1, this.skillName = "不朽", this.skillInfo = "受到致命伤害时,获得短暂无敌", 
            this.skillIcon = "icon/jntb_buxiu.png", this.resListName = [ "3dres/effect/e_cbjn3b.lh" ], 
            this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, 
            this.skillUseRadius = 4.2, this.lv = 0, this.maxlv = 10, this.lvData[1] = new Wl(0, 24e4, 0, 0, 0, null, null, [ 14 ], null, "受到致命伤害时,立即恢复生命3%,并获得无敌持续0.1秒"), 
            this.lvData[2] = new Wl(0, 23e4, 0, 0, 0, null, null, [ 15 ], null, "受到致命伤害时,立即恢复生命6%,并获得无敌持续0.2秒"), 
            this.lvData[3] = new Wl(0, 22e4, 0, 0, 0, null, null, [ 16 ], null, "受到致命伤害时,立即恢复生命9%,并获得无敌持续0.3秒"), 
            this.lvData[4] = new Wl(0, 21e4, 0, 0, 0, null, null, [ 17 ], null, "受到致命伤害时,立即恢复生命12%,并获得无敌持续0.4秒"), 
            this.lvData[5] = new Wl(0, 2e5, 0, 0, 0, null, null, [ 18 ], null, "受到致命伤害时,立即恢复生命15%,并获得无敌持续0.5秒"), 
            this.lvData[6] = new Wl(0, 19e4, 0, 0, 0, null, null, [ 19 ], null, "受到致命伤害时,立即恢复生命18%,并获得无敌持续0.6秒"), 
            this.lvData[7] = new Wl(0, 18e4, 0, 0, 0, null, null, [ 20 ], null, "受到致命伤害时,立即恢复生命21%,并获得无敌持续0.7秒"), 
            this.lvData[8] = new Wl(0, 17e4, 0, 0, 0, null, null, [ 21 ], null, "受到致命伤害时,立即恢复生命24%,并获得无敌持续0.8秒"), 
            this.lvData[9] = new Wl(0, 16e4, 0, 0, 0, null, null, [ 22 ], null, "受到致命伤害时,立即恢复生命27%,并获得无敌持续0.9秒"), 
            this.lvData[10] = new Wl(0, 15e4, 0, 0, 0, null, null, [ 23 ], null, "受到致命伤害时,立即恢复生命30%,并获得无敌持续1.0秒"), 
            this.playTime = 0, this.isShowUI = !1, this.cdFixType = 0;
        }
    }
    class oh extends Kl {
        GetNewInstance() {
            return new oh();
        }
        constructor() {
            super(), this.skillID = 9, this.skillPriority = 1, this.skillName = "守护", this.skillInfo = "所有伤害提升", 
            this.skillIcon = "icon/jntb_shouhu.png", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4.2, this.lv = 0, 
            this.maxlv = 10, this.lvData[1] = new Wl(0, 0, 0, 0, 0, null, null, [ 4 ], null, "受到所有伤害降低1%"), 
            this.lvData[2] = new Wl(0, 0, 0, 0, 0, null, null, [ 5 ], null, "受到所有伤害降低2%"), this.lvData[3] = new Wl(0, 0, 0, 0, 0, null, null, [ 6 ], null, "受到所有伤害降低3%"), 
            this.lvData[4] = new Wl(0, 0, 0, 0, 0, null, null, [ 7 ], null, "受到所有伤害降低4%"), this.lvData[5] = new Wl(0, 0, 0, 0, 0, null, null, [ 8 ], null, "受到所有伤害降低5%"), 
            this.lvData[6] = new Wl(0, 0, 0, 0, 0, null, null, [ 9 ], null, "受到所有伤害降低6%"), this.lvData[7] = new Wl(0, 0, 0, 0, 0, null, null, [ 10 ], null, "受到所有伤害降低7%"), 
            this.lvData[8] = new Wl(0, 0, 0, 0, 0, null, null, [ 11 ], null, "受到所有伤害降低8%"), 
            this.lvData[9] = new Wl(0, 0, 0, 0, 0, null, null, [ 12 ], null, "受到所有伤害降低9%"), 
            this.lvData[10] = new Wl(0, 0, 0, 0, 0, null, null, [ 13 ], null, "受到所有伤害降低10%"), 
            this.playTime = 0, this.isShowUI = !1, this.cdFixType = 0;
        }
    }
    class lh extends Kl {
        GetNewInstance() {
            return new lh();
        }
        constructor() {
            super(), this.skillID = 5, this.skillPriority = 1, this.skillName = "超级震荡波", this.skillInfo = "敌方英雄、小兵扣除血量50%并眩晕15秒", 
            this.skillIcon = "icon/xp_img_003.png", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4.2, this.lv = 1, 
            this.maxlv = 1, this.lvData[1] = new Wl(0, 18e4, 0, 0, 0, [ 804, 806 ]), this.playTime = 0, 
            this.isShowUI = !1, this.cdFixType = 0, this.flyObj = [ new Xl(new hh()) ];
        }
    }
    class hh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new hh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_cjzzb", this.effectName = "3dres/effect/e_xpjn1.lh", 
            this.completeType = 1, this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0, 
            this.colliderNum = 1, this.colliderRadius = 1e5, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class rh extends Kl {
        GetNewInstance() {
            return new rh();
        }
        constructor() {
            super(), this.skillID = 6, this.skillPriority = 1, this.skillName = "王者守护", this.skillInfo = "我方防御塔无敌10秒并立即恢复50%生命!", 
            this.skillIcon = "icon/xp_img_002.png", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4.2, this.lv = 1, 
            this.maxlv = 1, this.lvData[1] = new Wl(0, 18e4, 0, 0, 0, [ 802, 807 ]), this.playTime = 0, 
            this.isShowUI = !1, this.cdFixType = 0, this.flyObj = [ new Xl(new ch()) ];
        }
    }
    class ch extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ch();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_wzsh", this.effectName = "3dres/effect/e_xpjn2.lh", 
            this.completeType = 1, this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0, 
            this.colliderNum = 1, this.colliderRadius = 1e5, this.colliderUnitType = [ 13 ];
        }
    }
    class dh extends Kl {
        GetNewInstance() {
            return new dh();
        }
        constructor() {
            super(), this.skillID = 7, this.skillPriority = 1, this.skillName = "究极进化", this.skillInfo = "我方所有英雄伤害永久提升10%，受到的伤害永久降低10%,多人使用效果可叠加。(使用者效果翻倍)", 
            this.skillIcon = "icon/xp_img_004.png", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4.2, this.lv = 1, 
            this.maxlv = 1, this.lvData[1] = new Wl(0, 999999999, 0, 0, 0, [ 801 ], [ 805 ]), 
            this.playTime = 0, this.isShowUI = !1, this.cdFixType = 0, this.flyObj = [ new Xl(new uh()) ];
        }
    }
    class uh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new uh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_jjjh", this.effectName = "3dres/effect/e_xpjn3.lh", 
            this.completeType = 1, this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0, 
            this.colliderNum = 1, this.colliderRadius = 1e5, this.colliderUnitType = [ 12 ];
        }
    }
    class ph extends Kl {
        GetNewInstance() {
            return new ph();
        }
        constructor() {
            super(), this.skillID = 8, this.skillPriority = 1, this.skillName = "狂暴", this.skillInfo = "自己立即获得：80%冷却缩减，100%暴击几率，攻速增加+100%，所有伤害提升50%，持续60秒！", 
            this.skillIcon = "icon/jntb_kb.png", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4.2, this.lv = 1, 
            this.maxlv = 1, this.lvData[1] = new Wl(0, 18e4, 0, 0, 0, null, [ 500, 501, 502, 508, 812 ]), 
            this.playTime = 0, this.isShowUI = !1, this.cdFixType = 0, this.flyObj = [ new Xl(new mh()) ];
        }
    }
    class mh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new mh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_kbms", this.effectName = "3dres/effect/e_xpjn3.lh", 
            this.completeType = 1, this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0;
        }
    }
    class gh extends Kl {
        GetNewInstance() {
            return new gh();
        }
        constructor() {
            super(), this.skillID = 9, this.skillPriority = 1, this.skillName = "重击", this.skillInfo = "所有伤害提升", 
            this.skillIcon = "icon/jntb_zhongji.png", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4.2, this.lv = 0, 
            this.maxlv = 10, this.lvData[1] = new Wl(0, 0, 0, 0, 0, null, null, [ 42 ], null, "英雄所有伤害提升1%"), 
            this.lvData[2] = new Wl(0, 0, 0, 0, 0, null, null, [ 43 ], null, "英雄所有伤害提升2%"), 
            this.lvData[3] = new Wl(0, 0, 0, 0, 0, null, null, [ 44 ], null, "英雄所有伤害提升3%"), 
            this.lvData[4] = new Wl(0, 0, 0, 0, 0, null, null, [ 45 ], null, "英雄所有伤害提升4%"), 
            this.lvData[5] = new Wl(0, 0, 0, 0, 0, null, null, [ 46 ], null, "英雄所有伤害提升5%"), 
            this.lvData[6] = new Wl(0, 0, 0, 0, 0, null, null, [ 47 ], null, "英雄所有伤害提升6%"), 
            this.lvData[7] = new Wl(0, 0, 0, 0, 0, null, null, [ 48 ], null, "英雄所有伤害提升7%"), 
            this.lvData[8] = new Wl(0, 0, 0, 0, 0, null, null, [ 49 ], null, "英雄所有伤害提升8%"), 
            this.lvData[9] = new Wl(0, 0, 0, 0, 0, null, null, [ 50 ], null, "英雄所有伤害提升9%"), 
            this.lvData[10] = new Wl(0, 0, 0, 0, 0, null, null, [ 51 ], null, "英雄所有伤害提升10%"), 
            this.playTime = 0, this.isShowUI = !1, this.cdFixType = 0;
        }
    }
    class fh extends Kl {
        GetNewInstance() {
            return new fh();
        }
        constructor() {
            super(), this.skillID = 1e3, this.skillPriority = 0, this.skillName = "小兵单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 1, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 2e3, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 1e3, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.flyObj = [ new Xl(new Ih()) ];
        }
    }
    class Ih extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ih();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xbpg", this.effectName = "", this.flySpeed = -1, 
            this.moveType = 1, this.isLockTarget = !0, this.colliderNum = 1, this.colliderRadius = 1, 
            this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class vh extends Kl {
        GetNewInstance() {
            return new vh();
        }
        constructor() {
            super(), this.skillID = 1100, this.skillPriority = 0, this.skillName = "野怪单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 1, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 4e3, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 0, this.playTime = 1e3, this.playTimeFixType = 0, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.flyObj = [ new Xl(new Ih()) ];
        }
    }
    class _h extends Kl {
        GetNewInstance() {
            return new _h();
        }
        constructor() {
            super(), this.skillID = 1001, this.skillPriority = 0, this.skillName = "小兵单体远程普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 4, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 2e3, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 1e3, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.flyObj = [ new Xl(new yh()) ];
        }
    }
    class yh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new yh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xbycpg", this.effectName = "", this.flySpeed = 1, 
            this.moveType = 1, this.isLockTarget = !0, this.colliderNum = 1, this.colliderRadius = 1, 
            this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Sh extends Kl {
        GetNewInstance() {
            return new Sh();
        }
        constructor() {
            super(), this.skillID = 1002, this.skillPriority = 0, this.skillName = "小水晶单体远程普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 6, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1500, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 1e3, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.flyObj = [ new Xl(new wh()), new Xl(new Dh(), 500) ];
        }
    }
    class wh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new wh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xsjycpgjq", this.effectName = "3dres/effect/e_fytl_juqi.lh", 
            this.flySpeed = 0, this.moveType = 1, this.effectObjHeightType = 2, this.isLockTarget = !0, 
            this.flytime = 500, this.noDamage = !0;
        }
    }
    class Dh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Dh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xsjycpg", this.effectName = "3dres/effect/e_fytl_zidan.lh", 
            this.flySpeed = 6, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 2, 
            this.colliderNum = 1, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class kh extends Kl {
        GetNewInstance() {
            return new kh();
        }
        constructor() {
            super(), this.skillID = 1003, this.skillPriority = 0, this.skillName = "血包", this.skillInfo = "恢复20%生命值", 
            this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_xuebao.lh", "3dres/effect/e_huixue.lh" ], 
            this.skillNeddLv = 0, this.skillType = 2, this.skillUseType = 0, this.skillUseRadius = 1, 
            this.colliderUnitType = [ 2, 12 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(1, 100, 0, 0, 0, [ 2 ]), 
            this.cdType = 0, this.playTime = 0, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Ch()) ];
        }
    }
    class Ch extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ch();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xuebao", this.effectName = "3dres/effect/e_xuebao.lh", 
            this.flytime = 15e3, this.moveType = 0, this.colliderTime = 500, this.colliderNum = 1, 
            this.colliderNumHitAdd = 1, this.colliderRadius = 1, this.colliderUnitType = [ 2, 12 ];
        }
    }
    class bh extends Kl {
        GetNewInstance() {
            return new bh();
        }
        constructor() {
            super(), this.skillID = 1004, this.skillPriority = 0, this.skillName = "攻击", this.skillInfo = "物理、法术攻击提升", 
            this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_jyshu1.lh" ], 
            this.skillNeddLv = 0, this.skillType = 2, this.skillUseType = 0, this.skillUseRadius = 1, 
            this.colliderUnitType = [ 32 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(1, 100, 0, 0, 0, [ 504 ]), 
            this.cdType = 0, this.playTime = 0, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Ph()) ];
        }
    }
    class Ph extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ph();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_gongjishu", this.effectName = "3dres/effect/e_jyshu1.lh", 
            this.flytime = 6e4, this.moveType = 0, this.colliderTime = 500, this.colliderNum = 1, 
            this.colliderNumHitAdd = 1, this.colliderRadius = 1, this.colliderUnitType = [ 32 ];
        }
    }
    class xh extends Kl {
        GetNewInstance() {
            return new xh();
        }
        constructor() {
            super(), this.skillID = 1005, this.skillPriority = 0, this.skillName = "最大生命", this.skillInfo = "最大生命提升", 
            this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_jyshu3.lh" ], 
            this.skillNeddLv = 0, this.skillType = 2, this.skillUseType = 0, this.skillUseRadius = 1, 
            this.colliderUnitType = [ 32 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(1, 100, 0, 0, 0, [ 505 ]), 
            this.cdType = 0, this.playTime = 0, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Th()) ];
        }
    }
    class Th extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Th();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xueliangshu", this.effectName = "3dres/effect/e_jyshu3.lh", 
            this.flytime = 6e4, this.moveType = 0, this.colliderTime = 500, this.colliderNum = 1, 
            this.colliderNumHitAdd = 1, this.colliderRadius = 1, this.colliderUnitType = [ 32 ];
        }
    }
    class Uh extends Kl {
        GetNewInstance() {
            return new Uh();
        }
        constructor() {
            super(), this.skillID = 1006, this.skillPriority = 0, this.skillName = "防御", this.skillInfo = "物理、法术防御提升", 
            this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_jyshu4.lh" ], 
            this.skillNeddLv = 0, this.skillType = 2, this.skillUseType = 0, this.skillUseRadius = 1, 
            this.colliderUnitType = [ 32 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(1, 100, 0, 0, 0, [ 506 ]), 
            this.cdType = 0, this.playTime = 0, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Lh()) ];
        }
    }
    class Lh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Lh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_fangyushu", this.effectName = "3dres/effect/e_jyshu4.lh", 
            this.flytime = 6e4, this.moveType = 0, this.colliderTime = 500, this.colliderNum = 1, 
            this.colliderNumHitAdd = 1, this.colliderRadius = 1, this.colliderUnitType = [ 32 ];
        }
    }
    class Nh extends Kl {
        GetNewInstance() {
            return new Nh();
        }
        constructor() {
            super(), this.skillID = 1007, this.skillPriority = 0, this.skillName = "冷却缩减", this.skillInfo = "技能冷却缩减提升", 
            this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_jyshu2.lh" ], 
            this.skillNeddLv = 0, this.skillType = 2, this.skillUseType = 0, this.skillUseRadius = 1, 
            this.colliderUnitType = [ 32 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(1, 100, 0, 0, 0, [ 507 ]), 
            this.cdType = 0, this.playTime = 0, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Mh()) ];
        }
    }
    class Mh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Mh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_jingyanshu", this.effectName = "3dres/effect/e_jyshu2.lh", 
            this.flytime = 6e4, this.moveType = 0, this.colliderTime = 500, this.colliderNum = 1, 
            this.colliderNumHitAdd = 1, this.colliderRadius = 1, this.colliderUnitType = [ 32 ];
        }
    }
    class Ah extends Kl {
        GetNewInstance() {
            return new Ah();
        }
        constructor() {
            super(), this.skillID = 1008, this.skillPriority = 1, this.skillName = "防御塔减伤", 
            this.skillInfo = "减少30%伤害", this.skillIcon = "icon/jntb_zhanshi02.png", this.skillTypeName = "伤害", 
            this.startSound = "sound/skill_zs_jn1.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = .5, this.colliderUnitType = [ 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(1, 1e3, 0, 0, 0, null, [ 808 ]), 
            this.playTime = 0, this.cdFixType = 2;
        }
    }
    class Oh extends Kl {
        GetNewInstance() {
            return new Oh();
        }
        constructor() {
            super(), this.skillID = 1009, this.skillPriority = 0, this.skillName = "小水晶单体远程普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 6, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1500, 0, 0, 1, [ 811 ], null, [ 808 ]), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 1e3, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.flyObj = [ new Xl(new Eh()), new Xl(new Gh(), 500) ];
        }
    }
    class Eh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Eh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xsjycpgjq", this.effectName = "3dres/effect/e_fytl_juqi.lh", 
            this.flySpeed = 0, this.moveType = 1, this.effectObjHeightType = 2, this.isLockTarget = !0, 
            this.flytime = 500, this.noDamage = !0;
        }
    }
    class Gh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Gh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xsjycpg", this.effectName = "3dres/effect/e_fytl_zidan.lh", 
            this.flySpeed = 6, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 2, 
            this.colliderNum = 1, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class Rh extends Kl {
        GetNewInstance() {
            return new Rh();
        }
        constructor() {
            super(), this.skillID = 1010, this.skillPriority = 0, this.skillName = "小水晶单体远程普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 6, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 500, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 1e3, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.flyObj = [ new Xl(new Bh()), new Xl(new Hh(), 500) ];
        }
    }
    class Bh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Bh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xsjycpgjq", this.effectName = "3dres/effect/e_fytl_juqi.lh", 
            this.flySpeed = 0, this.moveType = 1, this.effectObjHeightType = 2, this.isLockTarget = !0, 
            this.flytime = 500, this.noDamage = !0;
        }
    }
    class Hh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Hh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_xsjycpg", this.effectName = "3dres/effect/e_fytl_zidan.lh", 
            this.flySpeed = 6, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 2, 
            this.colliderNum = 1, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class Fh extends Kl {
        GetNewInstance() {
            return new Fh();
        }
        constructor() {
            super(), this.skillID = 3020, this.skillPriority = 0, this.skillName = "刺客单体近战普攻", 
            this.startSound = "sound/skill_ck_pg.mp3", this.skillInfo = "", this.skillIcon = "", 
            this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, 
            this.skillUseRadius = 1.5, this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, 
            this.lvData[1] = new Wl(0, 1122, 0, 0, 1), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 360, this.playTimeFixType = 1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.flyObj = [ new Xl(new Vh()) ];
        }
    }
    class Vh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Vh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxckpg", this.effectName = "3dres/effect/e_JSckgj.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class jh extends Kl {
        GetNewInstance() {
            return new jh();
        }
        constructor() {
            super(), this.skillID = 3021, this.skillPriority = 1, this.skillName = "手里剑", this.skillInfo = "扔出一枚手里剑恢复一定生命值,对路径上敌人造成伤害并减速1秒", 
            this.skillIcon = "icon/jntb_wushi01.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_ck_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 7e3, 100, 0, .8, [ 1006 ], [ 1010 ]), 
            this.lvData[2] = new Wl(3, 6600, 150, 0, .8, [ 1006 ], [ 1012 ]), this.lvData[3] = new Wl(5, 6200, 200, 0, .8, [ 1006 ], [ 1013 ]), 
            this.lvData[4] = new Wl(7, 5800, 275, 0, .8, [ 1006 ], [ 1014 ]), this.lvData[5] = new Wl(9, 5400, 350, 0, .8, [ 1006 ], [ 1015 ]), 
            this.lvData[6] = new Wl(11, 5e3, 425, 0, .8, [ 1006 ], [ 1016 ]), this.cdType = 0, 
            this.cdFixType = 2, this.playTime = 360, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, this.isSuperDamage = !1, 
            this.flyObj = [ new Xl(new Wh()) ];
        }
    }
    class Wh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Wh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxckjn1", this.effectName = "3dres/effect/e_JSckjn1.lh", 
            this.flySpeed = 10, this.flytime = 400, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Xh extends Kl {
        GetNewInstance() {
            return new Xh();
        }
        constructor() {
            super(), this.skillID = 3022, this.skillPriority = 1, this.skillName = "爆弹", this.skillInfo = "向指定位置投掷一枚爆弹对范围内敌人造成伤害,并获得能抵消伤害的护盾", 
            this.skillIcon = "icon/jntb_wushi02.png", this.skillTypeName = "伤害", this.resListName = [ "3dres/effect/e_JSckjn2hd.lh" ], 
            this.startSound = "sound/skill_ck_jn2.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 1.6, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 100, 0, .6, null, [ 1003 ]), 
            this.lvData[2] = new Wl(3, 11e3, 125, 0, .6, null, [ 1017 ]), this.lvData[3] = new Wl(5, 1e4, 150, 0, .6, null, [ 1018 ]), 
            this.lvData[4] = new Wl(7, 9e3, 225, 0, .6, null, [ 1019 ]), this.lvData[5] = new Wl(9, 8e3, 300, 0, .6, null, [ 1020 ]), 
            this.lvData[6] = new Wl(9, 7e3, 375, 0, .6, null, [ 1021 ]), this.cdType = 0, this.cdFixType = 2, 
            this.playTime = 0, this.playTimeFixType = 1, this.recoverHpType = 0, this.isSuperDamage = !1, 
            this.flyObj = [ new Xl(new Kh()) ];
        }
    }
    class Kh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Kh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxckjn2", this.effectName = "3dres/effect/e_JSckjn2bz.lh", 
            this.flytime = 600, this.moveType = 2, this.colliderNum = 0, this.colliderRadius = 1.6, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class qh extends Kl {
        GetNewInstance() {
            return new qh();
        }
        constructor() {
            super(), this.skillID = 3023, this.skillPriority = 1, this.skillName = "影袭", this.skillInfo = "向指定位置发起影袭,对路径上敌人造成伤害,到达指定位置后对周围敌人进行旋斩(如旋斩击中敌方英雄则爆弹CD清零)", 
            this.skillIcon = "icon/jntb_wushi03.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_ck_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 4, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 1e4, 250, 0, .8), 
            this.lvData[2] = new Wl(8, 9e3, 450, 0, .8), this.lvData[3] = new Wl(12, 8e3, 700, 0, .8), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 600, this.skillAnim = "skill", 
            this.skillAnimLoop = !1, this.moveHeroType = 1, this.moveHeroTime = 200, this.recoverHpType = 0, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new zh()), new Xl(new Yh(), 400) ];
        }
    }
    class zh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new zh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxckjn3", this.effectName = "", this.flytime = 200, 
            this.moveType = 2, this.colliderNum = 0, this.colliderRadius = 1.25, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Yh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Yh();
        }
        onCollider(e) {
            if (e) for (let t = 0; t < e.length; t++) {
                if (e[t].unitType == me.HERO) return void (this.ownerSk.owner.skillData[2].curCD = 0);
            }
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxckjn4", this.effectName = "3dres/effect/e_JSckjn3dg.lh", 
            this.flytime = 800, this.moveType = 2, this.colliderNum = 0, this.colliderRadius = 3, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class Jh extends Kl {
        GetNewInstance() {
            return new Jh();
        }
        constructor() {
            super(), this.skillID = 3010, this.skillPriority = 0, this.skillName = "战士单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_zs_pg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, 1), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 550, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new Qh()) ];
        }
    }
    class Qh extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Qh();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzspg", this.effectName = "3dres/effect/e_zsdg.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Zh extends Kl {
        GetNewInstance() {
            return new Zh();
        }
        constructor() {
            super(), this.skillID = 3110, this.skillPriority = 1, this.skillName = "战士单体近战普攻强化版", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_zs_pg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 3, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.curCD = 99999999, 
            this.lvData[1] = new Wl(0, 99999999, 0, 0, 1, [ 1e3 ]), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 550, this.playTimeFixType = 1, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Qh()) ], this.moveHeroType = 1, this.moveHeroTime = 100, 
            this.recoverHpType = 1, this.recoverHpValue = 1, this.isMustHaveTarget = !0, this.isShowUI = !1;
        }
    }
    class $h extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 3011, this.skillPriority = 1, this.skillName = "无畏", 
            this.skillInfo = "使用后提高移速3秒,下次普攻变为跳斩,可快速冲向敌人造成伤害并减速敌人2秒", this.skillIcon = "icon/jntb_zhanshi02.png", 
            this.skillTypeName = "伤害", this.startSound = "sound/skill_zs_jn1.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = .5, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 11e3, 180, 0, 1, null, [ 1001 ]), 
            this.lvData[2] = new Wl(3, 1e4, 205, 0, 1, null, [ 1001 ]), this.lvData[3] = new Wl(5, 9e3, 230, 0, 1, null, [ 1001 ]), 
            this.lvData[4] = new Wl(7, 8e3, 255, 0, 1, null, [ 1001 ]), this.lvData[5] = new Wl(9, 7e3, 280, 0, 1, null, [ 1001 ]), 
            this.lvData[6] = new Wl(11, 6e3, 305, 0, 1, null, [ 1001 ]), this.playTime = 0, 
            this.cdFixType = 2;
        }
        GetNewInstance() {
            return new $h();
        }
        onSkillStart() {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3110, !1), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.owner.skillReplace(0, this.sk_pgqhIndex, 3e3, 1), 
            this.sk_pgqh.curCD = 0, this.sk_pgqh.curLvData.addAtk = this.curLvData.addAtk, this.sk_pgqh.curLvData.addTrueDamage = this.curLvData.addTrueDamage, 
            this.sk_pgqh.curLvData.damageScale = this.curLvData.damageScale);
        }
    }
    class er extends Kl {
        GetNewInstance() {
            return new er();
        }
        constructor() {
            super(), this.skillID = 3012, this.skillPriority = 1, this.skillName = "钢盾", this.skillInfo = "召唤3枚钢盾围绕自审,持续对周围敌人造成伤害;脱战后,每2秒恢复一定生命", 
            this.skillIcon = "icon/jntb_zhanshi01.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_zs_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.colliderUnitType = [ 1, 2 ], 
            this.skillUseRadius = 2, this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 145, 0, .8, null, null, [ 1102 ]), 
            this.lvData[2] = new Wl(3, 11400, 163, 0, .8, null, null, [ 1102 ]), this.lvData[3] = new Wl(5, 10800, 181, 0, .8, null, null, [ 1102 ]), 
            this.lvData[4] = new Wl(7, 10200, 199, 0, .8, null, null, [ 1102 ]), this.lvData[5] = new Wl(9, 9600, 217, 0, .8, null, null, [ 1102 ]), 
            this.lvData[6] = new Wl(11, 9e3, 235, 0, .8, null, null, [ 1102 ]), this.playTime = 0, 
            this.cdFixType = 2, this.recoverHpType = 1, this.recoverHpValue = .4, this.isSuperDamage = !1, 
            this.flyObj = [ new Xl(new tr()) ];
        }
    }
    class tr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new tr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzsjn2", this.effectName = "3dres/effect/e_zsjn2.lh", 
            this.flySpeed = 0, this.flytime = 5e3, this.moveType = 2, this.isOwnerDeadDestroy = !0, 
            this.colliderNum = 0, this.colliderRadius = 2, this.colliderCheckTime = 500, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class ir extends Kl {
        GetNewInstance() {
            return new ir();
        }
        constructor() {
            super(), this.skillID = 3013, this.skillPriority = 2, this.skillName = "裁决", this.skillInfo = "跃向指定位置,对范围内敌人造成最大生命和真实伤害并眩晕0.5秒", 
            this.skillIcon = "icon/jntb_zhanshi03.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_zs_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 4, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 42e3, 0, 425, 0, [ 1085, 1011 ], [], null, null, "12%最大生命值+425点真实伤害"), 
            this.lvData[2] = new Wl(8, 35e3, 0, 475, 0, [ 1085, 1083 ], [], null, null, "16%最大生命值+455点真实伤害"), 
            this.lvData[3] = new Wl(12, 28e3, 0, 525, 0, [ 1085, 1084 ], [], null, null, "20%最大生命值+525点真实伤害"), 
            this.playTime = 600, this.cdFixType = 2, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new sr(), 500) ], this.moveHeroType = 1, this.isSuperDamage = !1, 
            this.moveHeroTime = 400;
        }
    }
    class sr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new sr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzsjn3", this.effectName = "3dres/effect/e_zsjn3.lh", 
            this.flySpeed = 0, this.moveType = 0, this.flytime = 800, this.colliderNum = 0, 
            this.colliderRadius = 1.3, this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class nr extends Kl {
        GetNewInstance() {
            return new nr();
        }
        constructor() {
            super(), this.skillID = 3030, this.skillPriority = 0, this.skillName = "弓箭手单体远程普攻", 
            this.startSound = "sound/skill_gs_pg.mp3", this.skillInfo = "", this.skillIcon = "", 
            this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, 
            this.skillUseRadius = 5, this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, 
            this.lvData[1] = new Wl(0, 1188, 0, 0, 1), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 360, this.playTimeFixType = 1, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.isMustHaveTarget = !0, this.recoverHpType = 1, this.recoverHpValue = 1, this.flyObj = [ new Xl(new ar(), 160) ];
        }
    }
    class ar extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ar();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxgjspg", this.effectName = "3dres/effect/e_gjsh_gj.lh", 
            this.flySpeed = 12, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = .5, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class or extends Kl {
        GetNewInstance() {
            return new or();
        }
        constructor() {
            super(), this.skillID = 3031, this.skillPriority = 1, this.skillName = "爆射", this.skillInfo = "射出聚力箭矢,对直线路径上的敌人造成伤害", 
            this.skillIcon = "icon/jntb_sheshou02.png", this.skillTypeName = "", this.startSound = "sound/skill_gs_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 11, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 320, 0, .9), 
            this.lvData[2] = new Wl(3, 11600, 440, 0, .9), this.lvData[3] = new Wl(5, 11200, 560, 0, .9), 
            this.lvData[4] = new Wl(7, 10800, 680, 0, .9), this.lvData[5] = new Wl(9, 10400, 800, 0, .9), 
            this.lvData[6] = new Wl(11, 1e4, 920, 0, .9), this.cdType = 0, this.cdFixType = 2, 
            this.playTime = 360, this.playTimeFixType = 1, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.isSuperDamage = !0, this.flyObj = [ new Xl(new lr()), new Xl(new hr(), 260) ];
        }
    }
    class lr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new lr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxgjsjn1", this.effectName = "3dres/effect/e_gjsh_jn03_juqi.lh", 
            this.flySpeed = 0, this.moveType = 1, this.effectObjHeightType = 1, this.isLockTarget = !0, 
            this.flytime = 500, this.noDamage = !0;
        }
    }
    class hr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new hr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxgjsjn11", this.effectName = "3dres/effect/e_gjsh_jn01.lh", 
            this.flySpeed = 18, this.flytime = 500, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class rr extends Kl {
        GetNewInstance() {
            return new rr();
        }
        constructor() {
            super(), this.skillID = 3032, this.skillPriority = 1, this.skillName = "散射", this.skillInfo = "向前方以扇形范围发出5只冰箭并增加自身攻速,持续5秒,对命中敌人造成伤害并减速;", 
            this.skillIcon = "icon/jntb_sheshou01.png", this.skillTypeName = "", this.startSound = "sound/skill_gs_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 8, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 8e3, 150, 0, .25, [ 1004 ], [ 1111 ]), 
            this.lvData[2] = new Wl(3, 7400, 165, 0, .25, [ 1004 ], [ 1112 ]), this.lvData[3] = new Wl(5, 6800, 180, 0, .25, [ 1004 ], [ 1113 ]), 
            this.lvData[4] = new Wl(7, 6200, 195, 0, .25, [ 1004 ], [ 1114 ]), this.lvData[5] = new Wl(9, 5600, 210, 0, .25, [ 1004 ], [ 1115 ]), 
            this.lvData[6] = new Wl(11, 5e3, 225, 0, .25, [ 1004 ], [ 1116 ]), this.cdType = 0, 
            this.cdFixType = 2, this.playTime = 360, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.isSuperDamage = !0, this.flyObj = [ new Xl(new cr(), 0, 5, 5, 1) ];
        }
    }
    class cr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new cr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxgjsjn2", this.effectName = "3dres/effect/e_gjsh_gj.lh", 
            this.flySpeed = 10, this.flytime = 600, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class dr extends Kl {
        GetNewInstance() {
            return new dr();
        }
        constructor() {
            super(), this.skillID = 3033, this.skillPriority = 1, this.skillName = "巨箭", this.skillInfo = "聚气0.5秒后,射出一发巨型箭矢,对命中敌人造成伤害并眩晕2秒", 
            this.skillIcon = "icon/jntb_sheshou03.png", this.skillTypeName = "", this.startSound = "sound/skill_gs_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 30, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 45e3, 700, 0, .9, [ 1005 ]), 
            this.lvData[2] = new Wl(8, 4e4, 1e3, 0, .9, [ 1005 ]), this.lvData[3] = new Wl(12, 35e3, 1300, 0, .9, [ 1005 ]), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 880, this.playTimeFixType = 1, 
            this.skillAnim = "skill", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.flyObj = [ new Xl(new lr()), new Xl(new ur(), 850) ];
        }
    }
    class ur extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ur();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxgjsjn3", this.effectName = "3dres/effect/e_gjsh_jn03_jian.lh", 
            this.isGlobalCreateEffect = !0, this.flySpeed = 16, this.flytime = 1e3, this.moveType = 1, 
            this.effectObjHeightType = 1, this.colliderNum = 1, this.colliderRadius = 1.8, this.colliderNumHitAdd = 1, 
            this.colliderUnitType = [ 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class pr extends Kl {
        GetNewInstance() {
            return new pr();
        }
        constructor() {
            super(), this.skillID = 3040, this.skillPriority = 0, this.skillName = "法师单体远程普攻", 
            this.startSound = "sound/skill_fs_pg.mp3", this.skillInfo = "", this.skillIcon = "", 
            this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, 
            this.skillUseRadius = 4.5, this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, 
            this.lvData[1] = new Wl(0, 1188, 0, 0, 1), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 800, this.playTimeFixType = 1, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.isMustHaveTarget = !0, this.flyObj = [ new Xl(new mr(), 160) ];
        }
    }
    class mr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new mr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxfspg", this.effectName = "3dres/effect/e_JSbpg.lh", 
            this.flySpeed = 12, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = .5, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class gr extends Kl {
        GetNewInstance() {
            return new gr();
        }
        constructor() {
            super(), this.skillID = 3041, this.skillPriority = 1, this.skillName = "雪球", this.skillInfo = "向指定方向发射一枚雪球对路径上目标造成伤害并减少一定攻速、移速,持续1秒;且在最远距离爆炸对周围目标造成伤害并眩晕1秒", 
            this.skillIcon = "icon/jntb_fashi02.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_fs_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 7, 
            this.colliderUnitType = [ 1, 2 ], this.isPhyDamage = !1, this.lv = 0, this.maxlv = 6, 
            this.lvData[1] = new Wl(1, 1e4, 250, 0, .47, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1008
            } ]), this.lvData[2] = new Wl(3, 9e3, 280, 0, .47, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1008
            } ]), this.lvData[3] = new Wl(5, 8e3, 310, 0, .47, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1008
            } ]), this.lvData[4] = new Wl(7, 7e3, 340, 0, .47, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1008
            } ]), this.lvData[5] = new Wl(9, 6e3, 370, 0, .47, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1008
            } ]), this.lvData[6] = new Wl(11, 5e3, 400, 0, .47, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1008
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 500, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 2, this.recoverHpValue = 1, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new fr(), 200) ];
        }
    }
    class fr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new fr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxfsjn1", this.effectName = "3dres/effect/e_JSbwjn2.lh", 
            this.flySpeed = 8, this.flytime = 800, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0, this.endFlyObj = [ new Ir() ];
        }
    }
    class Ir extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ir();
        }
        onCollider(e) {
            if (e) for (let t = 0; t < e.length; t++) {
                const i = e[t];
                i.unitType == me.HERO && bl.Instance.AddBuff(this.ownerSk.owner, i, 1007);
            }
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxfsjn11", this.effectName = "3dres/effect/e_JSbwjn2bz.lh", 
            this.flytime = 400, this.moveType = 0, this.effectObjHeightType = 1, this.colliderNum = 0, 
            this.colliderRadius = 1.5, this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class vr extends Kl {
        GetNewInstance() {
            return new vr();
        }
        constructor() {
            super(), this.skillID = 3042, this.skillPriority = 1, this.skillName = "冰爆", this.skillInfo = "对范围内敌人造成一次伤害并减少攻速、移速,持续1秒", 
            this.skillIcon = "icon/jntb_fashi01.png", this.skillTypeName = "伤害", this.resListName = [ "3dres/effect/e_JSckjn2hd.lh" ], 
            this.startSound = "sound/skill_fs_jn2.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 2, this.skillUseRadius = 7, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 400, 0, .55, [ 1008 ]), 
            this.lvData[2] = new Wl(3, 11e3, 465, 0, .55, [ 1008 ]), this.lvData[3] = new Wl(5, 1e4, 530, 0, .55, [ 1008 ]), 
            this.lvData[4] = new Wl(7, 9e3, 595, 0, .55, [ 1008 ]), this.lvData[5] = new Wl(9, 8e3, 660, 0, .55, [ 1008 ]), 
            this.lvData[6] = new Wl(11, 7e3, 725, 0, .55, [ 1008 ]), this.cdType = 0, this.cdFixType = 2, 
            this.playTime = 500, this.playTimeFixType = 1, this.recoverHpType = 2, this.recoverHpValue = .9, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.flyObj = [ new Xl(new _r(), 200) ];
        }
    }
    class _r extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new _r();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxfsjn2", this.effectName = "3dres/effect/e_JSbwjn1.lh", 
            this.flytime = 800, this.moveType = 0, this.colliderNum = 0, this.colliderRadius = 1.6, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class yr extends Kl {
        GetNewInstance() {
            return new yr();
        }
        constructor() {
            super(), this.skillID = 3043, this.skillPriority = 1, this.skillName = "寒冰地狱", this.skillInfo = "对范围内敌人造成一次伤害并减少攻速、移速,持续1秒", 
            this.skillIcon = "icon/jntb_fashi03.png", this.skillTypeName = "伤害", this.resListName = [ "3dres/effect/e_JSckjn2hd.lh" ], 
            this.startSound = "sound/skill_fs_jn3.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 2, this.skillUseRadius = 7, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 35e3, 250, 0, .22, [ 1008 ]), 
            this.lvData[2] = new Wl(8, 32500, 325, 0, .22, [ 1008 ]), this.lvData[3] = new Wl(12, 3e4, 400, 0, .22, [ 1008 ]), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 600, this.playTimeFixType = 1, 
            this.recoverHpType = 2, this.recoverHpValue = .6, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new wr(), 320) ];
        }
    }
    class Sr extends Kl {
        GetNewInstance() {
            return new Sr();
        }
        constructor() {
            super(), this.skillID = 3044, this.skillPriority = 1, this.skillName = "寒冰地狱", this.skillInfo = "对范围内敌人造成一次伤害并减少攻速、移速,持续1秒", 
            this.skillIcon = "icon/jntb_fashi03.png", this.skillTypeName = "伤害", this.resListName = [ "3dres/effect/e_JSckjn2hd.lh" ], 
            this.startSound = "sound/skill_fs_jn3.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 2, this.skillUseRadius = 7, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 35e3, 250, 0, .17, [ 1008 ]), 
            this.lvData[2] = new Wl(8, 32500, 325, 0, .17, [ 1008 ]), this.lvData[3] = new Wl(12, 3e4, 400, 0, .17, [ 1008 ]), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 600, this.playTimeFixType = 1, 
            this.recoverHpType = 2, this.recoverHpValue = .6, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new wr(), 320) ];
        }
    }
    class wr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new wr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxfsjn3", this.effectName = "3dres/effect/e_JSbwjn3cx.lh", 
            this.flytime = 4e3, this.moveType = 0, this.colliderNum = 0, this.colliderCheckTime = 500, 
            this.colliderRadius = 3, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Dr extends Kl {
        GetNewInstance() {
            return new Dr();
        }
        constructor() {
            super(), this.skillID = 3050, this.skillPriority = 0, this.skillName = "单体远程普攻", 
            this.startSound = "sound/skill_ez_pg.mp3", this.skillInfo = "", this.skillIcon = "", 
            this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, 
            this.skillUseRadius = 5, this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, 
            this.lvData[1] = new Wl(0, 1188, 0, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.cdType = 0, this.cdFixType = 1, this.playTime = 360, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.isMustHaveTarget = !0, 
            this.recoverHpType = 1, this.recoverHpValue = 1, this.flyObj = [ new Xl(new kr(), 140) ];
        }
    }
    class kr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new kr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzrpg", this.effectName = "3dres/effect/e_ezpt.lh", 
            this.flySpeed = 12, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = .5, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class Cr extends Kl {
        GetNewInstance() {
            return new Cr();
        }
        constructor() {
            super(), this.skillID = 3051, this.skillPriority = 1, this.skillName = "充能子弹", this.skillInfo = "向指定方向发射充能子弹,对命中目标造成伤害和减速并减少其他技能冷却1秒;被动:普攻命中敌方单位增加自身攻速,最大叠加5层,持续5秒", 
            this.skillIcon = "icon/jntb_ez1.png", this.skillTypeName = "", this.startSound = "sound/skill_ez_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 6, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 8e3, 375, 0, 1, [ 1027 ], null, null, [ {
                triggerUnit: 1,
                addType: 1,
                buffID: 1028
            } ]), this.lvData[2] = new Wl(3, 7600, 400, 0, 1, [ 1027 ], null, null, [ {
                triggerUnit: 1,
                addType: 1,
                buffID: 1028
            } ]), this.lvData[3] = new Wl(5, 7200, 425, 0, 1, [ 1027 ], null, null, [ {
                triggerUnit: 1,
                addType: 1,
                buffID: 1028
            } ]), this.lvData[4] = new Wl(7, 6800, 450, 0, 1, [ 1027 ], null, null, [ {
                triggerUnit: 1,
                addType: 1,
                buffID: 1028
            } ]), this.lvData[5] = new Wl(9, 6400, 475, 0, 1, [ 1027 ], null, null, [ {
                triggerUnit: 1,
                addType: 1,
                buffID: 1028
            } ]), this.lvData[6] = new Wl(11, 6e3, 500, 0, 1, [ 1027 ], null, null, [ {
                triggerUnit: 1,
                addType: 1,
                buffID: 1028
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 180, this.playTimeFixType = 1, 
            this.skillAnim = "skill1", this.skillAnimLoop = !1, this.isSuperDamage = !0, this.recoverHpType = 1, 
            this.recoverHpValue = .5, this.flyObj = [ new Xl(new br(), 0) ];
        }
    }
    class br extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new br();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn1", this.effectName = "3dres/effect/e_ezjn1.lh", 
            this.flySpeed = 16, this.flytime = 280, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = 1, this.colliderNumHitAdd = 1, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Pr extends Kl {
        GetNewInstance() {
            return new Pr();
        }
        constructor() {
            super(), this.skillID = 3052, this.skillPriority = 1, this.skillName = "空间跳跃", this.skillInfo = "向指定位置跳跃,并向附近敌人发射一枚充能子弹造成伤害(最多三个目标)", 
            this.skillIcon = "icon/jntb_ez2.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_ez_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 4.2, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 15e3, 350, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[2] = new Wl(3, 14e3, 400, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[3] = new Wl(5, 13e3, 450, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[4] = new Wl(7, 12e3, 500, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[5] = new Wl(9, 11e3, 550, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[6] = new Wl(11, 1e4, 600, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.playTime = 300, this.cdFixType = 2, this.skillAnim = "diaoluo", this.skillAnimLoop = !1, 
            this.isSuperDamage = !0, this.recoverHpType = 1, this.recoverHpValue = .5, this.flyObj = [ new Xl(new xr()), new Xl(new Tr(), 50), new Xl(new Ur(), 50) ], 
            this.moveHeroType = 1, this.moveHeroTime = 0;
        }
    }
    class xr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new xr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn2", this.effectName = "3dres/effect/e_ezjn2a.lh", 
            this.flySpeed = 0, this.moveType = 1, this.colliderRadius = 1, this.flytime = 750, 
            this.noDamage = !0;
        }
    }
    class Tr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Tr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn21", this.effectName = "3dres/effect/e_ezjn2b.lh", 
            this.flySpeed = 0, this.moveType = 2, this.flytime = 750, this.noDamage = !0;
        }
    }
    class Ur extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ur();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn22", this.effectName = "3dres/effect/e_ezjn1.lh", 
            this.flySpeed = 16, this.flytime = 0, this.moveType = 4, this.isLockTarget = !0, 
            this.M4checkNum = 3, this.M4checkRadius = 4.2, this.effectObjHeightType = 1, this.colliderNum = 1, 
            this.colliderRadius = 1, this.colliderNumHitAdd = 1, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Lr extends Kl {
        GetNewInstance() {
            return new Lr();
        }
        getDamage(e, t) {
            var i = super.getDamage(e, t);
            return t.unitType == me.UNIT && (i *= .5), u.round(i);
        }
        constructor() {
            super(), this.skillID = 3053, this.skillPriority = 2, this.skillName = "充能波", this.skillInfo = "0.5秒聚气后,向指定方向射出巨型充能波,对路径上敌人造成伤害伤害会依次递减最低50%", 
            this.skillIcon = "icon/jntb_ez3.png", this.skillTypeName = "", this.startSound = "sound/skill_ez_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 30, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 4e4, 950, 0, 1.6, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[2] = new Wl(8, 35e3, 1150, 0, 1.6, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[3] = new Wl(12, 3e4, 1350, 0, 1.6, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 1500, this.playTimeFixType = 1, 
            this.skillAnim = "skill", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 1, 
            this.recoverHpValue = .3, this.flyObj = [ new Xl(new Nr()), new Xl(new Mr(), 850) ];
        }
    }
    class Nr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Nr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn3", this.effectName = "3dres/effect/e_ezjn3jq.lh", 
            this.flySpeed = 0, this.moveType = 1, this.effectObjHeightType = 0, this.isLockTarget = !0, 
            this.flytime = 900, this.noDamage = !0;
        }
    }
    class Mr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Mr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn31", this.effectName = "3dres/effect/e_ezjn3.lh", 
            this.isGlobalCreateEffect = !0, this.flySpeed = 18, this.flytime = 1500, this.moveType = 1, 
            this.effectObjHeightType = 1, this.colliderNum = 0, this.colliderRadius = 2.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Ar extends Kl {
        GetNewInstance() {
            return new Ar();
        }
        constructor() {
            super(), this.skillID = 13053, this.skillPriority = 2, this.skillName = "充能波", this.skillInfo = "0.5秒聚气后,向指定方向射出巨型充能波,对路径上敌人造成伤害伤害会依次递减最低50%", 
            this.skillIcon = "icon/jntb_ez3.png", this.skillTypeName = "", this.startSound = "sound/skill_ez_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 30, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 3e4, 1100, 0, 2, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[2] = new Wl(8, 27500, 1350, 0, 2, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.lvData[3] = new Wl(12, 25e3, 1600, 0, 2, null, null, null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1030
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 1500, this.playTimeFixType = 1, 
            this.skillAnim = "skill", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 1, 
            this.recoverHpValue = .3, this.flyObj = [ new Xl(new Or()), new Xl(new Er(), 850) ];
        }
    }
    class Or extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Or();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn3", this.effectName = "3dres/effect/e_ezjn3jq.lh", 
            this.flySpeed = 0, this.moveType = 1, this.effectObjHeightType = 0, this.isLockTarget = !0, 
            this.flytime = 900, this.noDamage = !0;
        }
    }
    class Er extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Er();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzejn31", this.effectName = "3dres/effect/e_ezjn3.lh", 
            this.flySpeed = 18, this.flytime = 1500, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 2.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Gr extends Kl {
        GetNewInstance() {
            return new Gr();
        }
        constructor() {
            super(), this.skillID = 3060, this.skillPriority = 0, this.skillName = "战士单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_nq_pg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1122, 0, 0, 1), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 550, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new Rr()) ];
        }
    }
    class Rr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Rr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnqpg", this.effectName = "3dres/effect/e_jsnqpt.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Br extends Kl {
        GetNewInstance() {
            return new Br();
        }
        constructor() {
            super(), this.skillID = 3061, this.skillPriority = 1, this.skillName = "铁拳冲击", this.skillInfo = "举起铁拳向指定方向冲击一段距离,对路径上敌人造成伤害;如命中敌方英雄则立即停止并击退目标", 
            this.skillIcon = "icon/jntb_nq1.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_nq_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 138, 0, 1, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1031
            } ]), this.lvData[2] = new Wl(3, 11600, 218, 0, 1, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1031
            } ]), this.lvData[3] = new Wl(5, 11200, 298, 0, 1, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1031
            } ]), this.lvData[4] = new Wl(7, 10800, 378, 0, 1, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1031
            } ]), this.lvData[5] = new Wl(9, 10400, 458, 0, 1, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1031
            } ]), this.lvData[6] = new Wl(11, 1e4, 538, 0, 1, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1031
            } ]), this.playTime = 600, this.cdFixType = 2, this.moveHeroType = 1, this.moveHeroTime = 400, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new Hr()) ];
        }
    }
    class Hr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Hr();
        }
        onCollider(e) {
            var t = !1;
            if (e) for (let i = 0; i < e.length; i++) {
                const s = e[i];
                s.unitType == me.HERO && (t = !0, s.attackMoveDirction.setValue(u.decimalRound(this.movelogicForwrad.x), u.decimalRound(this.movelogicForwrad.y)), 
                s.attackMoveOldLogicPos.setValue(s.logicPos.x, s.logicPos.y), s.attackMoveAddLogicPos.setValue(u.noDecimalRound(1.5 * s.attackMoveDirction.x), u.noDecimalRound(1.5 * s.attackMoveDirction.y)), 
                s.isAttackMove = !0, s.attackMoveCurFrame = 0, s.attackMoveAllFrame = 30, s.attackMoveIgnoreTerrain = !1);
            }
            t && (this.ownerSk.owner.stopMoveAndLastPos(), this.createHitFlyObj());
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnqjn1", this.effectName = "", this.flySpeed = 0, 
            this.flytime = 520, this.moveType = 3, this.colliderNum = 0, this.colliderRadius = 1, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0, this.autoCreateHitFlyObj = !1, 
            this.hitFlyObj = [ new Fr() ];
        }
    }
    class Fr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Fr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnqjn11", this.effectName = "3dres/effect/e_jsnqjn1.lh", 
            this.flySpeed = 0, this.flytime = 800, this.moveType = 3, this.noDamage = !0;
        }
    }
    class Vr extends Kl {
        GetNewInstance() {
            return new Vr();
        }
        constructor() {
            super(), this.skillID = 3062, this.skillPriority = 1, this.skillName = "狂轰击", this.skillInfo = "快速朝指定方向连续打出5拳,每拳造成伤害并减少目标物理防御持续3秒(命中目标可额外恢复一定血量)", 
            this.skillIcon = "icon/jntb_nq2.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_nq_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 3.5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 1e4, 50, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1032
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1039
            } ]), this.lvData[2] = new Wl(3, 9600, 65, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1033
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1039
            } ]), this.lvData[3] = new Wl(5, 9200, 80, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1034
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1039
            } ]), this.lvData[4] = new Wl(7, 8800, 95, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1035
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1039
            } ]), this.lvData[5] = new Wl(9, 8400, 110, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1036
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1039
            } ]), this.lvData[6] = new Wl(11, 8e3, 125, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1037
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1039
            } ]), this.playTime = 1500, this.skillAnim = "skill", this.cdFixType = 2, this.recoverHpType = 1, 
            this.recoverHpValue = 1, this.isSuperDamage = !1, this.flyObj = [ new Xl(new jr(), 100) ];
        }
    }
    class jr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new jr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnqjn2", this.effectName = "3dres/effect/e_jsnqjn2.lh", 
            this.flySpeed = 0, this.flytime = 1300, this.moveType = 3, this.colliderOffSet = 1.5, 
            this.colliderNum = 0, this.colliderRadius = 1.8, this.colliderCheckTime = 250, this.colliderUnitType = [ 1, 2 ], 
            this.isOwnerDeadDestroy = !0;
        }
    }
    class Wr extends Kl {
        GetNewInstance() {
            return new Wr();
        }
        constructor() {
            super(), this.skillID = 3063, this.skillPriority = 2, this.skillName = "地裂轰击", this.skillInfo = "阿丽莎冲天而起并在指定位置落下,对目标位置地面进行轰击对范围内目标造成伤害并减速1.5秒", 
            this.skillIcon = "icon/jntb_nq3.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_nq_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 8, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 3e4, 680, 0, 1, [ 1038 ], []), 
            this.lvData[2] = new Wl(8, 28e3, 880, 0, 1, [ 1038 ], []), this.lvData[3] = new Wl(12, 26e3, 1080, 0, 1, [ 1038 ], []), 
            this.playTime = 1500, this.cdFixType = 2, this.skillAnim = "skill2", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Xr(), 700), new Xl(new Kr(), 1300) ], this.moveHeroType = 1, 
            this.moveHeroTime = 50, this.moveHeroDelayTime = 1e3, this.isSuperDamage = !1;
        }
    }
    class Xr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Xr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnqjn3", this.effectName = "3dres/effect/e_jsnqjn3a.lh", 
            this.flySpeed = 0, this.moveType = 1, this.flytime = 750, this.noDamage = !0;
        }
    }
    class Kr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Kr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnqjn31", this.effectName = "3dres/effect/e_jsnqjn3.lh", 
            this.flySpeed = 0, this.moveType = 2, this.flytime = 750, this.colliderNum = 0, 
            this.colliderRadius = 3, this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0, 
            this.isOwnerDeadDestroy = !0;
        }
    }
    class qr extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 3070, this.skillPriority = 0, this.skillName = "猴子单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_hz_pg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, .6), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 500, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new zr()) ];
        }
        GetNewInstance() {
            return new qr();
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3170, !1), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.owner.skillReplace(0, this.sk_pgqhIndex, 5e3, 1), 
            this.sk_pgqh.curCD = 0, e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i)), bl.Instance.removeBuff(this.owner, 1049), 
            bl.Instance.AddBuff(this.owner, this.owner, 1049);
        }
    }
    class zr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new zr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxhzpg", this.effectName = "3dres/effect/e_JShzpg.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Yr extends Kl {
        GetNewInstance() {
            return new Yr();
        }
        onSkillStart() {
            bl.Instance.removeBuff(this.owner, 1049);
        }
        getDamage(e, t) {
            var i = super.getDamage(e, t);
            return t.unitType == me.BUILD && (i = Math.round(.35 * i)), i;
        }
        constructor() {
            super(), this.skillID = 3170, this.skillPriority = 1, this.skillName = "猴子单体近战普攻强化版", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_hz_qhpg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 3, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.curCD = 99999999, 
            this.lvData[1] = new Wl(0, 99999999, 0, 0, 1), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 500, this.playTimeFixType = 1, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Jr(), 100), new Xl(new Qr()) ], this.moveHeroType = 1, 
            this.moveHeroTime = 300, this.recoverHpType = 1, this.recoverHpValue = .7, this.isMustHaveTarget = !0, 
            this.isShowUI = !1;
        }
    }
    class Jr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Jr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill1_yxhzpg", this.effectName = "3dres/effect/e_JShzjn2.lh", 
            this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0, this.isEffectYSameUnit = !0, 
            this.colliderNum = 0, this.colliderRadius = 2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Qr extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Qr();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill1_yxhzpg2", this.effectName = "3dres/effect/e_JShzjnzi.lh", 
            this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0, this.isEffectYSameTeam = !0;
        }
    }
    class Zr extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 3171, this.skillPriority = 0, this.skillName = "猴子单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_hz_pg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, .6), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 500, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new $r()) ];
        }
        GetNewInstance() {
            return new Zr();
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3172, !1), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.owner.skillReplace(0, this.sk_pgqhIndex, 5e3, 1), 
            this.sk_pgqh.curCD = 0, e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i)), bl.Instance.removeBuff(this.owner, 1049), 
            bl.Instance.AddBuff(this.owner, this.owner, 1049);
        }
    }
    class $r extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new $r();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxhzpg", this.effectName = "3dres/effect/e_JShzpg.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class ec extends Kl {
        GetNewInstance() {
            return new ec();
        }
        onSkillStart() {
            bl.Instance.removeBuff(this.owner, 1049);
        }
        getDamage(e, t) {
            var i = super.getDamage(e, t);
            return t.unitType == me.BUILD && (i = Math.round(.35 * i)), i;
        }
        constructor() {
            super(), this.skillID = 3172, this.skillPriority = 1, this.skillName = "猴子单体近战普攻强化版", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_hz_qhpg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 3, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.curCD = 99999999, 
            this.lvData[1] = new Wl(0, 99999999, 0, 0, 1), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 500, this.playTimeFixType = 1, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new tc(), 100), new Xl(new ic()) ], this.moveHeroType = 1, 
            this.moveHeroTime = 300, this.recoverHpType = 1, this.recoverHpValue = .7, this.isMustHaveTarget = !0, 
            this.isShowUI = !1;
        }
    }
    class tc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new tc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill1_yxhzpg", this.effectName = "3dres/effect/e_JShzjn2.lh", 
            this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0, this.isEffectYSameUnit = !0, 
            this.colliderNum = 0, this.colliderRadius = 2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class ic extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ic();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill1_yxhzpg2", this.effectName = "3dres/effect/e_JShzjnzi.lh", 
            this.flySpeed = 0, this.flytime = 1e3, this.moveType = 0, this.isEffectYSameTeam = !0;
        }
    }
    class sc extends Kl {
        GetNewInstance() {
            return new sc();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3071, this.skillPriority = 1, this.skillName = "金刚盾", this.skillInfo = "使用后获得一个护盾并增加移动速度,持续4秒,下次普攻变为强力敲击", 
            this.skillIcon = "icon/jntb_hz02.png", this.skillTypeName = "护盾", this.startSound = "sound/skill_hz_jn1.mp3", 
            this.resListName = [ "3dres/effect/e_JShzjn1.lh", "3dres/effect/e_JShzbuff.lh" ], 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = .5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 0, 0, 0, null, [ 1040, 1041, 1048 ], null, null, "护盾值+1000"), 
            this.lvData[2] = new Wl(3, 11600, 0, 0, 0, null, [ 1040, 1043, 1048 ], null, null, "护盾值+1200"), 
            this.lvData[3] = new Wl(5, 11200, 0, 0, 0, null, [ 1040, 1044, 1048 ], null, null, "护盾值+1400"), 
            this.lvData[4] = new Wl(7, 10800, 0, 0, 0, null, [ 1040, 1045, 1048 ], null, null, "护盾值+1600"), 
            this.lvData[5] = new Wl(9, 10400, 0, 0, 0, null, [ 1040, 1046, 1048 ], null, null, "护盾值+1800"), 
            this.lvData[6] = new Wl(11, 1e4, 0, 0, 0, null, [ 1040, 1047, 1048 ], null, null, "护盾值+2000"), 
            this.playTime = 3e3, this.cdFixType = 2, this.switchSkillState = !1;
        }
    }
    class nc extends Kl {
        GetNewInstance() {
            return new nc();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3072, this.skillPriority = 1, this.skillName = "腾挪", this.skillInfo = "向指定方向进行快速腾挪,下次普攻变为强力敲击", 
            this.skillIcon = "icon/jntb_hz01.png", this.skillTypeName = "位移", this.startSound = "sound/skill_hz_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 3.8, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 8e3, 0, 0, 0, null, null, null, null, ""), 
            this.lvData[2] = new Wl(3, 7400, 0, 0, 0, null, null, null, null, ""), this.lvData[3] = new Wl(5, 6800, 0, 0, 0, null, null, null, null, ""), 
            this.lvData[4] = new Wl(7, 6200, 0, 0, 0, null, null, null, null, ""), this.lvData[5] = new Wl(9, 5600, 0, 0, 0, null, null, null, null, ""), 
            this.lvData[6] = new Wl(11, 5e3, 0, 0, 0, null, null, null, null, ""), this.playTime = 200, 
            this.skillAnim = "move", this.cdFixType = 2, this.moveHeroType = 1, this.moveHeroTime = 200, 
            this.isSuperDamage = !1;
        }
    }
    class ac extends Kl {
        GetNewInstance() {
            return new ac();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3073, this.skillPriority = 1, this.skillName = "定海如意棒", 
            this.skillInfo = "金箍棒变大后猛烈敲击地面并对范围内敌人造成伤害并眩晕1.5秒,下次普攻变为强力敲击", this.skillIcon = "icon/jntb_hz03.png", 
            this.skillTypeName = "控制", this.startSound = "sound/skill_hz_jn3.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2.5, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 35e3, 300, 0, 1, [ 1042 ]), 
            this.lvData[2] = new Wl(8, 3e4, 350, 0, 1, [ 1042 ]), this.lvData[3] = new Wl(12, 25e3, 400, 0, 1, [ 1042 ]), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 200, this.playTimeFixType = 1, 
            this.recoverHpType = 0, this.isSuperDamage = !1, this.flyObj = [ new Xl(new oc(), 100) ];
        }
    }
    class oc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new oc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxhzjn3", this.effectName = "3dres/effect/e_JShzjn3.lh", 
            this.flytime = 1800, this.moveType = 5, this.colliderNum = 0, this.colliderRadius = 2.4, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class lc extends Kl {
        GetNewInstance() {
            return new lc();
        }
        constructor() {
            super(), this.skillID = 3080, this.skillPriority = 0, this.skillName = "战士单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_nq_pg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, 1), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 550, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new hc()) ];
        }
    }
    class hc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new hc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnmpg", this.effectName = "3dres/effect/e_JSntpg.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class rc extends Kl {
        GetNewInstance() {
            return new rc();
        }
        constructor() {
            super(), this.skillID = 3081, this.skillPriority = 1, this.skillName = "野蛮冲撞", this.skillInfo = "向指定方向发起冲击,对路径上敌方英雄目标造成持续伤害并击飞", 
            this.skillIcon = "icon/jntb_niu1.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_nm_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 4.2, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 11e3, 200, 0, .5, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1050
            } ]), this.lvData[2] = new Wl(3, 10400, 240, 0, .5, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1050
            } ]), this.lvData[3] = new Wl(5, 9800, 280, 0, .5, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1050
            } ]), this.lvData[4] = new Wl(7, 9200, 320, 0, .5, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1050
            } ]), this.lvData[5] = new Wl(9, 8600, 360, 0, .5, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1050
            } ]), this.lvData[6] = new Wl(11, 8e3, 400, 0, .5, null, null, null, [ {
                triggerUnit: 1,
                addType: 0,
                buffID: 1050
            } ]), this.playTime = 600, this.cdFixType = 2, this.skillAnim = "skill2", this.moveHeroType = 1, 
            this.moveHeroTime = 500, this.moveHeroDelayTime = 100, this.isSuperDamage = !1, 
            this.flyObj = [ new Xl(new cc(), 100) ];
        }
    }
    class cc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new cc();
        }
        onCollider(e) {
            if (e) for (let t = 0; t < e.length; t++) {
                const i = e[t];
                i.unitType != me.HERO && i.unitType != me.UNIT || (!0, i.attackMoveDirction.setValue(u.decimalRound(this.movelogicForwrad.x), u.decimalRound(this.movelogicForwrad.y)), 
                i.attackMoveOldLogicPos.setValue(i.logicPos.x, i.logicPos.y), i.attackMoveAddLogicPos.setValue(u.noDecimalRound(1.2 * i.attackMoveDirction.x), u.noDecimalRound(1.2 * i.attackMoveDirction.y)), 
                i.isAttackMove = !0, i.attackMoveCurFrame = 0, i.attackMoveAllFrame = 15, i.attackMoveIgnoreTerrain = !1);
            }
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnmjn1", this.effectName = "3dres/effect/e_JSntjn1.lh", 
            this.flySpeed = 0, this.flytime = 500, this.moveType = 3, this.colliderNum = 0, 
            this.colliderCheckTime = 250, this.colliderRadius = 2, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class dc extends Kl {
        GetNewInstance() {
            return new dc();
        }
        constructor() {
            super(), this.skillID = 3082, this.skillPriority = 0, this.skillName = "破击血斩", this.skillInfo = "以自身为中心对周围目标造伤害,并生成护盾恢复自身血量降低命中目标的双防", 
            this.skillIcon = "icon/jntb_niu2.png", this.skillTypeName = "", this.startSound = "sound/skill_nm_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 2.5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 14e3, 300, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1052
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1059
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1077
            } ]), this.lvData[2] = new Wl(3, 13600, 380, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1053
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1061
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1078
            } ]), this.lvData[3] = new Wl(5, 13200, 460, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1054
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1062
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1079
            } ]), this.lvData[4] = new Wl(7, 12800, 540, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1055
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1063
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1080
            } ]), this.lvData[5] = new Wl(9, 12400, 620, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1056
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1064
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1081
            } ]), this.lvData[6] = new Wl(11, 12e3, 700, 0, 1, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1057
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1065
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1082
            } ]), this.cdType = 0, this.cdFixType = 1, this.playTime = 700, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 0, 
            this.recoverHpValue = 1, this.flyObj = [ new Xl(new uc()) ];
        }
    }
    class uc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new uc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnmjn2", this.effectName = "3dres/effect/e_JSntjn2.lh", 
            this.flySpeed = 0, this.flytime = 300, this.moveType = 3, this.colliderOffSet = 0, 
            this.colliderNum = 0, this.colliderRadius = 2.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class pc extends Kl {
        GetNewInstance() {
            return new pc();
        }
        constructor() {
            super(), this.skillID = 13082, this.skillPriority = 0, this.skillName = "破击血斩", 
            this.skillInfo = "以自身为中心对周围目标造伤害,并生成护盾恢复自身血量降低命中目标的双防", this.skillIcon = "icon/jntb_niu2.png", 
            this.skillTypeName = "", this.startSound = "sound/skill_nm_jn2.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 2.5, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 14e3, 300, 0, 1.4, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1052
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1059
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1077
            } ]), this.lvData[2] = new Wl(3, 13600, 380, 0, 1.4, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1053
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1061
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1078
            } ]), this.lvData[3] = new Wl(5, 13200, 460, 0, 1.4, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1054
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1062
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1079
            } ]), this.lvData[4] = new Wl(7, 12800, 540, 0, 1.4, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1055
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1063
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1080
            } ]), this.lvData[5] = new Wl(9, 12400, 620, 0, 1.4, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1056
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1064
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1081
            } ]), this.lvData[6] = new Wl(11, 12e3, 700, 0, 1.4, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1057
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 1065
            }, {
                triggerUnit: 1,
                addType: 1,
                buffID: 1082
            } ]), this.cdType = 0, this.cdFixType = 1, this.playTime = 700, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 0, 
            this.recoverHpValue = 1, this.flyObj = [ new Xl(new mc()) ];
        }
    }
    class mc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new mc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnmjn2", this.effectName = "3dres/effect/e_JSntjn2.lh", 
            this.flySpeed = 0, this.flytime = 300, this.moveType = 3, this.colliderOffSet = 0, 
            this.colliderNum = 0, this.colliderRadius = 2.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class gc extends Kl {
        GetNewInstance() {
            return new gc();
        }
        onSkillStart() {
            this.owner.moveEnable = !0, this.owner.skillMoveEnable = !0;
        }
        onSkillEnd() {
            this.owner.skillMoveEnable = !1;
        }
        constructor() {
            super(), this.skillID = 3083, this.skillPriority = 3, this.skillName = "魔王风暴", this.skillInfo = "牛魔发起旋风斩,以自身为中心对周围目标造成伤害,并增加自身双防(释放时可移动、可攻击防御塔)", 
            this.skillIcon = "icon/jntb_niu3.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_nm_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 3, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 38e3, 250, 0, .75, null, [ 1051, 1058 ]), 
            this.lvData[2] = new Wl(8, 36e3, 325, 0, .75, null, [ 1051, 1058 ]), this.lvData[3] = new Wl(12, 34e3, 400, 0, .75, null, [ 1051, 1058 ]), 
            this.playTime = 3e3, this.cdFixType = 2, this.skillAnim = "skill", this.skillAnimLoop = !0, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new fc()) ];
        }
    }
    class fc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new fc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnmjn3", this.effectName = "3dres/effect/e_JSntjn3.lh", 
            this.flySpeed = 0, this.flytime = 3e3, this.moveType = 2, this.isOwnerDeadDestroy = !0, 
            this.colliderNum = 0, this.colliderRadius = 3, this.colliderCheckTime = 500, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Ic extends Kl {
        GetNewInstance() {
            return new Ic();
        }
        onSkillStart() {
            this.owner.moveEnable = !0, this.owner.skillMoveEnable = !0;
        }
        onSkillEnd() {
            this.owner.skillMoveEnable = !1;
        }
        constructor() {
            super(), this.skillID = 13083, this.skillPriority = 3, this.skillName = "魔王风暴", 
            this.skillInfo = "牛魔发起旋风斩,以自身为中心对周围目标造成伤害,并增加自身双防(释放时可移动、可攻击防御塔)", this.skillIcon = "icon/jntb_niu3.png", 
            this.skillTypeName = "伤害", this.startSound = "sound/skill_nm_jn3.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 3, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 38e3, 350, 0, .6, null, [ 1051, 1058 ]), 
            this.lvData[2] = new Wl(8, 36e3, 425, 0, .6, null, [ 1051, 1058 ]), this.lvData[3] = new Wl(12, 34e3, 500, 0, .6, null, [ 1051, 1058 ]), 
            this.playTime = 3e3, this.cdFixType = 2, this.skillAnim = "skill", this.skillAnimLoop = !0, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new vc()) ];
        }
    }
    class vc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new vc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxnmjn3", this.effectName = "3dres/effect/e_JSntjn3.lh", 
            this.flySpeed = 0, this.flytime = 3e3, this.moveType = 2, this.isOwnerDeadDestroy = !0, 
            this.colliderNum = 0, this.colliderRadius = 3, this.colliderCheckTime = 500, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class _c extends Kl {
        GetNewInstance() {
            return new _c();
        }
        constructor() {
            super(), this.skillID = 3090, this.skillPriority = 0, this.skillName = "战士单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_lq_pg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, 1), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 550, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new yc()) ];
        }
    }
    class yc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new yc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdspg", this.effectName = "3dres/effect/e_JSlbpg.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Sc extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 3091, this.skillPriority = 1, this.skillName = "飞雷弹", 
            this.skillInfo = "向指定方向发射飞雷弹,对命中目标造成伤害和减速(可叠加);施放后3秒内可再次施放", this.skillIcon = "icon/jntb_lb1.png", 
            this.skillTypeName = "", this.startSound = "sound/skill_lq_jn1.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 7, this.isPhyDamage = !1, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 400, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[2] = new Wl(3, 11600, 460, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[3] = new Wl(5, 11200, 520, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[4] = new Wl(7, 10800, 580, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[5] = new Wl(9, 10400, 640, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[6] = new Wl(11, 1e4, 700, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 300, this.playTimeFixType = 1, 
            this.skillAnim = "skill1", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 2, 
            this.recoverHpValue = 1, this.flyObj = [ new Xl(new Dc(), 0) ];
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3094, !1), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.sk_pgqh.curCD = 0, this.owner.skillReplace(this.ownerSkillIndex, this.sk_pgqhIndex, 3e3, 2), 
            e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i));
        }
        onSkillStart() {
            this.switchPg(this.curLvData.addAtk, this.curLvData.addTrueDamage, this.curLvData.damageScale);
        }
        GetNewInstance() {
            return new Sc();
        }
    }
    class wc extends Kl {
        GetNewInstance() {
            return new wc();
        }
        onSkillStart() {}
        constructor() {
            super(), this.skillID = 3094, this.skillPriority = 1, this.skillName = "充能导弹", this.skillInfo = "向指定方向发射充能导弹,对命中目标造成伤害和减速(可叠加)", 
            this.skillIcon = "icon/jntb_lb1.png", this.skillTypeName = "", this.startSound = "sound/skill_lq_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 7, 
            this.isPhyDamage = !1, this.colliderUnitType = [ 1, 2 ], this.lv = 1, this.maxlv = 1, 
            this.curCD = 99999999, this.lvData[1] = new Wl(1, 99999999, 0, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 300, this.playTimeFixType = 1, 
            this.skillAnim = "skill1", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 2, 
            this.recoverHpValue = 1, this.flyObj = [ new Xl(new Dc(), 0) ], this.isShowUI = !1;
        }
    }
    class Dc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Dc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn1", this.effectName = "3dres/effect/e_JSlbjn2.lh", 
            this.flySpeed = 10, this.flytime = 660, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = 1, this.colliderNumHitAdd = 1, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class kc extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 13091, this.skillPriority = 1, this.skillName = "飞雷弹", 
            this.skillInfo = "向指定方向发射飞雷弹,对命中目标造成伤害和减速(可叠加);施放后3秒内可再次施放", this.skillIcon = "icon/jntb_lb1.png", 
            this.skillTypeName = "", this.startSound = "sound/skill_lq_jn1.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 7, this.isPhyDamage = !1, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 400, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[2] = new Wl(3, 11600, 520, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[3] = new Wl(5, 11200, 640, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[4] = new Wl(7, 10800, 760, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[5] = new Wl(9, 10400, 880, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.lvData[6] = new Wl(11, 1e4, 1e3, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 300, this.playTimeFixType = 1, 
            this.skillAnim = "skill1", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 2, 
            this.recoverHpValue = 1, this.flyObj = [ new Xl(new bc(), 0) ];
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3094, !1), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.sk_pgqh.curCD = 0, this.owner.skillReplace(this.ownerSkillIndex, this.sk_pgqhIndex, 3e3, 2), 
            e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i));
        }
        onSkillStart() {
            this.switchPg(this.curLvData.addAtk, this.curLvData.addTrueDamage, this.curLvData.damageScale);
        }
        GetNewInstance() {
            return new kc();
        }
    }
    class Cc extends Kl {
        GetNewInstance() {
            return new Cc();
        }
        onSkillStart() {}
        constructor() {
            super(), this.skillID = 13094, this.skillPriority = 1, this.skillName = "充能导弹", 
            this.skillInfo = "向指定方向发射充能导弹,对命中目标造成伤害和减速(可叠加)", this.skillIcon = "icon/jntb_lb1.png", 
            this.skillTypeName = "", this.startSound = "sound/skill_lq_jn1.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 7, this.isPhyDamage = !1, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 1, this.maxlv = 1, this.curCD = 99999999, 
            this.lvData[1] = new Wl(1, 99999999, 0, 0, .52, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1066
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 300, this.playTimeFixType = 1, 
            this.skillAnim = "skill1", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 2, 
            this.recoverHpValue = 1, this.flyObj = [ new Xl(new bc(), 0) ], this.isShowUI = !1;
        }
    }
    class bc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new bc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn1", this.effectName = "3dres/effect/e_JSlbjn2.lh", 
            this.flySpeed = 10, this.flytime = 660, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = 1, this.colliderNumHitAdd = 1, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Pc extends Kl {
        GetNewInstance() {
            return new Pc();
        }
        onSkillStart() {
            this.owner.moveEnable = !0, this.owner.skillMoveEnable = !0;
        }
        onSkillEnd() {
            this.owner.skillMoveEnable = !1;
        }
        constructor() {
            super(), this.skillID = 3092, this.skillPriority = 3, this.skillName = "炙烤", this.skillInfo = "释放火焰喷射自身开启防护罩并加速3秒,对范围敌人造成伤害,附带灼烧效果持续2秒(释放技能时可移动)", 
            this.skillIcon = "icon/jntb_lb2.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_lq_jn2.mp3", 
            this.resListName = [ "3dres/effect/e_JSlbjn1.lh" ], this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 1, this.skillUseRadius = 3.5, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 1e4, 200, 0, .3, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[2] = new Wl(3, 9600, 230, 0, .3, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[3] = new Wl(5, 9200, 260, 0, .3, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[4] = new Wl(7, 8800, 290, 0, .3, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[5] = new Wl(9, 8400, 320, 0, .3, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[6] = new Wl(11, 8e3, 350, 0, .3, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.playTime = 2e3, this.cdFixType = 2, this.skillAnim = "skill2", this.skillAnimLoop = !0, 
            this.isSuperDamage = !1, this.recoverHpType = 2, this.recoverHpValue = .8, this.flyObj = [ new Xl(new xc()) ];
        }
    }
    class xc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new xc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn2", this.effectName = "3dres/effect/e_JSlbjn1b.lh", 
            this.flySpeed = 0, this.flytime = 2e3, this.moveType = 6, this.isOwnerDeadDestroy = !0, 
            this.colliderOffSet = 2, this.colliderNum = 0, this.colliderRadius = 2, this.colliderCheckTime = 600, 
            this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Tc extends Kl {
        GetNewInstance() {
            return new Tc();
        }
        onSkillStart() {
            this.owner.moveEnable = !0, this.owner.skillMoveEnable = !0;
        }
        onSkillEnd() {
            this.owner.skillMoveEnable = !1;
        }
        constructor() {
            super(), this.skillID = 13092, this.skillPriority = 3, this.skillName = "炙烤", this.skillInfo = "释放火焰喷射自身开启防护罩并加速3秒,对范围敌人造成伤害,附带灼烧效果持续2秒(释放技能时可移动)", 
            this.skillIcon = "icon/jntb_lb2.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_lq_jn2.mp3", 
            this.resListName = [ "3dres/effect/e_JSlbjn1.lh" ], this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 1, this.skillUseRadius = 3.5, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 12e3, 200, 0, .5, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[2] = new Wl(3, 11600, 230, 0, .5, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[3] = new Wl(5, 11200, 260, 0, .5, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[4] = new Wl(7, 10800, 290, 0, .5, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[5] = new Wl(9, 10400, 320, 0, .5, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.lvData[6] = new Wl(11, 1e4, 350, 0, .5, null, [ 1068, 1067 ], null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            } ]), this.playTime = 2e3, this.cdFixType = 2, this.skillAnim = "skill2", this.skillAnimLoop = !0, 
            this.isSuperDamage = !1, this.recoverHpType = 2, this.recoverHpValue = .8, this.flyObj = [ new Xl(new Uc()) ];
        }
    }
    class Uc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Uc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn2", this.effectName = "3dres/effect/e_JSlbjn1b.lh", 
            this.flySpeed = 0, this.flytime = 2e3, this.moveType = 6, this.isOwnerDeadDestroy = !0, 
            this.colliderOffSet = 2, this.colliderNum = 0, this.colliderRadius = 2, this.colliderCheckTime = 450, 
            this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Lc extends Kl {
        GetNewInstance() {
            return new Lc();
        }
        constructor() {
            super(), this.skillID = 3093, this.skillPriority = 1, this.skillName = "炽热炼狱", this.skillInfo = "对范围敌人造成持续伤害,并附带灼烧效果持续2秒", 
            this.skillIcon = "icon/jntb_lb3.png", this.skillTypeName = "伤害", this.resListName = [ "3dres/effect/e_JSckjn2hd.lh" ], 
            this.startSound = "sound/skill_lq_jn3.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 1, this.skillUseRadius = 7, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 4e4, 200, 0, .6, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            }, {
                triggerUnit: 0,
                addType: 0,
                buffID: 1069
            } ]), this.lvData[2] = new Wl(8, 36e3, 300, 0, .6, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            }, {
                triggerUnit: 0,
                addType: 0,
                buffID: 1069
            } ]), this.lvData[3] = new Wl(12, 32e3, 400, 0, .6, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            }, {
                triggerUnit: 0,
                addType: 0,
                buffID: 1069
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 850, this.playTimeFixType = 1, 
            this.recoverHpType = 2, this.recoverHpValue = .6, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.isSuperDamage = !1, this.recoverHpType = 2, this.recoverHpValue = .6, this.flyObj = [ new Xl(new Nc(), 200, 1, 4, 2, 200, 4) ];
        }
    }
    class Nc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Nc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn3a", this.effectName = "3dres/effect/e_JSlbjn3a.lh", 
            this.flytime = 600, this.colliderRadius = 1.5, this.moveType = 0, this.endFlyObj = [ new Mc() ];
        }
    }
    class Mc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Mc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn3b", this.effectName = "3dres/effect/e_JSlbjn3b.lh", 
            this.flytime = 5e3, this.moveType = 0, this.colliderNum = 0, this.colliderCheckTime = 1e3, 
            this.colliderRadius = 1.5, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Ac extends Kl {
        GetNewInstance() {
            return new Ac();
        }
        constructor() {
            super(), this.skillID = 13093, this.skillPriority = 1, this.skillName = "炽热炼狱", 
            this.skillInfo = "对范围敌人造成持续伤害,并附带灼烧效果持续2秒", this.skillIcon = "icon/jntb_lb3.png", 
            this.skillTypeName = "伤害", this.resListName = [ "3dres/effect/e_JSckjn2hd.lh" ], 
            this.startSound = "sound/skill_lq_jn3.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 1, this.skillUseRadius = 7, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 4e4, 1200, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            }, {
                triggerUnit: 0,
                addType: 0,
                buffID: 1069
            } ]), this.lvData[2] = new Wl(8, 36e3, 1300, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            }, {
                triggerUnit: 0,
                addType: 0,
                buffID: 1069
            } ]), this.lvData[3] = new Wl(12, 32e3, 1400, 0, .8, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 1070
            }, {
                triggerUnit: 0,
                addType: 0,
                buffID: 1069
            } ]), this.cdType = 0, this.cdFixType = 2, this.playTime = 850, this.playTimeFixType = 1, 
            this.recoverHpType = 2, this.recoverHpValue = .6, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.isSuperDamage = !1, this.recoverHpType = 2, this.recoverHpValue = .6, this.flyObj = [ new Xl(new Oc(), 200, 1, 4, 2, 200, 4) ];
        }
    }
    class Oc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Oc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn3a", this.effectName = "3dres/effect/e_JSlbjn3a.lh", 
            this.flytime = 600, this.colliderRadius = 1.5, this.moveType = 0, this.endFlyObj = [ new Ec() ];
        }
    }
    class Ec extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ec();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjxdsjn3b", this.effectName = "3dres/effect/e_JSlbjn3b.lh", 
            this.flytime = 5e3, this.moveType = 0, this.colliderNum = 0, this.colliderCheckTime = 1e3, 
            this.colliderRadius = 1.5, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Gc extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 3100, this.skillPriority = 0, this.skillName = "单体远程普攻", 
            this.startSound = "sound/skill_atm_pg.mp3", this.resListName = [ "3dres/effect/e_atmjn1b.lh", "3dres/effect/e_atmjn1.lh" ], 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 2.2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 450, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.isMustHaveTarget = !0, this.recoverHpType = 0, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new Rc(), 160) ];
        }
        GetNewInstance() {
            return new Gc();
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3101, !0), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.owner.skillReplace(0, this.sk_pgqhIndex, 5e3, 999), 
            this.sk_pgqh.curCD = 0, e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i)), bl.Instance.removeBuff(this.owner, 1098), 
            bl.Instance.AddBuff(this.owner, this.owner, 1098);
        }
    }
    class Rc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Rc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmpg", this.effectName = "3dres/effect/e_atmpgb.lh", 
            this.flySpeed = 12, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = .5, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class Bc extends Kl {
        GetNewInstance() {
            return new Bc();
        }
        constructor() {
            super(), this.skillID = 3101, this.skillPriority = 0, this.skillName = "单体强化远程普攻", 
            this.startSound = "sound/skill_atm_pg.mp3", this.skillInfo = "", this.skillIcon = "", 
            this.skillTypeName = "", this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, 
            this.skillUseRadius = 5, this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, 
            this.lvData[1] = new Wl(0, 1188, 180, 0, .6), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 450, this.playTimeFixType = 1, this.skillAnim = "attack", this.skillAnimLoop = !1, 
            this.isMustHaveTarget = !0, this.isPhyDamage = !1, this.isSuperDamage = !1, this.recoverHpType = 2, 
            this.recoverHpValue = .8, this.isShowUI = !1, this.flyObj = [ new Xl(new Hc(), 160) ];
        }
    }
    class Hc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Hc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmpg2", this.effectName = "3dres/effect/e_atmjn1.lh", 
            this.flySpeed = 16, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = .5, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class Fc extends Kl {
        GetNewInstance() {
            return new Fc();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3102, this.skillPriority = 1, this.skillName = "光之力", this.skillInfo = "使用后获得一个护盾,普攻转化为魔法攻击且攻击距离提升,持续5秒。同时增加移速,持续2秒", 
            this.skillIcon = "icon/jntb_aoteman_1.png", this.skillTypeName = "护盾", this.startSound = "sound/skill_atm_jn1.mp3", 
            this.resListName = [ "3dres/effect/e_JShzjn1.lh", "3dres/effect/e_JShzbuff.lh" ], 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = .5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.isSuperDamage = !1, 
            this.isPhyDamage = !1, this.lvData[1] = new Wl(1, 9e3, 0, 0, 0, null, [ 1086, 1092 ], null, null, "移速+20%,400+最大生命5%的护盾"), 
            this.lvData[2] = new Wl(3, 8600, 0, 0, 0, null, [ 1087, 1093 ], null, null, "移速+22%,400+最大生命6%的护盾"), 
            this.lvData[3] = new Wl(5, 8200, 0, 0, 0, null, [ 1088, 1094 ], null, null, "移速+24%,400+最大生命7%的护盾"), 
            this.lvData[4] = new Wl(7, 7800, 0, 0, 0, null, [ 1089, 1095 ], null, null, "移速+26%,400+最大生命8%的护盾"), 
            this.lvData[5] = new Wl(9, 7400, 0, 0, 0, null, [ 1090, 1096 ], null, null, "移速+28%,400+最大生命9%的护盾"), 
            this.lvData[6] = new Wl(11, 7e3, 0, 0, 0, null, [ 1091, 1097 ], null, null, "移速+30%,400+最大生命10%的护盾"), 
            this.playTime = 100, this.cdFixType = 2, this.switchSkillState = !1;
        }
    }
    class Vc extends Kl {
        GetNewInstance() {
            return new Vc();
        }
        constructor() {
            super(), this.skillID = 3103, this.skillPriority = 1, this.skillName = "十字光斩", this.skillInfo = "向指定方向发射十字光斩对路径上敌人造成伤害,自身后退一段距离", 
            this.skillIcon = "icon/jntb_aoteman_2.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_atm_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 5.5, 
            this.colliderUnitType = [ 1, 2 ], this.isPhyDamage = !1, this.lv = 0, this.maxlv = 6, 
            this.lvData[1] = new Wl(1, 1e4, 500, 0, .65, [ 1100 ], null, null), this.lvData[2] = new Wl(3, 9600, 560, 0, .65, [ 1100 ], null, null), 
            this.lvData[3] = new Wl(5, 9200, 620, 0, .65, [ 1100 ], null, null), this.lvData[4] = new Wl(7, 8800, 680, 0, .65, [ 1100 ], null, null), 
            this.lvData[5] = new Wl(9, 8400, 740, 0, .65, [ 1100 ], null, null), this.lvData[6] = new Wl(11, 8e3, 800, 0, .65, [ 1100 ], null, null), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 600, this.playTimeFixType = 1, 
            this.skillAnim = "skill", this.skillAnimLoop = !1, this.moveHeroType = 2, this.moveHeroTime = 200, 
            this.moveHeroSpeed = -8, this.recoverHpType = 2, this.recoverHpValue = .5, this.isSuperDamage = !1, 
            this.flyObj = [ new Xl(new jc()) ];
        }
    }
    class jc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new jc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmjn2", this.effectName = "3dres/effect/e_atmjn2.lh", 
            this.flySpeed = 5, this.flytime = 600, this.moveType = 1, this.colliderNum = 0, 
            this.colliderRadius = 3, this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class Wc extends Kl {
        GetNewInstance() {
            return new Wc();
        }
        constructor() {
            super(), this.skillID = 3104, this.skillPriority = 1, this.skillName = "闪耀光线", this.skillInfo = "向指定方向发射闪耀光线对路径上敌人造成魔法伤害", 
            this.skillIcon = "icon/jntb_aoteman_3.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_atm_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 18, 
            this.colliderUnitType = [ 1, 2 ], this.isPhyDamage = !1, this.lv = 0, this.maxlv = 3, 
            this.lvData[1] = new Wl(4, 4e4, 700, 0, .88, null, null, null), this.lvData[2] = new Wl(8, 35e3, 1050, 0, .88, null, null, null), 
            this.lvData[3] = new Wl(12, 3e4, 1400, 0, .88, null, null, null), this.cdType = 0, 
            this.cdFixType = 2, this.playTime = 600, this.playTimeFixType = 1, this.skillAnim = "skill2", 
            this.skillAnimLoop = !1, this.recoverHpType = 2, this.recoverHpValue = .5, this.isSuperDamage = !1, 
            this.flyObj = [ new Xl(new Xc()), new Xl(new Kc(), 500), new Xl(new qc(), 500) ];
        }
    }
    class Xc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Xc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmjn3", this.effectName = "3dres/effect/e_atmjn3b.lh", 
            this.flySpeed = 0, this.flytime = 500, this.moveType = 1, this.isIgnoreSameUnit = !0;
        }
    }
    class Kc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Kc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmjn31", this.effectName = "3dres/effect/e_atmjn3.lh", 
            this.isGlobalCreateEffect = !0, this.flySpeed = 0, this.flytime = 1e3, this.moveType = 1, 
            this.isIgnoreSameUnit = !0;
        }
    }
    class qc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new qc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmjn32", this.effectName = "", this.flySpeed = 1080, 
            this.flytime = 1, this.moveType = 1, this.colliderNum = 0, this.colliderRadius = 1.2, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class zc extends Kl {
        GetNewInstance() {
            return new zc();
        }
        constructor() {
            super(), this.skillID = 13104, this.skillPriority = 1, this.skillName = "闪耀光线", 
            this.skillInfo = "向指定方向发射闪耀光线对路径上敌人造成魔法伤害", this.skillIcon = "icon/jntb_aoteman_3.png", 
            this.skillTypeName = "伤害", this.startSound = "sound/skill_atm_jn3.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 18, this.colliderUnitType = [ 1, 2 ], 
            this.isPhyDamage = !1, this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 32e3, 2e3, 0, 1, null, null, null), 
            this.lvData[2] = new Wl(8, 28e3, 2250, 0, 1, null, null, null), this.lvData[3] = new Wl(12, 24e3, 2500, 0, 1, null, null, null), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 600, this.playTimeFixType = 1, 
            this.skillAnim = "skill2", this.skillAnimLoop = !1, this.recoverHpType = 2, this.recoverHpValue = .5, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new Yc()), new Xl(new Jc(), 500), new Xl(new Qc(), 500) ];
        }
    }
    class Yc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Yc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmjn3", this.effectName = "3dres/effect/e_atmjn3b.lh", 
            this.flySpeed = 0, this.flytime = 500, this.moveType = 1, this.isIgnoreSameUnit = !0;
        }
    }
    class Jc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Jc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmjn31", this.effectName = "3dres/effect/e_atmjn3.lh", 
            this.flySpeed = 0, this.flytime = 1e3, this.moveType = 1, this.isIgnoreSameUnit = !0;
        }
    }
    class Qc extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Qc();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxatmjn32", this.effectName = "", this.flySpeed = 1080, 
            this.flytime = 1, this.moveType = 1, this.colliderNum = 0, this.colliderRadius = 1.2, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class Zc extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.useIndex = 0, this.skillID = 3111, this.skillPriority = 0, 
            this.skillName = "单体远程普攻", this.resListName = [ "3dres/effect/e_JSllpg3.lh" ], this.startSound = "sound/skill_als_pg.mp3", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 5, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, .8), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 380, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.isMustHaveTarget = !0, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new $c(), 140) ];
        }
        GetNewInstance() {
            return new Zc();
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3112, !0), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.owner.skillReplace(0, this.sk_pgqhIndex, 99999999, 1), 
            this.sk_pgqh.curCD = 0, e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i), bl.Instance.removeBuff(this.owner, 1101), 
            bl.Instance.AddBuff(this.owner, this.owner, 1101));
        }
    }
    class $c extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new $c();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalspg", this.effectName = "3dres/effect/e_JSllpg.lh", 
            this.flySpeed = 12, this.moveType = 1, this.isLockTarget = !0, this.effectObjHeightType = 1, 
            this.colliderNum = 1, this.colliderRadius = .5, this.colliderUnitType = [ 1, 2, 3 ], 
            this.colliderNumHitAdd = 1;
        }
    }
    class ed extends Kl {
        GetNewInstance() {
            return new ed();
        }
        onSkillStart() {
            bl.Instance.removeBuff(this.owner, 1101);
        }
        constructor() {
            super(), this.skillID = 3112, this.skillPriority = 1, this.skillName = "强化普攻", this.skillInfo = "", 
            this.skillIcon = "icon/jntb_aoteman_3.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_als_pg2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 7, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 1, this.lvData[1] = new Wl(1, 99999999, 0, 0, .8, null, null, null), 
            this.cdType = 0, this.cdFixType = 0, this.playTime = 1e3, this.playTimeFixType = 0, 
            this.skillAnim = "skill", this.skillAnimLoop = !1, this.isMoveInterrupt = 300, this.recoverHpType = 1, 
            this.recoverHpValue = 1, this.isSuperDamage = !0, this.isShowUI = !1, this.flyObj = [ new Xl(new td()), new Xl(new id(), 50), new Xl(new id(), 450), new Xl(new id(), 900) ];
        }
    }
    class td extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new td();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalsqhpg", this.effectName = "3dres/effect/e_JSllpgb.lh", 
            this.flySpeed = 0, this.flytime = 1e3, this.moveType = 1, this.destroyType = 1;
        }
    }
    class id extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new id();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalsqhpg2", this.effectName = "", this.flySpeed = 360, 
            this.flytime = 1, this.moveType = 1, this.colliderNum = 0, this.colliderRadius = 1, 
            this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class sd extends Kl {
        GetNewInstance() {
            return new sd();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3113, this.skillPriority = 1, this.skillName = "推进火箭弹", 
            this.skillInfo = "向指定方向发射火箭弹,命中敌方英雄单位后造成物理伤害(可击退近身敌人);可强化普攻", this.skillIcon = "icon/jntb_luban_2.png", 
            this.skillTypeName = "伤害", this.startSound = "sound/skill_als_jn2.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 20, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 15e3, 400, 0, .8), this.lvData[2] = new Wl(3, 14e3, 450, 0, .8), 
            this.lvData[3] = new Wl(5, 13e3, 500, 0, .8), this.lvData[4] = new Wl(7, 12e3, 550, 0, .8), 
            this.lvData[5] = new Wl(9, 11e3, 600, 0, .8), this.lvData[6] = new Wl(11, 1e4, 650, 0, .8), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 600, this.playTimeFixType = 1, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.recoverHpType = 0, this.recoverHpValue = 1, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new nd(), 200) ];
        }
    }
    class nd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new nd();
        }
        onCollider(e) {
            if (e) for (let t = 0; t < e.length; t++) {
                const i = e[t];
                i.unitType == me.HERO && u.round(i.logicPos.distance(this.ownerSk.owner.logicPos.x, this.ownerSk.owner.logicPos.y)) <= 200 && (!0, 
                i.attackMoveDirction.setValue(u.decimalRound(this.movelogicForwrad.x), u.decimalRound(this.movelogicForwrad.y)), 
                i.attackMoveOldLogicPos.setValue(i.logicPos.x, i.logicPos.y), i.attackMoveAddLogicPos.setValue(u.noDecimalRound(1.5 * i.attackMoveDirction.x), u.noDecimalRound(1.5 * i.attackMoveDirction.y)), 
                i.isAttackMove = !0, i.attackMoveCurFrame = 0, i.attackMoveAllFrame = 30, i.attackMoveIgnoreTerrain = !1, 
                bl.Instance.AddBuff(this.ownerSk.owner, i, 1085));
            }
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalsjn1", this.effectName = "3dres/effect/e_JSlljn2a.lh", 
            this.isGlobalCreateEffect = !0, this.flySpeed = 16, this.flytime = 1250, this.moveType = 1, 
            this.effectObjHeightType = 1, this.colliderNum = 1, this.colliderRadius = 1, this.colliderUnitType = [ 2 ], 
            this.isIgnoreSameUnit = !0, this.colliderNumHitAdd = 1, this.isSingleCollider = !0, 
            this.endFlyObj = [ new ad() ];
        }
    }
    class ad extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ad();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalsjn11", this.effectName = "3dres/effect/e_JSlljn2b.lh", 
            this.flytime = 350, this.moveType = 0;
        }
    }
    class od extends Kl {
        GetNewInstance() {
            return new od();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3114, this.skillPriority = 1, this.skillName = "高爆手雷", this.skillInfo = "向指定方向投掷一枚高爆手雷,对范围敌人造成物理伤害,并减速持续2秒;可强化普攻", 
            this.skillIcon = "icon/jntb_luban_1.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_als_jn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 8e3, 450, 0, .75, [ 1008 ]), 
            this.lvData[2] = new Wl(3, 7800, 500, 0, .75, [ 1008 ]), this.lvData[3] = new Wl(5, 7600, 550, 0, .75, [ 1008 ]), 
            this.lvData[4] = new Wl(7, 7400, 600, 0, .75, [ 1008 ]), this.lvData[5] = new Wl(9, 7200, 650, 0, .75, [ 1008 ]), 
            this.lvData[6] = new Wl(11, 7e3, 700, 0, .75, [ 1008 ]), this.cdType = 0, this.cdFixType = 2, 
            this.playTime = 600, this.playTimeFixType = 1, this.recoverHpType = 0, this.recoverHpValue = .9, 
            this.skillAnim = "attack", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.flyObj = [ new Xl(new ld()) ];
        }
    }
    class ld extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ld();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalsjn2", this.effectName = "3dres/effect/e_JSlljn1a.lh", 
            this.flytime = 800, this.fixFlyTimeType = 1, this.flySpeed = 8, this.moveType = 1, 
            this.moveLineType = 1, this.parabolaHeightOneFrame = .05, this.colliderRadius = 1.6, 
            this.noDamage = !0, this.endFlyObj = [ new hd() ];
        }
    }
    class hd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new hd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalsjn22", this.effectName = "3dres/effect/e_JSlljn1b.lh", 
            this.flytime = 600, this.moveType = 0, this.colliderNum = 0, this.colliderRadius = 1.6, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class rd extends Kl {
        GetNewInstance() {
            return new rd();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3115, this.skillPriority = 1, this.skillName = "空中打击", this.skillInfo = "向指定方向呼叫空中打击支援,每秒对范围内敌人造成伤害,持续10秒;被动:增加自身攻速20%,可强化普攻", 
            this.skillIcon = "icon/jntb_luban_3.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_als_jn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 5, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 4e4, 500, 0, .75, null, null, [ 1117 ]), 
            this.lvData[2] = new Wl(8, 3e4, 625, 0, .75, null, null, null), this.lvData[3] = new Wl(12, 2e4, 750, 0, .75, null, null, null), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 800, this.playTimeFixType = 1, 
            this.skillAnim = "skill2", this.skillAnimLoop = !1, this.recoverHpType = 0, this.recoverHpValue = 1, 
            this.isSuperDamage = !1, this.flyObj = [ new Xl(new cd()) ];
        }
    }
    class cd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new cd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxalsjn3", this.effectName = "3dres/effect/e_JSlljn3.lh", 
            this.flySpeed = 2, this.flytime = 6e3, this.moveType = 1, this.colliderCheckTime = 1200, 
            this.colliderNum = 0, this.colliderRadius = 3.2, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class dd extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 3116, this.skillPriority = 0, this.skillName = "战士单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_JSzypg01.lh", "3dres/effect/e_JSzypg02.lh" ], 
            this.startSound = "sound/skill_zypg.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1122, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 550, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, this.flyObj = [ new Xl(new ud()) ];
        }
        GetNewInstance() {
            return new dd();
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3120, !0), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.owner.skillReplace(0, this.sk_pgqhIndex, 99999999, 1), 
            this.sk_pgqh.curCD = 0, e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i));
        }
    }
    class ud extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new ud();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzypg", this.effectName = "3dres/effect/e_JSzypg01.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class pd extends Kl {
        GetNewInstance() {
            return new pd();
        }
        constructor() {
            super(), this.skillID = 3120, this.skillPriority = 0, this.skillName = "战士单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_JSzypg01.lh", "3dres/effect/e_JSzypg02.lh" ], 
            this.startSound = "sound/skill_zyqhpg.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 99999999, 110, 0, 1.2, [ 1107 ], null, null), 
            this.cdType = 0, this.cdFixType = 1, this.playTime = 550, this.playTimeFixType = 1, 
            this.skillAnim = "attack2", this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, 
            this.flyObj = [ new Xl(new md()) ];
        }
    }
    class md extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new md();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzypg2", this.effectName = "3dres/effect/e_JSzypg02.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1.5, 
            this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class gd extends Kl {
        GetNewInstance() {
            return new gd();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3117, this.skillPriority = 1, this.skillName = "枪出如龙", this.skillInfo = "向指定方向提枪冲锋,对路径上敌人造成伤害;冲锋后,强化下次普攻,命中敌方后造成伤害并减速,持续2秒", 
            this.skillIcon = "icon/jntb_zhaoyun_2.png", this.skillTypeName = "位移", this.startSound = "sound/skill_zyjn1.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 3, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 8e3, 190, 0, 1, null, null, null), 
            this.lvData[2] = new Wl(3, 7800, 214, 0, 1, null, null, null), this.lvData[3] = new Wl(5, 7600, 238, 0, 1, null, null, null), 
            this.lvData[4] = new Wl(7, 7400, 262, 0, 1, null, null, null), this.lvData[5] = new Wl(9, 7200, 286, 0, 1, null, null, null), 
            this.lvData[6] = new Wl(11, 7e3, 310, 0, 1, null, null, null), this.playTime = 300, 
            this.moveHeroType = 1, this.moveHeroTime = 200, this.isSuperDamage = !1, this.flyObj = [ new Xl(new fd()) ];
        }
    }
    class fd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new fd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzyjn1", this.effectName = "3dres/effect/e_JSzyjn01.lh", 
            this.flySpeed = 0, this.flytime = 520, this.moveType = 3, this.colliderNum = 0, 
            this.colliderRadius = 1.2, this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0, 
            this.autoCreateHitFlyObj = !1;
        }
    }
    class Id extends Kl {
        GetNewInstance() {
            return new Id();
        }
        constructor() {
            super(), this.skillID = 3118, this.skillPriority = 1, this.skillName = "龙翔击", this.skillInfo = "跃向空中发起龙翔击,对范围内敌人造成伤害并眩晕1秒", 
            this.skillIcon = "icon/jntb_zhaoyun_1.png", this.skillTypeName = "位移", this.startSound = "sound/skill_zyjn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 4.2, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 14e3, 200, 0, 1, [ 1103 ], []), 
            this.lvData[2] = new Wl(3, 13600, 236, 0, 1, [ 1103 ], []), this.lvData[3] = new Wl(5, 13200, 272, 0, 1, [ 1103 ], []), 
            this.lvData[4] = new Wl(7, 12800, 308, 0, 1, [ 1103 ], []), this.lvData[5] = new Wl(9, 12400, 344, 0, 1, [ 1103 ], []), 
            this.lvData[6] = new Wl(11, 12e3, 380, 0, 1, [ 1103 ], []), this.playTime = 500, 
            this.cdFixType = 2, this.skillAnim = "skill2", this.skillAnimLoop = !1, this.flyObj = [ new Xl(new vd(), 400), new Xl(new _d(), 400) ], 
            this.moveHeroType = 1, this.moveHeroTime = 100, this.moveHeroDelayTime = 300, this.isSuperDamage = !1;
        }
    }
    class vd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new vd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzyjn21", this.effectName = "3dres/effect/e_JSzyjn02.lh", 
            this.flySpeed = 0, this.moveType = 0, this.flytime = 1500;
        }
    }
    class _d extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new _d();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzyjn2", this.effectName = "", this.flySpeed = 0, 
            this.moveType = 0, this.flytime = 200, this.colliderNum = 0, this.colliderRadius = 2, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0, this.isOwnerDeadDestroy = !0;
        }
    }
    class yd extends Kl {
        GetNewInstance() {
            return new yd();
        }
        constructor() {
            super(), this.skillID = 3119, this.skillPriority = 2, this.skillName = "风卷龙击", this.skillInfo = "向前方快速连续出枪对敌人造成伤害,命中目标可额外恢复一定血量()", 
            this.skillIcon = "icon/jntb_zhaoyun_3.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_zyjn3.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 3.7, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 2e4, 130, 0, .4, null, [ 1105 ], [ 1106 ], [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1108
            } ]), this.lvData[2] = new Wl(8, 18e3, 145, 0, .4, null, [ 1105 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1109
            } ]), this.lvData[3] = new Wl(12, 16e3, 160, 0, .4, null, [ 1105 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 1110
            } ]), this.playTime = 1333, this.skillAnim = "skill3", this.cdFixType = 2, this.recoverHpType = 0, 
            this.recoverHpValue = .16, this.isSuperDamage = !1, this.flyObj = [ new Xl(new wd()), new Xl(new Sd()), new Xl(new Dd(), 1300) ];
        }
    }
    class Sd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Sd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzyjn31", this.effectName = "3dres/effect/e_JSzyjn03.lh", 
            this.flySpeed = 0, this.flytime = 2400, this.moveType = 1, this.isOwnerDeadDestroy = !0;
        }
    }
    class wd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new wd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzyjn3", this.effectName = "", this.flySpeed = 0, 
            this.flytime = 1333, this.moveType = 3, this.colliderOffSet = 1.5, this.colliderNum = 0, 
            this.colliderRadius = 2, this.colliderCheckTime = 250, this.colliderUnitType = [ 1, 2 ], 
            this.isOwnerDeadDestroy = !0;
        }
    }
    class Dd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Dd();
        }
        onCollider(e) {
            if (e) for (let t = 0; t < e.length; t++) bl.Instance.AddBuff(this.ownerSk.owner, e[t], 1104);
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxzyjn32", this.effectName = "", this.flySpeed = 0, 
            this.flytime = 100, this.moveType = 3, this.colliderOffSet = 1.5, this.colliderNum = 1, 
            this.colliderRadius = 2.2, this.colliderUnitType = [ 1, 2 ], this.isOwnerDeadDestroy = !0;
        }
    }
    class kd extends Kl {
        constructor() {
            super(), this.sk_pgqhIndex = -1, this.skillID = 3121, this.skillPriority = 0, this.skillName = "单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_kaipg01.lh", "3dres/effect/e_kaipg02.lh" ], 
            this.startSound = "sound/skill_wu_pg.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, .8), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 500, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, this.flyObj = [ new Xl(new Cd()) ];
        }
        GetNewInstance() {
            return new kd();
        }
        switchPg(e, t, i) {
            -1 == this.sk_pgqhIndex && (this.sk_pgqh = this.owner.addSkill(3122, !1), this.sk_pgqhIndex = this.sk_pgqh.ownerSkillIndex), 
            -1 != this.sk_pgqhIndex && (this.owner.skillReplace(0, this.sk_pgqhIndex, 5e3, 1), 
            this.sk_pgqh.curCD = 0, e && 0 != e && (this.sk_pgqh.curLvData.addAtk = e), t && 0 != t && (this.sk_pgqh.curLvData.addTrueDamage = t), 
            i && 0 != i && (this.sk_pgqh.curLvData.damageScale = i));
        }
    }
    class Cd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Cd();
        }
        onCeateStart() {
            this.effectName = "attack" == this.ownerSk.owner.getNextPlayAnim("attack") ? "3dres/effect/e_kaipg01.lh" : "3dres/effect/e_kaipg02.lh";
        }
        onCollider(e) {
            e && 1 == e.length ? this.fixDamage = 1.5 : this.fixDamage = 1;
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxkaipg", this.effectName = "3dres/effect/e_kaipg01.lh", 
            this.flySpeed = -1, this.flytime = 300, this.effectShowTime = 600, this.moveType = 3, 
            this.isLockTarget = !0, this.isOnlyAtkLockTarget = !1, this.colliderNum = 1, this.colliderTime = 200, 
            this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class bd extends Kl {
        GetNewInstance() {
            return new bd();
        }
        constructor() {
            super(), this.skillID = 3122, this.skillPriority = 1, this.skillName = "单体近战普攻强化版", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.startSound = "sound/skill_wu_qhpg.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 3, 
            this.colliderUnitType = [ 1, 2, 3 ], this.lv = 1, this.maxlv = 1, this.curCD = 99999999, 
            this.lvData[1] = new Wl(0, 99999999, 0, 0, 1), this.cdType = 0, this.cdFixType = 1, 
            this.playTime = 500, this.playTimeFixType = 1, this.skillAnim = "", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Pd()) ], this.moveHeroType = 1, this.moveHeroTime = 100, 
            this.recoverHpType = 1, this.recoverHpValue = .5, this.isMustHaveTarget = !0, this.isShowUI = !1;
        }
    }
    class Pd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Pd();
        }
        onCollider(e) {
            e && 1 == e.length ? this.fixDamage = 1.5 : this.fixDamage = 1;
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill1_yxkaipg", this.effectName = "3dres/effect/e_kaipg03.lh", 
            this.flySpeed = 0, this.flytime = 300, this.effectShowTime = 1e3, this.moveType = 0, 
            this.isEffectYSameUnit = !0, this.colliderNum = 1, this.colliderTime = 200, this.colliderRadius = 2, 
            this.colliderUnitType = [ 1, 2, 3 ], this.isIgnoreSameUnit = !0;
        }
    }
    class xd extends Kl {
        GetNewInstance() {
            return new xd();
        }
        constructor() {
            super(), this.skillID = 3123, this.skillPriority = 1, this.skillName = "袖里飞刃", this.skillInfo = "向指定方向发射旋转飞刃,对路径上敌人造成伤害和减速,并增加自身攻速、移速、恢复生命", 
            this.skillIcon = "icon/jntb_kai_1.png", this.skillTypeName = "辅助", this.startSound = "sound/skill_wu_jn1.mp3", 
            this.resListName = [ "3dres/effect/e_kaijn2b.lh" ], this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 1, this.skillUseRadius = 5, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 11e3, 150, 0, .6, [ 2022 ], [ 2032 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 2023
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 2029
            } ]), this.lvData[2] = new Wl(3, 10800, 180, 0, .6, [ 2022 ], [ 2032 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 2024
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 2029
            } ]), this.lvData[3] = new Wl(5, 10600, 210, 0, .6, [ 2022 ], [ 2032 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 2025
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 2029
            } ]), this.lvData[4] = new Wl(7, 10400, 240, 0, .6, [ 2022 ], [ 2032 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 2026
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 2029
            } ]), this.lvData[5] = new Wl(9, 10200, 270, 0, .6, [ 2022 ], [ 2032 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 2027
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 2029
            } ]), this.lvData[6] = new Wl(11, 1e4, 300, 0, .6, [ 2022 ], [ 2032 ], null, [ {
                triggerUnit: 0,
                addType: 1,
                buffID: 2028
            }, {
                triggerUnit: 0,
                addType: 1,
                buffID: 2029
            } ]), this.playTime = 300, this.cdFixType = 2, this.skillAnim = "skill", this.flyObj = [ new Xl(new Td()) ];
        }
    }
    class Td extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Td();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxkaijn1", this.effectName = "3dres/effect/e_kaijn01.lh", 
            this.flySpeed = 7, this.flytime = 800, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1.2, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Ud extends Kl {
        GetNewInstance() {
            return new Ud();
        }
        onSkillStart() {
            this.owner.skillData[0].switchPg();
        }
        constructor() {
            super(), this.skillID = 3124, this.skillPriority = 1, this.skillName = "怒海狂刀", this.skillInfo = "向指定方向突进进行两次冲砍,每次造成伤害,第二段伤害会对目标造成击退,同时强化下次普攻;被动:脱战后,每秒恢复1%最大生命", 
            this.skillIcon = "icon/jntb_kai_2.png", this.skillTypeName = "伤害", this.startSound = "sound/skill_wu_jn2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 3, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 8e3, 120, 0, .4, null, null, [ 2029 ], null, ""), 
            this.lvData[2] = new Wl(3, 7600, 180, 0, .4, null, null, null, null, ""), this.lvData[3] = new Wl(5, 7200, 240, 0, .4, null, null, null, null, ""), 
            this.lvData[4] = new Wl(7, 6800, 300, 0, .4, null, null, null, null, ""), this.lvData[5] = new Wl(9, 6400, 360, 0, .4, null, null, null, null, ""), 
            this.lvData[6] = new Wl(11, 6e3, 400, 0, .4, null, null, null, null, ""), this.playTime = 600, 
            this.skillAnim = "skill2", this.cdFixType = 2, this.moveHeroType = 1, this.moveHeroTime = 500, 
            this.recoverHpType = 1, this.recoverHpValue = .5, this.isSuperDamage = !1, this.flyObj = [ new Xl(new Ld()), new Xl(new Nd(), 500) ];
        }
    }
    class Ld extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ld();
        }
        onCollider(e) {
            e && 1 == e.length ? this.fixDamage = 1.5 : this.fixDamage = 1;
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxkaijn2", this.effectName = "3dres/effect/e_kaijn02.lh", 
            this.flySpeed = 0, this.flytime = 500, this.effectShowTime = 800, this.moveType = 3, 
            this.colliderNum = 1, this.colliderTime = 200, this.colliderRadius = 2, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Nd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Nd();
        }
        onCollider(e) {
            if (e) {
                this.ownerSk.owner.stopMoveAndLastPos(), e && 1 == e.length ? this.fixDamage = 1.5 : this.fixDamage = 1;
                for (let t = 0; t < e.length; t++) {
                    const i = e[t];
                    bl.Instance.AddBuff(this.ownerSk.owner, i, 2020);
                }
            }
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxkaijn21", this.flySpeed = 0, this.flytime = 500, 
            this.moveType = 3, this.colliderNum = 1, this.colliderTime = 50, this.colliderRadius = 2, 
            this.colliderUnitType = [ 1, 2 ], this.isIgnoreSameUnit = !0;
        }
    }
    class Md extends Kl {
        GetNewInstance() {
            return new Md();
        }
        onSkillStart() {
            this.owner.moveEnable = !0, this.owner.skillMoveEnable = !0;
        }
        onSkillEnd() {
            this.owner.skillMoveEnable = !1;
        }
        constructor() {
            super(), this.skillID = 3125, this.skillPriority = 2, this.skillName = "刀魔降临", this.skillInfo = "释放后,强化自身攻击、移速、减伤,并对周围目标造成刀气伤害,持续8秒;被动:普攻、怒海狂刀只命中一个英雄时额外造成50%伤害;", 
            this.skillIcon = "icon/jntb_kai_3.png", this.skillTypeName = "强化", this.resListName = [ "3dres/effect/e_kaijn03.lh", "3dres/effect/e_kaijn3b.lh" ], 
            this.startSound = "sound/skill_wu_jn3.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 2, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 36e3, 20, 0, .1), this.lvData[2] = new Wl(8, 34e3, 20, 0, .1), 
            this.lvData[3] = new Wl(12, 32e3, 20, 0, .1), this.cdType = 0, this.cdFixType = 2, 
            this.playTime = 500, this.playTimeFixType = 2, this.skillAnim = "skill3", this.recoverHpType = 1, 
            this.recoverHpValue = .5, this.isSuperDamage = !1, this.flyObj = [ new Xl(new Ad()), new Xl(new Od(), 400) ];
        }
    }
    class Ad extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Ad();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjnjn3", this.effectName = "3dres/effect/e_kaijn03.lh", 
            this.flytime = 800, this.moveType = 2;
        }
    }
    class Od extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Od();
        }
        onCeateStart() {
            var e = 2021;
            switch (this.ownerSk.lv) {
              case 1:
                e = 2021;
                break;

              case 2:
                e = 2030;
                break;

              case 3:
                e = 2031;
            }
            bl.Instance.AddBuff(this.ownerSk.owner, this.ownerSk.owner, e);
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjnjn31", this.flySpeed = 0, this.flytime = 8e3, 
            this.moveType = 2, this.colliderNum = 0, this.colliderRadius = 2, this.colliderCheckTime = 1e3, 
            this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Ed extends Kl {
        GetNewInstance() {
            return new Ed();
        }
        customFixAtk(e, t) {
            return this.owner.skillData[3].customFixAtk(e, t);
        }
        constructor() {
            super(), this.skillID = 15001, this.skillPriority = 0, this.skillName = "单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_laohupg_01.lh", "3dres/effect/e_laohupg_02.lh" ], 
            this.startSound = "sound/skill_betpg.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 600, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, this.flyObj = [ new Xl(new Gd()) ];
        }
    }
    class Gd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Gd();
        }
        onCeateStart() {
            this.effectName = "attack" == this.ownerSk.owner.getNextPlayAnim("attack") ? "3dres/effect/e_laohupg_01.lh" : "3dres/effect/e_laohupg_02.lh";
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxbrtpg", this.effectName = "3dres/effect/e_laohupg_01.lh", 
            this.flySpeed = -1, this.flytime = 300, this.moveType = 3, this.isLockTarget = !0, 
            this.isOnlyAtkLockTarget = !1, this.colliderNum = 0, this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Rd extends Kl {
        GetNewInstance() {
            return new Rd();
        }
        customFixAtk(e, t) {
            return this.owner.skillData[3].customFixAtk(e, t);
        }
        constructor() {
            super(), this.skillID = 15002, this.skillPriority = 2, this.skillName = "猛虎跃击", 
            this.skillInfo = "扑向指定位置对目标造成伤害并减速50%,持续2秒", this.skillIcon = "icon/jntb_baihu_jn1.png", 
            this.skillTypeName = "控制", this.startSound = "sound/skill_betjn1.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 4, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 14e3, 120, 0, .5, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 2004
            } ]), this.lvData[2] = new Wl(3, 13400, 155, 0, .5, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 2004
            } ]), this.lvData[3] = new Wl(5, 12800, 190, 0, .5, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 2004
            } ]), this.lvData[4] = new Wl(7, 12200, 225, 0, .5, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 2004
            } ]), this.lvData[5] = new Wl(9, 11600, 260, 0, .5, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 2004
            } ]), this.lvData[6] = new Wl(11, 11e3, 295, 0, .5, null, null, null, [ {
                triggerUnit: 0,
                addType: 0,
                buffID: 2004
            } ]), this.playTime = 600, this.cdFixType = 2, this.skillAnim = "skill", this.skillAnimLoop = !1, 
            this.flyObj = [ new Xl(new Bd()) ], this.moveHeroType = 1, this.isSuperDamage = !1, 
            this.moveHeroTime = 400, this.moveHeroDelayTime = 100;
        }
    }
    class Bd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Bd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxbrtjn1", this.effectName = "3dres/effect/e_laohu_jn_01.lh", 
            this.flySpeed = 0, this.moveType = 0, this.flytime = 600, this.effectShowTime = 1500, 
            this.colliderNum = 0, this.colliderRadius = 2, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class Hd extends Kl {
        GetNewInstance() {
            return new Hd();
        }
        onSkillStart() {
            this.owner.moveEnable = !0, this.owner.skillMoveEnable = !0;
        }
        onSkillEnd() {
            this.owner.skillMoveEnable = !1;
        }
        customFixAtk(e, t) {
            return this.owner.skillData[3].customFixAtk(e, t);
        }
        constructor() {
            super(), this.skillID = 15003, this.skillPriority = 3, this.skillName = "旋转爪击", 
            this.skillInfo = "旋转爪击对范围内敌人造成两次伤害", this.skillIcon = "icon/jntb_baihu_jn2.png", 
            this.skillTypeName = "伤害", this.startSound = "sound/skill_betjn2.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 0, this.skillUseRadius = 3, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 6e3, 125, 0, .8), this.lvData[2] = new Wl(3, 5800, 150, 0, .8), 
            this.lvData[3] = new Wl(5, 5600, 175, 0, .8), this.lvData[4] = new Wl(7, 5400, 200, 0, .8), 
            this.lvData[5] = new Wl(9, 5200, 225, 0, .8), this.lvData[6] = new Wl(11, 5e3, 250, 0, .8), 
            this.playTime = 600, this.cdFixType = 2, this.recoverHpType = 1, this.recoverHpValue = .5, 
            this.skillAnim = "skill2", this.flyObj = [ new Xl(new Fd()) ];
        }
    }
    class Fd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Fd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxbetjn2", this.effectName = "3dres/effect/e_laohu_jn_02.lh", 
            this.flySpeed = 0, this.flytime = 500, this.moveType = 2, this.colliderNum = 0, 
            this.colliderRadius = 3, this.colliderCheckTime = 300, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Vd extends Kl {
        GetNewInstance() {
            return new Vd();
        }
        customFixAtk(e, t) {
            var i = 0;
            if (this.lv > 0) {
                var s = Math.floor(100 * (1 - this.owner.hp / this.owner.hpMax));
                1 == this.lv ? i = 3 * s : 2 == this.lv ? i = 4 * s : 3 == this.lv && (i = 5 * s);
            }
            return i;
        }
        constructor() {
            super(), this.skillID = 15004, this.skillPriority = 1, this.skillName = "白虎之力", 
            this.skillInfo = "引动白虎之力,每秒恢复百分比生命,并增加移速30%,持续5秒;被动:每降低1%生命,提升物理攻击", this.skillIcon = "icon/jntb_baihu_jn3.png", 
            this.skillTypeName = "强化", this.resListName = [ "3dres/effect/e_laohu_jn_03_a.lh", "3dres/effect/e_laohu_jn_03_b.lh" ], 
            this.startSound = "sound/skill_betjn3.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = .5, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 32e3, 0, 0, 0, null, [ 2e3, 2001 ]), 
            this.lvData[2] = new Wl(8, 31e3, 0, 0, 0, null, [ 2e3, 2002 ]), this.lvData[3] = new Wl(12, 3e4, 0, 0, 0, null, [ 2e3, 2003 ]), 
            this.playTime = 0, this.cdFixType = 2, this.flyObj = [ new Xl(new jd()) ];
        }
    }
    class jd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new jd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxbetjn3", this.effectName = "3dres/effect/e_laohu_jn_03_a.lh", 
            this.flySpeed = 0, this.flytime = 500, this.moveType = 2;
        }
    }
    class Wd extends Kl {
        GetNewInstance() {
            return new Wd();
        }
        constructor() {
            super(), this.skillID = 14001, this.skillPriority = 0, this.skillName = "单体近战普攻", 
            this.skillInfo = "", this.skillIcon = "", this.skillTypeName = "", this.resListName = [ "3dres/effect/e_jiedunpg_01.lh", "3dres/effect/e_jiedunpg_02.lh" ], 
            this.startSound = "sound/skill_badunpg.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 0, this.skillUseRadius = 2, this.colliderUnitType = [ 1, 2, 3 ], 
            this.lv = 1, this.maxlv = 1, this.lvData[1] = new Wl(0, 1188, 0, 0, 1), this.cdType = 0, 
            this.cdFixType = 1, this.playTime = 500, this.playTimeFixType = 1, this.skillAnim = "attack", 
            this.skillAnimLoop = !1, this.recoverHpType = 1, this.recoverHpValue = 1, this.flyObj = [ new Xl(new Xd()) ];
        }
    }
    class Xd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Xd();
        }
        onCeateStart() {
            this.effectName = "attack" == this.ownerSk.owner.getNextPlayAnim("attack") ? "3dres/effect/e_jiedunpg_01.lh" : "3dres/effect/e_jiedunpg_02.lh";
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjiedunpg", this.effectName = "3dres/effect/e_jiedunpg_01.lh", 
            this.flySpeed = -1, this.flytime = 300, this.effectShowTime = 600, this.moveType = 3, 
            this.isLockTarget = !0, this.isOnlyAtkLockTarget = !1, this.colliderNum = 1, this.colliderTime = 200, 
            this.colliderRadius = 1, this.colliderUnitType = [ 1, 2, 3 ];
        }
    }
    class Kd extends Kl {
        GetNewInstance() {
            return new Kd();
        }
        constructor() {
            super(), this.skillID = 14002, this.skillPriority = 1, this.skillName = "嗜血光斩", 
            this.skillInfo = "向指定方向发出光斩,对路径上敌人造成伤害并减速,持续3秒;(技能可吸血)", this.skillIcon = "icon/jntb_badun_1.png", 
            this.skillTypeName = "伤害", this.startSound = "sound/skill_badun1.mp3", this.skillNeddLv = 0, 
            this.skillType = 0, this.skillUseType = 1, this.skillUseRadius = 5.2, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 8e3, 195, 0, .7, [ 2042 ], null, null), 
            this.lvData[2] = new Wl(3, 8e3, 220, 0, .72, [ 2042 ], null, null), this.lvData[3] = new Wl(5, 8e3, 245, 0, .74, [ 2042 ], null, null), 
            this.lvData[4] = new Wl(7, 8e3, 270, 0, .76, [ 2042 ], null, null), this.lvData[5] = new Wl(9, 8e3, 295, 0, .78, [ 2042 ], null, null), 
            this.lvData[6] = new Wl(11, 8e3, 320, 0, .8, [ 2042 ], null, null), this.cdType = 0, 
            this.cdFixType = 2, this.playTime = 500, this.playTimeFixType = 1, this.skillAnim = "skill", 
            this.skillAnimLoop = !1, this.isSuperDamage = !1, this.recoverHpType = 1, this.recoverHpValue = .8, 
            this.flyObj = [ new Xl(new qd(), 0) ];
        }
    }
    class qd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new qd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjiedunjn1", this.effectName = "3dres/effect/e_jiedunjn_01_c.lh", 
            this.flySpeed = 12, this.flytime = 360, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class zd extends Kl {
        GetNewInstance() {
            return new zd();
        }
        onAddSkill(e) {
            e.callBackKillHero = (() => {
                this.curCD = 50;
            }), e.callBackHelpKillHero = (() => {
                this.curCD = 50;
            });
        }
        constructor() {
            super(), this.skillID = 14003, this.skillPriority = 1, this.skillName = "瞬斩", this.skillInfo = "闪烁至指定位置,落地时产生爆炸,对周围目标造成伤害,并眩晕0.5秒(击杀、助攻立即刷新CD)", 
            this.skillIcon = "icon/jntb_badun_2.png", this.skillTypeName = "位移", this.startSound = "sound/skill_badun2.mp3", 
            this.skillNeddLv = 0, this.skillType = 0, this.skillUseType = 2, this.skillUseRadius = 4.2, 
            this.colliderUnitType = [ 1, 2 ], this.lv = 0, this.maxlv = 6, this.lvData[1] = new Wl(1, 17e3, 325, 0, .6, [ 2039 ], null, null, null), 
            this.lvData[2] = new Wl(3, 16400, 350, 0, .6, [ 2039 ], null, null, null), this.lvData[3] = new Wl(5, 15800, 375, 0, .6, [ 2039 ], null, null, null), 
            this.lvData[4] = new Wl(7, 15200, 400, 0, .6, [ 2039 ], null, null, null), this.lvData[5] = new Wl(9, 14600, 425, 0, .6, [ 2039 ], null, null, null), 
            this.lvData[6] = new Wl(11, 14e3, 450, 0, .6, [ 2039 ], null, null, null), this.playTime = 300, 
            this.cdFixType = 2, this.skillAnim = "skill3", this.skillAnimLoop = !1, this.isSuperDamage = !1, 
            this.recoverHpType = 0, this.recoverHpValue = .5, this.flyObj = [ new Xl(new Yd()), new Xl(new Jd(), 50) ], 
            this.moveHeroType = 1, this.moveHeroTime = 0;
        }
    }
    class Yd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Yd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjiedunjn2", this.effectName = "3dres/effect/e_jiedunjn_02_b.lh", 
            this.flySpeed = 0, this.moveType = 1, this.colliderRadius = 1, this.flytime = 750, 
            this.noDamage = !0;
        }
    }
    class Jd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Jd();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjiedunjn21", this.effectName = "3dres/effect/e_jiedunjn_02_a.lh", 
            this.flySpeed = 0, this.moveType = 2, this.flytime = 400, this.effectShowTime = 1500, 
            this.colliderNum = 1, this.colliderTime = 100, this.colliderRadius = 2, this.colliderUnitType = [ 1, 2 ];
        }
    }
    class Qd extends Kl {
        GetNewInstance() {
            return new Qd();
        }
        onSkillStart() {
            this.owner.moveEnable = !0, this.owner.skillMoveEnable = !0, this.owner.attackMoveAllFrame = 1;
        }
        onSkillEnd() {
            this.owner.skillMoveEnable = !1, this.owner.attackMoveAllFrame = 0;
        }
        constructor() {
            super(), this.skillID = 14004, this.skillPriority = 1, this.skillName = "毁灭轰击", 
            this.skillInfo = "增加自身移速向指定方向发射火弹,火弹飞行至最远距离或碰撞到敌方英雄时产生爆炸,对范围内目标造成伤害(可移动释放)", this.skillIcon = "icon/jntb_badun_3.png", 
            this.skillTypeName = "伤害", this.resListName = [ "3dres/effect/e_jiedunjn_01_b.lh" ], 
            this.startSound = "sound/skill_badun3.mp3", this.skillNeddLv = 0, this.skillType = 0, 
            this.skillUseType = 1, this.skillUseRadius = 6, this.colliderUnitType = [ 1, 2 ], 
            this.lv = 0, this.maxlv = 3, this.lvData[1] = new Wl(4, 42e3, 285, 0, .22, null, [ 2040, 2041 ], null), 
            this.lvData[2] = new Wl(8, 38e3, 310, 0, .26, null, [ 2040, 2041 ], null), this.lvData[3] = new Wl(12, 34e3, 335, 0, .3, null, [ 2040, 2041 ], null), 
            this.cdType = 0, this.cdFixType = 2, this.playTime = 2100, this.playTimeFixType = 2, 
            this.skillAnim = "skill2", this.skillAnimLoop = !1, this.isSuperDamage = !1, this.isVertigoStopSkill = !0, 
            this.recoverHpType = 0, this.recoverHpValue = .5, this.flyObj = [ new Xl(new Zd(), 0, 1, 5, 5, 500, 5) ];
        }
    }
    class Zd extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new Zd();
        }
        onCollider(e) {
            if (e) for (let t = 0; t < e.length; t++) {
                if (e[t].unitType == me.HERO) {
                    this.curFlytime = this.flytime;
                    break;
                }
            }
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjiedunjn3", this.effectName = "3dres/effect/e_jiedunjn_03_b.lh", 
            this.flySpeed = 8, this.flytime = 750, this.moveType = 1, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0, this.endFlyObj = [ new $d() ];
        }
    }
    class $d extends jl {
        GetNewInstance() {
            var e = this.GetPoolInstance();
            return e || new $d();
        }
        constructor() {
            super(), this.poolKey = "flyobj_skill_yxjiedunjn31", this.effectName = "3dres/effect/e_jiedunjn_01_b.lh", 
            this.flytime = 400, this.effectShowTime = 1e3, this.moveType = 0, this.effectObjHeightType = 1, 
            this.colliderNum = 0, this.colliderRadius = 1.5, this.colliderUnitType = [ 1, 2 ], 
            this.isIgnoreSameUnit = !0;
        }
    }
    class eu {
        constructor() {
            this.dicSkill = {};
            var e = [ new Wd(), new Kd(), new zd(), new Qd(), new Ed(), new Rd(), new Hd(), new Vd(), new fh(), new _h(), new Sh(), new Fh(), new jh(), new Xh(), new qh(), new lh(), new rh(), new dh(), new ph(), new ql(), new Jl(), new Zl(), new oh(), new gh(), new vh(), new kh(), new eh(), new th(), new nh(), new ah(), new bh(), new xh(), new Uh(), new Nh(), new kd(), new bd(), new xd(), new Ud(), new Md(), new Jh(), new Zh(), new $h(), new er(), new ir(), new nr(), new or(), new rr(), new dr(), new pr(), new gr(), new vr(), new yr(), new Sr(), new Dr(), new Cr(), new Pr(), new Lr(), new Gr(), new Br(), new Vr(), new Wr(), new qr(), new Zr(), new Yr(), new ec(), new sc(), new nc(), new ac(), new lc(), new rc(), new dc(), new gc(), new _c(), new Sc(), new wc(), new Pc(), new Lc(), new Gc(), new Bc(), new Fc(), new Vc(), new Wc(), new Zc(), new ed(), new sd(), new od(), new rd(), new dd(), new pd(), new gd(), new Id(), new yd(), new Ah(), new Oh(), new Ar(), new kc(), new Cc(), new Ac(), new Tc(), new zc(), new pc(), new Ic(), new Rh() ];
            for (let t = 0; t < e.length; t++) this.addSkillBase(e[t]);
        }
        static get Instance() {
            return null == this.instance && (eu.instance = new eu()), eu.instance;
        }
        addSkillBase(e) {
            this.dicSkill[e.skillID] = e;
        }
        getSkillBase(e) {
            var t = this.dicSkill[e];
            return null != t ? t.GetNewInstance() : null;
        }
        getSkillInfo(e) {
            var t = this.dicSkill[e];
            return null != t ? t : null;
        }
    }
    eu.instance = null;
    class tu extends Gl {
        netUpdate() {}
        update() {
            if (null != this.owner && !this.owner.isDead) {
                if (!this.owner.isAttackIng) for (let t = this.owner.skillData.length - 1; t >= 0; t--) {
                    const i = this.owner.skillData[t];
                    if (null != i && i.lv > 0 && 0 == i.curCD && 0 == i.skillType) {
                        var e = He.Instance.SkillAutoTargetBySkill(this.owner, i, me.None);
                        null != e && this.owner.playSkill(t, e.instanceID, new Laya.Point(e.logicPos.x, e.logicPos.y));
                    }
                }
                null != this.aiLockAtkUnit || this.aiLockBackInitPos ? this.updateTraceAtkTarget() : (this.aiLockAtkUnit = He.Instance.SkillAutoTarget(this.owner, [ 1, 2, 3 ], this.aiLockTraceDis - .5, me.None), 
                this.aiLockAtkUnit ? (this.aiLockAtkInitPos.copy(this.owner.logicPos), this.aiLockBackInitPos = !1) : this.updateMovePath(!0));
            }
        }
    }
    class iu extends Gl {
        constructor(e) {
            super(e), this.isShowRadius = !1, this.skillRadiuShowScale = new Laya.Vector3(), 
            this.radius = 0, this.atkRadius = 0, this.defChange = !1, this.colorY = new Laya.Vector4(1, .5, 0, .5), 
            this.colorR = new Laya.Vector4(.93, 0, 0, .5), this.buildNum = 0, this.radius = this.aiLockTraceDis;
        }
        initSk() {
            if (this.skillRadiuShow = Me.Instance.getEffect("3dres/effect/e_ui_shifahong.lh", 0, 0).obj, 
            this.skillRadiuShow) {
                this.skillRadiuShow.active = !1, this.skillRadiuShow.transform.position = this.owner.showPos;
                var e = this.atkRadius / 1;
                this.skillRadiuShowScale.setValue(e, 1, e), this.skillRadiuShow.transform.localScale = this.skillRadiuShowScale;
                var t = q.getFirstMeshRenderer(this.skillRadiuShow);
                t && t.meshRenderer && (this.skillRadiuMaterial = t.meshRenderer.material), Y.Instance.addChild(this.skillRadiuShow);
            }
        }
        destroy() {
            this.skillRadiuShow && (Me.Instance.removeEffect("3dres/effect/e_ui_shifahong.lh", this.skillRadiuShow), 
            this.skillRadiuShow = null);
        }
        netUpdate() {}
        update() {
            var e = Re.Instance.selfPlayer;
            if (null != this.owner && !this.owner.isDead && null != e) {
                e && e.teamID != this.owner.teamID && (this.isShowRadius = e.logicPos.distance(this.owner.logicPos.x, this.owner.logicPos.y) / 100 <= this.radius), 
                this.defChange = !1, this.buildNum = 0;
                for (let e = 0; e < Re.Instance.dicPlayerInstance.length; e++) {
                    const i = Re.Instance.dicPlayerInstance[e];
                    var t = Re.Instance.dicPlayer[i];
                    if (t && !t.isDead && t.unitType == me.UNIT && t.teamID != this.owner.teamID) if (t.logicPos.distance(this.owner.logicPos.x, this.owner.logicPos.y) <= 100 * this.atkRadius) {
                        this.defChange = !0;
                        break;
                    }
                    t && !t.isDead && t.teamID == this.owner.teamID && t.unitType == me.BUILD && this.buildNum++;
                }
                if (this.buildBeAtkDamageFix = 0, 202 == this.owner.unitID && this.buildNum > 1 ? this.buildBeAtkDamageFix = 1 : 201 == this.owner.unitID && this.buildNum > 2 && (this.buildBeAtkDamageFix = 1), 
                this.defChange && bl.Instance.AddBuff(this.owner, this.owner, 1), !this.owner.isAttackIng) for (let t = this.owner.skillData.length - 1; t >= 0; t--) {
                    const i = this.owner.skillData[t];
                    i && i.isBaseSk && 0 == this.atkRadius && (this.atkRadius = i.skillUseRadius + (e ? e.modelData.radius : 0)), 
                    null != i && i.lv > 0 && 0 == i.curCD && 0 == i.skillType && (this.owner.isHomeBuild ? this.lockTarget = He.Instance.SkillAutoTargetByBuild(this.owner, i, !1) : this.lockTarget = He.Instance.SkillAutoTargetBySkill(this.owner, i, me.None), 
                    null != this.lockTarget && this.owner.playSkill(t, this.lockTarget.instanceID, new Laya.Point(this.lockTarget.logicPos.x, this.lockTarget.logicPos.y)));
                }
                this.isShowRadius ? (null == this.skillRadiuShow && 0 != this.atkRadius && this.initSk(), 
                this.skillRadiuShow && !this.skillRadiuShow.active && (this.skillRadiuShow.active = !0), 
                this.skillRadiuMaterial && (this.skillRadiuMaterial.color = this.lockTarget && e.instanceID == this.lockTarget.instanceID ? this.colorR : this.colorY)) : (this.skillRadiuShow && this.skillRadiuShow.active && (this.skillRadiuShow.active = !1), 
                this.lockTarget = null);
            }
        }
    }
    class su extends Ee {
        constructor() {
            super(...arguments), this.lv = 1, this.lvData = [], this.skInit = !1, this.skillData = [], 
            this.skillIndexReplace = {}, this.skillPoint = 1, this.equipList = [], this.curExp = 0, 
            this.atkkillExp = 0, this.atkkillCoin = 0, this.killExp = 0, this.killCoin = 0, 
            this.isHomeBuild = !1, this.atkSpeed = 1, this.atkSpeedRange = [], this.skillCD = 1, 
            this.hp = 0, this.hpMax = 0, this.baseHpMax = 0, this.hpScale = 1, this.dicTempHP = {}, 
            this.tempHP = 0, this.phyAtk = 0, this.phyAtkScale = 1, this.phyDef = 0, this.magAtk = 0, 
            this.magAtkScale = 1, this.magDef = 0, this.penetratePhyDef = 0, this.penetrateMagDef = 0, 
            this.ignorePhyDef = 0, this.ignoreMagDef = 0, this.superAtk = 0, this.superAtkRatio = 1.5, 
            this.phyAtkRecoverHP = 0, this.magAtkRecoverHP = 0, this.curRecoverTime = -1, this.recoverTimeSpace = 5e3, 
            this.recovertimeHp = 0, this.isBaTi = !1, this.isDontDead = !1, this.dontDeadTime = 0, 
            this.dontDeadTriggerBuff = 0, this.isFighting = !1, this.curFightingTime = 0, this.maxFightingTime = 5e3, 
            this.isYCUnit = !1, this.triggerPGBuff = [], this.triggerPGBuffSelf = [], this.triggerSkDamageBuff = [], 
            this.triggerSkDamageBuffSelf = [], this.triggerByAtkBuff = [], this.triggerByAtkBuffSelf = [], 
            this.addBaseSkDamage = 0, this.fixBaseSkDamage = 0, this.fixDamageByMaxHp = [], 
            this.fixHitSelfDamageByMaxHp = [], this.attackTime = 0, this.attackTimeScale = 1, 
            this.attackTimeScaleMin = .1, this.animTimeScale = 1, this.isAttackDelayTime = 0, 
            this.isAttackMove = !1, this.attackMoveAllFrame = 0, this.attackMoveCurFrame = 0, 
            this.attackMoveIgnoreTerrain = !1, this.attackMoveOldLogicPos = new Laya.Vector2(), 
            this.attackMoveAddLogicPos = new Laya.Vector2(), this.attackMoveDirction = new Laya.Vector2(), 
            this.moveCurFrameSpeed = 0, this.moveBaseSpeed = 2.5, this.moveSpeedScale = 1, this.moveIng = !1, 
            this.moveEnable = !0, this.skillMoveEnable = !0, this.moveDirction = new Laya.Vector2(), 
            this.moveDirctionScalarLength = 0, this.moveOneFrameLogicPos = new Laya.Point(), 
            this.moveOneFrameShowPos = new Laya.Vector3(), this.moveChange = !1, this.moveOneFrameY = 0, 
            this.moveFrame = 0, this.isFixMoveDiretion = !1, this.tempRotationEulerY = 0, this.tempRotationEulerOldY = 0, 
            this.grassId = 0, this.curGrassId = 0, this.grassAlbedoColorA = 1, this.albedoColor = new Laya.Vector4(), 
            this.baseAlbedoColor = new Laya.Vector4(1, 1, 1, 1), this.diamond = 0, this.bediamond = 0, 
            this.isMVP = 0, this.firstBlood = !1, this.killNum = 0, this.deadNum = 0, this.threeKillCount = 0, 
            this.helpKillNum = 0, this.coin = 0, this.maxCoin = 0, this.score = 0, this.conAllKillNum = 0, 
            this.conAllDeadNum = 0, this.conkillnum = 0, this.conKillnumTime = 0, this.conKillnumMaxTime = 5e3, 
            this.nearAtkUnitList = [], this.nearMyAtkUnitList = [], this.clearNearAtKTime = 5e3, 
            this.isDead = !1, this.isDeadBodyHide = !1, this.deadTime = 0, this.deadBodyHideTime = 0, 
            this.deadBodyHideMaxTime = 2e3, this.isKjfl = !1, this.isWing = !1, this.hitFlyUpFrame = 0, 
            this.hitFlyUpOneMove = 0, this.hitFlyDownFrame = 0, this.hitFlyDownOneMove = 0, 
            this.hitFlyYAllMove = 0, this.tempMoveDirction = new Laya.Vector2(), this.tempMveCurFrameSpeed = 0, 
            this.tempShowPos = new Laya.Vector3();
        }
        static get Instance() {
            return null == this.instance && (su.instance = new su()), su.instance;
        }
        init(e, t, i, s) {
            this.playerName = s, this.isAI = e < 0, 2 == i && Y.curMapID == Y.mapID_sh && this.baseAlbedoColor.setValue(.65, 1, .67, 1), 
            this.initModel(e, t, i), 2 == i && Y.curMapID == Y.mapID_sh && this.modelData && (this.playerName = "生化" + this.modelData.heroName), 
            null == this.playerName && this.modelData && (this.playerName = this.modelData.heroName), 
            this.initAI(), this.initFsm(), this.initState(), this.initAttribute();
        }
        initAttribute() {
            if (this.aiControl && (this.aiControl.aiLockAtkUnit = null, this.aiControl.aiLockBackInitPos = !1), 
            this.tempCacheMoveAction = null, this.initLogicPos = null, this.cacheLastLogicPos = null, 
            this.hitFlyUpFrame = 0, this.hitFlyUpOneMove = 0, this.hitFlyDownFrame = 0, this.hitFlyDownOneMove = 0, 
            this.hitFlyYAllMove = 0, this.curRecoverTime = this.recoverTimeSpace, this.lv = 1, 
            this.skillPoint = 1, this.equipList = [], this.curExp = 0, this.atkkillExp = 0, 
            this.atkkillCoin = 0, this.killExp = 0, this.killCoin = 0, this.skillIndexReplace = {}, 
            this.isShowInGrass = !1, this.isVertigo = !1, this.isBaTi = !1, this.isNoSelect = !1, 
            this.isNoCollider = !1, this.isFighting = !1, this.curFightingTime = 0, this.triggerPGBuff = [], 
            this.triggerPGBuffSelf = [], this.triggerSkDamageBuff = [], this.triggerSkDamageBuffSelf = [], 
            this.triggerByAtkBuff = [], this.triggerByAtkBuffSelf = [], this.addBaseSkDamage = 0, 
            this.fixBaseSkDamage = 0, this.fixDamageByMaxHp = [], this.fixHitSelfDamageByMaxHp = [], 
            this.callBackKillHero = null, this.callBackHelpKillHero = null, this.moveCurFrameSpeed = 0, 
            this.moveBaseSpeed = 2.5, this.moveSpeedScale = 1, this.moveIng = !1, this.moveEnable = !0, 
            this.skillMoveEnable = !1, this.moveDirctionScalarLength = 0, this.moveOneFrameY = 0, 
            this.moveCacheData = null, this.moveFrame = 0, this.isFixMoveDiretion = !1, this.tempRotationEulerY = 0, 
            this.grassId = 0, this.curGrassId = 0, this.grassAlbedoColorA = 1, this.diamond = 0, 
            this.bediamond = 0, this.isMVP = 0, this.firstBlood = !1, this.killNum = 0, this.conAllKillNum = 0, 
            this.conAllDeadNum = 0, this.deadNum = 0, this.threeKillCount = 0, this.helpKillNum = 0, 
            this.coin = 0, this.maxCoin = 0, this.conkillnum = 0, this.isDead = !1, this.deadTime = 0, 
            this.relivecount = 0, this.reliveLimt = 0, this.reliveBuffID = -1, this.phyAtkScale = 1, 
            this.magAtkScale = 1, null != this.unitData && (this.hp = this.unitData.hp, this.baseHpMax = this.unitData.hp, 
            this.hpMax = Math.floor(this.baseHpMax * this.hpScale), this.moveBaseSpeed = u.decimalRound(this.unitData.moveBaseSpeed), 
            this.atkSpeed = this.unitData.atkSpeed, this.atkSpeedRange = this.unitData.atkSpeedRange, 
            this.skillCD = this.unitData.skCD, this.phyAtk = this.unitData.phyAtk, this.phyDef = this.unitData.phyDef, 
            this.magAtk = this.unitData.magAtk, this.magDef = this.unitData.magDef, this.penetratePhyDef = this.unitData.penetratePhyDef, 
            this.penetrateMagDef = this.unitData.penetrateMagDef, this.ignorePhyDef = this.unitData.ignorePhyDef, 
            this.ignoreMagDef = this.unitData.ignoreMagDef, this.superAtk = this.unitData.superAtk, 
            this.superAtkRatio = this.unitData.superAtkRatio, this.phyAtkRecoverHP = this.unitData.phyAtkRecoverHP, 
            this.magAtkRecoverHP = this.unitData.magAtkRecoverHP, this.killExp = this.unitData.killExp, 
            this.killCoin = this.unitData.killCoin, this.atkkillExp = this.unitData.atkkillExp, 
            this.atkkillCoin = this.unitData.atkkillCoin, this.lvData = this.unitData.lvData, 
            this.recovertimeHp = this.unitData.recovertimeHp, this.isYCUnit = 1 == this.unitData.isYCUnit, 
            !this.skInit && this.unitData.skill)) {
                this.skInit = !0;
                for (let e = 0; e < this.unitData.skill.length; e++) {
                    const t = this.unitData.skill[e];
                    this.addSkill(t, 0 == e);
                }
            }
            if (this.skillData) for (let e = 0; e < this.skillData.length; e++) {
                const t = this.skillData[e];
                t.curCD = 0, t.curPlayTime = 0;
            }
        }
        getAtkSpeed() {
            if (this.atkSpeedRange) for (let e = 0; e < this.atkSpeedRange.length; e++) {
                const t = this.atkSpeedRange[e];
                if (this.atkSpeed >= t.s && this.atkSpeed < t.e) return t.v;
            }
            return this.atkSpeed;
        }
        addSkill(e, t) {
            var i = Fe.Instance.addSkill(this, eu.Instance.getSkillBase(e));
            return null != i ? (i.isBaseSk = t, i.owner = this, this.skillData.push(i), i.onAddSkill(this), 
            i.ownerSkillIndex = this.skillData.length - 1, i) : null;
        }
        getSKill(e) {
            var t = this.skillIndexReplace[e], i = e;
            return t && (null != (i = t.index) && -1 != i && null != this.skillData[i] || (i = e)), 
            this.skillData[i];
        }
        getSKillIndex(e) {
            if (this.skillData) for (let t = 0; t < this.skillData.length; t++) {
                if (this.skillData[t].skillID == e) return t;
            }
            return -1;
        }
        skillReplace(e, t, i, s) {
            var n = this.skillIndexReplace[e];
            null == n ? (n = {
                index: t,
                outTime: i,
                useCount: s
            }, this.skillIndexReplace[e] = n) : (n.index = t, n.outTime = i, n.useCount = s), 
            this.isSelf && d.Instance.Send(a.UIFightMainModel_UpdateSkill);
        }
        skillReplaceUse(e) {
            var t = this.skillIndexReplace[e];
            t && -1 != t.index && (t.useCount -= 1, t.useCount <= 0 && (t.index = -1));
        }
        initBloodBar(e, t) {
            this.bloodBar || (this.bloodBar = new Vl(this.teamID, this.unitType, this.playerName ? this.playerName : this.modelData.heroName, e, t), 
            this.bloodBar && (Y.Instance.addChild2D(this.bloodBar.bloodBarBG), this.bloodBar.pos3D.setValue(this.showPos.x, this.showPos.y + this.modelData.modelHeight, this.showPos.z), 
            Pe.Instance.addUIEffect(this.instanceID, this.bloodBar), Y.Instance.Pos3DTo2D(this.bloodBar.pos3D, this.bloodBar.pos), 
            this.bloodBar.setPos(this.bloodBar.pos.x, this.bloodBar.pos.y), this.bloodBar.setHp(this.hp, this.hpMax, this.tempHP), 
            this.bloodBar.setLv(this.lv)));
        }
        initAI() {
            this.isAI && (this.unitType == me.HERO ? this.aiControl = new Rl(this) : this.unitType == me.UNIT ? this.aiControl = new tu(this) : this.unitType == me.BUILD && (this.aiControl = new iu(this)), 
            this.aiControl && Bl.Instance.addAI(this.aiControl));
        }
        destroy() {
            if (this.isDestroy = !0, this.bloodBar && this.bloodBar.destroy(), Pe.Instance.removeUIEffect(this.instanceID), 
            this.aiControl && Bl.Instance.removeAI(this.aiControl), this.clearFsm(), this.skillData) for (let e = 0; e < this.skillData.length; e++) {
                this.skillData[e].destroy();
            }
            this.destroyModel();
        }
        initState() {
            var e;
            this.stateInitFunCallComplete = this.stateInitFun, this.stateUpdateFunCallComplete = this.stateUpdateFun, 
            this.stateEndFunCallComplete = this.stateEndFun, this.localStateUpdateFunCall = this.localStateUpdateFun, 
            this.renderStateUpdateFunCall = this.renderStateUpdateFun, (e = new Ae()).stateName = pe.Idle, 
            e.initFun = (() => {
                this.waitInit();
            }), e.updateFun = (() => {
                this.waitUpdate();
            }), e.endFun = (() => {
                this.waitEnd();
            }), this.addState(e), (e = new Ae()).stateName = pe.Move, e.initFun = (() => {
                this.moveInit();
            }), e.updateFun = (() => {
                this.moveUpdate();
            }), e.endFun = (() => {
                this.moveEnd();
            }), this.addState(e), (e = new Ae()).stateName = pe.Attack, e.initFun = (() => {
                this.attackInit();
            }), e.updateFun = (() => {
                this.attackUpdate();
            }), e.endFun = (() => {
                this.attackEnd();
            }), this.addState(e), (e = new Ae()).stateName = pe.Die, e.initFun = (() => {
                this.dieInit();
            }), e.updateFun = (() => {
                this.dieUpdate();
            }), e.endFun = (() => {
                this.dieEnd();
            }), this.addState(e);
        }
        setTempCacheMoveAction(e) {
            this.isAttackIng || this.isAttackMove || this.isVertigo || this.isDead ? this.tempCacheMoveAction = null : null == e ? this.tempCacheMoveAction = null : (null == this.tempCacheMoveAction && (Laya.Vector3.distance(this.tempShowPos, this.showPos) > 1 && this.tempShowPos.setValue(this.showPos.x, this.showPos.y, this.showPos.z), 
            this.playAnim("move")), this.tempCacheMoveAction = e);
        }
        tempStartMove() {
            if (!f.Instance.isSpeedPlay) if (this.tempCacheMoveAction) {
                if (this.isAttackMove || this.isVertigo) return void (this.tempCacheMoveAction = null);
                var e = !1;
                if (this.moveChange && (this.moveChange = !1, this.tempShowPos.x == this.moveOneFrameShowPos.x && this.tempShowPos.z == this.moveOneFrameShowPos.z || (this.tempShowPos.x = this.moveOneFrameShowPos.x, 
                this.tempShowPos.z = this.moveOneFrameShowPos.z, e = !0)), !e) {
                    this.tempMoveDirction.x = (this.tempCacheMoveAction[1].id - 1e3) / 100, this.tempMoveDirction.y = (this.tempCacheMoveAction[2].id - 1e3) / 100, 
                    this.tempMveCurFrameSpeed = u.decimalRound(.3 * this.getMoveSpeed());
                    var t = u.decimalRound(this.tempShowPos.x + this.tempMoveDirction.x * this.tempMveCurFrameSpeed), i = u.decimalRound(this.tempShowPos.z + this.tempMoveDirction.y * this.tempMveCurFrameSpeed);
                    if (this.moveOneFrameY = z.Instance.getHeightMap(t, i), isNaN(this.moveOneFrameY)) return;
                    this.tempShowPos.x = t, this.tempShowPos.z = i;
                }
                this.curSprite3D && (this.tempShowPos.y = this.showPos.y, this.setShowPos(this.tempShowPos), 
                this.bloodBar && this.bloodBar.pos3D.setValue(this.tempShowPos.x, this.tempShowPos.y + this.modelData.modelHeight, this.tempShowPos.z));
            } else this.moveChange && (this.moveChange = !1, this.tempShowPos.x == this.moveOneFrameShowPos.x && this.tempShowPos.z == this.moveOneFrameShowPos.z || (this.tempShowPos.x = this.moveOneFrameShowPos.x, 
            this.tempShowPos.z = this.moveOneFrameShowPos.z, this.curSprite3D && (this.tempShowPos.y = this.showPos.y, 
            this.setShowPos(this.tempShowPos), Y.Instance.lookAt(this.tempShowPos, !0), this.bloodBar && this.bloodBar.pos3D.setValue(this.tempShowPos.x, this.tempShowPos.y + this.modelData.modelHeight, this.tempShowPos.z))));
        }
        renderStateUpdateFun() {
            if (this.isSelf && this.tempStartMove(), this.hitFlyUpFrame > 0) this.hitFlyUpFrame--, 
            this.hitFlyYAllMove += this.hitFlyUpOneMove, (e = new Laya.Vector3()).setValue(this.showPos.x, this.showPos.y + this.hitFlyYAllMove, this.showPos.z), 
            this.curSprite3D.transform.position = e; else if (this.hitFlyDownFrame > 0) {
                var e;
                this.hitFlyDownFrame--, this.hitFlyYAllMove += this.hitFlyDownOneMove, (e = new Laya.Vector3()).setValue(this.showPos.x, this.showPos.y + this.hitFlyYAllMove, this.showPos.z), 
                this.curSprite3D.transform.position = e;
            } else this.hitFlyYAllMove = 0;
            if (null != this.curSprite3D && !f.Instance.isSpeedPlay && this.unitType == me.HERO && this.tempRotationEulerOldY != this.tempRotationEulerY) {
                var t, i = this.tempRotationEulerY - this.tempRotationEulerOldY, s = 360 - Math.abs(i);
                if (Math.abs(i) < Math.abs(s)) (t = Math.round(Math.abs(i) / 5)) < 1 && (t = 1), 
                i > 0 ? this.tempRotationEulerOldY += t : this.tempRotationEulerOldY -= t; else (t = Math.round(Math.abs(s) / 5)) < 1 && (t = 1), 
                i > 0 ? this.tempRotationEulerOldY -= t : this.tempRotationEulerOldY += t;
                this.tempRotationEulerOldY < 0 ? this.tempRotationEulerOldY = 360 + this.tempRotationEulerOldY : this.tempRotationEulerOldY > 360 && (this.tempRotationEulerOldY = this.tempRotationEulerOldY - 360), 
                this.rotationEuler.y = this.tempRotationEulerOldY, this.curSprite3D.transform.rotationEuler = this.rotationEuler;
            }
        }
        localStateUpdateFun() {
            this.moveIng && (this.showPos.x = u.decimalRound(this.showPos.x + this.moveDirction.x * this.moveCurFrameSpeed), 
            this.showPos.z = u.decimalRound(this.showPos.z + this.moveDirction.y * this.moveCurFrameSpeed), 
            this.setShowPos(this.showPos));
        }
        stateInitFun() {}
        stateUpdateFun() {
            if (this.curFightingTime -= f.renderTimeRatio, this.isFighting = this.curFightingTime > 0, 
            this.isDontDead && (this.dontDeadTime -= f.renderTimeRatio, this.dontDeadTime <= 0)) {
                this.dontDeadTime = 0, this.isDontDead = !1;
                var e = this.grassAlbedoColorA;
                this.grassAlbedoColorA = 0, this.setModelVisible(e), this.dontDeadBuff && (this.dontDeadTriggerBuff = 0, 
                this.dontDeadBuff.curTime = 0, this.dontDeadBuff.spaceNum = 1, this.dontDeadBuff.destroyEffect());
            }
            this.isFighting ? this.curRecoverTime = this.recoverTimeSpace : (this.curRecoverTime -= f.renderTimeRatio, 
            this.curRecoverTime <= 0 && this.recovertimeHp > 0 && (this.curRecoverTime = this.recoverTimeSpace, 
            this.changeHp(this, this.recovertimeHp))), this.conKillnumTime -= f.renderTimeRatio, 
            this.conKillnumTime <= 0 && (this.conkillnum = 0);
            for (let e = 0; e < this.nearAtkUnitList.length; e++) {
                const t = this.nearAtkUnitList[e];
                t && (t.time -= f.renderTimeRatio, t.time <= 0 && (this.nearAtkUnitList.splice(e, 1), 
                e--));
            }
            for (let e = 0; e < this.nearMyAtkUnitList.length; e++) {
                const t = this.nearMyAtkUnitList[e];
                t && (t.time -= f.renderTimeRatio, t.time <= 0 && (this.nearMyAtkUnitList.splice(e, 1), 
                e--));
            }
            for (const e in this.skillIndexReplace) {
                const t = this.skillIndexReplace[e];
                t && -1 != t.index && (t.outTime -= f.renderTimeRatio, t.outTime <= 0 && (t.index = -1));
            }
            if (this.isVertigo && !this.isDead ? "yun" != this.curPlayAnimName && (this.isVertigoAnimPlay = !0, 
            this.playAnim("yun")) : (this.isVertigoAnimPlay && (this.isVertigoAnimPlay = !1, 
            this.curPlayAnimName != this.curState.stateName && this.playAnim(this.curState.stateName)), 
            this.curAnimDuration > 0 && (this.curAnimDuration -= f.renderTimeRatio, this.curAnimDuration <= 0 && (this.curAnimDuration = 0, 
            this.curPlayAnimName != this.curState.stateName && this.playAnim(this.curState.stateName)))), 
            this.isAttackDelayTime > 0 && (this.isAttackDelayTime -= f.renderTimeRatio), this.isAttackMove && this.attackMoveCurFrame < this.attackMoveAllFrame && this.isAttackDelayTime <= 0) {
                if (this.attackMoveCurFrame++, this.moveOneFrameLogicPos.setTo(this.attackMoveOldLogicPos.x + Math.floor(this.attackMoveAddLogicPos.x * u.decimalRound(this.attackMoveCurFrame / this.attackMoveAllFrame)), this.attackMoveOldLogicPos.y + Math.floor(this.attackMoveAddLogicPos.y * u.decimalRound(this.attackMoveCurFrame / this.attackMoveAllFrame))), 
                !this.attackMoveIgnoreTerrain && this.moveOneFrameLogicPos.distance(this.logicPos.x, this.logicPos.y) > 2) {
                    var t = !1;
                    for (let e = 10; e > 0; e--) {
                        this.moveOneFrameLogicPos.setTo(this.attackMoveOldLogicPos.x + Math.floor(e / 10 * this.attackMoveAddLogicPos.x * u.decimalRound(this.attackMoveCurFrame / this.attackMoveAllFrame)), this.attackMoveOldLogicPos.y + Math.floor(e / 10 * this.attackMoveAddLogicPos.y * u.decimalRound(this.attackMoveCurFrame / this.attackMoveAllFrame)));
                        var i = z.Instance.getHeightMap(this.moveOneFrameLogicPos.x / 100, this.moveOneFrameLogicPos.y / 100);
                        if (!isNaN(i)) {
                            e < 10 && (this.attackMoveCurFrame = this.attackMoveAllFrame), t = !0;
                            break;
                        }
                    }
                    t && this.moveToPos(this.moveOneFrameLogicPos, this.attackMoveIgnoreTerrain);
                } else this.moveToPos(this.moveOneFrameLogicPos, this.attackMoveIgnoreTerrain);
                this.attackMoveCurFrame >= this.attackMoveAllFrame && (this.attackMoveCurFrame = 0, 
                this.attackMoveAllFrame = 0, this.isAttackMove = !1, this.attackMoveIgnoreTerrain = !1);
            }
        }
        stateEndFun() {}
        waitInit() {
            this.curAnimDuration <= 0 && this.unitType != me.BUILD && this.playAnim(pe.Idle);
        }
        waitUpdate() {}
        waitEnd() {}
        moveInit() {
            this.moveIng = !0, this.playAnim(pe.Move);
        }
        moveUpdate() {
            this.moveFrame <= 0 ? this.isAttackIng || this.switchState(pe.Idle) : (this.moveFrame--, 
            this.isVertigo || (this.moveCurFrameSpeed = this.getMoveSpeed(), this.moveOneFrameLogicPos.setTo(this.logicPos.x + u.noDecimalRound(this.moveDirction.x * this.moveCurFrameSpeed), this.logicPos.y + u.noDecimalRound(this.moveDirction.y * this.moveCurFrameSpeed)), 
            this.moveToPos(this.moveOneFrameLogicPos)));
        }
        moveToPos(e, t) {
            if (this.moveOneFrameY = z.Instance.getHeightMap(e.x / 100, e.y / 100), isNaN(this.moveOneFrameY)) {
                if (!t && !this.isAI) return;
            } else this.cacheLastLogicPos.setTo(e.x, e.y);
            this.moveOneFrameY > 100 ? (this.grassId = Math.floor(this.moveOneFrameY / 100), 
            this.moveOneFrameY -= 100 * this.grassId, this.grassId != this.curGrassId && (0 != this.curGrassId && Ge.Instance.removeGrass(this.curGrassId, this.teamID), 
            this.curGrassId = this.grassId, Ge.Instance.addGrass(this.curGrassId, this.teamID), 
            Re.Instance.checkPlayerHideState())) : 0 != this.curGrassId && (Ge.Instance.removeGrass(this.curGrassId, this.teamID), 
            this.curGrassId = 0, Re.Instance.checkPlayerHideState()), this.moveOneFrameShowPos.setValue(e.x / 100, this.showPos.y, e.y / 100), 
            this.moveChange = !0, this.isFixMoveDiretion || this.isVertigo || 0 != this.attackMoveAllFrame || this.lookAt(e), 
            isNaN(this.moveOneFrameY) || (this.moveOneFrameShowPos.y = this.moveOneFrameY), 
            this.setPos(this.moveOneFrameShowPos, !this.isAttackMove && this.isSelf), !this.isAttackMove && this.isSelf || !this.bloodBar || this.bloodBar.pos3D.setValue(this.moveOneFrameShowPos.x, this.moveOneFrameShowPos.y + this.modelData.modelHeight, this.moveOneFrameShowPos.z), 
            this.isSelf && Y.Instance.lookAt(this.moveOneFrameShowPos, !0), s.isSyncDebug && this.unitType == me.HERO && console.log(f.Instance.currentFrame + " id " + this.instanceID + " waitMoveFrame " + this.moveFrame + " moveToPos x " + this.logicPos.x + " y " + this.logicPos.y + " moveCurFrameSpeed " + this.moveCurFrameSpeed + " moveDirctionX " + this.moveDirction.x + " moveDirctionY " + this.moveDirction.y + " this.attackMoveCurFrame " + this.attackMoveCurFrame + " this.attackMoveAllFrame " + this.attackMoveAllFrame);
        }
        lookAt(e) {
            this.tempRotationEulerY = Math.floor(-1 * q.GetAngleByPos(this.logicPos, e) - 90), 
            this.tempRotationEulerY < 0 && (this.tempRotationEulerY = 360 + this.tempRotationEulerY), 
            this.rotationEuler.y = this.tempRotationEulerY, null == this.curSprite3D || f.Instance.isSpeedPlay || this.unitType == me.UNIT && Math.abs(this.tempRotationEulerOldY - this.tempRotationEulerY) > 15 && (this.tempRotationEulerOldY = this.tempRotationEulerY, 
            this.curSprite3D.transform.rotationEuler = this.rotationEuler);
        }
        getForward(e) {
            null != this.curSprite3D && this.curSprite3D.transform.getForward(e);
        }
        moveEnd() {
            this.moveIng = !1, this.moveFrame = 0;
        }
        attackInit() {
            this.moveEnable = this.skillMoveEnable, this.isAttackIng = !0;
        }
        attackPlayAnim() {
            null != this.curSkill && this.curSkill.skillAnim && "" != this.curSkill.skillAnim ? this.playAnim(this.curSkill.skillAnim, u.decimalRound(1 / this.attackTimeScale), this.curSkill.skillAnimLoop) : this.playAnim(pe.Attack, u.decimalRound(1 / this.attackTimeScale));
        }
        attackUpdate() {
            this.skillMoveEnable && this.moveUpdate(), this.attackTime -= f.renderTimeRatio, 
            this.attackTime <= 0 && this.switchState(pe.Idle);
        }
        attackEnd() {
            this.isAttackIng = !1, this.moveEnable = !0, this.attackTime = 0;
        }
        getMoveSpeed() {
            return u.decimalRound(this.moveBaseSpeed * this.moveSpeedScale / f.renderFrame);
        }
        startMove(e) {
            this.moveDirction.x = (e[1].id - 1e3) / 100, this.moveDirction.y = (e[2].id - 1e3) / 100, 
            this.isFixMoveDiretion = 1 == e[3].id, this.moveCacheData = e, this.moveEnable ? (this.moveFrame += 6, 
            this.isAttackIng || this.switchState(pe.Move)) : this.isAttackIng && this.curSkill && this.curSkill.isPlaying && this.curSkill.isMoveInterrupt > 0 && this.curSkill.curPlayTime >= this.curSkill.isMoveInterrupt && (this.curSkill.curPlayTime = this.curSkill.playTime, 
            this.attackTime = 0);
        }
        dieInit() {
            0 != this.curGrassId && (Ge.Instance.removeGrass(this.curGrassId, this.teamID), 
            this.curGrassId = 0, Re.Instance.checkPlayerHideState()), this.isAttackDelayTime = 0, 
            this.isAttackMove = !1, this.attackMoveCurFrame = 0, this.attackMoveAllFrame = 0, 
            this.isDead = !0, this.isDeadBodyHide = !1, this.playAnim(pe.Die), this.deadBodyHideTime = this.deadBodyHideMaxTime, 
            this.bloodBar && this.bloodBar.setVisible(!1), this.shadowSprite3D && (this.shadowSprite3D.active = !1), 
            this.aiControl && (this.aiControl.clearTraceAtk(), this.unitType == me.BUILD && this.aiControl.destroy());
        }
        dieUpdate() {
            this.deadTime -= f.renderTimeRatio, this.deadBodyHideTime -= f.renderTimeRatio, 
            this.unitType == me.UNIT && (this.deadBodyHideTime < 0 && this.deadBodyHideTime > -2e3 ? (this.moveOneFrameShowPos.y -= .01, 
            this.setPos(this.moveOneFrameShowPos)) : this.isDeadBodyHide || (this.isDeadBodyHide = !0, 
            bl.Instance.removeAllBuff(this), Re.Instance.removePlayer(this, this.tempFightId), 
            this.aiControl && Bl.Instance.removeAI(this.aiControl), this.curSprite3D && (this.curSprite3D.transform.localScale = new Laya.Vector3(this.modelData.fightScale, this.modelData.fightScale, this.modelData.fightScale)), 
            Me.Instance.addUnit(this), s.isSyncDebug && console.log(f.Instance.currentFrame + " id add Unit " + this.instanceID + " cachePoolKey " + this.cachePoolKey))), 
            this.deadTime < 0 && (this.isDead = !1, this.hp = this.hpMax, s.isSyncDebug && this.unitType == me.UNIT && console.log(f.Instance.currentFrame + " id " + this.instanceID + " dieEnd  initLogicPosX " + this.initLogicPos.x + " initLogicPosY " + this.initLogicPos.y), 
            this.moveToPos(this.initLogicPos), this.bloodBar && (this.bloodBar.setVisible(!0), 
            this.bloodBar.setHp(this.hp, this.hpMax, this.tempHP)), this.switchState(pe.Idle), 
            this.isSelf && (d.Instance.Send(a.UIFightMainModel_UpdateShowDead, 0), this.showPos.x = this.initLogicPos.x / 100, 
            this.showPos.z = this.initLogicPos.y / 100, this.setShowPos(this.showPos), Y.Instance.lookAt(this.showPos, this.isSelf), 
            this.bloodBar && this.bloodBar.pos3D.setValue(this.showPos.x, this.showPos.y + this.modelData.modelHeight, this.showPos.z)), 
            this.unitType == me.HERO && bl.Instance.AddBuff(this, this, 810));
        }
        dieEnd() {
            this.shadowSprite3D && (this.shadowSprite3D.active = !0);
        }
        setModelVisible(e, t) {
            if (this.grassAlbedoColorA != e || t) {
                if (this.grassAlbedoColorA = e, null != this.wingMeshRenderers) for (let t = 0; t < this.wingMeshRenderers.length; t++) {
                    const i = this.wingMeshRenderers[t];
                    this.meshRendererVisible(i, e);
                }
                if (null != this.meshRenderers) for (let t = 0; t < this.meshRenderers.length; t++) {
                    const i = this.meshRenderers[t];
                    this.meshRendererVisible(i, e);
                }
            }
        }
        meshRendererVisible(e, t) {
            if (e.meshRenderer) null != (i = e.meshRenderer.material) && (i.albedoColorA = t); else if (e.skinnedMeshRenderer) {
                var i;
                if (null != (i = e.skinnedMeshRenderer.material)) "Unlit" == i._shader._name && (i.renderMode = t < 1 ? Laya.UnlitMaterial.RENDERMODE_TRANSPARENT : Laya.UnlitMaterial.RENDERMODE_OPAQUE, 
                t < 1 && (i.depthWrite = !0), this.albedoColor.setValue(this.baseAlbedoColor.x, this.baseAlbedoColor.y, this.baseAlbedoColor.z, t), 
                i.albedoColor = this.albedoColor), t < 1 ? this.shadowSprite3D && (this.shadowSprite3D.active = !1) : this.shadowSprite3D && (this.shadowSprite3D.active = !0);
            }
        }
        updateHpShow() {}
        changeHp(e, t, i, n) {
            if (!this.isDead) {
                t < 0 && this.unitType == me.BUILD && this.aiControl && this.aiControl.buildBeAtkDamageFix > 0 && (t = -1 * this.aiControl.buildBeAtkDamageFix);
                var a = -1 * t;
                if (a > 0) {
                    if (s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + e.instanceID + " atk " + this.instanceID + " damage " + a), 
                    this.isDontDead && this.dontDeadTime > 0) return;
                    if (e.diamond += Math.floor(a), this.bediamond += Math.floor(a), this.curFightingTime = this.maxFightingTime, 
                    e.curFightingTime = e.maxFightingTime, e.unitType == me.HERO) {
                        var o = !1;
                        for (let t = 0; t < this.nearAtkUnitList.length; t++) {
                            const i = this.nearAtkUnitList[t];
                            i.unit.instanceID == e.instanceID && (i.time = this.clearNearAtKTime, o = !0);
                        }
                        if (o || this.nearAtkUnitList.push({
                            time: this.clearNearAtKTime,
                            unit: e
                        }), this.unitType == me.HERO) {
                            o = !1;
                            for (let t = 0; t < e.nearMyAtkUnitList.length; t++) {
                                const i = e.nearMyAtkUnitList[t];
                                i.unit.instanceID == this.instanceID && (i.time = e.clearNearAtKTime, o = !0);
                            }
                            o || e.nearMyAtkUnitList.push({
                                time: e.clearNearAtKTime,
                                unit: this
                            });
                        }
                    }
                    if (!f.Instance.isSpeedPlay) {
                        if (e.isSelf || this.isSelf || s.isShowAllDamage) {
                            var l = Laya.Pool.getItem("bjShow");
                            null != l && l.play(this.showPos, a, !!e.isSelf, i, !1, n);
                        }
                        if (e.isSelf && this.centerPointSprite3D && this.centerPointSprite3D.transform) {
                            var h = Me.Instance.getEffect("3dres/effect/e_shouji.lh", this.teamID, this.skinID).obj;
                            h && h.transform && (this.centerPointSprite3D.addChild(h), Me.Instance.waitDestroyEffect("3dres/effect/e_shouji.lh", h, 500));
                        }
                    }
                }
                if (this.tempHP > 0 && a > 0) {
                    for (var r in this.dicTempHP) if (this.dicTempHP[r] -= this.dicTempHP[r] >= a ? a : this.dicTempHP[r], 
                    (a -= this.dicTempHP[r]) <= 0) break;
                    a > 0 && (this.hp -= a);
                } else this.hp += t;
                for (var r in this.tempHP = 0, this.dicTempHP) if (this.tempHP += this.dicTempHP[r], 
                this.dicTempHP[r] <= 0) {
                    var c = bl.Instance.getBuff(this, parseInt(r));
                    c && (0 == c.spaceTime || c.spaceTime > 0 && c.curTime >= c.time) && bl.Instance.removeBuff(this, parseInt(r)), 
                    delete this.dicTempHP[r];
                }
                if (this.hp > this.hpMax && (this.hp = this.hpMax), this.hp <= 0 && this.dontDeadTime > 0) {
                    this.isDontDead = !0, this.hp = 1, this.dontDeadBuff && this.dontDeadBuff.createEffect();
                    var d = this.grassAlbedoColorA;
                    this.setModelVisible(.5), this.grassAlbedoColorA = d, this.dontDeadTriggerBuff > 0 && bl.Instance.AddBuff(this, this, this.dontDeadTriggerBuff);
                }
                this.hp <= 0 ? (this.hp = 0, this.isDead = !0, this.dead(e)) : this.bloodBar && this.bloodBar.setHp(this.hp, this.hpMax, this.tempHP);
            }
        }
        updateBloodBar() {
            for (var e in this.tempHP = 0, this.dicTempHP) if (this.tempHP += this.dicTempHP[e], 
            this.dicTempHP[e] <= 0) {
                var t = bl.Instance.getBuff(this, parseInt(e));
                t && (0 == t.spaceTime || t.spaceTime > 0 && t.curTime >= t.time) && bl.Instance.removeBuff(this, parseInt(e)), 
                delete this.dicTempHP[e];
            }
            this.bloodBar && this.bloodBar.setHp(this.hp, this.hpMax, this.tempHP);
        }
        dead(e) {
            s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.instanceID + " isDead ");
            var t, i = e, n = !1;
            if (null != i) {
                if (this.unitType == me.HERO) {
                    if (i.unitType != me.HERO) {
                        var o, l = 0;
                        for (let e = 0; e < this.nearAtkUnitList.length; e++) {
                            const t = this.nearAtkUnitList[e];
                            t && t.unit && t.unit.unitType == me.HERO && t.time > l && (l = t.time, o = t.unit);
                        }
                        o && (i = o);
                    }
                    i.killNum++, i.callBackKillHero && i.callBackKillHero(), i.conkillnum++, i.conAllKillNum++, 
                    i.conAllDeadNum = 0, d.Instance.Send(a.FightManager_Kill, i.teamID);
                    for (let e = 0; e < this.nearAtkUnitList.length; e++) {
                        const t = this.nearAtkUnitList[e];
                        t && t.unit && t.unit.instanceID != i.instanceID && (t.unit.helpKillNum++, t.unit.callBackHelpKillHero && t.unit.callBackHelpKillHero(), 
                        t.unit.isSelf && d.Instance.Send(a.UIFightMainModel_UpdateSelfInfo));
                    }
                    if (i.isSelf && (d.Instance.Send(a.UIFightMainModel_UpdateSelfInfo), d.Instance.Send(a.GameRecorder_startClip)), 
                    !f.Instance.isSpeedPlay) {
                        n = !0;
                        for (let e = 0; e < Re.Instance.dicHeroPlayerInstance.length; e++) {
                            var h = Re.Instance.dicHeroPlayer[Re.Instance.dicHeroPlayerInstance[e]];
                            if (h.teamID == this.teamID && !h.isDead) {
                                n = !1;
                                break;
                            }
                        }
                        t = i.unitType == me.HERO ? El.Instance.getFightKillTips(!El.Instance.isFristBlood, n, i.conkillnum, i.conAllKillNum, this.conAllKillNum >= 3, !1) : El.Instance.getFightKillTips(!1, n, 1, 1, !1, !1);
                    }
                } else this.unitType == me.BUILD && (t = El.Instance.getFightKillTips(!1, !1, 0, 0, !1, !0));
                if (null != t && t.length > 0 && null != i.playerName) {
                    var r = [];
                    for (let e = 0; e < t.length; e++) {
                        const s = t[e];
                        var c = {
                            isSelfTeam: i.teamID == Re.Instance.selfPlayer.teamID,
                            team1: i.teamID,
                            team1Name: i.playerName,
                            team1Icon: i.modelData.heroIconRed ? 1 == i.teamID ? i.modelData.heroIcon : i.modelData.heroIconRed : i.modelData.heroIcon,
                            team2: this.teamID,
                            team2Name: this.playerName,
                            team2Icon: this.modelData.heroIconRed ? 1 == this.teamID ? this.modelData.heroIcon : this.modelData.heroIconRed : this.modelData.heroIcon,
                            data: s
                        };
                        r.push(c);
                    }
                    d.Instance.Send(a.UIFightKillTip_Open, r);
                }
            }
            this.switchState(pe.Die), this.unitType == me.HERO ? (this.allocationCoinExpHero(i), 
            this.conAllKillNum = 0, this.conAllDeadNum++, this.deadNum++, Y.mapID_sh == Y.curMapID && 2 == this.teamID ? this.deadTime = El.Instance.getHeroDeadTime_Sh(this.lv) : this.deadTime = El.Instance.getHeroDeadTime(this.lv), 
            this.isSelf && (d.Instance.Send(a.UIFightMainModel_UpdateSelfInfo), d.Instance.Send(a.UIFightMainModel_UpdateShowDead, this.deadTime))) : this.unitType == me.UNIT ? (this.deadTime = 1e7, 
            this.allocationCoinExpUnit(i)) : this.unitType == me.BUILD && (this.deadTime = 1e7, 
            this.allocationCoinExpBuild(i));
            var p = El.Instance.getUnitDrop(Q.Instance.getBaseID(this.unitID), this.teamID, u.random());
            p > 0 && d.Instance.Send(a.FightManager_DeadDrop, p, new Laya.Point().copy(this.logicPos), this.showPos.y), 
            this.isHomeBuild && d.Instance.Send(a.FightManager_GameEnd, 1 == this.teamID ? 2 : 1);
        }
        allocationCoinExpUnit(e) {
            var t = El.Instance.curFightData;
            if (null != t) {
                var i = this.killCoin, s = this.killExp, n = [];
                for (let i = 0; i < Re.Instance.dicHeroPlayerInstance.length; i++) {
                    const s = Re.Instance.dicHeroPlayerInstance[i];
                    var a = Re.Instance.dicHeroPlayer[s];
                    !a || a.teamID == this.teamID || a.isDead && a.instanceID != e.instanceID && Y.curMapID != Y.mapID_sh || !(a.instanceID == e.instanceID || a.logicPos.distance(this.logicPos.x, this.logicPos.y) / 100 <= t.unitAlloctionRadius) || n.push(a);
                }
                for (let e = 0; e < t.unitAlloctionRule.length; e++) {
                    const a = t.unitAlloctionRule[e];
                    if (a.playerNum == n.length) {
                        i = Math.floor(this.killCoin * a.rate), s = Math.floor(this.killExp * a.rate);
                        break;
                    }
                }
                for (let t = 0; t < n.length; t++) {
                    const a = n[t];
                    a.addCoin(i + (a.instanceID == e.instanceID ? this.atkkillCoin : 0), a.isSelf ? this.showPos.clone() : null, !0), 
                    a.addExp(s + (a.instanceID == e.instanceID ? this.atkkillExp : 0), !0);
                }
            }
        }
        allocationCoinExpHero(e) {
            var t = El.Instance.curFightData;
            if (null != t) {
                var i = 0, s = 0;
                for (let e = 0; e < t.heroCoinRule.length; e++) {
                    const s = t.heroCoinRule[e];
                    if ((0 == this.conAllDeadNum ? this.conAllKillNum : -1 * this.conAllDeadNum) <= s.num || e == t.heroCoinRule.length - 1) {
                        i += s.v;
                        break;
                    }
                }
                for (let e = 0; e < t.heroExpRule.length; e++) {
                    const i = t.heroExpRule[e];
                    if ((0 == this.conAllDeadNum ? this.conAllKillNum : -1 * this.conAllDeadNum) <= i.num || e == t.heroExpRule.length - 1) {
                        s += i.v;
                        break;
                    }
                }
                var n = this.nearAtkUnitList.length;
                for (let t = 0; t < n; t++) {
                    const a = this.nearAtkUnitList[t];
                    a.unit && a.unit.unitType == me.HERO && a.unit.instanceID != e.instanceID && (Y.curMapID != Y.mapID_sh && a.unit.isDead || (a.unit.addCoin(Math.floor(i / 2 / n), a.unit.isSelf ? this.showPos.clone() : null, !0), 
                    a.unit.addExp(Math.floor(s / 2 / n), !0)));
                }
                e.unitType == me.HERO && (El.Instance.isFristBlood || (El.Instance.isFristBlood = !0, 
                i += t.firstBloodCoin, s += t.firstBloodExp, e.firstBlood = !0), e.addCoin(i, e.isSelf ? this.showPos.clone() : null, !0), 
                e.addExp(s, !0));
            }
        }
        allocationCoinExpBuild(e) {
            for (let i = 0; i < Re.Instance.dicHeroPlayerInstance.length; i++) {
                const s = Re.Instance.dicHeroPlayerInstance[i];
                var t = Re.Instance.dicHeroPlayer[s];
                t && t.teamID != this.teamID && (t.addCoin(this.killCoin + (t.instanceID == e.instanceID ? this.atkkillCoin : 0), t.isSelf ? this.showPos.clone() : null, !0), 
                t.addExp(this.killExp + (t.instanceID == e.instanceID ? this.atkkillExp : 0), !0));
            }
        }
        skillUp(e) {
            if (this.skillPoint > 0) {
                var t = this.skillData[e];
                null != t && t.lv < t.maxlv && this.lv >= t.skillNeddLv && (t.lv++, t.init(t.lv), 
                this.skillPoint--);
            }
            this.isSelf && d.Instance.Send(a.UIFightMainModel_UpdateSkill);
        }
        playSkill(e, t, i) {
            s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.instanceID + " playSkill index " + e + " targetID " + t + " targetPos " + i);
            var n = this.getSKill(e);
            if (!(null == n || this.isVertigo && !n.isVertigoPlay || this.isAttackIng && this.curSkill && this.curSkill.skillPriority >= n.skillPriority || n.curCD > 0 || 0 == n.lv)) {
                this.curSkill = n;
                var o = null;
                if (0 != t ? (o = Re.Instance.getPlayer(t)) && this.unitType != me.BUILD && this.lookAt(o.logicPos) : 0 != n.skillUseType && this.unitType != me.BUILD && this.logicPos.distance(i.x, i.y) > 10 && this.lookAt(i), 
                null != o || !n.isMustHaveTarget) {
                    if (this.isAI && null != o && !o.isDead && o.teamID != this.teamID && this.aiControl && (this.aiControl.aiLockAtkUnit = o, 
                    this.aiControl.aiLockAtkInitPos.copy(this.logicPos), this.aiControl.aiLockBackInitPos = !1), 
                    this.curSkill.play(o, i), this.skillReplaceUse(e), 1 == this.curSkill.moveHeroType || 2 == this.curSkill.moveHeroType) {
                        var l = new Laya.Point();
                        l.setTo(i.x, i.y), this.attackMoveDirction.setValue(l.x - this.logicPos.x, l.y - this.logicPos.y), 
                        Laya.Vector2.normalize(this.attackMoveDirction, this.attackMoveDirction), this.attackMoveDirction.x = u.decimalRound(this.attackMoveDirction.x), 
                        this.attackMoveDirction.y = u.decimalRound(this.attackMoveDirction.y), 2 == this.curSkill.moveHeroType && l.setTo(this.logicPos.x + u.noDecimalRound(this.attackMoveDirction.x * this.curSkill.moveHeroSpeed * (this.curSkill.moveHeroTime / 1e3)), this.logicPos.y + u.noDecimalRound(this.attackMoveDirction.y * this.curSkill.moveHeroSpeed * (this.curSkill.moveHeroTime / 1e3))), 
                        this.isAttackMove = !0, this.isAttackDelayTime = this.curSkill.moveHeroDelayTime, 
                        this.attackMoveCurFrame = 0, this.attackMoveAllFrame = Math.floor(this.curSkill.moveHeroTime / f.renderTimeRatio), 
                        this.attackMoveAllFrame < 1 && (this.attackMoveAllFrame = 1), this.attackMoveOldLogicPos.setValue(this.logicPos.x, this.logicPos.y), 
                        this.attackMoveAddLogicPos.setValue(l.x - this.logicPos.x, l.y - this.logicPos.y);
                        var h = z.Instance.getHeightMap(l.x / 100, l.y / 100);
                        this.attackMoveIgnoreTerrain = !isNaN(h);
                    }
                    if (this.attackTimeScale = 1, this.attackTime = 0, this.curSkill.isBaseSk) {
                        if (o && this.triggerPGBuff && this.triggerPGBuff.length > 0) for (let e = 0; e < this.triggerPGBuff.length; e++) bl.Instance.AddBuff(this, o, this.triggerPGBuff[e], null);
                        if (this.triggerPGBuffSelf && this.triggerPGBuffSelf.length > 0) for (let e = 0; e < this.triggerPGBuffSelf.length; e++) bl.Instance.AddBuff(this, this, this.triggerPGBuffSelf[e], null);
                        var r = this.animatorPlayClipDic[this.curSkill.skillAnim];
                        r && r.clipDuration > 0 ? (this.animTimeScale = 1, this.attackTimeScale = u.decimalRound(this.animTimeScale * (1 / this.getAtkSpeed())), 
                        this.attackTimeScale < this.attackTimeScaleMin && (this.attackTimeScale = this.attackTimeScaleMin), 
                        this.attackTime = Math.floor(this.curSkill.playTime * this.attackTimeScale)) : (this.attackTimeScale = 1, 
                        this.attackTime = this.curSkill.playTime);
                    } else this.attackTimeScale = 1, this.attackTime = this.curSkill.playTime;
                    this.curSkill.switchSkillState || (this.attackTime = 0), this.attackTime > 0 && (this.switchState(pe.Attack), 
                    this.attackPlayAnim()), this.isSelf && d.Instance.Send(a.UIFightMainModel_UpdateSkill), 
                    s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.instanceID + " playSkill index " + e + " attackTime " + this.attackTime + " attackTimeScale " + this.attackTimeScale);
                }
            }
        }
        addLvAttribute(e) {
            for (let i = this.lv; i < e; i++) {
                this.skillPoint++;
                var t = this.lvData[i];
                t && (this.aiControl && this.aiControl.aIFightData && this.aiControl.aIFightData.addHpCoefficient ? (t.addMaxHp && (this.hp += Math.floor(t.addMaxHp * this.aiControl.aIFightData.addHpCoefficient)), 
                t.addMaxHp && (this.baseHpMax += Math.floor(t.addMaxHp * this.aiControl.aIFightData.addHpCoefficient))) : (t.addMaxHp && (this.hp += Math.floor(t.addMaxHp)), 
                t.addMaxHp && (this.baseHpMax += Math.floor(t.addMaxHp))), this.hpMax = Math.floor(this.baseHpMax * this.hpScale), 
                this.aiControl && this.aiControl.aIFightData && this.aiControl.aIFightData.addAtkCoefficient ? (t.addAtkMag && (this.magAtk += Math.floor(t.addAtkMag * this.aiControl.aIFightData.addAtkCoefficient)), 
                t.addAtkPhy && (this.phyAtk += Math.floor(t.addAtkPhy * this.aiControl.aIFightData.addAtkCoefficient))) : (t.addAtkMag && (this.magAtk += Math.floor(t.addAtkMag)), 
                t.addAtkPhy && (this.phyAtk += Math.floor(t.addAtkPhy))), this.aiControl && this.aiControl.aIFightData && this.aiControl.aIFightData.addDefCoefficient ? (t.addDefMag && (this.magDef += Math.floor(t.addDefMag * this.aiControl.aIFightData.addDefCoefficient)), 
                t.addDefPhy && (this.phyDef += Math.floor(t.addDefPhy * this.aiControl.aIFightData.addDefCoefficient))) : (t.addDefMag && (this.magDef += Math.floor(t.addDefMag)), 
                t.addDefPhy && (this.phyDef += Math.floor(t.addDefPhy))), t.addRecoverTimeHp && (this.recovertimeHp += Math.floor(t.addRecoverTimeHp)), 
                t.addAtkSpeed && (this.atkSpeed = u.decimalRound(this.atkSpeed + t.addAtkSpeed)), 
                t.addGold && (this.killCoin += Math.floor(t.addGold)), t.addExp && (this.killExp += Math.floor(t.addExp)), 
                t.addAtkGold && (this.atkkillCoin += Math.floor(t.addAtkGold)), t.addAtkExp && (this.atkkillExp += Math.floor(t.addAtkExp)), 
                t.addMoveSpeed && (this.moveBaseSpeed = u.decimalRound(this.moveBaseSpeed + t.addMoveSpeed)));
            }
            if (this.lv = e, this.bloodBar && this.bloodBar.setLv(this.lv), this.isSelf && d.Instance.Send(a.UIFightMainModel_UpdateSkill), 
            this.bloodBar && this.bloodBar.setHp(this.hp, this.hpMax, this.tempHP), this.isAI) {
                var i = -1, s = -1;
                for (let e = 0; e < this.skillData.length; e++) {
                    const t = this.skillData[e];
                    (-1 == i || i > t.lv) && t.lv < t.maxlv && (i = t.lv, s = e);
                }
                -1 != s && this.skillUp(s);
            }
        }
        addExp(e, t) {
            if (isNaN(e)) console.error("addExp error"); else {
                this.isAI && t && this.instanceID < 0 && this.aiControl && this.aiControl.aIFightData && (e = Math.floor(e * this.aiControl.aIFightData.aiExpRatio)), 
                this.curExp += e, s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.instanceID + " addExp " + e + " curExp" + this.curExp);
                var i = this.lvData[this.lv - 1];
                if (null != i && i.nextLvExp > 0 && this.curExp >= i.nextLvExp) {
                    if (s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.instanceID + " addExp lv " + this.lv + " curExp" + this.curExp + " nextLvExp" + i.nextLvExp), 
                    this.unitType == me.HERO && !f.Instance.isSpeedPlay && null != this.curSprite3D) {
                        var n = Me.Instance.getEffect("3dres/effect/e_shj.lh", this.teamID, this.skinID).obj;
                        n && n.transform && (this.curSprite3D.addChild(n), Me.Instance.waitDestroyEffect("3dres/effect/e_shj.lh", n, 1e3));
                    }
                    this.addLvAttribute(this.lv + 1), this.curExp = this.curExp - i.nextLvExp;
                }
            }
        }
        addCoin(e, t, i) {
            if (isNaN(e)) console.error("addCoin error"); else {
                if (this.isAI && i && this.instanceID < 0 && this.aiControl && this.aiControl.aIFightData && (e = Math.floor(e * this.aiControl.aIFightData.aiCoinRatio)), 
                this.coin += e, this.maxCoin += e, s.isSyncDebug && console.log(f.Instance.currentFrame + " id " + this.instanceID + " addCoin " + e + " curCoin" + this.coin + " maxCoin " + this.maxCoin), 
                this.isSelf && (d.Instance.Send(a.UIGameFight_updateGlod, this.coin), d.Instance.Send(a.UIFightShop_UpdateCoin, this.coin), 
                null != t && e > 0 && this.logicPos.distance(100 * t.x, 100 * t.z) / 100 < 10)) {
                    var n = Laya.Pool.getItem("goldShow");
                    null != n && n.play(t, e);
                }
                this.isAI && this.unitType == me.HERO && this.aiControl && this.aiControl.autoBuyEq();
            }
        }
        stopMoveAndLastPos() {
            if (this.attackMoveCurFrame = 0, this.attackMoveAllFrame = 0, this.isAttackMove = !1, 
            this.attackMoveIgnoreTerrain = !1, this.moveIng = !1, this.moveFrame = 0, this.cacheLastLogicPos) {
                var e = this.isFixMoveDiretion;
                this.isFixMoveDiretion = !0, this.moveToPos(this.cacheLastLogicPos), this.isFixMoveDiretion = e;
            }
        }
    }
    su.instance = null;
    class nu {
        constructor() {
            this.isFightIngReConnect = !1, this._isReConnect = !1, this.isReConnectFail = !1, 
            this.isReConnectFight = !1, this.firstCacheID = 0, this.reConnectCurFrameID = 0, 
            this.cacheServerFrame = [], this.reConnectSeed = 0, this.reConnectPage = 0, this.waitReConnectCheck = !1, 
            w.Instance.RegisterNet(12009, e => {
                this.s2c_send_frame_act(e);
            }), w.Instance.RegisterNet(12021, e => {
                this.s2c_get_frame(e);
            }), w.Instance.RegisterNet(12054, e => {
                this.s2c_up_act(e);
            });
        }
        static get Instance() {
            return null == this.instance && (nu.instance = new nu()), nu.instance;
        }
        get isReConnect() {
            return f.Instance.isReConnect;
        }
        set isReConnect(e) {
            f.Instance.isReConnect = e;
        }
        s2c_up_act(e) {
            console.log("s2c_up_act serverTime " + e.sec + " localTime " + Laya.Browser.now() + " frameid " + e.frameid);
        }
        s2c_send_frame_act(e) {
            if (s.curGameScene != i.EndScene) {
                if (this.isReConnect) return 0 == this.cacheServerFrame.length && (this.firstCacheID = e.frameid, 
                console.log("重连缓存起始帧 this.firstCacheID " + this.firstCacheID)), void this.cacheServerFrame.push(e);
                if (this.waitReConnectCheck) console.log("等待重连不做处理 waitReConnectCheck " + this.waitReConnectCheck); else if (null != e) {
                    var t = e.frameid;
                    this.waitReConnectCheck = f.Instance.serverFrame + 1 != t, Hl.Instance.addLogicFrame(t, e.action, !0);
                }
            } else console.log("已进入结算忽略同步消息");
        }
        s2c_get_frame(e) {
            var t = [];
            t = null == e ? [ {
                frameid: this.firstCacheID,
                action: null
            } ] : e.frameHistory;
            for (var i = 0; i < t.length; i++) for (var s = t[i], n = this.reConnectCurFrameID; n <= s.frameid; n++) {
                if (!(this.reConnectCurFrameID < this.firstCacheID)) {
                    console.log("重连中 开始执行缓存帧 reConnectCurFrameID " + this.reConnectCurFrameID + " this.firstCacheID " + this.firstCacheID);
                    for (var a = 0; a < this.cacheServerFrame.length; a++) {
                        var o = this.cacheServerFrame[a];
                        Hl.Instance.addLogicFrame(o.frameid, o.action, !1);
                    }
                    return console.log("重连完成"), this.isReConnect = !1, this.isFightIngReConnect ? Hl.Instance.closeTips = !0 : Hl.Instance.waitOpenUI = !0, 
                    this.isFightIngReConnect = !1, this.isReConnectFail = 0 == f.Instance.serverFrame, 
                    void (this.isReConnectFail && console.log("s2c_get_frame isReConnectFail"));
                }
                n == s.frameid ? Hl.Instance.addLogicFrame(s.frameid, s.action, !1) : Hl.Instance.addLogicFrame(this.reConnectCurFrameID, [], !1), 
                this.reConnectCurFrameID++;
            }
            this.reConnetFrame();
        }
        init() {
            this.isFightIngReConnect = !1, this.isReConnect = !1, this.isReConnectFail = !1, 
            this.isReConnectFight = !1, this.firstCacheID = 0, this.reConnectCurFrameID = 0, 
            this.cacheServerFrame = [], this.reConnectSeed = 0, this.reConnectPage = 0, this.waitReConnectCheck = !1;
        }
        beginReConnect(e) {
            f.reSetLogicFrame(e.frameCD), null != e.player && (d.Instance.Send(a.UIGameMain_Close), 
            Y.curMapID = e.mapid, d.Instance.Send(a.FightManager_loadFightRes, e.player)), console.log("beginReConnect ", e.randomSeed), 
            this.isFightIngReConnect = !1, this.isReConnectFight = !0, this.isReConnect = !0, 
            this.isReConnectFail = !1, this.cacheServerFrame = [], this.reConnectSeed = e.randomSeed, 
            this.reConnectPage = 1, this.reConnectCurFrameID = 1;
        }
        beginFightIngReConnect() {
            this.isFightIngReConnect = !0, this.isReConnectFight = !0, this.isReConnect = !0, 
            this.isReConnectFail = !1, this.cacheServerFrame = [], this.reConnectPage = 1, this.reConnectCurFrameID = 1, 
            this.reConnetFrame(), d.Instance.Send(a.UIGameTipsModel_SetTips, "正在恢复战场,请稍等...");
        }
        reConnetFrame() {
            console.log("c2s_get_frame ", this.reConnectPage), w.Instance.GetNetMsgData("c2s_get_frame").Send({
                index: this.reConnectPage++
            });
        }
    }
    nu.instance = null;
    class au {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_FightShop.scene", this.isLoad = !1, this.curSelectType = -1, 
            this.curSelectID = -1, this.curSelectEq = null, this.curWaitBuy = null, this.curSelectPlayerEq = null, 
            this.listTypeSelectedIndex = 0, d.Instance.Reg(a.UIFightShop_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFightShop_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIFightShop_Update, e => {
                this.update();
            }), d.Instance.Reg(a.UIFightShop_CheckBuyID, e => {
                this.checkBuyID(e[0]);
            }), d.Instance.Reg(a.UIFightShop_UpdateCoin, e => {
                this.updateCoin(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (au.instance = new au()), au.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, -1 == this.curSelectType && this.initType(), 
            this.initCurEq(), this.showSelectEQ();
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close());
        }
        initShop() {
            if (null != Re.Instance.selfPlayer) {
                var e = Tl.Instance.getHeroEq(Re.Instance.selfPlayer.modelID);
                if (null != e) {
                    for (var t = [], i = [], s = 0; s < e.eqLv2.length; s++) {
                        i.push(e.eqLv2[s]);
                        var n = xl.Instance.getEquip(e.eqLv2[s]);
                        if (null != (l = Nl.Instance.getAllMergeList(n))) for (var a = 0; a < l.length; a++) {
                            var o = l[a];
                            null != (h = xl.Instance.getEquip(o)) && 1 == h.lv && -1 == t.indexOf(o) && t.push(o);
                        }
                    }
                    for (s = 0; s < e.eqLv3.length; s++) {
                        n = xl.Instance.getEquip(e.eqLv3[s]);
                        var l = Nl.Instance.getAllMergeList(n);
                        for (a = 0; a < l.length; a++) {
                            var h;
                            o = l[a];
                            null != (h = xl.Instance.getEquip(o)) && (1 == h.lv && -1 == t.indexOf(o) && t.push(o), 
                            2 == h.lv && -1 == i.indexOf(o) && i.push(o));
                        }
                    }
                    Tl.Instance.listType[0] = {
                        btnName: "推荐",
                        eqLv1: t,
                        eqLv2: i,
                        eqLv3: e.eqLv3
                    };
                }
            }
            this.clearSelect();
        }
        update() {
            this.isOpen && (this.initCurEq(), this.initBuyEq());
        }
        checkBuyID(e) {
            null != this.curWaitBuy && this.curWaitBuy.id == e && (this.curWaitBuy = null);
        }
        sellEquip() {
            if (null != this.curSelectPlayerEq) {
                var e = [ {
                    id: o.SELL
                }, {
                    id: this.curSelectPlayerEq.id
                } ];
                Hl.Instance.addActionToServer(e);
            }
        }
        buyEquip() {
            if (null != this.curSelectEq) {
                var e = [ {
                    id: o.BUY
                }, {
                    id: this.curSelectEq.id
                } ];
                Hl.Instance.addActionToServer(e);
            }
        }
        waitBuyEquip() {
            null != this.curSelectEq && (this.curWaitBuy = this.curSelectEq, this.showSelectEQ(), 
            d.Instance.Send(a.UIFightMainModel_UpdateWaitBuy));
        }
        cancleBuyEquip() {
            this.curWaitBuy = null, this.showSelectEQ(), d.Instance.Send(a.UIFightMainModel_UpdateWaitBuy);
        }
        showSelectEQ() {
            this.uiControl && (this.curSelectEq ? this.uiControl.showSelectEquip(this.curSelectEq, this.curWaitBuy, !0) : this.uiControl.showSelectEquip(this.curSelectPlayerEq, this.curWaitBuy, !1));
        }
        initType() {
            this.uiControl.initType(Tl.Instance.listType), -1 == this.curSelectType && (this.listTypeSelectedIndex = 0, 
            this.curSelectType != this.listTypeSelectedIndex && (this.initBuyEq(), this.showSelectEQ(), 
            this.curSelectType = this.listTypeSelectedIndex));
        }
        listTypeSelect(e) {
            this.listTypeSelectedIndex = e, this.curSelectType != e && (this.curSelectID = -1, 
            this.curSelectEq = null, this.initBuyEq(), this.curSelectType = e, null != this.curSelectPlayerEq ? this.uiControl && this.uiControl.showSelectEquip(this.curSelectPlayerEq, null, !1) : this.showSelectEQ());
        }
        initCurEq() {
            var e = Re.Instance.selfPlayer;
            if (e) {
                if (null != this.curSelectPlayerEq) {
                    var t = !1;
                    for (let i = 0; i < e.equipList.length; i++) {
                        const s = e.equipList[i];
                        if (this.curSelectPlayerEq.instanceId == s.instanceId) {
                            t = !0;
                            break;
                        }
                    }
                    t || (this.curSelectPlayerEq = null, this.showSelectEQ());
                }
                this.uiControl && (this.uiControl.initCurEq(e.equipList), this.uiControl.updateCoin(e.coin));
            }
        }
        updateCoin(e) {
            this.uiControl && this.uiControl.updateCoin(e);
        }
        clearSelect() {
            this.curSelectID = -1, this.curSelectEq = null, this.initBuyEq();
        }
        initBuyEq() {
            var e = Tl.Instance.listType[this.listTypeSelectedIndex];
            if (null != e) {
                var t = [], i = e.eqLv1.length;
                i < e.eqLv2.length && (i = e.eqLv2.length), i < e.eqLv3.length && (i = e.eqLv3.length);
                var s = null, n = -1, a = -1, o = -1, l = -1, h = -1;
                if (null != e && null != this.curSelectEq && null != (s = Nl.Instance.getAllMergeList(this.curSelectEq))) {
                    for (var r = 0; r < e.eqLv1.length; r++) {
                        var c = e.eqLv1[r];
                        -1 != s.indexOf(c) && ((-1 == n || n > r) && (n = r), (-1 == a || a < r) && (a = r)), 
                        c == this.curSelectEq.id && (a = r, -1 == n && (n = a));
                    }
                    for (r = 0; r < e.eqLv2.length; r++) {
                        c = e.eqLv2[r];
                        -1 != s.indexOf(c) && ((-1 == o || o > r) && (o = r), (-1 == l || l < r) && (l = r)), 
                        c == this.curSelectEq.id && (l = r, -1 == o && (o = l));
                    }
                    for (r = 0; r < e.eqLv3.length; r++) {
                        c = e.eqLv3[r];
                        -1 != s.indexOf(c) && (-1 == h || h < r) && (h = r), c == this.curSelectEq.id && (h = r);
                    }
                }
                for (r = 0; r < i; r++) {
                    var d = [];
                    d.push(r < e.eqLv1.length ? xl.Instance.getEquip(e.eqLv1[r]) : null), d.push(r < e.eqLv2.length ? xl.Instance.getEquip(e.eqLv2[r]) : null), 
                    d.push(r < e.eqLv3.length ? xl.Instance.getEquip(e.eqLv3[r]) : null);
                    for (var u = 0; u < d.length; u++) {
                        var p = d[u], m = 0, g = !1, f = !1, I = !1, v = !1;
                        if (null != p && (m = Nl.Instance.mathBuyCoin(Re.Instance.selfPlayer, p, null), 
                        null != s && s.length > 0)) {
                            f = p.id == this.curSelectEq.id;
                            for (var _ = 0; _ < s.length; _++) if (s[_] == p.id) {
                                g = !0, f = null != p.mergeSelf && p.mergeSelf.length > 0;
                                break;
                            }
                        }
                        null != this.curSelectEq && (0 == u ? (I = !1, v = !1) : this.curSelectEq.lv >= 2 && 1 == u ? ((f || n == r || a == r) && (I = r > o || r > n, 
                        v = r < l || r < a), n != r && (n < r || o < r) && (r < a || r < l) && (I = !0, 
                        v = !0), null != p && this.curSelectEq.id == p.id && (I = r > n, v = r < a)) : 3 == this.curSelectEq.lv && 2 == u && (o != r && l != r || (I = r > h, 
                        v = r < h), (o < r || h < r) && (r < l || r < h) && (I = !0, v = !0), null != p && this.curSelectEq.id == p.id && (I = r > o, 
                        v = r < l)));
                        var y = {
                            layer: r,
                            data: p,
                            img_hr_line: {
                                visible: null != p && g
                            },
                            img_hl_line: {
                                visible: null != p && f
                            },
                            img_vup_line: {
                                visible: I
                            },
                            img_vdown_line: {
                                visible: v
                            },
                            img_bg: {
                                visible: null != p
                            },
                            img_bg2: {
                                visible: null != p && null != this.curSelectEq && this.curSelectEq.id == p.id
                            },
                            img_black: {
                                visible: null != p && Re.Instance.selfPlayer.coin < m
                            },
                            img_eqicon: {
                                visible: null != p,
                                skin: null != p ? p.icon : ""
                            },
                            label_name: {
                                visible: null != p,
                                text: null != p ? p.name : ""
                            },
                            label_coin: {
                                visible: null != p,
                                text: m
                            },
                            label_info: {
                                visible: null != p,
                                text: null != p ? p.simpleInfo : ""
                            }
                        };
                        t.push(y);
                    }
                }
                this.uiControl && this.uiControl.initBuyEq(t);
            }
        }
        onlistBuySelect(e, t) {
            -1 != e && this.curSelectID != e && (this.curSelectID = e, this.curSelectEq = t, 
            this.initBuyEq(), this.showSelectEQ());
        }
    }
    au.instance = null;
    class ou {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_DebugInfo.scene", this.isLoad = !1, d.Instance.Reg(a.UIDebugInfo_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIDebugInfo_SyncCheck, e => {
                this.SyncCheck(e[0]);
            }), d.Instance.Reg(a.UIDebugInfo_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (ou.instance = new ou()), ou.instance;
        }
        Open() {
            var e = [];
            e.push({
                id: o.SYNCCHECK
            });
            for (let i = 0; i < Re.Instance.dicPlayerInstance.length; i++) {
                const s = Re.Instance.dicPlayerInstance[i];
                var t = Re.Instance.dicPlayer[s];
                e.push({
                    id: i
                }), e.push({
                    id: t.instanceID
                }), e.push({
                    id: t.isDead ? 1 : 0
                }), e.push({
                    id: t.logicPos.x
                }), e.push({
                    id: t.logicPos.y
                }), e.push({
                    id: Math.floor(100 * t.moveDirction.x)
                }), e.push({
                    id: Math.floor(100 * t.moveDirction.y)
                }), e.push({
                    id: Math.floor(100 * t.moveCurFrameSpeed)
                }), e.push({
                    id: t.hp
                }), e.push({
                    id: t.hpMax
                });
            }
            Hl.Instance.addActionToServer(e), this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.updateFightInfo(null);
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close()), Hl.Instance.addActionToServer([ {
                id: o.RESUMEGAME
            } ]);
        }
        SyncCheck(e) {
            var t = e[0], i = e[1], s = [];
            if (t.length != i.length) {
                var n = {
                    label_name: {
                        text: ">>>>>>同步异常 "
                    },
                    label_v: {
                        text: " 数据数量不对 "
                    }
                };
                s.push(n);
            } else for (let e = 1; e < t.length; ) {
                var a = e, o = t[a++].id, l = t[a++].id, h = t[a++].id, r = t[a++].id, c = t[a++].id, d = t[a++].id, u = t[a++].id, p = t[a++].id, m = t[a++].id, g = t[a++].id, f = (a = e, 
                i[a++].id, i[a++].id), I = i[a++].id, v = i[a++].id, _ = i[a++].id, y = i[a++].id, S = i[a++].id, w = i[a++].id, D = i[a++].id, k = i[a++].id;
                if (e = a, l != f) {
                    n = {
                        label_name: {
                            text: ">>>>>>同步异常 "
                        },
                        label_v: {
                            text: " 单位索引顺序不同步 " + o
                        }
                    };
                    s.push(n);
                } else {
                    if ((h ? 1 : 0) != I) {
                        n = {
                            label_name: {
                                text: ">>>>>>同步异常 "
                            },
                            label_v: {
                                text: " 死亡状态不正常 instanceID " + l
                            }
                        };
                        s.push(n);
                    }
                    if (r != v || c != _) {
                        n = {
                            label_name: {
                                text: ">>>>>>同步异常 "
                            },
                            label_v: {
                                text: " 逻辑坐标不对 instanceID " + l
                            }
                        };
                        s.push(n);
                    }
                    if (d != y || u != S) {
                        n = {
                            label_name: {
                                text: ">>>>>>同步异常 "
                            },
                            label_v: {
                                text: " 移动方向不对 instanceID " + l
                            }
                        };
                        s.push(n);
                    }
                    if (p != w) {
                        n = {
                            label_name: {
                                text: ">>>>>>同步异常 "
                            },
                            label_v: {
                                text: " 移动速度不对 instanceID " + l
                            }
                        };
                        s.push(n);
                    }
                    if (m != D) {
                        n = {
                            label_name: {
                                text: ">>>>>>同步异常 "
                            },
                            label_v: {
                                text: " 当前生命值不对 instanceID " + l
                            }
                        };
                        s.push(n);
                    }
                    if (g != k) {
                        n = {
                            label_name: {
                                text: ">>>>>>同步异常 "
                            },
                            label_v: {
                                text: " 生命值上限不对 instanceID " + l
                            }
                        };
                        s.push(n);
                    }
                }
            }
            this.uiControl && this.uiControl.updateFightInfo(s);
        }
    }
    ou.instance = null;
    var lu = Laya.Event;
    class hu {
        constructor() {
            this.isEnabled = !1, this.keyDownList = [], this.mousePos = new Laya.Vector2(), 
            this.outMousePos3D = new Laya.Vector3(), this.clickLogicPos = new Laya.Vector2(), 
            this.moveForwrad = new Laya.Vector2(), this.moveFixForwrad = new Laya.Vector2(), 
            this.isFixDiretion = !1, this.isPlaySKill = !1, this.isMoveIng = !1, this.testMoveCurFrameSpeed = 0, 
            this.testMoveOneFrameLogicPos = new Laya.Vector2(), this.testMoveOneFrameY = 0, 
            d.Instance.Reg(a.UIFightMainModel_TouchMove, e => {
                this.StopMove();
            });
        }
        static get Instance() {
            return null == hu.instance && (hu.instance = new hu()), hu.instance;
        }
        init() {
            this.isEnabled = !0, this.isMoveIng = !1, this.isPlaySKill = !1, Laya.stage.on(lu.MOUSE_DOWN, this, this.onLeftMouseDown), 
            Laya.stage.on(lu.KEY_DOWN, this, this.onKeyDown), Laya.stage.on(lu.KEY_UP, this, this.onKeyUp), 
            this.moveClickEffect = Me.Instance.getEffect("3dres/effect/e_zhixiang.lh", 0, 0).obj;
        }
        clear() {
            this.isEnabled = !1, Laya.stage.off(lu.MOUSE_DOWN, this, this.onLeftMouseDown), 
            Laya.stage.off(lu.KEY_PRESS, this, this.onKeyDown), Laya.stage.off(lu.KEY_UP, this, this.onKeyUp), 
            Me.Instance.removeEffect("3dres/effect/e_zhixiang.lh", this.moveClickEffect), this.StopMove();
        }
        onLeftMouseDown(e) {
            Laya.MouseManager.instance._checkAllBaseUI(Laya.stage.mouseX, Laya.stage.mouseY, t => {
                if (null == t || null == t._parent || "ui_view/v_FightMain.scene" == t.url || "ui_view/v_FightMain.scene" == t._parent.url && null == t._events) {
                    var i = Re.Instance.selfPlayer;
                    if (i) {
                        this.mousePos.setValue(Laya.stage.mouseX, Laya.stage.mouseY), Y.Instance.Pos2DTo3D(this.mousePos, i.showPos.y, this.outMousePos3D), 
                        this.clickLogicPos.setValue(100 * this.outMousePos3D.x, 100 * this.outMousePos3D.z);
                        var s, n, o, l = He.Instance.getRangeUnitsByPos(this.clickLogicPos, i, 1);
                        if (null != l) for (let e = 0; e < l.length; e++) {
                            const t = l[e];
                            t.teamID != i.teamID && (null == s && t.unitType == me.HERO ? s = t : null == n && t.unitType == me.BUILD ? n = t : null == o && t.unitType == me.UNIT && (o = t));
                        }
                        var h = s || (n || o);
                        h ? (this.StopMove(), d.Instance.Send(a.UIFightMainModel_AutoTraceUnit, h, 50)) : this.onRightMouseDown(e);
                    }
                }
            });
        }
        onRightMouseDown(e) {
            if (this.isPlaySKill) return this.isPlaySKill = !1, void d.Instance.Send(a.UIFightMainModel_TouchSkillEnd, e, !0);
            var t = Re.Instance.selfPlayer;
            t && (this.mousePos.setValue(Laya.stage.mouseX, Laya.stage.mouseY), Y.Instance.Pos2DTo3D(this.mousePos, t.showPos.y, this.outMousePos3D), 
            this.moveTargetPos = new Laya.Vector3(this.outMousePos3D.x, this.outMousePos3D.y, this.outMousePos3D.z), 
            this.moveClickEffect && (this.moveClickEffect.transform.position = this.moveTargetPos, 
            null == this.moveClickEffect.parent && Y.Instance.addChild(this.moveClickEffect)), 
            this.isMoveIng || (this.isMoveIng = !0, d.Instance.Send(a.UIFightMainModel_AutoTraceUnit, null), 
            this.PlayerMove(), Laya.stage.timer.frameLoop(2, this, this.PlayerMove)));
        }
        onKeyDown(e) {
            var t = e.keyCode, i = String.fromCharCode(t);
            if (null == this.keyDownList[t]) switch (this.keyDownList[t] = !0, i) {
              case "Q":
                this.playSkill(1);
                break;

              case "W":
                this.playSkill(2);
                break;

              case "E":
                this.playSkill(3);
                break;

              case "A":
                this.StopMove(), this.playSkill(0);
                break;

              case "S":
                this.StopMove();
                break;

              case "D":
                this.playSkill(4);
                break;

              case "F":
                this.StopMove(), this.playSkill(5);
            }
        }
        onKeyUp(e) {
            var t = e.keyCode, i = String.fromCharCode(t);
            switch (delete this.keyDownList[t], i) {
              case "Q":
              case "W":
              case "E":
              case "D":
              case "F":
                this.endSkill();
            }
        }
        endSkill() {
            if (this.isPlaySKill) return this.isPlaySKill = !1, void d.Instance.Send(a.UIFightMainModel_TouchSkillEnd, null, !1);
        }
        StopMove() {
            this.isMoveIng = !1, this.moveClickEffect && this.moveClickEffect.removeSelf(), 
            Laya.stage.timer.clear(this, this.PlayerMove), this.moveTargetPos = null, Hl.Instance.addActionToServer([ {
                id: o.MOVE
            }, {
                id: 0
            }, {
                id: 0
            }, {
                id: 0
            } ]);
        }
        PlayerMove() {
            var e = Re.Instance.selfPlayer;
            (null == e || e.isDead) && this.StopMove(), this.moveTargetPos && e && (Laya.Vector3.distance(e.showPos, this.moveTargetPos) < .5 ? this.StopMove() : (q.VectorNormal(this.moveTargetPos.x - e.showPos.x, this.moveTargetPos.z - e.showPos.z, this.moveForwrad), 
            this.isFixDiretion = !1, this.testCollider(u.decimalRound(this.moveForwrad.x), u.decimalRound(this.moveForwrad.y)) || (this.moveFixForwrad.x = 0, 
            this.moveFixForwrad.y = this.moveForwrad.y < 0 ? -1 : 1, this.testCollider(this.moveFixForwrad.x, this.moveFixForwrad.y) || (this.moveFixForwrad.x = this.moveForwrad.x < 0 ? -1 : 1, 
            this.moveFixForwrad.y = 0, this.testCollider(this.moveFixForwrad.x, this.moveFixForwrad.y) || (this.moveFixForwrad.x = this.moveForwrad.x < 0 ? 1 : -1, 
            this.moveFixForwrad.y = 0)), this.moveForwrad.x = this.moveFixForwrad.x, this.moveForwrad.y = this.moveFixForwrad.y, 
            this.isFixDiretion = !0), Hl.Instance.addActionToServer([ {
                id: o.MOVE
            }, {
                id: u.round(100 * this.moveForwrad.x) + 1e3
            }, {
                id: u.round(100 * this.moveForwrad.y) + 1e3
            }, {
                id: this.isFixDiretion ? 1 : 0
            } ])));
        }
        testCollider(e, t) {
            var i = Re.Instance.selfPlayer;
            return null != i && (this.testMoveCurFrameSpeed = i.getMoveSpeed(), this.testMoveOneFrameLogicPos.setValue(i.logicPos.x + u.noDecimalRound(e * this.testMoveCurFrameSpeed), i.logicPos.y + u.noDecimalRound(t * this.testMoveCurFrameSpeed)), 
            this.testMoveOneFrameY = z.Instance.getHeightMap(this.testMoveOneFrameLogicPos.x / 100, this.testMoveOneFrameLogicPos.y / 100), 
            !isNaN(this.testMoveOneFrameY));
        }
        playSkill(e) {
            this.isPlaySKill = !0;
            var t = {
                x: Laya.stage.mouseX,
                y: Laya.stage.mouseY
            };
            d.Instance.Send(a.UIFightMainModel_PlaySkill, {
                touchId: 0
            }, e, t, !0, me.HERO);
        }
    }
    hu.instance = null;
    var ru = Laya.Event;
    class cu {
        constructor() {
            this.moveNum = 0, this.moveX = 0, this.moveY = 0, this.moveDown = !1, this.moveUp = !1, 
            this.keyDownList = [], this.moveIng = !1, console.log("N 新号"), Laya.stage.on(ru.KEY_DOWN, this, this.onOtherKeyDown);
        }
        static get Instance() {
            return null == cu.instance && (cu.instance = new cu()), cu.instance;
        }
        init() {
            console.log("W A S D 控制移动"), console.log("R 显示单位信息"), console.log("T 显示伤害数字"), console.log("O 立即结束战斗 蓝队胜利"), 
            console.log("P 立即结束战斗 红队胜利"), ou.Instance, Laya.stage.on(ru.KEY_DOWN, this, this.onKeyDown), 
            Laya.stage.on(ru.KEY_UP, this, this.onKeyUp);
        }
        clear() {
            Laya.stage.off(ru.KEY_DOWN, this, this.onKeyDown), Laya.stage.off(ru.KEY_UP, this, this.onKeyUp);
        }
        onOtherKeyDown(e) {
            if (!s.is4399H5Platform) {
                var t = e.keyCode;
                switch (String.fromCharCode(t)) {
                  case "N":
                    window.localStorage.setItem("playerID", "");
                    break;

                  case "J":
                    s.waitJoinRoom = 999, s.waitJoinRoom > 0 && d.Instance.Send(a.UIGameMain_WaitJoinRoom, s.waitJoinRoom);
                    break;

                  case "C":
                    window.localStorage.setItem("playerID", ""), le.Instance.ChangeAccount();
                    break;

                  case "L":
                    w.Instance.stopConnect();
                }
            }
        }
        onKeyDown(e) {
            var t = e.keyCode;
            if (null == this.keyDownList[t]) {
                this.keyDownList[e.keyCode] = !0;
                var i = String.fromCharCode(t);
                switch (this.moveDown = !1, i) {
                  case "W":
                    this.moveNum++, this.moveX += 0, this.moveY += -1, this.moveDown = !0;
                    break;

                  case "A":
                    this.moveNum++, this.moveX += -1, this.moveY += 0, this.moveDown = !0;
                    break;

                  case "S":
                    this.moveNum++, this.moveX += 0, this.moveY += 1, this.moveDown = !0;
                    break;

                  case "D":
                    this.moveNum++, this.moveX += 1, this.moveY += 0, this.moveDown = !0;
                    break;

                  case "R":
                    if (!s.is4399H5Platform) {
                        var n = [];
                        n.push({
                            id: o.PAUSEGAME
                        }), Hl.Instance.addActionToServer(n);
                    }
                    break;

                  case "T":
                    s.is4399H5Platform || (s.isShowAllDamage = !s.isShowAllDamage);
                    break;

                  case "O":
                    s.is4399H5Platform || d.Instance.Send(a.FightManager_GameEnd, 1);
                    break;

                  case "P":
                    s.is4399H5Platform || d.Instance.Send(a.FightManager_GameEnd, 2);
                    break;

                  case "G":
                    s.is4399H5Platform || (f.Instance.serverFrame += 1);
                }
                this.moveDown && !this.moveIng && (this.moveIng = !0, Laya.stage.timer.frameLoop(2, this, this.PlayerMove));
            }
        }
        onKeyUp(e) {
            var t = e.keyCode;
            delete this.keyDownList[t];
            var i = String.fromCharCode(t);
            switch (this.moveUp = !1, i) {
              case "W":
                this.moveNum--, this.moveX -= 0, this.moveY -= -1, this.moveUp = !0;
                break;

              case "A":
                this.moveNum--, this.moveX -= -1, this.moveY -= 0, this.moveUp = !0;
                break;

              case "S":
                this.moveNum--, this.moveX -= 0, this.moveY -= 1, this.moveUp = !0;
                break;

              case "D":
                this.moveNum--, this.moveUp = !0, this.moveX -= 1, this.moveY -= 0;
            }
            this.moveUp && this.moveNum <= 0 && (this.moveIng = !1, Laya.stage.timer.clear(this, this.PlayerMove), 
            this.StopMove());
        }
        StopMove() {
            hu.Instance.isEnabled || Hl.Instance.addActionToServer([ {
                id: o.MOVE
            }, {
                id: 0
            }, {
                id: 0
            }, {
                id: 0
            } ]);
        }
        PlayerMove() {
            if (!hu.Instance.isEnabled && null != Y.Instance.mainCamera && null != Y.Instance.mainCamera.transform) {
                var e = {
                    x: 0,
                    y: 0
                };
                q.VectorNormal(this.moveX, this.moveY, e);
                var t = new Laya.Vector3(e.x, 0, e.y), i = new Laya.Vector3();
                Laya.Vector3.transformQuat(t, Y.Instance.mainCamera.transform.rotation, i), q.scalarLength(i), 
                Hl.Instance.addActionToServer([ {
                    id: o.MOVE
                }, {
                    id: u.round(100 * i.x) + 1e3
                }, {
                    id: u.round(100 * i.z) + 1e3
                }, {
                    id: 0
                } ]);
            }
        }
        newPlayer() {
            window.localStorage.setItem("playerID", "");
        }
    }
    cu.instance = null;
    class du {
        constructor() {
            this.groupId = "", this.signature = "", this.nonceStr = "", this.timeStamp = 0, 
            this.waitGroupId = "", this.muteMicrophone = !1, this.muteSpeakerPhone = !1, this.isJoinSuccess = !1, 
            this.isWaitJoin = !1, this.voipScope = !0, w.Instance.RegisterNet(11016, e => {
                this.s2c_oppo_yy_sign(e);
            }), w.Instance.RegisterNet(11018, e => {
                this.s2c_wx_yy_sign(e);
            }), w.Instance.RegisterNet(12042, e => {
                this.s2c_match_success_id(e);
            });
        }
        static get Instance() {
            return null == du.instance && (du.instance = new du()), du.instance;
        }
        s2c_oppo_yy_sign(e) {
            this.signature = e.sign, this.isWaitJoin = !1, console.log("s2c_oppo_yy_sign signature " + this.signature), 
            this.joinVoIPChat();
        }
        s2c_wx_yy_sign(e) {
            this.signature = e.sign, this.isWaitJoin = !1, console.log("s2c_wx_yy_sign signature " + this.signature), 
            this.joinVoIPChat();
        }
        s2c_match_success_id(e) {
            if (this.waitGroupId = "", e && e.idl) for (var t = 0; t < e.idl.length; t++) {
                (o = e.idl[t]).id == s.playerID && (this.waitGroupId = o.num + "");
            }
            if (s.isWXPlatform && e && e.idl && e.idl.length > 0) {
                var i = 0, n = {};
                if (e && e.teamidl) {
                    for (t = 0; t < e.teamidl.length; t++) {
                        (o = e.teamidl[t]).id == s.playerID && (i = o.team);
                    }
                    for (t = 0; t < e.teamidl.length; t++) {
                        (o = e.teamidl[t]).teamid > 0 && o.team == i && (null == n[o.teamid] && (n[o.teamid] = 0), 
                        n[o.teamid]++);
                    }
                    var a = -1;
                    for (t = 0; t < e.teamidl.length; t++) {
                        var o;
                        (o = e.teamidl[t]).teamid > 0 && o.team == i && n[o.teamid] && (-1 == a || n[o.teamid] > a) && (a = n[o.teamid], 
                        this.waitGroupId = o.teamid + "");
                    }
                }
            }
            !this.isJoinSuccess && this.voipScope ? (console.log("s2c_match_success_id  " + this.waitGroupId), 
            "" != this.waitGroupId && this.waitJoinVoip(this.waitGroupId)) : this.isJoinSuccess && (this.waitGroupId = this.groupId);
        }
        waitJoinVoip(e) {
            this.isWaitJoin || (this.isWaitJoin = !0, this.waitGroupId = e + "", this.groupId = e + "", 
            console.log("waitJoinVoip  " + this.groupId), s.isOppoPlatform && Laya.Browser.window.qg && "" != this.groupId ? (console.log("isTourist: " + s.isTourist), 
            "false" === s.isTourist && Laya.Browser.window.qg.login({
                success: function(e) {
                    console.log("oppo Voip token: " + e), du.Instance.initOppoVoip(e.data.token);
                },
                fail: function(e) {
                    console.log(JSON.stringify(e));
                }
            })) : s.isWXPlatform && this.initWxVoip());
        }
        initConfig() {
            this.voipScope = !0;
            var e = E.Instance.GetKey("muteMicrophone"), t = E.Instance.GetKey("muteSpeakerPhone");
            this.muteMicrophone = null != e && "" != e && "1" == e, this.muteSpeakerPhone = null != t && "" != t && "1" == t, 
            s.isWXPlatform && le.Instance.api.getSetting({
                success(e) {
                    du.Instance.voipScope = !!e.authSetting["scope.record"];
                }
            });
        }
        openVoipScope() {
            s.isWXPlatform && (this.voipScope || d.Instance.Send(a.UIConfirm_Open, 1, 0, "使用语音聊天需录音权限，确定开启吗？", Laya.Handler.create(this, () => {
                Laya.Browser.window.wx.authorize({
                    scope: "scope.record",
                    success() {
                        du.Instance.voipScope = !0, d.Instance.Send(a.VoipScope_Update), "" != du.Instance.waitGroupId && du.Instance.waitJoinVoip(du.Instance.waitGroupId);
                    },
                    fail() {
                        Laya.Browser.window.wx.openSetting({
                            success(e) {
                                console.log(e.authSetting), du.Instance.voipScope = !!e.authSetting["scope.record"], 
                                d.Instance.Send(a.VoipScope_Update), du.Instance.voipScope && "" != du.Instance.waitGroupId && du.Instance.waitJoinVoip(du.Instance.waitGroupId);
                            }
                        });
                    }
                });
            })));
        }
        getMicSkin() {
            return !this.voipScope || this.muteMicrophone || s.isOppoPlatform && "true" === s.isTourist ? "fight/yuyin_2.png" : "fight/yuyin_1.png";
        }
        getSpeakerSkin() {
            return !this.voipScope || this.muteSpeakerPhone || s.isOppoPlatform && "true" === s.isTourist ? "fight/yuyin_4.png" : "fight/yuyin_3.png";
        }
        initOppoVoip(e) {
            console.log("initVoip token " + e), this.isJoinSuccess = !1, this.nonceStr = Math.random() + "", 
            this.timeStamp = new Date().getTime(), w.Instance.GetNetMsgData("c2s_oppo_yy_sign").Send({
                token: e,
                nonceStr: this.nonceStr,
                timeStamp: this.timeStamp,
                channelName: this.groupId
            });
        }
        initWxVoip() {
            this.isJoinSuccess = !1, this.nonceStr = "NS" + Math.floor(1e11 * Math.random()), 
            this.timeStamp = Math.floor(new Date().getTime() / 1e3), console.log("initWxVoip nonceStr " + this.nonceStr), 
            w.Instance.GetNetMsgData("c2s_wx_yy_sign").Send({
                groupId: this.groupId,
                nonceStr: this.nonceStr,
                timeStamp: this.timeStamp + "",
                session_key: s.session_key
            });
        }
        joinVoIPChat() {
            this.isJoinSuccess || (this.isJoinSuccess = !0, le.Instance.api.joinVoIPChat({
                signature: this.signature,
                nonceStr: this.nonceStr,
                timeStamp: this.timeStamp,
                groupId: this.groupId,
                muteConfig: {
                    muteMicrophone: this.muteMicrophone,
                    muteSpeakerPhone: this.muteSpeakerPhone
                },
                success: e => {
                    le.Instance.api.onVoIPChatMembersChanged(this.onVoIPChatMembersChanged), le.Instance.api.onVoIPChatSpeakersChanged(this.onVoIPChatSpeakersChanged), 
                    le.Instance.api.onVoIPChatStatusChanged(this.onVoIPChatStatusChanged), le.Instance.api.onVoIPChatInterrupted(this.onVoIPChatInterrupted), 
                    console.log("joinVoIPChat success " + JSON.stringify(e));
                },
                fail: e => {
                    this.isJoinSuccess = !1, console.log("joinVoIPChat fail " + JSON.stringify(e));
                }
            }));
        }
        exitVoIPChat() {
            this.isJoinSuccess && (this.waitGroupId = "", this.isJoinSuccess = !1, le.Instance.api.offVoIPChatMembersChanged(this.onVoIPChatMembersChanged), 
            le.Instance.api.offVoIPChatSpeakersChanged(this.onVoIPChatSpeakersChanged), le.Instance.api.offVoIPChatStatusChanged(this.onVoIPChatStatusChanged), 
            le.Instance.api.offVoIPChatInterrupted(this.onVoIPChatInterrupted), le.Instance.api.exitVoIPChat({
                success: e => {
                    console.log("exitVoIPChat success " + JSON.stringify(e));
                },
                fail: e => {
                    console.log("exitVoIPChat fail " + JSON.stringify(e));
                }
            }));
        }
        setMuteSound() {
            this.muteSpeakerPhone = !this.muteSpeakerPhone, le.Instance.api.updateVoIPChatMuteConfig({
                muteConfig: {
                    muteMicrophone: this.muteMicrophone,
                    muteSpeakerPhone: this.muteSpeakerPhone
                },
                success: e => {
                    console.log("updateVoIPChatMuteConfig success " + JSON.stringify(e));
                },
                fail: e => {
                    console.log("updateVoIPChatMuteConfig fail " + JSON.stringify(e));
                }
            }), E.Instance.SaveKey("muteSpeakerPhone", this.muteSpeakerPhone ? "1" : "0");
        }
        setMuteMic() {
            this.muteMicrophone = !this.muteMicrophone, le.Instance.api.updateVoIPChatMuteConfig({
                muteConfig: {
                    muteMicrophone: this.muteMicrophone,
                    muteSpeakerPhone: this.muteSpeakerPhone
                },
                success: e => {
                    console.log("updateVoIPChatMuteConfig success " + JSON.stringify(e));
                },
                fail: e => {
                    console.log("updateVoIPChatMuteConfig fail " + JSON.stringify(e));
                }
            }), E.Instance.SaveKey("muteMicrophone", this.muteMicrophone ? "1" : "0");
        }
        onVoIPChatMembersChanged(e, t, i) {
            for (var s = 0; s < e.length; s++) e[s] + ", ";
        }
        onVoIPChatSpeakersChanged(e, t, i) {
            for (var s = 0; s < e.length; s++) e[s] + ", ";
        }
        onVoIPChatStatusChanged(e, t) {}
        onVoIPChatInterrupted(e, t) {
            console.log("onVoIPChatInterrupted errCode " + JSON.stringify(e)), console.log("onVoIPChatInterrupted errMsg " + t), 
            du.Instance.exitVoIPChat();
        }
    }
    du.instance = null;
    class uu {
        constructor() {
            this.isLoadComplete = !1, this.maxWingLv = 0;
        }
        static get Instance() {
            return null == this.instance && (uu.instance = new uu()), uu.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/wing.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.cacheData = e, this.cacheData && this.cacheData.lvData && this.cacheData.lvData.length > 0 && (this.maxWingLv = this.cacheData.lvData[this.cacheData.lvData.length - 1].lv)) : console.log("config/wing.json load fail!"), 
            this.callBack && this.callBack();
        }
        getWingLvData(e) {
            if (this.cacheData && this.cacheData.lvData) for (let t = 0; t < this.cacheData.lvData.length; t++) {
                const i = this.cacheData.lvData[t];
                if (i.lv == e) return i;
            }
            return null;
        }
        getWingSkills() {
            var e = [];
            if (this.cacheData && this.cacheData.resData) for (let t = 0; t < this.cacheData.resData.length; t++) {
                const i = this.cacheData.resData[t];
                -1 == e.indexOf(i.skill) && e.push(i.skill);
            }
            return e;
        }
        getWingResData(e) {
            if (this.cacheData && this.cacheData.resData) for (let t = 0; t < this.cacheData.resData.length; t++) {
                const i = this.cacheData.resData[t];
                if (i.id == e) return i;
            }
            return null;
        }
        getWingResDataByLv(e) {
            var t;
            if (this.cacheData && this.cacheData.resData) for (let i = 0; i < this.cacheData.resData.length; i++) {
                const s = this.cacheData.resData[i];
                e >= s.needLv && (t = s);
            }
            return t;
        }
        getNextWingResDataByLv(e) {
            var t = 0;
            if (this.cacheData && this.cacheData.resData) {
                for (let i = 0; i < this.cacheData.resData.length; i++) {
                    e >= this.cacheData.resData[i].needLv && (t = i);
                }
                if (t + 1 < this.cacheData.resData.length) return this.cacheData.resData[t + 1];
            }
            return null;
        }
    }
    uu.instance = null;
    var pu = Laya.Scene;
    class mu {
        constructor() {
            this.localFrame = 0, this.selfID = 3, this.runState = !1, this.showPauseTips = !1, 
            this.pauseCount = 0, this.isSend = !1, this.pauseDelayFrameNum = 0, this.pauseDelayFrameMaxNum = 3, 
            d.Instance.Reg(a.LocalServer_Pause, e => {
                this.Pause(e[0]);
            }), d.Instance.Reg(a.LocalServer_Resume, e => {
                this.Resume(e[0]);
            }), d.Instance.Reg(a.LocalServer_StartLocalFight, e => {
                this.StartLocalFight();
            }), d.Instance.Reg(a.LocalServer_End, e => {
                this.End();
            });
        }
        static get Instance() {
            return null == this.instance && (mu.instance = new mu()), mu.instance;
        }
        LoadLocalFight(e, t, i) {
            console.log("LoadLocalFight dungeonID " + e + " dayID " + t), d.Instance.Send(a.UILoad_Open), 
            d.Instance.Send(a.UIFightReady_Close), pu.open("scenes/s_Dungeon.scene", !0, null, Laya.Handler.create(this, e => {}));
        }
        StartLocalFight() {
            this.pauseCount = 0, this.runState = !0, this.localFrame = 1, f.reSetLogicFrame(33), 
            Laya.timer.loop(f.logicFrameTime, this, this.UpdateFrames);
        }
        CopyAction(e) {
            var t = [];
            if (null != e) for (var i = 0; i < e.length; i++) {
                var s = {
                    id: 0,
                    value: []
                }, n = e[i];
                if (s.id = n.id, null != n.value) for (var a = 0; a < n.value.length; a++) s.value.push({
                    id: n.value[a].id
                });
                t.push(s);
            }
            return t;
        }
        UpdateFrames() {
            this.runState && (this.cacheAction = Hl.Instance.addLogicFrame(this.localFrame++, [], !1));
        }
        clear() {
            this.pauseCount = 0, this.cacheAction = null;
        }
        End() {
            this.pauseCount = 0, this.cacheAction = null, this.showPauseTips = !1, this.pauseDelayFrameNum = 0, 
            this.runState = !1, Laya.timer.clear(this, this.UpdateFrames);
        }
        Pause(e) {
            console.log(">>> Pause"), this.runState = !1, this.pauseCount++;
        }
        Resume(e) {
            console.log(">>> Resume clear " + e), e && this.clear(), this.pauseCount--, this.pauseCount <= 0 && (this.pauseCount = 0, 
            this.runState = !0, this.UpdateFrames());
        }
    }
    mu.instance = null;
    class gu {
        constructor() {
            this.achievement = [], this.isLoadComplete = !1;
        }
        static get Instance() {
            return null == this.instance && (gu.instance = new gu()), gu.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/achievement.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            if (null != e) {
                this.isLoadComplete = !0;
                for (let t = 0; t < e.length; t++) this.achievement.push(e[t]);
            } else console.log("config/achievement.json load fail!");
            this.callBack && this.callBack();
        }
        getKvList(e, t, i) {
            var s = [], n = this.check2(e, t, i);
            null != n && s.push(n);
            var a = this.check3(e, t, i);
            null != a && s.push(a);
            var o = this.check4(e, t, i);
            null != o && s.push(o);
            var l = this.check5(e, t, i);
            null != l && s.push(l);
            var h = this.check6(e, t, i);
            null != h && s.push(h);
            var r = this.check7(e, t, i);
            null != r && s.push(r);
            var c = this.check9(e, t, i);
            return null != c && s.push(c), s;
        }
        check2(e, t, i) {
            return i > 0 && e.bediamond / i >= .5 ? {
                id: 2,
                num: 1
            } : null;
        }
        check3(e, t, i) {
            return t > 0 && e.diamond / t >= .5 ? {
                id: 3,
                num: 1
            } : null;
        }
        check4(e, t, i) {
            return e.threeKillCount > 0 ? {
                id: 4,
                num: e.threeKillCount
            } : null;
        }
        check5(e, t, i) {
            return e.killNum > 15 ? {
                id: 5,
                num: 1
            } : null;
        }
        check6(e, t, i) {
            return 0 == e.deadNum && e.killNum >= 10 && e.helpKillNum >= 8 ? {
                id: 6,
                num: 1
            } : null;
        }
        check7(e, t, i) {
            return e.killNum >= 15 ? {
                id: 7,
                num: 1
            } : null;
        }
        check9(e, t, i) {
            return e.firstBlood ? {
                id: 9,
                num: 1
            } : null;
        }
    }
    gu.instance = null;
    class fu {
        constructor() {
            this.isFighting = !1, this.isGameEnd = !1, this.isLoadResIng = !1, this.fightCount = 0, 
            this.team1Kill = 0, this.team2Kill = 0, this.selfWin = !1, this.selfKill = 0, this.selfDead = 0, 
            this.selfHelp = 0, this.fightCheckSpaceFrame = 30, this.roundUnitData = [], this.timeAddSpace = 0, 
            this.randomBuffSpace = 0, this.randomBuffList = [], this.randomBuffIndex = 0, this.truePlayerNum = 0, 
            this.curRandomBuffId = 0, this.shModelLv = 0, this.dicXPUse = {}, d.Instance.Reg(a.FightManager_loadFightRes, e => {
                this.loadFightRes(e[0]);
            }), d.Instance.Reg(a.FightManager_waitOpenUI, e => {
                this.openFightUI();
            }), d.Instance.Reg(a.FightManager_GameEnd, e => {
                this.gameEnd(e[0]);
            }), d.Instance.Reg(a.FightManager_Kill, e => {
                this.addKillNum(e[0]);
            }), d.Instance.Reg(a.FightManager_DeadDrop, e => {
                this.deadDropMath(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.FightManager_XPSkill, e => {
                this.useXPSkill(e[0], e[1]);
            }), d.Instance.Reg(a.FightManager_ReConnectComplete, e => {
                this.ReConnectComplete();
            }), w.Instance.RegisterNet(12007, e => {
                this.s2c_ready_battle(e);
            }), w.Instance.RegisterNet(12012, e => {
                this.s2c_battle_result(e);
            }), w.Instance.RegisterNet(12008, e => {
                this.s2c_begin_battle(e);
            });
        }
        static get Instance() {
            return null == this.instance && (fu.instance = new fu()), fu.instance;
        }
        checkXPEnable(e, t) {
            var i = this.dicXPUse[e];
            if (null != i) for (let e = 0; e < i.length; e++) {
                const s = i[e];
                if (s.skillId == t) return s.cd;
            }
            return 0;
        }
        useXPSkill(e, t) {
            var i, s = this.dicXPUse[e];
            if (null != s) {
                for (let e = 0; e < s.length; e++) {
                    const n = s[e];
                    if (n.skillId == t && (i = n, n.cd > 0)) return;
                }
                null == i && (i = {
                    cd: 0,
                    skillId: t
                }, s.push(i));
            } else (s = []).push(i = {
                cd: 0,
                skillId: t
            }), this.dicXPUse[e] = s;
            if (this.fightOwnerUnit && i) {
                var n, o = this.fightOwnerUnit.getSKillIndex(t);
                (n = -1 == o ? this.fightOwnerUnit.addSkill(t, !1) : this.fightOwnerUnit.getSKill(o)) && (n.curCD = 0, 
                i.cd = n.lvData[1].cd);
                var l = Re.Instance.getPlayer(e);
                if (l) {
                    if (this.fightOwnerUnit.showPos.y = l.showPos.y, this.fightOwnerUnit.playSkill(n.ownerSkillIndex, 0, new Laya.Point(l.logicPos.x, l.logicPos.y)), 
                    n.curLvData.selfBuffID) for (let e = 0; e < n.curLvData.selfBuffID.length; e++) bl.Instance.AddBuff(l, l, n.curLvData.selfBuffID[e]);
                    d.Instance.Send(a.UIFightMainModel_UpdateXPSkillShow, l.playerName, n);
                }
            }
            Laya.timer.once(500, this, () => {
                d.Instance.Send(a.UIFightMainModel_UpdateRandomBuffInit);
            });
        }
        addKillNum(e) {
            1 == e ? this.team1Kill++ : this.team2Kill++, d.Instance.Send(a.UIFightMainModel_UpdateKill);
        }
        s2c_battle_result(e) {
            if (this.cacheBattleResultSendData = null, this.fightCount++, this.isFighting && !this.isGameEnd) return null != e && Y.curMapID != Y.mapID_sh && (Z.Instance.rank = e.stage), 
            void Laya.timer.once(100, this, e => {
                f.Instance.isSpeedPlay || nu.Instance.isReConnect || 0 == f.Instance.currentFrame || nu.Instance.isReConnectFail ? d.Instance.Send(a.UIGameTipsModel_SetTips, "战斗已结束,正在退出战斗", 2e3) : (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                    type: 2e3
                }), d.Instance.Send(a.UIGameTipsModel_SetTips, "战斗已结束,正在退出战斗", 2e3)), this.exitGame(), 
                console.log("战斗数据异常,正在退出战斗");
            }, [ e ]);
            Y.curMapID == Y.mapID_sh ? (d.Instance.Send(a.UIFightEndSHShow_SetData, this.selfWin, e), 
            Z.Instance.shModelCurLv = e.xxlv) : d.Instance.Send(a.UIFightEndRankShow_SetData, this.selfWin, e), 
            null != e && Y.curMapID != Y.mapID_sh && (Z.Instance.rank = e.stage, this.cacheData = e);
        }
        s2c_ready_battle(e) {
            null != e && 1 != e.code && console.log("12002 errorCode", e.code);
        }
        s2c_begin_battle(e) {
            if (this.isLoadResIng) return d.Instance.Send(a.UIGameTipsModel_SetTips, "资源加载失败，正在重新加载...", 1500), 
            this.exitGame(), void w.Instance.GetNetMsgData("c2s_battle_recover").Send({});
            f.isLocalServer && mu.Instance.StartLocalFight(), nu.Instance.isReConnectFight || this.startFight(e.randomSeed);
        }
        loadFightRes(e) {
            ie.Instance.closeAllUI(), this.isLoadResIng = !0, this.isFighting = !0, this.team1Kill = 0, 
            this.team2Kill = 0, this.selfKill = 0, this.selfDead = 0, this.selfHelp = 0, this.shModelLv = 0, 
            this.cacheBattleResultSendData = null, this.dicXPUse = {}, this.truePlayerNum = 0, 
            Me.Instance.initPool(), nu.Instance.init(), Re.Instance.init(), d.Instance.Send(a.UILoad_Open, e), 
            Re.Instance.instanceID = -1e4, this.fightData = El.Instance.initFight(Y.curMapID), 
            Y.Instance.loadScene(Fl.Instance.getScene(Y.curMapID == Y.mapID_33 ? 1 : 2), Laya.Handler.create(this, () => {
                f.Instance.init(), this.fightOwnerUnit = new su(), this.fightOwnerUnit.modelData = new re(), 
                this.fightOwnerUnit.teamID = 1, this.fightOwnerUnit.instanceID = Re.Instance.instanceID;
                for (let d = 0; d < e.length; d++) {
                    var t = e[d];
                    console.log("id ", t.id + " v " + t.client_version), t.id > 0 && this.truePlayerNum++;
                    var i = t.role;
                    if ((p = new su()).init(t.id, i, t.team, t.wxname), p.setPos(1 == t.team ? Y.Instance.pointDic.point_ac : Y.Instance.pointDic.point_bc), 
                    p.tempFightId = null == t.temp_id || 0 == t.temp_id ? t.id : t.temp_id, Re.Instance.addPlayer(p, t.temp_id), 
                    null != p.aiControl && p.aiControl.initAIData(t.ailevel), 0 == this.shModelLv && 2 == t.team && (this.shModelLv = t.ailevel), 
                    s.playerID == t.id && (p.isSelf = !0, Re.Instance.selfPlayer = p), 1 == t.kjfl) {
                        p.addCoin(2 * this.fightData.initGlod, null, !1);
                        var n = p.lvData[0];
                        n && p.addExp(n.nextLvExp, !1), p.reliveLimt = 1, p.isKjfl = !0;
                    } else p.addCoin(this.fightData.initGlod, null, !1);
                    Y.curMapID == Y.mapID_sh && 1 == t.team && (p.isKjfl = !0);
                    var a = p.addSkill(1, !1);
                    if (p.isKjfl && a && (a.lv = 2, a.init(2)), 0 != t.wingShowID) {
                        var o = uu.Instance.getWingResData(t.wingShowID);
                        o && p.setWing(o.modelRes);
                    }
                    if (t.wingLv) {
                        var l = uu.Instance.getWingLvData(t.wingLv);
                        if (l && l.data) for (let e = 0; e < l.data.length; e++) {
                            const t = l.data[e];
                            p.isWing = !0, (a = p.addSkill(t.skillId, !1)) && (a.lv = t.lv, a.init(t.lv));
                        }
                    }
                    if (!p.isWing) (a = p.addSkill(2, !1)) && (a.lv = 5, a.init(5));
                    if (null != t.attr) for (var h = 0; h < t.attr.length; h++) {
                        var r = t.attr[h], c = this.updateHeroAttr(r.id, r.num);
                        c[ue.changeHpMax] && (p.hp += u.round(c[ue.changeHpMax]), p.baseHpMax += u.round(c[ue.changeHpMax]), 
                        p.hpMax = p.baseHpMax), c[ue.changePhyAtk] && (p.phyAtk += u.round(c[ue.changePhyAtk])), 
                        c[ue.changeMagAtk] && (p.magAtk += u.round(c[ue.changeMagAtk])), c[ue.changePhyDef] && (p.phyDef += u.round(c[ue.changePhyDef])), 
                        c[ue.changeMagDef] && (p.magDef += u.round(c[ue.changeMagDef])), c[ue.changeSkillCD] && (p.skillCD = u.decimalRound(p.skillCD + c[ue.changeSkillCD])), 
                        c[ue.changeSpeed] && (p.moveBaseSpeed += u.decimalRound(c[ue.changeSpeed])), c[ue.changeSpeedScale] && (p.moveSpeedScale = u.decimalRound(p.moveSpeedScale + c[ue.changeSpeedScale])), 
                        c[ue.changeAtkSpeed] && (p.atkSpeed = u.decimalRound(p.atkSpeed + c[ue.changeAtkSpeed])), 
                        c[ue.changePenetrateDefPhy] && (p.penetratePhyDef = u.decimalRound(p.penetratePhyDef + c[ue.changePenetrateDefPhy])), 
                        c[ue.changePenetrateDefMag] && (p.penetrateMagDef = u.decimalRound(p.penetrateMagDef + c[ue.changePenetrateDefMag])), 
                        c[ue.changePhyRecoverHp] && (p.phyAtkRecoverHP = u.decimalRound(p.phyAtkRecoverHP + c[ue.changePhyRecoverHp])), 
                        c[ue.changeMagRecoverHp] && (p.magAtkRecoverHP = u.decimalRound(p.magAtkRecoverHP + c[ue.changeMagRecoverHp])), 
                        c[ue.changeSuperAtk] && (p.superAtk = u.decimalRound(p.superAtk + c[ue.changeSuperAtk])), 
                        c[ue.changesuperAtkEffect] && (p.superAtkRatio = u.decimalRound(p.superAtkRatio + c[ue.changesuperAtkEffect]));
                    }
                }
                var d = [ 202, 201, 200 ];
                for (let e = 0; e < 6; e++) {
                    var p, m;
                    switch ((p = new su()).init(Re.Instance.instanceID, d[e % 3], e < 3 ? 1 : 2), e) {
                      case 0:
                        m = Y.Instance.pointDic.point_ab1;
                        break;

                      case 1:
                        m = Y.Instance.pointDic.point_ab2;
                        break;

                      case 2:
                        m = Y.Instance.pointDic.point_ab3;
                        break;

                      case 3:
                        m = Y.Instance.pointDic.point_bb1;
                        break;

                      case 4:
                        m = Y.Instance.pointDic.point_bb2;
                        break;

                      case 5:
                        m = Y.Instance.pointDic.point_bb3;
                    }
                    p.setPos(m), 0 != e && 3 != e || (p.isHomeBuild = !0), Re.Instance.addPlayer(p);
                }
                null != Re.Instance.selfPlayer && (Ge.Instance.init(Re.Instance.selfPlayer.teamID), 
                Y.Instance.setCameraEulerByTeam(Re.Instance.selfPlayer.teamID), Y.Instance.lookAt(Re.Instance.selfPlayer.showPos)), 
                Laya.timer.loop(200, this, this.CheckResLoad);
            }));
        }
        updateHeroAttr(e, t) {
            var i = [];
            for (let n = 0; n <= t; n++) {
                var s = ye.Instance.getMingWen(e, n);
                null != s && this.addAllAttr(i, s.data);
            }
            return i;
        }
        addAllAttr(e, t) {
            for (var i = 0; i < t.length; i++) {
                var s = t[i];
                e[s.key] || (e[s.key] = 0), e[s.key] = e[s.key] + s.value;
            }
        }
        CheckResLoad() {
            if (null != Re.Instance.selfPlayer) {
                for (var e = 0; e < Re.Instance.dicPlayerInstance.length; e++) {
                    var t = Re.Instance.dicPlayerInstance[e], i = Re.Instance.dicPlayer[t];
                    if (null == i.bloodBar && i.initBloodBar(i.isSelf, Re.Instance.selfPlayer.teamID), 
                    !i.modelLoadComplete) return;
                }
                Me.Instance.checkEffectLoadComplete() < 1 || (this.isLoadResIng = !1, Laya.timer.clear(this, this.CheckResLoad), 
                nu.Instance.isReConnect ? (this.startFight(nu.Instance.reConnectSeed), nu.Instance.reConnetFrame(), 
                w.Instance.GetNetMsgData("c2s_ready_battle").Send({})) : w.Instance.GetNetMsgData("c2s_ready_battle").Send({}));
            }
        }
        startFight(e) {
            (s.isPCPlatform && s.isTestVersion || s.is4399H5Platform) && cu.Instance.init(), 
            bl.Instance.init(), Fe.Instance.init(), Pe.Instance.init(), Bl.Instance.init(), 
            au.Instance.initShop(), Hl.Instance.initFrame(e), this.initFight(), nu.Instance.isReConnect || this.openFightUI(), 
            Laya.timer.clear(this, this.fightHeart), Laya.timer.loop(5e3, this, this.fightHeart);
        }
        initFight() {
            this.timeAddSpace = this.fightData.timeAddSpace, this.randomBuffSpace = 0, this.createSpace = this.fightData.roundSpaceTime, 
            this.curCrateSpaceTime = this.fightData.fisrtCreateTime, this.roundUnitData = [], 
            f.Instance.frameTimer.frameLoop(this.fightCheckSpaceFrame, this, this.updateFight), 
            this.randomBuffList = El.Instance.getRandomBuff(this.shModelLv), this.randomBuffList && (this.randomBuffIndex = Math.floor(10 * u.random()) % this.randomBuffList.length);
            var e = El.Instance.getInitBuff(this.shModelLv);
            if (e) for (let i = 0; i < e.length; i++) {
                const s = e[i];
                for (let e = 0; e < Re.Instance.dicHeroPlayerInstance.length; e++) {
                    const i = Re.Instance.dicHeroPlayerInstance[e];
                    if ((t = Re.Instance.dicHeroPlayer[i]) && t.unitType == me.HERO && (this.truePlayerNum > 1 ? 0 : 10) + t.teamID == s.team) for (let e = 0; e < s.buffs.length; e++) bl.Instance.AddBuff(t, t, s.buffs[e]);
                }
                for (let e = 0; e < Re.Instance.dicPlayerInstance.length; e++) {
                    const i = Re.Instance.dicPlayerInstance[e];
                    var t;
                    if ((t = Re.Instance.dicPlayer[i]) && t.unitType == me.BUILD && (this.truePlayerNum > 1 ? 0 : 10) + t.teamID == s.team - 2) for (let e = 0; e < s.buffs.length; e++) bl.Instance.AddBuff(t, t, s.buffs[e]);
                }
                d.Instance.Send(a.UIFightMainModel_UpdateRandomBuffInit);
            }
        }
        ReConnectComplete() {
            for (let e = 0; e < Re.Instance.dicPlayerInstance.length; e++) {
                const t = Re.Instance.dicPlayer[Re.Instance.dicPlayerInstance[e]];
                t && (t.curSprite3D && (t.curSprite3D.transform.rotationEuler = t.rotationEuler), 
                t.showPos.x = t.logicPos.x / 100, t.showPos.z = t.logicPos.y / 100, t.setShowPos(t.showPos), 
                t.bloodBar && t.bloodBar.pos3D.setValue(t.showPos.x, t.showPos.y + t.modelData.modelHeight, t.showPos.z), 
                t.isSelf && Y.Instance.lookAt(t.showPos, !0));
            }
        }
        updateFight() {
            if (this.timeAddSpace > 0) this.timeAddSpace -= this.fightCheckSpaceFrame * f.renderTimeRatio; else {
                this.timeAddSpace = this.fightData.timeAddSpace;
                for (let t = 0; t < Re.Instance.dicHeroPlayerInstance.length; t++) {
                    const i = Re.Instance.dicHeroPlayerInstance[t];
                    (e = Re.Instance.dicHeroPlayer[i]) && (e.addCoin(this.fightData.timeAddCoin, null, !1), 
                    e.addExp(this.fightData.timeAddExp, !1));
                }
            }
            if (Y.curMapID == Y.mapID_sh) for (const e in this.dicXPUse) {
                const t = this.dicXPUse[e];
                for (let i = 0; i < t.length; i++) {
                    const s = t[i];
                    s.cd > 0 && (s.cd -= this.fightCheckSpaceFrame * f.renderTimeRatio, s.cd < 0 && (s.cd = 0, 
                    e == Re.Instance.selfPlayer.instanceID + "" && d.Instance.Send(a.UIFightMainModel_UpdateXPSkillReday, s.skillId)));
                }
            }
            if (this.fightData.randomBuffSpace > 0) if (this.randomBuffSpace > 0) this.randomBuffSpace -= this.fightCheckSpaceFrame * f.renderTimeRatio, 
            d.Instance.Send(a.UIFightMainModel_UpdateRandomBuffTime, this.randomBuffSpace); else {
                this.randomBuffSpace = this.fightData.randomBuffSpace, this.randomBuffIndex = this.randomBuffIndex + (u.random() > .5 ? 1 : -1), 
                this.randomBuffIndex < 0 && (this.randomBuffIndex = this.randomBuffList.length - 1), 
                this.randomBuffIndex >= this.randomBuffList.length && (this.randomBuffIndex = 0), 
                this.curRandomBuffId = this.randomBuffList[this.randomBuffIndex];
                for (let t = 0; t < Re.Instance.dicHeroPlayerInstance.length; t++) {
                    const i = Re.Instance.dicHeroPlayerInstance[t];
                    var e = Re.Instance.dicHeroPlayer[i];
                    this.curRandomBuffId > 0 && e && 1 == e.teamID && (bl.Instance.AddBuff(e, e, this.curRandomBuffId), 
                    d.Instance.Send(a.UIFightMainModel_UpdateRandomBuff, this.curRandomBuffId));
                }
            }
            if (this.curCrateSpaceTime > 0) this.curCrateSpaceTime -= this.fightCheckSpaceFrame * f.renderTimeRatio; else {
                var t;
                this.curCrateSpaceTime = this.createSpace;
                for (let e = 0; e < this.fightData.roundData.length; e++) {
                    const i = this.fightData.roundData[e];
                    if (f.Instance.currentFrameTime < i.time) {
                        s.isSyncDebug && console.log(f.Instance.currentFrame + " currentFrameTime " + f.Instance.currentFrameTime + " time " + i.time);
                        break;
                    }
                    t = i;
                }
                if (null != t && (t.fixRoundSpaceTime && t.fixRoundSpaceTime > 0 && (this.curCrateSpaceTime = t.fixRoundSpaceTime), 
                null != t.roundUnitData)) for (let e = 0; e < t.roundUnitData.length; e++) {
                    const s = t.roundUnitData[e];
                    var i = new Ol();
                    i.createTime = s.createTime, i.createNum = s.createNum, i.unitId = s.unitId, i.unitLv = s.unitLv, 
                    this.roundUnitData.push(i);
                }
            }
            this.CreateUnit();
        }
        CreateUnit() {
            if (null != this.roundUnitData) for (let i = 0; i < this.roundUnitData.length; i++) {
                const s = this.roundUnitData[i];
                if (s.createTime -= this.fightCheckSpaceFrame * f.renderTimeRatio, s.createTime <= 0 && s.createNum > 0) {
                    for (let i = 0; i < 2; i++) for (let n = 0; n < s.createNum; n++) {
                        var e = 0 == i ? 1 : 2, t = 1 == e ? Y.Instance.pointDic.point_ac : Y.Instance.pointDic.point_bc;
                        this.createOnceUnit(e, t, s.unitId, s.unitLv);
                    }
                    s.createNum = 0;
                }
            }
        }
        createOnceUnit(e, t, i, n) {
            var a, o = "", l = Q.Instance.getUnitAttribute(i);
            (null != l && (o = 1e6 * e + l.modelID + ""), null == (a = Me.Instance.getUnit(o))) ? ((a = new su()).init(Re.Instance.instanceID, i, e), 
            a.setPos(t), a.initBloodBar(!1, Re.Instance.selfPlayer.teamID), a.addLvAttribute(n), 
            s.isSyncDebug && console.log(f.Instance.currentFrame + " id new Unit " + a.instanceID + " unitlv " + n + " cachePoolKey " + a.cachePoolKey + " pos x " + t.x + " y " + t.y)) : (a.initAttribute(), 
            a.setPos(t), a.addLvAttribute(n), Bl.Instance.addAI(a.aiControl), Pe.Instance.removeUIEffect(a.instanceID), 
            a.instanceID = Re.Instance.instanceID, Pe.Instance.addUIEffect(a.instanceID, a.bloodBar), 
            s.isSyncDebug && console.log(f.Instance.currentFrame + " id get Unit " + a.instanceID + " unitlv " + n + " cachePoolKey " + a.cachePoolKey + " pos x " + t.x + " y " + t.y));
            Re.Instance.addPlayer(a);
            var h = El.Instance.getInitBuff(this.shModelLv);
            if (h) for (let e = 0; e < h.length; e++) {
                const t = h[e];
                if (a && a.unitType == me.UNIT && (this.truePlayerNum > 1 ? 0 : 10) + a.teamID == t.team - 4) for (let e = 0; e < t.buffs.length; e++) bl.Instance.AddBuff(a, a, t.buffs[e]);
            }
        }
        deadDropMath(e, t, i) {
            if (this.fightOwnerUnit) {
                var s;
                this.fightOwnerUnit.showPos.y = i;
                var n = this.fightOwnerUnit.getSKillIndex(e);
                (s = -1 == n ? this.fightOwnerUnit.addSkill(e, !1) : this.fightOwnerUnit.getSKill(n)) && (s.curCD = 0), 
                this.fightOwnerUnit.playSkill(s.ownerSkillIndex, 0, t);
            }
        }
        fightHeart() {
            f.isLocalServer || w.Instance.GetNetMsgData("c2s_battle_timer").Send({});
        }
        openFightUI() {
            d.Instance.Send(a.UILoad_Close), d.Instance.Send(a.UIFightMainModel_Open);
        }
        compare(e) {
            return function(t, i) {
                var s = t[e], n = i[e];
                return n == s ? i.maxCoin - t.maxCoin : n - s;
            };
        }
        gameEnd(e) {
            Hl.Instance.closeSync(), Pe.Instance.initTimePos(), this.isFighting = !1, s.isPCPlatform && s.isTestVersion && cu.Instance.clear(), 
            d.Instance.Send(a.UIFightMainModel_Close), ie.Instance.closeAllUI(), this.selfWin = e == Re.Instance.selfPlayer.teamID;
            var t = "";
            1 == Re.Instance.selfPlayer.teamID ? t = this.selfWin ? "point_bb1" : "point_ab1" : 2 == Re.Instance.selfPlayer.teamID && (t = this.selfWin ? "point_ab1" : "point_bb1"), 
            Y.Instance.cameraMovePos(Y.Instance.pointDic[t]), Laya.timer.once(1e3, this, () => {
                d.Instance.Send(a.UIFightEndWinOrFail_Open, this.selfWin);
            }), Laya.timer.once(2500, this, () => {
                var t = [], i = 0, s = 0, n = 0, a = 0, o = 0, l = 0;
                let h = [], r = [];
                for (let e = 0; e < Re.Instance.dicHeroPlayerInstance.length; e++) {
                    const t = Re.Instance.dicHeroPlayerInstance[e];
                    var c = Re.Instance.dicHeroPlayer[t];
                    let i = Math.min(3 + (c.killNum + c.helpKillNum) / (0 == c.deadNum ? 1 : c.deadNum), 16);
                    c.score = i, 1 == c.teamID ? h.push(c) : r.push(c), c.isMVP = 0;
                }
                let d = h.sort(this.compare("score"))[0];
                d && (d.isMVP = d.teamID == e ? 1 : 2);
                let u = r.sort(this.compare("score"))[0];
                u && (u.isMVP = u.teamID == e ? 1 : 2);
                for (var p = 0; p < Re.Instance.dicPlayerInstance.length; p++) {
                    var m = Re.Instance.dicPlayerInstance[p];
                    if ((c = Re.Instance.dicPlayer[m]).unitType == me.HERO) if (1 == c.teamID) {
                        o += c.diamond;
                        var g = 2 * c.killNum + 1 * c.helpKillNum + -2 * c.deadNum;
                        (g > n || g == n && c.diamond > a) && (c, n = g, a = c.diamond);
                    } else if (2 == c.teamID) {
                        l += c.diamond;
                        var I = 2 * c.killNum + 1 * c.helpKillNum + -2 * c.deadNum;
                        (I > i || I == i && c.diamond > s) && (c, i = I, s = c.diamond);
                    }
                }
                for (p = 0; p < Re.Instance.dicPlayerInstance.length; p++) {
                    m = Re.Instance.dicPlayerInstance[p];
                    if ((c = Re.Instance.dicPlayer[m]).unitType == me.HERO) {
                        for (var v = [], _ = 0; _ < c.equipList.length; _++) {
                            var y = c.equipList[_];
                            v.push({
                                id: y.id
                            });
                        }
                        var S = {
                            id: c.instanceID,
                            winfail: c.teamID == e ? 1 : 0,
                            roleid: c.modelID,
                            roleLv: c.lv,
                            gold: c.maxCoin,
                            diamond: c.diamond,
                            bediamond: c.bediamond,
                            killnum: c.killNum,
                            assistnum: c.helpKillNum,
                            deadnum: c.deadNum,
                            conkillnum: c.conkillnum,
                            isMVP: c.isMVP,
                            achieve: gu.Instance.getKvList(c, o, l),
                            equip: v,
                            mapid: Y.curMapID
                        };
                        Y.curMapID == Y.mapID_sh && (S.bediamond = 1 + Math.floor(f.Instance.currentFrameTime / 1e3)), 
                        t.push(S);
                    }
                }
                this.battleResultMsg({
                    result: t,
                    moster: []
                }), this.switchEndScene();
            });
        }
        battleResultMsg(e) {
            e && (this.cacheBattleResultSendData = e, f.isLocalServer ? (mu.Instance.End(), 
            f.isLocalServer = !1, w.Instance.GetNetMsgData("c2s_offline_result").Send({
                mapid: Y.curMapID,
                win_fail: this.selfWin ? 1 : 0,
                xxlv: Y.curMapID == Y.mapID_sh ? this.shModelLv : 0,
                result: e.result
            })) : w.Instance.GetNetMsgData("c2s_battle_result").Send(this.cacheBattleResultSendData));
        }
        switchEndScene() {
            Laya.Scene.closeAll(), Laya.Scene.open("scenes/s_DungeonEnd.scene", !0, null, Laya.Handler.create(this, e => {
                s.curScene = e, s.curScene.x += s.fixStageX, s.curGameScene = i.EndScene, e.autoDestroyAtClosed = !0, 
                w.Instance.GetNetMsgData("c2s_set_chat_state").Send({
                    type: 0
                }), console.log("不接收世界聊天"), s.fixStageY > 0 && (e.y = s.fixStageY), s.isVivoPlatform ? d.Instance.Send(a.UIFightEndWinOrFail_ShowNext) : d.Instance.Send(a.UIFightEndWinOrFail_Close), 
                this.clearGame(!0);
            }));
        }
        exitGame() {
            Hl.Instance.closeSync(), Pe.Instance.initTimePos(), this.isFighting = !1, this.clearGame(!1), 
            d.Instance.Send(a.UIFightMainModel_Close), ie.Instance.closeAllUI(), Laya.Scene.open("scenes/s_Common.scene", !0, null, Laya.Handler.create(this, e => {
                s.curScene = e, s.curScene.x += s.fixStageX, s.curGameScene = i.HomeScene, e.autoDestroyAtClosed = !0, 
                w.Instance.GetNetMsgData("c2s_set_chat_state").Send({
                    type: 1
                }), console.log("接收世界聊天"), s.fixStageY > 0 && (e.y = s.fixStageY), d.Instance.Send(a.UIGameMain_Open);
            }));
        }
        clearGame(e) {
            for ((s.isOppoPlatform || s.isWXPlatform) && du.Instance.exitVoIPChat(), this.isLoadResIng && (Laya.timer.clear(this, this.CheckResLoad), 
            this.isLoadResIng = !1), f.Instance.frameTimer && f.Instance.frameTimer.clear(this, this.updateFight), 
            Laya.timer.clear(this, this.fightHeart), Bl.Instance.clear(), Pe.Instance.clear(), 
            bl.Instance.clear(), Fe.Instance.clear(), this.fightOwnerUnit = null; Re.Instance.dicPlayerInstance.length > 0; ) {
                var t = Re.Instance.dicPlayerInstance.shift(), i = Re.Instance.dicPlayer[t];
                i && i.destroy(), delete Re.Instance.dicPlayer[t];
            }
            Re.Instance.dicTempID = {}, Y.Instance.clear(), Me.Instance.clearPool(), Laya.Resource.destroyUnusedResources(), 
            e && (Y.curMapID == Y.mapID_sh ? d.Instance.Send(a.UIFightEndSHShow_DelayOpen, this.selfWin) : d.Instance.Send(a.UIFightEndRankShow_DelayOpen, this.selfWin));
        }
    }
    fu.instance = null;
    class Iu extends n.ui_dialog.d_DebugInfoUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.list_attr.vScrollBarSkin = "";
        }
        closeView() {
            d.Instance.Send(a.UIDebugInfo_Close);
        }
        updateFightInfo(e) {
            var t, i = [], s = {
                label_name: {
                    text: ">>>>>> 随机buffID "
                },
                label_v: {
                    text: " " + fu.Instance.curRandomBuffId
                }
            };
            i.push(s);
            s = {
                label_name: {
                    text: ">>>>>> 服务器帧数"
                },
                label_v: {
                    text: " " + f.Instance.serverFrame
                }
            };
            i.push(s);
            s = {
                label_name: {
                    text: ">>>>>> 暂停帧"
                },
                label_v: {
                    text: " " + f.Instance.pauseFrame
                }
            };
            i.push(s);
            s = {
                label_name: {
                    text: ">>>>>> 当前渲染帧数"
                },
                label_v: {
                    text: " " + f.Instance.currentFrame + " / " + f.Instance.totalFrame
                }
            };
            if (i.push(s), null != e) for (let t = 0; t < e.length; t++) i.push(e[t]);
            for (let e = 0; e < Re.Instance.dicPlayerInstance.length; e++) {
                const l = Re.Instance.dicPlayerInstance[e];
                var n = Re.Instance.dicPlayer[l];
                if (n.isSelf && t ? n = t : 0 == e && (t = n, n = Re.Instance.selfPlayer), null != n) {
                    s = {
                        label_name: {
                            text: ">>>>>>" + n.modelData.heroName + "<<<<<<"
                        },
                        label_v: {
                            text: "队伍ID " + n.teamID + " 实例ID " + n.instanceID + " 等级 " + n.lv + " 金币 " + n.coin + " 经验 " + n.curExp + " 技能点 " + n.skillPoint
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "是否死亡 "
                        },
                        label_v: {
                            text: " " + n.isDead
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "逻辑坐标 "
                        },
                        label_v: {
                            text: "x: " + n.logicPos.x + " y: " + n.logicPos.y
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "显示坐标 "
                        },
                        label_v: {
                            text: "x: " + n.showPos.x + " y: " + n.showPos.y + " z: " + n.showPos.z
                        }
                    };
                    if (i.push(s), n.aiControl) {
                        s = {
                            label_name: {
                                text: "AI等级 "
                            },
                            label_v: {
                                text: "lv: " + n.aiControl.aIFightData.lv + " 金币获取率 " + n.aiControl.aIFightData.aiCoinRatio + " 经验获取率 " + n.aiControl.aIFightData.aiExpRatio + " 技能使用几率 " + n.aiControl.aIFightData.aiUseSKRatio
                            }
                        };
                        i.push(s);
                    }
                    for (let e = 0; e < n.skillData.length; e++) {
                        const t = n.skillData[e];
                        s = {
                            label_name: {
                                text: "技能： " + t.skillName
                            },
                            label_v: {
                                text: "等级: " + t.lv
                            }
                        };
                        i.push(s);
                    }
                    for (let e = 0; e < n.equipList.length; e++) {
                        const t = n.equipList[e];
                        var a = "";
                        for (let e = 0; e < t.buffID.length; e++) a += t.buffID[e] + " ";
                        s = {
                            label_name: {
                                text: "装备： " + t.name
                            },
                            label_v: {
                                text: "buffID： " + a
                            }
                        };
                        i.push(s);
                    }
                    var o = bl.Instance.getAllBuff(n.instanceID);
                    a = "";
                    if (o) for (let e = 0; e < o.length; e++) a += o[e].id + " ";
                    s = {
                        label_name: {
                            text: "全buff "
                        },
                        label_v: {
                            text: "buffID： " + a
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "每秒移动距离 "
                        },
                        label_v: {
                            text: " " + n.moveBaseSpeed
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "移动速度缩放 "
                        },
                        label_v: {
                            text: " " + n.moveSpeedScale
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "普通攻击速度 "
                        },
                        label_v: {
                            text: " " + n.atkSpeed + " 实际攻速 " + n.getAtkSpeed()
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "技能冷却速度 "
                        },
                        label_v: {
                            text: " " + n.skillCD
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "生命值 "
                        },
                        label_v: {
                            text: " " + n.hp
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "实际最大生命值 "
                        },
                        label_v: {
                            text: " " + n.hpMax
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "基础最大生命值 "
                        },
                        label_v: {
                            text: " " + n.baseHpMax
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "最大生命值缩放 "
                        },
                        label_v: {
                            text: " " + n.hpScale
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "总的临时生命值 "
                        },
                        label_v: {
                            text: " " + n.tempHP
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "物理攻击 "
                        },
                        label_v: {
                            text: " " + n.phyAtk
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "物理防御 "
                        },
                        label_v: {
                            text: " " + n.phyDef
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "法术攻击 "
                        },
                        label_v: {
                            text: " " + n.magAtk
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "法术防御"
                        },
                        label_v: {
                            text: " " + n.magDef
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "穿透物理防御"
                        },
                        label_v: {
                            text: " " + n.penetratePhyDef
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "穿透法术防御"
                        },
                        label_v: {
                            text: " " + n.penetrateMagDef
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "忽略物理防御"
                        },
                        label_v: {
                            text: " " + n.ignorePhyDef
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "忽略法术防御"
                        },
                        label_v: {
                            text: " " + n.ignoreMagDef
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "暴击几率"
                        },
                        label_v: {
                            text: " " + n.superAtk
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "暴击效果"
                        },
                        label_v: {
                            text: " " + n.superAtkRatio
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "物理攻击吸血"
                        },
                        label_v: {
                            text: " " + n.phyAtkRecoverHP
                        }
                    };
                    i.push(s);
                    s = {
                        label_name: {
                            text: "法术攻击吸血"
                        },
                        label_v: {
                            text: " " + n.magAtkRecoverHP
                        }
                    };
                    i.push(s), i.push(s);
                    s = {
                        label_name: {
                            text: ">>>>>"
                        },
                        label_v: {
                            text: " "
                        }
                    };
                    i.push(s);
                }
            }
            this.list_attr.array = i;
        }
    }
    class vu {
        constructor() {
            this.isLoadComplete = !1;
        }
        static get Instance() {
            return null == this.instance && (vu.instance = new vu()), vu.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/item.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.configData = e) : console.log("config/item.json load fail!"), 
            this.callBack && this.callBack();
        }
        GetItemData(e) {
            if (null != this.configData) for (let t = 0; t < this.configData.length; t++) if (this.configData[t].id == e) return this.configData[t];
            return {
                id: 1,
                type: 1,
                name: "未知",
                icon: "",
                desc: "",
                heroID: 0,
                bg: [ {
                    v: 0,
                    bg: "common/jiangli_bg_001.png"
                } ]
            };
        }
    }
    vu.instance = null;
    class _u extends n.ui_dialog.d_DungeonRewardUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickCloseView), 
            this.list_reward.hScrollBarSkin = "", this.list_reward.renderHandler = new Laya.Handler(this, this.onListAttrRender);
        }
        init(e) {
            var t = [], i = -1;
            if (e && e.info) for (let h = 0; h < e.info.length; h++) {
                const r = e.info[h];
                var s = null, n = 0;
                r.rn && r.rn.length > 0 && (s = vu.Instance.GetItemData(r.rn[0].id), n = r.rn[0].num);
                var a = null, o = 0;
                r.rad && r.rad.length > 0 && (a = vu.Instance.GetItemData(r.rad[0].id), o = r.rad[0].num), 
                -1 == i && (n > 0 && 2 == r.rns || o > 0 && 2 == r.rads) && (i = h);
                var l = {
                    lv: r.lv,
                    img_icon1: {
                        skin: s ? s.icon : ""
                    },
                    img_icon2: {
                        skin: a ? a.icon : ""
                    },
                    label_lv: {
                        text: "第" + r.lv + "关"
                    },
                    label_num1: {
                        text: n > 0 ? n : ""
                    },
                    label_num2: {
                        text: o > 0 ? o : ""
                    },
                    img_get1: {
                        visible: n > 0 && 2 == r.rns
                    },
                    img_get2: {
                        visible: o > 0 && 2 == r.rads
                    },
                    img_getflag1: {
                        visible: n > 0 && 1 == r.rns
                    },
                    img_getflag2: {
                        visible: o > 0 && 1 == r.rads
                    },
                    img_black: {
                        visible: Z.Instance.shModelCurLv < r.lv
                    }
                };
                t.push(l);
            }
            this.list_reward.array = t, this.list_reward.scrollTo(i);
        }
        onClickCloseView() {
            d.Instance.Send(a.UIDungeonReward_Close);
        }
        onListAttrRender(e, t) {
            var i;
            (i = e.getChildByName("img_get1")).off("click", this, this.onClickUse1), i.on("click", this, this.onClickUse1, [ e, t ]), 
            (i = e.getChildByName("img_get2")).off("click", this, this.onClickUse2), i.on("click", this, this.onClickUse2, [ e, t ]);
        }
        onClickUse1(e, t) {
            w.Instance.GetNetMsgData("c2s_xx_reward_get").Send({
                lv: e.dataSource.lv,
                type: 1
            }), w.Instance.GetNetMsgData("c2s_xx_reward_info").Send({});
        }
        onClickUse2(e, t) {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_xx_reward_get").Send({
                lv: e.dataSource.lv,
                type: 2
            }), w.Instance.GetNetMsgData("c2s_xx_reward_info").Send({})) : le.Instance.ShowVideoAD(t => {
                1 == t && (w.Instance.GetNetMsgData("c2s_xx_reward_get").Send({
                    lv: e.dataSource.lv,
                    type: 2
                }), w.Instance.GetNetMsgData("c2s_xx_reward_info").Send({}));
            }, 28);
        }
    }
    class yu {
        constructor() {
            this.isLoadComplete = !1, this.dicEvent = {}, this.subEventList = [];
        }
        static get Instance() {
            return null == this.instance && (yu.instance = new yu()), yu.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/event.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            if (null != e) {
                this.isLoadComplete = !0;
                for (let t = 0; t < e.length; t++) {
                    const i = e[t];
                    if (this.dicEvent[i.id] = i, null != i.mergeId) for (let e = 0; e < i.mergeId.length; e++) this.dicEvent[i.mergeId[e]] = i, 
                    this.subEventList.push(i.mergeId[e]);
                }
            } else console.log("config/event.json load fail!");
            this.callBack && this.callBack();
        }
        getEventData(e) {
            return this.dicEvent ? this.dicEvent[e] : null;
        }
        isSubEventLis(e) {
            return -1 != this.subEventList.indexOf(e);
        }
        getEventCondtion(e, t) {
            if (this.dicEvent) {
                var i = this.dicEvent[e];
                if (i && i.condition) for (let e = 0; e < i.condition.length; e++) {
                    const s = i.condition[e];
                    if (s.id == t) return s;
                }
            }
            return null;
        }
    }
    yu.instance = null;
    class Su {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventALS.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 5001, this.isEventEnd = !0, this.firstClose = !0, 
            this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventALS_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventALS_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventALS_Data, e => {
                this.setData(e[0], e[1]);
            }), d.Instance.Reg(a.UIEventForceAD, e => {
                this.forceShowNative(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (Su.instance = new Su()), Su.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, 
            this.uiControl.y = s.fixStageY), s.isVivoPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1069, 144, 88, 88, 1), 
            s.is4399Platform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1169, 157, 163 + s.fixStageX, 163, 2), 
            s.canShowNative && s.isOppoGameCenterPlatform && !this.isHome && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 1062, 150, 88, 88, 1), 
            s.isOppoGameCenterPlatform && (s.isForceInter = !0)), s.isTapTapPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 0, 595, 382, 155, 2), 
            s.isDYVivoPlatform && (this.isHome || (le.Instance.showFloatIcon(1169, 157), le.Instance.ShowDYVIVOBannerAD(739 + s.fixStageX, 647, 596 + s.fixStageX, 105))), 
            s.isWcfjlPlatform && !this.isHome && le.Instance.ShowBannerCSJ(1), s.isOppoPlatform && this.forceJumpAd && (this.uiControl.btn_close.x = 1036, 
            this.uiControl.btn_close.visible = !1, Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && (this.uiControl.btn_close.visible = !0), s.isOnline && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1069, 144, 88, 88, 1), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.btn_close.x = 970);
            })), this.isShowInter = !1);
        }
        forceShowNative(e) {
            s.isOppoPlatform && "ALS" == e && (this.forceJumpAd = !0);
        }
        Close() {
            s.isOppoPlatform && s.isOnline && this.forceJumpAd && le.Instance.getAderrorrate() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && le.Instance.onClickOppoNative(), 
            s.isOppoGameCenterPlatform && !this.isHome && s.canShowNative && .6 <= Math.random() && le.Instance.getRandInter() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (le.Instance.setRandInter(), 
            le.Instance.onClickOppoNative()), le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Su.instance = null;
    class wu extends n.ui_dialog.d_EventALSUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            this.img_buyheropf.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]), 
            this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 2 ]);
        }
        closeView() {
            Su.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventALS_Close);
        }
        onClickBuyHero(e) {
            w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Su.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Su.Instance.eventID
            });
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Su.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Su.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Su.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Su.Instance.eventID
                }));
            }, 25);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform || s.isH5Platform;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(5001);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "剩余可开启次数：" + (e.maxcount - e.count);
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? 0 == t ? (this.img_buyheropf.visible = !1, this.label_desc.visible = !1, 
                    this.label_getflagHero.visible = !0) : (this.img_buyhero.visible = !1, this.label_desc2.visible = !1, 
                    this.label_getflagHero2.visible = !0) : 0 == t ? (this.img_buyheropf.visible = Z.Instance.bbt1 >= i.need[0].num, 
                    this.label_desc.visible = !0, this.label_desc.text = Z.Instance.bbt1 + "/" + i.need[0].num, 
                    this.label_getflagHero.visible = !1) : (this.img_buyhero.visible = Z.Instance.bbt2 >= i.need[0].num, 
                    this.label_desc2.visible = !0, this.label_desc2.text = Z.Instance.bbt2 + "/" + i.need[0].num, 
                    this.label_getflagHero2.visible = !1), this.img_video.disabled = e.count >= e.maxcount || this.label_getflagHero.visible && this.label_getflagHero2.visible;
                }
            }
        }
    }
    class Du {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventATM.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 1007, this.isEventEnd = !0, this.firstClose = !0, 
            this.isShowInter = !1, this.forceJumpAd = !1, d.Instance.Reg(a.UIEventATM_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventATM_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventATM_Data, e => {
                this.setData(e[0], e[1]);
            }), d.Instance.Reg(a.UIEventForceAD, e => {
                this.forceShowNative(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (Du.instance = new Du()), Du.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_wheel").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            if (this.waitClose) this.waitClose = !1; else {
                if (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), this.uiControl.updateEvent(this.cacheData), 
                this.isHome ? (this.uiControl.x = 0, this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, 
                this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, this.uiControl.popup(), 
                this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, this.uiControl.y = s.fixStageY), 
                s.isXiaoMiPlatform || s.isHuaweiPlatform) {
                    let e = !0;
                    s.isXiaoMiPlatform && this.isHome && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                    e = !1), le.Instance.showNativeInterstitialad(e);
                }
                console.log("ttad atm" + this.isShowInter), s.isOppoGameCenterPlatform && s.canShowNative && this.isShowInter && d.Instance.Send(a.UINativeInterstitial_Open, 400, !0), 
                s.isDYVivoPlatform && (this.isHome || (le.Instance.showFloatIcon(1190, 139), le.Instance.ShowDYVIVOBannerAD(739 + s.fixStageX, 647, 596 + s.fixStageX, 105))), 
                s.isVivoPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1035, 124, 88, 88, 1), 
                s.isOppoGameCenterPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1025, 132, 88, 88, 1), 
                s.is4399Platform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1190, 139, 144 + s.fixStageX, 163, 2), 
                s.isTapTapPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 0, 595, 472, 155, 2), 
                s.isOppoPlatform && this.forceJumpAd && (this.uiControl.btn_close.x = 1036, this.uiControl.btn_close.visible = !1, 
                Laya.timer.once(s.oppoNativeDelay, this, () => {
                    this.isOpen && this.uiControl && (this.uiControl.btn_close.visible = !0), s.isOnline && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1035, 132, 88, 88, 1), 
                    le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.btn_close.x = 970);
                })), s.isWcfjlPlatform && !this.isHome && le.Instance.ShowBannerCSJ(2), this.isShowInter = !1;
            }
        }
        forceShowNative(e) {
            s.isOppoPlatform && "ATM" == e && (this.forceJumpAd = !0);
        }
        Close() {
            s.isOppoPlatform && s.isOnline && this.forceJumpAd && le.Instance.getAderrorrate() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && le.Instance.onClickOppoNative(), 
            s.isOppoGameCenterPlatform && !this.isHome && s.canShowNative && .6 <= Math.random() && le.Instance.getRandInter() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (le.Instance.setRandInter(), 
            le.Instance.onClickOppoNative()), le.Instance.HideBannerAD(), this.forceJumpAd = !1, 
            w.Instance.GetNetMsgData("c2s_red_point").Send({}), this.isHome && (this.isHome = !1), 
            this.isLoad && null == this.uiControl ? this.waitClose = !0 : (this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close()), this.isShowInter = !1);
        }
        setData(e, t) {
            e && this.setDataHero(e), t && (this.uiControl && this.uiControl.updateWheel(t), 
            w.Instance.GetNetMsgData("c2s_active_info_wheel").Send({
                id: this.eventID
            }));
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Du.instance = null;
    class ku extends n.ui_dialog.d_EventATMUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            (s.isTTPlatform || s.isH5Platform) && (this.sp_close.x = 329, this.img_video.x = 644);
        }
        closeView() {
            Du.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventATM_Close);
        }
        onClickWheel() {
            Du.Instance.cacheData && (s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_active_get_wheel").Send({
                id: Du.Instance.eventID
            }) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_active_get_wheel").Send({
                    id: Du.Instance.eventID
                });
            }, 21));
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform || s.isH5Platform;
        }
        updateEvent(e) {
            var t = 0, i = 0;
            if (e && e.info) {
                var s = new Date(), n = new Date(1e3 * e.etime), a = Math.floor((n.getTime() - s.getTime()) / 1e3), o = yu.Instance.getEventData(5002);
                o && o.isShowEndTime && a < 604800 && a > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(a) : this.label_endTime.visible = !1;
                for (let s = 0; s < e.info.length; s++) {
                    const n = e.info[s];
                    if (1 == n.state && t++, n.baodi > 0) 1 == ++i ? this.label_desc2.text = "第" + e.count + "/" + n.baodi + "次抽奖必出！" : this.label_desc.text = "第" + e.count + "/" + n.baodi + "次抽奖必出！"; else if (n.reward[0]) {
                        var l = vu.Instance.GetItemData(n.reward[0].id);
                        this["img_prize" + (s + 1)] && (this["img_prize" + (s + 1)].skin = l.icon), this["label_prize" + (s + 1)] && (this["label_prize" + (s + 1)].text = "x" + n.reward[0].num);
                    }
                }
            }
            this.label_getflagHero.visible = t >= 1, this.label_desc.visible = !this.label_getflagHero.visible, 
            this.label_getflagHero2.visible = t >= 2, this.label_desc2.visible = !this.label_getflagHero2.visible, 
            this.img_video.visible = t < 2;
        }
        updateWheel(e) {
            if (e) {
                var t = 720 + 60 * (e.index - 1);
                Laya.Tween.clearAll(this.sp_wheel), this.sp_wheel.rotation = 0, Laya.Tween.to(this.sp_wheel, {
                    rotation: t
                }, 500, null, null, 0), Laya.timer.once(800, this, () => {
                    Du.Instance.isOpen && Du.Instance.cacheReward && (d.Instance.Send(a.UIShowPrize_Open, Du.Instance.cacheReward), 
                    Du.Instance.cacheReward = null);
                });
            }
        }
    }
    class Cu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventBD.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 5006, this.isEventEnd = !0, this.firstClose = !0, 
            this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventBD_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventBD_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventBD_Data, e => {
                this.setData(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Cu.instance = new Cu()), Cu.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, 
            this.uiControl.y = s.fixStageY));
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Cu.instance = null;
    class bu extends n.ui_dialog.d_EventBDUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            Cu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventBD_Close);
        }
        onClickBuyHero(e) {
            w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Cu.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Cu.Instance.eventID
            });
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Cu.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Cu.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Cu.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Cu.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = !0;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(Cu.Instance.eventID);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "剩余可开启次数：" + (e.maxcount - e.count);
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? (this.img_buyhero.visible = !1, this.label_desc.visible = !1, this.label_getflagHero.visible = !0) : (this.label_desc.visible = !0, 
                    this.label_desc.text = Z.Instance.mwInfo[X.bdsp] + "/" + i.need[0].num, this.label_getflagHero.visible = !1, 
                    this.img_buyhero.visible = !0, this.img_buyhero.disabled = Z.Instance.mwInfo[X.bdsp] < i.need[0].num);
                }
                this.img_video.disabled = e.count >= e.maxcount || !this.img_buyhero.disabled;
            }
        }
    }
    class Pu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventBZSK.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 3002, this.isEventEnd = !1, d.Instance.Reg(a.UIEventBZSK_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIEventBZSK_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventBZSK_Data, e => {
                this.setData(e[0]);
            }), d.Instance.Reg(a.UIEventBZSK_Share, e => {
                this.shareComplete();
            });
        }
        static get Instance() {
            return null == this.instance && (Pu.instance = new Pu()), Pu.instance;
        }
        Open(e, t) {
            null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: t
            });
            var i = yu.Instance.getEventData(t);
            if (null != i && i.mergeId && i.mergeId.length > 0) for (let e = 0; e < i.mergeId.length; e++) w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: i.mergeId[e]
            });
            this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 556, 
            this.uiControl.y = s.fixStageY));
        }
        Close() {
            w.Instance.GetNetMsgData("c2s_red_point").Send({}), this.isHome && (this.isHome = !1), 
            this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e) {
            if (null != e && null != e.info && 0 != e.info.length) {
                this.isEventEnd = !0;
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    0 != i.state && 2 != i.state || (this.isEventEnd = !1);
                }
                this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
            }
        }
        shareComplete() {
            !this.isEventEnd && this.cacheData && (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                id: this.cacheData.id
            }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: this.cacheData.id
            }));
        }
    }
    Pu.instance = null;
    class xu extends n.ui_dialog.d_EventBZSKUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.img_get1.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetHero, [ 0 ]), this.img_get2.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetHero, [ 1 ]), 
            this.img_get3.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetHero, [ 2 ]), this.img_fight.on(Laya.Event.MOUSE_DOWN, this, this.onClickFight), 
            this.sp_share.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo);
        }
        closeView() {
            d.Instance.Send(a.UIEventBZSK_Close);
        }
        onClickGetHero(e) {
            var t = Pu.Instance.cacheData;
            t && t.info && t.info.length > e && (w.Instance.GetNetMsgData("c2s_active_get").Send({
                id: t.id,
                index: t.info[e].index
            }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: t.id
            }));
        }
        onClickFight() {
            Pu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventBZSK_Close), 
            d.Instance.Send(a.UIGameMain_StartGame);
        }
        onClickVideo() {
            var e = Pu.Instance.cacheData;
            e && (s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                id: e.id
            }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: e.id
            })) : le.Instance.wxShareVideo(t => {
                1 == t ? w.Instance.GetNetMsgData("c2s_active_info").Send({
                    id: e.id
                }) : s.curGameScene == i.HomeScene && (this.img_fight.visible = !0);
            }));
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.img_fight.visible = !1, 
            this.sp_share.visible = !0;
        }
        updateEvent(e) {
            if (null != e && null != e.info && 0 != e.info.length) for (let i = 0; i < e.info.length; i++) {
                const s = e.info[i];
                if (this["img_get" + (i + 1)].visible = 2 == s.state, this["label_getflag" + (i + 1)].visible = 1 == s.state, 
                s.reward && s.reward.length > 0) {
                    var t = vu.Instance.GetItemData(s.reward[0].id);
                    this["label_tem" + (i + 1)].text = t.name + (s.reward[0].num > 1 ? " x" + s.reward[0].num : "");
                }
                i == e.info.length - 1 && (this.panel_jd.width = 628 * s.count / s.need);
            }
        }
    }
    class Tu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventCFTT.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventCFTT_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventCFTT_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(14024, e => {
                this.s2c_active_info_cftt(e);
            }), w.Instance.RegisterNet(14026, e => {
                this.s2c_active_get_cftt(e);
            }), w.Instance.RegisterNet(14028, e => {
                this.s2c_active_add_cftt(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Tu.instance = new Tu()), Tu.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = 1004), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            if (this.waitClose) this.waitClose = !1; else {
                if (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), this.uiControl.updateEvent(this.cacheData), 
                this.isHome ? (this.uiControl.x = 0, this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, 
                this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, this.uiControl.popup(), 
                this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, this.uiControl.y = s.fixStageY), 
                s.isXiaoMiPlatform || s.isHuaweiPlatform) {
                    let e = !0;
                    s.isXiaoMiPlatform && this.isHome && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                    e = !1), le.Instance.showNativeInterstitialad(e);
                }
                console.log("ttad cftt" + this.isShowInter), s.isOppoGameCenterPlatform && s.canShowNative && this.isShowInter && d.Instance.Send(a.UINativeInterstitial_Open, 400, !0), 
                s.isVivoPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1055, 129, 88, 88, 1), 
                s.is4399Platform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1149, 148, 188 + s.fixStageX, 163, 2), 
                s.isTapTapPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 217, 645, 900, 105, 2), 
                s.isDYVivoPlatform && !this.isHome && (le.Instance.ShowDYVIVOBannerAD(217, 645, 900, 105), 
                le.Instance.showFloatIcon(1149, 148)), s.isWcfjlPlatform && !this.isHome && le.Instance.ShowBannerCSJ(2), 
                this.isShowInter = !1;
            }
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : (this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close()), (s.isOppoPlatform || s.isVivoPlatform) && le.Instance.HideBannerAD(), 
            this.isShowInter = !1);
        }
        s2c_active_info_cftt(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(e);
        }
        s2c_active_get_cftt(e) {
            e && (1 != e.code ? console.error("error s2c_active_get_cftt code " + e.code) : this.cacheData && w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: this.cacheData.id
            }));
        }
        s2c_active_add_cftt(e) {
            e && (1 != e.code ? console.error("error s2c_active_add_cftt code " + e.code) : this.cacheData && (w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: this.cacheData.id
            }), d.Instance.Send(a.UIGameTipsModel_SetTips, "恭喜！距离终点又近了一步！", 1e3)));
        }
    }
    Tu.instance = null;
    class Uu extends n.ui_dialog.d_EventCFTTUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.img_get.on(Laya.Event.MOUSE_DOWN, this, this.onClickJdy), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), 
            this.img_bx.on(Laya.Event.MOUSE_DOWN, this, this.onClickGet), this.img_jdy.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideoJdy), 
            this.list_queset.array = [], this.list_queset.renderHandler = new Laya.Handler(this, this.onListAttrRender);
        }
        closeView() {
            d.Instance.Send(a.UIEventCFTT_Close);
        }
        onClickCloseJdy() {
            this.box_jdy.visible = !1;
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.box_jdy.visible = !1;
        }
        updateEvent(e) {
            if (null != e && null != e.info && 0 != e.info.length) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(1004);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_getnum.text = "前进" + e.freeaddsys + "米", this.label_jdybx.text = "前进" + e.freeaddsys + "米", 
                this.label_jdyqx.text = "额外前进" + e.cfaddsys + "米", this.label_videonum.text = "冲刺" + e.adaddsys + "米", 
                this.label_alllen.text = e.allnum + "米", this.label_desc2.text = "今日还可使用 " + e.adcount + "/" + e.adlimit;
                var a = e.info[e.info.length - 1].need, o = [];
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    if (i.reward && i.reward.length > 0) {
                        var l = vu.Instance.GetItemData(i.reward[0].id), h = i.reward[0].num, r = {
                            fix: i.need / a * 564,
                            img_light: {
                                visible: i.allnum > i.need
                            },
                            img_icon: {
                                skin: l ? l.icon : ""
                            },
                            img_get: {
                                visible: 1 == i.state
                            },
                            label_need: {
                                text: i.need + "米"
                            },
                            label_num: {
                                text: l && 1 == h ? l.name : "x" + h
                            }
                        };
                        o.push(r), 2 == i.state && (i.state = 1, w.Instance.GetNetMsgData("c2s_active_get_cftt").Send({
                            id: e.id,
                            index: i.index
                        }));
                    }
                }
                this.list_queset.array = o, e.allnum > a && (e.allnum = a), this.img_get.disabled = e.freetime > 0 || e.allnum >= a, 
                this.img_video.disabled = e.adcount >= e.adlimit || e.allnum >= a, this.img_bar.width = 48 + 564 * e.allnum / a, 
                this.label_cur.x = 166 + 564 * e.allnum / a, this.label_cur.text = e.allnum + "米";
            }
        }
        onListAttrRender(e, t) {
            e.x = e.dataSource.fix;
        }
        onClickJdy() {
            this.box_jdy.visible = !0;
        }
        onClickGet() {
            this.box_jdy.visible = !1, null != Tu.Instance.cacheData && w.Instance.GetNetMsgData("c2s_active_add_cftt").Send({
                id: Tu.Instance.cacheData.id,
                type: 1
            });
        }
        onClickVideo() {
            null != Tu.Instance.cacheData && (s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cftt").Send({
                id: Tu.Instance.cacheData.id,
                type: 2
            }), s.isWXPlatform && w.Instance.GetNetMsgData("c2s_get_reward_nolimit").Send({})) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cftt").Send({
                    id: Tu.Instance.cacheData.id,
                    type: 2
                }), s.isWXPlatform && w.Instance.GetNetMsgData("c2s_get_reward_nolimit").Send({}));
            }, 17));
        }
        onClickVideoJdy() {
            this.box_jdy.visible = !1, null != Tu.Instance.cacheData && (s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cftt").Send({
                id: Tu.Instance.cacheData.id,
                type: 1
            }), w.Instance.GetNetMsgData("c2s_active_add_cftt").Send({
                id: Tu.Instance.cacheData.id,
                type: 3
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cftt").Send({
                    id: Tu.Instance.cacheData.id,
                    type: 1
                }), w.Instance.GetNetMsgData("c2s_active_add_cftt").Send({
                    id: Tu.Instance.cacheData.id,
                    type: 3
                }));
            }, 17));
        }
    }
    class Lu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventDHWJ.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 5004, this.isEventEnd = !0, this.firstClose = !0, 
            this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventDHWJ_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventDHWJ_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventDHWJ_Data, e => {
                this.setData(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Lu.instance = new Lu()), Lu.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, 
            this.uiControl.y = s.fixStageY));
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Lu.instance = null;
    class Nu extends n.ui_dialog.d_EventDHWJUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            Lu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventDHWJ_Close);
        }
        onClickBuyHero(e) {
            w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Lu.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Lu.Instance.eventID
            });
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Lu.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Lu.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Lu.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Lu.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = !0;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(Lu.Instance.eventID);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "剩余可开启次数：" + (e.maxcount - e.count);
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? (this.img_buyhero.visible = !1, this.label_desc.visible = !1, this.label_getflagHero.visible = !0) : (this.label_desc.visible = !0, 
                    this.label_desc.text = Z.Instance.mwInfo[X.dhwjsp] + "/" + i.need[0].num, this.label_getflagHero.visible = !1, 
                    this.img_buyhero.visible = !0, this.img_buyhero.disabled = Z.Instance.mwInfo[X.dhwjsp] < i.need[0].num);
                }
                this.img_video.disabled = e.count >= e.maxcount || !this.img_buyhero.disabled;
            }
        }
    }
    class Mu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventDSGL.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventDSGL_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventDSGL_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(14018, e => {
                this.s2c_active_info_dsgl(e);
            }), w.Instance.RegisterNet(14020, e => {
                this.s2c_active_get_dsgl(e);
            }), w.Instance.RegisterNet(14022, e => {
                this.s2c_active_add_dsgl(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Mu.instance = new Mu()), Mu.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = 1003), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            if (this.waitClose) this.waitClose = !1; else {
                if (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), this.uiControl.updateEvent(this.cacheData), 
                this.isHome ? (this.uiControl.x = 0, this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, 
                this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, this.uiControl.popup(), 
                this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, this.uiControl.y = s.fixStageY), 
                s.isXiaoMiPlatform || s.isHuaweiPlatform) {
                    let e = !0;
                    s.isXiaoMiPlatform && this.isHome && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                    e = !1), le.Instance.showNativeInterstitialad(e);
                }
                console.log("ttad dsgl" + this.isShowInter), s.isOppoGameCenterPlatform && s.canShowNative && this.isShowInter && d.Instance.Send(a.UINativeInterstitial_Open, 400, !0), 
                s.isVivoPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1054, 134, 88, 88, 1), 
                s.isTapTapPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 217, 645, 900, 105, 2), 
                s.is4399Platform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1153, 155, 182 + s.fixStageX, 163, 2), 
                s.isDYVivoPlatform && !this.isHome && (le.Instance.showFloatIcon(1153, 155), le.Instance.ShowDYVIVOBannerAD(217, 645, 900, 105)), 
                s.isWcfjlPlatform && !this.isHome && le.Instance.ShowBannerCSJ(0), this.isShowInter = !1;
            }
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : (this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close()), (s.isOppoPlatform || s.isVivoPlatform) && le.Instance.HideBannerAD(), 
            this.isShowInter = !1);
        }
        s2c_active_info_dsgl(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(e);
        }
        s2c_active_get_dsgl(e) {
            e && (1 != e.code ? console.error("error s2c_active_get_dsgl code " + e.code) : this.cacheData && w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: this.cacheData.id
            }));
        }
        s2c_active_add_dsgl(e) {
            e && (1 != e.code ? console.error("error s2c_active_add_dsgl code " + e.code) : this.cacheData && (w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: this.cacheData.id
            }), d.Instance.Send(a.UIGameTipsModel_SetTips, "恭喜完成任务，助力值已增加！", 1e3)));
        }
    }
    Mu.instance = null;
    class Au extends n.ui_dialog.d_EventDSGLUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.img_getHero.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetHero), this.list_queset.array = [], 
            this.list_queset.renderHandler = new Laya.Handler(this, this.onListAttrRender);
        }
        closeView() {
            d.Instance.Send(a.UIEventDSGL_Close);
        }
        onClickGetHero() {
            var e = Mu.Instance.cacheData;
            if (e && e.info && e.info.length > 0) {
                var t = e.info[0];
                t.allnum >= t.need && 2 == t.state && w.Instance.GetNetMsgData("c2s_active_get_dsgl").Send({
                    id: e.id,
                    index: t.index
                });
            }
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e;
        }
        updateEvent(e) {
            if (null != e && null != e.info && null != e.task) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(1003);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1;
                var a = e.info[0];
                a && (0 == a.state ? (this.label_gettps.visible = !1, this.img_getHero.visible = !1, 
                this.img_bar.visible = !0, this.label_num.visible = !0, this.img_bar.scaleX = a.allnum / a.need, 
                this.label_num.text = a.allnum + "/" + a.need) : (1 == a.state && (this.img_getHero.disabled = !0, 
                this.list_queset.visible = !1, this.label_gettps.visible = !0), this.img_getHero.visible = !0, 
                this.img_barbg.visible = !1, this.img_bar.visible = !1, this.label_num.visible = !1));
                var o = [];
                for (let t = 0; t < e.task.length; t++) {
                    const i = e.task[t];
                    var l = yu.Instance.getEventCondtion(e.id, i.id), h = {
                        id: e.id,
                        taskID: i.id,
                        sortIndex: 1 == i.state ? -1 : i.state,
                        goMsg: l ? l.goMsg : "",
                        label_desc: {
                            text: (l ? l.text : "未知") + " " + i.count + "/" + i.need
                        },
                        label_prize: {
                            text: (l ? l.prizeText : "未知") + " +" + i.point
                        },
                        img_get: {
                            visible: 2 == i.state
                        },
                        img_video: {
                            visible: 0 == i.state
                        },
                        img_go: {
                            visible: 0 == i.state && !!l && null != l.goMsg && "" != l.goMsg
                        }
                    };
                    o.push(h);
                }
                o.sort((e, t) => t.sortIndex - e.sortIndex), this.list_queset.array = o;
            }
        }
        onListAttrRender(e, t) {
            var i;
            (i = e.getChildByName("img_get")).off("click", this, this.onClickGet), i.on("click", this, this.onClickGet, [ e, t ]), 
            (i = e.getChildByName("img_video")).off("click", this, this.onClickVideo), i.on("click", this, this.onClickVideo, [ e, t ]), 
            (i = e.getChildByName("img_go")).off("click", this, this.onClickGo), i.on("click", this, this.onClickGo, [ e, t ]);
        }
        onClickGet(e, t) {
            w.Instance.GetNetMsgData("c2s_active_add_dsgl").Send({
                id: e.dataSource.id,
                taskID: e.dataSource.taskID,
                act: 1
            });
        }
        onClickVideo(e, t) {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_active_add_dsgl").Send({
                id: e.dataSource.id,
                taskID: e.dataSource.taskID,
                act: 2
            }) : le.Instance.ShowVideoAD(t => {
                1 == t && w.Instance.GetNetMsgData("c2s_active_add_dsgl").Send({
                    id: e.dataSource.id,
                    taskID: e.dataSource.taskID,
                    act: 2
                });
            }, 16);
        }
        onClickGo(e, t) {
            "" != e.dataSource.goMsg && (Mu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventDSGL_Close), 
            d.Instance.Send(a["" + e.dataSource.goMsg]));
        }
    }
    class Ou {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventXSLB.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 3001, this.isEventEnd = !0, this.firstClose = !0, 
            this.forceJumpAd = !1, d.Instance.Reg(a.UIEventXSLB_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIEventXSLB_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventXSLB_Data, e => {
                this.setData(e[0]);
            }), d.Instance.Reg(a.UIEventForceAD, e => {
                this.forceShowNative(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (Ou.instance = new Ou()), Ou.instance;
        }
        Open(e, t) {
            null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: t
            });
            var i = yu.Instance.getEventData(t);
            if (null != i && i.mergeId && i.mergeId.length > 0) for (let e = 0; e < i.mergeId.length; e++) w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: i.mergeId[e]
            });
            this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            if (this.waitClose) this.waitClose = !1; else {
                if (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), this.uiControl.updateEvent(this.cacheData), 
                this.isHome ? (this.uiControl.x = 0, this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, 
                this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, this.uiControl.popup(), 
                this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, this.uiControl.y = s.fixStageY), 
                s.isXiaoMiPlatform || s.isHuaweiPlatform) {
                    let e = !0;
                    s.isXiaoMiPlatform && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                    e = !1), le.Instance.showNativeInterstitialad(e);
                }
                s.canShowNative && s.isOppoGameCenterPlatform && !this.isHome && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 922, 140, 88, 88, 1), 
                s.isOppoGameCenterPlatform && (s.isForceInter = !0)), s.is4399Platform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1155, 149, 180 + s.fixStageX, 163, 2), 
                s.isTapTapPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 217, 645, 900, 105, 2), 
                s.isVivoPlatform && !this.isHome && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1055, 130, 88, 88, 1), 
                s.isDYVivoPlatform && !this.isHome && (le.Instance.showFloatIcon(1155, 149), le.Instance.ShowDYVIVOBannerAD(217, 645, 900, 105)), 
                s.isWcfjlPlatform && !this.isHome && le.Instance.ShowBannerCSJ(0), s.isOppoPlatform && this.forceJumpAd && (this.uiControl.btn_close.x = 1005, 
                this.uiControl.btn_close.visible = !1, Laya.timer.once(s.oppoNativeDelay, this, () => {
                    this.isOpen && this.uiControl && (this.uiControl.btn_close.visible = !0), s.isOnline && le.Instance.ShowNativeBannerAD(1, this.uiControl, 986, 140, 88, 88, 1), 
                    le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.btn_close.x = 920);
                })), s.isVivoPlatform && (le.Instance.ShowNewNativeAD([ {
                    uiRoot: this.uiControl,
                    x: 1055 + s.fixStageX,
                    y: 116,
                    width: 120,
                    height: 120,
                    style: I.icon
                } ]), le.Instance.api.showSystemBanner({
                    style: v.Center_bottom
                }));
            }
        }
        forceShowNative(e) {
            console.log("forceShowNative " + e), s.isOppoPlatform && "xslb" == e && (this.forceJumpAd = !0);
        }
        Close() {
            s.isVivoPlatform && (le.Instance.HideNewNativeAD(I.icon), le.Instance.api.hideSystemBanner()), 
            s.isOppoPlatform && s.isOnline && this.forceJumpAd && le.Instance.getAderrorrate() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && le.Instance.onClickOppoNative(), 
            s.isOppoGameCenterPlatform && !this.isHome && s.canShowNative && .6 <= Math.random() && le.Instance.getRandInter() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (le.Instance.setRandInter(), 
            le.Instance.onClickOppoNative()), this.forceJumpAd = !1, le.Instance.HideBannerAD(), 
            w.Instance.GetNetMsgData("c2s_red_point").Send({}), this.isHome && (this.isHome = !1, 
            this.firstClose = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e) {
            if (null != e && null != e.info && 0 != e.info.length) {
                this.isEventEnd = !0;
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    0 != i.state && 2 != i.state || (this.isEventEnd = !1);
                }
                this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
            }
        }
    }
    Ou.instance = null;
    class Eu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventZY.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 5003, this.isEventEnd = !0, this.firstClose = !0, 
            this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventZY_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventZY_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventZY_Data, e => {
                this.setData(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Eu.instance = new Eu()), Eu.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, 
            this.uiControl.y = s.fixStageY), this.isShowInter = !1);
        }
        forceShowNative(e) {
            s.isOppoPlatform && "ALS" == e && (this.forceJumpAd = !0);
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Eu.instance = null;
    class Gu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventXRKH_ZY.scene", this.isLoad = !1, 
            this.waitClose = !1, this.isHome = !1, this.eventID = 5009, this.isEventEnd = !0, 
            this.firstClose = !0, this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventXRKH_ZY_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventXRKH_ZY_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventXRKH_ZY_Data, e => {
                this.setData(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Gu.instance = new Gu()), Gu.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 593.5, 
            this.uiControl.y = s.fixStageY), this.isShowInter = !1);
        }
        forceShowNative(e) {
            s.isOppoPlatform && "ALS" == e && (this.forceJumpAd = !0);
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Gu.instance = null;
    class Ru {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventXRKH_NQ.scene", this.isLoad = !1, 
            this.waitClose = !1, this.isHome = !1, this.eventID = 5010, this.isEventEnd = !0, 
            this.firstClose = !0, this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventXRKH_NQ_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventXRKH_NQ_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventXRKH_NQ_Data, e => {
                this.setData(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Ru.instance = new Ru()), Ru.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 285, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 541, 
            this.uiControl.y = s.fixStageY), this.isShowInter = !1);
        }
        forceShowNative(e) {
            s.isOppoPlatform && "ALS" == e && (this.forceJumpAd = !0);
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Ru.instance = null;
    class Bu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventHome.scene", this.isLoad = !1, this.curSelectEventId = -1, 
            this.eventRed = [], this.ttEventOrder = {
                openMsg: "",
                closeMsg: ""
            }, d.Instance.Reg(a.UIEventHome_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIEventHome_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventHome_Red, e => {
                this.updateEventRed(e[0]);
            }), d.Instance.Reg(a.UIGameMain_UpdateRes, e => {
                this.updateRes();
            }), w.Instance.RegisterNet(14010, e => {
                this.s2c_active_list(e);
            }), w.Instance.RegisterNet(14012, e => {
                this.s2c_active_info(e);
            }), w.Instance.RegisterNet(14014, e => {
                this.s2c_active_get(e);
            }), w.Instance.RegisterNet(14016, e => {
                this.s2c_active_ad_add(e);
            }), w.Instance.RegisterNet(14030, e => {
                this.s2c_active_info_wheel(e);
            }), w.Instance.RegisterNet(14032, e => {
                this.s2c_active_get_wheel(e);
            }), w.Instance.RegisterNet(14036, e => {
                this.s2c_active_info_cjdh(e);
            }), w.Instance.RegisterNet(14038, e => {
                this.s2c_active_add_cjdh(e);
            }), w.Instance.RegisterNet(14040, e => {
                this.s2c_active_get_cjdh(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Bu.instance = new Bu()), Bu.instance;
        }
        Open() {
            w.Instance.GetNetMsgData("c2s_active_list").Send({}), this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            if (this.uiControl.popup(), this.isOpen = !0, this.uiControl.updateRes(), this.uiControl.updateEvent(this.cacheData), 
            -1 != this.curSelectEventId) {
                var e = yu.Instance.getEventData(this.curSelectEventId);
                this.uiControl && e && e.msgOpen && d.Instance.Send(a["" + e.msgOpen], !0, this.curSelectEventId);
            }
            (s.is4399Platform || s.isTapTapPlatform) && le.Instance.ShowNativeBannerAD(1, this.uiControl, 6 - s.fixStageX, 587, 172 + s.fixStageX, 163, 2), 
            s.isDYVivoPlatform && le.Instance.showFloatIcon(52, 625), d.Instance.Send(a.UIGameMain_HideWxClup);
        }
        Close() {
            le.Instance.HideBannerAD(), d.Instance.Send(a.UIGameMain_ShowWxClup);
            var e = yu.Instance.getEventData(this.curSelectEventId);
            e && e.msgClose && d.Instance.Send(a["" + e.msgClose]), this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close()), (s.isOppoPlatform || s.isVivoPlatform) && le.Instance.HideBannerAD(), 
            s.isOppoGameCenterPlatform && s.canShowNative && le.Instance.showInterVideo(), s.isDYVivoPlatform && le.Instance.showInterVideo(), 
            s.isTapTapPlatform && le.Instance.sendShowSplashAd();
        }
        s2c_active_list(e) {
            if (null != e) {
                if (this.cacheData = e, -1 == this.curSelectEventId && this.cacheData && this.cacheData.list && this.cacheData.list.length > 0) for (let i = 0; i < e.list.length; i++) {
                    const s = e.list[i];
                    if ((t = yu.Instance.getEventData(s.id)) && t.isShowHome) {
                        this.curSelectEventId = s.id;
                        break;
                    }
                }
                if (this.cacheData && this.cacheData.list) {
                    for (let e = 0; e < this.cacheData.list.length; e++) {
                        const t = this.cacheData.list[e];
                        Ou.Instance.eventID == t.id ? (Ou.Instance.isEventEnd = 1 == t.state, Ou.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), 
                        e--)) : Du.Instance.eventID == t.id ? (Du.Instance.isEventEnd && (Du.Instance.isEventEnd = 1 == t.state), 
                        Du.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--)) : Su.Instance.eventID == t.id ? (Su.Instance.isEventEnd && (Su.Instance.isEventEnd = 1 == t.state), 
                        Su.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--)) : Eu.Instance.eventID == t.id ? (Eu.Instance.isEventEnd && (Eu.Instance.isEventEnd = 1 == t.state), 
                        Eu.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--)) : Lu.Instance.eventID == t.id ? (Lu.Instance.isEventEnd && (Lu.Instance.isEventEnd = 1 == t.state), 
                        Lu.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--)) : Pu.Instance.eventID == t.id ? (Pu.Instance.isEventEnd && (Pu.Instance.isEventEnd = 1 == t.state), 
                        Pu.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--)) : Cu.Instance.eventID == t.id ? (Cu.Instance.isEventEnd && (Cu.Instance.isEventEnd = 1 == t.state), 
                        Cu.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--)) : Gu.Instance.eventID == t.id ? (Gu.Instance.isEventEnd && (Gu.Instance.isEventEnd = 1 == t.state), 
                        Gu.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--)) : Ru.Instance.eventID == t.id && (Ru.Instance.isEventEnd && (Ru.Instance.isEventEnd = 1 == t.state), 
                        Ru.Instance.isEventEnd && (this.cacheData.list.splice(e, 1), e--));
                    }
                    let e = -1;
                    for (let i = 0; i < this.cacheData.list.length; i++) {
                        const s = this.cacheData.list[i];
                        var t;
                        (t = yu.Instance.getEventData(s.id)) && t.order && t.order > e && Ou.Instance.eventID != s.id && Lu.Instance.eventID != s.id && Cu.Instance.eventID != s.id && Pu.Instance.eventID != s.id && (e = t.order, 
                        this.ttEventOrder = {
                            openMsg: t.msgOpen,
                            closeMsg: t.msgClose
                        });
                    }
                }
                this.uiControl && this.uiControl.updateEvent(this.cacheData), d.Instance.Send(a.UIGameMain_Event, e);
            }
        }
        s2c_active_info(e) {
            if (e) {
                var t = yu.Instance.getEventData(e.id);
                t && t.msgData && "" != t.msgData ? d.Instance.Send(a[t.msgData], e) : console.log("event no found! id=" + e.id);
            }
        }
        s2c_active_info_wheel(e) {
            if (e) {
                var t = yu.Instance.getEventData(e.id);
                t && t.msgData && "" != t.msgData ? d.Instance.Send(a[t.msgData], e, null) : console.log("event no found! id=" + e.id);
            }
        }
        s2c_active_get_wheel(e) {
            if (e) {
                var t = yu.Instance.getEventData(e.id);
                t && t.msgData && "" != t.msgData ? d.Instance.Send(a[t.msgData], null, e) : console.log("event no found! id=" + e.id);
            }
        }
        s2c_active_info_cjdh(e) {
            if (e) {
                var t = yu.Instance.getEventData(e.id);
                t && t.msgData && "" != t.msgData ? d.Instance.Send(a[t.msgData], e) : console.log("event no found! id=" + e.id);
            }
        }
        s2c_active_add_cjdh(e) {
            e && (1 == e.code && e.reward || console.error("error s2c_active_add_cjdh code " + e.code));
        }
        s2c_active_get_cjdh(e) {
            e && (1 == e.code && e.reward || console.error("error s2c_active_get_cjdh code " + e.code));
        }
        s2c_active_get(e) {
            e && 1 != e.code && console.error("error s2c_active_get code " + e.code);
        }
        s2c_active_ad_add(e) {
            e && 1 != e.code && console.error("error s2c_active_ad_add code " + e.code);
        }
        updateRes() {
            this.isOpen && this.uiControl && this.uiControl.updateRes();
        }
        updateEventRed(e) {
            this.eventRed = e, null == this.eventRed && (this.eventRed = []);
        }
    }
    Bu.instance = null;
    class Hu extends n.ui_dialog.d_EventHomeUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.list_event.vScrollBarSkin = "", this.list_event.renderHandler = new Laya.Handler(this, this.onListAttrRender);
        }
        closeView() {
            d.Instance.Send(a.UIEventHome_Close);
        }
        updateRes() {
            this.label_coin.text = Z.Instance.gold + "", this.label_diamond.text = Z.Instance.diamond + "", 
            this.label_yb.text = Z.Instance.yb + "";
        }
        updateEvent(e) {
            var t = [];
            for (let t = 0; t < e.list.length; t++) {
                const s = e.list[t];
                (i = yu.Instance.getEventData(s.id)) && !i.isShowHome && (e.list.splice(t, 1), t--);
            }
            if (e && e.list) for (let n = 0; n < e.list.length; n++) {
                const a = e.list[n];
                var i;
                if (a) if ((i = yu.Instance.getEventData(a.id)) && !yu.Instance.isSubEventLis(a.id)) {
                    Bu.Instance.curSelectEventId = -1 == Bu.Instance.curSelectEventId ? a.id : Bu.Instance.curSelectEventId;
                    var s = {
                        id: a.id,
                        msgOpen: i.msgOpen,
                        label_name: {
                            text: i.name,
                            color: a.id == Bu.Instance.curSelectEventId ? "#ffc235" : "#9e9d90"
                        },
                        sp_select: {
                            visible: a.id == Bu.Instance.curSelectEventId
                        },
                        img_red: {
                            visible: -1 != Bu.Instance.eventRed.indexOf(a.id)
                        }
                    };
                    t.push(s);
                }
            }
            this.list_event.array = t;
        }
        onListAttrRender(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, t ]);
        }
        onClickUse(e, t) {
            var i = e.dataSource.id, n = yu.Instance.getEventData(Bu.Instance.curSelectEventId);
            n && n.msgClose && d.Instance.Send(a["" + n.msgClose]), Bu.Instance.curSelectEventId = i, 
            this.updateEvent(Bu.Instance.cacheData), s.isOppoGameCenterPlatform && s.canShowNative && d.Instance.Send(a.UINativeInterstitial_Open, 400, !0, .35), 
            d.Instance.Send(a["" + e.dataSource.msgOpen], !0, i);
        }
    }
    class Fu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventNQCT.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, d.Instance.Reg(a.UIEventNQCT_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIEventNQCT_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventNQCT_Data, e => {
                this.setData(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (Fu.instance = new Fu()), Fu.instance;
        }
        Open(e, t) {
            null == e && (e = !1), null == t && (t = 1001), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: t
            });
            var i = yu.Instance.getEventData(t);
            if (null != i && i.mergeId && i.mergeId.length > 0) for (let e = 0; e < i.mergeId.length; e++) w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: i.mergeId[e]
            });
            this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEventHero(this.cacheDataHero), this.uiControl.updateEventSkin(this.cacheDataSkin), 
            this.isHome ? (this.uiControl.x = 0, this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, 
            this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, this.uiControl.popup(), 
            this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, this.uiControl.y = s.fixStageY));
        }
        Close() {
            w.Instance.GetNetMsgData("c2s_red_point").Send({}), this.isHome && (this.isHome = !1), 
            this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e) {
            e && (1001 == e.id ? this.setDataHero(e) : 1002 == e.id && this.setDataSkin(e));
        }
        setDataHero(e) {
            this.cacheDataHero = e, this.uiControl && this.uiControl.updateEventHero(this.cacheDataHero);
        }
        setDataSkin(e) {
            this.cacheDataSkin = e, this.uiControl && this.uiControl.updateEventSkin(this.cacheDataSkin);
            for (let e = 0; e < this.cacheDataSkin.info.length; e++) {
                const t = this.cacheDataSkin.info[e];
                t && 2 == t.state && (w.Instance.GetNetMsgData("c2s_active_get").Send({
                    id: this.cacheDataSkin.id,
                    index: t.index
                }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                    id: this.cacheDataSkin.id
                }));
            }
        }
    }
    Fu.instance = null;
    class Vu extends n.ui_dialog.d_EventNQCTUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickAddHero), 
            this.img_videopf.on(Laya.Event.MOUSE_DOWN, this, this.onClickAddPf), this.img_getHero.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetHero), 
            this.img_getpf.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetPf);
        }
        closeView() {
            Fu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventNQCT_Close);
        }
        onClickGetHero() {
            var e = Fu.Instance.cacheDataHero;
            e && e.info && e.info.length > 0 && (w.Instance.GetNetMsgData("c2s_active_get").Send({
                id: e.id,
                index: e.info[0].index
            }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: e.id
            }));
        }
        onClickGetPf() {
            this.img_getpf.visible = !1, this.label_desc3.visible = !1, this.label_getflagpf.visible = !0, 
            w.Instance.GetNetMsgData("c2s_buy_role").Send({
                role_id: 8001,
                type: 7
            }), d.Instance.Send(a.UIShowPrize_Open, [ {
                id: 18001,
                num: 1
            } ]);
        }
        onClickAddHero() {
            var e = Fu.Instance.cacheDataHero;
            e && (s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                id: e.id
            }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: e.id
            })) : le.Instance.ShowVideoAD(t => {
                1 == t && (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                    id: e.id
                }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                    id: e.id
                }));
            }, 18));
        }
        onClickAddPf() {
            var e = Fu.Instance.cacheDataSkin;
            e && (s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                id: e.id
            }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: e.id
            })) : le.Instance.ShowVideoAD(t => {
                1 == t && (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                    id: e.id
                }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                    id: e.id
                }));
            }, 19));
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform || s.isH5Platform;
        }
        updateEventHero(e) {
            if (null != e && null != e.info && 0 != e.info.length) {
                var t = e.info[0];
                this.label_desc.text = "观看视频 " + t.count + "/" + t.need + " 次后获得", this.img_video.visible = 0 == t.state, 
                this.img_getHero.visible = 2 == t.state, this.label_getflagHero.visible = 1 == t.state;
            }
        }
        updateEventSkin(e) {
            if (null != e && null != e.info && 0 != e.info.length) {
                var t = 0, i = 0;
                for (let s = 0; s < e.info.length; s++) {
                    const n = e.info[s];
                    n && n.reward && n.reward[0] && (t += n.reward[0].num), 1 == n.state && (i += 1);
                }
                this.label_desc2.text = "还可以领取 " + i + "/" + e.info.length + " 次";
                var n = Z.Instance.getHaveHero(8001);
                n && 0 == n.demoEtime && -1 == n.count ? (this.label_desc3.visible = !1, this.label_getflagpf.visible = !0, 
                this.img_getpf.visible = !1) : (this.label_desc3.visible = !0, this.label_getflagpf.visible = !1, 
                this.label_desc3.text = Z.Instance.skinSP + "/" + t + "兑换", this.img_getpf.visible = Z.Instance.skinSP >= t), 
                this.img_videopf.visible = i < e.info.length, this.sp_close.visible = (s.isTTPlatform || s.isH5Platform) && (this.img_video.visible || this.img_videopf.visible);
            }
        }
    }
    class ju {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventPintu.scene", this.isLoad = !1, 
            this.waitClose = !1, this.isHome = !1, this.eventID = 5005, this.isEventEnd = !0, 
            this.firstClose = !0, this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventPintu_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventPintu_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventPintu_Data, e => {
                this.setData(e[0], e[1]);
            }), d.Instance.Reg(a.UIEventPintu_PlayEffect, e => {
                this.uiControl && this.uiControl.playEffect();
            });
        }
        static get Instance() {
            return null == this.instance && (ju.instance = new ju()), ju.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, 
            this.uiControl.y = s.fixStageY), this.isShowInter = !1, this.uiControl.type = -1);
        }
        forceShowNative(e) {
            s.isOppoPlatform && "ALS" == e && (this.forceJumpAd = !0);
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    ju.instance = null;
    class Wu extends n.ui_dialog.d_EventPintuUI {
        constructor() {
            super(), this.type = -1, q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            this.sp_get.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            ju.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventPintu_Close);
        }
        onClickBuyHero(e) {
            w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: ju.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: ju.Instance.eventID
            });
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: ju.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: ju.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: ju.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: ju.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform || s.isH5Platform;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(5005);
                let a = -1;
                this.type = -1;
                let o = 0;
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1;
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    if (1 == i.state) {
                        this.img_video.visible = !1, this.sp_get.visible = !1;
                        for (let e = 0; e < i.need.length; e++) {
                            i.need[e];
                            this["label_prize" + (e + 1)].visible = !1, this["label_prize" + (e + 1) + "_need"].visible = !1;
                        }
                    } else if (i.need) for (let e = 0; e < i.need.length; e++) {
                        i.need[e];
                        this["label_prize" + (e + 1)].text = Z.Instance.mwInfo[X["pintu" + (e + 1)]], this["label_prize" + (e + 1) + "_need"].text = "/" + i.need[e].num, 
                        this["label_prize" + (e + 1)].color = Z.Instance.mwInfo[X["pintu" + (e + 1)]] < i.need[e].num ? "#ff0400" : "#ffffff", 
                        Z.Instance.mwInfo[X["pintu" + (e + 1)]] < i.need[e].num && a++, this["sp_prize" + (e + 1)].visible && Z.Instance.mwInfo[X["pintu" + (e + 1)]] >= i.need[e].num && (this.type = e + 1), 
                        this["sp_prize" + (e + 1)].visible = Z.Instance.mwInfo[X["pintu" + (e + 1)]] < i.need[e].num, 
                        Z.Instance.mwInfo[X["pintu" + (e + 1)]] >= i.need[e].num && o++;
                    }
                }
                this.sp_get.visible = 4 == o, this.img_video.visible = 4 != o, this.img_video.disabled = e.count >= e.maxcount || -1 == a;
            }
        }
        playEffect() {
            this["ani" + this.type] && this.type > 0 && (this["pa_prize" + this.type].visible = !0, 
            this["ani" + this.type].play(0, !1));
        }
    }
    class Xu {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventTiger.scene", this.isLoad = !1, 
            this.waitClose = !1, this.isHome = !1, this.eventID = 5007, this.isEventEnd = !0, 
            this.firstClose = !0, this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventTiger_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventTiger_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventTiger_Data, e => {
                this.setData(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Xu.instance = new Xu()), Xu.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, 
            this.uiControl.y = s.fixStageY));
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Xu.instance = null;
    class Ku extends n.ui_dialog.d_EventTigerUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            Xu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventTiger_Close);
        }
        onClickBuyHero(e) {
            w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Xu.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Xu.Instance.eventID
            });
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Xu.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Xu.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Xu.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Xu.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = !0;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(Xu.Instance.eventID);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "剩余可开启次数：" + (e.maxcount - e.count);
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? (this.img_buyhero.visible = !1, this.label_desc.visible = !1, this.label_getflagHero.visible = !0) : (this.label_desc.visible = !0, 
                    this.label_desc.text = Z.Instance.mwInfo[X.tigersp] + "/" + i.need[0].num, this.label_getflagHero.visible = !1, 
                    this.img_buyhero.visible = !0, this.img_buyhero.disabled = Z.Instance.mwInfo[X.tigersp] < i.need[0].num);
                }
                this.img_video.disabled = e.count >= e.maxcount || !this.img_buyhero.disabled;
            }
        }
    }
    class qu extends n.ui_dialog.d_EventXRKH_NQUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            Ru.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventXRKH_NQ_Close);
        }
        onClickBuyHero(e) {
            this.lbl_exc.visible && (w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Ru.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Ru.Instance.eventID
            }));
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Ru.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Ru.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Ru.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Ru.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform || s.isH5Platform;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(5003);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "今日剩余" + (e.maxcount - e.count) + "次数";
                let a = !1;
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? (this.img_buyhero.visible = !0, this.label_desc.visible = !1, this.lbl_exc.visible = !1, 
                    this.label_getflagHero.visible = !0) : (this.label_desc.visible = !0, this.label_desc.text = Z.Instance.mwInfo[X.bsyl] + "/" + i.need[0].num, 
                    this.label_getflagHero.visible = !1, this.img_buyhero.visible = !0, a = Z.Instance.mwInfo[X.bsyl] < i.need[0].num, 
                    this.lbl_exc.visible = !a);
                }
                this.img_video.disabled = e.count >= e.maxcount || !a;
            }
        }
    }
    class zu extends n.ui_dialog.d_EventXRKH_ZYUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            Gu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventXRKH_ZY_Close);
        }
        onClickBuyHero(e) {
            this.lbl_exc.visible && (w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Gu.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Gu.Instance.eventID
            }));
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Gu.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Gu.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Gu.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Gu.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform || s.isH5Platform;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(5003);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "今日剩余" + (e.maxcount - e.count) + "次数";
                let a = !1;
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? (this.img_buyhero.visible = !0, this.label_desc.visible = !1, this.lbl_exc.visible = !1, 
                    this.label_getflagHero.visible = !0) : (this.label_desc.visible = !0, this.label_desc.text = Z.Instance.mwInfo[X.bsxg] + "/" + i.need[0].num, 
                    this.label_getflagHero.visible = !1, this.img_buyhero.visible = !0, a = Z.Instance.mwInfo[X.bsxg] < i.need[0].num, 
                    this.lbl_exc.visible = !a);
                }
                this.img_video.disabled = e.count >= e.maxcount || !a;
            }
        }
    }
    class Yu extends n.ui_dialog.d_EventXSLBUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.img_video1.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), this.img_video2.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), 
            this.img_video3.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), this.img_video4.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView);
        }
        closeView() {
            Ou.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventXSLB_Close);
        }
        onClickGetHero(e) {
            var t = Ou.Instance.cacheData;
            t && t.info && t.info.length > e && w.Instance.GetNetMsgData("c2s_active_get").Send({
                id: t.id,
                index: t.info[e].index
            });
        }
        onClickVideo() {
            var e = Ou.Instance.cacheData;
            e && (s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                id: e.id
            }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                id: e.id
            })) : le.Instance.ShowVideoAD(t => {
                1 == t && (w.Instance.GetNetMsgData("c2s_active_ad_add").Send({
                    id: e.id
                }), w.Instance.GetNetMsgData("c2s_active_info").Send({
                    id: e.id
                }));
            }, 20));
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e;
        }
        updateEvent(e) {
            if (null != e && null != e.info && 0 != e.info.length) {
                var t = !1;
                for (let n = 0; n < e.info.length; n++) {
                    const a = e.info[n];
                    var i = this["img_video" + (n + 1)];
                    i && (i.visible = 0 == a.state, this["ani" + (n + 1)].stop(), i.visible && (i.disabled = t, 
                    t || this["ani" + (n + 1)].play(0, !0), t || !s.isTTPlatform && !s.isH5Platform || (this.sp_close.visible = !0, 
                    this.sp_close.x = this["img_video" + (n < 3 ? n + 2 : n)].x), t = !0)), this["sp_get" + (n + 1)].visible = 1 == a.state, 
                    2 == a.state && (this.onClickGetHero(n), this["sp_get" + (n + 1)].visible = !0), 
                    n == e.info.length - 1 && (this.panel_jd.width = 699 * a.count / a.need);
                }
            }
        }
    }
    class Ju {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_EventYGBH.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isHome = !1, this.eventID = 5008, this.isEventEnd = !0, this.firstClose = !0, 
            this.forceJumpAd = !1, this.isShowInter = !1, d.Instance.Reg(a.UIEventYGBH_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIEventYGBH_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIEventYGBH_Data, e => {
                this.setData(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Ju.instance = new Ju()), Ju.instance;
        }
        Open(e, t, i) {
            this.isShowInter = i, null == e && (e = !1), null == t && (t = this.eventID), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: t
            }), this.isHome = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !1, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isOpen = !0, this.uiControl.updateStyle(this.isHome), 
            this.uiControl.updateEvent(this.cacheData), this.isHome ? (this.uiControl.x = 0, 
            this.uiControl.show(), this.uiControl.x = s.fixStageX + 180, this.uiControl.y = s.fixStageY) : (this.uiControl.x = 0, 
            this.uiControl.popup(), this.uiControl.x = s.fixStageX + Laya.stage.designWidth / 2 - 565.5, 
            this.uiControl.y = s.fixStageY));
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isHome && (this.isHome = !1), this.isLoad && null == this.uiControl ? this.waitClose = !0 : this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        setData(e, t) {
            e && this.setDataHero(e);
        }
        setDataHero(e) {
            this.cacheData = e, this.uiControl && this.uiControl.updateEvent(this.cacheData);
        }
    }
    Ju.instance = null;
    class Qu extends n.ui_dialog.d_EventYGBHUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            Ju.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventYGBH_Close);
        }
        onClickBuyHero(e) {
            w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Ju.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Ju.Instance.eventID
            });
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Ju.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Ju.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Ju.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Ju.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(Ju.Instance.eventID);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "剩余可开启次数：" + (e.maxcount - e.count);
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? (this.img_buyhero.visible = !1, this.label_desc.visible = !1, this.label_getflagHero.visible = !0) : (this.label_desc.visible = !0, 
                    this.label_desc.text = Z.Instance.mwInfo[X.YGBHsp] + "/" + i.need[0].num, this.label_getflagHero.visible = !1, 
                    this.img_buyhero.visible = !0, this.img_buyhero.disabled = Z.Instance.mwInfo[X.YGBHsp] < i.need[0].num);
                }
                this.img_video.disabled = e.count >= e.maxcount || !this.img_buyhero.disabled;
            }
        }
    }
    class Zu extends n.ui_dialog.d_EventZYUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickWheel), 
            this.img_buyhero.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero, [ 1 ]);
        }
        closeView() {
            Eu.Instance.isHome ? d.Instance.Send(a.UIEventHome_Close) : d.Instance.Send(a.UIEventZY_Close);
        }
        onClickBuyHero(e) {
            w.Instance.GetNetMsgData("c2s_active_get_cjdh").Send({
                id: Eu.Instance.eventID,
                index: e
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Eu.Instance.eventID
            });
        }
        onClickWheel() {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                id: Eu.Instance.eventID
            }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                id: Eu.Instance.eventID
            })) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_active_add_cjdh").Send({
                    id: Eu.Instance.eventID
                }), w.Instance.GetNetMsgData("c2s_active_info_cjdh").Send({
                    id: Eu.Instance.eventID
                }));
            }, 29);
        }
        updateStyle(e) {
            this.btn_close.visible = !e, this.img_bg.mouseEnabled = !e, this.sp_close.visible = s.isTTPlatform || s.isH5Platform;
        }
        updateEvent(e) {
            if (e && e.info) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3), n = yu.Instance.getEventData(5003);
                n && n.isShowEndTime && s < 604800 && s > 0 ? this.label_endTime.text = "距离活动结束还剩：" + q.formatTimeToC(s) : this.label_endTime.visible = !1, 
                this.label_curDayCount.text = "剩余可开启次数：" + (e.maxcount - e.count);
                for (let t = 0; t < e.info.length; t++) {
                    const i = e.info[t];
                    1 == i.state ? (this.img_buyhero.visible = !1, this.label_desc.visible = !1, this.label_getflagHero.visible = !0) : (this.label_desc.visible = !0, 
                    this.label_desc.text = Z.Instance.mwInfo[X.zysp] + "/" + i.need[0].num, this.label_getflagHero.visible = !1, 
                    this.img_buyhero.visible = !0, this.img_buyhero.disabled = Z.Instance.mwInfo[X.zysp] < i.need[0].num);
                }
                this.img_video.disabled = e.count >= e.maxcount || !this.img_buyhero.disabled;
            }
        }
    }
    class $u extends n.ui_dialog.d_failUI {
        constructor() {
            super(), this.sp_next.on(Laya.Event.MOUSE_DOWN, this, this.onClickNext);
        }
        onClickNext() {
            d.Instance.Send(a.UIFightEndWinOrFail_Close);
        }
    }
    var ep = Laya.Event, tp = Laya.HBox, ip = Laya.Image, sp = Laya.Label, np = Laya.List, ap = Laya.Panel, op = Laya.VBox, lp = Laya.Handler, hp = Laya.Tween;
    class rp {
        constructor() {
            this.visible = !1, this.gameIcons = [], this.gameNames = [], this.datas = [], this.showIndex = 0, 
            this.isForwardMove = !0, this.showUIName = [];
        }
    }
    class cp {
        constructor() {
            this.adGame_SingleArray = [], this.curUIName = "", this.isAnimPlay = !1, this.animSpaceTime = 4e3, 
            this.bgSkin = "9gongge/black.png", this.blackBgSkin = "9gongge/black.png", this.moreTitleSkin = "", 
            this.closeSkin = "common/tanchuang_03.png", this.testSkin = "common/daoju_img_014.png", 
            this.iconSize = 162, this.bgSpaceXY = 4, this.boxSpaceY = 40, this.animSpaceTime = 3e3;
        }
        static get Instance() {
            return null == cp.instance && (cp.instance = new cp()), cp.instance;
        }
        CheckPlatform() {
            return !!(!s.isHaveAd || s.isOppoPlatform || s.isGs || s.isVivoPlatform || s.isAppPlatform || s.isQQPlatform || s.isTTPlatform || s.isH5Platform || s.is4399H5Platform);
        }
        ShowPanel_L(e, t) {
            this.CheckPlatform() || (!this.adGame_L && (this.adGame_L = this.CreatePanel(!0)), 
            this.ShowPanel(this.adGame_L, 1, e, t), this.PlayAnim());
        }
        HidePanel_L() {
            this.CheckPlatform() || this.HidePanel(this.adGame_L, !1);
        }
        ShowPanel_R(e, t) {
            this.CheckPlatform() || (!this.adGame_R && (this.adGame_R = this.CreatePanel(!1)), 
            this.ShowPanel(this.adGame_R, 2, e, t), this.PlayAnim());
        }
        HidePanel_R() {
            this.CheckPlatform() || this.HidePanel(this.adGame_R, !1);
        }
        ShowPanel_C(e, t) {
            this.CheckPlatform() || (this.CreatePanel_C(), this.ShowPanel(this.adGame_C, 3, e, t), 
            this.PlayAnim());
        }
        HidePanel_C() {
            this.CheckPlatform() || this.HidePanel(this.adGame_C, !1);
        }
        ShowPanel_Single(e, t, i) {
            if (!this.CheckPlatform() || s.isOppoPlatform) {
                for (let s = 0; s < i.length; s++) {
                    var n = i[s], a = this.CreatePanel_Single();
                    null != a && (a.bg.x = n.x, a.bg.y = n.y, n.s && (a.bg.scaleX = n.s, a.bg.scaleY = n.s)), 
                    this.ShowPanel(a, 4, e, t, s, i.length), this.adGame_SingleArray.push(a);
                }
                this.PlayAnim();
            }
        }
        HidePanel_Single() {
            for (;this.adGame_SingleArray.length > 0; ) {
                var e = this.adGame_SingleArray.pop();
                this.HidePanel(e, !1);
            }
        }
        onClickSingle() {
            if (null != this.adGame_Single && this.adGame_Single.datas && null != this.adGame_Single && null != this.adGame_Single.datas) {
                var e = this.adGame_Single.datas[this.adGame_Single.showIndex];
                this.curUIName = this.adGame_Single.showUIName.length > 0 ? this.adGame_Single.showUIName[this.adGame_Single.showUIName.length - 1] : "未知", 
                console.log(this.curUIName + " 点击了查看列表索引 " + this.adGame_Single.showIndex), e && d.Instance.Send(a.PlatformManger_GotoOtherGame, this.curUIName, e, 1, null);
            }
        }
        ShowPanel_Box(e, t, i, s, n) {
            this.CreatePanel_Box(), this.HidePanel_Box(), null != this.adGame_Box && (1 == i ? (this.adGame_Box.bg.x = 0 - s, 
            this.adGame_Box.bg.y = n, this.adGame_Box.closeSp.x = 120, hp.to(this.adGame_Box.bg, {
                x: s
            }, 200, null, null, 0)) : (this.adGame_Box.bg.x = 1170 + s, this.adGame_Box.bg.y = n, 
            this.adGame_Box.closeSp.x = -70, hp.to(this.adGame_Box.bg, {
                x: s
            }, 200, null, null, 0))), this.ShowPanel(this.adGame_Box, 5, e, t), this.PlayAnim();
        }
        HidePanel_Box() {
            this.HidePanel(this.adGame_Box, !1);
        }
        ShowPanel_List(e, t, i, s) {
            this.CreatePanel_List(), this.HidePanel_List(), null != this.adGame_List && (this.adGame_List.bg.x = i, 
            this.adGame_List.bg.y = s), this.ShowPanel(this.adGame_List, 5, e, t), this.PlayAnim();
        }
        HidePanel_List() {
            this.HidePanel(this.adGame_List, !1);
        }
        HidePanel_ALL() {
            this.HidePanel(this.adGame_Single, !0), this.HidePanel(this.adGame_Box, !0), this.CheckPlatform() || (this.HidePanel(this.adGame_L, !0), 
            this.HidePanel(this.adGame_R, !0), this.HidePanel(this.adGame_C, !0));
        }
        PlayAnim() {
            this.isAnimPlay || (this.isAnimPlay = !0, Laya.timer.clearAll(this), Laya.timer.loop(this.animSpaceTime, this, this.AnimScroll));
        }
        StopAnim() {
            this.isAnimPlay && (this.isAnimPlay = !1, Laya.timer.clearAll(this));
        }
        CreatePanel(e) {
            var t = new rp();
            return t.bg = new ip(), t.bg.sizeGrid = "4,12,4,13,0", t.bg.skin = this.bgSkin, 
            e ? (t.bg.x = 0, t.bg.y = 70) : (t.bg.x = 1334 - this.iconSize + this.bgSpaceXY, 
            t.bg.y = 70), t.bg.width = this.iconSize + this.bgSpaceXY, t.bg.height = this.bgSpaceXY + 3 * (this.iconSize + this.boxSpaceY), 
            t.bg.zOrder = 9999, t.panle = new ap(), t.panle.x = this.bgSpaceXY / 2, t.panle.y = this.bgSpaceXY / 2, 
            t.panle.width = this.iconSize, t.panle.height = 3 * (this.iconSize + this.boxSpaceY), 
            t.bg.addChild(t.panle), t.vbox = new op(), t.vbox.x = 0, t.vbox.space = this.boxSpaceY, 
            t.panle.addChild(t.vbox), t;
        }
        CreatePanel_C() {
            null == this.adGame_C && (this.adGame_C = new rp(), this.adGame_C.bg = new ip(), 
            this.adGame_C.bg.sizeGrid = "10,10,10,10,0", this.adGame_C.bg.skin = "", this.adGame_C.bg.x = 0 - s.fixStageX, 
            this.adGame_C.bg.y = 540, this.adGame_C.bg.width = 667 + 2 * s.fixStageX, this.adGame_C.bg.height = 230, 
            this.adGame_C.panle = new ap(), this.adGame_C.panle.x = 50 + s.fixStageX, this.adGame_C.panle.y = 5, 
            this.adGame_C.panle.width = 572, this.adGame_C.panle.height = 188, this.adGame_C.bg.addChild(this.adGame_C.panle), 
            this.adGame_C.hbox = new tp(), this.adGame_C.hbox.x = 10, this.adGame_C.hbox.y = 2, 
            this.adGame_C.hbox.space = 40, this.adGame_C.panle.addChild(this.adGame_C.hbox));
        }
        CreatePanel_Single() {
            var e = new rp();
            return e.bg = new ip(), e.bg.sizeGrid = "4,12,4,13,0", e.bg.skin = this.bgSkin, 
            e.bg.x = 0, e.bg.y = 0, e.bg.width = this.iconSize + this.bgSpaceXY, e.bg.height = this.bgSpaceXY + (this.iconSize + this.boxSpaceY), 
            e.bg.zOrder = 9999, e.panle = new ap(), e.panle.x = this.bgSpaceXY / 2, e.panle.y = this.bgSpaceXY / 2, 
            e.panle.width = this.iconSize, e.panle.height = this.iconSize + this.boxSpaceY - 5, 
            e.bg.addChild(e.panle), e.vbox = new op(), e.vbox.x = 0, e.vbox.space = this.boxSpaceY, 
            e.panle.addChild(e.vbox), e.panle.addChild(e.vbox), e;
        }
        CreatePanel_Box() {
            if (null == this.adGame_Box) {
                this.adGame_Box = new rp(), this.adGame_Box.bg = new ip(), this.adGame_Box.bg.sizeGrid = "4,12,4,13,0", 
                this.adGame_Box.bg.skin = this.bgSkin, this.adGame_Box.bg.x = 1170 + s.fixStageX, 
                this.adGame_Box.bg.y = 70, this.adGame_Box.bg.width = 600, this.adGame_Box.bg.height = 650, 
                this.adGame_Box.bg.zOrder = 9999;
                var e = new ip();
                e.skin = this.moreTitleSkin, e.scaleX = .4, e.scaleY = .4, e.x = -5, e.y = -15, 
                this.adGame_Box.bg.addChild(e), this.adGame_Box.closeSp = new ip(), this.adGame_Box.closeSp.skin = this.closeSkin, 
                this.adGame_Box.closeSp.x = 120, this.adGame_Box.closeSp.on(ep.CLICK, this, this.onClickClose, [ 5 ]), 
                this.adGame_Box.bg.addChild(this.adGame_Box.closeSp), this.adGame_Box.panle = new ap(), 
                this.adGame_Box.panle.x = 22, this.adGame_Box.panle.y = 22, this.adGame_Box.panle.width = 600, 
                this.adGame_Box.panle.height = 610, this.adGame_Box.bg.addChild(this.adGame_Box.panle), 
                this.adGame_Box.vbox = new op(), this.adGame_Box.vbox.x = 10, this.adGame_Box.vbox.space = 40, 
                this.adGame_Box.panle.addChild(this.adGame_Box.vbox), this.adGame_Box.vbox1 = new op(), 
                this.adGame_Box.vbox1.x = 200, this.adGame_Box.vbox1.space = 40, this.adGame_Box.panle.addChild(this.adGame_Box.vbox1), 
                this.adGame_Box.vbox2 = new op(), this.adGame_Box.vbox2.x = 400, this.adGame_Box.vbox2.space = 40, 
                this.adGame_Box.panle.addChild(this.adGame_Box.vbox2), this.adGame_Box.bg.scale(.6, .6);
            }
        }
        CreatePanel_List() {
            if (null == this.adGame_List) {
                this.adGame_List = new rp(), this.adGame_List.bg = new ip(), this.adGame_List.bg.sizeGrid = "4,12,4,13,0", 
                this.adGame_List.bg.skin = this.bgSkin, this.adGame_List.bg.width = 420, this.adGame_List.bg.height = 420, 
                this.adGame_List.bg.zOrder = 9999, this.adGame_List.list = new np(), this.adGame_List.list.x = 26, 
                this.adGame_List.list.y = 26, this.adGame_List.list.repeatX = 3, this.adGame_List.list.repeatY = 3, 
                this.adGame_List.list.spaceX = 30, this.adGame_List.list.renderHandler = new lp(this, this.onGameListRender);
                var e = {
                    type: "Box",
                    props: {
                        x: 0,
                        y: 0,
                        width: 100,
                        height: 140,
                        renderType: "render"
                    },
                    child: [ {
                        type: "Image",
                        props: {
                            x: 0,
                            y: 0,
                            width: 100,
                            height: 100,
                            name: "img_icon"
                        }
                    }, {
                        type: "Label",
                        props: {
                            x: -10,
                            y: 108,
                            width: 120,
                            height: 30,
                            name: "label_name",
                            color: "#FFFFFF",
                            fontSize: 20,
                            align: "center"
                        }
                    } ]
                };
                this.adGame_List.list.itemRender = e, this.adGame_List.bg.addChild(this.adGame_List.list);
            }
        }
        onGameListRender(e, t) {
            var i = e.getChildByName("img_icon");
            i.off("click", this, this.onClickInfo), i.on("click", this, this.onClickInfo, [ e, t ]);
        }
        onClickInfo(e, t) {
            d.Instance.Send(a.PlatformManger_GotoOtherGame, this.curUIName, e.dataSource.data, 1, null);
        }
        ShowPanel(e, t, i, s, n, a) {
            if (null != e) {
                e.visible && -1 == e.showUIName.indexOf(i) && e.showUIName.push(i);
                for (var o = 0; o < e.gameIcons.length; o++) {
                    e.gameIcons[o].removeSelf();
                }
                e.vbox && (e.vbox.y = 0), e.hbox && (e.hbox.x = 0), e.showIndex = 0, e.isForwardMove = !0;
                var l = this.GetGames(t);
                if (null != l && l.length > 0 && a) {
                    var h = Math.floor(l.length / a);
                    (isNaN(h) || h <= 0) && (h = 1);
                    var r = h * n;
                    r >= l.length && (r = l.length - 1);
                    var c = h * n + h;
                    c > l.length && (c = l.length);
                    var d = n + 1 == a ? l.slice(r) : l.slice(r, c);
                    l = d;
                }
                if (null != l && l.length > 0) {
                    var u = null != e.list, p = [];
                    for (o = 0; o < l.length; o++) {
                        var m = l[o];
                        if (null != m) if (u) {
                            var g = {
                                data: m,
                                img_icon: {
                                    skin: m.otherIconUrl
                                },
                                label_name: {
                                    text: m.otherName
                                }
                            };
                            p.push(g);
                        } else {
                            var f = e.gameIcons[o];
                            null == f && ((f = new ip()).width = this.iconSize, f.height = this.iconSize, e.gameIcons.push(f), 
                            f.on(ep.CLICK, this, this.onClickImage, [ 100 * t + o, e ])), f.skin = m.otherIconUrl;
                            var I = e.gameNames[o];
                            null == I && ((I = new sp()).color = "#FFFFFF", I.fontSize = 24, I.align = "center", 
                            I.x = 0, I.y = this.iconSize + 5, I.width = this.iconSize, I.height = 30, e.gameNames.push(I), 
                            f.addChild(I)), I.text = m.otherName, e.vbox && e.vbox1 && e.vbox2 ? o % 3 == 0 ? e.vbox.addChild(f) : o % 3 == 1 ? e.vbox1.addChild(f) : e.vbox2.addChild(f) : e.vbox && e.vbox.addChild(f), 
                            e.hbox && e.hbox.addChild(f), e.datas[o] = m;
                        }
                    }
                    u && (e.list.array = p), e.bg.removeSelf(), s ? s.addChild(e.bg) : Laya.stage.addChild(e.bg), 
                    e.visible = !0, e.showUIName.push(i);
                }
            }
        }
        HidePanel(e, t) {
            if (null != e) {
                if (e.visible && !t && (e.showUIName.shift(), e.showUIName.length > 0)) return;
                t && (e.showUIName = []);
                for (var i = 0; i < e.gameIcons.length; i++) {
                    e.gameIcons[i].removeSelf();
                }
                e.bg.removeSelf(), e.visible = !1;
            }
        }
        onClickClose(e) {
            this.HidePanel_Box();
        }
        onClickImage(e, t) {
            var i = Math.floor(e / 100), s = e - 100 * Math.floor(e / 100), n = null;
            switch (i) {
              case 1:
                n = this.adGame_L;
                break;

              case 2:
                n = this.adGame_R;
                break;

              case 3:
                n = this.adGame_C;
                break;

              case 4:
                n = t;
                break;

              case 5:
                n = this.adGame_Box;
            }
            if (null != n && null != n.datas) {
                var o = n.datas[s];
                this.curUIName = n.showUIName.length > 0 ? n.showUIName[n.showUIName.length - 1] : "未知", 
                console.log(this.curUIName + " 点击了 " + i + " 列表索引 " + s), o && d.Instance.Send(a.PlatformManger_GotoOtherGame, this.curUIName, o, 1, null);
            }
        }
        GetGames(e) {
            var t = [];
            if (null != B.Instance.allAdvButData) {
                var i = B.Instance.allAdvButData.length;
                if (1 == e) for (var n = 0; n < Math.floor(i / 2); n++) t.push(B.Instance.allAdvButData[n]); else if (2 == e) for (n = Math.floor(i / 2); n < i; n++) t.push(B.Instance.allAdvButData[n]); else if (3 == e) for (n = 0; n < i; n++) t.push(B.Instance.allAdvButData[n]);
            }
            if (4 == e && s.isWXPlatform) for (n = 0; n < B.Instance.advButData.length; n++) t.push(B.Instance.advButData[n]); else if (4 == e && null != s.oppoIconGames) for (n = 0; n < s.oppoIconGames.length; n++) t.push(s.oppoIconGames[n]);
            if (5 == e) if (s.isOppoPlatform && null != s.oppoMoreGames) for (n = 0; n < s.oppoMoreGames.length; n++) t.push(s.oppoMoreGames[n]); else if (s.isWXPlatform) for (i = B.Instance.allAdvButData.length, 
            n = 0; n < 10 && !(n >= i); n++) t.push(B.Instance.allAdvButData[n]);
            return t = G.Instance.ListSortByClick(t);
        }
        AnimScroll() {
            if (null == this.adGame_L || this.adGame_L.visible || null == this.adGame_R || this.adGame_R.visible || null == this.adGame_C || this.adGame_C.visible || null == this.adGame_Single || this.adGame_Single.visible) {
                if (null != this.adGame_L && this.adGame_L.visible && this.adGame_L.datas.length > 3) {
                    this.adGame_L.showIndex = this.adGame_L.showIndex + (this.adGame_L.isForwardMove ? 1 : -1);
                    var e = this.adGame_L.showIndex * -(this.iconSize + this.boxSpaceY);
                    hp.to(this.adGame_L.vbox, {
                        y: e
                    }, 200, null, null, 0), 0 != this.adGame_L.showIndex && this.adGame_L.showIndex != this.adGame_L.datas.length - 3 || (this.adGame_L.isForwardMove = !this.adGame_L.isForwardMove);
                }
                if (null != this.adGame_R && this.adGame_R.visible && this.adGame_R.datas.length > 3) {
                    this.adGame_R.showIndex = this.adGame_R.showIndex + (this.adGame_R.isForwardMove ? 1 : -1);
                    e = this.adGame_R.showIndex * -(this.iconSize + this.boxSpaceY);
                    hp.to(this.adGame_R.vbox, {
                        y: e
                    }, 200, null, null, 0), 0 != this.adGame_R.showIndex && this.adGame_R.showIndex != this.adGame_R.datas.length - 3 || (this.adGame_R.isForwardMove = !this.adGame_R.isForwardMove);
                }
                if (null != this.adGame_C && this.adGame_C.visible && this.adGame_C.datas.length > 9) {
                    this.adGame_C.showIndex = this.adGame_C.showIndex + (this.adGame_C.isForwardMove ? 1 : -1);
                    var t = this.adGame_C.showIndex * -(this.iconSize + this.boxSpaceY);
                    hp.to(this.adGame_C.hbox, {
                        x: t
                    }, 200, null, null, 0), 0 != this.adGame_C.showIndex && this.adGame_C.showIndex != this.adGame_C.datas.length - 9 || (this.adGame_C.isForwardMove = !this.adGame_C.isForwardMove);
                }
                for (let t = 0; t < this.adGame_SingleArray.length; t++) {
                    var i = this.adGame_SingleArray[t];
                    if (null != i && i.datas.length > 1) {
                        i.showIndex = i.showIndex + (i.isForwardMove ? 1 : -1);
                        e = i.showIndex * -(this.iconSize + this.boxSpaceY);
                        hp.to(i.vbox, {
                            y: e
                        }, 10, null, null, 0), 0 != i.showIndex && i.showIndex != i.datas.length - 1 || (i.isForwardMove = !i.isForwardMove), 
                        hp.to(i.bg, {
                            rotation: 5
                        }, 50, null, null, 0), hp.to(i.bg, {
                            rotation: -5
                        }, 50, null, null, 100), hp.to(i.bg, {
                            rotation: 5
                        }, 50, null, null, 150), hp.to(i.bg, {
                            rotation: -5
                        }, 50, null, null, 250);
                    }
                    hp.to(i.bg, {
                        rotation: 0
                    }, 50, null, null, 350);
                }
                if (null != this.adGame_Box && this.adGame_Box.visible && this.adGame_Box.datas.length > 9) {
                    this.adGame_Box.showIndex = this.adGame_Box.showIndex + (this.adGame_Box.isForwardMove ? 1 : -1);
                    e = -190 * this.adGame_Box.showIndex;
                    hp.to(this.adGame_Box.vbox, {
                        y: e
                    }, 200, null, null, 0), hp.to(this.adGame_Box.vbox1, {
                        y: e
                    }, 200, null, null, 0), hp.to(this.adGame_Box.vbox2, {
                        y: e
                    }, 200, null, null, 0), (this.adGame_Box.showIndex >= 0 || this.adGame_Box.showIndex + 1 == this.adGame_Box.datas.length - 9) && (this.adGame_Box.isForwardMove = !this.adGame_Box.isForwardMove);
                }
            } else this.StopAnim();
        }
    }
    cp.instance = null;
    class dp {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_FightEndBox.scene", this.isLoad = !1, 
            this.isVideo = !1, this.boxNum = 0, this.boxMaxNum = 0, d.Instance.Reg(a.UIFightEndBox_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIFightEndBox_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(12023, e => {
                this.s2c_pvp_up_box(e);
            }), w.Instance.RegisterNet(12025, e => {
                this.s2c_pvp_open_box(e);
            });
        }
        static get Instance() {
            return null == this.instance && (dp.instance = new dp()), dp.instance;
        }
        Open(e, t) {
            this.boxNum = e, this.boxMaxNum = t, this.boxNum >= this.boxMaxNum ? d.Instance.Send(a.UIFightEnd_Open) : this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.onDialogOpen(), s.isOppoPlatform && s.isOnline, 
            s.isAppPlatform && le.Instance.HideBannerAD(), s.isDYVivoPlatform ? (this.uiControl.img_common.y = 479, 
            Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && (le.Instance.api.setShowNativeCallBack(e => {
                    e && this.uiControl && this.uiControl.img_common && (this.uiControl.img_common.y = 564);
                }), le.Instance.showFloatIcon(486, 439));
            })) : s.isAppPlatform && !s.isOppoGameCenterPlatform && (this.uiControl.img_clickAD.visible = s.isOppoPlatform || s.isVivoPlatform, 
            s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 918, 377, 411, 241, 1) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 918, 377, 411 + s.fixStageX, 274, 1)), 
            this.isVideo = this.boxNum < this.boxMaxNum, this.uiControl.updateCheck(this.isVideo, !0), 
            this.uiControl.updateBoxInfo(this.boxNum, this.boxMaxNum), s.isVivoPlatform && (s.isVivoPlatform && le.Instance.HideNewNativeAD(I.bigImage), 
            le.Instance.ShowInter());
        }
        Close() {
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.bigImage), s.isOppoPlatform && cp.Instance.HidePanel_Box(), 
            s.isAppPlatform && le.Instance.HideBannerAD(), this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close()), d.Instance.Send(a.UIFightEnd_Open);
        }
        s2c_pvp_up_box(e) {
            1 == e.code ? w.Instance.GetNetMsgData("c2s_pvp_open_box").Send({}) : console.log(" error code " + e.code);
        }
        s2c_pvp_open_box(e) {
            null != e && null != e.reward && 0 != e.reward.length ? d.Instance.Send(a.UIShowPrize_Open, e.reward, () => {
                this.Close();
            }) : this.Close();
        }
        onClickCheck() {
            this.isVideo = !this.isVideo, this.uiControl && this.uiControl.updateCheck(this.isVideo, !1);
        }
        onClickOpen() {
            this.isVideo ? this.onClickVideo() : this.onClickBox();
        }
        onClickCommon() {
            this.onClickBox();
        }
        onClickBox() {
            w.Instance.GetNetMsgData("c2s_pvp_open_box").Send({});
        }
        onClickVideo() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_pvp_up_box").Send({}) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_pvp_up_box").Send({});
            }, 1);
        }
    }
    dp.instance = null;
    class up extends n.ui_dialog.d_FightEndBoxUI {
        constructor() {
            super(), this.img_openbox.on(Laya.Event.MOUSE_DOWN, this, this.onClickOpen), this.btn_check.on(Laya.Event.MOUSE_DOWN, this, this.onClickCheck), 
            this.img_common.on(Laya.Event.MOUSE_DOWN, this, this.onClickCommon), this.img_clickAD.on(Laya.Event.MOUSE_DOWN, this, () => {
                le.Instance.onClickOppoNative();
            });
        }
        onDialogOpen() {
            s.isTTPlatform || s.isH5Platform || s.isVivoPlatform || s.isOppoPlatform || s.isAppPlatform ? (this.sp_box1.visible = !0, 
            this.sp_box1.alpha = 1, this.sp_box1.x = 800, this.sp_box2.visible = !0, this.sp_box2.alpha = 1, 
            this.sp_box2.x = 300, this.box_select.visible = !1, this.img_common.visible = !0, 
            this.img_common.x = 437, this.img_openbox.x = 767, this.label_video.text = "高级宝箱") : (this.box_select.visible = !0, 
            this.img_common.visible = !1, this.img_openbox.x = 674);
        }
        onClickCheck() {
            dp.Instance.onClickCheck();
        }
        onClickCommon() {
            dp.Instance.onClickCommon();
        }
        onClickOpen() {
            dp.Instance.onClickOpen();
        }
        updateAnim(e, t) {
            1 == e ? this.anim_openVideo.play(t ? 5 : 0, !1) : this.anim_openNormal.play(t ? 5 : 0, !1);
        }
        updateCheck(e, t) {
            this.img_check.visible = e, this.sp_video.visible = e, this.label_video.x = e ? 65 : 37, 
            s.isTTPlatform || s.isOppoPlatform || s.isVivoPlatform || s.isH5Platform || s.isAppPlatform || this.updateAnim(e ? 1 : 0, t);
        }
        updateBoxInfo(e, t) {
            this.label_info.text = "每天最多可获得" + (e + 1) + "/" + t + "个宝箱";
        }
    }
    class pp extends n.ui_dialog.d_FightInfoUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView);
        }
        closeView() {
            (s.is4399H5Platform || s.isH5Test || s.isPCPlatform) && Laya.Browser.onPC ? Laya.timer.frameOnce(1, this, () => {
                d.Instance.Send(a.UIFightInfo_Close);
            }) : d.Instance.Send(a.UIFightInfo_Close);
        }
        updateFightInfo() {
            var e = [], t = [], i = 0, s = 0, n = 0;
            for (let l = 0; l < Re.Instance.dicHeroPlayerInstance.length; l++) {
                const h = Re.Instance.dicHeroPlayerInstance[l];
                var a = Re.Instance.dicHeroPlayer[h];
                if (null != a) {
                    var o = {
                        img_selfbg: {
                            visible: a.isSelf
                        },
                        img_head: {
                            skin: a.modelData.heroIcon
                        },
                        label_name: {
                            text: a.modelData.heroName
                        },
                        label_playername: {
                            text: a.playerName
                        },
                        label_kill: {
                            text: a.killNum + ""
                        },
                        label_dead: {
                            text: a.deadNum + ""
                        },
                        label_help: {
                            text: a.helpKillNum + ""
                        },
                        label_coin: {
                            text: Y.curMapID == Y.mapID_sh ? "0" : a.maxCoin
                        },
                        img_item1: {
                            skin: a.equipList[0] ? a.equipList[0].icon : ""
                        },
                        img_item2: {
                            skin: a.equipList[1] ? a.equipList[1].icon : ""
                        },
                        img_item3: {
                            skin: a.equipList[2] ? a.equipList[2].icon : ""
                        },
                        img_item4: {
                            skin: a.equipList[3] ? a.equipList[3].icon : ""
                        },
                        img_item5: {
                            skin: a.equipList[4] ? a.equipList[4].icon : ""
                        },
                        img_item6: {
                            skin: a.equipList[5] ? a.equipList[5].icon : ""
                        },
                        img_bg1: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg2: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg3: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg4: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg5: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg6: {
                            visible: Y.curMapID != Y.mapID_sh
                        }
                    };
                    1 == a.teamID ? e.push(o) : (i += a.killNum, s += a.deadNum, n += a.helpKillNum, 
                    t.push(o));
                }
            }
            Y.curMapID == Y.mapID_sh && (t = []).push({
                img_selfbg: {
                    visible: !1
                },
                img_head: {
                    skin: "icon/pp_img_001.png"
                },
                label_name: {
                    text: "生化魔人"
                },
                label_playername: {
                    text: ""
                },
                label_kill: {
                    text: i + ""
                },
                label_dead: {
                    text: s + ""
                },
                label_help: {
                    text: n + ""
                },
                label_coin: {
                    text: "0"
                },
                img_item1: {
                    skin: ""
                },
                img_item2: {
                    skin: ""
                },
                img_item3: {
                    skin: ""
                },
                img_item4: {
                    skin: ""
                },
                img_item5: {
                    skin: ""
                },
                img_item6: {
                    skin: ""
                },
                img_bg1: {
                    visible: !1
                },
                img_bg2: {
                    visible: !1
                },
                img_bg3: {
                    visible: !1
                },
                img_bg4: {
                    visible: !1
                },
                img_bg5: {
                    visible: !1
                },
                img_bg6: {
                    visible: !1
                }
            });
            this.list_bule.array = e, this.list_red.array = t;
        }
    }
    class mp {
        constructor() {
            this.isLoadComplete = !1, this.provinceConfig = {
                "华东": {
                    id: 1,
                    data: [ {
                        id: 101,
                        name: "山东",
                        wxname: "Shandong"
                    }, {
                        id: 102,
                        name: "江苏",
                        wxname: "Jiangsu"
                    }, {
                        id: 103,
                        name: "上海",
                        wxname: "Shanghai"
                    }, {
                        id: 104,
                        name: "浙江",
                        wxname: "Zhejiang"
                    }, {
                        id: 105,
                        name: "安徽",
                        wxname: "Anhui"
                    }, {
                        id: 106,
                        name: "福建",
                        wxname: "Fujian"
                    }, {
                        id: 107,
                        name: "江西",
                        wxname: "Jiangxi"
                    } ]
                },
                "华南": {
                    id: 2,
                    data: [ {
                        id: 201,
                        name: "广东",
                        wxname: "Guangdong"
                    }, {
                        id: 202,
                        name: "广西",
                        wxname: "Guangxi"
                    }, {
                        id: 203,
                        name: "海南",
                        wxname: "Hainan"
                    } ]
                },
                "华中": {
                    id: 3,
                    data: [ {
                        id: 301,
                        name: "河南",
                        wxname: "Henan"
                    }, {
                        id: 302,
                        name: "湖南",
                        wxname: "Hunan"
                    }, {
                        id: 303,
                        name: "湖北",
                        wxname: "Hubei"
                    } ]
                },
                "华北": {
                    id: 4,
                    data: [ {
                        id: 401,
                        name: "北京",
                        wxname: "Beijing"
                    }, {
                        id: 402,
                        name: "天津",
                        wxname: "Tianjin"
                    }, {
                        id: 403,
                        name: "河北",
                        wxname: "Hebei"
                    }, {
                        id: 404,
                        name: "山西",
                        wxname: "Shanxi"
                    }, {
                        id: 405,
                        name: "内蒙古",
                        wxname: "Neimenggu"
                    } ]
                },
                "西北": {
                    id: 5,
                    data: [ {
                        id: 501,
                        name: "宁夏",
                        wxname: "Ningxia"
                    }, {
                        id: 502,
                        name: "青海",
                        wxname: "Qinghai"
                    }, {
                        id: 503,
                        name: "陕西",
                        wxname: "Shanxi"
                    }, {
                        id: 504,
                        name: "甘肃",
                        wxname: "Gansu"
                    }, {
                        id: 505,
                        name: "新疆",
                        wxname: "Xinjiang"
                    } ]
                },
                "西南": {
                    id: 6,
                    data: [ {
                        id: 601,
                        name: "四川",
                        wxname: "Sichuan"
                    }, {
                        id: 602,
                        name: "贵州",
                        wxname: "Guizhou"
                    }, {
                        id: 603,
                        name: "云南",
                        wxname: "Yunnan"
                    }, {
                        id: 604,
                        name: "重庆",
                        wxname: "Chongqing"
                    }, {
                        id: 605,
                        name: "西藏",
                        wxname: "Xizang"
                    } ]
                },
                "东北": {
                    id: 7,
                    data: [ {
                        id: 701,
                        name: "辽宁",
                        wxname: "Liaoning"
                    }, {
                        id: 702,
                        name: "吉林",
                        wxname: "Jilin"
                    }, {
                        id: 703,
                        name: "黑龙江",
                        wxname: "Heilongjiang"
                    } ]
                },
                "港澳台": {
                    id: 8,
                    data: [ {
                        id: 801,
                        name: "香港",
                        wxname: "Xianggang"
                    }, {
                        id: 802,
                        name: "澳门",
                        wxname: "Aomen"
                    }, {
                        id: 803,
                        name: "台湾",
                        wxname: "Taiwan"
                    } ]
                },
                "其他": {
                    id: 9,
                    data: []
                }
            };
        }
        static get Instance() {
            return null == this.instance && (mp.instance = new mp()), mp.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/rankInfo.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.configData = e) : console.log("config/rankInfo.json load fail!"), 
            this.callBack && this.callBack();
        }
        GetRankData(e) {
            for (let i = 0; i < this.configData.length; i++) {
                var t = this.configData[i];
                if (e <= t.endStar) return t.curStar = e - t.startStar, t;
            }
            return null;
        }
        getProvinceByName(e) {
            var t = {
                bigPName: "其他",
                bigPID: 9,
                pName: "",
                pID: 0
            };
            if (null != this.provinceConfig) for (var i in this.provinceConfig) {
                var s = this.provinceConfig[i];
                if (i == e) return t.bigPName = i, t.bigPID = s.id, t;
                for (var n = 0; n < s.data.length; n++) {
                    var a = s.data[n];
                    if (a.name == e || a.wxname == e) return t.bigPName = i, t.bigPID = s.id, t.pName = a.name, 
                    t.pID = a.id, t;
                }
            }
            return t;
        }
        getProvinceByID(e) {
            var t = {
                bigPName: "其他",
                bigPID: 9,
                pName: "",
                pID: 0
            };
            if (null != this.provinceConfig) for (var i in this.provinceConfig) {
                var s = this.provinceConfig[i];
                if (s.id == e) return t.bigPName = i, t.bigPID = s.id, t;
                for (var n = 0; n < s.data.length; n++) {
                    var a = s.data[n];
                    if (a.id == e) return t.bigPName = i, t.bigPID = s.id, t.pName = a.name, t.pID = a.id, 
                    t;
                }
            }
            return t;
        }
    }
    mp.instance = null;
    class gp {
        constructor() {
            this.path = "ui_dialog/d_FightInvite.scene", this.isLoad = !1, this.isOpen = !1, 
            this.friendid = 0, this.teamID = 0, this.mapID = 0, d.Instance.Reg(a.UIFightInvite_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UIFightInvite_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (gp.instance = new gp()), gp.instance;
        }
        Open(e) {
            this.cacheData = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen || (this.isOpen = !0, this.update(this.cacheData), this.uiControl.popup());
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
        update(e) {
            this.teamID = e.team_id, this.friendid = e.friendid, this.mapID = e.mapID, this.uiControl && this.uiControl.updateUI(e);
        }
    }
    gp.instance = null;
    class fp extends n.ui_dialog.d_FightInviteUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.CLICK, this, this.onClickClose), this.img_ok.on(Laya.Event.CLICK, this, this.onClickOK), 
            this.img_cancle.on(Laya.Event.CLICK, this, this.onClickCancle), this.btn_check.on(Laya.Event.CLICK, this, this.onClickSelcet);
        }
        onClosed() {
            gp.Instance.isOpen = !1;
        }
        onClickClose() {
            d.Instance.Send(a.UIFightInvite_Close);
        }
        onClickOK() {
            d.Instance.Send(a.UIFightInvite_Close), w.Instance.GetNetMsgData("c2s_join_team").Send({
                teamID: gp.Instance.teamID,
                mapID: gp.Instance.mapID
            });
        }
        onClickCancle() {
            this.img_check.visible && w.Instance.GetNetMsgData("c2s_friend_block").Send({
                friendid: gp.Instance.friendid
            }), this.onClickClose();
        }
        onClickSelcet() {
            this.img_check.visible = !this.img_check.visible;
        }
        updateUI(e) {
            var t = mp.Instance.GetRankData(e.stage);
            this.img_icon.skin = e.url, this.img_rankicon.skin = t.rankIcon, this.label_name.text = e.name, 
            this.label_rank.text = t.rankName, this.img_check.visible = !1;
            var i = "";
            e.mapID == Y.mapID_33 ? i = "排位 3v3" : e.mapID == Y.mapID_55 ? i = "排位 5v5" : e.mapID == Y.mapID_11 ? i = "排位 1v1" : e.mapID == Y.mapID_sh && (i = e.xxlv > 0 ? "生化模式第" + e.xxlv + "关" : "生化模式"), 
            this.label_matchname.text = i;
        }
    }
    class Ip extends n.ui_dialog.d_FightKillTipUI {
        constructor() {
            super();
        }
        onClosed() {
            null != this.cacheBox && (this.cacheBox.visible = !1, this.cacheBox = null);
        }
        updateTips(e, t, i, s, n, a, o, l) {
            null != this.cacheBox && (this.cacheBox.visible = !1, this.cacheBox = null), this.cacheBox = this["box_" + (1 == i ? "blue" : "red") + e], 
            this.cacheBox.visible = !0, this.img_bg1.skin = 1 == i ? "fight/zdjm_bg_028.png" : "fight/zdjm_bg_029.png", 
            this.img_bg2.skin = 1 == a ? "fight/zdjm_bg_028.png" : "fight/zdjm_bg_029.png", 
            this.img_bg1icon.skin = s, this.img_bg2icon.skin = o, this.label_1name.text = n, 
            this.label_2name.text = l, this.img_title.skin = t, this.anim_play.play(0, !1);
        }
    }
    class vp extends n.ui_dialog.d_FightShopUI {
        constructor() {
            super(), this.img_waitbuy.on(Laya.Event.MOUSE_DOWN, this, this.waitBuyEquip), this.img_waitbuy2.on(Laya.Event.MOUSE_DOWN, this, this.cancleBuyEquip), 
            this.img_sell.on(Laya.Event.MOUSE_DOWN, this, this.sellEquip), this.img_buy1.on(Laya.Event.MOUSE_DOWN, this, this.buyEquip), 
            this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.list_type.array = null, 
            this.list_buyeq.array = null, this.list_buyeq.vScrollBarSkin = null, this.list_cureq.array = null, 
            this.list_type.renderHandler = new Laya.Handler(this, this.onlistTypeRender), this.list_buyeq.renderHandler = new Laya.Handler(this, this.onlistBuyEqRender), 
            this.list_cureq.renderHandler = new Laya.Handler(this, this.onlistCurEqRender);
        }
        closeView() {
            (s.is4399H5Platform || s.isH5Test || s.isPCPlatform) && Laya.Browser.onPC ? Laya.timer.frameOnce(1, this, () => {
                d.Instance.Send(a.UIFightShop_Close);
            }) : d.Instance.Send(a.UIFightShop_Close);
        }
        updateCoin(e) {
            this.label_glod.text = e + "";
        }
        sellEquip() {
            au.Instance.sellEquip();
        }
        buyEquip() {
            au.Instance.buyEquip();
        }
        waitBuyEquip() {
            au.Instance.waitBuyEquip();
        }
        cancleBuyEquip() {
            au.Instance.cancleBuyEquip();
        }
        initType(e) {
            for (var t = [], i = 0; i < e.length; i++) {
                var s = e[i], n = {
                    index: i,
                    data: s,
                    img_select: {
                        visible: 0 == i
                    },
                    label_name: {
                        text: s.btnName
                    }
                };
                t.push(n);
            }
            this.list_type.array = t;
        }
        onlistTypeRender(e, t) {
            e.getChildByName("img_select").visible = t == au.Instance.listTypeSelectedIndex;
            var i = e.getChildByName("img_click");
            i.off("click", this, this.onlistTypeClick), i.on("click", this, this.onlistTypeClick, [ e, t ]);
        }
        onlistTypeClick(e, t) {
            au.Instance.listTypeSelect(e.dataSource.index), this.list_type.array = this.list_type.array;
        }
        showSelectEquip(e, t, i) {
            var s = null;
            if (this.label_selectName.text = null != e ? e.name : "", this.label_selectInfo.text = null != e ? e.info : "", 
            this.img_eqicon.skin = null != e ? e.icon : "", i) {
                var n = null != e ? Nl.Instance.mathBuyCoin(Re.Instance.selfPlayer, e, null) : 0;
                this.label_selectglod.visible = null != e, this.label_selectglod.text = null != e ? n + "" : "", 
                this.img_buy1.visible = Re.Instance.selfPlayer.coin >= n, this.img_sell.visible = !1, 
                null != e ? (this.img_buy2.visible = !0, this.img_waitbuy.visible = null == t || t.id != e.id, 
                this.img_waitbuy2.visible = null != t && t.id == e.id) : (this.img_buy1.visible = !1, 
                this.img_buy2.visible = !1, this.img_waitbuy.visible = !1, this.img_waitbuy2.visible = !1);
            } else {
                this.img_sell.visible = !0, this.label_selectglod.visible = !0;
                n = null != e ? Nl.Instance.mathSellCoin(e) : 0;
                this.label_selectglod.text = null != e ? n + "" : "", s = e, this.img_buy1.visible = !1, 
                this.img_buy2.visible = !1, this.img_waitbuy.visible = !1, this.img_waitbuy2.visible = !1;
            }
            return s;
        }
        initCurEq(e) {
            var t = [];
            if (null != e) {
                for (var i = 0; i < e.length; i++) {
                    var s = e[i], n = {
                        data: s,
                        img_select: {
                            visible: !1
                        },
                        img_eqicon: {
                            skin: s.icon
                        }
                    };
                    t.push(n);
                }
                for (i = 6 - t.length; i > 0; i--) {
                    t.push({
                        data: null,
                        img_select: {
                            visible: !1
                        },
                        img_eqicon: {
                            skin: ""
                        }
                    });
                }
            }
            this.list_cureq.array = t;
        }
        initBuyEq(e) {
            this.list_buyeq.array = e;
        }
        onlistCurEqRender(e, t) {
            var i = e.getChildByName("img_select");
            e.dataSource.data && au.Instance.curSelectPlayerEq && au.Instance.curSelectPlayerEq.instanceId == e.dataSource.data.instanceId ? i.visible = !0 : i.visible = !1;
            var s = e.getChildByName("img_eqicon");
            s.off("click", this, this.onClickOwnerEq), s.on("click", this, this.onClickOwnerEq, [ e, t ]);
        }
        onClickOwnerEq(e, t) {
            null != e.dataSource.data && (this.list_cureq.selectedIndex = t, -1 != this.list_buyeq.selectedIndex && (this.list_buyeq.array = [], 
            au.Instance.clearSelect()), au.Instance.curSelectPlayerEq = this.showSelectEquip(e.dataSource.data, null, !1));
        }
        onlistBuyEqRender(e, t) {
            -1 != this.list_buyeq.selectedIndex && (au.Instance.onlistBuySelect(this.list_buyeq.selectedIndex, this.list_buyeq.selectedItem.data), 
            -1 != this.list_cureq.selectedIndex && (this.list_cureq.array = [], au.Instance.initCurEq()));
        }
    }
    class _p extends n.ui_dialog.d_FriendAddUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.CLICK, this, this.onClickClose), this.img_ok.on(Laya.Event.CLICK, this, this.onClickAddFriend);
        }
        onClickClose() {
            d.Instance.Send(a.UIFriendAdd_Close);
        }
        onClickAddFriend() {
            var e = parseInt(this.input_id.text);
            isNaN(e) || w.Instance.GetNetMsgData("c2s_friend_add").Send({
                id: e
            }), d.Instance.Send(a.UIFriendAdd_Close);
        }
        updateUI() {
            this.label_selfID.text = s.playerID;
        }
    }
    class yp {
        constructor() {
            this.path = "ui_dialog/d_FriendDel.scene", this.isLoad = !1, this.isOpen = !1, this.friendid = 0, 
            d.Instance.Reg(a.UIFriendDel_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIFriendDel_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (yp.instance = new yp()), yp.instance;
        }
        Open(e, t) {
            this.friendid = e, this.name = t, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.updateUI(this.name), this.uiControl.popup();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    yp.instance = null;
    class Sp extends n.ui_dialog.d_FriendDelUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.CLICK, this, this.onClickClose), this.img_ok.on(Laya.Event.CLICK, this, this.onClickOK), 
            this.img_cancle.on(Laya.Event.CLICK, this, this.onClickCancle);
        }
        onClickClose() {
            d.Instance.Send(a.UIFriendDel_Close);
        }
        onClickOK() {
            w.Instance.GetNetMsgData("c2s_friend_del").Send({
                friendid: yp.Instance.friendid
            }), this.onClickClose();
        }
        onClickCancle() {
            this.onClickClose();
        }
        updateUI(e) {
            this.label_name.text = e;
        }
    }
    class wp extends n.ui_dialog.d_GameExitUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.CLICK, this, this.onClickYES), this.btn_NO.on(Laya.Event.CLICK, this, this.onClickYES), 
            this.btn_YES.on(Laya.Event.CLICK, this, this.onClickYES);
        }
        onClickYES() {
            d.Instance.Send(a.UIGameExit_Close), Laya.Browser.window.H5API && Laya.Browser.window.H5API.logout(), 
            le.Instance.ChangeAccount();
        }
        updateUI(e) {
            e ? (console.log("网络中断！"), this.label_txt1.text = "当前的网络环境较差，游戏将自动退出。", this.label_txt2.text = "请您切换稳定网络环境后重新进入游戏。") : (console.log("网络正常！"), 
            this.label_txt1.text = "账号被其他人登录", this.label_txt2.text = "请退出！");
        }
    }
    class Dp extends n.ui_dialog.d_GetFreeDiamondUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), 
            this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo);
        }
        onClick_close() {
            d.Instance.Send(a.UIGetFreeDiamond_Close);
        }
        onClickVideo() {
            d.Instance.Send(a.UIGetFreeDiamond_ClickVideo);
        }
        updateSelect(e) {
            for (let t = 1; t <= 8; t++) this["img_select" + t].visible = t == e;
        }
        update(e) {
            if (this.sp_videoflag.visible = e.index >= 1, this.label_get.x = this.sp_videoflag.visible ? 25 : 13, 
            this.label_todaycount.text = "领取次数" + e.index + "/3", this.img_video.disabled = e.index >= 3, 
            this.img_video.x = 730 + 155 * e.index, e.index >= 3 && (this.img_video.x = 1040), 
            this.img_bar.scaleX = 0 == e.index ? 0 : 1 == e.index ? .5 : 1, e.info) for (let t = 0; t < e.info.length; t++) {
                const i = e.info[t];
                0 == t ? (this.sp_get1.visible = e.index >= 1, this.label_num1.text = "x" + i.reward[0].num) : 1 == t ? (this.sp_get2.visible = e.index >= 2, 
                this.label_num2.text = "x" + i.reward[0].num) : 2 == t && (this.sp_get3.visible = e.index >= 3, 
                this.label_num3.text = "x" + i.reward[0].num);
            }
            (s.isTTPlatform || s.isH5Platform) && e.index < 3 ? (this.sp_close.visible = !0, 
            this.img_video.x = 947) : this.sp_close.visible = !1, !s.isTTPlatform && !s.isH5Platform || this.sp_close.visible || (this.img_video.visible = !1);
        }
    }
    class kp extends n.ui_dialog.d_GetFreeGlodUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), 
            this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo);
        }
        onClick_close() {
            d.Instance.Send(a.UIGetFreeGlod_Close);
        }
        onClickVideo() {
            d.Instance.Send(a.UIGetFreeGlod_ClickVideo);
        }
        updateSelect(e) {
            for (let t = 1; t <= 8; t++) this["img_select" + t].visible = t == e;
        }
        update(e) {
            if (this.sp_videoflag.visible = e.index >= 1, this.label_get.x = this.sp_videoflag.visible ? 25 : 13, 
            this.label_todaycount.text = "领取次数" + e.index + "/3", this.img_video.disabled = e.index >= 3, 
            this.img_video.x = 730 + 155 * e.index, e.index >= 3 && (this.img_video.x = 1040), 
            this.img_bar.scaleX = 0 == e.index ? 0 : 1 == e.index ? .5 : 1, e.info) for (let t = 0; t < e.info.length; t++) {
                const i = e.info[t];
                0 == t ? (this.sp_get1.visible = e.index >= 1, this.label_num1.text = "x" + i.reward[0].num) : 1 == t ? (this.sp_get2.visible = e.index >= 2, 
                this.label_num2.text = "x" + i.reward[0].num) : 2 == t && (this.sp_get3.visible = e.index >= 3, 
                this.label_num3.text = "x" + i.reward[0].num);
            }
            (s.isTTPlatform || s.isH5Platform) && e.index < 3 ? (this.sp_close.visible = !0, 
            this.img_video.x = 947) : this.sp_close.visible = !1, !s.isTTPlatform && !s.isH5Platform || this.sp_close.visible || (this.img_video.visible = !1);
        }
    }
    class Cp extends n.ui_dialog.d_GetFreeSkinUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), 
            this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), this.img_quan.on(Laya.Event.MOUSE_DOWN, this, this.onClickQun);
        }
        onClick_close() {
            d.Instance.Send(a.UIGetFreeSkin_Close);
        }
        onClickVideo() {
            d.Instance.Send(a.UIGetFreeSkin_ClickVideo);
        }
        onClickQun() {
            d.Instance.Send(a.UIGetFreeSkin_ClickQuan);
        }
        updateSelect(e) {
            for (let t = 1; t <= 8; t++) this["img_select" + t].visible = t == e;
        }
        update(e) {
            if (this.label_count.text = "第" + q.NumToString(e.lun) + "轮", this.img_video.disabled = e.count >= e.info.length, 
            this.img_quan.disabled = e.count >= e.info.length, this.sp_close.visible = s.isTTPlatform || s.isH5Platform, 
            null != e.info) for (var t = 0; t < e.info.length; t++) if (!(t > 8)) {
                var i = e.info[t].reward[0], n = vu.Instance.GetItemData(i.id);
                null != n && (this["img_item" + (t + 1)].skin = n.icon, this["img_itemflag" + (t + 1)].visible = 1 == e.info[t].state, 
                this["label_iitemnum" + (t + 1)].text = 1 == i.num ? n.name : i.num);
            }
        }
    }
    class bp extends n.ui_dialog.d_GetFreeSPUI {
        constructor() {
            super(), this.canMove = !1, this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_close), this.img_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo);
        }
        onClick_close() {
            d.Instance.Send(a.UIGetFreeSP_Close);
        }
        onClickVideo() {
            d.Instance.Send(a.UIGetFreeSP_ClickVideo);
        }
        updateSelect(e) {
            for (let t = 1; t <= 8; t++) this["img_select" + t].visible = t == e;
        }
        update(e) {
            if (this.sp_videoflag.visible = e.index >= 1, this.label_get.x = this.sp_videoflag.visible ? 25 : 13, 
            this.label_todaycount.text = "领取次数" + e.index + "/3", this.img_video.disabled = e.index >= 3, 
            this.canMove = 0 == e.index, this.img_video.x = 730 + 155 * e.index, e.index >= 3 && (this.img_video.x = 1040), 
            this.img_bar.scaleX = 0 == e.index ? 0 : 1 == e.index ? .5 : 1, e.info) for (let t = 0; t < e.info.length; t++) {
                const i = e.info[t];
                0 == t ? (this.sp_get1.visible = e.index >= 1, this.label_num1.text = "x" + i.reward[0].num) : 1 == t ? (this.sp_get2.visible = e.index >= 2, 
                this.label_num2.text = "x" + i.reward[0].num) : 2 == t && (this.sp_get3.visible = e.index >= 3, 
                this.label_num3.text = "x" + i.reward[0].num);
            }
            (s.isTTPlatform || s.isH5Platform) && e.index < 3 ? (this.sp_close.visible = !0, 
            this.img_video.x = 947) : this.sp_close.visible = !1, !s.isTTPlatform && !s.isH5Platform || this.sp_close.visible || (this.img_video.visible = !1);
        }
    }
    class Pp extends n.ui_dialog.d_GetFuWenUI {
        constructor() {
            super(), this.needGlod = 0, this.needDiamond = 0, this.isAnimPlay = !1, q.fixedFullBG(this, [ "backbg" ]), 
            this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.img_oncefree.on(Laya.Event.CLICK, this, this.onClickAnim, [ 1 ]), 
            this.img_once.on(Laya.Event.CLICK, this, this.onClickAnim, [ 2 ]), this.img_fivefree.on(Laya.Event.CLICK, this, this.onClickAnim, [ 3 ]), 
            this.img_five.on(Laya.Event.CLICK, this, this.onClickAnim, [ 4 ]), this.img_clickAD.on(Laya.Event.CLICK, this, () => {
                le.Instance.onClickOppoNative();
            }), this.btn_coin.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeGlod_Open);
            }), this.btn_diamond.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeDiamond_Open);
            }), this.btn_yb.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeSP_Open);
            });
        }
        init() {
            this.isAnimPlay = !1;
        }
        closeView() {
            d.Instance.Send(a.UIGetFuWen_Close);
        }
        updateRes() {
            this.label_coin.text = Z.Instance.gold + "", this.label_diamond.text = Z.Instance.diamond + "", 
            this.label_yb.text = Z.Instance.yb + "", w.Instance.GetNetMsgData("c2s_mw_shop_info").Send({});
        }
        updateData(e) {
            if (e) {
                this.needGlod = e.gold_need, this.needDiamond = e.diamond_need;
                var t = new Date().getTime() / 1e3;
                this.img_oncefree.visible = t >= e.free_open_time, this.img_fivefree.visible = e.free_diamond_ad > 0, 
                this.label_onceprize.text = e.gold_need + "", this.label_fiveprize.text = e.diamond_need + "";
            }
        }
        onClickAnim(e) {
            if (1 == e) this.onClickFree(); else if (2 == e) {
                if (Z.Instance.diamond < this.needGlod) return void d.Instance.Send(a.UIConfirm_Open, 1, 0, "钻石不足,是否前往获取钻石？", Laya.Handler.create(this, e => {
                    d.Instance.Send(a.UIGetFreeDiamond_Open);
                }));
                this.onClickBN();
            } else if (3 == e) this.onClickVS(); else if (4 == e) {
                if (Z.Instance.diamond < this.needDiamond) return void d.Instance.Send(a.UIConfirm_Open, 1, 0, "钻石不足,是否前往获取钻石？", Laya.Handler.create(this, e => {
                    d.Instance.Send(a.UIGetFreeDiamond_Open);
                }));
                this.onClickBS();
            }
        }
        onClickFree() {
            w.Instance.GetNetMsgData("c2s_mw_shop_get").Send({
                type: 1
            });
        }
        onClickBN() {
            w.Instance.GetNetMsgData("c2s_mw_shop_get").Send({
                type: 3
            });
        }
        onClickVS() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_mw_shop_get").Send({
                type: 4
            }) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_mw_shop_get").Send({
                    type: 4
                });
            }, 11);
        }
        onClickBS() {
            w.Instance.GetNetMsgData("c2s_mw_shop_get").Send({
                type: 5
            });
        }
    }
    class xp extends n.ui_dialog.d_GonggaoUI {
        constructor() {
            super(), this.prevX = 0, this.prevY = 0, this.label_msg.on(Laya.Event.MOUSE_DOWN, this, this.startScrollText), 
            this.img_ok.on(Laya.Event.MOUSE_DOWN, this, this.onClick_OK);
        }
        onClick_OK() {
            d.Instance.Send(a.UIGonggao_Close);
        }
        updateUI(e) {
            let t = JSON.parse(e.msg);
            t && (this.label_tishi.text = t.biaoti, this.label_msg.text = t.neirong);
        }
        startScrollText(e) {
            this.prevX = this.label_msg.mouseX, this.prevY = this.label_msg.mouseY, Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.scrollText), 
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.finishScrollText);
        }
        finishScrollText(e) {
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.scrollText), Laya.stage.off(Laya.Event.MOUSE_UP, this, this.finishScrollText);
        }
        scrollText(e) {
            var t = this.label_msg.mouseX, i = this.label_msg.mouseY;
            this.label_msg.scrollX += this.prevX - t, this.label_msg.scrollY += this.prevY - i, 
            this.prevX = t, this.prevY = i;
        }
    }
    class Tp {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_Invitefriends.scene", this.isLoad = !1, 
            this.waitClose = !1, this.isHome = !1, this.isShowInter = !1, this.eventID = 10001, 
            d.Instance.Reg(a.UIInvitefriends_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIInvitefriends_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(14062, e => {
                this.s2c_active_info_ard(e);
            }), w.Instance.RegisterNet(14064, e => {
                this.s2c_active_add_ard(e);
            }), w.Instance.RegisterNet(14066, e => {
                this.s2c_active_add_ard(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Tp.instance = new Tp()), Tp.instance;
        }
        s2c_active_add_ard(e) {
            e && 1 == e.code && w.Instance.GetNetMsgData("c2s_active_info_ard").Send({
                id: this.eventID
            });
        }
        s2c_active_info_ard(e) {
            e && e.id == this.eventID && this.uiControl && this.uiControl.updateEvent(e);
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.isPopupCenter = !0, this.uiControl.popupEffect = null, 
                this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            w.Instance.GetNetMsgData("c2s_active_info_ard").Send({
                id: this.eventID
            }), this.isOpen = !0, this.uiControl.popup();
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close());
        }
    }
    Tp.instance = null;
    class Up extends n.ui_dialog.d_InvitefriendsUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.list_queset.array = [], this.list_queset.renderHandler = new Laya.Handler(this, this.onListAttrRender);
        }
        closeView() {
            d.Instance.Send(a.UIInvitefriends_Close);
        }
        updateEvent(e) {
            if (null != e && null != e.info) {
                e.info.sort((e, t) => e.index - t.index);
                var t = [];
                for (let a = 0; a < e.info.length; a++) {
                    const o = e.info[a];
                    var i;
                    o.reward && o.reward[0] && (i = vu.Instance.GetItemData(o.reward[0].id));
                    var s = j.Instance.getPath(), n = {
                        id: e.id,
                        taskID: o.id,
                        sortIndex: 1 == o.get ? -1 : o.get,
                        img_head: {},
                        index: o.index,
                        count: e.count,
                        need: o.need,
                        img_reward: {
                            skin: i ? i.icon : ""
                        },
                        label_reward: {
                            text: i ? i.name + "*" + o.reward[0].num : ""
                        },
                        label_complete: {
                            visible: 2 == o.get
                        },
                        img_get: {
                            visible: 1 == o.get
                        },
                        img_video: {
                            visible: !1
                        },
                        img_canget: {
                            visible: 1 == o.get
                        },
                        img_isget: {
                            visible: 2 == o.get
                        },
                        img_share: {
                            visible: 0 == o.get && "" != s
                        },
                        img_fight: {
                            visible: 0 == o.get && "" == s
                        }
                    };
                    t.push(n);
                }
                t.sort((e, t) => e.sortIndex - t.sortIndex), this.list_queset.array = t;
            }
        }
        onListAttrRender(e, t) {
            var i;
            (i = e.getChildByName("img_get")).off("click", this, this.onClickGet), i.on("click", this, this.onClickGet, [ e, t ]), 
            (i = e.getChildByName("img_video")).off("click", this, this.onClickVideo), i.on("click", this, this.onClickVideo, [ e, t ]), 
            (i = e.getChildByName("img_share")).off("click", this, this.onClickShare), i.on("click", this, this.onClickShare, [ e, t ]), 
            (i = e.getChildByName("img_fight")).off("click", this, this.onClickfight), i.on("click", this, this.onClickfight, [ e, t ]);
        }
        onClickfight(e, t) {
            d.Instance.Send(a.UIGameMain_StartGame);
        }
        onClickGet(e, t) {
            w.Instance.GetNetMsgData("c2s_active_get_ard").Send({
                id: Tp.Instance.eventID,
                index: e.dataSource.index
            });
        }
        onClickShare(e, t) {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_active_add_ard").Send({
                id: Tp.Instance.eventID
            }) : le.Instance.wxShareVideo(e => {
                1 == e ? w.Instance.GetNetMsgData("c2s_active_add_ard").Send({
                    id: Tp.Instance.eventID
                }) : d.Instance.Send(a.UIGameTipsModel_SetTips, "分享成功才能领取奖励！", 1500);
            });
        }
        onClickVideo(e, t) {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_active_get_ard").Send({
                id: Tp.Instance.eventID,
                index: e.dataSource.index
            }) : le.Instance.ShowVideoAD(t => {
                1 == t && w.Instance.GetNetMsgData("c2s_active_get_ard").Send({
                    id: Tp.Instance.eventID,
                    index: e.dataSource.index
                });
            }, 30);
        }
    }
    class Lp extends n.ui_dialog.d_ItemTipsUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]);
        }
        showTips(e) {
            var t = vu.Instance.GetItemData(e);
            t && (this.img_icon.skin = t.icon, this.label_skname.text = t.name, this.label_skinfo.text = t.desc);
        }
    }
    class Np extends n.ui_dialog.d_MatchIngUI {
        constructor() {
            super(), this.sp_cancle.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Cancle);
        }
        onClosed() {}
        onClick_Cancle() {
            d.Instance.Send(a.UIFightReady_CancleGame);
        }
        updateTime(e) {
            this.label_time.text = e + "秒";
        }
        updatePlayer(e) {
            if (this.box_sh.visible = Y.curMapID == Y.mapID_sh, null != e) {
                var t = [], i = [];
                for (let n = 0; n < e.length; n++) {
                    const a = e[n];
                    var s = {
                        img_head: {
                            skin: a.wxtxurl
                        },
                        label_name: {
                            text: a.wxname
                        }
                    };
                    1 == a.team ? t.push(s) : i.push(s);
                }
                this.checkTeamNum(t), this.checkTeamNum(i), this.list_playerblue.array = t, Y.curMapID == Y.mapID_sh ? this.list_playerred.array = [] : this.list_playerred.array = i;
            }
        }
        checkTeamNum(e) {
            for (let t = e.length; t < 3; t++) {
                e.push({
                    img_head: {
                        skin: ""
                    },
                    label_name: {
                        text: ""
                    }
                });
            }
        }
    }
    class Mp extends n.ui_dialog.d_MobileShopUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.CLICK, this, this.onClickClose), this.sp_jump.on(Laya.Event.CLICK, this, this.onClickJump);
        }
        onClickJump() {
            le.Instance.getUrl();
        }
        onClickClose() {
            d.Instance.Send(a.UIMobileShop_Close);
        }
    }
    class Ap extends n.ui_dialog.d_MoreGameFullUI {
        constructor() {
            super(), this.moveIndex = 0, this.moveDir = 1, this.advImageIndex = 0, this.img_random.on(Laya.Event.CLICK, this, this.onClickRandom), 
            this.img_continue.on(Laya.Event.CLICK, this, this.CloseUI), this.list_gamelist.hScrollBarSkin = "", 
            this.list_gamelist.array = null, this.list_gamelist.renderHandler = new Laya.Handler(this, this.adRenderHandler), 
            this.list_gamelist.on("mousedown", this, this.OnListMoveDown), this.list_gamelist.on("mouseup", this, this.OnListMoveUp);
        }
        initUI() {
            this.label_time.text = "", this.img_random.visible = !0;
        }
        CloseUI() {
            this.list_gamelist.array = [], d.Instance.Send(a.UIMoreGameFull_Close);
        }
        WaitADData(e) {}
        OnListMoveDown(e) {
            this.moveDir = 0;
        }
        OnListMoveUp(e) {
            this.moveDir = 1, this.moveIndex = this.list_gamelist.startIndex;
        }
        MoveGameList() {
            0 != this.moveDir && null != this.list_gamelist.array && 0 != this.list_gamelist.array.length && (1 == this.moveDir && (this.moveIndex += 2), 
            2 == this.moveDir && (this.moveIndex -= 2), this.moveIndex < 0 && (this.moveIndex = 2, 
            this.moveDir = 1), this.moveIndex > this.list_gamelist.array.length + 1 - 10 && (this.moveIndex -= 4, 
            this.moveDir = 2), this.list_gamelist.tweenTo(this.moveIndex, 200));
        }
        SetGameList() {
            var e = [], t = [];
            if (s.isWXPlatform) {
                e = B.Instance.allAdvButData;
                for (var i = 0; i < e.length; i++) {
                    var n = e[i], a = Math.random() > .6, o = {
                        key: "",
                        scale: 1,
                        data: n,
                        img_icon: {
                            skin: n.otherIconUrl
                        },
                        img_hot: {
                            visible: a
                        },
                        label_name: {
                            x: 0,
                            text: n.otherName
                        }
                    };
                    t.push(o);
                }
            }
            this.list_gamelist.repeatX = Math.floor(t.length / 2 + .5), this.list_gamelist.array = t;
        }
        adRenderHandler(e, t) {
            var i = e.getChildByName("img_click");
            i.off("click", this, this.clickAD), i.on("click", this, this.clickAD, [ e, t ]), 
            "" != e.dataSource.key && (i.scaleX = e.dataSource.scale, i.scaleY = e.dataSource.scale, 
            i.play(0, !0, e.dataSource.key));
        }
        clickAD(e, t) {
            le.Instance.GotoOtherGame("更多游戏Icon", e.dataSource.data, 100, null, !0);
        }
        onClickRandom() {
            this.img_random.visible = !1, this.randomGame();
        }
        randomGame() {
            if (!this.noClickGame() && null != this.list_gamelist && null != this.list_gamelist.array && this.list_gamelist.array.length > 0) {
                var e = Math.floor(100 * Math.random()) % this.list_gamelist.array.length;
                console.log("random r" + e);
                var t = this.list_gamelist.array[e];
                null != t && le.Instance.GotoOtherGame("更多游戏Icon", t.data, 100, null, !0);
            }
        }
        noClickGame() {
            return this.cacheAdLsit = B.Instance.GetNoClickAppIDList_All(), 0 == this.cacheAdLsit.length ? (console.log("没有可以强跳转的游戏！"), 
            !1) : (Math.random() > .5 && this.advImageIndex++, this.cacheAdLsit.length > 0 && this.advImageIndex >= this.cacheAdLsit.length && (this.advImageIndex = 0), 
            this.adImageData = this.cacheAdLsit[this.advImageIndex], null != this.adImageData && (this.advImageIndex++, 
            le.Instance.GotoOtherGame("激励视频跳转", this.adImageData, 100, null, !0)), !0);
        }
    }
    class Op extends n.ui_dialog.d_NativeInterstitialUI {
        constructor() {
            super(), this.img_pictureAD.on(Laya.Event.MOUSE_DOWN, this, this.onClick_OK), this.img_closeAD.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Cancle), 
            this.img_AdClick.on(Laya.Event.MOUSE_DOWN, this, () => {
                le.Instance.onClickOppoNative();
            });
        }
        onClick_OK() {
            d.Instance.Send(a.UINativeInterstitial_Ok);
        }
        onClick_Cancle() {
            d.Instance.Send(a.UINativeInterstitial_Close);
        }
        updateData(e, t, i) {
            this.label_titleAD.text = e, this.img_pictureAD.skin = t;
        }
    }
    class Ep {
        constructor() {
            this.path = "ui_dialog/d_OnlineReward.scene", this.isLoad = !1, this.activeId = 8001, 
            this.nextGetTime = 0, this.curOnlineRewardTime = 0, this.curOnlineMainTime = 0, 
            this.MaxonlineTime = 1, d.Instance.Reg(a.UIOnlineReward_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIOnlineReward_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(14052, e => {
                this.s2c_active_info_ot(e);
            }), w.Instance.RegisterNet(14056, e => {
                this.s2c_active_get_ot(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Ep.instance = new Ep()), Ep.instance;
        }
        s2c_active_info_ot(e) {
            if (e && e.id == this.activeId) {
                if (this.curOnlineRewardTime = e.count, this.curOnlineMainTime = e.count, e.r1 && e.r1.length > 0) {
                    var t = e.r1;
                    t.sort(function(e, t) {
                        return e.index - t.index;
                    }), this.MaxonlineTime = t[t.length - 1].need;
                    for (let e = 0; e < t.length; e++) {
                        const i = t[e];
                        if (0 == i.state) {
                            this.nextGetTime = i.need;
                            break;
                        }
                    }
                    w.Instance.GetNetMsgData("c2s_red_point").Send({});
                }
                this.uiControl && this.uiControl.updataUI(e);
            }
        }
        s2c_active_get_ot(e) {
            e && 1 == e.code && w.Instance.GetNetMsgData("c2s_active_info_ot").Send({
                id: this.activeId
            });
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            w.Instance.GetNetMsgData("c2s_active_info_ot").Send({
                id: this.activeId
            }), this.uiControl.popup(), s.isVivoPlatform && le.Instance.api.showSystemBanner({
                style: v.Center_bottom
            });
        }
        Close() {
            s.isVivoPlatform && le.Instance.api.hideSystemBanner(), this.uiControl && this.uiControl.close();
        }
    }
    Ep.instance = null;
    class Gp extends n.ui_dialog.d_OnlineRewardUI {
        constructor() {
            super(), this.canGetIndex = 0, this.sTime = 0, this.curTime = 0, this.img_get.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetReward), 
            this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose), this.list_reward.hScrollBarSkin = "", 
            this.list_reward.renderHandler = new Laya.Handler(this, this.onList_RewardRender);
        }
        onEnable() {
            this.updateTime(), Laya.timer.loop(1e3, this, this.updateTime);
        }
        onDisable() {
            Laya.timer.clear(this, this.updateTime);
        }
        updateTime() {
            this.label_time.visible = Ep.Instance.curOnlineMainTime < Ep.Instance.MaxonlineTime, 
            this.label_time.text = "已在线 " + q.ChangeHourMinutestr(Ep.Instance.curOnlineRewardTime) + (s.OnlineRewardTime % 60 < 10 ? "0" + s.OnlineRewardTime % 60 : s.OnlineRewardTime % 60);
        }
        onList_RewardRender(e, t) {
            var i = e.getChildByName("img_reward");
            i.off("mousedown", this, this.onClickShowTips), i.on("mousedown", this, this.onClickShowTips, [ e.dataSource.itemId1 ]);
        }
        onClickShowTips(e) {
            d.Instance.Send(a.UIItemTips_Open, e);
        }
        onClickGetReward() {
            this.canGetIndex && w.Instance.GetNetMsgData("c2s_active_get_ot").Send({
                id: Ep.Instance.activeId,
                index: this.canGetIndex,
                type: 1
            });
        }
        onClickClose() {
            d.Instance.Send(a.UIOnlineReward_Close);
        }
        updataUI(e) {
            if (e) {
                var t = [], i = e.r1;
                i.sort(function(e, t) {
                    return e.index - t.index;
                });
                for (let e = 0; e < i.length; e++) {
                    const a = i[e], o = i[e + 1];
                    var s = vu.Instance.GetItemData(a.reward[0].id);
                    if (a) {
                        var n = {
                            itemId1: a.reward[0].id,
                            img_reward: {
                                skin: null != s && (1 == s.type || 4 == s.type || 5 == s.type) ? s.icon : ""
                            },
                            label_count: {
                                text: "x" + a.reward[0].num
                            },
                            label_jd: {
                                text: a.need + "分钟"
                            },
                            img_canget: {
                                visible: 1 == a.state
                            },
                            img_jd: {
                                skin: 0 != a.state ? "event/zxfl_bg_005.png" : "event/zxfl_bg_006.png"
                            },
                            img_jdl: {
                                visible: o && 0 != o.state
                            },
                            img_jdb: {
                                visible: o
                            },
                            img_getBlack: {
                                visible: 2 == a.state
                            },
                            img_get: {
                                visible: 2 == a.state
                            }
                        };
                        t.push(n);
                    }
                }
                this.list_reward.array = t, this.canGetIndex = 0;
                for (let e = 0; e < i.length; e++) {
                    const t = i[e];
                    if (t && 1 == t.state) {
                        this.canGetIndex = t.index;
                        break;
                    }
                }
                this.img_get.disabled = 0 == this.canGetIndex;
            }
        }
    }
    class Rp {
        constructor() {
            this.curSelectSubId = 0, this.curSelectSub2Id = 0, this.curSelectSubHeroId = 0, 
            this.isOpen = !1, this.path = "ui_dialog/d_personal_Info.scene", this.isLoad = !1, 
            this.achRedVidible = !1, this.allMWAttr = {}, d.Instance.Reg(a.UIpersonal_info_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UIpersonal_info_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIpersonal_updateRed, e => {
                this.UpdateRed(e[0]);
            }), d.Instance.Reg(a.UIpersonal_UpdateInfo, e => {
                this.UpdateInfo();
            }), w.Instance.RegisterNet(11024, e => {
                this.s2c_player_show(e);
            }), w.Instance.RegisterNet(12027, e => {
                this.s2c_pvp_achieve(e);
            }), w.Instance.RegisterNet(12029, e => {
                this.s2c_pvp_history(e);
            }), w.Instance.RegisterNet(11026, e => {
                this.s2c_shange_show_id(e);
            }), w.Instance.RegisterNet(11028, e => {
                this.s2c_get_achieve_reward(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Rp.instance = new Rp()), Rp.instance;
        }
        UpdateRed(e) {
            this.achRedVidible = e;
        }
        UpdateInfo() {
            w.Instance.GetNetMsgData("c2s_red_point").Send({}), w.Instance.GetNetMsgData("c2s_pvp_achieve").Send({}), 
            w.Instance.GetNetMsgData("c2s_pvp_history").Send({}), this.infoId && w.Instance.GetNetMsgData("c2s_player_show").Send({
                playerid: this.infoId
            });
        }
        Open(e) {
            this.infoId = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, ie.Instance.addUI(this), this.UpdateInfo(), d.Instance.Send(a.UIGameMain_HideWxClup), 
            s.isTTPlatform && le.Instance.ShowInterstitialAd(0), s.isVivoPlatform && le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 43,
                y: 332,
                width: 120,
                height: 120,
                style: I.icon
            } ]);
        }
        s2c_player_show(e) {
            this.cache_s2c_player_show = e, this.uiControl && this.isOpen && (this.uiControl.showHeroID = this.uiControl.tempShowHeroID >= 0 ? this.uiControl.tempShowHeroID : 1, 
            this.uiControl.updateSub(Rp.Instance.curSelectSubId));
        }
        s2c_pvp_achieve(e) {
            this.cache_s2c_pvp_achieve = e, this.uiControl && this.isOpen && this.uiControl.updateSub(Rp.Instance.curSelectSubId);
        }
        s2c_pvp_history(e) {
            this.cache_s2c_pvp_history = e;
        }
        s2c_get_achieve_reward(e) {
            1 == e.code && this.UpdateInfo();
        }
        s2c_shange_show_id(e) {
            1 == e.code && w.Instance.GetNetMsgData("c2s_player_show").Send({
                playerid: s.playerID
            });
        }
        Close() {
            this.isOpen && (this.isOpen = !1, te.Instance.removeScene3d(), ie.Instance.removeUI(this)), 
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.icon), d.Instance.Send(a.UIGameMain_ShowWxClup), 
            d.Instance.Send(a.UIFightReady_UpdateWing);
        }
    }
    Rp.instance = null;
    class Bp extends n.ui_dialog.d_personal_InfoUI {
        constructor() {
            super(), this.curPlayerID = "", this.classType = 0, this.isShowSkin = !1, this.showHeroID = 1, 
            this.tempShowHeroID = 1, this.showBaseHeroID = 1, q.fixedFullBG(this, [ "backbg" ]), 
            this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.list_sub.vScrollBarSkin = "", 
            this.list_sub.renderHandler = new Laya.Handler(this, this.onList_subRender), this.list_Sub2.vScrollBarSkin = "", 
            this.list_Sub2.renderHandler = new Laya.Handler(this, this.onList_Sub2Render), this.btn_changeHero.on(Laya.Event.MOUSE_DOWN, this, this.onClickChangeHero), 
            this.btn_closeChooseHero.on(Laya.Event.MOUSE_DOWN, this, this.onClickCloseChooseHero), 
            this.btn_saveChooseHero.on(Laya.Event.MOUSE_DOWN, this, this.onClickSaveChooseHero), 
            this.btn_ShowAllachieveReward.on(Laya.Event.MOUSE_DOWN, this, this.onClickShowAllachieveReward), 
            this.img_closeTips.on(Laya.Event.MOUSE_DOWN, this, this.onClickHideAllachieveReward), 
            this.btn_GetachieveReward.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetachieveReward), 
            this.btn_GetVideoachieveReward.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetachieveVideoReward), 
            this.img_copy.on(Laya.Event.MOUSE_DOWN, this, this.onClickCopy), this.list_achieve.vScrollBarSkin = "", 
            this.list_achieve.renderHandler = new Laya.Handler(this, this.onList_achieveRender), 
            this.list_history.vScrollBarSkin = "", this.list_history.renderHandler = new Laya.Handler(this, this.onList_historyRender), 
            this.list_HeroSub.hScrollBarSkin = "", this.list_HeroSub.renderHandler = new Laya.Handler(this, this.onList_HeroSubRender), 
            this.list_hero.vScrollBarSkin = "", this.list_hero.renderHandler = new Laya.Handler(this, this.onList_heroRender), 
            this.list_achReward.vScrollBarSkin = "", this.list_achReward.renderHandler = new Laya.Handler(this, this.onList_achRewardRender);
        }
        updateInfo() {}
        onClickCopy() {
            (s.isWXPlatform || s.isTTPlatform || s.isOppoPlatform || s.isVivoPlatform) && this.curPlayerID && le.Instance.setClipboardData(this.curPlayerID);
        }
        onClickChangeHero() {
            this.box_personal_info.visible = !1, this.box_achievement.visible = !1, this.box_history.visible = !1, 
            this.box_chooseHero.visible = !0, this.box_achReward.visible = !1, this.list_sub.visible = !1, 
            this.list_Sub2.visible = !0, this.btn_close.visible = !1, this.updateSub2(0), this.updateSubHero(0);
        }
        onClickShowAllachieveReward() {
            this.box_achReward.visible = !0;
        }
        onClickHideAllachieveReward() {
            this.box_achReward.visible = !1;
        }
        onClickGetachieveReward() {
            this.nextReward && w.Instance.GetNetMsgData("c2s_get_achieve_reward").Send({
                index: this.nextReward.index,
                type: 1
            });
        }
        onClickGetachieveVideoReward() {
            this.nextReward && (s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_get_achieve_reward").Send({
                index: this.nextReward.index,
                type: 2
            }) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_get_achieve_reward").Send({
                    index: this.nextReward.index,
                    type: 2
                });
            }, 31));
        }
        onClickCloseChooseHero() {
            this.updateSub(0);
        }
        onClickSaveChooseHero() {
            w.Instance.GetNetMsgData("c2s_shange_show_id").Send({
                id: this.tempShowHeroID >= 0 ? this.tempShowHeroID : 1
            });
        }
        onList_subRender(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickUseSub), i.on("click", this, this.onClickUseSub, [ e, t ]);
        }
        onClickUseSub(e, t) {
            this.updateSub(t), s.is233mlcsjPlatform && le.Instance.showAppInterstitialad(60);
        }
        updateSub(e) {
            Rp.Instance.curSelectSubId = e;
            var t = [], i = [ "个人主页", "成就生涯", "历史战绩" ];
            Rp.Instance.infoId != s.playerID && (i = [ "个人主页" ]);
            for (let e = 0; e < i.length; e++) {
                const s = i[e];
                if (s) {
                    var n = {
                        label_name: {
                            text: s,
                            color: e == Rp.Instance.curSelectSubId ? "#ffffff" : "#85baff"
                        },
                        sp_select: {
                            visible: e == Rp.Instance.curSelectSubId
                        },
                        img_red: {
                            visible: 1 == e && Rp.Instance.achRedVidible
                        }
                    };
                    t.push(n);
                }
            }
            switch (this.btn_changeHero.visible = Rp.Instance.infoId == s.playerID, this.list_sub.array = t, 
            this.box_personal_info.visible = 0 == e, this.box_achievement.visible = 1 == e, 
            this.box_history.visible = 2 == e, this.box_chooseHero.visible = !1, this.box_achReward.visible = !1, 
            this.list_sub.visible = !0, this.list_Sub2.visible = !1, this.btn_close.visible = !0, 
            this.img_curSub.skin = "event/img_00" + e + ".png", e) {
              case 0:
                this.update_personal_info();
                break;

              case 1:
                this.update_achievement();
                break;

              case 2:
                this.update_history();
            }
            0 == e ? this.show3dModel(this.showHeroID) : this.hide3dModel();
        }
        onList_Sub2Render(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickUseSub2), i.on("click", this, this.onClickUseSub2, [ e, t ]);
        }
        onClickUseSub2(e, t) {
            this.updateSub2(t);
        }
        onList_achieveRender(e, t) {}
        onList_historyRender(e, t) {}
        updateSub2(e) {
            Rp.Instance.curSelectSub2Id = e;
            var t = [], i = [ "英雄", "皮肤" ];
            for (let e = 0; e < i.length; e++) {
                const n = i[e];
                if (n) {
                    var s = {
                        label_name: {
                            text: n,
                            color: e == Rp.Instance.curSelectSub2Id ? "#ffffff" : "#85baff"
                        },
                        sp_select: {
                            visible: e == Rp.Instance.curSelectSub2Id
                        }
                    };
                    t.push(s);
                }
            }
            this.list_Sub2.array = t, this.isShowSkin = 1 == e, this.label_skinTips.visible = 1 == e, 
            this.list_HeroSub.visible = 0 == e, this.updateHero(this.showHeroID);
        }
        onEnable() {
            this.box_personal_info.visible = !0, this.box_achievement.visible = !1, this.box_history.visible = !1, 
            this.box_chooseHero.visible = !1, this.box_achReward.visible = !1, this.list_sub.visible = !0, 
            this.list_Sub2.visible = !1, te.Instance.isShow ? te.Instance.hideCurSceneModel("UI_personal_info", this) : te.Instance.init3DScene("UI_personal_info", this), 
            this.updateSub(0);
        }
        update_personal_info() {
            let e = Rp.Instance.cache_s2c_player_show;
            if (e) {
                this.img_heroicon.skin = e.url, this.label_playername.text = e.name, this.label_playerID.text = "ID:" + (e.playerid ? e.playerid : Rp.Instance.infoId), 
                this.curPlayerID = (e.playerid ? e.playerid : Rp.Instance.infoId) + "", this.img_copy.x = this.label_playerID.x + 16 * this.label_playerID.text.length + 10, 
                this.img_copy.visible = s.isWXPlatform || s.isTTPlatform || s.isOppoPlatform || s.isVivoPlatform;
                var t = mp.Instance.GetRankData(e.stagel.length > 0 ? e.stagel[0].stage : 0);
                this.label_curRank.text = t ? t.rankName : "", this.img_curRankicon.skin = t ? t.rankIcon : "";
                var i = mp.Instance.GetRankData(e.stagel.length > 0 ? e.stagel[0].maxstage : 0);
                this.label_bestRank.text = i ? i.rankName : "", this.img_bestRankicon.skin = i ? i.rankIcon : "";
                let o = 0, l = 0;
                if (e.battlenuml.length > 0) for (let t = 0; t < e.battlenuml.length; t++) {
                    const i = e.battlenuml[t];
                    1033 == i.mapid && (o = i.count), 1036 == i.mapid && (l = i.count);
                }
                this.label_rankScore.text = o + "", this.label_SHScore.text = l + "", this.label_haveHero.text = e.rolenum, 
                this.label_haveSkin.text = e.skinnum, this.label_gameDay.text = Math.floor((new Date().getTime() - 1e3 * e.regtime) / 864e5 + 1) + "", 
                this.label_winNum.text = e.winnum, this.label_winPro.text = 0 == e.failnum ? "100.00%" : (e.winnum / (e.failnum + e.winnum) * 100).toFixed(2) + "%", 
                this.label_MVPNum.text = e.mvpnum, this.showHeroID = e.showid;
                let h = [];
                if (e.rolel.length > 0) for (let t = 0; t < e.rolel.length; t++) {
                    const i = e.rolel[t];
                    if (i && 1033 == i.mapid && i.roleshow.length > 0) {
                        const e = i.roleshow;
                        for (let t = 0; t < e.length; t++) {
                            const i = e[t];
                            h.push({
                                roleID: i.id,
                                count: i.win + i.fail
                            });
                        }
                    }
                }
                h.sort(function(e, t) {
                    return t.count - e.count;
                });
                for (let e = 0; e < h.length; e++) {
                    var n = Q.Instance.getUnitAttribute(h[e].roleID);
                    if (n) var a = ce.Instance.getModel(n.modelID);
                    this["img_Commonly_used" + (e + 1)] && (this["img_Commonly_used" + (e + 1)].skin = a ? a.heroIcon : "");
                }
            }
            0 == this.showHeroID && s.playerID == e.playerid && (w.Instance.GetNetMsgData("c2s_shange_show_id").Send({
                id: 1
            }), this.showHeroID = 1);
        }
        update_achievement() {
            let e = Rp.Instance.cache_s2c_pvp_achieve, t = [], i = [];
            if (e) {
                let h = gu.Instance.achievement;
                for (let i = 0; i < h.length; i++) {
                    let n;
                    for (let t = 0; t < e.achieve.length; t++) {
                        const s = e.achieve[t];
                        s.id == h[i].id && (n = s);
                    }
                    let a, o = 0;
                    if (n) for (let e = 0; e < h[i].lv.length; e++) {
                        if ((a = h[i].lv[e]) > n.num || e == h[i].lv.length - 1) {
                            o = a;
                            break;
                        }
                        0 == o && (o = a);
                    }
                    var s = {
                        img_achiveTitle: {
                            skin: h[i].img,
                            gray: null == n
                        },
                        label_name: {
                            text: h[i].desc
                        },
                        label_num: {
                            text: n ? n.num >= a ? "已满级" : n.num + "/" + o : "0/" + h[i].lv[0]
                        },
                        isHave: {
                            visible: null == n
                        }
                    };
                    t.push(s);
                }
                var n = e.achievelv, a = String(n).split("");
                for (let e = 0; e < 3; e++) (a[e] || "0" == a[e]) && this["img_acheiveNum" + (e + 1)] && (this["img_acheiveNum" + (e + 1)].skin = "event/cjsy_font_00" + a[e] + ".png"), 
                this["img_acheiveNum" + (e + 1)] && (this["img_acheiveNum" + (e + 1)].visible = a[e] || "0" == a[e]);
                if (a.length >= 3 && (this.img_acheiveNum1.x = 1114, this.img_acheiveNum2.x = 1139, 
                this.img_acheiveNum3.x = 1164), 2 == a.length && (this.img_acheiveNum1.x = 1128, 
                this.img_acheiveNum2.x = 1153), 1 == a.length && (this.img_acheiveNum1.x = 1139), 
                this.label_achieveRank.text = "成就等级:" + e.achievelv, e.config && (this.nextReward = e.config[e.achieveRI]), 
                this.nextReward) {
                    this.label_achieveRewardNum.text = "x" + this.nextReward.reward[0].num;
                    var o = vu.Instance.GetItemData(this.nextReward.reward[0].id);
                    this.img_achieveReward.skin = null != o && (1 == o.type || 4 == o.type || 5 == o.type) ? o.icon : "", 
                    this.btn_GetachieveReward.disabled = e.achievelv < this.nextReward.needLv, this.btn_GetVideoachieveReward.disabled = e.achievelv < this.nextReward.needLv;
                }
                if (this.label_NextAchieve.text = null == this.nextReward ? "奖励已领完" : this.nextReward.needLv + "级成就奖励", 
                this.img_acheveGetbg.visible = null != this.nextReward, this.img_achieveReward.visible = null != this.nextReward, 
                this.label_achieveRewardNum.visible = null != this.nextReward, this.btn_GetachieveReward.visible = null != this.nextReward, 
                this.btn_GetVideoachieveReward.visible = null != this.nextReward, e.config) for (let t = 0; t < e.config.length; t++) {
                    const s = e.config[t];
                    if (s && s.reward.length > 0) {
                        o = vu.Instance.GetItemData(s.reward[0].id);
                        var l = {
                            sort: s.index > e.achieveRI ? 1 : -1,
                            img_achReward: {
                                skin: null != o && (1 == o.type || 4 == o.type || 5 == o.type) ? o.icon : ""
                            },
                            label_achLv: {
                                text: s.needLv
                            },
                            label_achReward: {
                                text: s.needLv + "级奖励"
                            },
                            label_achRewardNum: {
                                text: "x" + s.reward[0].num
                            },
                            label_achRewardGet: {
                                text: s.index > e.achieveRI ? e.achievelv >= s.needLv ? "可领取" : "未达成" : "已领取",
                                color: s.index > e.achieveRI ? "#accdff" : "#ffd1ac"
                            },
                            img_achRewardGet: {
                                visible: s.index <= e.achieveRI
                            }
                        };
                        i.push(l);
                    }
                }
            }
            this.list_achieve.array = t, i.sort(function(e, t) {
                return t.sort - e.sort;
            }), this.list_achReward.array = i;
        }
        update_history() {
            let e = Rp.Instance.cache_s2c_pvp_history, t = [];
            if (e) for (let a = 0; a < e.history.length; a++) {
                const o = e.history[a];
                if (o) {
                    var i = Q.Instance.getUnitAttribute(o.roleid);
                    if (i) var s = ce.Instance.getModel(i.modelID);
                    let e = [];
                    for (let t = 0; t < o.equip.length; t++) {
                        const i = o.equip[t].id;
                        let s = xl.Instance.getEquip(i);
                        s && e.push(s);
                    }
                    var n = {
                        img_item1: {
                            visible: o.equip.length > 0,
                            skin: e[0] ? e[0].icon : "event/lszj_bg_002.png"
                        },
                        img_item2: {
                            visible: o.equip.length > 0,
                            skin: e[1] ? e[1].icon : "event/lszj_bg_002.png"
                        },
                        img_item3: {
                            visible: o.equip.length > 0,
                            skin: e[2] ? e[2].icon : "event/lszj_bg_002.png"
                        },
                        img_item4: {
                            visible: o.equip.length > 0,
                            skin: e[3] ? e[3].icon : "event/lszj_bg_002.png"
                        },
                        img_item5: {
                            visible: o.equip.length > 0,
                            skin: e[4] ? e[4].icon : "event/lszj_bg_002.png"
                        },
                        img_item6: {
                            visible: o.equip.length > 0,
                            skin: e[5] ? e[5].icon : "event/lszj_bg_002.png"
                        },
                        img_heroIcon: {
                            skin: s ? s.heroIcon : ""
                        },
                        sp_MVP: {
                            visible: 1 == o.isMVP
                        },
                        img_winorfail: {
                            skin: 1 == o.winfail ? "fightend/dwzs_img_001.png" : "fightend/dwzs_img_002.png"
                        },
                        label_kill: {
                            text: o.killnum
                        },
                        label_dead: {
                            text: o.deadnum
                        },
                        label_help: {
                            text: o.assistnum
                        },
                        label_map: {
                            text: 1033 == o.mapid ? "排位赛" : 1036 == o.mapid ? "生化模式" : ""
                        },
                        label_sh: {
                            visible: 1036 == o.mapid || 0 == o.equip.length
                        }
                    };
                    t.push(n);
                }
            }
            this.list_history.array = t;
        }
        onList_HeroSubRender(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickUseSubHero), i.on("click", this, this.onClickUseSubHero, [ e, t ]);
        }
        onClickUseSubHero(e, t) {
            this.clickUseSubHero(t);
        }
        clickUseSubHero(e) {
            this.updateSubHero(e);
        }
        updateSubHero(e) {
            Rp.Instance.curSelectSubHeroId = e;
            var t = [], i = [ "全部", "战士", "法师", "射手", "刺客" ];
            for (let e = 0; e < i.length; e++) {
                const n = i[e];
                if (n) {
                    var s = {
                        label_sub: {
                            text: n,
                            color: e == Rp.Instance.curSelectSubHeroId ? "#ffffff" : "#85baff"
                        },
                        sp_select: {
                            visible: e == Rp.Instance.curSelectSubHeroId
                        }
                    };
                    t.push(s);
                }
            }
            this.list_HeroSub.array = t, this.classType = e, this.updateHero(this.showHeroID);
        }
        onList_heroRender(e, t) {
            var i = e.getChildByName("btn_select");
            i.off("click", this, this.onClickHero), i.on("click", this, this.onClickHero, [ e, t ]);
        }
        onClickHero(e, t) {
            this.updateHero(e.dataSource.heroID);
        }
        updateHero(e) {
            this.tempShowHeroID = e;
            var t = [];
            if (this.isShowSkin) {
                var i = Q.Instance.getUnitSkinInfo(Q.Instance.getBaseID(this.showBaseHeroID));
                if (null != i && i.length > 0) {
                    t = [];
                    var s = [];
                    s.push(Q.Instance.getBaseID(this.showBaseHeroID));
                    for (let e = 0; e < i.length; e++) s.push(i[e].unitID);
                    for (let e = 0; e < s.length; e++) {
                        const i = Z.Instance.getHaveHero(s[e]);
                        if (i) {
                            n = Q.Instance.getUnitAttribute(i.id), Q.Instance.getBaseID(i.id);
                            if (n) (a = ce.Instance.getModel(n.modelID)) && (o = {
                                heroSort: -1 == i.count ? 999 : i.count,
                                heroInfo: i,
                                heroID: i.id,
                                count: i.count,
                                img_heroIcon: {
                                    skin: a.heroHalfPic ? a.heroHalfPic : a.heroIcon
                                },
                                label_name: {
                                    text: a.heroName
                                },
                                sp_select: {
                                    visible: this.tempShowHeroID == n.unitID
                                }
                            }, -1 == i.count && 0 == i.demoEtime && t.push(o));
                        }
                    }
                }
            } else {
                this.showBaseHeroID = e;
                for (let e = 0; e < Q.Instance.heroShowList.length; e++) {
                    const i = Z.Instance.getHaveHero(Q.Instance.heroShowList[e]);
                    var n, a, o;
                    if (i) if (n = Q.Instance.getUnitAttribute(i.id)) (a = ce.Instance.getModel(n.modelID)) && (o = {
                        heroSort: -1 == i.count ? 999 : i.count,
                        heroInfo: i,
                        heroID: i.id,
                        count: i.count,
                        img_heroIcon: {
                            skin: a.heroIcon
                        },
                        label_name: {
                            text: a.heroName
                        },
                        sp_select: {
                            visible: this.tempShowHeroID == n.unitID
                        }
                    }, this.classType ? -1 == i.count && n.classType == this.classType && 0 == i.demoEtime && t.push(o) : -1 == i.count && 0 == i.demoEtime && t.push(o));
                }
            }
            this.list_hero.array = t, this.show3dModel(this.tempShowHeroID);
        }
        onList_achRewardRender() {}
        show3dModel(e) {
            if (0 != e) {
                var t = Q.Instance.getUnitAttribute(e);
                if (t) {
                    var i = ce.Instance.getModel(t.modelID);
                    if (i && (!this.showModelInfo || this.showModelInfo.curShowRes == i.resName && this.showModelInfo.modelData == i || (te.Instance.destroyModelById(this.showModelInfo.instanceId), 
                    this.showModelInfo = null), (null == this.showModelInfo || this.showModelInfo.isDestroy) && te.Instance.checkShowModel("UI_personal_info"))) {
                        var n = s.systemInfo.screenWidth > s.systemInfo.screenHeight ? s.systemInfo.screenWidth : s.systemInfo.screenHeight, a = Math.round(.85 * n * s.systemInfo.pixelRatio / s.screenScale);
                        this.showModelInfo = te.Instance.load3DModel("UI_personal_info", i, i.resName, a, s.fixStageY + 566, 3, 180, a - 250, a + 250, !1);
                    }
                }
            }
        }
        hide3dModel() {
            this.showModelInfo && (te.Instance.destroyModelById(this.showModelInfo.instanceId), 
            this.showModelInfo = null), te.Instance.removeScene3d();
        }
        closeView() {
            d.Instance.Send(a.UIpersonal_info_Close);
        }
    }
    class Hp {
        constructor() {
            this.path = "ui_dialog/d_PrivacyPolicy.scene", this.isLoad = !1, this.isOpen = !1, 
            d.Instance.Reg(a.UIPrivacyPolicy_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIPrivacyPolicy_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (Hp.instance = new Hp()), Hp.instance;
        }
        Open(e = !1, t = !0) {
            this.isshowbox = e, this.isshowtips = t, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.popup(), this.uiControl.onDialogOpen();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    Hp.instance = null;
    class Fp extends n.ui_dialog.d_PrivacyPolicyUI {
        constructor() {
            super(), this.prevX = 0, this.prevY = 0, this.btn_close.on(Laya.Event.CLICK, this, this.onClosePrivacyPolicy), 
            this.btn_NO.on(Laya.Event.CLICK, this, this.onClickNO), this.btn_YES.on(Laya.Event.CLICK, this, this.onClickYES), 
            this.text_PrivacyPolicy.on(Laya.Event.MOUSE_DOWN, this, this.startScrollText), this.btn_PrivacyPolicy.on(Laya.Event.MOUSE_DOWN, this, this.onClickPrivacyPolicy), 
            this.initText();
        }
        onDialogOpen() {
            this.box_PrivacyPolicy.visible = Hp.Instance.isshowbox, this.initText();
        }
        initText() {
            this.label_txt1.text = "我们非常重视您的个人信息和隐私保护,为了更好的保障您的个人利益,在您使用前，请务必阅读我们的《用户隐私协议》。\n如果您同意此协议,请点击“同意并继续'开始游戏。";
            let e = "PrivacyPolicy/QddPrivacyPolicy.txt?timestamp=";
            s.isOppoPlatform && (e = "PrivacyPolicy/oppoPrivacyPolicy.txt?timestamp="), s.isXiaoMiPlatform && (e = "PrivacyPolicy/xiaomiPrivacyPolicy.txt?timestamp="), 
            (s.is233Platform || s.isPCPlatform) && (e = "PrivacyPolicy/233_PrivacyPolicy.txt?timestamp="), 
            Laya.loader.load(s.cdn + e + new Date().getTime(), Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.TEXT), 
            this.text_PrivacyPolicy.scrollX = 0, this.text_PrivacyPolicy.scrollY = 0;
        }
        loadComplete(e) {
            this.text_PrivacyPolicy.text = e;
        }
        onClickPrivacyPolicy() {
            this.box_PrivacyPolicy.visible = !0;
        }
        onClosePrivacyPolicy() {
            this.box_PrivacyPolicy.visible = !1, Hp.Instance.isshowtips || d.Instance.Send(a.UIPrivacyPolicy_Close);
        }
        startScrollText(e) {
            this.prevX = this.text_PrivacyPolicy.mouseX, this.prevY = this.text_PrivacyPolicy.mouseY, 
            Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.scrollText), Laya.stage.on(Laya.Event.MOUSE_UP, this, this.finishScrollText);
        }
        finishScrollText(e) {
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.scrollText), Laya.stage.off(Laya.Event.MOUSE_UP, this, this.finishScrollText);
        }
        scrollText(e) {
            var t = this.text_PrivacyPolicy.mouseX, i = this.text_PrivacyPolicy.mouseY;
            this.text_PrivacyPolicy.scrollX += this.prevX - t, this.text_PrivacyPolicy.scrollY += this.prevY - i, 
            this.prevX = t, this.prevY = i;
        }
        onClickClose() {
            d.Instance.Send(a.UITianFuTips_Close);
        }
        onClickNO() {
            Laya.LocalStorage.removeItem(s.PrivacyPolicyTag), d.Instance.Send(a.UIPrivacyPolicy_Close), 
            d.Instance.Send(a.UILoginModel_AgreePrivacy, !1), le.Instance.exitGame();
        }
        onClickYES() {
            Laya.LocalStorage.setItem(s.PrivacyPolicyTag, s.PrivacyPolicyTag), d.Instance.Send(a.UIPrivacyPolicy_Close), 
            s.isXiaoMiPlatform || d.Instance.Send(a.UILoginModel_AgreePrivacy, !0), s.isAppPlatform && !s.isXiaoMiPlatform && le.Instance.AgreePrivacy();
        }
    }
    class Vp {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_Rank.scene", this.isLoad = !1, this.selfData = null, 
            this.allData = {}, this.cacheData = {}, d.Instance.Reg(a.UIRank_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIRank_GetRankInfo, e => {
                this.updateRank();
            }), d.Instance.Reg(a.UIRank_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(14004, e => {
                this.s2c_get_rank(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Vp.instance = new Vp()), Vp.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.init(), console.log("ttad ShowNativeBannerAD" + s.isAppPlatform + "  " + s.is4399Platform), 
            s.isWcfjlPlatform ? le.Instance.ShowBannerCSJ(2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(0, 415) : (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 988, 387, 344 + s.fixStageX, 360, 1), 
            le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.btn_sub4back.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform))), 
            d.Instance.Send(a.UIGameMain_HideWxClup);
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            d.Instance.Send(a.UIGameMain_ShowWxClup), this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close());
        }
        s2c_get_rank(e) {
            if (this.selfData = e.own, null != e.rank) for (var t = 0; t < e.rank.length; t++) {
                var i = e.rank[t];
                this.allData[i.rank] = i, "" == i.wx_txurl && (i.wx_txurl = "icon/tx_zhans.png"), 
                1 == e.type && i.rank < 5 && (this.cacheData[i.rank] = i);
            }
            this.isOpen && this.uiControl && this.uiControl.updateRank(this.allData, this.selfData, e.rank && e.rank.length < 10), 
            d.Instance.Send(a.UIGameMain_UpdateRank, this.cacheData);
        }
        updateRank() {
            w.Instance.GetNetMsgData("c2s_get_rank").Send({
                type: 1,
                index: 1
            }), this.uiControl && this.uiControl.init();
        }
    }
    Vp.instance = null;
    class jp extends n.ui_dialog.d_RankUI {
        constructor() {
            super(), this.maxRankIndex = 0, this.maxLength = 100, this.isEndPos = !1, this.curSelect = 0, 
            this.rankType = 0, this.img_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickcloseView), 
            this.btn_sub1.on(Laya.Event.CLICK, this, this.onClickSelect1), this.btn_sub2.on(Laya.Event.CLICK, this, this.onClickSelect2), 
            this.btn_sub3.on(Laya.Event.CLICK, this, this.onClickSelect3), this.btn_sub1back.on(Laya.Event.CLICK, this, this.onClickSelect1), 
            this.btn_sub2back.on(Laya.Event.CLICK, this, this.onClickSelect2), this.btn_sub3back.on(Laya.Event.CLICK, this, this.onClickSelect3), 
            this.btn_sub4back.on(Laya.Event.CLICK, this, () => {
                le.Instance.onClickOppoNative();
            }), this.img_pos.on(Laya.Event.CLICK, this, this.onClickPos), this.btn_rankpw.on(Laya.Event.CLICK, this, this.onClickRankPw), 
            this.btn_ranksh.on(Laya.Event.CLICK, this, this.onClickRankSh), this.list_rank.array = null, 
            this.list_rank.vScrollBarSkin = "", this.list_rank.renderHandler = new Laya.Handler(this, this.onRankListRender);
        }
        init() {
            this.rankType = 0, this.updatePos(), this.onClickSelect1();
        }
        updateSelect() {
            this.img_rankpw.visible = 0 == this.rankType, this.img_ranksh.visible = 10 == this.rankType;
        }
        onClickRankPw() {
            0 != this.rankType && (this.rankType = 0, this.updatePos(), this.onClickSelect1());
        }
        onClickRankSh() {
            10 != this.rankType && (this.rankType = 10, this.updatePos(), this.onClickSelect1());
        }
        onClickPos() {
            d.Instance.Send(a.UIRankPos_Open);
        }
        onClickSelect1() {
            this.btn_sub1.visible = !0, this.btn_sub2.visible = !1, this.btn_sub3.visible = !1, 
            this.curSelect = this.rankType + 1, this.clearList(), w.Instance.GetNetMsgData("c2s_get_rank").Send({
                type: this.curSelect,
                index: 1
            });
        }
        onClickSelect2() {
            this.btn_sub1.visible = !1, this.btn_sub2.visible = !0, this.btn_sub3.visible = !1, 
            this.curSelect = this.rankType + 2, 10 == this.rankType && (this.curSelect += 9), 
            this.clearList(), w.Instance.GetNetMsgData("c2s_get_rank").Send({
                type: this.curSelect,
                index: 1
            });
        }
        onClickSelect3() {
            this.btn_sub1.visible = !1, this.btn_sub2.visible = !1, this.btn_sub3.visible = !0, 
            this.curSelect = this.rankType + 3, this.clearList(), w.Instance.GetNetMsgData("c2s_get_rank").Send({
                type: this.curSelect,
                index: 1
            });
        }
        clearList() {
            this.btn_sub1back.visible = !this.btn_sub1.visible, this.btn_sub2back.visible = !this.btn_sub2.visible, 
            this.btn_sub3back.visible = !this.btn_sub3.visible, this.isEndPos = !1, this.list_rank.array = [], 
            Vp.Instance.allData = [], this.updateSelect();
        }
        onClickcloseView() {
            d.Instance.Send(a.UIRank_Close);
        }
        updatePos() {
            var e = mp.Instance.getProvinceByID(Z.Instance.cityID);
            null != e && (9 != e.bigPID ? (this.btn_sub3back.scaleX = 1, this.label_sub1.text = "世界排名", 
            this.label_sub1back.text = "世界排名", this.label_sub2.text = e.bigPName + "排名", this.label_sub2back.text = e.bigPName + "排名", 
            this.label_sub3.text = e.pName + "排名", this.label_sub3back.text = e.pName + "排名", 
            this.label_curPos.text = "当前定位：" + e.bigPName + "-" + e.pName, this.btn_sub4back.x = 500) : (this.btn_sub3back.scaleX = 0, 
            this.label_sub1.text = "世界排名", this.label_sub1back.text = "世界排名", this.label_sub2.text = e.bigPName + "排名", 
            this.label_sub2back.text = e.bigPName + "排名", this.label_curPos.text = "当前定位：" + e.bigPName, 
            this.btn_sub4back.x = 334)), 10 == this.rankType && (this.btn_sub3back.scaleX = 0, 
            this.btn_sub4back.x = 334, this.label_sub1.text = "单人通关", this.label_sub1back.text = "单人通关", 
            this.label_sub2.text = "组队通关", this.label_sub2back.text = "组队通关");
        }
        updateRank(e, t, i) {
            this.isEndPos = i;
            for (var s = [], n = 1; n <= this.maxLength; n++) {
                var a = e[n];
                if (null == a) break;
                this.maxRankIndex = n;
                var o = mp.Instance.GetRankData(a.stage), l = {
                    img_self: {
                        visible: a.playe_id == t.playe_id
                    },
                    img_rank: {
                        visible: n <= 3,
                        skin: 1 == a.rank ? "common/ph_num1.png" : 2 == a.rank ? "common/ph_num2.png" : "common/ph_num3.png"
                    },
                    img_ranknum1: {
                        visible: n > 3,
                        x: n > 9 ? 21 : 36,
                        skin: "common/ph_" + (a.rank >= 10 ? Math.floor(a.rank / 10) : a.rank) + ".png"
                    },
                    img_ranknum2: {
                        visible: n > 9,
                        skin: "common/ph_" + a.rank % 10 + ".png"
                    },
                    img_icon: {
                        skin: a.wx_txurl
                    },
                    img_rankicon: {
                        skin: null != o ? o.rankIcon : "",
                        visible: 0 == this.rankType
                    },
                    label_rank: {
                        text: null != o ? o.rankName : "",
                        visible: 0 == this.rankType
                    },
                    label_star: {
                        text: null != o ? o.curStar : "",
                        visible: 0 == this.rankType
                    },
                    img_starflag: {
                        visible: 0 == this.rankType
                    },
                    label_dungeon: {
                        text: "生化模式第" + a.stage + "关",
                        visible: 10 == this.rankType
                    },
                    label_name: {
                        text: "" == a.wx_name ? "游客" : a.wx_name
                    },
                    label_lv: {
                        text: 10 == this.rankType ? "" : "Lv." + a.lv
                    },
                    label_win: {
                        text: 10 == this.rankType ? "" : "胜场:" + a.win
                    },
                    label_winratio: {
                        text: 10 == this.rankType ? "通关耗时：" + a.mvp + "秒" : "胜率:" + (a.win + a.fail == 0 ? "0%" : Math.floor(100 * u.decimalRound(a.win / (a.win + a.fail))) + "%")
                    },
                    label_mvp: {
                        text: 10 == this.rankType ? "" : "MVP:" + a.mvp
                    }
                };
                s.push(l);
            }
            this.list_rank.array = s, o = mp.Instance.GetRankData(t.stage), this.label_norank.text = t.rank >= 9999 ? "未上榜" : "" + t.rank, 
            this.img_icon.skin = t.wx_txurl, this.img_rankicon.skin = null != o ? o.rankIcon : "", 
            this.img_rankicon.visible = 0 == this.rankType, this.label_rank.text = null != o ? o.rankName : "", 
            this.label_rank.visible = 0 == this.rankType, this.label_star.text = null != o ? "" + o.curStar : "", 
            this.label_star.visible = 0 == this.rankType, this.img_starflag.visible = 0 == this.rankType, 
            this.label_dungeon.text = "生化模式第" + t.stage + "关", this.label_dungeon.visible = 10 == this.rankType, 
            this.label_name.text = "" == t.wx_name ? "游客" : t.wx_name, this.label_lv.text = 10 == this.rankType ? "" : "Lv." + t.lv, 
            this.label_win.text = 10 == this.rankType ? "" : "胜场:" + t.win, this.label_winratio.text = 10 == this.rankType ? "通关耗时：" + t.mvp + "秒" : "胜率:" + (t.win + t.fail == 0 ? "0%" : Math.floor(100 * u.decimalRound(t.win / (t.win + t.fail))) + "%"), 
            this.label_mvp.text = 10 == this.rankType ? "" : "MVP:" + t.mvp;
        }
        onRankListRender(e, t) {
            !this.isEndPos && this.maxRankIndex < this.maxLength && t + 1 == this.maxRankIndex && w.Instance.GetNetMsgData("c2s_get_rank").Send({
                type: this.curSelect,
                index: Math.floor(this.maxRankIndex / 10) + 1
            });
        }
    }
    class Wp extends n.ui_dialog.d_RankPosUI {
        constructor() {
            super(), this.list_select.array = null, this.list_select.vScrollBarSkin = "", this.list_select.renderHandler = new Laya.Handler(this, this.onPosListRender), 
            this.btn_select.on(Laya.Event.MOUSE_DOWN, this, this.onClickPop), this.img_ok.on(Laya.Event.MOUSE_DOWN, this, this.onClickStart), 
            this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose), this.img_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose);
        }
        omDialogOpen() {
            s.isTTPlatform || s.isH5Platform ? (this.img_close.visible = !0, this.img_ok.x = 505) : this.img_close.visible = !1;
        }
        updateList(e) {
            var t = [];
            if (null != e) for (var i in e) for (var s = e[i], n = 0; n < s.data.length; n++) {
                var a = s.data[n], o = {
                    id: a.id,
                    label_text: {
                        text: a.name
                    }
                };
                t.push(o);
            }
            t.push({
                id: 9,
                label_text: {
                    text: "其他"
                }
            }), this.list_select.array = t;
        }
        onClickStart() {
            d.Instance.Send(a.UIRankPos_Save);
        }
        onClickClose() {
            d.Instance.Send(a.UIRankPos_Close);
        }
        onClickPop() {
            d.Instance.Send(a.UIRankPos_Pop);
        }
        updateView(e, t) {
            null != e && (9 == e.bigPID ? this.label_curpos.text = e.bigPName : this.label_curpos.text = e.bigPName + "-" + e.pName), 
            this.list_select.visible = t;
        }
        onPosListRender(e, t) {
            var i = e.getChildByName("label_text");
            i.off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, t ]);
        }
        onClickUse(e, t) {
            var i = e.dataSource;
            d.Instance.Send(a.UIRankPos_Select, i.id);
        }
    }
    class Xp {
        constructor() {
            this.isOpen = !1, this.path = "ui_view/v_FightEndRankShow.scene", this.isLoad = !1, 
            this.firstOpen = !0, this.isWin = !1, this.first = !0, d.Instance.Reg(a.UIFightEndRankShow_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFightEndRankShow_DelayOpen, e => {
                this.delayOpen(e[0]);
            }), d.Instance.Reg(a.UIFightEndRankShow_SetData, e => {
                this.setData(e[0], e[1]);
            }), d.Instance.Reg(a.UIFightEndRankShow_UpdateStar, e => {
                this.updateStar(e[0]);
            }), d.Instance.Reg(a.UIFightEndRankShow_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIFightEndRankShow_ShowOppoNative, e => {
                this.showOppoNative();
            });
        }
        static get Instance() {
            return null == this.instance && (Xp.instance = new Xp()), Xp.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1009
            }), this.firstOpen = !1), this.isOpen || ie.Instance.addUI(this), this.isOpen = !0, 
            this.first = !0, this.uiControl.updateWin(this.isWin), this.uiControl.updateStar(this.cacheData ? this.cacheData.stage : Z.Instance.rank + (this.isWin ? 1 : -1)), 
            s.isOppoPlatform || (s.maiLiangSwitch ? cp.Instance.ShowPanel_Single(this.path, this.uiControl, [ {
                x: 51,
                y: 250,
                s: 1
            }, {
                x: 1122,
                y: 250,
                s: 1
            } ]) : (le.Instance.CustomAdCallBack = (() => {
                cp.Instance.ShowPanel_Single(this.path, this.uiControl, [ {
                    x: 51,
                    y: 250,
                    s: 1
                }, {
                    x: 1122,
                    y: 250,
                    s: 1
                } ]);
            }), le.Instance.showCustomAd(7, 4, 51, 250), le.Instance.showCustomAd(8, 5, 1122, 250))), 
            le.Instance.HideBannerAD(), Ll.Instance.playBgMusic(Ul.Instance.bgSound_main), s.isWXPlatform && le.Instance.ShowInterstitialAd(0), 
            s.is233Platform && (le.Instance.ShowAllScreenVideo(), this.uiControl.sp_continue.pos(1122, 662), 
            le.Instance.show233Banner());
        }
        showOppoNative() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (this.uiControl.sp_continue.y = 592, 
            s.isXiaoMiPlatform && (this.uiControl.sp_continue.y = 558), (s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.is4399Platform || s.isHuaweiPlatform) && le.Instance.api.setShowNativeCallBack(e => {
                e && this.uiControl && this.uiControl.sp_continue && (this.uiControl.sp_continue.y = 662);
            }), Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && (s.is4399Platform || s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this, 539, 503, 255, 150, 2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(603, 538) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 570, 558, 188, 100, 2), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.sp_continue.y = 662));
            })), s.is233mlcsjPlatform && le.Instance.show233Banner();
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            s.is233Platform && le.Instance.hide233Banner(), le.Instance.hideCustomAd(), cp.Instance.HidePanel_Single(), 
            this.isOpen && (this.isOpen = !1, ie.Instance.removeUI(this), this.uiControl.autoDestroyAtClosed = !0, 
            this.uiControl.close()), this.uiControl = null, this.isLoad = !1;
        }
        setData(e, t) {
            this.isOpen ? this.uiControl && t && (this.isWin = e, this.cacheData = t, this.uiControl.updateWin(this.isWin), 
            this.uiControl.updateStar(this.cacheData.stage)) : (Laya.timer.clearAll(this), this.isWin = e, 
            this.cacheData = t, this.Open());
        }
        delayOpen(e) {
            this.isWin = e, this.cacheData = null, Laya.timer.once(2e3, this, () => {
                this.Open();
            });
        }
        updateStar(e) {
            this.uiControl && this.uiControl.updateStar(e);
        }
        onClickContinue() {
            let e = this.cacheData && this.cacheData.stage > 3 && Math.random() > .5 || !s.isOppoPlatform;
            if (this.cacheData && this.first && e) this.first = !1, d.Instance.Send(a.RankSafeCardWinOrFail_Open, this.isWin); else {
                d.Instance.Send(a.UIFightEndRankShow_Close);
                let e = s.isOnline && s.isOppoPlatform || !s.isOppoPlatform;
                this.cacheData && this.cacheData.boxnumget <= this.cacheData.boxnumlimit && e ? d.Instance.Send(a.UIFightEndBox_Open, this.cacheData.boxnumget, this.cacheData.boxnumlimit) : d.Instance.Send(a.UIFightEnd_Open);
            }
        }
    }
    Xp.instance = null;
    class Kp extends n.ui_dialog.d_RankSafeCardFailUI {
        constructor() {
            super(), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose), this.sp_use.on(Laya.Event.MOUSE_DOWN, this, this.onClickUse), 
            this.temp_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose);
        }
        onDialogOpen() {
            s.isTTPlatform || s.isH5Platform ? (this.sp_close.visible = !1, this.btn_close.visible = !0, 
            this.sp_use.x = 763, this.btn_close.x = 464) : (this.sp_close.visible = !0, this.btn_close.visible = !1, 
            this.sp_use.x = 668, this.btn_close.x = 360), this.sp_close.visible = !(s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform), 
            this.temp_video.visible = s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform;
        }
        onClickClose() {
            d.Instance.Send(a.RankSafeCardWinOrFail_Close), (s.isVivoPlatform || s.isOppoPlatform) && Xp.Instance.onClickContinue();
        }
        onClickUse() {
            d.Instance.Send(a.RankSafeCardWinOrFail_Use);
        }
    }
    class qp extends n.ui_dialog.d_RankSafeCardWinUI {
        constructor() {
            super(), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose), this.sp_use.on(Laya.Event.MOUSE_DOWN, this, this.onClickUse), 
            this.temp_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickClose);
        }
        onDialogOpen() {
            s.isTTPlatform || s.isH5Platform ? (this.sp_close.visible = !1, this.btn_close.visible = !0, 
            this.sp_use.x = 751, this.btn_close.x = 464) : (this.sp_close.visible = !0, this.btn_close.visible = !1, 
            this.sp_use.x = 674, this.btn_close.x = 360), this.sp_close.visible = !(s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform), 
            this.temp_video.visible = s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform;
        }
        onClickClose() {
            d.Instance.Send(a.RankSafeCardWinOrFail_Close), (s.isVivoPlatform || s.isOppoPlatform) && Xp.Instance.onClickContinue();
        }
        onClickUse() {
            d.Instance.Send(a.RankSafeCardWinOrFail_Use);
        }
    }
    class zp {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_ScrollText.scene", this.isLoad = !1, 
            this.waitClose = !1, this.textArray = [], d.Instance.Reg(a.UIScrollTextModel_Open, e => {
                this.pushText(e[0]);
            }), d.Instance.Reg(a.UIScrollTextModel_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (zp.instance = new zp()), zp.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.uiControl.isModal = !1, this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.uiControl.show(), this.isOpen = !0, 
            this.uiControl.zOrder = 99999);
        }
        Close() {
            this.isLoad && null == this.uiControl && (this.waitClose = !0), this.isOpen = !1, 
            this.uiControl && this.uiControl.close();
        }
        pushText(e) {
            null != e && "" != e && this.textArray.push(e), !this.isOpen && this.textArray.length > 0 && this.Open();
        }
    }
    zp.instance = null;
    class Yp extends n.ui_dialog.d_ScrollTextUI {
        constructor() {
            super(), this.moveWidth = 2, this.moveSpeed = .1, this.curMoveSpeed = 0;
        }
        onOpened() {
            Laya.timer.frameLoop(1, this, this.onUpdate);
        }
        onClosed() {
            this.moveWidth = 0, Laya.timer.clearAll(this), this.label_text.text = "", zp.Instance.isOpen = !1;
        }
        onUpdate() {
            if (this.moveWidth > 0 && (this.curMoveSpeed = this.moveSpeed * Laya.timer.delta, 
            this.label_text.x = this.label_text.x - this.curMoveSpeed, this.moveWidth = this.moveWidth - this.curMoveSpeed), 
            zp.Instance.textArray.length <= 0) this.moveWidth < 0 && d.Instance.Send(a.UIScrollTextModel_Close); else if (this.moveWidth <= 0) {
                var e = zp.Instance.textArray.shift();
                this.label_text.text = e, this.label_text.x = 790, this.moveWidth = this.label_text.textField.textWidth + 790;
            }
        }
    }
    class Jp {
        constructor() {
            this.init = !1, this.isSeasonReward = !1, w.Instance.RegisterNet(14002, e => {
                this.s2c_season(e);
            }), w.Instance.RegisterNet(14006, e => {
                this.s2c_season_reward(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Jp.instance = new Jp()), Jp.instance;
        }
        s2c_season(e) {
            if (this.seasonData = e, null != this.seasonData && null != this.seasonData.season_list) for (var t = 0; t < this.seasonData.season_list.length; t++) {
                var n = this.seasonData.season_list[t];
                n.id == this.seasonData.season_id && (this.curSeason = n), n.id == this.seasonData.season_id - 1 && (this.oldSeason = n);
            }
            null != this.oldSeason && 0 == this.oldSeason.rewardstate && null != this.oldSeason.reward && this.oldSeason.reward.length > 0 && (this.isSeasonReward = !0, 
            this.init && s.curGameScene == i.HomeScene && this.ShowSeason(), d.Instance.Send(a.UIGameMain_UpdateSeason)), 
            this.init = !0;
        }
        s2c_season_reward(e) {
            null != e && d.Instance.Send(a.UIShowPrize_Open, e.reward);
        }
        Init() {
            this.init || w.Instance.GetNetMsgData("c2s_season").Send({});
        }
        ShowSeason() {
            null != this.oldSeason && 0 == this.oldSeason.rewardstate && null != this.oldSeason.reward && this.oldSeason.reward.length > 0 && d.Instance.Send(a.UISeasonGet_Open);
        }
    }
    Jp.instance = null;
    class Qp {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_Season.scene", this.isLoad = !1, this.selfData = null, 
            this.allData = {}, this.cacheData = {}, d.Instance.Reg(a.UISeason_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UISeason_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(14034, e => {
                this.s2c_get_rank_oldseason(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Qp.instance = new Qp()), Qp.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.init(), s.isXiaoMiPlatform && le.Instance.showInterXiaomi(), 
            d.Instance.Send(a.UIGameMain_HideWxClup), s.isVivoPlatform && le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 30,
                y: 208,
                width: 120,
                height: 120,
                style: I.icon
            } ]);
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close()), s.isDYVivoPlatform && le.Instance.showInterVideo(), 
            s.isTapTapPlatform && le.Instance.sendShowSplashAd(), s.isVivoPlatform && le.Instance.HideNewNativeAD(I.icon), 
            d.Instance.Send(a.UIGameMain_ShowWxClup);
        }
        s2c_get_rank_oldseason(e) {
            if (this.selfData = e.own, null != e.rank) for (var t = 0; t < e.rank.length; t++) {
                var i = e.rank[t];
                this.allData[i.rank] = i, "" == i.wx_txurl && (i.wx_txurl = "icon/tx_zhans.png"), 
                1 == e.type && i.rank < 5 && (this.cacheData[i.rank] = i);
            }
            this.isOpen && this.uiControl && this.uiControl.updateRank(this.allData, this.selfData, e.rank && e.rank.length < 10);
        }
    }
    Qp.instance = null;
    class Zp extends n.ui_dialog.d_SeasonUI {
        constructor() {
            super(), this.maxRankIndex = 0, this.maxLength = 100, this.isEndPos = !1, this.curSelectID = 0, 
            q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickcloseView), 
            this.list_season.array = null, this.list_season.hScrollBarSkin = "", this.list_season.renderHandler = new Laya.Handler(this, this.onSeasonListRender), 
            this.list_rank.array = null, this.list_rank.hScrollBarSkin = "", this.list_rank.renderHandler = new Laya.Handler(this, this.onRankListRender);
        }
        init() {
            var e = Jp.Instance.curSeason;
            if (e) {
                var t = new Date(), i = new Date(1e3 * e.etime), s = Math.floor((i.getTime() - t.getTime()) / 1e3);
                this.label_seasonend.text = s < 604800 ? "距离S" + e.id + "赛季结束还剩：" + q.formatTimeToC(s) : "S" + e.id + "赛季进行中";
            }
            Jp.Instance.oldSeason ? (this.box_self.visible = !0, this.curSelectID = Jp.Instance.oldSeason.id, 
            w.Instance.GetNetMsgData("c2s_get_rank_oldseason").Send({
                seasonid: this.curSelectID,
                index: 1
            })) : this.box_self.visible = !1, this.updatePos();
        }
        onClickPos() {
            d.Instance.Send(a.UIRankPos_Open);
        }
        clearList() {
            this.isEndPos = !1, this.list_rank.array = [], Qp.Instance.allData = [];
        }
        onClickcloseView() {
            d.Instance.Send(a.UISeason_Close);
        }
        updatePos() {
            var e = [], t = Jp.Instance.seasonData;
            if (Jp.Instance.curSeason && t && t.season_list) for (let l = t.season_list.length - 1; l >= 0; l--) {
                const h = t.season_list[l];
                if (h.id != Jp.Instance.curSeason.id) {
                    var i = new Date(1e3 * h.btime), s = new Date(1e3 * h.etime), n = "common/sjjng_font_" + (h.id >= 10 ? Math.floor(h.id / 10) : 0) + ".png", a = "common/sjjng_font_" + (h.id >= 10 ? Math.floor(h.id % 10) : h.id) + ".png", o = {
                        id: h.id,
                        img_num1: {
                            skin: n
                        },
                        img_num2: {
                            skin: a
                        },
                        label_time: {
                            text: i.getFullYear() + "." + (i.getMonth() + 1) + "-" + s.getFullYear() + "." + (s.getMonth() + 1)
                        },
                        img_curselect: {
                            visible: this.curSelectID == h.id
                        }
                    };
                    e.push(o);
                }
            }
            this.list_season.array = e;
        }
        updateRank(e, t, i) {
            this.isEndPos = i;
            for (var s = [], n = 1; n <= this.maxLength; n++) {
                var a = e[n];
                if (null == a) break;
                this.maxRankIndex = n;
                var o = mp.Instance.GetRankData(a.stage), l = {
                    img_self: {
                        visible: a.playe_id == t.playe_id
                    },
                    img_headbg: {
                        visible: n <= 3,
                        skin: 1 == a.rank ? "common/sjjng_img_001.png" : 2 == a.rank ? "common/sjjng_img_002.png" : "common/sjjng_img_003.png"
                    },
                    img_icon: {
                        skin: a.wx_txurl
                    },
                    img_rankicon: {
                        skin: null != o ? o.rankIcon : ""
                    },
                    label_rank: {
                        text: null != o ? o.rankName : ""
                    },
                    label_star: {
                        text: null != o ? o.curStar : ""
                    },
                    label_ranknum: {
                        text: a.rank
                    },
                    label_name: {
                        text: "" == a.wx_name ? "游客" : a.wx_name
                    }
                };
                s.push(l);
            }
            this.list_rank.array = s, o = mp.Instance.GetRankData(t.stage), this.label_norank.text = t.rank >= 9999 ? "未上榜" : "" + t.rank, 
            this.img_icon.skin = t.wx_txurl, this.img_rankicon.skin = null != o ? o.rankIcon : "", 
            this.label_rank.text = null != o ? o.rankName : "", this.label_star.text = null != o ? "" + o.curStar : "", 
            this.label_name.text = "" == t.wx_name ? "游客" : t.wx_name, this.label_win.text = "胜场:" + t.win, 
            this.label_winratio.text = "胜率:" + (t.win + t.fail == 0 ? "0%" : Math.floor(100 * u.decimalRound(t.win / (t.win + t.fail))) + "%"), 
            this.label_mvp.text = "MVP:" + t.mvp;
        }
        onRankListRender(e, t) {
            !this.isEndPos && this.maxRankIndex < this.maxLength && t + 1 == this.maxRankIndex && w.Instance.GetNetMsgData("c2s_get_rank_oldseason").Send({
                seasonid: this.curSelectID,
                index: Math.floor(this.maxRankIndex / 10) + 1
            });
        }
        onSeasonListRender(e, t) {
            var i = e.getChildByName("btn_sub1");
            i.off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, e.dataSource.index ]);
        }
        onClickUse(e, t) {
            this.clearList(), this.curSelectID = e.dataSource.id, this.updatePos(), w.Instance.GetNetMsgData("c2s_get_rank_oldseason").Send({
                seasonid: this.curSelectID,
                index: 1
            });
        }
    }
    class $p extends n.ui_dialog.d_SeasonGetUI {
        constructor() {
            super(), this.img_get.on(Laya.Event.MOUSE_DOWN, this, this.onGet);
        }
        init() {
            var e = Jp.Instance.oldSeason, t = Jp.Instance.curSeason;
            if (null == e && (e = t), null != e && null != t) {
                this.box_get.visible = !1, this.label_seasonchange.text = "S" + e.id + "赛季";
                var i = mp.Instance.GetRankData(e.stage);
                if (null != i && (this.img_rank.skin = i.rankIcon, this.label_rankname.text = i.rankName), 
                this.anim_hide.play(0, !1), this.anim_hide.on(Laya.Event.COMPLETE, this, () => {
                    if (Jp.Instance.curSeason) {
                        this.label_seasonchange.text = "S" + Jp.Instance.curSeason.id + "赛季";
                        var e = mp.Instance.GetRankData(Jp.Instance.curSeason.stage);
                        null != e && (this.img_rank.skin = e.rankIcon, this.label_rankname.text = e.rankName), 
                        this.box_get.visible = !0;
                    }
                    this.anim_open.play(0, !1);
                }), null != e.reward) {
                    for (var s = [], n = 0; n < e.reward.length; n++) {
                        var a = e.reward[n], o = vu.Instance.GetItemData(a.id);
                        if (null != o) {
                            var l = {
                                img_reward: {
                                    skin: o.icon
                                },
                                label_num: {
                                    text: "x" + a.num
                                }
                            };
                            s.push(l);
                        }
                    }
                    this.list_reward.array = s;
                }
            }
        }
        onGetVideo() {
            s.onMiniGame || s.isAppPlatform ? le.Instance.ShowVideoAD(e => {
                1 == e && null != Jp.Instance.oldSeason && w.Instance.GetNetMsgData("c2s_season_reward").Send({
                    season_id: Jp.Instance.oldSeason.id,
                    type: 2
                });
            }, 10) : null != Jp.Instance.oldSeason && w.Instance.GetNetMsgData("c2s_season_reward").Send({
                season_id: Jp.Instance.oldSeason.id,
                type: 2
            });
        }
        onGet() {
            null != Jp.Instance.oldSeason && w.Instance.GetNetMsgData("c2s_season_reward").Send({
                season_id: Jp.Instance.oldSeason.id,
                type: 1
            }), Jp.Instance.isSeasonReward = !1, d.Instance.Send(a.UISeasonGet_Close);
        }
    }
    class em extends n.ui_dialog.d_SetUI {
        constructor() {
            super(), this.img_cancle.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Cancle), this.V_s.on(Laya.Event.MOUSE_DOWN, this, this.onClickV_s), 
            this.M_s.on(Laya.Event.MOUSE_DOWN, this, this.onClickM_s), this.sp_logOff.on(Laya.Event.MOUSE_DOWN, this, this.onClickLogOff), 
            this.img_cancel.on(Laya.Event.MOUSE_DOWN, this, this.onClick_cancel), this.img_ok.on(Laya.Event.MOUSE_DOWN, this, this.onClick_OK), 
            this.img_quxiao.on(Laya.Event.MOUSE_DOWN, this, this.onClick_quxiao), this.img_yes.on(Laya.Event.MOUSE_DOWN, this, this.onClick_yes);
        }
        onEnable() {
            Laya.SoundManager.musicMuted = "1" == Laya.LocalStorage.getItem("V_smusicMuted"), 
            Laya.SoundManager.soundMuted = "1" == Laya.LocalStorage.getItem("M_ssoundMuted");
            let e = this.V_s.getChildAt(0);
            e && (e.visible = !Laya.SoundManager.musicMuted), this.label_V_s.text = Laya.SoundManager.musicMuted ? "关闭" : "开启";
            let t = this.M_s.getChildAt(0);
            t && (t.visible = !Laya.SoundManager.soundMuted), this.label_M_s.text = Laya.SoundManager.soundMuted ? "关闭" : "开启";
        }
        onClickV_s() {
            Laya.SoundManager.musicMuted = !Laya.SoundManager.musicMuted;
            let e = this.V_s.getChildAt(0);
            e && (e.visible = !Laya.SoundManager.musicMuted), this.label_V_s.text = Laya.SoundManager.musicMuted ? "关闭" : "开启", 
            Laya.LocalStorage.setItem("V_smusicMuted", Laya.SoundManager.musicMuted ? "1" : "0");
        }
        onClickM_s() {
            Laya.SoundManager.soundMuted = !Laya.SoundManager.soundMuted;
            let e = this.M_s.getChildAt(0);
            e && (e.visible = !Laya.SoundManager.soundMuted), this.label_M_s.text = Laya.SoundManager.soundMuted ? "关闭" : "开启", 
            Laya.LocalStorage.setItem("M_ssoundMuted", Laya.SoundManager.soundMuted ? "1" : "0");
        }
        onClickLogOff() {
            this.box_1.visible = !1, this.box_2.visible = !0;
        }
        onClick_cancel() {
            this.box_1.visible = !0, this.box_2.visible = !1;
        }
        onClick_OK() {
            this.box_3.visible = !0, this.box_2.visible = !1;
        }
        onClick_Cancle() {
            d.Instance.Send(a.UISet_Close);
        }
        onClick_quxiao() {
            this.box_1.visible = !0, this.box_2.visible = !1;
        }
        onClick_yes() {
            d.Instance.Send(a.UISet_Close), w.Instance.GetNetMsgData("c2s_clean_account").Send({});
        }
    }
    class tm {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_SevenDay.scene", this.isLoad = !1, this.firstOpen = !0, 
            this.firstClose = !0, this.forceJumpAd = !1, this.iswaitClose = !0, d.Instance.Reg(a.UISevenDay_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UISevenDay_Close, e => {
                this.Close(e[0]);
            }), d.Instance.Reg(a.UISevenDay_ClickQuan, e => {
                this.onClickQuan();
            }), d.Instance.Reg(a.UISevenDay_Updata, e => {
                this.onUpdata(e[0]);
            }), d.Instance.Reg(a.UISevenDay_Common, e => {
                this.onClickCommon(e[0]);
            }), w.Instance.RegisterNet(15002, e => {
                this.s2c_7day_info(e);
            }), w.Instance.RegisterNet(15004, e => {
                this.s2c_7day_get(e);
            }), w.Instance.RegisterNet(15021, e => {
                this.s2c_get_reward_once(e);
            }), d.Instance.Reg(a.UIEventForceAD, e => {
                this.forceShowNative(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (tm.instance = new tm()), tm.instance;
        }
        Open(e = !0) {
            this.iswaitClose = e, w.Instance.GetNetMsgData("c2s_7day_info").Send({}), w.Instance.GetNetMsgData("c2s_yxdq_cost").Send({
                type: 1,
                act: 1
            }), this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        onClickQuan() {
            w.Instance.GetNetMsgData("c2s_yxdq_cost").Send({
                type: 1,
                act: 2
            });
        }
        onUpdata(e) {
            this.cacheNum = e[0].num, this.uiControl && (this.uiControl.label_quanNum.text = "x" + e[0].num);
        }
        openUI() {
            this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1003
            }), this.firstOpen = !1), this.uiControl.popup(), this.uiControl.onDialogOpen(), 
            this.isOpen = !0, this.uiControl.label_quanNum.text = this.cacheNum, (s.isTTPlatform || s.isH5Platform) && w.Instance.GetNetMsgData("c2s_get_reward_once").Send({
                type: 1
            }), this.cacheData && this.uiControl.updateServerDay(this.cacheData), s.isXiaoMiPlatform || s.isHuaweiPlatform || (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (this.uiControl.btn_close.visible = !1, 
            this.isOpen && this.uiControl && (this.uiControl.btn_close.visible = !0, s.isDYVivoPlatform && le.Instance.showFloatIcon(1060, 624), 
            le.Instance.ShowNativeBannerAD(1, this.uiControl, 412, 624, 509, 126, 2), le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_free.x = 921))), 
            s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0), s.isVivoPlatform && (le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 1145,
                y: 65,
                width: 120,
                height: 120,
                style: I.icon
            } ]), le.Instance.api.showSystemBanner({
                style: v.Center_bottom
            }));
        }
        forceShowNative(e) {
            s.isOppoPlatform && "sevenDay" == e && (this.forceJumpAd = !0);
        }
        Close(e) {
            s.isOppoPlatform && s.isOnline && this.forceJumpAd && le.Instance.getAderrorrate() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && le.Instance.onClickOppoNative(), 
            s.isVivoPlatform && (le.Instance.HideNewNativeAD(I.icon), le.Instance.api.hideSystemBanner()), 
            this.forceJumpAd = !1, (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.firstClose && !e && (this.firstClose = !1, (s.isDYVivoPlatform || s.isXiaoMiPlatform || s.is4399Platform || s.isHuaweiPlatform || s.isWcfjlPlatform) && le.Instance.showInterstitialad(3), 
            s.isTTPlatform && le.Instance.ShowInterstitialAd(0)));
        }
        s2c_get_reward_once(e) {
            this.uiControl && this.uiControl.updateFreeSign(e), e.count > 0 && null != e.reward && e.reward.length > 0 && d.Instance.Send(a.UIShowPrize_Open, e.reward);
        }
        onClickCommon(e) {
            1 == e ? (this.uiControl.onClickSign(-1), w.Instance.GetNetMsgData("c2s_yxdq_cost").Send({
                type: 1,
                act: 1
            })) : d.Instance.Send(a.UIGameTipsModel_SetTips, "资源不足", 1e3);
        }
        s2c_7day_info(e) {
            this.cacheData = e, null != this.uiControl && this.uiControl.updateServerDay(e);
        }
        s2c_7day_get(e) {
            if (null != e) {
                if (1 != e.code) return void console.log("15004 error code " + e.code);
                w.Instance.GetNetMsgData("c2s_7day_info").Send({});
            }
        }
    }
    tm.instance = null;
    class im extends n.ui_dialog.d_SevenDayUI {
        constructor() {
            super(), this.waitSignIndex = 0, this.firstShow = !1, this.sevendayItem1 = 0, this.sevendayItem2 = 0, 
            this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.btn_freesign.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetOnce), this.img_free.on(Laya.Event.MOUSE_DOWN, this, this.onClickSign, [ -1 ]), 
            this.img_quan.on(Laya.Event.MOUSE_DOWN, this, this.onClickQun), this.img_get1.on(Laya.Event.MOUSE_DOWN, this, this.onClickUse1, [ null, 6 ]), 
            this.img_get2.on(Laya.Event.MOUSE_DOWN, this, this.onClickUse2, [ null, 6 ]), this.img_icon1.on(Laya.Event.MOUSE_DOWN, this, this.onClickSevenShowTips, [ 1 ]), 
            this.img_icon2.on(Laya.Event.MOUSE_DOWN, this, this.onClickSevenShowTips, [ 2 ]), 
            this.new_list_sevenday.array = null, this.new_list_sevenday.renderHandler = new Laya.Handler(this, this.onListAttrRender);
        }
        onClickSevenShowTips(e) {
            d.Instance.Send(a.UIItemTips_Open, this["sevendayItem" + e]);
        }
        onClickQun() {
            d.Instance.Send(a.UISevenDay_ClickQuan);
        }
        closeView() {
            (s.isPCPlatform || s.isWXPlatform && 1 == le.Instance.GetBannerType() && s.sevendaySwitch) && tm.Instance.iswaitClose ? Laya.timer.once(1200, this, () => {
                d.Instance.Send(a.UISevenDay_Close);
            }) : d.Instance.Send(a.UISevenDay_Close);
        }
        updateFreeSign(e) {
            this.btn_freesign.disabled = !(0 == e.count);
        }
        onDialogOpen() {
            this.firstShow = !0, s.isTTPlatform || s.isH5Platform ? (this.img_quan.visible = !1, 
            this.btn_freesign.visible = !0, this.label_free.visible = !0, this.label_count.text = "观看视频可领取奖励") : (this.img_quan.visible = !1, 
            this.btn_freesign.visible = !1, this.label_free.visible = !1, this.label_count.text = "观看视频可领取奖励"), 
            (s.isPCPlatform || s.isWXPlatform) && (this.sp_close.visible = !0, this.btn_close.visible = !1);
        }
        updateServerDay(e) {
            var t = [], i = 0;
            for (let o = 0; o < e.info.length - 1; o++) {
                let l = e.info2[o], h = e.info[o];
                var s, n = vu.Instance.GetItemData(l.id), a = vu.Instance.GetItemData(h.id);
                s = {
                    get: 1 == l.state || 3 == l.state,
                    heroID: n.heroID,
                    index: l.index,
                    itemId1: l.id,
                    itemId2: h.id,
                    label_name: {
                        text: "第" + q.NumToString(o + 1) + "天",
                        color: 1 == l.state ? "#fcde54" : "#fefefe"
                    },
                    label_num1: {
                        visible: !0,
                        text: l.num > 1 ? "x" + l.num : ""
                    },
                    label_num2: {
                        visible: !0,
                        text: h.num > 1 ? "x" + h.num : ""
                    },
                    img_getflag1: {
                        visible: l.time > 0
                    },
                    img_getflag2: {
                        visible: h.time > 0
                    },
                    label_get1: {
                        visible: 1 == l.state || 3 == l.state,
                        text: 3 == l.state ? "补签" : "领取"
                    },
                    label_get2: {
                        visible: 1 == h.state || 3 == h.state,
                        text: 3 == h.state ? "补签" : "领取"
                    },
                    img_icon1: {
                        disabled: l.time > 0,
                        visible: !0,
                        skin: null != n && (1 == n.type || 4 == n.type || 5 == n.type) ? n.icon : ""
                    },
                    img_icon2: {
                        disabled: h.time > 0,
                        visible: !0,
                        skin: null != a && (1 == a.type || 4 == a.type || 5 == a.type) ? a.icon : ""
                    },
                    img_get1: {
                        disabled: 0 == l.state || 2 == l.state,
                        visible: 1 == l.state || 3 == l.state
                    },
                    img_get2: {
                        disabled: 0 == h.state || 2 == h.state,
                        visible: 1 == h.state || 3 == h.state
                    },
                    img_cur: {
                        visible: 1 == l.state || 1 == h.state
                    },
                    img_black: {
                        visible: 2 == l.state && 2 == h.state
                    }
                }, 1 != l.state && 1 != h.state && 3 != l.state && 3 != h.state || (i = o), t.push(s);
            }
            if (this.new_list_sevenday.array = t, this.firstShow && (this.firstShow = !1, this.new_list_sevenday.scrollTo(i > 3 ? i : 0)), 
            e.info[6]) {
                let t = e.info2[6], i = e.info[6];
                n = vu.Instance.GetItemData(t.id), a = vu.Instance.GetItemData(i.id);
                this.sevendayItem1 = t.id, this.sevendayItem2 = i.id, this.label_num1.visible = !0, 
                this.label_num1.text = t.num > 1 ? "x" + t.num : "", this.label_num2.visible = !0, 
                this.label_num2.text = i.num > 1 ? "x" + i.num : "", this.img_getflag1.visible = t.time > 0, 
                this.img_getflag2.visible = i.time > 0, this.label_get1.visible = 1 == t.state || 3 == t.state, 
                this.label_get1.text = 3 == t.state ? "补签" : "领取", this.label_get2.visible = 1 == i.state || 3 == i.state, 
                this.label_get2.text = 3 == i.state ? "补签" : "领取", this.img_icon1.disabled = t.time > 0, 
                this.img_icon1.visible = !0, this.img_icon1.skin = null != n && (1 == n.type || 4 == n.type || 5 == n.type) ? n.icon : "", 
                this.img_icon2.disabled = i.time > 0, this.img_icon2.visible = !0, this.img_icon2.skin = null != a && (1 == a.type || 4 == a.type || 5 == a.type) ? a.icon : "", 
                this.img_get1.disabled = 0 == t.state || 2 == t.state, this.img_get1.visible = 1 == t.state || 3 == t.state, 
                this.img_get2.disabled = 0 == i.state || 2 == i.state, this.img_get2.visible = 1 == i.state || 3 == i.state;
            }
        }
        onSevenDayRender(e, t) {
            if (e.dataSource.get) e.getChildByName("btn_get");
        }
        onClickUse(e, t) {
            e.dataSource.get && this.onClickSign(t);
        }
        onClickGetOnce() {
            w.Instance.GetNetMsgData("c2s_get_reward_once").Send({
                type: 2
            });
        }
        onClickSignBig(e) {}
        onClickSign(e) {
            -1 == e && (e = this.waitSignIndex), 0 != this.waitSignIndex && (s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_7day_get").Send({
                index: e
            }) : le.Instance.ShowVideoAD(t => {
                1 == t && w.Instance.GetNetMsgData("c2s_7day_get").Send({
                    index: e
                });
            }, 7));
        }
        onListAttrRender(e, t) {
            var i;
            (i = e.getChildByName("img_get1")).off("click", this, this.onClickUse1), i.on("click", this, this.onClickUse1, [ e, t ]), 
            (i = e.getChildByName("img_get2")).off("click", this, this.onClickUse2), i.on("click", this, this.onClickUse2, [ e, t ]), 
            (i = e.getChildByName("img_icon1")).off("mousedown", this, this.onClickShowTips), 
            i.on("mousedown", this, this.onClickShowTips, [ e.dataSource.itemId1 ]), (i = e.getChildByName("img_icon2")).off("mousedown", this, this.onClickShowTips), 
            i.on("mousedown", this, this.onClickShowTips, [ e.dataSource.itemId2 ]);
        }
        onClickShowTips(e) {
            d.Instance.Send(a.UIItemTips_Open, e);
        }
        onClickUse1(e, t) {
            w.Instance.GetNetMsgData("c2s_7day_get").Send({
                index: t + 1,
                type: 1
            }), w.Instance.GetNetMsgData("c2s_7day_info").Send({});
        }
        onClickUse2(e, t) {
            s.isPCPlatform ? (w.Instance.GetNetMsgData("c2s_7day_get").Send({
                index: t + 1,
                type: 0
            }), w.Instance.GetNetMsgData("c2s_7day_info").Send({})) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_7day_get").Send({
                    index: t + 1,
                    type: 0
                }), w.Instance.GetNetMsgData("c2s_7day_info").Send({}));
            }, 7);
        }
    }
    class sm extends n.ui_dialog.d_SHModelUI {
        constructor() {
            super(), this.btn_cancel.on(Laya.Event.MOUSE_DOWN, this, this.onClickCloseView), 
            this.sp_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), this.sp_common.on(Laya.Event.MOUSE_DOWN, this, this.onClickCommon);
        }
        onClickCheck() {}
        onClickCommon() {
            Z.Instance.menpiao <= 0 ? d.Instance.Send(a.UIConfirm_Open, 3, 0, "资源不足无法开始，观看视频可获得!", Laya.Handler.create(this, e => {
                d.Instance.Send(a.UISHModel_StartCallBack), this.onClickVideo();
            })) : (d.Instance.Send(a.UISHModel_StartCallBack), this.onClickCloseView());
        }
        onClickCloseView() {
            d.Instance.Send(a.UISHModel_Close);
        }
        onDialogOpen() {
            this.label_mpnum.text = "x" + Z.Instance.menpiao, this.label_consume.color = Z.Instance.menpiao <= 0 ? "#f32f2b" : "#FFFFFF";
        }
        onClickVideo() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_get_xxmp").Send({}) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_get_xxmp").Send({});
            }, 26);
        }
    }
    class nm {
        constructor() {
            this.path = "ui_dialog/d_ShowPrize.scene", this.isOpen = !1, this.isLoad = !1, this.nextIndex = 0, 
            this.cacheList = null, this.styleType = 0, this.isShowSpPrize = !1, this.cacheSpList = [], 
            this.nextSpace = 300, this.nextTrue = !1, d.Instance.Reg(a.UIShowPrize_Open, e => {
                this.Open(e[0], e[1], e[2]);
            }), d.Instance.Reg(a.UIShowPrize_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIShowPrize_SetSPPrize, e => {
                this.setSpPrize(e[0]);
            }), d.Instance.Reg(a.UIShowPrize_OnClickNext, e => {
                this.OnClickNext();
            }), d.Instance.Reg(a.UIShowPrize_OnClickAdd, e => {
                this.OnClickAdd();
            }), w.Instance.RegisterNet(15019, e => {
                this.s2c_add_latest_reward(e);
            }), w.Instance.RegisterNet(15053, e => {
                this.s2c_box_extra(e);
            });
        }
        static get Instance() {
            return null == this.instance && (nm.instance = new nm()), nm.instance;
        }
        Open(e, t, i) {
            this.closeCallBack = t, this.cachePrize = e, this.cacheIsDungeon = i, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.nextTrue = !0, Laya.timer.once(this.nextSpace, this, () => {
                this.nextTrue = !1;
            }), this.uiControl.popup(), this.nextIndex = 0, this.UpdateReward(this.cachePrize), 
            this.nextIndex = 0, this.NextShowItem(), le.Instance.HideBannerAD(), s.is233mlcsjPlatform && le.Instance.hide233Banner(), 
            this.uiControl.updateTitle(this.cacheIsDungeon), this.uiControl.updateStyle(this.styleType), 
            s.isXiaoMiPlatform && le.Instance.showInterXiaomi(), s.isVivoPlatform && (le.Instance.api.hideSystemBanner(), 
            le.Instance.HideNewNativeAD(I.bigImage), le.Instance.HideNewNativeAD(I.icon), le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 934,
                y: 550,
                width: 400,
                height: 200,
                style: I.bigImage,
                gravity: "bottom|right"
            } ]));
        }
        Close() {
            le.Instance.HideBannerAD(), s.is233mlcsjPlatform && le.Instance.hide233Banner(), 
            s.isVivoPlatform && (le.Instance.api.hideSystemBanner(), le.Instance.HideNewNativeAD(I.bigImage), 
            le.Instance.HideNewNativeAD(I.icon)), this.isOpen = !1, this.uiControl && (this.uiControl.removeHero(), 
            this.uiControl.close()), null != this.closeCallBack && this.closeCallBack(), this.cacheSpList = [], 
            this.isShowSpPrize = !1, d.Instance.Send(a.UIEventPintu_PlayEffect);
        }
        s2c_box_extra(e) {
            if (this.uiControl && this.uiControl.showSPPrize(!1), null != e) {
                for (var t = [], i = 0; i < this.cacheList.length; i++) {
                    var s = this.cacheList[i], n = {
                        img_itemicon: {
                            skin: s.icon
                        },
                        label_itemname: {
                            text: "" + s.name
                        },
                        label_itemnum: {
                            text: "x" + s.num
                        },
                        img_bg: {
                            skin: "" == s.bg ? "common/jiangli_bg_001.png" : s.bg
                        }
                    };
                    t.push(n);
                }
                for (let i = 0; i < e.reward.length; i++) {
                    const s = e.reward[i];
                    var a = vu.Instance.GetItemData(s.id), o = {
                        icon: "",
                        bg: "",
                        name: "",
                        num: s.num,
                        heroID: 0
                    };
                    if (null != a && (o.icon = a.icon, o.name = a.name, null != a.bg && a.bg.length > 0)) for (var l = 0; l < a.bg.length; l++) {
                        var h = a.bg[l].v;
                        s.num >= h && a.bg[l].bg && "" != a.bg[l].bg && (o.bg = a.bg[l].bg);
                    }
                    var r = {
                        img_itemicon: {
                            skin: o.icon
                        },
                        label_itemname: {
                            text: "" + o.name
                        },
                        label_itemnum: {
                            text: "x" + o.num
                        },
                        img_bg: {
                            skin: "" == o.bg ? "bigpic/jiangli_bg_004.png" : o.bg
                        }
                    };
                    t.push(r);
                }
                this.uiControl && this.uiControl.updateShowAll(t, !0);
            }
        }
        s2c_add_latest_reward(e) {
            if (null != e) {
                for (var t = [], i = 0; i < this.cacheList.length; i++) {
                    var s = null != e.reward[i] ? e.reward[i].num : 0, n = this.cacheList[i], a = {
                        img_itemicon: {
                            skin: n.icon
                        },
                        label_itemname: {
                            text: "" + n.name
                        },
                        label_itemnum: {
                            text: "x" + (n.num + s),
                            color: "#3cff22"
                        },
                        img_bg: {
                            skin: "" == n.bg ? "common/jiangli_bg_001.png" : n.bg
                        }
                    };
                    t.push(a);
                }
                this.uiControl.updateShowAll(t, !0);
            }
        }
        setSpPrize(e) {
            this.isShowSpPrize = !1, this.cacheSpList = [];
            for (var t = 0; t < e.length; t++) {
                var i = e[t], s = vu.Instance.GetItemData(i.id), n = {
                    icon: "",
                    bg: "",
                    name: "",
                    num: i.num,
                    heroID: 0
                };
                if (null != s && (n.icon = s.icon, n.name = s.name, null != s.bg && s.bg.length > 0)) for (var a = 0; a < s.bg.length; a++) {
                    var o = s.bg[a].v;
                    i.num >= o && s.bg[a].bg && "" != s.bg[a].bg && (n.bg = s.bg[a].bg);
                }
                this.cacheSpList.push(n);
            }
        }
        UpdateReward(e) {
            if (this.cacheList = [], null != e) {
                this.styleType = e.length <= 1 ? 0 : 1, this.uiControl && this.uiControl.updateTips(e.length > 1, e.length);
                for (var t = 0; t < e.length; t++) {
                    var i = e[t], s = vu.Instance.GetItemData(i.id), n = {
                        icon: "",
                        bg: "",
                        name: "",
                        num: i.num,
                        heroID: 0
                    };
                    if (null != s && (1 != e.length || 4 != s.type && 5 != s.type || (n.heroID = s.heroID, 
                    this.styleType = 2), n.icon = s.icon, n.name = s.name, null != s.bg && s.bg.length > 0)) for (var a = 0; a < s.bg.length; a++) {
                        var o = s.bg[a].v;
                        i.num >= o && s.bg[a].bg && "" != s.bg[a].bg && (n.bg = s.bg[a].bg);
                    }
                    this.cacheList.push(n);
                }
            }
        }
        OnClickNext() {
            if (!this.nextTrue) if (this.nextTrue = !0, Laya.timer.once(this.nextSpace, this, () => {
                this.nextTrue = !1;
            }), 1 == this.styleType && this.nextIndex == this.cacheList.length) {
                if (!this.isShowSpPrize && this.cacheSpList.length > 0) return this.isShowSpPrize = !0, 
                this.uiControl.updateSPPrize(!1), this.uiControl.updateNextSpItem(this.cacheSpList[0]), 
                void (this.uiControl && this.uiControl.updateTips(!0, 0));
                for (var e = [], t = 0; t < this.cacheList.length; t++) {
                    var i = this.cacheList[t], s = {
                        img_itemicon: {
                            skin: i.icon
                        },
                        label_itemname: {
                            text: "" + i.name
                        },
                        label_itemnum: {
                            text: "x" + i.num
                        },
                        img_bg: {
                            skin: "" == i.bg ? "common/jiangli_bg_001.png" : i.bg
                        }
                    };
                    e.push(s);
                }
                this.uiControl.updateShowAll(e, !this.isShowSpPrize), this.uiControl.updateSPPrize(this.isShowSpPrize);
            } else this.NextShowItem();
        }
        OnClickAdd() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_box_extra").Send({}) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_box_extra").Send({});
            }, 8);
        }
        NextShowItem() {
            var e = this.cacheList[this.nextIndex++];
            null != e && (2 == this.styleType ? this.uiControl.updateHero(e) : (this.uiControl.updateNextItem(e), 
            this.uiControl && this.uiControl.updateTips(!0, this.cacheSpList.length + this.cacheList.length - this.nextIndex)));
        }
    }
    nm.instance = null;
    class am extends n.ui_dialog.d_ShowPrizeUI {
        constructor() {
            super(), this.showHeroID = 0, this.isShowBanner = !1, q.fixedFullBG(this, [ "backbg" ]), 
            this.sp_ok.on(Laya.Event.MOUSE_DOWN, this, this.onClickOk), this.btn_next.on(Laya.Event.MOUSE_DOWN, this, this.onClickNext), 
            this.img_next.on(Laya.Event.MOUSE_DOWN, this, this.onClickNext), this.img_clickAD.on(Laya.Event.MOUSE_DOWN, this, () => {
                le.Instance.onClickOppoNative();
            }), this.sp_add.on(Laya.Event.MOUSE_DOWN, this, this.onClickAdd), this.label_cancel.on(Laya.Event.MOUSE_DOWN, this, this.onClickOk), 
            this.sp_commom.on(Laya.Event.MOUSE_DOWN, this, this.onClickOk);
        }
        onOpened() {
            if (this.isShowBanner = !1, 0 != this.showHeroID) {
                te.Instance.isShow ? te.Instance.hideCurSceneModel("UI_ShowPrize", this) : te.Instance.init3DScene("UI_ShowPrize", this);
                var e = Q.Instance.getUnitAttribute(this.showHeroID);
                if (e) {
                    var t = ce.Instance.getModel(e.modelID);
                    if (t) {
                        var i = s.systemInfo.screenWidth > s.systemInfo.screenHeight ? s.systemInfo.screenWidth : s.systemInfo.screenHeight, n = Math.round(i / 2 * s.systemInfo.pixelRatio / s.screenScale);
                        te.Instance.load3DModel("UI_ShowPrize", t, t.resName, n, s.fixStageY + 566, 3, 180, n - 250, n + 250, !1);
                    }
                }
            }
            (s.isTTPlatform || s.isH5Platform) && (this.sp_commom.x = 416, this.sp_add.x = 678, 
            this.label_cancel.visible = !1), s.isOppoPlatform || (this.label_cancel.skin = "");
        }
        onClickOk() {
            d.Instance.Send(a.UIShowPrize_Close);
        }
        onClickAdd() {
            d.Instance.Send(a.UIShowPrize_OnClickAdd);
        }
        onClickNext() {
            d.Instance.Send(a.UIShowPrize_OnClickNext);
        }
        update() {}
        updateTips(e, t) {
            this.sp_tips.visible = e, this.img_next.visible = e && (s.isOppoPlatform || s.isVivoPlatform), 
            this.label_tips.text = t > 0 ? "还有" + t + "个奖励，点击屏幕任意位置领取" : "点击屏幕任意位置继续", (s.isOppoPlatform || s.isOppoPlatform) && (this.label_tips.text = t > 0 ? "还有" + t + "个奖励，点击上方按钮领取" : "点击上方按钮继续"), 
            this.img_clickAD.visible = (s.isOppoPlatform || s.isOppoGameCenterPlatform) && s.isOnline && s.canShowNative && e, 
            s.isOppoPlatform || s.isVivoPlatform || (e && t > 0 ? s.isTTPlatform ? (this.sp_tips.y = 437, 
            this.isShowBanner || (this.isShowBanner = !0, le.Instance.HideBannerAD(), le.Instance.ShowBannerAD(1, this))) : s.is233Platform ? (this.sp_tips.y = 511, 
            le.Instance.show233Banner()) : s.isDYVivoPlatform || (le.Instance.HideBannerAD(), 
            le.Instance.ShowBannerAD(1, this)) : (this.sp_tips.y = 511, le.Instance.HideBannerAD(), 
            s.is233Platform && le.Instance.hide233Banner()));
        }
        updateNextItem(e) {
            this.box_sponce.visible = !1, this.box_once.visible = !0, null != e && (this.img_itemicon.skin = e.icon, 
            this.label_itemname.text = "" + e.name, this.label_itemnum.text = "x" + e.num, this.img_itembg.skin = "" == e.bg ? "common/jiangli_bg_001.png" : e.bg), 
            this.anim_once.play(0, !1);
        }
        updateNextSpItem(e) {
            this.box_sponce.visible = !0, this.box_once.visible = !1, null != e && (this.img_itemiconsp.skin = e.icon, 
            this.label_itemnamesp.text = "" + e.name, this.label_itemnumsp.text = "x" + e.num), 
            this.anim_sponce.play(0, !1);
        }
        updateHero(e) {
            this.showHeroID = e.heroID, this.box_once.visible = !1, this.sp_ok.y = 615;
        }
        removeHero() {
            0 != this.showHeroID && te.Instance.removeScene3d(), this.showHeroID = 0;
        }
        updateTitle(e) {}
        updateStyle(e) {
            this.box_sponce.visible = !1, 0 == e || 2 == e ? (this.sp_tips.visible = !1, this.img_clickAD.visible = !1, 
            this.img_next.visible = !1, this.sp_add.visible = !1, this.sp_commom.visible = !1, 
            this.label_cancel.visible = !1, this.sp_ok.visible = !0, this.btn_next.visible = !1, 
            this.list_items.visible = !1, le.Instance.HideBannerAD(), s.is233mlcsjPlatform && le.Instance.hide233Banner(), 
            this.img_clickAD.y = 443, this.sp_ok.y = 530, (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && 0 == this.showHeroID && Laya.timer.once(s.oppoNativeDelay, this, () => {
                nm.Instance.isOpen && (s.isWcfjlPlatform ? le.Instance.ShowBannerCSJ(0) : s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this, 549, 445, 244, 156, 2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(609, 488) : le.Instance.ShowNativeBannerAD(1, this, 609, 534, 126, 72, 2), 
                (le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent || s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.is4399Platform || s.isHuaweiPlatform) && (this.sp_ok.y = 616, 
                this.img_clickAD.visible = (s.isOppoPlatform || s.isOppoGameCenterPlatform) && s.isOnline && s.canShowNative), 
                s.is233mlcsjPlatform && le.Instance.show233Banner());
            }), 0 != this.showHeroID && (this.sp_ok.y = 616)) : (this.sp_tips.visible = !0, 
            this.img_next.visible = s.isOppoPlatform || s.isVivoPlatform, this.img_clickAD.y = 635, 
            this.sp_add.visible = !1, this.sp_commom.visible = !1, this.label_cancel.visible = !1, 
            this.sp_ok.visible = !1, this.sp_ok.y = 555, this.btn_next.visible = !0, this.list_items.visible = !1, 
            s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform ? (this.sp_tips.y = 582, 
            s.isWcfjlPlatform ? le.Instance.ShowBannerCSJ(2) : s.isDYVivoPlatform ? (le.Instance.showFloatIcon(609, 449), 
            le.Instance.ShowDYVIVOBannerAD(315, 636, 900, 113)) : le.Instance.ShowNativeBannerAD(1, this, 920, 520, 414, 221, 1), 
            le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.img_clickAD.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform)), 
            s.is233mlcsjPlatform && le.Instance.show233Banner()) : s.isTTPlatform || (this.sp_tips.y = 511));
        }
        updateShowAll(e, t) {
            this.list_items.visible && !t || (this.btn_next.visible = !1, this.sp_tips.visible = !1, 
            this.img_next.visible = !1, this.box_once.visible = !1, this.sp_ok.visible = !0, 
            this.sp_add.visible = !t, this.sp_commom.visible = !t && (s.isTTPlatform || s.isH5Platform), 
            this.label_cancel.visible = !t && !s.isTTPlatform, t || (this.img_next.visible = !1, 
            this.img_clickAD.visible = !1, this.sp_ok.visible = !1), this.list_items.visible = !0, 
            this.list_items.array = e, this.list_items.pivotX = 176 * e.length / 2, this.anim_all.play(0, !1), 
            s.isOppoPlatform || s.isVivoPlatform || le.Instance.HideBannerAD(), s.is233mlcsjPlatform && le.Instance.hide233Banner(), 
            (s.isVivoPlatform || s.isAppPlatform) && this.label_cancel.visible && (this.label_cancel.y = 638, 
            this.label_cancel.x = 546, Laya.timer.once(s.oppoNativeDelay, this, () => {
                nm.Instance.isOpen && ((s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.isHuaweiPlatform) && le.Instance.api.setShowNativeCallBack(e => {
                    e && this.label_cancel && (this.label_cancel.y = 669, s.isDYVivoPlatform && (this.label_cancel.x = 790));
                }), s.isWcfjlPlatform ? le.Instance.ShowBannerCSJ(2) : s.is4399Platform || s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this, 833, 557, 260, 150, 2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(609, 616) : le.Instance.ShowNativeBannerAD(1, this, 625, 617, 91, 71, 2), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.label_cancel.y = 669));
            })));
        }
        updateSPPrize(e) {
            e && 5 == this.list_items.array.length && (this.list_items.pivotX = this.list_items.pivotX + 88), 
            this.box_sponce.x = e ? 1148 : 674;
        }
        showSPPrize(e) {
            this.box_sponce.visible = e;
        }
    }
    class om extends n.ui_dialog.d_SkillTipsUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]);
        }
        closeView() {
            d.Instance.Send(a.UIWing_Close);
        }
        showBuffTips(e, t) {
            var i = Cl.Instance.getBuffBase(e);
            i && (this.label_skname.text = i.name + (t ? " lv." + t : ""), this.label_skinfo.text = i.desc, 
            this.list_attr.array = [], this.img_skbg.height = 100, this.box_title.visible = !1);
        }
        showTips(e, t) {
            var i = eu.Instance.getSkillInfo(e);
            if (i) {
                this.box_title.visible = !0, this.label_skname.text = i.skillName + (t && t > 0 ? " Lv." + t : ""), 
                this.label_skinfo.text = i.skillInfo, i.maxlv <= 6 ? this.img_skbg.height = 355 : this.img_skbg.height = 355 + 40 * (i.maxlv - 6);
                var s = [];
                for (let e = 0; e < i.maxlv; e++) {
                    const t = i.lvData[e + 1];
                    if (t) {
                        var n = "";
                        n = null == t.desc && (t.addAtk > 0 || t.damageScale > 0) ? t.addAtk + "(+" + Math.floor(100 * t.damageScale) + "%" + (i.isPhyDamage ? " 物理加成" : " 法术加成") + ")" : null == t.desc ? "" : t.desc;
                        var a = {
                            lv: {
                                text: "lv." + (e + 1)
                            },
                            cd: {
                                text: u.decimalRound(t.cd / 1e3) + "秒"
                            },
                            damage: {
                                text: n
                            }
                        };
                        s.push(a);
                    }
                }
                this.list_attr.array = s;
            }
        }
    }
    var lm = Laya.Scene;
    class hm {
        constructor() {
            this.path = "ui_view/v_FightReady.scene", this.isOpen = !1, this.isLoad = !1, this.firstOpen = !0, 
            this.selfReady = !1, d.Instance.Reg(a.UIFightReady_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFightReady_Close, e => {
                this.Close(e[0]);
            }), d.Instance.Reg(a.UIFightReady_StartGame, e => {
                this.StartGame();
            }), d.Instance.Reg(a.UIFightReady_CancleGame, e => {
                this.CancleGame();
            }), d.Instance.Reg(a.UIFightReady_UpdateRes, e => {
                this.UpdateRes();
            }), d.Instance.Reg(a.UIFightReady_UpdateHeroList, e => {
                this.UpdateHeroList(e[0]);
            }), d.Instance.Reg(a.UIFightReady_CheckInfo, e => {
                this.updateCheckInfo();
            }), d.Instance.Reg(a.UIFightReady_UpdateWing, e => {
                this.wingUpdate();
            }), d.Instance.Reg(a.UISocial_TeamTalk, e => {
                this.updateTeamMsg(e[0]);
            }), d.Instance.Reg(a.VoipScope_Update, () => {
                this.updateVoip();
            }), d.Instance.Reg(a.UIWing_UPUpdate, e => {
                this.wingUpdate();
            }), d.Instance.Reg(a.UIShowModel_Resume, e => {
                this.showModelResume(e[0]);
            }), w.Instance.RegisterNet(12039, e => {
                this.s2c_join_team(e);
            }), w.Instance.RegisterNet(12014, e => {
                this.s2c_team_info(e);
            }), w.Instance.RegisterNet(13006, e => {
                this.s2c_change_role(e);
            }), w.Instance.RegisterNet(12005, e => {
                this.s2c_match_success(e);
            }), w.Instance.RegisterNet(12002, e => {
                this.s2c_add_match(e);
            }), w.Instance.RegisterNet(12004, e => {
                this.s2c_del_match(e);
            }), w.Instance.RegisterNet(13008, e => {
                this.s2c_get_role_demo(e);
            }), w.Instance.RegisterNet(12041, e => {
                this.s2c_team_tiren(e);
            }), w.Instance.RegisterNet(12044, e => {
                this.s2c_change_xxlv(e);
            });
        }
        static get Instance() {
            return null == this.instance && (hm.instance = new hm()), hm.instance;
        }
        Open() {
            d.Instance.Send(a.UIGameTipsModel_SetTips, "正在加载,请稍后..."), this.isOpen = !0, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            lm.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.selfReady = !1, this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1004
            }), this.firstOpen = !1), Y.curMapID == Y.mapID_sh ? te.Instance.init3DScene("UI_FightReady_View") : te.Instance.initUnit3DScene("UI_FightReady_View"), 
            d.Instance.Send(a.UIGameTipsModel_Close), ie.Instance.addUI(this), this.uiControl.init(), 
            this.playerData && this.uiControl.updatePlayerList(this.playerData), (s.isOppoPlatform || s.isVivoPlatform || s.isOppoGameCenterPlatform) && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_clickAD.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform)), 
            (s.isTopOnPlatform || s.isTapTapPlatform || s.is4399Platform || s.isHuaweiPlatform || s.isOppoGameCenterPlatform || s.isVivoPlatform) && Laya.timer.once(500, this, () => {
                this.isOpen && le.Instance.ShowNativeBannerAD(1, this.uiControl, 850, 432, 253, 123, 2);
            }), s.isXiaoMiPlatform && (Laya.timer.once(500, this, () => {
                this.isOpen && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1129, 470, 200, 155, 2);
            }), Laya.timer.once(2e3, this, () => {
                this.isOpen && le.Instance.showInterXiaomi();
            })), s.isOppoPlatform && le.Instance.ShowNativeBannerAD(1, this.uiControl, 858, 437, 134, 110, 2), 
            s.curLoginFightEndCount > 0 && s.isWXPlatform && le.Instance.ShowInterstitialAd(1), 
            this.uiControl.onDialogOpen(), s.isDYVivoPlatform && Laya.timer.once(500, this, () => {
                this.isOpen && le.Instance.showFloatIcon(917, 427);
            }), s.isVivoPlatform && Laya.timer.once(500, this, () => {
                this.isOpen && le.Instance.ShowNewNativeAD([ {
                    uiRoot: this.uiControl,
                    x: 924,
                    y: 440,
                    width: 120,
                    height: 120,
                    style: I.icon
                } ]);
            });
        }
        Close(e) {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.icon), this.playerData = null, 
            this.selfReady = !1, this.isOpen && (this.isOpen = !1, te.Instance.removeScene3d(), 
            ie.Instance.removeUI(this), Y.curMapID == Y.mapID_sh && q.fixedCurSceneBG(!1), e && d.Instance.Send(a.UIGameMain_Open));
        }
        showModelResume(e) {
            "UI_FightReady_View" == e && this.isOpen && this.uiControl && (this.uiControl.removeSelf(), 
            Laya.stage.addChild(this.uiControl));
        }
        updateVoip() {
            this.uiControl && this.uiControl.updateVoip();
        }
        UpdateRes() {
            this.uiControl && this.uiControl.updateRes();
        }
        UpdateHeroList(e) {
            this.isOpen && this.uiControl && this.uiControl.updateHeroList(e || this.uiControl.curHeroID);
        }
        StartGame() {
            Y.curMapID == Y.mapID_33 ? d.Instance.Send(a.UISuperStart_Open, () => {
                w.Instance.GetNetMsgData("c2s_team_ready").Send({
                    teamID: s.teamId,
                    state: 1
                });
            }) : Y.curMapID == Y.mapID_sh && d.Instance.Send(a.UISHModel_Open, () => {
                w.Instance.GetNetMsgData("c2s_team_ready").Send({
                    teamID: s.teamId,
                    state: 1
                });
            });
        }
        CancleGame() {
            w.Instance.GetNetMsgData("c2s_team_ready").Send({
                teamID: s.teamId,
                state: 0
            });
        }
        s2c_team_tiren(e) {
            e && d.Instance.Send(a.UIConfirm_Open, 0, 0, "您已被移除了队伍！\r\n(试玩次数和超凡开局将被保留！)");
        }
        s2c_change_xxlv(e) {
            e && 1 == e.code && this.uiControl && this.uiControl.updateCurDungeon(e.xxlv);
        }
        s2c_get_role_demo(e) {
            this.isOpen && this.uiControl && -1 != this.uiControl.curHeroID && w.Instance.GetNetMsgData("c2s_change_role").Send({
                role_id: this.uiControl.curHeroID
            });
        }
        s2c_join_team(e) {
            e && 1 != e.code && d.Instance.Send(a.UIGameTipsModel_SetTips, "加入房间失败!", 1500);
        }
        s2c_team_info(e) {
            if (null != e) {
                if (0 == e.mapID) return s.teamId = 0, void (this.isOpen && this.Close(!0));
                Y.curMapID = e.mapID;
            }
            if (null == e || 1 != e.code) return console.log("error s2c_team_info ", e.code), 
            void (1203 == e.code ? w.Instance.GetNetMsgData("c2s_team_info").Send({}) : 1204 != e.code && this.isOpen && this.Close(!0));
            null != e && 0 != e.team.length ? (d.Instance.Send(a.UIGameMain_Close), this.isOpen || s.curGameScene != i.HomeScene || (fu.Instance.isFighting ? console.log("s2c_team_info open isFighting true") : (ie.Instance.closeAllUI(), 
            this.Open())), this.teamInfo(e), d.Instance.Send(a.UISocial_SetTeam, e.team)) : w.Instance.GetNetMsgData("c2s_join_team").Send({
                teamID: 0,
                mapID: Y.curMapID
            });
        }
        s2c_del_match(e) {
            1 != e.code && console.log("12004 errorCode", e.code);
        }
        s2c_add_match(e) {
            1 != e.code && console.log("12002 errorCode", e.code);
        }
        s2c_match_success(e) {
            this.Close(), Z.Instance.isNewPlayerFlag && (Z.Instance.isNewPlayerFlag = !1), d.Instance.Send(a.UIMatchIngModel_Close), 
            null != e.player && (Y.curMapID = e.mapid, f.isLocalServer = 1 == e.offline, f.reSetLogicFrame(e.frameCD), 
            d.Instance.Send(a.FightManager_loadFightRes, e.player, e.is_new));
        }
        s2c_change_role(e) {
            1 == e.code && this.UpdateHeroList(Z.Instance.curHeroID);
        }
        teamInfo(e) {
            s.teamId = e.teamID, console.log("房间ID ", s.teamId), this.playerData = e.team, this.isOpen && (this.updatePlayer(), 
            this.uiControl && this.uiControl.updatePlayerList(this.playerData), this.uiControl && this.uiControl.updateCurDungeon(e.xxlv), 
            s.isWXPlatform && this.playerData.length > 1 && !du.Instance.isJoinSuccess && (du.Instance.voipScope ? du.Instance.waitJoinVoip(s.teamId) : du.Instance.waitGroupId = s.teamId + ""));
        }
        isEnableHero(e) {
            if (this.playerData) for (let t = 0; t < this.playerData.length; t++) {
                const i = this.playerData[t];
                if (Q.Instance.getBaseID(e) == Q.Instance.getBaseID(i.roleID)) return s.playerID == i.id;
            }
            return !0;
        }
        updateCheckInfo() {
            this.isOpen && s.teamId > 0 && w.Instance.GetNetMsgData("c2s_join_team").Send({
                teamID: s.teamId,
                mapID: Y.mapID_33
            });
        }
        updateTeamMsg(e) {
            var t = 0;
            if (this.playerData) for (let i = 0; i < this.playerData.length; i++) {
                if (this.playerData[i].id == e.player.friendid) {
                    t = i + 1;
                    break;
                }
            }
            t > 0 && this.uiControl && this.uiControl.setTalkMsg(t, e.player.nickname, e.msg);
        }
        updatePlayer() {
            var e = this.playerData.length > 0, t = null, i = 5;
            Y.curMapID == Y.mapID_55 ? i = 5 : Y.curMapID == Y.mapID_33 ? i = 3 : Y.curMapID == Y.mapID_11 && (i = 1);
            for (var s = 0; s < i; s++) null != (t = this.playerData[s]) && e && (e = 1 == t.state);
            e ? d.Instance.Send(a.UIMatchIngModel_Open) : d.Instance.Send(a.UIMatchIngModel_Close);
        }
        wingUpdate() {
            this.isOpen && this.uiControl && this.uiControl.wingUpdate();
        }
    }
    hm.instance = null, hm.waitLogin = !1;
    class rm {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_Social.scene", this.isLoad = !1, this.curSelectType = -1, 
            this.isShowTeam = !1, this.showFriendList = [], this.friendList = [], this.friendOnnlieList = [], 
            this.friendnum = 0, this.friendlimit = 0, this.offlineMsgID = [], this.dicTalkMsgList = {}, 
            this.dicWorldTalkMsgList = {}, this.maxPlayerLength = 0, this.isEndPos = !1, this.newMsgFriend = !1, 
            this.newMsgTeam = !1, this.tjFriendList = [], this.teamListInfo = [], d.Instance.Reg(a.UISocial_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UISocial_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UISocial_SetTeam, e => {
                this.setTeam(e[0]);
            }), w.Instance.RegisterNet(17006, e => {
                this.s2c_get_friend_list(e);
            }), w.Instance.RegisterNet(17008, e => {
                this.s2c_get_friend_online(e);
            }), w.Instance.RegisterNet(17017, e => {
                this.s2c_get_tuijian_list(e);
            }), w.Instance.RegisterNet(17012, e => {
                this.s2c_friend_del(e);
            }), w.Instance.RegisterNet(17010, e => {
                this.s2c_friend_add(e);
            }), w.Instance.RegisterNet(17019, e => {
                this.s2c_friend_apply_toB(e);
            }), w.Instance.RegisterNet(17021, e => {
                this.s2c_friend_apply_get(e);
            }), w.Instance.RegisterNet(17023, e => {
                this.s2c_friend_apply_act(e);
            }), w.Instance.RegisterNet(17025, e => {
                this.s2c_chat(e);
            }), w.Instance.RegisterNet(17026, e => {
                this.s2c_push_chat(e);
            }), w.Instance.RegisterNet(17028, e => {
                this.s2c_get_offline_chat(e);
            }), w.Instance.RegisterNet(17030, e => {
                this.s2c_get_offline_ids(e);
            });
        }
        static get Instance() {
            return null == this.instance && (rm.instance = new rm()), rm.instance;
        }
        Open(e, t) {
            this.curSelectType = e, this.isShowTeam = t, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.init(), s.isVivoPlatform && (le.Instance.HideNewNativeAD(I.icon), 
            le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 934,
                y: 550,
                width: 400,
                height: 200,
                style: I.bigImage,
                gravity: "bottom|right"
            } ])), d.Instance.Send(a.UIGameMain_HideWxClup);
        }
        Close() {
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.bigImage), d.Instance.Send(a.UIGameMain_ShowWxClup), 
            this.curSelectType = -1, this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close(), 
            this.uiControl && this.uiControl.uninit(), d.Instance.Send(a.UIGameMain_UpdateOffLineMsg));
        }
        setTeam(e) {
            this.teamListInfo = [];
            for (let i = 0; i < e.length; i++) {
                const s = e[i];
                var t = {
                    friendid: s.id,
                    url: s.url,
                    nickname: s.name,
                    state: 1,
                    stage: s.stage
                };
                this.teamListInfo.push(t);
            }
            4 == this.curSelectType && this.uiControl && this.uiControl.updatePlayerList(this.teamListInfo);
        }
        haveFriend(e) {
            if (null != this.friendList) for (var t = 0; t < this.friendList.length; t++) {
                if (this.friendList[t].friendid == e) return !0;
            }
            return e == s.playerID;
        }
        setShowFriend() {
            this.showFriendList = [];
            for (let e = 0; e < this.friendOnnlieList.length; e++) {
                const t = this.friendOnnlieList[e];
                this.showFriendList.push(t);
            }
            for (let t = 0; t < this.friendList.length; t++) {
                const i = this.friendList[t];
                var e = !1;
                for (let t = 0; t < this.friendOnnlieList.length; t++) {
                    if (this.friendOnnlieList[t].friendid == i.friendid) {
                        e = !0;
                        break;
                    }
                }
                e || this.showFriendList.push(i);
            }
            1 == this.curSelectType && this.uiControl && this.uiControl.updatePlayerList(this.showFriendList);
        }
        haveOffLineMsg(e) {
            return -1 != this.offlineMsgID.indexOf(e) || this.dicTalkMsgList[e] && this.dicTalkMsgList[e].num > 0;
        }
        s2c_get_tuijian_list(e) {
            this.tjFriendList = [], null != e && null != e.tuijian && e.tuijian.length > 0 && (this.tjFriendList = e.tuijian), 
            3 == this.curSelectType && this.uiControl && this.uiControl.updatePlayerList(this.tjFriendList);
        }
        s2c_get_friend_list(e) {
            if (e) {
                this.friendnum = e.friendnum, this.friendlimit = e.friendlimit, this.maxPlayerLength = e.friendlimit, 
                this.isEndPos = 0 == e.friend.length || 10 * e.index > this.friendlimit, 1 == e.index && (this.friendList = []);
                for (let t = 0; t < e.friend.length; t++) this.friendList.push(e.friend[t]);
            }
            this.setShowFriend();
        }
        s2c_get_friend_online(e) {
            this.friendOnnlieList = [], e && e.online && (this.friendOnnlieList = e.online), 
            this.setShowFriend();
        }
        s2c_friend_del(e) {
            w.Instance.GetNetMsgData("c2s_get_friend_online").Send({}), w.Instance.GetNetMsgData("c2s_get_friend_list").Send({
                index: 1
            });
        }
        s2c_friend_add(e) {
            1 == e.code ? d.Instance.Send(a.UIGameTipsModel_SetTips, "添加好友成功!", 1e3) : d.Instance.Send(a.UIGameTipsModel_SetTips, "未找到对应玩家！", 1e3), 
            w.Instance.GetNetMsgData("c2s_get_friend_online").Send({}), w.Instance.GetNetMsgData("c2s_get_friend_list").Send({
                index: 1
            });
        }
        s2c_friend_apply_get(e) {
            2 == this.curSelectType && this.uiControl && this.uiControl.updatePlayerList(e && e.friend ? e.friend : []);
        }
        s2c_chat(e) {
            if (e) {
                if (4 == e.type || 5 == e.type) return void (f.isLocalServer && d.Instance.Send(a.UIFightMainModel_Talk, !0, e));
                if (1 != e.code) return console.log("s2c_chat code " + e.type), 1706 == e.code && this.uiControl && this.uiControl.updateTalkList(0, !0), 
                void (1707 == e.code && d.Instance.Send(a.UIConfirm_Open, 1, 0, "尊敬的玩家，由于在聊天中的内容涉及政治、污秽、恶心等敏感不正当言论，特此对您做出封禁聊天功能的处罚\n    解封时间:" + q.formatDate(1e3 * Number(e.reMsg))));
                if (1 == e.type) {
                    var t = this.dicTalkMsgList[e.to_id];
                    null == t ? (t = {
                        num: 1,
                        list: []
                    }, this.dicTalkMsgList[e.to_id] = t) : t.num = t.num + 1;
                    var i = {
                        img_bg: {
                            x: 461
                        },
                        img_icon: {
                            x: 463,
                            skin: le.Instance.UserInfo.avatarUrl
                        },
                        img_textbg: {
                            x: 455,
                            scaleX: -1
                        },
                        label_name: {
                            x: 254,
                            align: "right",
                            text: le.Instance.UserInfo.nickName
                        },
                        label_time: {
                            x: 97,
                            text: ""
                        },
                        label_msg: {
                            x: 138,
                            text: e.reMsg
                        },
                        img_ops: {
                            x: 538,
                            visible: !1
                        }
                    };
                    t.list.push(i), this.uiControl && this.uiControl.updateTalkList(e.to_id);
                }
            }
        }
        s2c_push_chat(e) {
            if (4 != e.type && 5 != e.type) {
                var t = 1 == e.type ? e.player.friendid : -1;
                this.newMsgFriend = 1 != this.curSelectType && 1 == e.type, this.newMsgTeam = 4 != this.curSelectType && 2 == e.type;
                var i = 3 == e.type || 6 == e.type ? this.dicWorldTalkMsgList[t] : this.dicTalkMsgList[t];
                null == i ? (i = {
                    num: 1,
                    list: []
                }, 3 == e.type || 6 == e.type ? this.dicWorldTalkMsgList[t] = i : this.dicTalkMsgList[t] = i) : i.num = i.num + 1, 
                this.dicWorldTalkMsgList[t] && this.dicWorldTalkMsgList[t].list.length >= 20 && this.dicWorldTalkMsgList[t].list.shift();
                var n = e.player.friendid == s.playerID, o = -1 != e.msg.indexOf("#"), l = o ? e.msg.substring(0, e.msg.indexOf("#")) : e.msg, h = o ? e.msg.substring(e.msg.indexOf("#") + 1, e.msg.indexOf("@")) : 0, r = o ? e.msg.substring(e.msg.indexOf("@") + 1, e.msg.length) : 0, c = {
                    isSelf: n,
                    roomid: Number(h),
                    mapID: Number(r),
                    friendid: e.player.friendid,
                    img_bg: {
                        x: n ? 461 : 111
                    },
                    img_icon: {
                        x: n ? 463 : 114,
                        skin: e.player.url
                    },
                    img_textbg: {
                        x: n ? 455 : 181,
                        scaleX: n ? -1 : 1
                    },
                    label_name: {
                        x: n ? 254 : 181,
                        align: n ? "right" : "left",
                        text: e.player.nickname
                    },
                    label_time: {
                        x: n ? 97 : 352,
                        text: ""
                    },
                    label_msg: {
                        x: n ? 138 : 190,
                        width: o ? 350 : 440,
                        text: l
                    },
                    label_jump: {
                        visible: o,
                        x: n ? 364 : 415
                    },
                    img_ops: {
                        x: n ? 538 : 17,
                        visible: !1
                    }
                };
                i.list.push(c), this.uiControl && this.uiControl.updateTalkList(t), d.Instance.Send(a.UIGameMain_UpdateOffLineMsg), 
                2 == e.type && d.Instance.Send(a.UISocial_TeamTalk, e), 3 != e.type && 6 != e.type || d.Instance.Send(a.UIGameMain_WorldTalk, e);
            } else d.Instance.Send(a.UIFightMainModel_Talk, !1, e);
        }
        s2c_get_offline_ids(e) {
            if (this.offlineMsgID = [], e) for (let t = 0; t < e.offline.length; t++) {
                const i = e.offline[t];
                this.offlineMsgID.push(i.id);
            }
        }
        s2c_get_offline_chat(e) {
            if (null != e && 1 == e.type) {
                var t = this.dicTalkMsgList[e.id];
                null == t ? (t = {
                    num: 1,
                    list: []
                }, this.dicTalkMsgList[e.id] = t) : t.num = t.num + 1;
                for (let a = 0; a < e.off_chat.length; a++) {
                    const o = e.off_chat[a];
                    var i = e.id == s.playerID, n = {
                        img_bg: {
                            x: i ? 461 : 111
                        },
                        img_icon: {
                            x: i ? 463 : 92,
                            skin: e.player.url
                        },
                        img_textbg: {
                            x: i ? 455 : 160,
                            scaleX: i ? -1 : 1
                        },
                        label_name: {
                            x: i ? 254 : 165,
                            align: i ? "right" : "left",
                            text: e.player.nickname
                        },
                        label_time: {
                            x: i ? 97 : 352,
                            text: w.Instance.severTime / 1e3 - o.time > 60 ? q.GetDateString2(o.time) : ""
                        },
                        label_msg: {
                            x: i ? 138 : 175,
                            text: o.msg
                        },
                        img_ops: {
                            x: i ? 538 : 17,
                            visible: !1
                        }
                    };
                    t.list.push(n);
                }
                this.uiControl && this.uiControl.updateTalkList(e.id), w.Instance.GetNetMsgData("c2s_get_offline_chat").Send({
                    type: 2,
                    id: e.id
                });
                var a = this.offlineMsgID.indexOf(e.player.friendid);
                -1 != a && this.offlineMsgID.splice(a, 1);
            }
        }
        s2c_friend_apply_toB(e) {
            1 != e.code && console.log("s2c_friend_apply_toB code " + e.code);
        }
        s2c_friend_apply_act(e) {
            w.Instance.GetNetMsgData("c2s_friend_apply_get").Send({}), 1 != e.code ? console.log("s2c_friend_apply_act code " + e.code) : (w.Instance.GetNetMsgData("c2s_get_friend_online").Send({}), 
            w.Instance.GetNetMsgData("c2s_get_friend_list").Send({
                index: 1
            }));
        }
    }
    rm.instance = null;
    class cm extends n.ui_dialog.d_SocialUI {
        constructor() {
            super(), this.curPlayerIndex = 0, this.isEnableSend = !0, this.isEnableSendWorld = !0, 
            this.selectFriendid = 0, this.oldSendTalkTime = 0, this.curTime = 0, this.sendTime = 0, 
            this.sp_close.on(Laya.Event.MOUSE_DOWN, this, this.onClickcloseView), this.btn_sub1.on(Laya.Event.CLICK, this, this.onClickSelect1), 
            this.btn_sub2.on(Laya.Event.CLICK, this, this.onClickSelect2), this.btn_sub3.on(Laya.Event.CLICK, this, this.onClickSelect3), 
            this.btn_sub4.on(Laya.Event.CLICK, this, this.onClickSelect4), this.btn_sub1back.on(Laya.Event.CLICK, this, this.onClickSelect1), 
            this.btn_sub2back.on(Laya.Event.CLICK, this, this.onClickSelect2), this.btn_sub3back.on(Laya.Event.CLICK, this, this.onClickSelect3), 
            this.btn_sub4back.on(Laya.Event.CLICK, this, this.onClickSelect4), this.btn_sub4back.on(Laya.Event.CLICK, this, this.onClickSelect4), 
            this.img_sendtalk.on(Laya.Event.CLICK, this, this.onClickSend), this.img_sendRoom && this.img_sendRoom.on(Laya.Event.CLICK, this, this.onClickSendRoom), 
            this.sp_requset.on(Laya.Event.CLICK, this, this.onClickRequset), this.img_del.on(Laya.Event.CLICK, this, this.onClickDel), 
            this.img_add.on(Laya.Event.CLICK, this, this.onClickAdd), this.img_allInvite.on(Laya.Event.CLICK, this, this.onClickAllInvite), 
            this.img_switch.on(Laya.Event.CLICK, this, this.onClickSwitch), this.img_allcancle.on(Laya.Event.CLICK, this, this.onClickAllcancle), 
            this.list_player.array = null, this.list_player.vScrollBarSkin = "", this.list_player.renderHandler = new Laya.Handler(this, this.onPlayerListRender), 
            this.list_talk.array = null, this.list_talk.vScrollBarSkin = "", this.list_talk.renderHandler = new Laya.Handler(this, this.onListTalkRender), 
            this.img_add.visible = !s.isKSPlatform;
        }
        onOpened() {
            let e = this.list_talk.array;
            if (e) {
                for (let t = 0; t < e.length; t++) {
                    let i = e[t].img_ops;
                    i && (i.visible = !1);
                }
                this.list_talk.array = e;
            }
        }
        init() {
            var e = rm.Instance;
            1 == e.curSelectType ? this.onClickSelect1() : 2 == e.curSelectType ? this.onClickSelect2() : 3 == e.curSelectType ? this.onClickSelect3() : 4 == e.curSelectType && this.onClickSelect4(), 
            this.oldSendTalkTime = E.Instance.GetKey("oldSendTalkTime" + s.playerID) ? Number(E.Instance.GetKey("oldSendTalkTime" + s.playerID)) : 0, 
            this.curTime = s.sendMsgTime - Math.floor((w.Instance.severTime - this.oldSendTalkTime) / 1e3), 
            this.curTime < 0 && (this.curTime = 0), this.updataTime(), Laya.timer.loop(1e3, this, this.updataTime), 
            this.img_sendtalk.visible = !s.isKSPlatform, this.text_input.visible = !s.isKSPlatform, 
            this.img_sendRoom.x = s.isKSPlatform ? 460 : 606, this.sp_inputBg.visible = !s.isKSPlatform;
        }
        uninit() {
            Laya.timer.clear(this, this.updataTime);
        }
        updataTime() {
            var e = rm.Instance;
            this.curTime > 0 && this.curTime--, this.label_sendTalkTime && (this.label_sendTalkTime.visible = 3 == e.curSelectType && this.curTime > 0), 
            this.label_sendTalkTime && (this.label_sendTalkTime.text = this.curTime + "秒后可发送"), 
            3 == e.curSelectType ? this.curTime > 0 ? (this.img_sendRoom && (this.img_sendRoom.disabled = !0), 
            this.img_sendtalk.disabled = !0) : (this.img_sendRoom && (this.img_sendRoom.disabled = !1), 
            this.img_sendtalk.disabled = Z.Instance.rank < 7) : this.img_sendtalk.disabled = !1;
        }
        onClickSelect1() {
            var e = rm.Instance;
            e.curSelectType = 1, e.maxPlayerLength = e.friendlimit, e.newMsgFriend = !1, this.clearList(), 
            this.updataTime(), w.Instance.GetNetMsgData("c2s_get_friend_online").Send({}), w.Instance.GetNetMsgData("c2s_get_friend_list").Send({
                index: 1
            });
        }
        onClickSelect2() {
            var e = rm.Instance;
            e.curSelectType = 2, e.maxPlayerLength = 10, this.clearList(), this.updataTime(), 
            w.Instance.GetNetMsgData("c2s_friend_apply_get").Send({});
        }
        onClickSelect3() {
            var e = rm.Instance;
            e.curSelectType = 3, e.maxPlayerLength = 10, this.clearList(), this.updataTime(), 
            e.isShowTeam && w.Instance.GetNetMsgData("c2s_get_tuijian_list").Send({});
        }
        onClickSelect4() {
            var e = rm.Instance;
            e.curSelectType = 4, e.maxPlayerLength = 10, e.newMsgTeam = !1, this.clearList(), 
            this.updataTime(), this.updateTalkList(-1), this.updatePlayerList(e.teamListInfo);
        }
        onClickRequset() {
            w.Instance.GetNetMsgData("c2s_friend_apply_toB").Send({
                bid: this.selectFriendid
            }), d.Instance.Send(a.UIGameTipsModel_SetTips, "好友申请已发送", 1e3);
        }
        onClickDel() {
            2 == rm.Instance.curSelectType ? w.Instance.GetNetMsgData("c2s_friend_apply_act").Send({
                bid: this.selectFriendid,
                act: 2
            }) : d.Instance.Send(a.UIFriendDel_Open, this.selectFriendid, this.label_talkname.text);
        }
        onClickAdd() {
            d.Instance.Send(a.UIFriendAdd_Open);
        }
        onClickAllInvite() {
            var e, t = rm.Instance;
            if (t.isShowTeam) {
                if (1 == t.curSelectType ? e = t.friendOnnlieList : 3 == t.curSelectType && (e = t.tjFriendList), 
                null != e && null != e) for (var i = 0; i < e.length; i++) {
                    var s = e[i];
                    1 == s.state && w.Instance.GetNetMsgData("c2s_friend_pvp_invite").Send({
                        friendid: s.friendid
                    });
                }
                null != e && e.length > 0 ? d.Instance.Send(a.UIGameTipsModel_SetTips, "一键邀请成功！", 1e3) : d.Instance.Send(a.UIGameTipsModel_SetTips, "没有可邀请的玩家", 1e3);
            } else d.Instance.Send(a.UIGameTipsModel_SetTips, " 当前你还没有队伍,无法邀请", 1e3);
        }
        onClickSwitch() {
            w.Instance.GetNetMsgData("c2s_get_tuijian_list").Send({});
        }
        onClickAllcancle() {
            w.Instance.GetNetMsgData("c2s_friend_apply_act").Send({
                bid: 0,
                act: 3
            });
        }
        onClickSend() {
            var e = rm.Instance;
            if (1 == e.curSelectType || 4 == e.curSelectType || 3 == e.curSelectType) {
                var t = this.text_input.text;
                null != t && 0 != t.length && (t.length > 25 && (t = t.substring(0, 25)), (this.isEnableSend || 1 != e.curSelectType && 4 != e.curSelectType) && (this.isEnableSendWorld || 3 != e.curSelectType) ? (1 != e.curSelectType && 4 != e.curSelectType || (this.isEnableSend = !1, 
                Laya.timer.once(3e3, this, () => {
                    this.isEnableSend = !0;
                })), 3 == e.curSelectType && (this.isEnableSendWorld = !1, this.img_sendRoom && (this.img_sendRoom.disabled = !0), 
                this.img_sendtalk.disabled = !0, this.curTime = s.sendMsgTime, Laya.timer.once(1e3 * s.sendMsgTime, this, () => {
                    this.isEnableSendWorld = !0;
                })), this.text_input.text = "", this.selectFriendid > 0 || 4 == e.curSelectType ? w.Instance.GetNetMsgData("c2s_chat").Send({
                    type: 1 == e.curSelectType ? 1 : 2,
                    to_id: this.selectFriendid,
                    msg: t,
                    platform: q.getPlatfromName()
                }) : 3 == e.curSelectType ? (this.oldSendTalkTime = w.Instance.severTime, E.Instance.SaveKey("oldSendTalkTime" + s.playerID, this.oldSendTalkTime + ""), 
                w.Instance.GetNetMsgData("c2s_chat").Send({
                    type: 3,
                    to_id: 0,
                    msg: t,
                    platform: q.getPlatfromName()
                })) : d.Instance.Send(a.UIGameTipsModel_SetTips, "请选择要发送的好友", 1500)) : d.Instance.Send(a.UIGameTipsModel_SetTips, "发言太快，请稍等一会！", 1500));
            }
        }
        onClickSendRoom() {
            var e = rm.Instance;
            if (3 == e.curSelectType) {
                var t = "#" + s.teamId + "@" + Y.curMapID, i = Y.curMapID == Y.mapID_sh ? "生化模式--第" + s.DungeonLv + "关,需求强力队友协助" + t : "排位赛-3V3,征召给力队友" + t;
                this.isEnableSendWorld || 3 != e.curSelectType ? (3 == e.curSelectType && (this.isEnableSendWorld = !1, 
                this.img_sendRoom && (this.img_sendRoom.disabled = !0), this.img_sendtalk.disabled = !0, 
                this.curTime = s.sendMsgTime, Laya.timer.once(1e3 * s.sendMsgTime, this, () => {
                    this.isEnableSendWorld = !0;
                })), w.Instance.GetNetMsgData("c2s_chat").Send({
                    type: 6,
                    to_id: 0,
                    msg: i,
                    platform: q.getPlatfromName()
                }), this.oldSendTalkTime = w.Instance.severTime, E.Instance.SaveKey("oldSendTalkTime" + s.playerID, this.oldSendTalkTime + "")) : d.Instance.Send(a.UIGameTipsModel_SetTips, "发言太快，请稍等一会！", 1500);
            }
        }
        clearList() {
            var e = rm.Instance;
            this.btn_sub1.visible = 1 == e.curSelectType, this.btn_sub2.visible = 2 == e.curSelectType && !e.isShowTeam, 
            this.btn_sub3.visible = 3 == e.curSelectType, this.btn_sub4.visible = 4 == e.curSelectType && e.isShowTeam, 
            this.btn_sub1back.visible = !this.btn_sub1.visible, this.btn_sub2back.visible = !this.btn_sub2.visible && !e.isShowTeam, 
            this.btn_sub3back.visible = !this.btn_sub3.visible, this.btn_sub4back.visible = !this.btn_sub4.visible && e.isShowTeam, 
            this.btn_sub3.x = 0, this.btn_sub3back.x = 0, this.btn_sub1.x = 167, this.btn_sub1back.x = 167, 
            e.isShowTeam ? (this.btn_sub4.x = 332, this.btn_sub4back.x = 332) : (this.btn_sub2.x = 332, 
            this.btn_sub2back.x = 332), e.isEndPos = !1, this.list_player.array = [], Vp.Instance.allData = [], 
            this.list_talk.array = [], this.label_talkname.text = 4 == e.curSelectType ? "队伍消息" : 3 == e.curSelectType ? "世界消息" : "", 
            this.label_talkname.visible = !1, this.label_tips.visible = !0, this.img_del.visible = !1, 
            this.box_requset.visible = !1, this.img_switch.visible = 3 == e.curSelectType && e.isShowTeam, 
            this.text_input.prompt = 3 == e.curSelectType && Z.Instance.rank < 7 ? "白银段位可发送世界聊天" : "请点击输入", 
            this.img_sendtalk.disabled = 3 == e.curSelectType && Z.Instance.rank < 7, this.text_input.disabled = 3 == e.curSelectType && Z.Instance.rank < 7, 
            this.label_naerbyPlayer && (this.label_naerbyPlayer.visible = 3 == e.curSelectType), 
            this.label_naerbyPlayerTips && (this.label_naerbyPlayerTips.visible = 3 == e.curSelectType && !e.isShowTeam), 
            this.list_player.y = 3 == e.curSelectType ? 121 : 82, this.list_player.height = 3 == e.curSelectType ? 440 : 479, 
            this.img_allInvite.visible = 1 == e.curSelectType && e.isShowTeam || 3 == e.curSelectType && e.isShowTeam, 
            this.img_allcancle.visible = !1, this.selectFriendid = 0, this.box_input.visible = 1 == e.curSelectType || 4 == e.curSelectType || 3 == e.curSelectType, 
            this.img_sendRoom && (this.img_sendRoom.visible = 3 == e.curSelectType && e.isShowTeam), 
            3 == e.curSelectType && e.isShowTeam ? (this.img_sendtalk.x = 457, this.label_sendTalkTime && (this.label_sendTalkTime.x = 459)) : (this.img_sendtalk.x = 586, 
            this.label_sendTalkTime && (this.label_sendTalkTime.x = 590)), this.curSelectImg && (this.curSelectImg.visible = !1), 
            this.img_sub1backred.visible = !1, this.img_sub4backred.visible = !1, 3 == e.curSelectType && this.updateTalkList(-1);
        }
        onClickcloseView() {
            d.Instance.Send(a.UISocial_Close);
        }
        updateTalkList(e, t) {
            var i = rm.Instance;
            if (null == t || 0 == t) if (this.box_requset.visible = !1, this.selectFriendid == e || e <= 0 && (4 == i.curSelectType || 3 == i.curSelectType)) {
                var s = 3 == i.curSelectType ? i.dicWorldTalkMsgList[e] : i.dicTalkMsgList[e];
                s ? (s.num = 0, this.list_talk.array = s.list, this.list_talk.scrollTo(s.list.length)) : this.list_talk.array = [];
            } else this.updateMsgRed(e); else this.box_requset.visible = !0, this.list_talk.array = [];
            this.img_sub1backred.visible = i.newMsgFriend, this.img_sub4backred.visible = i.newMsgTeam;
        }
        updateMsgRed(e) {
            if (e > 0 && 1 == rm.Instance.curSelectType) {
                for (let t = 0; t < this.list_player.array.length; t++) {
                    const i = this.list_player.array[t];
                    i.img_msgred.visible = i.data.friendid == e;
                }
                this.list_player.array = this.list_player.array;
            }
        }
        updatePlayerList(e) {
            for (var t = rm.Instance, i = [], s = !1, n = 0; n < t.maxPlayerLength; n++) {
                var a = e[n];
                if (null == a) break;
                s = a.friendid == this.selectFriendid, this.curPlayerIndex = n;
                var o = mp.Instance.GetRankData(a.stage), l = 1 == t.curSelectType && t.isShowTeam && 1 == a.state || 2 == t.curSelectType || 3 == t.curSelectType || 4 == t.curSelectType && !t.haveFriend(a.friendid), h = {
                    data: a,
                    offlineMsg: t.haveOffLineMsg(a.friendid),
                    img_select: {
                        visible: !1
                    },
                    img_icon: {
                        disable: 0 == a.state,
                        skin: "" == a.url ? "icon/tx_zhans.png" : a.url
                    },
                    label_name: {
                        text: "" == a.nickname ? "游客" : a.nickname
                    },
                    img_rankicon: {
                        skin: null != o ? o.rankIcon : ""
                    },
                    label_rank: {
                        text: null != o ? o.rankName : ""
                    },
                    label_state: {
                        text: 4 == t.curSelectType ? "" : 0 == a.state ? "离线" : 1 == a.state ? "在线" : 2 == a.state ? "战斗中" : "队伍中"
                    },
                    img_msgred: {
                        visible: t.haveOffLineMsg(a.friendid)
                    },
                    img_ops: {
                        visible: l
                    },
                    label_opsname: {
                        visible: l,
                        text: 2 == t.curSelectType ? "同意" : 4 == t.curSelectType ? "添加好友" : "邀请"
                    }
                };
                i.push(h);
            }
            this.list_player.array = i, 2 == t.curSelectType && (i.length > 0 ? this.img_allcancle.visible = !0 : this.img_allcancle.visible = !1, 
            s || (this.label_talkname.text = "", this.img_del.visible = !1));
        }
        onPlayerListRender(e, t) {
            var i, s = rm.Instance;
            !s.isEndPos && this.curPlayerIndex < s.maxPlayerLength && t + 1 == this.curPlayerIndex && (1 == s.curSelectType || 2 == s.curSelectType) && w.Instance.GetNetMsgData("c2s_get_friend_list").Send({
                index: Math.floor(this.curPlayerIndex / 10) + 2
            }), (i = e.getChildByName("btn_click")).off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, t ]), 
            (i = e.getChildByName("img_ops")).off("click", this, this.onClickOps), i.on("click", this, this.onClickOps, [ e, t ]);
            var n = e.getChildByName("img_select");
            n && e.dataSource.data.friendid == this.selectFriendid && (this.curSelectImg && (this.curSelectImg.visible = !1), 
            this.curSelectImg = n, this.curSelectImg.visible = !0);
        }
        onClickUse(e, t) {
            var i = rm.Instance;
            if (1 == i.curSelectType || 2 == i.curSelectType) {
                this.selectFriendid = e.dataSource.data.friendid;
                var s = e.getChildByName("img_select");
                s && e.dataSource.data.friendid == this.selectFriendid && (this.curSelectImg && (this.curSelectImg.visible = !1), 
                this.curSelectImg = s, this.curSelectImg.visible = !0);
                var n = e.getChildByName("img_msgred");
                n && (n.visible = !1), e.dataSource.offlineMsg && w.Instance.GetNetMsgData("c2s_get_offline_chat").Send({
                    type: 1,
                    id: e.dataSource.data.friendid
                }), this.updateTalkList(this.selectFriendid), this.label_talkname.text = e.dataSource.data.nickname;
            }
            this.img_del.visible = 1 == i.curSelectType || 2 == i.curSelectType, this.label_tips.visible = !this.img_del.visible;
        }
        onClickOps(e, t) {
            var i = e.dataSource.data;
            if (i) {
                var s = rm.Instance;
                if (2 == s.curSelectType) w.Instance.GetNetMsgData("c2s_friend_apply_act").Send({
                    bid: i.friendid,
                    act: 1
                }); else if (1 == s.curSelectType || 3 == s.curSelectType) {
                    if (!s.isShowTeam && 3 == s.curSelectType) return void d.Instance.Send(a.UIGameTipsModel_SetTips, " 当前你还没有队伍,无法邀请", 1e3);
                    w.Instance.GetNetMsgData("c2s_friend_pvp_invite").Send({
                        friendid: i.friendid
                    });
                } else 4 == s.curSelectType && w.Instance.GetNetMsgData("c2s_friend_add").Send({
                    id: i.friendid
                });
                var n = e.getChildByName("img_ops");
                n && (n.visible = !1);
                var o = e.getChildByName("label_opsname");
                o && (o.visible = !1);
            }
        }
        onListTalkRender(e, t) {
            var i;
            (i = e.getChildByName("label_jump")) && i.off("click", this, this.onClickJump), 
            i && i.on("click", this, this.onClickJump, [ e, t ]), (i = e.getChildByName("img_icon")) && i.off("click", this, this.onClickhead), 
            i && i.on("click", this, this.onClickhead, [ e, t ]), (i = e.getChildByName("img_ops")) && i.off("click", this, this.onClickInfo), 
            i && i.on("click", this, this.onClickInfo, [ e, t ]);
        }
        onClickJump(e, t) {
            let i = e.dataSource.label_name.text;
            !e.dataSource.isSelf && e.dataSource.roomid > 0 && e.dataSource.mapID > 0 ? hm.Instance.isOpen ? d.Instance.Send(a.UIConfirm_Open, 1, 0, "请先退出当前队伍", Laya.Handler.create(this, e => {
                d.Instance.Send(a.UISocial_Close), s.isWXPlatform && du.Instance.exitVoIPChat(), 
                s.teamId && w.Instance.GetNetMsgData("c2s_leave_team").Send({
                    teamID: s.teamId
                });
            })) : d.Instance.Send(a.UIConfirm_Open, 1, 0, "是否加入 " + i + " 的队伍？", Laya.Handler.create(this, t => {
                d.Instance.Send(a.UISocial_Close), s.isWXPlatform && du.Instance.exitVoIPChat(), 
                s.teamId && w.Instance.GetNetMsgData("c2s_leave_team").Send({
                    teamID: s.teamId
                }), w.Instance.GetNetMsgData("c2s_join_team").Send({
                    teamID: e.dataSource.roomid,
                    mapID: e.dataSource.mapID
                });
            }), null, 1033 == e.dataSource.mapID ? "排位赛" : "生化模式") : d.Instance.Send(a.UIGameTipsModel_SetTips, "已在队伍中", 1500);
        }
        onClickhead(e, t) {
            let i = this.list_talk.array;
            for (let e = 0; e < i.length; e++) {
                let s = i[e].img_ops;
                s && (s.visible = t == e && !s.visible);
            }
            this.list_talk.array = i;
        }
        onClickInfo(e, t) {
            let i = e.dataSource.friendid;
            i && d.Instance.Send(a.UIpersonal_info_Open, i), d.Instance.Send(a.UISocial_Close);
        }
    }
    class dm extends n.ui_dialog.d_SuperStartUI {
        constructor() {
            super(), this.btn_cancel.on(Laya.Event.MOUSE_DOWN, this, this.onClickCloseView), 
            this.sp_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), this.temp_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickCloseView), 
            this.sp_common.on(Laya.Event.MOUSE_DOWN, this, this.onClickCommon), this.btn_check.on(Laya.Event.MOUSE_DOWN, this, this.onClickCheck);
        }
        onClickCheck() {
            this.img_check.visible = !this.img_check.visible, this.label_common.text = this.img_check.visible ? "快速开始" : "普通开局";
        }
        onClickCommon() {
            s.isWXPlatform && this.img_check.visible ? this.onClickVideo() : this.onClickCloseView();
        }
        onClickCloseView() {
            d.Instance.Send(a.UISuperStart_Close);
        }
        onDialogOpen() {
            s.isTTPlatform || s.isH5Platform ? (this.btn_cancel.visible = !1, this.sp_common.visible = !0, 
            this.sp_video.x = 779, this.sp_common.x = 464) : s.isWXPlatform ? (this.box_check.visible = !0, 
            this.btn_cancel.visible = !0, this.sp_common.visible = !0, this.sp_video.x = 555, 
            this.sp_common.x = 686, 1 == le.Instance.GetBannerType() ? this.img_check.visible = Math.random() < .7 : this.img_check.visible = !1, 
            this.label_common.text = this.img_check.visible ? "快速开始" : "普通开局") : (this.btn_cancel.visible = !0, 
            this.sp_common.visible = !1, this.sp_video.x = 655, this.sp_common.x = 360), this.btn_cancel.visible = !(s.isTTPlatform || s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform), 
            this.temp_video.visible = s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform;
        }
        onClickVideo() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_kjfl").Send({
                type: 2
            }) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_kjfl").Send({
                    type: 2
                });
            }, 9);
        }
    }
    class um extends n.ui_dialog.d_TianFuUI {
        constructor() {
            super(), q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.list_attr.vScrollBarSkin = "", this.list_attr.renderHandler = new Laya.Handler(this, this.onListAttrRender), 
            this.img_clickAD.on(Laya.Event.CLICK, this, () => {
                le.Instance.onClickOppoNative();
            }), this.btn_coin.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeGlod_Open);
            }), this.btn_diamond.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeDiamond_Open);
            }), this.btn_yb.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeSP_Open);
            });
        }
        closeView() {
            d.Instance.Send(a.UITianFu_Close);
        }
        updateRes() {
            this.label_coin.text = Z.Instance.gold + "", this.label_diamond.text = Z.Instance.diamond + "", 
            this.label_yb.text = Z.Instance.yb + "", w.Instance.GetNetMsgData("c2s_mw_info").Send({});
        }
        updateAttr(e) {
            var t = [], i = [];
            for (var n in e) {
                var a = parseInt(n);
                const _ = e[a];
                for (const e in _.data) {
                    var o = ye.Instance.getAttrInfo(a), l = ye.Instance.getAttrName(e), h = ye.Instance.getAttrType(e), r = ye.Instance.getMingWen(a, _.lv);
                    if (null == r) {
                        console.error("没有找到对应等级的铭文配置 " + a + " lv " + _.lv);
                        break;
                    }
                    var c = ye.Instance.getMingWen(a, _.lv + 1), d = 0;
                    c && (d = c.data[0].value);
                    var p = 0 == _.lv && 1 == r.video, m = Z.Instance.gold >= r.glod, g = Z.Instance.mwInfo[a] >= r.mwsp, f = Z.Instance.mwInfo[a] / r.mwsp;
                    f > 1 && (f = 1);
                    var I = {
                        label_name: {
                            text: l,
                            color: o.nameColor
                        },
                        label_v: {
                            text: "+" + (0 == h ? u.decimalRound(_.data[e]) : u.decimalRound(100 * _.data[e]) + "%")
                        }
                    };
                    i.push(I);
                    let n = s.isXiaoMiPlatform || s.isHuaweiPlatform || s.isDYVivoPlatform;
                    var v = {
                        isXiaomi: n,
                        mwID: a,
                        isfirstEnable: p,
                        isVideo: 1 == r.video,
                        isGlodEnough: m,
                        isSPEnough: g,
                        img_iconbg: {
                            skin: o.iconBg
                        },
                        img_icon: {
                            skin: o.icon
                        },
                        img_iconitem: {
                            visible: !p,
                            skin: o.icon
                        },
                        img_itembar: {
                            visible: !p,
                            skin: f >= 1 ? "9gongge/xuemai_bg_012.png" : "9gongge/xuemai_bg_011.png",
                            scaleX: f
                        },
                        img_glod: {
                            visible: 0 == r.video && !n && m && g
                        },
                        img_video: {
                            visible: 1 == r.video
                        },
                        img_line: {
                            visible: !p
                        },
                        img_itembarbg: {
                            visible: !p
                        },
                        label_name: {
                            visible: !p,
                            text: o.name,
                            color: o.nameColor
                        },
                        label_v: {
                            visible: !p,
                            text: "Lv." + _.lv
                        },
                        label_attrname: {
                            visible: !p,
                            text: l
                        },
                        label_curnum: {
                            visible: !p,
                            text: "+" + (0 == h ? u.decimalRound(_.data[e]) : u.decimalRound(100 * _.data[e]) + "%")
                        },
                        label_nextnum: {
                            visible: !p,
                            text: "+" + (0 == h ? u.decimalRound(d) : u.decimalRound(100 * d) + "%")
                        },
                        label_itemnum: {
                            visible: !p,
                            text: Z.Instance.mwInfo[a] + "/" + r.mwsp,
                            color: g ? "#eae2d0" : "#e85055"
                        },
                        label_glodbtnname: {
                            visible: 0 == r.video && !n && m && g
                        },
                        label_isEnough: {
                            visible: 0 == r.video && !(!n && m && g),
                            text: m ? g ? "" : "碎片不足" : "金币不足"
                        },
                        label_videoname: {
                            visible: 1 == r.video,
                            text: p ? "激  活" : "突  破"
                        },
                        label_glod: {
                            visible: 0 == r.video && !n && m && g,
                            text: r.glod,
                            color: m ? "#eae2d0" : "#e85055"
                        },
                        label_enable: {
                            visible: p
                        },
                        label_enablenum: {
                            visible: p,
                            text: "+" + (0 == h ? u.decimalRound(d) + " " + l : u.decimalRound(100 * d) + "% " + l)
                        },
                        label_free: {
                            visible: (!m || !g) && !p && n && 0 == r.video
                        },
                        img_video2: {
                            visible: (!m || !g) && !p && n || 1 == r.video
                        }
                    };
                    console.log(v), t.push(v);
                }
            }
            this.list_attr.array = t, this.list_sumattr.array = i;
        }
        onListAttrRender(e, t) {
            var i = e.getChildByName("btn_lvup");
            i.off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, t ]);
        }
        onClickUse(e, t) {
            !e.dataSource.isXiaomi || (e.dataSource.isfirstEnable || e.dataSource.isSPEnough && e.dataSource.isGlodEnough) && !e.dataSource.isVideo ? e.dataSource.isSPEnough ? e.dataSource.isGlodEnough ? e.dataSource.isVideo ? d.Instance.Send(a.UITianFuTips_Open, e.dataSource.mwID, e.dataSource.isfirstEnable) : e.dataSource.isVideo && !s.isPCPlatform ? le.Instance.ShowVideoAD(t => {
                1 == t && w.Instance.GetNetMsgData("c2s_mw_up").Send({
                    type: e.dataSource.mwID,
                    cost: 1
                });
            }, 10) : w.Instance.GetNetMsgData("c2s_mw_up").Send({
                type: e.dataSource.mwID,
                cost: 1
            }) : d.Instance.Send(a.UIConfirm_Open, 1, 0, "金币不足,是否前往获取金币？", Laya.Handler.create(this, e => {
                d.Instance.Send(a.UIGetFreeGlod_Open);
            })) : d.Instance.Send(a.UIConfirm_Open, 1, 0, "当前血脉碎片不足,是否前往获取血脉碎片？", Laya.Handler.create(this, e => {
                d.Instance.Send(a.UIGetFuWen_Open);
            })) : le.Instance.ShowVideoAD(t => {
                0 != t && w.Instance.GetNetMsgData("c2s_mw_up").Send({
                    type: e.dataSource.mwID,
                    cost: 4
                });
            }, 10);
        }
    }
    class pm {
        constructor() {
            this.path = "ui_dialog/d_TianfuTips.scene", this.isLoad = !1, this.isOpen = !1, 
            d.Instance.Reg(a.UITianFuTips_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UITianFuTips_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (pm.instance = new pm()), pm.instance;
        }
        Open(e, t) {
            this.type = e, this.isfirstEnable = t, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        onMw_up(e) {
            w.Instance.GetNetMsgData("c2s_mw_up").Send({
                type: this.type,
                cost: e
            });
        }
        openUI() {
            this.isOpen = !0, this.uiControl.updateUI(this.isfirstEnable), this.uiControl.popup();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    pm.instance = null;
    class mm extends n.ui_dialog.d_TianfuTipsUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.CLICK, this, this.onClickClose), this.btn_common.on(Laya.Event.CLICK, this, this.onClickCommon), 
            this.btn_video.on(Laya.Event.CLICK, this, this.onClickVideo);
        }
        onClickClose() {
            d.Instance.Send(a.UITianFuTips_Close);
        }
        onClickCommon() {
            pm.Instance.onMw_up(2);
        }
        onClickVideo() {
            s.isPCPlatform ? (d.Instance.Send(a.UITianFuTips_Close), pm.Instance.onMw_up(3)) : le.Instance.ShowVideoAD(e => {
                1 == e && (d.Instance.Send(a.UITianFuTips_Close), pm.Instance.onMw_up(3));
            }, 10);
        }
        updateUI(e) {
            let t = "", i = 0;
            e ? (i = 500, t = "激活") : (i = 500, t = "升级"), this.label_num.color = Z.Instance.diamond >= i ? "#eae2d0" : "#e85055", 
            this.label_num.text = "x" + i, this.label_txt1.text = t + "血脉后英雄属性将获得极大提升", this.label_txt2.text = "请选择" + t + "方式";
        }
    }
    class gm extends n.ui_dialog.d_TipUI {
        constructor() {
            super();
        }
        onClosed() {
            this.label_tips.text = "";
        }
        SetTips(e) {
            this.label_tips.text = e;
        }
    }
    class fm extends n.ui_dialog.d_VideoToNavigateGameUI {
        constructor() {
            super(), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Close);
        }
        onClick_Close() {
            d.Instance.Send(a.UIVideoToNavigateGame_Close);
        }
        updateData(e) {
            null == e ? (this.img_videotips.visible = !0, this.img_normaltips.visible = !1) : (this.img_videotips.visible = !1, 
            this.img_normaltips.visible = !0);
        }
    }
    class Im extends n.ui_dialog.d_winUI {
        constructor() {
            super(), this.sp_next.on(Laya.Event.MOUSE_DOWN, this, this.onClickNext);
        }
        onClickNext() {
            d.Instance.Send(a.UIFightEndWinOrFail_Close);
        }
    }
    class vm {
        constructor() {
            this.wingOpen = !1, this.curShowWingId = 0, this.curWingLvMin = 0, this.curWingLvMax = 0, 
            this.curWingLv = 0, w.Instance.RegisterNet(13014, e => {
                this.s2c_wing_info(e);
            }), w.Instance.RegisterNet(13016, e => {
                this.s2c_wing_lvup(e);
            }), w.Instance.RegisterNet(13018, e => {
                this.s2c_wing_change(e);
            });
        }
        static get Instance() {
            return null == vm.instancewing && (vm.instancewing = new vm()), vm.instancewing;
        }
        s2c_wing_info(e) {
            this.wingOpen = !0, e && 0 != e.showid ? (this.curShowWingId = e.showid, this.curWingLv = e.lv, 
            this.initWingLv(this.curWingLv)) : (this.curShowWingId = 0, this.curWingLv = 0, 
            this.initWingLv(1));
        }
        s2c_wing_lvup(e) {
            e && 1 == e.code && (this.curWingLv = e.lv, this.initWingLv(this.curWingLv)), d.Instance.Send(a.UIWing_UPUpdate);
        }
        s2c_wing_change(e) {}
        initWingLv(e) {
            this.curWingData = uu.Instance.getWingResDataByLv(e), this.nextWingData = uu.Instance.getNextWingResDataByLv(e), 
            this.curWingData && (this.curWingLvMin = this.curWingData.needLv), this.nextWingData ? this.curWingLvMax = this.nextWingData.needLv : this.curWingLvMax = this.curWingLvMin + 10;
        }
        getWingInfo() {
            w.Instance.GetNetMsgData("c2s_wing_info").Send({});
        }
    }
    class _m extends n.ui_dialog.d_WingUI {
        constructor() {
            super(), this.isSpEnough = !1, q.fixedFullBG(this, [ "backbg" ]), this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.closeView), 
            this.btn_common.on(Laya.Event.MOUSE_DOWN, this, this.onClickWingUPDiamond), this.sp_getwqwing.on(Laya.Event.MOUSE_DOWN, this, this.onClickWingUP), 
            this.img_wingskicon.on(Laya.Event.MOUSE_DOWN, this, this.onClickWingSKill), this.list_sk.array = null, 
            this.list_sk.renderHandler = new Laya.Handler(this, this.onSkillListRender);
        }
        onClickWingUPDiamond() {
            this.isSpEnough ? d.Instance.Send(a.UIWing_UPDiamond) : d.Instance.Send(a.UIConfirm_Open, 0, 0, "材料不足无法升级!\r\n(升级材料可在战斗结算宝箱中获得!)");
        }
        onClickWingUP() {
            this.isSpEnough ? d.Instance.Send(a.UIWing_UP) : d.Instance.Send(a.UIConfirm_Open, 0, 0, "材料不足无法升级!\r\n(升级材料可在战斗结算宝箱中获得!)");
        }
        onClickWingSKill() {
            vm.Instance.nextWingData && d.Instance.Send(a.UISkillTips_Open, vm.Instance.nextWingData.skill);
        }
        closeView() {
            d.Instance.Send(a.UIWing_Close);
        }
        initWing() {
            this.curShowBigModel = null, this.curShowMinModel = null, te.Instance.isShow ? te.Instance.hideCurSceneModel("UI_Wing") : te.Instance.init3DScene("UI_Wing"), 
            s.isTTPlatform ? (this.btn_common.visible = !0, this.btn_common.x = 490, this.sp_getwqwing.x = 662) : (this.btn_common.visible = !1, 
            this.sp_getwqwing.x = 590);
        }
        clearWing() {
            this.curShowBigModel = null, this.curShowMinModel = null;
        }
        updateWing() {
            this.label_winglv.text = "Lv." + vm.Instance.curWingLv;
            var e = vm.Instance.curWingData;
            if (e) {
                this.label_btnname.text = 0 == vm.Instance.curWingLv ? "激活永久翅膀" : "升级翅膀";
                var t = s.systemInfo.screenWidth * s.systemInfo.pixelRatio / 2 / s.screenScale;
                this.curShowBigModel && this.curShowBigModel.curShowRes != e.modelRes && (te.Instance.destroyModelById(this.curShowBigModel.instanceId), 
                this.curShowBigModel = null), (null == this.curShowBigModel || this.curShowBigModel.isDestroy) && te.Instance.checkShowModel("UI_Wing") && (this.curShowBigModel = te.Instance.load3DModel("UI_Wing", null, e.modelRes, s.fixStageX + 666, s.fixStageY + 370, e.uiMaxScale, 0, t - 250, t + 250, !1)), 
                this.label_wingname.text = e.name, this.panel_lv.width = 0 == vm.Instance.curWingLv ? 0 : 15 + 62 * (vm.Instance.curWingLv - vm.Instance.curWingLvMin), 
                this.img_next.x = 8 + 62 * (vm.Instance.curWingLv - vm.Instance.curWingLvMin + 1), 
                this.img_next.visible = vm.Instance.curWingLv < uu.Instance.maxWingLv;
                var i = uu.Instance.getWingLvData(vm.Instance.curWingLv);
                if (i) {
                    this.label_uptips.text = i.nextLvDesc, this.box_item.visible = i.sp > 0, this.isSpEnough = Z.Instance.wingSP >= i.sp;
                    var n = vu.Instance.GetItemData(X.cbym);
                    n && (this.img_itemicon.skin = n.icon, this.label_itemnum.color = Z.Instance.wingSP >= i.sp ? "#eae2d0" : "#e85055", 
                    this.label_itemnum.text = n.name + " " + Z.Instance.wingSP + "/" + i.sp);
                }
                var a = "";
                a = 0 == vm.Instance.curWingLv ? "common/xinzeng_img_001.png" : e.lvImg, this.img_curclass.skin = a;
            }
            var o = vm.Instance.nextWingData;
            if (o) {
                this.box_next.visible = !0, this.sp_getwqwing.visible = !0, this.curShowMinModel && this.curShowMinModel.curShowRes != o.modelRes && (te.Instance.destroyModelById(this.curShowMinModel.instanceId), 
                this.curShowMinModel = null), (null == this.curShowMinModel || this.curShowMinModel.isDestroy) && te.Instance.checkShowModel("UI_Wing") && (this.curShowMinModel = te.Instance.load3DModel("UI_Wing", null, o.modelRes, s.fixStageX + 1233, 357, o.uiMinScale, 0, s.fixStageX + 1160, s.fixStageX + 1160 + 233, !1)), 
                this.label_nextwingname.text = o.name, this.label_skdesc1.text = o.skillDesc, this.label_skdesc2.text = o.skillMaxDesc;
                var l = eu.Instance.getSkillInfo(o.skill);
                l && (this.img_wingskicon.skin = l.skillIcon, this.label_skname.text = l.skillName);
            } else this.curShowMinModel && (te.Instance.destroyModelById(this.curShowMinModel.instanceId), 
            this.curShowMinModel = null), this.box_next.visible = !1, this.sp_getwqwing.visible = vm.Instance.curWingLv < uu.Instance.maxWingLv;
            s.isTTPlatform && (this.btn_common.visible = vm.Instance.curWingLv < uu.Instance.maxWingLv), 
            this.updateSkill();
        }
        updateSkill() {
            var e = [], t = uu.Instance.getWingLvData(vm.Instance.curWingLv), i = uu.Instance.getWingSkills();
            for (let o = 0; o < i.length; o++) {
                var s = eu.Instance.getSkillInfo(i[o]), n = null;
                if (t) for (let e = 0; e < t.data.length; e++) {
                    const s = t.data[e];
                    s.skillId == i[o] && (n = s);
                }
                var a = {
                    lv: n ? n.lv : 0,
                    skInfo: s,
                    img_icon: {
                        skin: s.skillIcon
                    },
                    label_name: {
                        text: s.skillName + (n ? " Lv." + n.lv : 0 == o ? "(一阶激活)" : 1 == o ? "(二阶激活)" : 2 == o ? "(三阶激活)" : "(四阶激活)")
                    }
                };
                e.push(a);
            }
            this.list_sk.array = e;
        }
        onSkillListRender(e, t) {
            var i = e.getChildByName("img_icon");
            i.off(Laya.Event.MOUSE_DOWN, this, this.onClickSkillBtn), i.on(Laya.Event.MOUSE_DOWN, this, this.onClickSkillBtn, [ e.dataSource.skInfo, e.dataSource.lv ]);
        }
        onClickSkillBtn(e, t) {
            d.Instance.Send(a.UISkillTips_Open, e.skillID, t);
        }
    }
    class ym {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_XPSkill.scene", this.isLoad = !1, this.firstOpen = !0, 
            this.cacheSkill = 0, d.Instance.Reg(a.UIXPModel_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIXPModel_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIGameMain_UpdateRes, e => {
                this.updateRes();
            }), w.Instance.RegisterNet(12052, e => {
                this.s2c_cost_xxmp(e);
            });
        }
        static get Instance() {
            return null == this.instance && (ym.instance = new ym()), ym.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            le.Instance.HideBannerAD(), this.uiControl.popup(), this.uiControl.init(), this.isOpen = !0, 
            Laya.timer.loop(1e3, this, this.updateRes), (s.isOppoPlatform || s.isVivoPlatform) && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1134, 128, 190, 190, 2);
        }
        Close() {
            le.Instance.HideBannerAD(), Laya.timer.clearAll(this), this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        updateRes() {
            this.uiControl && this.uiControl.init();
        }
        useXpSkill() {
            if (0 != this.cacheSkill) {
                var e = [];
                e.push({
                    id: o.XPSKILL
                }), e.push({
                    id: this.cacheSkill
                }), Hl.Instance.addActionToServer(e), d.Instance.Send(a.UIXPModel_Close), this.cacheSkill = 0;
            }
        }
        s2c_cost_xxmp(e) {
            e && 1 == e.code ? (this.useXpSkill(), w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 27
            })) : d.Instance.Send(a.UIConfirm_Open, 3, 0, "资源不足无法使用，观看视频可获得!", Laya.Handler.create(this, e => {
                s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_get_xxmp").Send({}) : le.Instance.ShowVideoAD(e => {
                    1 == e && w.Instance.GetNetMsgData("c2s_get_xxmp").Send({});
                }, 26);
            }));
        }
    }
    ym.instance = null;
    class Sm extends n.ui_dialog.d_XPSkillUI {
        constructor() {
            super(), this.skills = [ 6, 5, 8, 7 ], this.btn_cancel.on(Laya.Event.MOUSE_DOWN, this, this.onClickCloseView), 
            this.img_ttclose.on(Laya.Event.MOUSE_DOWN, this, this.onClickCloseView), this.sp_video.on(Laya.Event.MOUSE_DOWN, this, this.onClickVideo), 
            this.img_sk1.on(Laya.Event.MOUSE_DOWN, this, this.onClickSk1), this.img_sk2.on(Laya.Event.MOUSE_DOWN, this, this.onClickSk2), 
            this.img_sk3.on(Laya.Event.MOUSE_DOWN, this, this.onClickSk3), this.img_sk4.on(Laya.Event.MOUSE_DOWN, this, this.onClickSk4);
        }
        init() {
            this.img_ttclose.visible = !1, s.isTTPlatform ? (this.img_ttclose.visible = !0, 
            this.sp_video.x = 791) : this.sp_video.x = 677, this.label_mpnum.text = "x" + Z.Instance.menpiao;
            for (let n = 1; n < 5; n++) {
                var e = eu.Instance.getSkillBase(this.skills[n - 1]);
                this["img_sk" + n + "icon"].skin = e.skillIcon, this["label_sk" + n + "name"].text = e.skillName, 
                this["label_sk" + n + "info"].text = e.skillInfo, this["label_sk" + n].color = n > 1 && Z.Instance.menpiao <= 0 ? "#f32f2b" : "#FFFFFF";
                var t = fu.Instance.checkXPEnable(s.playerID, this.skills[n - 1]);
                if (this["img_sk" + n].disabled = t > 0, t <= 0) {
                    var i = Math.floor(e.lvData[1].cd / 1e3);
                    this["label_sk" + n + "tips"].text = i < 999 ? "每" + i + "秒可使用1次" : "每局可使用1次";
                } else {
                    (i = Math.floor(t / 1e3)) <= 0 && (i = 1), this["label_sk" + n + "tips"].text = i < 999 ? i + "秒后可使用1次" : "使用次数已用完";
                }
            }
        }
        onClickSk1() {
            ym.Instance.cacheSkill = 6, ym.Instance.useXpSkill();
        }
        onClickSk2() {
            ym.Instance.cacheSkill = 5, w.Instance.GetNetMsgData("c2s_cost_xxmp").Send({});
        }
        onClickSk3() {
            ym.Instance.cacheSkill = 8, w.Instance.GetNetMsgData("c2s_cost_xxmp").Send({});
        }
        onClickSk4() {
            ym.Instance.cacheSkill = 7, w.Instance.GetNetMsgData("c2s_cost_xxmp").Send({});
        }
        onClickCloseView() {
            d.Instance.Send(a.UIXPModel_Close);
        }
        onClickVideo() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_get_xxmp").Send({}) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_get_xxmp").Send({});
            }, 26);
        }
    }
    class wm extends n.ui_view.v_FightEndUI {
        constructor() {
            super(), this.img_back.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Continue), this.img_backroom.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Continue), 
            this.img_sharevideo.on(Laya.Event.MOUSE_DOWN, this, this.onClick_share);
        }
        onOpened() {
            this.img_sharevideo.visible = !1, this.label_share.visible = !1;
        }
        onVideoShared() {
            this.label_share.visible = !0, this.img_sharevideo.visible = !1;
        }
        onClick_Continue() {
            d.Instance.Send(a.UIFightEnd_Close);
        }
        onClick_share() {
            s.isKSPlatform ? j.Instance.ShareVedioKs(e => {
                console.log("ShareVedioKs:" + e), 1 == e ? d.Instance.Send(a.UIFightEnd_OnVideoShared) : e && d.Instance.Send(a.UIGameTipsModel_SetTips, "分享录屏失败", 1500);
            }) : le.Instance.api.isVideoShared = !0;
        }
        updateInfo() {
            this.img_resultflag.skin = fu.Instance.selfWin ? "fightend/dwzs_img_001.png" : "fightend/dwzs_img_002.png", 
            this.label_bulenum.text = fu.Instance.team1Kill + "", this.label_rednum.text = fu.Instance.team2Kill + "";
        }
        updateFightInfo() {
            var e = [], t = [], i = 0, n = 0, a = 0;
            for (let s = 0; s < Re.Instance.dicHeroPlayerInstance.length; s++) {
                const h = Re.Instance.dicHeroPlayerInstance[s];
                var o = Re.Instance.dicHeroPlayer[h];
                if (null != o) {
                    var l = {
                        img_selfbg: {
                            visible: o.isSelf
                        },
                        img_head: {
                            skin: o.modelData.heroIcon
                        },
                        label_name: {
                            text: o.modelData.heroName
                        },
                        label_playername: {
                            text: o.playerName
                        },
                        label_kill: {
                            text: o.killNum + ""
                        },
                        label_dead: {
                            text: o.deadNum + ""
                        },
                        label_help: {
                            text: o.helpKillNum + ""
                        },
                        label_coin: {
                            text: Y.curMapID == Y.mapID_sh ? "0" : o.maxCoin
                        },
                        img_mvp: {
                            skin: Y.curMapID == Y.mapID_sh ? "" : o.isMVP ? 1 == o.isMVP ? "fight/jssj_img_002.png" : "fight/jssj_img_003.png" : ""
                        },
                        img_item1: {
                            skin: o.equipList[0] ? o.equipList[0].icon : ""
                        },
                        img_item2: {
                            skin: o.equipList[1] ? o.equipList[1].icon : ""
                        },
                        img_item3: {
                            skin: o.equipList[2] ? o.equipList[2].icon : ""
                        },
                        img_item4: {
                            skin: o.equipList[3] ? o.equipList[3].icon : ""
                        },
                        img_item5: {
                            skin: o.equipList[4] ? o.equipList[4].icon : ""
                        },
                        img_item6: {
                            skin: o.equipList[5] ? o.equipList[5].icon : ""
                        },
                        img_bg1: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg2: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg3: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg4: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg5: {
                            visible: Y.curMapID != Y.mapID_sh
                        },
                        img_bg6: {
                            visible: Y.curMapID != Y.mapID_sh
                        }
                    };
                    1 == o.teamID ? e.push(l) : (i += o.killNum, n += o.deadNum, a += o.helpKillNum, 
                    t.push(l));
                }
            }
            Y.curMapID == Y.mapID_sh && (t = []).push({
                img_selfbg: {
                    visible: !1
                },
                img_head: {
                    skin: "icon/pp_img_001.png"
                },
                label_name: {
                    text: "生化魔人"
                },
                label_playername: {
                    text: ""
                },
                label_kill: {
                    text: i + ""
                },
                label_dead: {
                    text: n + ""
                },
                label_help: {
                    text: a + ""
                },
                label_coin: {
                    text: "0"
                },
                img_item1: {
                    skin: ""
                },
                img_item2: {
                    skin: ""
                },
                img_item3: {
                    skin: ""
                },
                img_item4: {
                    skin: ""
                },
                img_item5: {
                    skin: ""
                },
                img_item6: {
                    skin: ""
                },
                img_bg1: {
                    visible: !1
                },
                img_bg2: {
                    visible: !1
                },
                img_bg3: {
                    visible: !1
                },
                img_bg4: {
                    visible: !1
                },
                img_bg5: {
                    visible: !1
                },
                img_bg6: {
                    visible: !1
                }
            });
            this.list_bule.array = e, this.list_red.array = t, this.img_sharevideo.visible = s.isTTPlatform || s.isKSPlatform && j.Instance.videoUrl, 
            console.log(" this.img_sharevideo.visible:" + j.Instance.videoUrl);
        }
    }
    class Dm extends n.ui_view.v_FightEndRankShowUI {
        constructor() {
            super(), this.sp_continue.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Continue);
        }
        onClick_Continue() {
            Xp.Instance.onClickContinue();
        }
        updateWin(e) {
            this.img_resultflag.skin = e ? "fightend/dwzs_img_001.png" : "fightend/dwzs_img_002.png";
        }
        updateStar(e) {
            this.label_ranklvup.text = "";
            var t = mp.Instance.GetRankData(e);
            if (null != t) {
                this.label_rankname.text = t.rankName, this.img_rankicon.skin = t.rankIcon;
                var i = t.endStar - t.startStar;
                for (let e = 1; e <= 5; e++) {
                    var s = this["img_star" + e];
                    s.visible = e <= i, s.disabled = e > t.curStar;
                }
                this.box_star.pivotX = 40 * i;
            }
            var n = mp.Instance.GetRankData(e - 1);
            null != n && n.lv != t.lv && (this.label_ranklvup.text = Xp.Instance.isWin ? "恭喜段位晋升成功! " : "您的段位降低了!");
        }
    }
    class km {
        constructor() {
            this.isOpen = !1, this.path = "ui_view/v_FightEndSHShow.scene", this.isLoad = !1, 
            this.firstOpen = !0, this.isWin = !1, this.first = !0, this.isAdd = !1, d.Instance.Reg(a.UIFightEndSHShow_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFightEndSHShow_DelayOpen, e => {
                this.delayOpen(e[0]);
            }), d.Instance.Reg(a.UIFightEndSHShow_SetData, e => {
                this.setData(e[0], e[1]);
            }), d.Instance.Reg(a.UIFightEndSHShow_UpdateStar, e => {
                this.updateStar(e[0]);
            }), d.Instance.Reg(a.UIFightEndSHShow_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (km.instance = new km()), km.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1012
            }), this.firstOpen = !1), this.isOpen || ie.Instance.addUI(this), this.isOpen = !0, 
            this.first = !0, this.uiControl.updateStar(this.isAdd, this.isWin, this.cacheData ? this.cacheData.stage : Z.Instance.rank + (this.isWin ? 1 : -1)), 
            le.Instance.HideBannerAD(), Ll.Instance.playBgMusic(Ul.Instance.bgSound_main), s.isWXPlatform && le.Instance.ShowInterstitialAd(0), 
            s.is233Platform && le.Instance.ShowAllScreenVideo();
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            cp.Instance.HidePanel_Single(), this.isOpen && (this.isOpen = !1, ie.Instance.removeUI(this), 
            this.uiControl.autoDestroyAtClosed = !0, this.uiControl.close()), this.uiControl = null, 
            this.isLoad = !1, this.isAdd = !1;
        }
        setData(e, t) {
            t && (this.isAdd = Z.Instance.shModelCurLv < t.xxlv), this.isOpen ? this.uiControl && t && (this.isWin = e, 
            this.cacheData = t, this.uiControl.updateStar(this.isAdd, this.isWin, this.cacheData.stage)) : (Laya.timer.clearAll(this), 
            this.isWin = e, this.cacheData = t, this.Open());
        }
        delayOpen(e) {
            this.isWin = e, this.cacheData = null, Laya.timer.once(2e3, this, () => {
                this.Open();
            });
        }
        updateStar(e) {
            this.uiControl && this.uiControl.updateStar(this.isAdd, this.isWin, e);
        }
        onClickContinue() {
            d.Instance.Send(a.UIFightEndSHShow_Close);
            let e = s.isOnline && s.isOppoPlatform || !s.isOppoPlatform;
            this.cacheData && this.cacheData.boxnumget <= this.cacheData.boxnumlimit && e ? d.Instance.Send(a.UIFightEndBox_Open, this.cacheData.boxnumget, this.cacheData.boxnumlimit) : d.Instance.Send(a.UIFightEnd_Open);
        }
    }
    km.instance = null;
    class Cm extends n.ui_view.v_FightEndSHShowUI {
        constructor() {
            super(), this.sp_continue.on(Laya.Event.MOUSE_DOWN, this, this.onClick_Continue);
        }
        onClick_Continue() {
            km.Instance.onClickContinue();
        }
        updateWin(e) {
            this.img_resultflag.skin = e ? "fightend/dwzs_img_001.png" : "fightend/dwzs_img_002.png";
        }
        updateStar(e, t, i) {
            this.updateWin(t);
            var s = "fightend/shnum_" + (i >= 10 ? Math.floor(i / 10) : 0) + ".png", n = "fightend/shnum_" + (i >= 10 ? Math.floor(i % 10) : i) + ".png";
            this.img_num1.skin = s, this.img_num2.skin = n, this.label_ranklvup.text = t ? e ? "挑战成功，已解锁第" + (i + 1) + "关！" : i < 30 ? "挑战成功（等级过低），无法解锁新关卡！" : "挑战成功（已达最高等级）！" : i < 30 ? "挑战失败，无法解锁新关卡！" : "挑战失败！";
        }
    }
    var bm = Laya.Point;
    class Pm {
        constructor() {
            this.path = "ui_view/v_FightMain.scene", this.isLoad = !1, this.isOpen = !1, this.firstOpen = !0, 
            this.selfPlayerForward = new Laya.Vector3(), this.joyCenter = 123, this.touchID = -1, 
            this.touchInfo = null, this.downMousePos = new bm(0, 0), this.moveX = 0, this.moveY = 0, 
            this.moveOldX = 0, this.moveOldY = 0, this.movePos = new bm(0, 0), this.autoTraceDiretion = new Laya.Vector2(), 
            this.joyDiretion = new Laya.Vector2(), this.joy3DDiretion = new Laya.Vector3(), 
            this.joyCameraDiretion = new Laya.Vector3(), this.joyCameraFixDiretion = new Laya.Vector3(), 
            this.isFixDiretion = !1, this.testMoveCurFrameSpeed = 0, this.testMoveOneFrameLogicPos = new Laya.Vector2(), 
            this.testMoveOneFrameY = 0, this.waitBuyCoin = 0, this.moveing = !1, this.joyLB = new bm(0, 0), 
            this.joyBallPos = new bm(0, 0), this.selectSkillID = -1, this.skillBtnPos = {
                x: 0,
                y: 0
            }, this.touchSkillID = -1, this.touchSkillInfo = null, this.downMouseSkillPos = new bm(0, 0), 
            this.moveSkillX = 0, this.moveSkillY = 0, this.moveSkillOldX = 0, this.moveSkillOldY = 0, 
            this.moveSkillPos = new bm(0, 0), this.joySkillMove = !1, this.joySkillDiretion = {
                x: 0,
                y: 0
            }, this.joySkillCameraDiretion = new Laya.Vector3(), this.skillTargetPos = new Laya.Point(), 
            this.joySkillLength = 0, this.traceUnitShowScalemin = new Laya.Vector3(1.5, 1.5, 1.5), 
            this.traceUnitShowScalebig = new Laya.Vector3(3, 3, 3), this.skillRadiuShowScale = new Laya.Vector3(), 
            this.skillSelectDirectionShowScale = new Laya.Vector3(), this.skillSelectDirectionShowJianTouScale = new Laya.Vector3(), 
            this.skillSelectDirectionShowPos = new Laya.Vector3(), this.skillSelectRotationEuler = new Laya.Vector3(), 
            this.skillSelectLogicPos = new Laya.Vector2(), this.skillSelectRotationEulerY = 0, 
            this.skillSelectRadiusnShowScale = new Laya.Vector3(), this.skillSelectRadiusnShowPos = new Laya.Vector3(), 
            this.isShowNative = !1, this.isKeyBoardPlaySkill = !1, this.skillTargetPriority = me.HERO, 
            this.mousePos = new Laya.Vector2(), this.outMousePos3D = new Laya.Vector3(), this.deadTime = 0, 
            this.isAutoBaseSkill = !1, this.isAutoTraceTarget = !1, this.frameNullNumber = 0, 
            this.oldFrame = 0, this.isShowBuyTips = !1, this.cacheRandombuff = 0, this.cacheInitBuffs = [], 
            this.controlModel = -1, this.talkMsgData = [], d.Instance.Reg(a.UIFightMainModel_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFightMainModel_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIFightMainModel_TouchMove, e => {
                this.touchStart(e[0]);
            }), d.Instance.Reg(a.UIFightMainModel_TestInfo, e => {
                this.setFightInfo(e[0], e[1]);
            }), d.Instance.Reg(a.UIFightMainModel_WaitBuy, e => {
                this.updateWaitBuyEquip(e[0]);
            }), d.Instance.Reg(a.UIFightMainModel_PlaySkill, e => {
                this.playSkill(e[0], e[1], e[2], e[3], e[4]);
            }), d.Instance.Reg(a.UIFightMainModel_UpdateSkill, e => {
                this.updateSkill();
            }), d.Instance.Reg(a.UIGameFight_updateGlod, e => {
                this.updateGlod(e[0]);
            }), d.Instance.Reg(a.UIFightMainModel_UpdateWaitBuy, e => {
                this.updateWaitBuy();
            }), d.Instance.Reg(a.UIFightMainModel_UpdateSelfInfo, e => {
                this.updateSelfInfo();
            }), d.Instance.Reg(a.UIFightMainModel_UpdateKill, e => {
                this.updateKillInfo();
            }), d.Instance.Reg(a.UIFightMainModel_UpdateShowDead, e => {
                this.updateShowDead(e[0]);
            }), d.Instance.Reg(a.UIFightMainModel_UpdateRandomBuff, e => {
                this.updateRandomBuff(e[0]);
            }), d.Instance.Reg(a.UIFightMainModel_UpdateRandomBuffTime, e => {
                this.updateRandomTime(e[0]);
            }), d.Instance.Reg(a.UIFightMainModel_UpdateRandomBuffInit, e => {
                this.updateRandomInit();
            }), d.Instance.Reg(a.UIFightMainModel_UpdateXPSkillShow, e => {
                this.updateXPSkillShow(e[0], e[1]);
            }), d.Instance.Reg(a.UIFightMainModel_UpdateXPSkillReday, e => {
                this.updateXPSkillReday(e[0]);
            }), d.Instance.Reg(a.UIFightMainModel_AutoTraceUnit, e => {
                this.autoTraceUnit(e[0], e[1]);
            }), d.Instance.Reg(a.UIFightMainModel_TouchSkillEnd, e => {
                this.touchSkillEnd(e[0], e[1]);
            }), d.Instance.Reg(a.KsVideoRecordStop, () => {
                this.ksVideoStop();
            }), d.Instance.Reg(a.KsVideoRecordStart, () => {
                this.ksVideoStart();
            }), d.Instance.Reg(a.VoipScope_Update, () => {
                this.updateVoip();
            }), d.Instance.Reg(a.QuicklyTextMsg, e => {
                this.quicklyTextMsg(e[0], e[1]);
            }), d.Instance.Reg(a.UIFightMainModel_Talk, e => {
                this.talkMsg(e[0], e[1]);
            });
        }
        static get Instance() {
            return null == this.instance && (Pm.instance = new Pm()), Pm.instance;
        }
        ksVideoStart() {
            console.log("ksVideoStart" + this.uiControl), this.uiControl && (this.uiControl.sp_videostart.visible = !1, 
            this.uiControl.sp_videostop.visible = !0, this.uiControl.label_videotime.text = "");
        }
        ksVideoStop() {
            this.uiControl && (this.uiControl.sp_videostart.visible = !0, this.uiControl.sp_videostop.visible = !1, 
            this.uiControl.label_videotime.text = "");
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        switchControl() {
            1 == this.controlModel ? (this.controlModel = 0, hu.Instance.clear()) : 0 == this.controlModel ? (this.controlModel = 1, 
            hu.Instance.init()) : this.initControlModel(), E.Instance.SaveKey("controlModel", this.controlModel + "");
        }
        initControlModel() {
            if ((s.isPCPlatform || s.is4399H5Platform || s.isH5Test) && Laya.Browser.onPC) {
                if (-1 == this.controlModel) {
                    var e = E.Instance.GetKey("controlModel");
                    if (null == e || "" == e || "-1" == e) this.controlModel = 1; else {
                        var t = parseInt(e);
                        isNaN(t) ? this.controlModel = 1 : this.controlModel = t;
                    }
                }
                1 == this.controlModel && hu.Instance.init();
            } else this.controlModel = 0;
            this.uiControl && this.uiControl.initControl();
        }
        openUI() {
            this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: Y.curMapID == Y.mapID_sh ? 1011 : 1008
            }), this.firstOpen = !1), this.frameNullNumber = 0, this.oldFrame = 0, this.talkMsgData = [], 
            fu.Instance.isFighting && (this.selfPlayer = Re.Instance.selfPlayer, null != this.selfPlayer && (this.isOpen || (this.isOpen = !0, 
            ie.Instance.addUI(this), Laya.timer.loop(1e3, this, this.updateTime), this.skillRadiuShow = Me.Instance.getEffect("3dres/effect/e_ui_shifa.lh", 0, 0).obj, 
            this.skillSelectDirectionShow = Me.Instance.getEffect("3dres/effect/e_ui_zhixiang.lh", 0, 0).obj, 
            this.skillSelectRadiusnShow = Me.Instance.getEffect("3dres/effect/e_ui_yuan.lh", 0, 0).obj, 
            (s.is4399H5Platform || s.isH5Test || s.isPCPlatform) && Laya.Browser.onPC && (this.traceUnitShow = Me.Instance.getEffect("3dres/effect/e_select.lh", 0, 0).obj, 
            this.traceUnitShow && (this.traceUnitShow.transform.localScale = this.traceUnitShowScalemin)), 
            this.initControlModel(), this.uiControl.init(), this.uiControl.setSkillInfo(this.selfPlayer), 
            Ll.Instance.playBgMusic(Ul.Instance.bgSound_fight), (s.isPCPlatform || s.is4399H5Platform || s.isH5Test) && Laya.Browser.onPC && (Laya.Browser.window.onblur = (() => {
                console.error("失去焦点"), d.Instance.Send(a.UIContinueGame_Open);
            }))), this.updateWaitBuy(), this.updateSelfInfo(), this.updateKillInfo(), this.uiControl.updateShowDead(this.deadTime > 0), 
            this.uiControl.updateShowDeadTime(this.deadTime), this.isAutoBaseSkill = !1, this.autoSkillTarget = null, 
            this.isAutoTraceTarget = !1, this.autoTraceTarget = null, (s.isOppoPlatform || s.isVivoPlatform && s.isFightShowAdVivo || s.isAppPlatform) && (s.isDYVivoPlatform ? le.Instance.showFloatIcon(11, 328) : s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 408, 625, 212, 125, 1) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 350, 625, 365, 125, 1), 
            le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_clickAD.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform))), 
            s.is4399H5Platform && Laya.Browser.window.focus(), this.cacheRandombuff > 0 && (this.uiControl.updateRandomBuff(this.cacheRandombuff), 
            this.cacheRandombuff = 0), this.uiControl.updateRandomInit(), this.cacheInitBuffs = [], 
            s.isWXPlatform && !s.maiLiangSwitch && le.Instance.showCustomAd(9, 6, 0, 345)));
        }
        Close() {
            le.Instance.HideBannerAD(), this.isOpen && (this.isOpen = !1, this.clearTouchSkillData(), 
            Me.Instance.removeEffect("3dres/effect/e_ui_shifa.lh", this.skillRadiuShow), Me.Instance.removeEffect("3dres/effect/e_ui_zhixiang.lh", this.skillSelectDirectionShow), 
            Me.Instance.removeEffect("3dres/effect/e_ui_yuan.lh", this.skillSelectRadiusnShow), 
            Me.Instance.removeEffect("3dres/effect/e_select.lh", this.traceUnitShow), ie.Instance.removeUI(this), 
            (s.isPCPlatform || s.is4399H5Platform || s.isH5Test) && Laya.Browser.onPC && (Laya.Browser.window.onblur = null, 
            hu.Instance.clear()), s.isKSPlatform && j.Instance.KsGameRecorderStop()), this.selfPlayer = null, 
            this.deadTime = 0, this.isAutoBaseSkill = !1, this.autoSkillTarget = null, this.isAutoTraceTarget = !1, 
            this.autoTraceTarget = null, this.cacheRandombuff = 0, this.cacheInitBuffs = [], 
            this.hideBuyTips(), Laya.timer.clear(this, this.updateTime), Laya.timer.clear(this, this.deadTimeChange), 
            cp.Instance.HidePanel_Single(), le.Instance.hideCustomAd();
        }
        updateWaitBuyEquip(e) {
            this.clearWaitBuy(), this.updateGlod(e);
        }
        updateTime() {
            this.selfPlayer && this.uiControl && (s.isTTPlatform && this.uiControl.updateVideo(j.Instance.playing, j.Instance.recorderTime), 
            this.uiControl.setSkillInfo(this.selfPlayer), this.uiControl.updateHeroList(), this.uiControl.updateMiniMap(), 
            this.uiControl.updatePing(f.framePing));
        }
        updateKillInfo() {
            this.uiControl && this.uiControl.updateInfo(fu.Instance.team1Kill, fu.Instance.team2Kill);
        }
        updateSelfInfo() {
            this.uiControl && this.uiControl.updateSelfInfo();
        }
        updateVoip() {
            this.uiControl && this.uiControl.updateVoip();
        }
        quicklyTextMsg(e, t) {
            f.Instance.isSpeedPlay || this.uiControl && this.uiControl.quicklyTextMsg(e, t);
        }
        talkMsg(e, t) {
            var i, s, n = "";
            i = t.type, e ? (s = Re.Instance.selfPlayer, n = t.reMsg) : (s = Re.Instance.getPlayer(t.player.friendid), 
            n = t.msg);
            var a = s.teamID == Re.Instance.selfPlayer.teamID, o = s.playerName, l = 0, h = 0;
            for (let e = 0; e < o.length && (h = e + 1, o.charCodeAt(e) < 1e3 ? l += 1 : l += 2, 
            !(l > 10)); e++) ;
            h != o.length ? o = o.substring(0, h) + "..:" : o += ":";
            var r = {
                label_channel: {
                    text: 4 == i ? "[队伍]" : "[全部]",
                    color: a ? "#4ec7ff" : "#ff4e63"
                },
                label_name: {
                    text: o,
                    color: a ? "#4ec7ff" : "#ff4e63"
                },
                label_text: {
                    text: n
                }
            };
            this.talkMsgData.push(r), this.uiControl && this.uiControl.talkMsg(this.talkMsgData);
        }
        updateRandomBuff(e) {
            this.cacheRandombuff = e, this.uiControl && this.uiControl.updateRandomBuff(e);
        }
        updateRandomTime(e) {
            this.uiControl && this.uiControl.updateRandomTime(e);
        }
        updateRandomInit() {
            this.uiControl && this.uiControl.updateRandomInit();
        }
        updateShowDead(e) {
            if (this.deadTime = Math.floor(e / 1e3), this.uiControl && this.uiControl.updateShowDeadTime(this.deadTime), 
            this.deadTime > 0) {
                if (!f.Instance.isSpeedPlay) if (console.log("ttad: adctr:" + s.isOnline + "  " + JSON.stringify(B.Instance.OppoADctr) + s.pr_end), 
                s.isVivoPlatform) {
                    let e = le.Instance.api.ad_ControlParameter.nativeImageErrProbability <= Math.random(), t = e ? "bottom|right" : "bottom|center";
                    le.Instance.ShowNewNativeAD([ {
                        uiRoot: this.uiControl,
                        x: e ? 934 : 467,
                        y: 550,
                        width: 400,
                        height: 200,
                        style: I.bigImage,
                        gravity: t
                    } ]);
                } else if (s.is233Platform) s.is233mlcsjPlatform && (le.Instance.showAppInterstitialadCallback = (() => {
                    Pm.Instance.deadTime > 0 && !f.Instance.isSpeedPlay && le.Instance.show233Banner();
                }), le.Instance.showAppInterstitialad(60)); else if (s.isOppoPlatform || s.isVivoPlatform && s.isFightShowAdVivo || s.isAppPlatform) {
                    if (le.Instance.HideBannerAD(), s.isOnline && s.isOppoPlatform || !s.isOppoGameCenterPlatform && s.isAppPlatform && B.Instance.OppoADctr && Number(B.Instance.OppoADctr.aderrorrate) && Number(B.Instance.OppoADctr.aderrorrate) >= Math.random() || s.isOppoGameCenterPlatform || s.isVivoPlatform || s.isWcfjlPlatform || s.isXiaoMiPlatform) {
                        let e = Math.random() < s.pr_end;
                        console.log("ttad: adctr2:" + e), s.isOppoPlatform && e || s.isOppoGameCenterPlatform && e || !s.isOppoGameCenterPlatform && s.isAppPlatform ? (s.isWcfjlPlatform ? le.Instance.ShowBannerCSJ(2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(1133, 538) : s.isOppoGameCenterPlatform ? (console.log("ttad: adctr2isOppoGameCenterPlatform:" + e), 
                        le.Instance.ShowNativeBannerAD(1, this.uiControl, 975, 354, 360 + s.fixStageX, 351, 2)) : s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 906, 416, 426, 251, 2) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 910, 354, 360 + s.fixStageX, 351, 2), 
                        console.log("ttad: 偏右")) : (console.log("ttad: 居中"), s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 447, 476, 440, 259, 2) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 487, 476, 360 + s.fixStageX, 259, 2));
                    } else s.isDYVivoPlatform && (console.log("ttad: 居中"), le.Instance.showFloatIcon(604, 538));
                    s.isOppoGameCenterPlatform && s.canShowNative && Laya.timer.once(s.oppoNativeDelay, this, () => {
                        this.isOpen && this.uiControl && d.Instance.Send(a.UINativeInterstitial_Open, 400, !0, .45, !0);
                    });
                } else s.isVivoPlatform || le.Instance.ShowBannerAD(1 == le.Instance.GetBannerType() && s.diedSwitch ? 2 : 1, null);
                this.uiControl && this.uiControl.updateShowDead(!0), Laya.timer.loop(1e3, this, this.deadTimeChange);
            } else Laya.timer.clear(this, this.deadTimeChange), this.uiControl && this.uiControl.updateShowDead(!1), 
            this.isShowNative = !1, le.Instance.HideBannerAD(), s.is233Platform && le.Instance.hide233Banner(), 
            f.Instance.isSpeedPlay || (s.isVivoPlatform && le.Instance.HideNewNativeAD(I.bigImage), 
            (s.isOppoPlatform || s.isVivoPlatform && s.isFightShowAdVivo || s.isAppPlatform) && (s.isDYVivoPlatform ? le.Instance.showFloatIcon(11, 328) : s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 408, 625, 212, 125, 1) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 350, 625, 365, 125, 1), 
            le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_clickAD.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform))), 
            s.isWXPlatform && !s.maiLiangSwitch && le.Instance.showCustomAd(9, 6, 0, 345));
        }
        deadTimeChange() {
            this.selfPlayer ? this.deadTime = Math.floor(this.selfPlayer.deadTime / 1e3) : this.deadTime -= 1, 
            this.uiControl && this.uiControl.updateShowDeadTime(this.deadTime);
        }
        setFightInfo(e, t) {}
        updateXPSkillShow(e, t) {
            f.Instance.isSpeedPlay || this.uiControl && this.uiControl.updateXPSkillShow(e, t);
        }
        updateXPSkillReday(e) {
            f.Instance.isSpeedPlay || this.uiControl && this.uiControl.updateXPSkillReday(e);
        }
        touchStart(e) {
            if (this.touchInfo = null, this.touchID = e.touchId, null != e.touches) for (var t = 0; t < e.touches.length; t++) if (this.touchID == e.touches[t].identifier) {
                this.touchInfo = e.touches[t];
                break;
            }
            this.downMousePos.x = null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX, 
            this.downMousePos.y = null == this.touchInfo ? Laya.stage.mouseY : this.touchInfo.stageY, 
            this.joyLB.x = this.downMousePos.x - this.joyCenter - s.fixStageX, this.joyLB.y = Laya.stage.height - this.downMousePos.y - this.joyCenter - s.fixStageY, 
            this.joyBallPos.x = this.joyCenter, this.joyBallPos.y = this.joyCenter, this.moveOldX = 0, 
            this.moveOldY = 0, this.movePos = new bm(this.joyBallPos.x, this.joyBallPos.y), 
            this.moveing = !0, Laya.stage.timer.frameLoop(2, this, this.touchLoop), Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.touchMove), 
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.touchEnd), Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.touchEnd), 
            this.uiControl && this.uiControl.updateJoy(this.joyLB.x, this.joyLB.y, this.joyBallPos.x, this.joyBallPos.y);
        }
        touchEnd(e) {
            this.touchID == e.touchId && (Laya.stage.timer.clear(this, this.touchLoop), Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.touchMove), 
            Laya.stage.off(Laya.Event.MOUSE_UP, this, this.touchEnd), Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.touchEnd), 
            this.joyBallPos.x = this.joyCenter, this.joyBallPos.y = this.joyCenter, this.joyLB.x = 120, 
            this.joyLB.y = 84, this.moveing = !1, Hl.Instance.addActionToServer([ {
                id: o.MOVE
            }, {
                id: 0
            }, {
                id: 0
            } ]), this.touchID = -1, this.uiControl && this.uiControl.updateJoy(this.joyLB.x, this.joyLB.y, this.joyBallPos.x, this.joyBallPos.y));
        }
        touchMove(e) {
            if (this.touchID == e.touchId && (this.touchInfo = null, null != e.touches)) for (var t = 0; t < e.touches.length; t++) if (this.touchID == e.touches[t].identifier) {
                this.touchInfo = e.touches[t];
                break;
            }
        }
        touchLoop() {
            if (-1 != this.touchID && null != Y.Instance.mainCamera && null != Y.Instance.mainCamera.transform) {
                this.moveX = (null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX) - this.downMousePos.x, 
                this.moveY = (null == this.touchInfo ? Laya.stage.mouseY : this.touchInfo.stageY) - this.downMousePos.y, 
                this.downMousePos.x = null == this.touchInfo ? Laya.stage.mouseX : this.touchInfo.stageX, 
                this.downMousePos.y = null == this.touchInfo ? Laya.stage.mouseY : this.touchInfo.stageY, 
                this.movePos.x = this.movePos.x + this.moveX - this.moveOldX, this.movePos.y = this.movePos.y + this.moveY - this.moveOldY, 
                this.dirX = this.movePos.x - this.joyCenter, this.dirY = this.movePos.y - this.joyCenter, 
                q.VectorNormal(this.dirX, this.dirY, this.joyDiretion), this.edgesX = u.round(Math.abs(this.joyDiretion.x * this.joyCenter)), 
                this.edgesY = u.round(Math.abs(this.joyDiretion.y * this.joyCenter));
                var e = q.FixEdges(this.joyCenter - this.edgesX, this.joyCenter + this.edgesX, this.movePos.x), t = q.FixEdges(this.joyCenter - this.edgesY, this.joyCenter + this.edgesY, this.movePos.y);
                this.joyBallPos.x = e, this.joyBallPos.y = t, Math.abs(this.dirX) < 10 && Math.abs(this.dirY) < 10 || isNaN(this.joyDiretion.x) || isNaN(this.joyDiretion.y) || (this.joy3DDiretion.setValue(this.joyDiretion.x, 0, this.joyDiretion.y), 
                Laya.Vector3.transformQuat(this.joy3DDiretion, Y.Instance.mainCamera.transform.rotation, this.joyCameraDiretion), 
                q.scalarLength(this.joyCameraDiretion), this.isFixDiretion = !1, this.testCollider(u.decimalRound(this.joyCameraDiretion.x), u.decimalRound(this.joyCameraDiretion.z)) || (this.joyCameraFixDiretion.x = 0, 
                this.joyCameraFixDiretion.z = this.joyCameraDiretion.z < 0 ? -1 : 1, this.testCollider(this.joyCameraFixDiretion.x, this.joyCameraFixDiretion.z) || (this.joyCameraFixDiretion.x = this.joyCameraDiretion.x < 0 ? -1 : 1, 
                this.joyCameraFixDiretion.z = 0, this.testCollider(this.joyCameraFixDiretion.x, this.joyCameraFixDiretion.z) || (this.joyCameraFixDiretion.x = this.joyCameraDiretion.x < 0 ? 1 : -1, 
                this.joyCameraFixDiretion.z = 0)), this.joyCameraDiretion.x = this.joyCameraFixDiretion.x, 
                this.joyCameraDiretion.z = this.joyCameraFixDiretion.z, this.isFixDiretion = !0), 
                this.isAutoBaseSkill = !1, this.isAutoTraceTarget = !1, this.autoTraceTarget = null, 
                Hl.Instance.addActionToServer([ {
                    id: o.MOVE
                }, {
                    id: u.round(100 * this.joyCameraDiretion.x) + 1e3
                }, {
                    id: u.round(100 * this.joyCameraDiretion.z) + 1e3
                }, {
                    id: this.isFixDiretion ? 1 : 0
                } ]), this.uiControl && this.uiControl.updateJoy(this.joyLB.x, this.joyLB.y, this.joyBallPos.x, this.joyBallPos.y));
            }
        }
        testCollider(e, t) {
            return null != this.selfPlayer && (this.testMoveCurFrameSpeed = this.selfPlayer.getMoveSpeed(), 
            this.testMoveOneFrameLogicPos.setValue(this.selfPlayer.logicPos.x + u.noDecimalRound(e * this.testMoveCurFrameSpeed), this.selfPlayer.logicPos.y + u.noDecimalRound(t * this.testMoveCurFrameSpeed)), 
            this.testMoveOneFrameY = z.Instance.getHeightMap(this.testMoveOneFrameLogicPos.x / 100, this.testMoveOneFrameLogicPos.y / 100), 
            !isNaN(this.testMoveOneFrameY));
        }
        updateGlod(e) {
            null == this.waitBuyEquip && (null == this.selfPlayer && (this.selfPlayer = Re.Instance.selfPlayer), 
            this.waitBuyEquip = Nl.Instance.getHeroNextBuy(this.selfPlayer, au.Instance.curWaitBuy)), 
            null != this.waitBuyEquip && 0 == this.waitBuyCoin && (this.waitBuyCoin = Nl.Instance.mathBuyCoin(this.selfPlayer, this.waitBuyEquip), 
            this.selfPlayer && this.selfPlayer.coin >= this.waitBuyCoin && !this.isShowBuyTips && (this.isShowBuyTips = !0, 
            Laya.timer.once(6e4, this, this.showBuyTips))), this.uiControl && this.uiControl.updateGlod(e, this.waitBuyCoin, this.waitBuyEquip);
        }
        updateWaitBuy() {
            this.clearWaitBuy(), this.updateGlod(this.selfPlayer.coin);
        }
        clearWaitBuy() {
            this.waitBuyEquip = null, this.waitBuyCoin = 0, this.uiControl && this.uiControl.clearWaitBuy(), 
            this.hideBuyTips();
        }
        showBuyTips() {
            this.uiControl && this.uiControl.showBuyTips(!0);
        }
        hideBuyTips() {
            this.isShowBuyTips = !1, Laya.timer.clear(this, this.showBuyTips), this.uiControl && this.uiControl.showBuyTips(!1);
        }
        quicklyBuy() {
            if (this.hideBuyTips(), null != this.waitBuyEquip && this.selfPlayer.coin >= this.waitBuyCoin) {
                var e = [ {
                    id: o.BUY
                }, {
                    id: this.waitBuyEquip.id
                } ];
                return Hl.Instance.addActionToServer(e), !1;
            }
            return !0;
        }
        updateSkill() {
            null == this.selfPlayer && (this.selfPlayer = Re.Instance.selfPlayer, null == this.selfPlayer) || this.uiControl && this.selfPlayer && (this.uiControl.initSkillLv = !1, 
            this.uiControl.setSkillInfo(this.selfPlayer));
        }
        playSkill(e, t, i, n, o) {
            if (this.isKeyBoardPlaySkill = !!n, this.skillTargetPriority = o || me.HERO, this.skillTargetPriority == me.HERO && this.uiControl && this.uiControl.playSkillAnim(t), 
            null != this.selfPlayer || (this.selfPlayer = Re.Instance.selfPlayer, null != this.selfPlayer)) {
                if (4 == t && !this.selfPlayer.isKjfl && !s.is233Platform) {
                    let e;
                    return B.Instance.OppoADctr && Number(B.Instance.OppoADctr.isaggreation) && (e = Number(B.Instance.OppoADctr.isaggreation)), 
                    void (s.isOppoPlatform && e > 0 ? le.Instance.ShowVideoAD(e => {
                        1 == e && (this.selfPlayer.isKjfl = !0, this.uiControl && this.uiControl.updateKjfl());
                    }, 9) : d.Instance.Send(a.UIConfirm_Open, 2, 0, "立即观看视频解锁[恢复]技能吗?", Laya.Handler.create(this, e => {
                        s.isPCPlatform ? (this.selfPlayer.isKjfl = !0, this.uiControl && this.uiControl.updateKjfl()) : le.Instance.ShowVideoAD(e => {
                            1 == e && (this.selfPlayer.isKjfl = !0, this.uiControl && this.uiControl.updateKjfl());
                        }, 9);
                    })));
                }
                if (5 == t && !this.selfPlayer.isWing && !s.is233Platform) {
                    let e;
                    return B.Instance.OppoADctr && Number(B.Instance.OppoADctr.isaggreation) && (e = Number(B.Instance.OppoADctr.isaggreation)), 
                    void (s.isOppoPlatform && e > 0 ? le.Instance.ShowVideoAD(e => {
                        1 == e && (this.selfPlayer.isWing = !0, this.uiControl && this.uiControl.updateKjfl());
                    }, 23) : d.Instance.Send(a.UIConfirm_Open, 2, 0, "观看视频体验[闪现(Lv.5)]技能吗?\r\n(解锁翅膀可永久拥有闪现)", Laya.Handler.create(this, e => {
                        s.isPCPlatform ? (this.selfPlayer.isWing = !0, this.uiControl && this.uiControl.updateKjfl()) : le.Instance.ShowVideoAD(e => {
                            1 == e && (this.selfPlayer.isWing = !0, this.uiControl && this.uiControl.updateKjfl());
                        }, 23);
                    })));
                }
                var l = this.selfPlayer;
                if (null != l && l.skillData.length > t && !l.isDead) {
                    var h = l.getSKill(t);
                    null != h && t > 0 && d.Instance.Send(a.UISkillTips_DelayOpen, e, 2e3, h.skillID, h.lv), 
                    null != h && h.lv > 0 && 0 == h.curCD && (this.selectSkillID = t, this.selectSkill = h, 
                    this.skillBtnPos = i, this.touchSkillStart(e, h, i, t));
                }
            }
        }
        skillLvUp(e) {
            Hl.Instance.addActionToServer([ {
                id: o.SKILLUP
            }, {
                id: e
            } ]);
        }
        touchSkillStart(e, t, i, s) {
            if (null != this.selfPlayer) {
                if (0 != this.selectSkillID && this.uiControl && (this.uiControl.sp_canclesk.visible = !0), 
                this.touchSkillInfo = null, this.touchSkillID = e.touchId, null != e.touches) for (var n = 0; n < e.touches.length; n++) if (this.touchSkillID == e.touches[n].identifier) {
                    this.touchSkillInfo = e.touches[n];
                    break;
                }
                if (this.downMouseSkillPos.x = null == this.touchSkillInfo ? Laya.stage.mouseX : this.touchSkillInfo.stageX, 
                this.downMouseSkillPos.y = null == this.touchSkillInfo ? Laya.stage.mouseY : this.touchSkillInfo.stageY, 
                this.moveSkillOldX = 0, this.moveSkillOldY = 0, this.moveSkillPos = new bm(i.x, i.y), 
                this.joySkillCameraDiretion.setValue(0, 0, 0), this.joySkillMove = !1, f.Instance.renderFrameTimer.frameLoop(1, this, this.touchSkillLoop), 
                Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.touchSkillMove), Laya.stage.on(Laya.Event.MOUSE_UP, this, this.touchSkillEnd), 
                Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.touchSkillEnd), null != this.selectSkill) {
                    var a = 0;
                    for (let e = 0; e < this.selectSkill.flyObj.length; e++) {
                        const t = this.selectSkill.flyObj[e];
                        if (t.flyObj && t.flyObj.colliderRadius > 0) {
                            a = t.flyObj.colliderRadius;
                            break;
                        }
                    }
                    if (null != this.skillRadiuShow && this.skillRadiuShow.transform) {
                        var o = this.selectSkill.skillUseRadius / 1;
                        this.skillRadiuShowScale.setValue(o, 1, o), this.skillRadiuShow.transform.localScale = this.skillRadiuShowScale, 
                        this.skillRadiuShow.transform.position = this.selfPlayer.showPos, Y.Instance.addChild(this.skillRadiuShow);
                    }
                    if (1 == this.selectSkill.skillUseType) {
                        o = this.selectSkill.skillUseRadius - 1.25;
                        var l = 0 == a ? 1 : a / .6;
                        if (this.skillSelectDirectionShowScale.setValue(l, 1, o), this.skillSelectDirectionShow && this.skillSelectDirectionShow.transform) {
                            var h = this.skillSelectDirectionShow.getChildAt(0);
                            h && h.transform && (h.transform.localScale = this.skillSelectDirectionShowScale);
                            var r = this.skillSelectDirectionShow.getChildAt(1);
                            r && r.transform && (this.skillSelectDirectionShowJianTouScale.setValue(l, 1, 1), 
                            this.skillSelectDirectionShowPos.setValue(0, 0, .75 - this.selectSkill.skillUseRadius), 
                            r.transform.localScale = this.skillSelectDirectionShowJianTouScale, r.transform.localPosition = this.skillSelectDirectionShowPos), 
                            this.skillTargetUnit = He.Instance.SkillAutoTargetBySkill(this.selfPlayer, this.selectSkill, this.skillTargetPriority), 
                            null != this.skillTargetUnit ? (this.joySkillCameraDiretion.setValue(this.skillTargetUnit.logicPos.x - this.selfPlayer.logicPos.x, 0, this.skillTargetUnit.logicPos.y - this.selfPlayer.logicPos.y), 
                            Laya.Vector3.normalize(this.joySkillCameraDiretion, this.joySkillCameraDiretion)) : this.selfPlayer.getForward(this.joySkillCameraDiretion), 
                            this.skillSelectRotationEuler.y = this.selfPlayer.rotationEuler.y, this.skillSelectDirectionShow.transform.rotationEuler = this.skillSelectRotationEuler, 
                            this.skillSelectDirectionShow.transform.position = this.selfPlayer.showPos, Y.Instance.addChild(this.skillSelectDirectionShow);
                        }
                    } else if (2 == this.selectSkill.skillUseType) {
                        o = 2 * a / 1;
                        this.skillSelectRadiusnShowScale.setValue(o, 1, o), this.skillTargetUnit = He.Instance.SkillAutoTargetBySkill(this.selfPlayer, this.selectSkill, this.skillTargetPriority), 
                        null != this.skillTargetUnit && (this.joySkillCameraDiretion.setValue(this.skillTargetUnit.logicPos.x - this.selfPlayer.logicPos.x, 0, this.skillTargetUnit.logicPos.y - this.selfPlayer.logicPos.y), 
                        Laya.Vector3.normalize(this.joySkillCameraDiretion, this.joySkillCameraDiretion), 
                        this.joySkillLength = u.decimalRound(this.skillTargetUnit.logicPos.distance(this.selfPlayer.logicPos.x, this.selfPlayer.logicPos.y) / 100), 
                        this.joySkillLength > this.selectSkill.skillUseRadius && (this.joySkillLength = this.selectSkill.skillUseRadius)), 
                        this.skillSelectRadiusnShow && this.skillSelectRadiusnShow.transform && (this.skillSelectRadiusnShow.transform.localScale = this.skillSelectRadiusnShowScale, 
                        this.skillSelectRadiusnShow.transform.position = this.selfPlayer.showPos, Y.Instance.addChild(this.skillSelectRadiusnShow));
                    }
                }
                this.touchSkillLoop(), null != this.selectSkill && 0 == this.selectSkill.skillUseType && this.isKeyBoardPlaySkill && this.touchSkillEnd(e, !1);
            }
        }
        touchSkillMove(e) {
            if (this.touchSkillID == e.touchId && null != e.touches) for (var t = 0; t < e.touches.length; t++) if (this.touchSkillID == e.touches[t].identifier) {
                this.touchSkillInfo = e.touches[t];
                break;
            }
        }
        touchSkillEnd(e, t) {
            e && this.touchSkillID != e.touchId && !t || null == this.selfPlayer || null == this.selectSkill || (null != this.skillRadiuShow && this.skillRadiuShow.removeSelf(), 
            null != this.skillSelectDirectionShow && this.skillSelectDirectionShow.removeSelf(), 
            null != this.skillSelectRadiusnShow && this.skillSelectRadiusnShow.removeSelf(), 
            t || this.playSelectSKill(!1), 0 != this.selectSkillID && this.uiControl && (this.uiControl.sp_canclesk.visible = !1), 
            this.clearTouchSkillData());
        }
        clearTouchSkillData() {
            this.touchSkillID = -1, this.selectSkillID = -1, this.selectSkill = null, f.Instance.renderFrameTimer.clear(this, this.touchSkillLoop), 
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.touchSkillMove), Laya.stage.off(Laya.Event.MOUSE_UP, this, this.touchSkillEnd), 
            Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.touchSkillEnd);
        }
        playSelectSKill(e) {
            if (this.skillTargetUnit = null, this.joySkillMove || (this.skillTargetUnit = He.Instance.SkillAutoTargetBySkill(this.selfPlayer, this.selectSkill, this.skillTargetPriority)), 
            e || null != this.skillTargetUnit || !this.selectSkill.isBaseSk) {
                this.autoTraceTarget && this.autoTraceTarget, this.skillTargetUnit ? (this.skillTargetPos.copy(this.skillTargetUnit.getDamagePointLogicPos(this.selfPlayer.logicPos)), 
                this.selectSkill.isBaseSk && (this.isAutoBaseSkill || (this.isAutoBaseSkill = !0, 
                Laya.stage.timer.frameLoop(5, this, this.autoSkillLoop)), this.autoSkillTarget = this.skillTargetUnit)) : (this.skillTargetPos.copy(this.selfPlayer.logicPos), 
                0 == this.selectSkill.skillUseType || 1 == this.selectSkill.skillUseType ? this.joySkillMove ? (this.skillTargetPos.x += Math.floor(this.joySkillCameraDiretion.x * u.netPrecision * this.joySkillLength), 
                this.skillTargetPos.y += Math.floor(this.joySkillCameraDiretion.z * u.netPrecision * this.joySkillLength)) : (this.selfPlayer.getForward(this.selfPlayerForward), 
                this.skillTargetPos.x += Math.floor(this.selfPlayerForward.x * u.netPrecision * this.joySkillLength), 
                this.skillTargetPos.y += Math.floor(this.selfPlayerForward.z * u.netPrecision * this.joySkillLength)) : (this.skillTargetPos.x += Math.floor(this.joySkillCameraDiretion.x * u.netPrecision * this.joySkillLength), 
                this.skillTargetPos.y += Math.floor(this.joySkillCameraDiretion.z * u.netPrecision * this.joySkillLength)));
                var t = [ {
                    id: o.ATTACK
                }, {
                    id: this.selectSkillID
                }, {
                    id: this.skillTargetUnit ? this.skillTargetUnit.instanceID : 0
                }, {
                    id: this.skillTargetPos.x
                }, {
                    id: this.skillTargetPos.y
                } ];
                Hl.Instance.addActionToServer(t);
            } else this.selectTraceUnit();
        }
        touchSkillLoop() {
            -1 != this.touchSkillID && null != this.selfPlayer && null != Y.Instance.mainCamera && null != Y.Instance.mainCamera.transform && (this.moveSkillX = (null == this.touchSkillInfo ? Laya.stage.mouseX : this.touchSkillInfo.stageX) - this.downMouseSkillPos.x, 
            this.moveSkillY = (null == this.touchSkillInfo ? Laya.stage.mouseY : this.touchSkillInfo.stageY) - this.downMouseSkillPos.y, 
            this.downMouseSkillPos.x = null == this.touchSkillInfo ? Laya.stage.mouseX : this.touchSkillInfo.stageX, 
            this.downMouseSkillPos.y = null == this.touchSkillInfo ? Laya.stage.mouseY : this.touchSkillInfo.stageY, 
            this.moveSkillPos.x = this.moveSkillPos.x + this.moveSkillX - this.moveSkillOldX, 
            this.moveSkillPos.y = this.moveSkillPos.y + this.moveSkillY - this.moveSkillOldY, 
            this.dirX = this.moveSkillPos.x - this.skillBtnPos.x, this.dirY = this.moveSkillPos.y - this.skillBtnPos.y, 
            this.isKeyBoardPlaySkill ? (this.mousePos.setValue(Laya.stage.mouseX, Laya.stage.mouseY), 
            Y.Instance.Pos2DTo3D(this.mousePos, this.selfPlayer.showPos.y, this.outMousePos3D), 
            Laya.Vector3.subtract(this.outMousePos3D, this.selfPlayer.showPos, this.joySkillCameraDiretion), 
            Laya.Vector3.normalize(this.joySkillCameraDiretion, this.joySkillCameraDiretion), 
            this.joySkillCameraDiretion.x = u.decimalRound(this.joySkillCameraDiretion.x), this.joySkillCameraDiretion.z = u.decimalRound(this.joySkillCameraDiretion.z), 
            this.joySkillMove = !0) : (Math.abs(this.dirX) > 1 || Math.abs(this.dirY) > 1) && (q.VectorNormal(this.dirX, this.dirY, this.joySkillDiretion), 
            this.joy3DDiretion.setValue(this.joySkillDiretion.x, 0, this.joySkillDiretion.y), 
            Laya.Vector3.transformQuat(this.joy3DDiretion, Y.Instance.mainCamera.transform.rotation, this.joySkillCameraDiretion), 
            q.scalarLength(this.joySkillCameraDiretion), this.joySkillCameraDiretion.x = u.decimalRound(this.joySkillCameraDiretion.x), 
            this.joySkillCameraDiretion.z = u.decimalRound(this.joySkillCameraDiretion.z), this.joySkillMove = !0), 
            0 == this.selectSkill.skillUseType ? this.joySkillLength = 0 : 1 == this.selectSkill.skillUseType ? this.joySkillLength = this.selectSkill.skillUseRadius : (this.joySkillMove && !this.isKeyBoardPlaySkill && (this.joySkillLength = u.decimalRound(this.moveSkillPos.distance(this.skillBtnPos.x, this.skillBtnPos.y) / 100 * this.selectSkill.skillUseRadius), 
            this.joySkillLength > this.selectSkill.skillUseRadius && (this.joySkillLength = this.selectSkill.skillUseRadius)), 
            this.isKeyBoardPlaySkill && (this.joySkillLength = u.decimalRound(Laya.Vector3.distance(this.selfPlayer.showPos, this.outMousePos3D)), 
            this.joySkillLength > this.selectSkill.skillUseRadius && (this.joySkillLength = this.selectSkill.skillUseRadius))), 
            null != this.skillRadiuShow && null != this.skillRadiuShow.transform && (this.skillRadiuShow.transform.position = this.selfPlayer.curSprite3D.transform.position), 
            1 == this.selectSkill.skillUseType ? (this.skillSelectLogicPos.setValue(this.selfPlayer.logicPos.x, this.selfPlayer.logicPos.y), 
            this.skillSelectLogicPos.x += 100 * this.joySkillCameraDiretion.x, this.skillSelectLogicPos.y += 100 * this.joySkillCameraDiretion.z, 
            this.skillSelectRotationEulerY = Math.floor(-1 * q.GetAngleByPos(this.selfPlayer.logicPos, this.skillSelectLogicPos) - 90), 
            this.skillSelectRotationEuler.y = this.skillSelectRotationEulerY, this.skillSelectDirectionShow && this.skillSelectDirectionShow.transform && (this.skillSelectDirectionShow.transform.rotationEuler = this.skillSelectRotationEuler, 
            this.skillSelectDirectionShow.transform.position = this.selfPlayer.showPos)) : 2 == this.selectSkill.skillUseType && (this.skillSelectRadiusnShowPos.setValue(this.selfPlayer.showPos.x, this.selfPlayer.showPos.y, this.selfPlayer.showPos.z), 
            this.skillSelectRadiusnShowPos.x += this.joySkillCameraDiretion.x * this.joySkillLength, 
            this.skillSelectRadiusnShowPos.z += this.joySkillCameraDiretion.z * this.joySkillLength, 
            this.skillSelectRadiusnShow && this.skillSelectRadiusnShow.transform && (this.skillSelectRadiusnShow.transform.position = this.skillSelectRadiusnShowPos)));
        }
        autoSkillLoop() {
            if ((null == this.selfPlayer || this.selfPlayer.isDead || null == this.autoSkillTarget || this.autoSkillTarget.isDead || !this.autoSkillTarget.isShowInGrass && !Re.Instance.checkPlayerVisable(this.selfPlayer, this.autoSkillTarget) || this.autoSkillTarget.logicPos.distance(this.selfPlayer.logicPos.x, this.selfPlayer.logicPos.y) / 100 > this.selfPlayer.skillData[0].skillUseRadius + this.autoSkillTarget.modelData.radius) && (this.isAutoBaseSkill = !1), 
            this.isAutoBaseSkill) {
                if (!(this.selfPlayer.skillData[0].curCD > 0)) {
                    this.autoSkillTarget && this.skillTargetPos.copy(this.autoSkillTarget.getDamagePointLogicPos(this.selfPlayer.logicPos));
                    var e = [ {
                        id: o.ATTACK
                    }, {
                        id: 0
                    }, {
                        id: this.autoSkillTarget ? this.autoSkillTarget.instanceID : 0
                    }, {
                        id: this.skillTargetPos.x
                    }, {
                        id: this.skillTargetPos.y
                    } ];
                    Hl.Instance.addActionToServer(e);
                }
            } else Laya.stage.timer.clear(this, this.autoSkillLoop);
        }
        selectTraceUnit() {
            this.autoTraceTarget = null;
            var e = this.selfPlayer.skillData[0], t = e.skillUseRadius + 2;
            e.curCD <= 0 && null == this.autoTraceTarget && (this.autoTraceTarget = He.Instance.SkillAutoTarget(this.selfPlayer, e.colliderUnitType, t, this.skillTargetPriority)), 
            this.autoTraceTarget && this.autoTraceUnit(this.autoTraceTarget);
        }
        autoTraceUnit(e, t) {
            null != this.autoTraceTarget && null != e && this.autoTraceTarget.instanceID != e.instanceID && this.clearTraceUnitLoop(), 
            this.autoTraceTarget = e, null != this.autoTraceTarget ? this.isAutoTraceTarget || (this.isAutoTraceTarget = !0, 
            this.autoTraceUnitLoop(t), (s.is4399H5Platform || s.isH5Test || s.isPCPlatform) && Laya.Browser.onPC ? Laya.stage.timer.frameLoop(1, this, this.autoTraceUnitLoop, [ t ]) : Laya.stage.timer.frameLoop(5, this, this.autoTraceUnitLoop, [ t ])) : this.clearTraceUnitLoop();
        }
        clearTraceUnitLoop() {
            this.autoTraceTarget = null, this.autoSkillTarget = null, this.isAutoTraceTarget = !1, 
            this.isAutoBaseSkill = !1, Laya.stage.timer.clear(this, this.autoTraceUnitLoop), 
            Hl.Instance.addActionToServer([ {
                id: o.MOVE
            }, {
                id: 0
            }, {
                id: 0
            } ]), (s.is4399H5Platform || s.isH5Test || s.isPCPlatform) && Laya.Browser.onPC && this.traceUnitShow && null != this.traceUnitShow.parent && this.traceUnitShow.removeSelf();
        }
        autoTraceUnitLoop(e) {
            if ((s.is4399H5Platform || s.isH5Test || s.isPCPlatform) && Laya.Browser.onPC && (null != this.selfPlayer && null != this.autoTraceTarget && !this.autoTraceTarget.isDead && Re.Instance.checkPlayerVisable(this.selfPlayer, this.autoTraceTarget) && this.traceUnitShow ? (null == this.traceUnitShow.parent && (Y.Instance.addChild(this.traceUnitShow), 
            this.autoTraceTarget.unitType == me.BUILD ? this.traceUnitShow.transform.localScale = this.traceUnitShowScalebig : this.traceUnitShow.transform.localScale = this.traceUnitShowScalemin), 
            this.traceUnitShow.transform.position = this.autoTraceTarget.showPos) : this.traceUnitShow && null != this.traceUnitShow.parent && this.traceUnitShow.removeSelf()), 
            null == this.selfPlayer || this.selfPlayer.isDead || null == this.autoTraceTarget || this.autoTraceTarget.isDead) this.clearTraceUnitLoop(); else {
                var t = this.selfPlayer.skillData[0], i = e || t.skillUseRadius + 2, n = this.autoTraceTarget.logicPos.distance(this.selfPlayer.logicPos.x, this.selfPlayer.logicPos.y) / 100;
                n > i ? this.clearTraceUnitLoop() : n < t.skillUseRadius ? this.isAutoBaseSkill || (this.isAutoBaseSkill = !0, 
                this.autoSkillTarget = this.autoTraceTarget, Laya.stage.timer.frameLoop(5, this, this.autoSkillLoop)) : (q.VectorNormal(this.autoTraceTarget.logicPos.x - this.selfPlayer.logicPos.x, this.autoTraceTarget.logicPos.y - this.selfPlayer.logicPos.y, this.autoTraceDiretion), 
                Hl.Instance.addActionToServer([ {
                    id: o.MOVE
                }, {
                    id: u.round(100 * this.autoTraceDiretion.x) + 1e3
                }, {
                    id: u.round(100 * this.autoTraceDiretion.y) + 1e3
                }, {
                    id: 0
                } ]));
            }
        }
    }
    Pm.instance = null, Pm.waitLogin = !1;
    class xm {
        constructor() {
            this.isLoadComplete = !1;
        }
        static get Instance() {
            return null == this.instance && (xm.instance = new xm()), xm.instance;
        }
        loadJson(e) {
            this.callBack = e, Laya.loader.load("config/quicklyTextConfig.json", Laya.Handler.create(this, this.loadComplete), null, Laya.Loader.JSON);
        }
        loadComplete(e) {
            null != e ? (this.isLoadComplete = !0, this.cacheData = e) : console.log("config/quicklyTextConfig.json load fail!"), 
            this.callBack && this.callBack();
        }
        getInfo(e) {
            if (this.cacheData) for (let t = 0; t < this.cacheData.length; t++) {
                const i = this.cacheData[t];
                if (i.index == e) return i;
            }
        }
    }
    xm.instance = null;
    class Tm {
        constructor() {
            this.path = "ui_dialog/d_Confirm.scene", this.isLoad = !1, this.enoughDiamond = !1, 
            this.cacheModel = 0, this.cacheDiamond = 0, this.cacheText = "", this.cacheTitle = "", 
            this.isopen = !1, d.Instance.Reg(a.UIConfirm_Open, e => {
                this.Open(e[0], e[1], e[2], e[3], e[4], e[5]);
            }), d.Instance.Reg(a.UIConfirm_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIConfirm_OK, e => {
                this.callBackOk();
            }), d.Instance.Reg(a.UIConfirm_Cancle, e => {
                this.callBackCamcle();
            });
        }
        static get Instance() {
            return null == this.instance && (Tm.instance = new Tm()), Tm.instance;
        }
        Open(e, t, i, s, n, a) {
            this.cacheModel = e, this.cacheDiamond = t, this.cacheText = i, this.cacheTitle = a || "提示", 
            this.cacheConfirmCallBack = s, this.cacheCancleCallBack = n, this.enoughDiamond = Z.Instance.diamond >= t, 
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isopen = !0, this.uiControl.updateData(this.cacheModel, this.cacheDiamond, this.enoughDiamond, this.cacheText, this.cacheTitle), 
            2 == this.cacheModel ? this.uiControl.show() : this.uiControl.popup();
        }
        Close() {
            this.isopen = !1, this.uiControl && this.uiControl.close();
        }
        callBackOk() {
            if (this.Close(), !this.enoughDiamond) return d.Instance.Send(a.UIGetFreeDiamond_Open), 
            void d.Instance.Send(a.UIGameTipsModel_SetTips, "钻石不足！", 1e3);
            this.cacheConfirmCallBack && this.cacheConfirmCallBack.run();
        }
        callBackCamcle() {
            this.Close(), this.cacheCancleCallBack && this.cacheCancleCallBack.run();
        }
    }
    Tm.instance = null;
    class Um extends n.ui_view.v_FightMainUI {
        constructor() {
            super(), this.initSkill = !1, this.initSkillLv = !1, this.randombuff = 0, this.showbuff2 = 0, 
            this.showbuff3 = 0, this.sk0Index = 0, this.sk1Index = 1, this.sk2Index = 2, this.sk3Index = 3, 
            this.sk4Index = 4, this.sk5Index = 5, this.showTalk = !0, this.talkChannel = 0, 
            this.sendTimeSpace1 = !0, this.sendTimeSpace2 = !0, this.sendTimeSpace3 = !0, this.oldKill = "", 
            this.miniMapHeroNumt1 = 0, this.miniMapUnitNumt1 = 0, this.miniMapBuildNumt1 = 0, 
            this.miniMapHeroNumt2 = 0, this.miniMapUnitNumt2 = 0, this.miniMapBuildNumt2 = 0, 
            this.btn_joy.on(Laya.Event.MOUSE_DOWN, this, this.touchStartBig), this.img_joy.on(Laya.Event.MOUSE_DOWN, this, this.touchStart), 
            this.sp_attack.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk0Index, me.HERO ]), 
            this.sp_attacktt && this.sp_attacktt.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk0Index, me.BUILD ]), 
            this.sp_attackbd && this.sp_attackbd.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk0Index, me.UNIT ]), 
            this.sp_icon1.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk1Index, me.HERO ]), 
            this.sp_icon2.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk2Index, me.HERO ]), 
            this.sp_icon3.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk3Index, me.HERO ]), 
            this.sp_icon4.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk4Index, me.HERO ]), 
            this.sp_icon5.on(Laya.Event.MOUSE_DOWN, this, this.playSkill, [ this.sk5Index, me.HERO ]), 
            this.img_buff1.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuff, [ 1 ]), this.sp_randombuff.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuff, [ 4 ]), 
            this.sp_add1.on(Laya.Event.MOUSE_DOWN, this, this.skillLvUp, [ 1 ]), this.sp_add2.on(Laya.Event.MOUSE_DOWN, this, this.skillLvUp, [ 2 ]), 
            this.sp_add3.on(Laya.Event.MOUSE_DOWN, this, this.skillLvUp, [ 3 ]), this.img_clickAD.on(Laya.Event.MOUSE_DOWN, this, () => {
                le.Instance.onClickOppoNative();
            }), this.btn_comRelive.on(Laya.Event.MOUSE_DOWN, this, this.onClickWait), this.sp_videostart.on(Laya.Event.MOUSE_DOWN, this, this.onClick_VideoStart), 
            this.sp_videostop.on(Laya.Event.MOUSE_DOWN, this, this.onClick_VideoStop), this.sp_talk.on(Laya.Event.MOUSE_DOWN, this, this.onCliclTalk), 
            this.sp_quicklytalk.on(Laya.Event.MOUSE_DOWN, this, this.onCliclQuicklytalk), this.sp_fightinfo.on(Laya.Event.MOUSE_DOWN, this, this.onClick_FightInfo), 
            this.sp_shop.on(Laya.Event.MOUSE_DOWN, this, this.onClick_FightShop), this.btn_buy.on(Laya.Event.MOUSE_DOWN, this, this.onQuicklyBuy), 
            this.sp_canclesk.on(Laya.Event.MOUSE_MOVE, this, this.onClick_CancleSK), this.sp_relive.on(Laya.Event.MOUSE_DOWN, this, this.onClickRelive), 
            this.sp_relivesh.on(Laya.Event.MOUSE_DOWN, this, this.onClickReliveSh), this.sp_unlockskill.on(Laya.Event.MOUSE_DOWN, this, this.onClickKjfl), 
            this.img_voipmic.on(Laya.Event.MOUSE_DOWN, this, this.onClickSetMuteMic), this.img_voipsound.on(Laya.Event.MOUSE_DOWN, this, this.onClickSetMuteSound), 
            this.btn_exitfight.on(Laya.Event.MOUSE_DOWN, this, this.onClickExitFight), this.img_xp.on(Laya.Event.MOUSE_DOWN, this, this.onClickXP), 
            this.btn_controlModel && this.btn_controlModel.on(Laya.Event.MOUSE_DOWN, this, this.switchControlModel), 
            this.sp_mute && this.sp_mute.on(Laya.Event.MOUSE_DOWN, this, this.onSoundMute), 
            this.list_buff.array = [], this.list_buff.renderHandler = new Laya.Handler(this, this.onListAttrRender), 
            this.box_dead.on(Laya.Event.MOUSE_DOWN, this, this.onCliclDead, [ 1 ]), this.img_mobileAd && this.img_mobileAd.on(Laya.Event.MOUSE_DOWN, this, this.onClickMobile), 
            this.list_quicklytext.array = [], this.list_quicklytext.renderHandler = new Laya.Handler(this, this.onListQuicklytext), 
            this.label_talksw.on(Laya.Event.MOUSE_DOWN, this, this.onCliclTalkSW), this.label_talkchannel.on(Laya.Event.MOUSE_DOWN, this, this.onCliclTalkChannel), 
            this.sp_warclose.on(Laya.Event.MOUSE_DOWN, this, this.onClickQuicklyMsgClose), this.btn_warjg.on(Laya.Event.MOUSE_MOVE, this, this.onClickQuicklyMsgSelect, [ 0 ]), 
            this.btn_warzy.on(Laya.Event.MOUSE_MOVE, this, this.onClickQuicklyMsgSelect, [ 270 ]), 
            this.btn_warjh.on(Laya.Event.MOUSE_MOVE, this, this.onClickQuicklyMsgSelect, [ 90 ]), 
            this.btn_warfs.on(Laya.Event.MOUSE_MOVE, this, this.onClickQuicklyMsgSelect, [ 180 ]), 
            this.btn_warjg.on(Laya.Event.MOUSE_UP, this, this.onClickQuicklyMsg, [ 101 ]), this.btn_warzy.on(Laya.Event.MOUSE_UP, this, this.onClickQuicklyMsg, [ 102 ]), 
            this.btn_warjh.on(Laya.Event.MOUSE_UP, this, this.onClickQuicklyMsg, [ 103 ]), this.btn_warfs.on(Laya.Event.MOUSE_UP, this, this.onClickQuicklyMsg, [ 104 ]), 
            s.isPCPlatform && this.input_talk.on(Laya.Event.ENTER, this, this.onInputEnter), 
            s.isOppoPlatform ? this.img_sendTalk.on(Laya.Event.MOUSE_DOWN, this, this.onInputEnter) : this.input_talk.on(Laya.Event.BLUR, this, this.onInputEnter), 
            this.img_sendTalk.visible = !0, this.list_talk.array = [], this.list_talk.renderHandler = new Laya.Handler(this, this.onListTalk);
        }
        onEnable() {
            this.sp_talk.visible = Y.curMapID != Y.mapID_sh, this.sp_quicklytalk.visible = Y.curMapID != Y.mapID_sh;
        }
        initTalk() {
            if (this.sendTimeSpace1 = !0, this.sendTimeSpace2 = !0, this.sendTimeSpace3 = !0, 
            this.box_msgeffect.visible = !1, this.box_showwarn.visible = !1, this.box_talk.visible = !1, 
            this.box_waring.visible = !1, this.sp_warselect.visible = !1, this.list_talk.array = [], 
            this.list_talk.visible = !1, this.label_talksw.text = this.showTalk ? "聊天开启" : "聊天关闭", 
            this.label_talkchannel.text = 0 == this.talkChannel ? "队伍" : "全部", xm.Instance.cacheData) {
                var e = [];
                for (let i = 0; i < xm.Instance.cacheData.length; i++) {
                    const s = xm.Instance.cacheData[i];
                    if (s.index < 100) {
                        var t = {
                            index: s.index,
                            label_text: {
                                text: s.text
                            }
                        };
                        e.push(t);
                    }
                }
                this.list_quicklytext.array = e;
            }
            s.isKSPlatform && (this.label_talksw.visible = !1, this.label_talkchannel.visible = !1, 
            this.sp_talk_bg.visible = !1, this.input_talk.visible = !1, this.img_sendTalk.visible = !1);
        }
        onInputEnter() {
            if (this.showTalk) {
                var e = this.input_talk.text;
                if (this.input_talk.text = "", null != e && e.length > 0) {
                    var t = 0, i = 0;
                    for (let s = 0; s < e.length && (i = s + 1, e.charCodeAt(s) < 1e3 ? t += 1 : t += 2, 
                    !(t > 44)); s++) ;
                    e = e.substring(0, i), this.sendTimeSpace3 ? (this.sendTimeSpace3 = !1, Laya.timer.once(5e3, this, () => {
                        this.sendTimeSpace3 = !0;
                    }), w.Instance.GetNetMsgData("c2s_chat").Send({
                        type: 0 == this.talkChannel ? 4 : 5,
                        to_id: 0,
                        msg: e,
                        platform: q.getPlatfromName()
                    }), this.box_talk.visible = !1) : d.Instance.Send(a.UIGameTipsModel_SetTipsNoModel, "发言太快，请稍后再试！", 1e3);
                }
            } else this.input_talk.text = "", this.box_talk.visible = !1, d.Instance.Send(a.UIGameTipsModel_SetTipsNoModel, "聊天已关闭，不能发送信息!", 1e3);
        }
        onListQuicklytext(e, t) {
            var i = e.getChildByName("label_text");
            i.off("mousedown", this, this.onClickQuicklytext), i.on("mousedown", this, this.onClickQuicklytext, [ e, t ]);
        }
        onListTalk(e, t) {
            var i = e.getChildByName("label_name");
            e.getChildByName("label_text").x = 70 + i.width;
        }
        onClickQuicklytext(e, t) {
            this.sendTimeSpace1 ? (this.sendTimeSpace1 = !1, Laya.timer.once(5e3, this, () => {
                this.sendTimeSpace1 = !0;
            }), Hl.Instance.addActionToServer([ {
                id: o.QUICKLYTALK
            }, {
                id: e.dataSource.index
            } ])) : d.Instance.Send(a.UIGameTipsModel_SetTipsNoModel, "发言太快，请稍后再试！", 1e3), this.box_talk.visible = !1;
        }
        onClickQuicklyMsgSelect(e) {
            this.sp_warselect.visible = !0, this.sp_warselect.rotation = e;
        }
        onClickQuicklyMsg(e) {
            this.sendTimeSpace2 ? (this.sendTimeSpace2 = !1, Laya.timer.once(5e3, this, () => {
                this.sendTimeSpace2 = !0;
            }), Hl.Instance.addActionToServer([ {
                id: o.QUICKLYTALK
            }, {
                id: e
            } ])) : d.Instance.Send(a.UIGameTipsModel_SetTipsNoModel, "发言太快，请稍后再试！", 1e3), this.box_waring.visible = !1, 
            this.sp_warselect.visible = !1;
        }
        onClickQuicklyMsgClose() {
            this.box_waring.visible = !1, this.sp_warselect.visible = !1;
        }
        onCliclTalkSW(e) {
            this.showTalk = !this.showTalk, this.label_talksw.text = this.showTalk ? "聊天开启" : "聊天关闭", 
            this.list_talk.visible = this.showTalk;
        }
        onCliclTalkChannel(e) {
            this.talkChannel = 0 == this.talkChannel ? 1 : 0, this.label_talkchannel.text = 0 == this.talkChannel ? "队伍" : "全部";
        }
        onCliclTalk(e) {
            this.box_waring.visible = !1, this.input_talk.text = "", this.box_talk.visible = !this.box_talk.visible;
        }
        onCliclQuicklytalk(e) {
            this.box_talk.visible = !1, this.input_talk.text = "", this.box_waring.visible = !this.box_waring.visible;
        }
        quicklyTextMsg(e, t) {
            var i = Re.Instance.getPlayer(e);
            if (null != i && null != Re.Instance.selfPlayer && i.teamID == Re.Instance.selfPlayer.teamID) {
                i && (this.img_qkicon.skin = i.modelData.heroIcon, this.img_qkteamflag.skin = 1 == i.teamID ? "fight/zdjm_bg_028.png" : "fight/zdjm_bg_029.png");
                var s = xm.Instance.getInfo(t);
                null != s && (this.img_qkglag.skin = s.flag, this.label_qktext.text = s.text, "" != s.sound && null != s.sound && Ll.Instance.playSound(s.sound, 1)), 
                this.anim_showwarn.play(0, !1);
                var n = 1 == Re.Instance.selfPlayer.teamID ? -1 : 1, a = {
                    x: 0,
                    y: 0
                };
                a.x = i.logicPos.x, a.y = i.logicPos.y, (a = q.changeVectorAngleTo45(a)).x = n * a.x / 22.5, 
                a.y = n * a.y / 45, this.box_msgeffect.x = 115 + a.x, this.box_msgeffect.y = 60 + a.y, 
                this.anim_msgeffect.play(0, !1);
            }
        }
        talkMsg(e) {
            var t = [], i = e.length - 4;
            i < 0 && (i = 0);
            for (let s = i; s < e.length; s++) t.push(e[s]);
            this.list_talk.array = t, this.showTalk && (this.list_talk.visible = !0, Laya.timer.clear(this, this.hideTalkMsg), 
            Laya.timer.once(5e3, this, this.hideTalkMsg));
        }
        hideTalkMsg() {
            this.list_talk.visible = !1;
        }
        onCliclDead(e, t) {
            Y.Instance.MoveView(t, !0);
        }
        onClickMobile() {
            le.Instance.getUrl();
        }
        onSoundMute() {
            Laya.SoundManager.muted = !Laya.SoundManager.muted, this.sp_mute && (this.sp_mute.skin = Laya.SoundManager.muted ? "fight/img_001.png" : "fight/img_002.png");
        }
        onClickBuff(e) {
            var t = Re.Instance.selfPlayer;
            1 == e && t && t.dontDeadBuff && t.dontDeadBuff.createSkill ? d.Instance.Send(a.UISkillTips_Open, t.dontDeadBuff.createSkill.skillID, t.dontDeadBuff.createSkill.lv) : 4 == e && d.Instance.Send(a.UISkillTips_Open, 0, 0, this.randombuff);
        }
        onClickXP() {
            d.Instance.Send(a.UIXPModel_Open);
        }
        onClickExitFight() {
            s.is233mlcsjPlatform && (le.Instance.showAppInterstitialadCallback = (() => {
                Tm.Instance.isopen && le.Instance.show233Banner();
            }), le.Instance.showAppInterstitialad(60)), f.Instance.currentFrameTime > 3e5 ? d.Instance.Send(a.UIConfirm_Open, 1, 0, "战败并退出当前战斗，是否确定投降？", Laya.Handler.create(this, e => {
                Re.Instance.selfPlayer && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                    type: 2001
                }), d.Instance.Send(a.FightManager_GameEnd, 1 == Re.Instance.selfPlayer.teamID ? 2 : 1)), 
                s.is233mlcsjPlatform && le.Instance.hide233Banner();
            }), Laya.Handler.create(this, e => {
                s.is233mlcsjPlatform && le.Instance.hide233Banner();
            })) : d.Instance.Send(a.UIConfirm_Open, 0, 0, "5分钟以后，才可发起投降！"), this.onClick_GameEnd();
        }
        onClickSetMuteMic() {
            s.isOppoPlatform && "true" === s.isTourist ? d.Instance.Send(a.UIGameTipsModel_SetTips, "当前为游客模式无法使用语音", 1e3) : du.Instance.voipScope ? (du.Instance.setMuteMic(), 
            this.img_voipmic.skin = du.Instance.getMicSkin()) : du.Instance.openVoipScope();
        }
        onClickSetMuteSound() {
            s.isOppoPlatform && "true" === s.isTourist ? d.Instance.Send(a.UIGameTipsModel_SetTips, "当前为游客模式无法使用语音", 1e3) : du.Instance.voipScope ? (du.Instance.setMuteSound(), 
            this.img_voipsound.skin = du.Instance.getSpeakerSkin()) : du.Instance.openVoipScope();
        }
        onClickWait() {
            this.btn_comRelive.visible = !1, this.sp_relive.visible = !1, this.sp_relivesh.visible = !1, 
            this.sp_unlockskill.visible = !1;
        }
        onClickRelive() {
            var e = Re.Instance.selfPlayer;
            null != e && (!s.isPCPlatform && e.relivecount >= e.reliveLimt ? le.Instance.ShowVideoAD(e => {
                1 == e && (this.sp_relive.visible = !1, Hl.Instance.addActionToServer([ {
                    id: o.RELIVE
                } ]));
            }, 2) : (this.sp_relive.visible = !1, Hl.Instance.addActionToServer([ {
                id: o.RELIVE
            } ])));
        }
        onClickReliveSh() {
            null != Re.Instance.selfPlayer && (Z.Instance.menpiao >= 1 ? (w.Instance.GetNetMsgData("c2s_cost_xxmp").Send({}), 
            this.sp_relivesh.visible = !1, Hl.Instance.addActionToServer([ {
                id: o.RELIVE
            } ])) : s.isVivoPlatform || s.isOppoPlatform ? d.Instance.Send(a.UIXPModel_Open) : d.Instance.Send(a.UIGameTipsModel_SetTips, "资源不足，无法使用！", 1e3));
        }
        onClickKjfl() {
            var e = Re.Instance.selfPlayer;
            null != e && (s.isPCPlatform ? (e.isKjfl = !0, this.updateKjfl()) : le.Instance.ShowVideoAD(t => {
                1 == t && (e.isKjfl = !0, this.updateKjfl());
            }, 9));
        }
        onClick_CancleSK() {
            Pm.Instance.touchSkillEnd(0, !0);
        }
        onClick_GameEnd() {
            s.isTestVersion && d.Instance.Send(a.FightManager_GameEnd, 1);
        }
        onClick_FightInfo() {
            d.Instance.Send(a.UIFightInfo_Open);
        }
        onClick_FightShop() {
            d.Instance.Send(a.UIFightShop_Open);
        }
        onQuicklyBuy(e) {
            (s.is4399H5Platform || s.isH5Test || s.isPCPlatform) && Laya.Browser.onPC ? Laya.timer.frameOnce(1, this, () => {
                this.box_eq.visible = Pm.Instance.quicklyBuy();
            }) : this.box_eq.visible = Pm.Instance.quicklyBuy();
        }
        updateInfo(e, t) {
            this.label_ateam.text = e + "", this.label_bteam.text = t + "";
        }
        updateShowDeadTime(e) {
            this.label_deadTime.text = "等待复活 " + e + "秒";
        }
        updateShowDead(e) {
            if (e) {
                if (!this.box_dead.visible) {
                    var t;
                    if (this.box_dead.visible = !0, this.sp_relive.visible = !s.is233Platform, this.sp_relivesh.visible = !1, 
                    Y.curMapID == Y.mapID_sh && (this.sp_relivesh.visible = !0, this.label_relivesh.text = "-1立即复活", 
                    this.label_relivesh.color = Z.Instance.menpiao <= 0 ? "#f32f2b" : "#FFFFFF", Z.Instance.menpiao <= 0 && (s.isVivoPlatform || s.isOppoPlatform) && (this.label_relivesh.text = "立即获取")), 
                    s.isTTPlatform || s.isH5Platform ? (this.btn_comRelive.visible = !0, this.btn_comRelive.x = 468, 
                    this.sp_relive.x = 777) : (this.btn_comRelive.visible = !1, this.btn_comRelive.x = 476, 
                    this.sp_relive.x = 661), null != (t = Re.Instance.selfPlayer) && (this.sp_unlockskill.visible = !t.isKjfl && !s.is233Platform, 
                    this.sp_relivevideo.visible = t.relivecount >= t.reliveLimt), s.isOppoPlatform || s.isVivoPlatform || (s.maiLiangSwitch ? cp.Instance.ShowPanel_Single("fightdead", this, [ {
                        x: 214,
                        y: 327,
                        s: .8
                    }, {
                        x: 363,
                        y: 327,
                        s: .8
                    }, {
                        x: 814,
                        y: 327,
                        s: .8
                    }, {
                        x: 963,
                        y: 327,
                        s: .8
                    } ]) : (le.Instance.CustomAdCallBack = (() => {
                        cp.Instance.ShowPanel_Single("fightdead", this, [ {
                            x: 214,
                            y: 327,
                            s: .8
                        }, {
                            x: 363,
                            y: 327,
                            s: .8
                        }, {
                            x: 814,
                            y: 327,
                            s: .8
                        }, {
                            x: 963,
                            y: 327,
                            s: .8
                        } ]);
                    }), le.Instance.hideCustomAd(), le.Instance.showCustomAd(5, 4, 366, 250), le.Instance.showCustomAd(6, 5, 819, 250))), 
                    null == (t = Re.Instance.selfPlayer)) return;
                    s.isWXPlatform && t && (0 == t.killNum && f.Instance.currentFrameTime > 6e4 || 1 == t.killNum && f.Instance.currentFrameTime > 12e4 || 2 == t.killNum && f.Instance.currentFrameTime > 18e4) && (d.Instance.Send(a.UIMoreGameFull_Open), 
                    le.Instance.ShowInterstitialAd(0));
                }
            } else this.box_dead.visible = !1, cp.Instance.HidePanel_Single(), le.Instance.hideCustomAd();
        }
        updateSelfInfo() {
            ("6" == this.label_kill.text && "6" != this.oldKill || "8" == this.label_kill.text && "8" != this.oldKill || "10" == this.label_kill.text && "10" != this.oldKill || "12" == this.label_kill.text && "12" != this.oldKill) && (le.Instance.showInterXiaomi(), 
            this.oldKill = Re.Instance.selfPlayer.killNum + ""), this.label_kill.text = Re.Instance.selfPlayer.killNum + "", 
            this.label_dead.text = Re.Instance.selfPlayer.deadNum + "", this.label_help.text = Re.Instance.selfPlayer.helpKillNum + "";
        }
        initControl() {
            this.sp_controlbg && (1 == Pm.Instance.controlModel ? (this.sp_controlbg.x = 105, 
            this.label_control1.color = "#9a9a9a", this.label_control2.color = "#ffffff") : (this.sp_controlbg.x = 0, 
            this.label_control1.color = "#ffffff", this.label_control2.color = "#9a9a9a"), 1 == Pm.Instance.controlModel ? (this.box_WASD.visible = !0, 
            this.lab_tips.visible = !0, this.btn_joy.visible = !1, this.img_joy.visible = !1, 
            Laya.timer.once(5e3, this, () => {
                this.lab_tips.visible = !1;
            })) : (this.box_WASD.visible = !1, this.lab_tips.visible = !1, this.btn_joy.visible = !0, 
            this.img_joy.visible = !0));
        }
        switchControlModel() {
            Pm.Instance.switchControl(), this.initControl();
        }
        init() {
            this.label_ping.text = "", this.initSkill = !1, this.initSkillLv = !1, this.oldKill = "", 
            this.box_talk.visible = !1, this.initTalk(), this.label_ateam.text = "0", this.label_bteam.text = "0", 
            this.label_kill.text = "0", this.label_dead.text = "0", this.label_help.text = "0", 
            this.img_lv1.skin = "", this.img_lv2.skin = "", this.img_lv3.skin = "", this.img_skill4.visible = !1, 
            this.img_skill5.visible = !1, this.btn_exitfight.visible = !0, this.sp_xptips.visible = !1, 
            this.box_xpreday.visible = !1, this.box_dead.visible = !1, this.img_mobileAd && (this.img_mobileAd.visible = s.MobileShop && s.isXiaoMiPlatform), 
            (s.isPCPlatform || s.is4399H5Platform || s.isH5Test) && Laya.Browser.onPC ? this.box_controlModel.visible = !0 : this.box_controlModel.visible = !1, 
            this.sp_mute && (this.sp_mute.visible = !0, this.sp_mute.skin = Laya.SoundManager.muted ? "fight/img_001.png" : "fight/img_002.png"), 
            this.initControl();
            var e = 1, t = 1;
            for (let s = 0; s < Re.Instance.dicHeroPlayerInstance.length; s++) {
                var i, n = Re.Instance.dicHeroPlayer[Re.Instance.dicHeroPlayerInstance[s]];
                (i = 1 == n.teamID ? e++ : t++) <= 3 && (Y.curMapID == Y.mapID_sh && 2 == n.teamID ? (this["img_heroicon" + n.teamID + i].visible = !1, 
                this["sp_herodead" + n.teamID + i].visible = !1, this["label_herotime" + n.teamID + i].visible = !1, 
                i > 1 && (this["img_bg" + n.teamID + i].visible = !1)) : (this["img_heroicon" + n.teamID + i].visible = !0, 
                this["img_bg" + n.teamID + i].visible = !0, this["img_heroicon" + n.teamID + i].skin = n.modelData.heroIcon, 
                this["sp_herodead" + n.teamID + i].visible = !1, this["label_herotime" + n.teamID + i].visible = !1));
            }
            var o = Re.Instance.selfPlayer;
            null != o && (1 == o.teamID ? this.anim_swichblue.play(0, !1) : this.anim_swichred.play(0, !1), 
            this.sp_unlockskill.visible = !o.isKjfl && !s.is233Platform), this.updateMiniMap(), 
            this.updateKjfl(), this.sp_videostart.visible = s.isTTPlatform || s.isKSPlatform, 
            this.sp_videostop.visible = !1, s.isTTPlatform && (d.Instance.Send(a.GameRecorder_videoEnable, !0), 
            d.Instance.Send(a.GameRecorder_start)), (s.isOppoPlatform || s.isWXPlatform) && (this.img_voipmic.visible = !0, 
            this.img_voipsound.visible = !0, this.updateVoip()), this.sp_randombuff.visible = !1, 
            Y.curMapID == Y.mapID_sh ? (this.sp_shop.visible = !1, this.box_eq.visible = !1, 
            this.sp_shhead.visible = !0, this.img_xp.visible = !0, this.label_curshlv.visible = !0, 
            this.label_curshlv.text = "第" + fu.Instance.shModelLv + "关") : (this.sp_shop.visible = !s.isWXPlatform, 
            this.sp_shhead.visible = !1, this.img_xp.visible = !1, this.label_curshlv.visible = !1);
        }
        updateXPSkillShow(e, t) {
            this.sp_xptips.visible = !0, this.label_xptipsname.text = e, this.label_xptips.text = "] 使用了XP技能 " + t.skillName + " ！", 
            Laya.timer.once(5e3, this, this.updateXPSkillShowCallBack, [ this.sp_xptips ]);
        }
        updateXPSkillShowCallBack(e) {
            e && (e.visible = !1);
        }
        updateXPSkillReday(e) {
            this.box_xpreday.visible = !0;
            var t = eu.Instance.getSkillBase(e);
            t && (this.label_xpreday.text = t.skillName + "已准备就绪！"), Laya.timer.once(3e3, this, this.updateXPSkillRedayCallBack, [ this.box_xpreday ]);
        }
        updateXPSkillRedayCallBack(e) {
            e && (e.visible = !1);
        }
        updateRandomBuff(e) {
            var t = Cl.Instance.getBuffBase(e);
            t && (this.sp_randombuff.visible = !0, this.label_randomtime.text = "", this.img_randombufficon.skin = t.icon, 
            this.label_randombuffdesc.text = t.desc, this.randombuff = t.id);
        }
        updateRandomTime(e) {
            var t = Math.floor(e / 1e3);
            t >= 0 && (this.label_randomtime.text = t + "s");
        }
        updateRandomInit() {
            var e = [], t = Re.Instance.selfPlayer;
            if (null != t) {
                var i = bl.Instance.getAllBuff(t.instanceID);
                if (i) for (let t = 0; t < i.length; t++) {
                    var s = i[t];
                    if (s && s.icon && s.time >= 999999) {
                        var n = {
                            buffId: s.id,
                            buffLv: s.addCount,
                            img_bufficon: {
                                skin: s.icon
                            },
                            label_bufflv: {
                                text: s.addCount > 1 ? "" + s.addCount : ""
                            }
                        };
                        e.push(n);
                    }
                }
            }
            this.list_buff.array = e, this.list_buff.x = 9 - 27 * e.length;
        }
        onListAttrRender(e, t) {
            var i = e.getChildByName("img_bufficon");
            i.off("mousedown", this, this.onClickListBuff), i.on("mousedown", this, this.onClickListBuff, [ e, t ]);
        }
        onClickListBuff(e, t) {
            d.Instance.Send(a.UISkillTips_Open, 0, 0, e.dataSource.buffId, e.dataSource.buffLv);
        }
        updateKjfl() {
            var e = Re.Instance.selfPlayer;
            null != e && (this.label_unlock4.visible = !0, this.label_unlock4.text = e.isKjfl ? "恢复" : s.is233Platform ? "恢复（小）" : "未解锁", 
            this.img_skill4Video.visible = !e.isKjfl && !s.is233Platform, this.label_unlock5.visible = !0, 
            this.img_skill5Video.visible = !e.isWing && !s.is233Platform, this.label_unlock5.text = e.isWing ? "闪现" : s.is233Platform ? "闪现（小）" : "未解锁", 
            this.sp_unlockskill.visible = !e.isKjfl && !s.is233Platform);
        }
        updateVoip() {
            this.img_voipmic.skin = du.Instance.getMicSkin(), this.img_voipsound.skin = du.Instance.getSpeakerSkin();
        }
        updateHeroList() {
            var e = 1, t = 1;
            for (let n = 0; n < Re.Instance.dicHeroPlayerInstance.length; n++) {
                var i, s = Re.Instance.dicHeroPlayer[Re.Instance.dicHeroPlayerInstance[n]];
                (i = 1 == s.teamID ? e++ : t++) <= 3 && (Y.curMapID == Y.mapID_sh && 2 == s.teamID || (s.isDead ? (this["sp_herodead" + s.teamID + i].visible = !0, 
                this["label_herotime" + s.teamID + i].visible = !0, this["label_herotime" + s.teamID + i].text = Math.floor(1 + s.deadTime / 1e3)) : this["sp_herodead" + s.teamID + i].visible && (this["sp_herodead" + s.teamID + i].visible = !1, 
                this["label_herotime" + s.teamID + i].visible = !1)));
            }
        }
        updatePing(e) {
            e > 0 && (this.label_ping.text = "ping:" + e, this.label_ping.color = e > 150 ? "#f34e25" : e > 100 ? "#f3da24" : "#44fb21", 
            this.sp_xinhao.visible = e > 150);
        }
        onDisable() {
            this.initSkill = !1;
        }
        onClick_SwitchHero() {
            d.Instance.Send(a.UIFightMainModel_SwitchHero);
        }
        onClick_VideoStart() {
            s.isKSPlatform ? j.Instance.KsGameRecorderStart() : (d.Instance.Send(a.GameRecorder_start), 
            this.sp_videostart.visible = !1, this.sp_videostop.visible = !0, this.label_videotime.text = "");
        }
        onClick_VideoStop() {
            s.isKSPlatform ? j.Instance.KsGameRecorderStop() : (d.Instance.Send(a.GameRecorder_stop), 
            this.sp_videostart.visible = !0, this.sp_videostop.visible = !1, this.label_videotime.text = "");
        }
        onClick_Set() {
            d.Instance.Send(a.UIFightSet_Open);
        }
        touchStartBig(e) {
            d.Instance.Send(a.UIFightMainModel_TouchMove, e);
        }
        touchStart(e) {
            d.Instance.Send(a.UIFightMainModel_TouchMove, e);
        }
        playSkill(e, t, i) {
            t == me.BUILD ? this.anim_atktt && this.anim_atktt.play(0, !1) : t == me.UNIT && this.anim_atkbd && this.anim_atkbd.play(0, !1);
            var s = {
                x: 0,
                y: 0
            };
            0 == e ? (s.x = this.img_skill1.x, s.y = this.img_skill1.y) : 1 == e ? (s.x = this.img_skill1.x, 
            s.y = this.img_skill1.y) : 2 == e ? (s.x = this.img_skill2.x, s.y = this.img_skill2.y) : 3 == e ? (s.x = this.img_skill3.x, 
            s.y = this.img_skill3.y) : 4 == e ? (s.x = this.img_skill4.x, s.y = this.img_skill4.y) : 5 == e && (s.x = this.img_skill5.x, 
            s.y = this.img_skill5.y), Pm.Instance.playSkill(i, e, s, !1, t);
        }
        playSkillAnim(e) {
            0 == e ? !this.anim_atk1.isPlaying && this.anim_atk1.play(0, !1) : 1 == e ? !this.anim_atk2.isPlaying && this.anim_atk2.play(0, !1) : 2 == e ? !this.anim_atk3.isPlaying && this.anim_atk3.play(0, !1) : 3 == e && !this.anim_atk4.isPlaying && this.anim_atk4.play(0, !1);
        }
        skillLvUp(e) {
            1 == e ? !this.anim_atk2.isPlaying && this.anim_atk2.play(0, !1) : 2 == e ? !this.anim_atk3.isPlaying && this.anim_atk3.play(0, !1) : 3 == e && !this.anim_atk4.isPlaying && this.anim_atk4.play(0, !1), 
            Pm.Instance.skillLvUp(e);
        }
        updateMiniMap() {
            if (Re.Instance.selfPlayer) {
                this.miniMapHeroNumt1 = 0, this.miniMapUnitNumt1 = 0, this.miniMapBuildNumt1 = 0, 
                this.miniMapHeroNumt2 = 0, this.miniMapUnitNumt2 = 0, this.miniMapBuildNumt2 = 0;
                for (var e = 1 == Re.Instance.selfPlayer.teamID ? -1 : 1, t = {
                    x: 0,
                    y: 0
                }, i = 0; i < Re.Instance.dicPlayerInstance.length; i++) {
                    var s = Re.Instance.dicPlayer[Re.Instance.dicPlayerInstance[i]];
                    if (null != s && !s.isDead) {
                        var n = null;
                        s.isSelf ? n = this.sp_self : s.unitType == me.HERO && Re.Instance.checkPlayerVisable(Re.Instance.selfPlayer, s) ? n = this["sp_team" + s.teamID + (1 == s.teamID ? this.miniMapHeroNumt1++ : this.miniMapHeroNumt2++)] : s.unitType == me.UNIT ? n = this["sp_unit" + s.teamID + (1 == s.teamID ? this.miniMapUnitNumt1++ : this.miniMapUnitNumt2++)] : s.unitType == me.BUILD && (n = this["sp_build" + s.teamID + (1 == s.teamID ? this.miniMapBuildNumt1++ : this.miniMapBuildNumt2++)]), 
                        null != n && (n.visible = !0, t.x = s.logicPos.x, t.y = s.logicPos.y, (t = q.changeVectorAngleTo45(t)).x = e * t.x / 22.5, 
                        t.y = e * t.y / 45, n.x = 115 + t.x, n.y = 60 + t.y);
                    }
                }
                for (i = this.miniMapHeroNumt1; i < 3; i++) null != (n = this["sp_team1" + i]) && (n.visible = !1);
                for (i = this.miniMapHeroNumt2; i < 3; i++) null != (n = this["sp_team2" + i]) && (n.visible = !1);
                for (i = this.miniMapUnitNumt1; i < 10; i++) null != (n = this["sp_unit1" + i]) && (n.visible = !1);
                for (i = this.miniMapUnitNumt2; i < 10; i++) null != (n = this["sp_unit2" + i]) && (n.visible = !1);
                for (i = this.miniMapBuildNumt1; i < 3; i++) null != (n = this["sp_build1" + i]) && (n.visible = !1);
                for (i = this.miniMapBuildNumt2; i < 3; i++) null != (n = this["sp_build2" + i]) && (n.visible = !1);
            }
        }
        updateVideo(e, t) {
            e ? (this.sp_videostop.visible = !0, this.sp_videostart.visible = !1, this.label_videotime.visible = !0, 
            this.label_videotime.text = t + "s") : this.sp_videostop.visible && (this.label_videotime.visible = !1, 
            this.label_videotime.text = "", this.sp_videostop.visible = !1, this.sp_videostart.visible = !0);
        }
        updateJoy(e, t, i, s) {
            this.img_joy.left = e, this.img_joy.bottom = t, this.img_joyBall.x = i, this.img_joyBall.y = s;
        }
        setSkillInfo(e) {
            e && (e.dontDeadBuff ? (this.img_buff1.visible = !0, e.dontDeadTime > 0 ? (this.img_buffcd1.visible = !1, 
            this.label_bufftime1.visible = !1) : (this.img_buffcd1.visible = !0, this.label_bufftime1.visible = !0, 
            this.label_bufftime1.text = Math.floor((e.dontDeadBuff.spaceTime - e.dontDeadBuff.curTime) / 1e3) + "")) : this.img_buff1.visible = !1), 
            this.label_time.text = q.changeTime(Math.floor(f.Instance.currentFrameTime / 1e3));
            var t, i, s, n, a, o, l = 0, h = e.skillData;
            for (let d = 1; d < h.length; d++) {
                var r = h[d];
                if (!r.isShowUI) return;
                l++, this.initSkill || (1 == l ? (t = this.img_skill1, this.sk1Index = d) : 2 == l ? (t = this.img_skill2, 
                this.sk2Index = d) : 3 == l ? (t = this.img_skill3, this.sk3Index = d) : 4 == l ? (t = this.img_skill4, 
                this.sk4Index = d) : 5 == l ? (t = this.img_skill5, this.sk5Index = d) : t = null, 
                t && (t.visible = !0), (i = 1 == l ? this.sp_icon1 : 2 == l ? this.sp_icon2 : 3 == l ? this.sp_icon3 : 4 == l ? this.sp_icon4 : 5 == l ? this.sp_icon5 : null) && (i.skin = r.skillIcon)), 
                this.initSkillLv || (s = 1 == l ? this.img_lv1 : 2 == l ? this.img_lv2 : 3 == l ? this.img_lv3 : null, 
                3 == r.maxlv ? s && (s.visible = r.lv > 0, s.visible && (s.skin = "fight/zdjm_dzsklv_" + r.lv + ".png")) : s && (s.visible = r.lv > 0, 
                s.visible && (s.skin = "fight/zdjm_sklv_" + r.lv + ".png"))), (a = 1 == l ? this.sp_add1 : 2 == l ? this.sp_add2 : 3 == l ? this.sp_add3 : null) && (a.visible = r.lv < r.maxlv && r.skillNeddLv <= r.owner.lv && r.owner.skillPoint > 0), 
                r = e.getSKill(d), (n = 1 == l ? this.sp_cd1 : 2 == l ? this.sp_cd2 : 3 == l ? this.sp_cd3 : 4 == l ? this.sp_cd4 : 5 == l ? this.sp_cd5 : null) && (n.visible = r.curCD > 0 || 0 == r.lv), 
                o = 1 == l ? this.label_s1cd : 2 == l ? this.label_s2cd : 3 == l ? this.label_s3cd : 4 == l ? this.label_s4cd : 5 == l ? this.label_s5cd : null;
                var c = Math.round(r.curCD / 1e3);
                0 == c && (c = 1), o && (o.visible = r.curCD > 0, o.visible && (o.text = c + ""));
            }
            this.initSkill = !0, this.initSkillLv = !0;
        }
        setSkillCancle(e) {}
        updateItem(e, t) {
            s.isWXPlatform && le.Instance.ShowBannerAD(4, this), Laya.timer.clear(this, this.playCloseItemAnim), 
            Laya.timer.once(3e3, this, this.playCloseItemAnim);
        }
        playCloseItemAnim() {
            le.Instance.HideBannerAD();
        }
        clearWaitBuy() {
            this.box_eq.visible = !1;
        }
        showBuyTips(e) {
            e ? (this.sp_buytips.visible = !0, this.anim_buyTips.play(0, !0)) : (this.sp_buytips.visible = !1, 
            this.anim_buyTips.stop());
        }
        updateGlod(e, t, i) {
            this.label_glod && (this.label_glod.text = e + ""), this.label_eqcoin.text = t + "", 
            0 != t && e >= t && !this.box_eq.visible && (this.box_eq.visible = !0, this.img_eqicon.skin = null != i ? i.icon : null, 
            this.label_eqname.text = null != i ? i.name : "", this.label_eqinfo.text = null != i ? i.simpleInfo : "");
        }
    }
    class Lm extends n.ui_view.v_FightReadyUI {
        constructor() {
            super(), this.isOpen = !1, this.curHeroID = 0, this.oldPowerNum = 0, this.teamLeaderID = 0, 
            this.isAutoSend = !1, this.cacheAllLv = 0, this.cacheDungeonID = 0, this.cacheMsg = "", 
            this.sp_back.on(Laya.Event.MOUSE_DOWN, this, this.onClickBack), this.sp_startgame.on(Laya.Event.MOUSE_DOWN, this, this.onClickStartGame), 
            this.sp_testHero.on(Laya.Event.MOUSE_DOWN, this, this.onClickTestHero), this.sp_qh.on(Laya.Event.MOUSE_DOWN, this, this.onClickTianFu), 
            this.btn_getTps.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetHero), this.img_buy.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero), 
            this.img_invite.on(Laya.Event.MOUSE_DOWN, this, this.onClickInvite), this.img_shareinvite.on(Laya.Event.MOUSE_DOWN, this, this.onClickShareInvite), 
            this.btn_talk.on(Laya.Event.MOUSE_DOWN, this, this.onClickTalk), this.img_clickAD.on(Laya.Event.CLICK, this, () => {
                le.Instance.onClickOppoNative();
            }), this.img_voipmic.on(Laya.Event.MOUSE_DOWN, this, this.onClickSetMuteMic), this.img_voipsound.on(Laya.Event.MOUSE_DOWN, this, this.onClickSetMuteSound), 
            this.box_skill.on(Laya.Event.MOUSE_DOWN, this, this.onClickWingSKill), this.sp_getwing.on(Laya.Event.MOUSE_DOWN, this, this.onClickWingGet), 
            this.sp_upwing.on(Laya.Event.MOUSE_DOWN, this, this.onClickWingUp), this.img_select.on(Laya.Event.MOUSE_DOWN, this, this.onClickShowDungeon), 
            this.img_mobileAD && this.img_mobileAD.on(Laya.Event.MOUSE_DOWN, this, this.onClickMobile), 
            this.img_mobileADClose && this.img_mobileADClose.on(Laya.Event.MOUSE_DOWN, this, this.onClickCleanADClose), 
            this.list_hero.array = null, this.list_hero.renderHandler = new Laya.Handler(this, this.onHeroListRender), 
            this.list_pf.array = null, this.list_pf.renderHandler = new Laya.Handler(this, this.onHeroPfListRender), 
            this.list_player.array = null, this.list_player.renderHandler = new Laya.Handler(this, this.onPlayerListRender), 
            this.list_sk.array = null, this.list_sk.renderHandler = new Laya.Handler(this, this.onSkillListRender), 
            this.list_select.array = null, this.list_select.vScrollBarSkin = "", this.list_select.renderHandler = new Laya.Handler(this, this.onDungeonListRender);
        }
        onClickCleanADClose() {
            this.box_mobileAD && (this.box_mobileAD.visible = !1);
        }
        onClickMobile() {
            le.Instance.getUrl();
        }
        onClickWingGet() {
            s.isTTPlatform ? d.Instance.Send(a.UIConfirm_Open, 3, 0, "观看视频免费激活翅膀，确定继续吗?", Laya.Handler.create(this, e => {
                d.Instance.Send(a.UIWing_UP);
            })) : d.Instance.Send(a.UIWing_UP);
        }
        onClickWingUp() {
            d.Instance.Send(a.UIWing_Open);
        }
        onClickShowDungeon() {
            hm.Instance.playerData && hm.Instance.playerData.length > 0 && s.playerID == hm.Instance.playerData[0].id ? this.box_select.visible = !this.box_select.visible : d.Instance.Send(a.UIConfirm_Open, 0, 0, "只有房主才能更改关卡！");
        }
        onClickWingSKill() {
            vm.Instance.curWingData && d.Instance.Send(a.UISkillTips_Open, vm.Instance.curWingData.skill);
        }
        hideAppNative() {
            s.isAppPlatform && le.Instance.HideBannerAD();
        }
        onClickSetMuteMic() {
            s.isOppoPlatform && "true" === s.isTourist ? d.Instance.Send(a.UIGameTipsModel_SetTips, "当前为游客模式无法使用语音", 1e3) : du.Instance.voipScope ? (du.Instance.setMuteMic(), 
            this.img_voipmic.skin = du.Instance.getMicSkin()) : du.Instance.openVoipScope();
        }
        onClickSetMuteSound() {
            s.isOppoPlatform && "true" === s.isTourist ? d.Instance.Send(a.UIGameTipsModel_SetTips, "当前为游客模式无法使用语音", 1e3) : du.Instance.voipScope ? (du.Instance.setMuteSound(), 
            this.img_voipsound.skin = du.Instance.getSpeakerSkin()) : du.Instance.openVoipScope();
        }
        onEnable() {
            this.caccheSelectInfo = null;
        }
        onDisable() {
            this.curHeroID = Z.Instance.curHeroID;
        }
        init() {
            this.isAutoSend = !1, this.box_p1talk.visible = !1, this.box_p2talk.visible = !1, 
            this.box_p3talk.visible = !1, this.label_talkname.text = "", this.label_talkmsg.text = "", 
            this.img_shareinvite.visible = s.isPCPlatform || s.isWXPlatform || s.isTTPlatform || s.isQQPlatform || s.isH5Platform, 
            this.img_voipmic.visible = s.isWXPlatform, this.img_voipsound.visible = s.isWXPlatform, 
            this.sp_getwingflag.visible = !s.isTTPlatform, this.box_mobileAD && (this.box_mobileAD.visible = s.isXiaoMiPlatform && s.MobileShop), 
            Y.curMapID == Y.mapID_sh ? (this.initDungeon(), q.fixedCurSceneBG(!0)) : this.box_dungeon.visible = !1, 
            this.updateVoip(), this.wingUpdate(), this.sp_guide.visible = Z.Instance.isNewPlayerFlag, 
            this.sp_back.visible = !s.isWXPlatform || s.isWXPlatform && !s.isGs;
        }
        wingUpdate() {
            this.box_wing.visible = vm.Instance.wingOpen, this.box_wing.visible && this.initWing();
        }
        initWing() {
            var e;
            if (0 == vm.Instance.curWingLv) {
                if (this.sp_getwing.visible = !0, this.box_skill.visible = !0, this.label_winglv.visible = !1, 
                this.sp_upwing.visible = !1, null != (e = vm.Instance.curWingData)) {
                    var t = eu.Instance.getSkillInfo(e.skill);
                    t && (this.img_wingskicon.skin = t.skillIcon);
                }
            } else this.sp_getwing.visible = !1, this.sp_upwing.visible = !0, this.box_skill.visible = !1, 
            this.label_winglv.visible = !0, this.label_winglv.text = "Lv." + vm.Instance.curWingLv;
            (e = vm.Instance.curWingData) && (this.cacheWingShowData && this.cacheWingShowData.curShowRes != e.modelRes && (te.Instance.destroyModelById(this.cacheWingShowData.instanceId), 
            this.cacheWingShowData = null), (null == this.cacheWingShowData || this.cacheWingShowData.isDestroy) && te.Instance.checkShowModel("UI_FightReady_View") && (this.cacheWingShowData = te.Instance.load3DModel("UI_FightReady_View", null, e.modelRes, s.fixStageX + 984, 185, e.uiMinScale, 0, s.fixStageX + 900, s.fixStageX + 900 + 200, Y.curMapID == Y.mapID_33, !0)));
        }
        modelAddWing() {
            var e = vm.Instance.curWingData;
            if (this.showModelInfo && this.showModelInfo.model && this.cacheWingShowData && this.cacheWingShowData.model) {
                var t = q.findChild(this.showModelInfo.model, "wingPoint");
                this.cacheWingShowData.model.removeSelf();
                var i = Laya.Loader.getRes(e.modelRes).clone();
                if (i) {
                    var s = new Laya.Vector3();
                    i.transform.localPosition = s, t.addChild(i);
                }
            }
        }
        onDialogOpen() {
            (s.isTTPlatform || s.isH5Platform) && (this.img_shareinvite.x = 964, this.img_shareinvite.y = 664, 
            this.img_shareinvite.scaleX = 1.4, this.img_shareinvite.scaleY = 1.45, this.sp_qh.y = 543, 
            this.box_talk.y = 475);
        }
        setTalkMsg(e, t, i) {
            var s = null, n = null;
            1 == e ? (s = this.box_p1talk, n = this.label_p1talkmsg, Laya.timer.once(3e3, this, this.hideTalkMsg1)) : 2 == e ? (s = this.box_p2talk, 
            n = this.label_p2talkmsg, Laya.timer.once(3e3, this, this.hideTalkMsg2)) : 3 == e && (s = this.box_p3talk, 
            n = this.label_p3talkmsg, Laya.timer.once(3e3, this, this.hideTalkMsg3)), s && (s.visible = !0), 
            n && (n.text = i), this.label_talkname.text = t, this.label_talkmsg.text = ":" + i;
        }
        hideTalkMsg1(e) {
            this.box_p1talk.visible = !1;
        }
        hideTalkMsg2(e) {
            this.box_p2talk.visible = !1;
        }
        hideTalkMsg3(e) {
            this.box_p3talk.visible = !1;
        }
        updatePlayerList(e) {
            var t = [], i = [];
            hm.Instance.selfReady = !1;
            var n = !1;
            e.length > 0 && (n = e[0].id == s.playerID);
            for (var a = 0; a < 3; a++) {
                var o = e[a];
                if (null != o) {
                    var l = Q.Instance.getUnitAttribute(o.roleID);
                    if (l) var h = ce.Instance.getModel(l.modelID);
                    var r = Q.Instance.getBaseID(o.roleID), c = {
                        id: o.id,
                        name: o.name,
                        roleID: o.roleID,
                        sp_select: {
                            visible: s.playerID == o.id
                        },
                        img_icon: {
                            visible: -1 == t.indexOf(r),
                            skin: h ? h.heroIcon : ""
                        },
                        label_name: {
                            visible: !0,
                            text: o.name
                        },
                        img_ready: {
                            visible: 1 == o.state
                        },
                        img_add: {
                            visible: !1
                        },
                        img_tiren: {
                            visible: n && 0 != a
                        }
                    };
                    i.push(c), t.push(r), s.playerID == o.id && 1 == o.state && (hm.Instance.selfReady = !0);
                } else {
                    i.push({
                        id: 0,
                        roleID: 0,
                        sp_select: {
                            visible: !1
                        },
                        img_icon: {
                            visible: !1
                        },
                        label_name: {
                            visible: !1
                        },
                        img_add: {
                            visible: !0
                        },
                        img_ready: {
                            visible: !1
                        },
                        img_tiren: {
                            visible: !1
                        }
                    });
                }
            }
            hm.Instance.selfReady ? (this.sp_testHero.visible = !1, this.sp_startgame.visible = !1, 
            this.sp_readytips.visible = !0, e.length > 1 && !this.isAutoSend && (this.isAutoSend = !0, 
            w.Instance.GetNetMsgData("c2s_chat").Send({
                type: 2,
                to_id: 0,
                msg: "我已准备好！",
                platform: q.getPlatfromName()
            }))) : (this.sp_readytips.visible = !1, this.isAutoSend = !1), this.list_player.array = i, 
            (r = Q.Instance.getBaseID(this.curHeroID)) == Z.Instance.curHeroID ? this.updateHeroList(this.curHeroID) : this.updateHeroList(Z.Instance.curHeroID);
        }
        updateHeroList(e) {
            this.sp_testHero.visible = !1, this.sp_startgame.visible = !1, this.sp_readytips.visible = !1, 
            this.btn_buyinfo.visible = !1, this.btn_getTps.visible = !1, this.curHeroID = e;
            var t = [], i = hm.Instance;
            for (let e = 0; e < Q.Instance.heroShowList.length; e++) {
                const c = Z.Instance.getHaveHero(Q.Instance.heroShowList[e]);
                if (c) {
                    var n = Q.Instance.getUnitAttribute(c.id), a = Q.Instance.getBaseID(this.curHeroID);
                    if (n) {
                        var o, l = ce.Instance.getModel(n.modelID);
                        if (l && (o = {
                            heroSort: -1 == c.count ? 999 : c.count,
                            heroInfo: c,
                            heroID: c.id,
                            count: c.count,
                            img_icon: {
                                skin: l.heroIcon,
                                disabled: i.selfReady || !i.isEnableHero(c.id)
                            },
                            img_flag: {
                                visible: !1
                            },
                            sp_select: {
                                visible: i.isEnableHero(c.id) && (this.curHeroID == n.unitID || a == n.unitID)
                            },
                            sp_lock: {
                                visible: 0 == c.count
                            },
                            label_name: {
                                text: l.heroName
                            }
                        }, t.push(o)), this.curHeroID == c.id && i.isEnableHero(c.id)) {
                            if (this.sp_pfinfo.visible = !1, this.setHeroGetInfo(l, c), this.label_curheroname.text = l.aliasName + "  " + l.heroName, 
                            this.label_typename.text = l.typeName, !this.showModelInfo || this.showModelInfo.curShowRes == l.resName && this.showModelInfo.modelData == l || (te.Instance.destroyModelById(this.showModelInfo.instanceId), 
                            this.showModelInfo = null), (null == this.showModelInfo || this.showModelInfo.isDestroy) && te.Instance.checkShowModel("UI_FightReady_View")) {
                                var h = s.systemInfo.screenWidth > s.systemInfo.screenHeight ? s.systemInfo.screenWidth : s.systemInfo.screenHeight, r = Math.round(h / 2 * s.systemInfo.pixelRatio / s.screenScale);
                                this.showModelInfo = te.Instance.load3DModel("UI_FightReady_View", l, l.resName, s.fixStageX + 666, s.fixStageY + 620, 4, 180, r - 250, r + 250, Y.curMapID == Y.mapID_33);
                            }
                            this.updateSkill(n.skill), this.label_startgame.visible = !1, this.label_testname.text = "英雄试玩", 
                            this.label_test.text = "当前英雄未解锁，可免费试玩1次！", this.label_jump.visible = s.isWXPlatform ? "" != l.getMsg : "" != l.getMsg2, 
                            this.label_getInfo.text = s.isWXPlatform ? l.getInfo : l.getInfo2, this.cacheMsg = s.isWXPlatform ? l.getMsg : l.getMsg2, 
                            -1 == c.count || c.count > 0 && c.demoTodayCount < c.demoTodayLimit ? (this.sp_startgame.visible = !0, 
                            c.demoEtime > w.Instance.severTime / 1e3 ? (this.label_startgame.visible = !0, this.label_startgame.text = q.GetDateString(c.demoEtime) + " 前可免费试玩！ ") : c.count > 0 && (this.label_startgame.visible = !0, 
                            this.label_startgame.text = "拥有" + c.count + "次试玩机会! " + (c.demoTodayLimit >= 999 ? "" : "今日还能试玩" + c.demoTodayCount + "/" + c.demoTodayLimit + "次!")), 
                            this.sp_testHero.visible = !1) : (this.sp_startgame.visible = !1, this.sp_testHero.disabled = !1, 
                            c.demoTodayCount >= c.demoTodayLimit ? (this.label_test.text = "拥有" + c.count + "次试玩机会! 今日免费试玩已达上限！", 
                            this.sp_testHero.disabled = !0, this.sp_testHero.visible = !0) : this.sp_testHero.visible = !0);
                        }
                    }
                }
            }
            t.sort(function(e, t) {
                return t.heroSort - e.heroSort;
            }), this.list_hero.array = t, this.updateHeroSkinList(this.curHeroID);
        }
        updateHeroSkinList(e) {
            var t = Q.Instance.getUnitSkinInfo(Q.Instance.getBaseID(e));
            if (null != t && t.length > 0) {
                var i = [], n = [];
                n.push(Q.Instance.getBaseID(e));
                for (let e = 0; e < t.length; e++) n.push(t[e].unitID);
                var a = hm.Instance;
                for (let e = 0; e < n.length; e++) {
                    const t = Z.Instance.getHaveHero(n[e]);
                    if (t) {
                        var o = Q.Instance.getUnitAttribute(t.id), l = Q.Instance.getBaseID(t.id);
                        if (o) {
                            var h = ce.Instance.getModel(o.modelID);
                            if (h) {
                                var r = {
                                    heroInfo: t,
                                    heroID: t.id,
                                    count: t.count,
                                    img_icon: {
                                        skin: h.heroIcon,
                                        disabled: a.selfReady || !a.isEnableHero(l)
                                    },
                                    img_iconhalf: {
                                        skin: h.heroHalfPic,
                                        disabled: a.selfReady || !a.isEnableHero(l)
                                    },
                                    img_flag: {
                                        visible: !1
                                    },
                                    sp_select: {
                                        visible: a.isEnableHero(l) && this.curHeroID == o.unitID
                                    },
                                    sp_lock: {
                                        visible: 0 == t.count
                                    },
                                    label_name: {
                                        text: h.aliasName
                                    }
                                };
                                i.push(r);
                            }
                            if (this.curHeroID == t.id && a.isEnableHero(t.id)) {
                                if (this.setHeroGetInfo(h, t), this.label_curheroname.text = h.aliasName + "  " + h.heroName, 
                                this.label_typename.text = h.typeName, !this.showModelInfo || this.showModelInfo.curShowRes == h.resName && this.showModelInfo.modelData == h || (te.Instance.destroyModelById(this.showModelInfo.instanceId), 
                                this.showModelInfo = null), (null == this.showModelInfo || this.showModelInfo.isDestroy) && te.Instance.checkShowModel("UI_FightReady_View")) {
                                    var c = s.systemInfo.screenWidth > s.systemInfo.screenHeight ? s.systemInfo.screenWidth : s.systemInfo.screenHeight, d = Math.round(c / 2 * s.systemInfo.pixelRatio / s.screenScale);
                                    this.showModelInfo = te.Instance.load3DModel("UI_FightReady_View", h, h.resName, s.fixStageX + 666, 620, 4, 180, d - 250, d + 250, Y.curMapID == Y.mapID_33);
                                }
                                this.updateSkill(o.skill), this.sp_pfinfo.visible = o.baseID != o.unitID, this.sp_testHero.disabled = !1, 
                                this.label_testname.text = o.baseID != o.unitID ? "皮肤试玩" : "英雄试玩", this.label_getInfo.text = s.isWXPlatform ? h.getInfo : h.getInfo2, 
                                this.cacheMsg = s.isWXPlatform ? h.getMsg : h.getMsg2, this.label_startgame.text = "", 
                                -1 == t.count ? (this.label_test.text = "", t.demoEtime > w.Instance.severTime / 1e3 && (this.label_startgame.visible = !0, 
                                this.label_startgame.text = "(体验卡) " + q.GetDateString(t.demoEtime) + " 前可免费试玩！ ")) : t.count > 0 && (this.label_startgame.visible = !0, 
                                this.label_startgame.text = "拥有" + t.count + "次试玩机会! " + (t.demoTodayLimit >= 999 ? "" : "今日还能试玩" + t.demoTodayCount + "/" + t.demoTodayLimit + "次!"));
                                var u = !0;
                                if (-1 != t.count && t.demoTodayCount >= t.demoTodayLimit) this.label_test.text = "拥有" + t.count + "次试玩机会! 今日免费试玩已达上限！", 
                                this.sp_testHero.disabled = !0; else if (o.baseID != o.unitID) {
                                    const e = Z.Instance.getHaveHero(o.baseID);
                                    e && 0 == e.count ? (u = !1, -1 == t.count || t.count > 0 && t.demoTodayCount < t.demoTodayLimit ? (this.label_testname.text = "英雄试玩", 
                                    this.label_test.text = "当前英雄未解锁，需先试玩英雄") : this.label_test.text = "当前皮肤未解锁，可免费试玩1次！（当前英雄未解锁，需先解锁英雄）") : this.label_test.text = "当前皮肤未解锁，可免费试玩1次！";
                                } else this.label_test.text = "当前英雄未解锁，可免费试玩1次！";
                                u && (-1 == t.count || t.count > 0 && t.demoTodayCount < t.demoTodayLimit) ? (this.sp_startgame.visible = !0, 
                                this.sp_testHero.visible = !1) : (this.sp_startgame.visible = !1, this.sp_testHero.visible = !0);
                            }
                        }
                    }
                }
                this.box_pf.visible = i.length > 1, this.list_pf.array = i, this.img_pfbg.height = i.length <= 2 ? 268 : 388, 
                this.sp_pfinfo.y = i.length <= 2 ? 272 : 392;
            } else this.box_pf.visible = !1;
            hm.Instance.selfReady && (this.sp_testHero.visible = !1, this.sp_startgame.visible = !1, 
            this.sp_readytips.visible = !0, this.btn_buyinfo.visible = !1, this.btn_getTps.visible = !1);
        }
        setHeroGetInfo(e, t) {
            if (-1 == t.count && 0 == t.demoEtime) this.btn_getTps.visible = !1, this.btn_buyinfo.visible = !1; else {
                if (this.btn_getTps.visible = this.cacheMsg && null != this.cacheMsg, t.buy && t.buy.length > 0) {
                    this.btn_buyinfo.visible = !0;
                    var i = Z.Instance.getTpyeValue(t.buy[0].id);
                    this.img_monetaryIcon.skin = Z.Instance.getTpyeIcon(t.buy[0].id), this.label_monetaryNum.text = i + "/" + t.buy[0].num, 
                    this.label_monetaryNum.color = i >= t.buy[0].num ? "#ede2d4" : "#f4552d", this.img_buy.disabled = i < t.buy[0].num, 
                    this.caccheSelectInfo = t;
                } else this.btn_buyinfo.visible = !1;
                this.label_jump.visible = s.isWXPlatform ? "" != e.getMsg : "" != e.getMsg2, this.btn_getTps.y = this.btn_buyinfo.visible ? 560 : 627, 
                this.btn_getTps.visible = -1 != t.count && e.getInfo && "" != e.getInfo;
            }
        }
        updateSkill(e) {
            var t = [];
            for (let n = 1; n < e.length; n++) {
                var i = eu.Instance.getSkillInfo(e[n]), s = {
                    skInfo: i,
                    img_icon: {
                        skin: i.skillIcon
                    }
                };
                t.push(s);
            }
            this.list_sk.array = t;
        }
        updateVoip() {
            this.img_voipmic.skin = du.Instance.getMicSkin(), this.img_voipsound.skin = du.Instance.getSpeakerSkin();
        }
        updateRes() {}
        onClickBack() {
            s.isWXPlatform && du.Instance.exitVoIPChat(), w.Instance.GetNetMsgData("c2s_leave_team").Send({
                teamID: s.teamId
            }), hm.Instance.Close(!0);
        }
        onClickStartGame() {
            d.Instance.Send(a.UIFightReady_StartGame);
        }
        onClickGetHero() {
            this.cacheMsg && null != this.cacheMsg && d.Instance.Send(a[this.cacheMsg]);
        }
        onClickBuyHero() {
            this.caccheSelectInfo && w.Instance.GetNetMsgData("c2s_buy_role").Send({
                role_id: this.caccheSelectInfo.id,
                type: this.caccheSelectInfo.buy[0].id
            });
        }
        onClickInvite() {
            this.hideAppNative(), d.Instance.Send(a.UISocial_Open, 3, !0);
        }
        onClickShareInvite() {
            le.Instance.shareInviteGame();
        }
        onClickTalk() {
            this.hideAppNative(), d.Instance.Send(a.UISocial_Open, 4, !0);
        }
        onClickTestHero() {
            var e = this.curHeroID, t = Q.Instance.getBaseID(e), i = Z.Instance.getHaveHero(t);
            i && 0 == i.count && (e = t), s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_get_role_demo").Send({
                role_id: e
            }) : le.Instance.ShowVideoAD(t => {
                1 == t && w.Instance.GetNetMsgData("c2s_get_role_demo").Send({
                    role_id: e
                });
            }, 3);
        }
        onClickTianFu() {
            this.hideAppNative(), d.Instance.Send(a.UITianFu_Open);
        }
        onDungeonListRender(e, t) {
            var i = e.getChildByName("img_icon");
            i.off("click", this, this.onClickDungeon), i.on("click", this, this.onClickDungeon, [ e, !0 ]);
        }
        initDungeon() {
            var e = [], t = Z.Instance.shModelCurLv + 1;
            t > Z.Instance.shModelMaxLv && (t = Z.Instance.shModelMaxLv);
            for (let s = t; s > 0; s--) {
                var i = {
                    lv: s,
                    label_text: {
                        text: s
                    }
                };
                e.push(i);
            }
            this.list_select.array = e, this.box_select.visible = !1, this.box_dungeon.visible = !0, 
            this.updateCurDungeon(t);
        }
        updateCurDungeon(e) {
            this.label_curlv.text = e + "", s.DungeonLv = e;
        }
        onClickDungeon(e) {
            w.Instance.GetNetMsgData("c2s_change_xxlv").Send({
                xxlv: e.dataSource.lv
            }), this.box_select.visible = !1;
        }
        onHeroListRender(e, t) {
            var i = e.getChildByName("img_icon");
            i.off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, !0 ]);
        }
        onHeroPfListRender(e, t) {
            var i = e.getChildByName("img_iconhalf");
            i.off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, !1 ]);
        }
        onClickUse(e, t) {
            var i = e.dataSource;
            if (!hm.Instance.selfReady && hm.Instance.isEnableHero(Q.Instance.getBaseID(i.heroID))) {
                var s = i.heroID;
                if (0 != Z.Instance.getHaveHero(Q.Instance.getBaseID(s)).count && (-1 == i.count || i.count > 0 && i.heroInfo.demoTodayCount < i.heroInfo.demoTodayLimit)) {
                    if (t) {
                        var n = Q.Instance.getUnitSkinInfo(Q.Instance.getBaseID(s));
                        if (null != n && n.length > 0) for (let e = 0; e < n.length; e++) {
                            var o = Z.Instance.getHaveHero(n[e].unitID);
                            null == o || 1 != o.useSkin || -1 != o.count && 1 != o.count || (s = n[e].unitID);
                        }
                    }
                    w.Instance.GetNetMsgData("c2s_change_role").Send({
                        role_id: s
                    });
                } else d.Instance.Send(a.UIFightReady_UpdateHeroList, i.heroID);
            }
        }
        onPlayerListRender(e, t) {
            var i;
            (i = e.getChildByName("img_add")).off("click", this, this.onClickBtn), i.on("click", this, this.onClickBtn, [ e, t ]), 
            (i = e.getChildByName("img_tiren")).off("click", this, this.onClickTiRen), i.on("click", this, this.onClickTiRen, [ e, t ]);
        }
        onClickBtn(e, t) {
            this.hideAppNative(), d.Instance.Send(a.UISocial_Open, 3, !0);
        }
        onClickTiRen(e, t) {
            this.hideAppNative(), d.Instance.Send(a.UIConfirm_Open, 1, 0, "是否将[" + e.dataSource.name + "]踢出队伍！", Laya.Handler.create(this, e => {
                w.Instance.GetNetMsgData("c2s_team_tiren").Send({
                    otherid: e
                });
            }, [ e.dataSource.id ]));
        }
        onSkillListRender(e, t) {
            var i = e.getChildByName("img_icon");
            i.off(Laya.Event.MOUSE_DOWN, this, this.onClickSkillBtn), i.on(Laya.Event.MOUSE_DOWN, this, this.onClickSkillBtn, [ e.dataSource.skInfo, t ]);
        }
        onClickSkillBtn(e, t) {
            d.Instance.Send(a.UISkillTips_Open, e.skillID);
        }
    }
    class Nm extends n.ui_view.v_HeroShow3dUI {
        constructor() {
            super(), this.isOpen = !1, this.curHeroID = 0, this.oldPowerNum = 0, this.teamLeaderID = 0, 
            this.cacheAllLv = 0, this.cacheDungeonID = 0, this.cacheMsg = "", this.sp_back.on(Laya.Event.MOUSE_DOWN, this, this.onClickBack), 
            this.btn_getTps.on(Laya.Event.MOUSE_DOWN, this, this.onClickGetHero), this.img_buy.on(Laya.Event.MOUSE_DOWN, this, this.onClickBuyHero), 
            this.list_sk.array = null, this.list_sk.renderHandler = new Laya.Handler(this, this.onSkillListRender), 
            this.sp_testHero.on(Laya.Event.MOUSE_DOWN, this, this.onClickTestHero), this.list_pf.array = null, 
            this.list_pf.renderHandler = new Laya.Handler(this, this.onHeroPfListRender);
        }
        onClickFreeDiamond() {
            d.Instance.Send(a.UIGetFreeDiamond_Open);
        }
        onClickFreeSp() {
            d.Instance.Send(a.UIGetFreeSP_Open);
        }
        onClickFreeGlod() {
            d.Instance.Send(a.UIGetFreeGlod_Open);
        }
        onEnable() {
            this.caccheSelectInfo = null, this.updateHeroList(Ie.Instance.ShowHeroID);
        }
        onDisable() {
            this.curHeroID = Z.Instance.curHeroID;
        }
        init() {
            q.fixedCurSceneBG(!0);
        }
        updateRes() {
            this.label_coin.text = Z.Instance.gold + "", this.label_diamond.text = Z.Instance.diamond + "", 
            this.label_yb.text = Z.Instance.yb + "";
        }
        updateHeroList(e) {
            this.btn_buyinfo.visible = !1, this.btn_getTps.visible = !1, this.curHeroID = e;
            var t = Ie.Instance;
            for (let e = 0; e < Q.Instance.heroShowList.length; e++) {
                const d = Z.Instance.getHaveHero(Q.Instance.heroShowList[e]);
                if (d) {
                    var i = Q.Instance.getUnitAttribute(d.id);
                    Q.Instance.getBaseID(this.curHeroID);
                    if (i) {
                        var n = ce.Instance.getModel(i.modelID);
                        if (this.curHeroID == d.id) {
                            if (this.setHeroGetInfo(n, d), this.label_curheroname.text = n.aliasName + "  " + n.heroName, 
                            !this.showModelInfo || this.showModelInfo.curShowRes == n.resName && this.showModelInfo.modelData == n || (te.Instance.destroyModelById(this.showModelInfo.instanceId), 
                            this.showModelInfo = null), (null == this.showModelInfo || this.showModelInfo.isDestroy) && te.Instance.checkShowModel("UI_HeroShow3d_View")) {
                                var a = s.systemInfo.screenWidth > s.systemInfo.screenHeight ? s.systemInfo.screenWidth : s.systemInfo.screenHeight, o = Math.round(a / 2 * s.systemInfo.pixelRatio / s.screenScale);
                                this.showModelInfo = te.Instance.load3DModel("UI_HeroShow3d_View", n, n.resName, s.fixStageX + 666, s.fixStageY + 620, 4, 180, o - 250, o + 250, !0);
                            }
                            this.updateSkill(i.skill), this.label_jump.visible = s.isWXPlatform ? "" != n.getMsg : "" != n.getMsg2, 
                            this.label_getInfo.text = s.isWXPlatform ? n.getInfo : n.getInfo2, this.cacheMsg = s.isWXPlatform ? n.getMsg : n.getMsg2, 
                            -1 == d.count || d.count > 0 && d.demoTodayCount < d.demoTodayLimit ? this.sp_testHero.visible = !1 : (this.sp_testHero.disabled = !1, 
                            d.demoTodayCount >= d.demoTodayLimit ? (this.sp_testHero.disabled = !0, this.sp_testHero.visible = !0) : this.sp_testHero.visible = !0);
                            var l = 0, h = [];
                            if (n) {
                                var r = {
                                    heroInfo: d,
                                    heroID: d.id,
                                    count: d.count,
                                    img_pzbg: {
                                        skin: i.baseID != i.unitID ? "event/yx_bg_006.png" : "event/yx_bg_004.png"
                                    },
                                    img_bg1: {
                                        skin: i.baseID != i.unitID ? "9gongge/yx_bg_007.png" : "9gongge/yx_bg_005.png"
                                    },
                                    img_icon: {
                                        skin: n.heroIcon,
                                        disabled: t.selfReady
                                    },
                                    img_iconhalf: {
                                        skin: n.heroLoadPic,
                                        disabled: t.selfReady
                                    },
                                    img_flag: {
                                        visible: !1
                                    },
                                    sp_select: {
                                        visible: this.curHeroID == i.unitID
                                    },
                                    sp_lock: {
                                        visible: 0 == d.count
                                    },
                                    label_name: {
                                        text: n.aliasName
                                    }
                                };
                                h.push(r), r.sp_select.visible && (l = e);
                                var c = [];
                                c = 0 == l ? [ 100, 200, 0 ] : 1 == l ? [ 0, 100, 200 ] : [ 200, 0, 100 ];
                                for (let e = 0; e < h.length; e++) {
                                    const t = h[e];
                                    t.fixX = c[e], 1 == h.length && (t.fixX = 100);
                                }
                                this.list_pf.array = h;
                            }
                        }
                        this.label_heroType.text = Z.Instance.getHreoType(i.classType);
                    }
                }
            }
            this.updateHeroSkinList(this.curHeroID);
        }
        updateHeroSkinList(e) {
            var t = Q.Instance.getUnitSkinInfo(Q.Instance.getBaseID(e));
            if (null != t && t.length > 0) {
                var i = [], n = [];
                n.push(Q.Instance.getBaseID(e));
                for (let e = 0; e < t.length; e++) n.push(t[e].unitID);
                var a = Ie.Instance, o = 0;
                for (let e = 0; e < n.length; e++) {
                    const t = Z.Instance.getHaveHero(n[e]);
                    if (t) {
                        var l = Q.Instance.getUnitAttribute(t.id);
                        Q.Instance.getBaseID(t.id);
                        if (l) {
                            var h = ce.Instance.getModel(l.modelID);
                            if (h) {
                                var r = {
                                    heroInfo: t,
                                    heroID: t.id,
                                    count: t.count,
                                    img_pzbg: {
                                        skin: l.baseID != l.unitID ? "event/yx_bg_006.png" : "event/yx_bg_004.png"
                                    },
                                    img_bg1: {
                                        skin: l.baseID != l.unitID ? "9gongge/yx_bg_007.png" : "9gongge/yx_bg_005.png"
                                    },
                                    img_icon: {
                                        skin: h.heroIcon,
                                        disabled: a.selfReady
                                    },
                                    img_iconhalf: {
                                        skin: h.heroLoadPic,
                                        disabled: a.selfReady
                                    },
                                    img_flag: {
                                        visible: !1
                                    },
                                    sp_select: {
                                        visible: this.curHeroID == l.unitID
                                    },
                                    sp_lock: {
                                        visible: 0 == t.count
                                    },
                                    label_name: {
                                        text: h.aliasName
                                    }
                                };
                                i.push(r), r.sp_select.visible && (o = e);
                            }
                            if (this.curHeroID == t.id) {
                                if (this.setHeroGetInfo(h, t), this.label_curheroname.text = h.aliasName + "  " + h.heroName, 
                                !this.showModelInfo || this.showModelInfo.curShowRes == h.resName && this.showModelInfo.modelData == h || (te.Instance.destroyModelById(this.showModelInfo.instanceId), 
                                this.showModelInfo = null), (null == this.showModelInfo || this.showModelInfo.isDestroy) && te.Instance.checkShowModel("UI_HeroShow3d_View")) {
                                    var c = s.systemInfo.screenWidth > s.systemInfo.screenHeight ? s.systemInfo.screenWidth : s.systemInfo.screenHeight, d = Math.round(c / 2 * s.systemInfo.pixelRatio / s.screenScale);
                                    this.showModelInfo = te.Instance.load3DModel("UI_HeroShow3d_View", h, h.resName, s.fixStageX + 666, 620, 4, 180, d - 250, d + 250, !0);
                                }
                                this.updateSkill(l.skill), this.sp_testHero.disabled = !1, this.label_testname.text = "视频试玩", 
                                this.label_jump.visible = s.isWXPlatform ? "" != h.getMsg : "" != h.getMsg2, this.label_getInfo.text = s.isWXPlatform ? h.getInfo : h.getInfo2, 
                                this.cacheMsg = s.isWXPlatform ? h.getMsg : h.getMsg2;
                                var u = !0;
                                if (-1 != t.count && t.demoTodayCount >= t.demoTodayLimit) this.sp_testHero.disabled = !0; else if (l.baseID != l.unitID) {
                                    const e = Z.Instance.getHaveHero(l.baseID);
                                    e && 0 == e.count && (u = !1, (-1 == t.count || t.count > 0 && t.demoTodayCount < t.demoTodayLimit) && (this.label_testname.text = "视频试玩"));
                                }
                                u && (-1 == t.count || t.count > 0 && t.demoTodayCount < t.demoTodayLimit) ? this.sp_testHero.visible = !1 : this.sp_testHero.visible = !0;
                            }
                            this.label_heroType.text = Z.Instance.getHreoType(l.classType);
                        }
                    }
                }
                var p = [];
                p = 0 == o ? [ 100, 200, 0 ] : 1 == o ? [ 0, 100, 200 ] : [ 200, 0, 100 ];
                for (let e = 0; e < i.length; e++) {
                    i[e].fixX = p[e];
                }
                this.list_pf.array = i;
            }
            Ie.Instance.selfReady && (this.sp_testHero.visible = !1, this.btn_buyinfo.visible = !1, 
            this.btn_getTps.visible = !1);
        }
        setHeroGetInfo(e, t) {
            if (-1 == t.count && 0 == t.demoEtime) this.btn_getTps.visible = !1, this.btn_buyinfo.visible = !1; else {
                if (t.buy && t.buy.length > 0) {
                    this.btn_getTps.visible = !1, this.btn_buyinfo.visible = !0;
                    var i = Z.Instance.getTpyeValue(t.buy[0].id);
                    this.img_monetaryIcon.skin = Z.Instance.getTpyeIcon(t.buy[0].id), this.label_monetaryNum.text = i + "/" + t.buy[0].num, 
                    this.label_monetaryNum.color = i >= t.buy[0].num ? "#ede2d4" : "#f4552d", this.img_buy.disabled = i < t.buy[0].num, 
                    this.caccheSelectInfo = t;
                }
                if (this.label_jump.visible = s.isWXPlatform ? "" != e.getMsg : "" != e.getMsg2, 
                this.btn_getTps.y = this.btn_buyinfo.visible ? 560 : 627, this.btn_getTps.visible = -1 != t.count && e.getInfo && "" != e.getInfo, 
                this.btn_getTps.visible && this.cacheMsg && null != this.cacheMsg && "JUMP3V3" == this.cacheMsg && (this.btn_getTps.visible = s.isWXPlatform, 
                this.btn_buyinfo.visible = !s.isWXPlatform, t.buy && t.buy.length > 0)) {
                    i = Z.Instance.getTpyeValue(t.buy[0].id);
                    this.img_monetaryIcon.skin = Z.Instance.getTpyeIcon(t.buy[0].id), this.label_monetaryNum.text = i + "/" + t.buy[0].num, 
                    this.label_monetaryNum.color = i >= t.buy[0].num ? "#ede2d4" : "#f4552d", this.img_buy.disabled = i < t.buy[0].num, 
                    this.caccheSelectInfo = t;
                }
            }
        }
        updateSkill(e) {
            var t = [];
            for (let n = 1; n < e.length; n++) {
                var i = eu.Instance.getSkillInfo(e[n]), s = {
                    skInfo: i,
                    img_icon: {
                        skin: i.skillIcon
                    }
                };
                100 != i.skillID && t.push(s);
            }
            this.list_sk.array = t;
        }
        onClickBack() {
            Ie.Instance.Close(!0);
        }
        onClickGetHero() {
            this.cacheMsg && null != this.cacheMsg && d.Instance.Send(a[this.cacheMsg]);
        }
        onClickBuyHero() {
            this.caccheSelectInfo && w.Instance.GetNetMsgData("c2s_buy_role").Send({
                role_id: this.caccheSelectInfo.id,
                type: this.caccheSelectInfo.buy[0].id
            });
        }
        onClickTestHero() {
            var e = this.curHeroID, t = Q.Instance.getBaseID(e), i = Z.Instance.getHaveHero(t);
            i && 0 == i.count && (e = t), s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_get_role_demo").Send({
                role_id: e
            }) : le.Instance.ShowVideoAD(t => {
                1 == t && w.Instance.GetNetMsgData("c2s_get_role_demo").Send({
                    role_id: e
                });
            }, 3);
        }
        onSkillListRender(e, t) {
            var i = e.getChildByName("img_icon");
            i.off(Laya.Event.MOUSE_DOWN, this, this.onClickSkillBtn), i.on(Laya.Event.MOUSE_DOWN, this, this.onClickSkillBtn, [ e.dataSource.skInfo, t ]);
        }
        onClickSkillBtn(e, t) {
            d.Instance.Send(a.UISkillTips_Open, e.skillID);
        }
        onHeroPfListRender(e, t) {
            (i = e.getChildByName("btn_select")).off("click", this, this.onClickUse), i.on("click", this, this.onClickUse, [ e, !1 ]);
            var i = e.getChildByName("sp_select");
            e.x = e.dataSource.fixX, i.visible ? (e.scaleX = 1.2, e.scaleY = 1.2, e.zOrder = 1.2) : (e.scaleX = .8, 
            e.scaleY = .8, e.zOrder = 0);
        }
        onClickUse(e, t) {
            var i = e.dataSource;
            Ie.Instance.ShowHeroID = i.heroID, d.Instance.Send(a.UIHeroShow3d_UpdateRes);
        }
    }
    class Mm extends n.ui_view.v_LoadUI {
        constructor() {
            super(), this.index = 0, this.outTime = 0, this.oldFrame = 0, this.time = 0;
        }
        onEnable() {
            this.oldFrame = 0, this.outTime = 0, this.changeTime(), this.box_sh.visible = Y.curMapID == Y.mapID_sh, 
            Laya.timer.loop(300, this, this.changeTime);
        }
        onDisable() {
            this.index = 0, this.time = 0, Laya.timer.clear(this, this.changeTime);
        }
        changeTime() {
            nu.Instance.isReConnect;
            var e = "";
            this.index % 4800 == 0 && (e = El.Instance.getFightLoadTips()), this.index += 300;
            var t = f.Instance.totalFrame > nu.Instance.firstCacheID ? f.Instance.totalFrame : nu.Instance.firstCacheID, i = t > 0 ? Math.floor(f.Instance.currentFrame / t * 100) + "%" : "0%";
            this.index % 900 == 0 && (this.time += this.index <= 8100 ? 10 : 1), this.oldFrame == f.Instance.currentFrame && (this.outTime += 300, 
            this.outTime > 3e4 && fu.Instance.exitGame()), this.oldFrame = f.Instance.currentFrame, 
            this.label_time.text = (this.time >= 99 ? 99 : this.time) + "%", this.img_bar.scaleX = (this.time >= 99 ? 99 : this.time) / 100, 
            t > 0 && f.Instance.currentFrame / t >= .9 && (this.sp_barflag.x = this.img_bar.width * (f.Instance.currentFrame / t), 
            this.img_bar.scaleX = f.Instance.currentFrame / t, this.label_time.text = i), e && (this.label_tips.text = e);
        }
        loadComp() {
            this.index = 0, this.time = 0, Laya.timer.clear(this, this.changeTime), this.img_bar.scaleX = 1, 
            this.label_time.text = "100%";
        }
        updatePlayer(e) {
            for (var t = [], i = 0; i < e.length; i++) {
                var s = e[i], n = s.wxtxurl, a = Q.Instance.getUnitAttribute(s.role);
                if (a) var o = ce.Instance.getModel(a.modelID);
                var l = {
                    img_bg1: {
                        skin: 1 == s.team ? "9gongge/jiazai_bg_002.jpg" : "9gongge/jiazai_bg_005.jpg"
                    },
                    img_bg2: {
                        skin: 1 == s.team ? "fight/zdjm_bg_028.png" : "fight/zdjm_bg_029.png"
                    },
                    img_icon: {
                        skin: n
                    },
                    label_aliasname: {
                        text: o ? o.aliasName : ""
                    },
                    label_heroname: {
                        text: o ? o.heroName : ""
                    },
                    label_playername: {
                        text: s.wxname
                    }
                };
                if (t.push(l), Y.curMapID == Y.mapID_sh && t.length >= 3) break;
            }
            this.list_player.array = t;
        }
    }
    class Am {
        constructor() {
            this.path = "ui_view/v_Login.scene", this.isLoad = !1, this.waitConnect = !1, this.waitLoginOutTime = 0, 
            this.loginWaitTime = 0, this.isLoadComplete = !1, this.isShowGameAD = !1, this.curLoadJson = 0, 
            this.maxLoadJson = 0, this.isOpen = !1, d.Instance.Reg(a.UILoginModel_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UILoginModel_Close, e => {
                this.Close(e[0]);
            }), d.Instance.Reg(a.UIGameMain_OpenComplete, e => {
                this.GameMainOpenComplete();
            }), d.Instance.Reg(a.UILoginModel_waitServer, e => {
                this.WaitServer();
            }), d.Instance.Reg(a.UILoginModel_PlayerLogin, e => {
                this.PlayerLogin(!1);
            }), d.Instance.Reg(a.UILoginModel_GotoGame, e => {
                this.OnGotoGame();
            }), d.Instance.Reg(a.UILoginModel_StartGame, e => {
                this.OnClickStartGame();
            }), d.Instance.Reg(a.UILoginModel_AgreePrivacy, e => {
                this.OnClickAgreePrivacy(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (Am.instance = new Am()), Am.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            if (s.isChangeAccounting) return this.uiControl.showStartBtn(!0), this.uiControl.sp_Login.visible = !0, 
            ie.Instance.addUI(this), this.isOpen = !0, void (s.isLoginOpen = !0);
            ie.Instance.addUI(this), this.uiControl.showStartBtn(!1), B.Instance.isGetLoginGameData ? this.WaitLoginData() : this.BeginLoad(), 
            this.isOpen = !0, s.isLoginOpen = !0;
        }
        Close(e) {
            le.Instance.HideBannerAD(), cp.Instance.HidePanel_L(), cp.Instance.HidePanel_R(), 
            le.Instance.hideCustomAd(), null != this.uiControl && (ie.Instance.removeUI(this), 
            this.uiControl.autoDestroyAtClosed = !0, this.uiControl.close(), this.uiControl.sp_Login.visible = !1, 
            this.uiControl = null, this.isLoad = !1), this.isOpen = !1, s.isLoginOpen = !1, 
            e && (s.isChangeAccounting = !1);
        }
        OnClickAgreePrivacy(e) {
            this.uiControl && (this.uiControl.img_check.visible = e);
        }
        WaitLoginData() {
            return !s.isWXPlatform || s.initServer && 1 != s.open_kp || s.initServer && s.isGs ? (d.Instance.Send(a.Main_Login), 
            void this.BeginLoad()) : !s.initServer || null == B.Instance.adLoginGameData && this.waitLoginOutTime > 0 ? (this.waitLoginOutTime -= 100, 
            void Laya.timer.once(100, this, this.WaitLoginData)) : (d.Instance.Send(a.Main_Login), 
            this.showTips(), void (null != B.Instance.adLoginGameData && B.Instance.adLoginGameData.length > 0 ? (this.gotoGameData = B.Instance.adLoginGameData[Math.floor(10 * Math.random()) % B.Instance.adLoginGameData.length], 
            null != this.gotoGameData && le.Instance.checkShowKP(s.sceneID) ? (this.loginWaitTime = 5, 
            this.uiControl.updateBackAD(this.gotoGameData), this.waitLoginAD(), Laya.timer.loop(1e3, this, this.waitLoginAD), 
            this.BeginLoad()) : this.BeginLoad()) : this.BeginLoad()));
        }
        showTips() {
            var e = s.sceneID - 1e3 + ".";
            if (1 == le.Instance.GetBannerType() ? e += "1" : e += "0", B.Instance.openSceneList && -1 != B.Instance.openSceneList.indexOf(s.sceneID) ? e += "1" : e += "0", 
            B.Instance.localmlkg) {
                var t = E.Instance.GetKey(le.Instance.storagelocalmlkgKey);
                e += null != t && "" != t ? "1" : "0";
            }
            e += s.version > s.cacheServerList.version ? "t" : "v", this.uiControl && (this.uiControl.label_tips.text = "Powered by LayaAir Engine v" + e);
        }
        showGameAD() {
            this.uiControl && !this.isShowGameAD && this.loginWaitTime <= 0 && (this.isShowGameAD = !0, 
            s.isWXPlatform && !le.Instance.checkShowKP(s.sceneID) || (cp.Instance.ShowPanel_L(this.path, this.uiControl), 
            cp.Instance.ShowPanel_R(this.path, this.uiControl)));
        }
        BeginLoad() {
            this.showGameAD(), !s.isWXPlatform && !s.isTTPlatform || le.Instance.isCreateAd || le.Instance.CreateAD(), 
            s.isOppoPlatform || s.isVivoPlatform || s.isDYVivoPlatform ? Laya.timer.once(1e3, this, this.showNativeAd) : Laya.timer.once(1e3, this, () => {
                le.Instance.ShowBannerAD(1, this);
            }), this.maxLoadJson = 0, this.loadConfig(), (s.isWXPlatform || s.isVivoPlatform || s.isOppoPlatform || s.isTTPlatform || s.isKSPlatform) && le.Instance.api.hasloadSubpackage() && (this.maxLoadJson += 1, 
            this.loadSubPack("3dres"), this.maxLoadJson += 1, this.loadSubPack("3dunit"), this.maxLoadJson += 1, 
            this.loadSubPack("bigpic"), this.maxLoadJson += 1, this.loadSubPack("sound"), (s.isTTPlatform || s.isKSPlatform || s.isWXPlatform) && (this.maxLoadJson += 1, 
            this.loadSubPack("res"))), this.OnLoaded();
        }
        showNativeAd() {
            s.isDYVivoPlatform ? (le.Instance.showFloatIcon(1088, 250), le.Instance.api.setShowNativeCallBack(e => {
                console.log("ttad move :" + e), e && this.uiControl && this.uiControl.img_hotTips && (this.uiControl.img_hotTips.visible = !0);
            })) : (le.Instance.ShowNativeBannerAD(1, this.uiControl, 1050, 260, 200, 200, 1), 
            this.uiControl && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_clickAD.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform), 
            this.uiControl.img_hotTips.visible = !0));
        }
        showBanner() {
            this.isOpen && this.uiControl && le.Instance.ShowBannerAD(1, this);
        }
        loadSubPack(e) {
            le.Instance.api.loadSubpackage({
                name: e,
                success: function(t) {
                    console.log(e + "分包加载成功后通过 success 回调", t), Am.Instance.curLoadJson++, Am.Instance.OnLoaded();
                },
                fail: function(t) {
                    console.log(e + "分包加载失败通过 fail 回调,重新加载" + JSON.stringify(t)), Laya.timer.once(500, this, () => {
                        Am.Instance.loadSubPack(e);
                    });
                }
            });
        }
        loadConfig() {
            this.maxLoadJson += 1, ce.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 2, Q.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, Fl.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, El.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, Ul.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, xl.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, Tl.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, be.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, vu.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, ye.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, mp.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, yu.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, uu.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, gu.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            }), this.maxLoadJson += 1, xm.Instance.loadJson(() => {
                this.curLoadJson++, this.OnLoaded();
            });
        }
        OnLoaded() {
            this.maxLoadJson > 0 && this.uiControl.updateBar(this.curLoadJson / this.maxLoadJson, "资源加载中..."), 
            this.isLoadComplete = this.curLoadJson >= this.maxLoadJson, this.isLoadComplete && this.startGame();
        }
        OnGotoGame() {
            null != this.gotoGameData && le.Instance.GotoOtherGame("开屏", this.gotoGameData, 101, e => {
                1 == e && (this.loginWaitTime = 1, this.waitLoginAD());
            }, !0);
        }
        waitLoginAD() {
            this.loginWaitTime--, this.uiControl && this.uiControl.updateBackADTime(this.loginWaitTime), 
            this.loginWaitTime <= 0 && (Laya.timer.clear(this, this.waitLoginAD), this.showGameAD());
        }
        WaitServer() {
            this.waitConnect = !0;
        }
        OnClickStartGame() {
            if (s.isClickLoginBtn = !0, !(s.isOppoGameCenterPlatform || s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform) || s.isApplogined) {
                if ((s.isTopOnPlatform || s.isTapTapPlatform) && le.Instance.AppLogin(), s.isDYVivoPlatform) {
                    var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                    null != e && e.call("initInter");
                }
                this.OnStartGame();
            } else le.Instance.AppLogin();
        }
        OnStartGame() {
            console.log("onClickStartGame IsGetUserInfo" + le.Instance.IsGetUserInfo + s.isLogin), 
            s.isWXPlatform && !le.Instance.IsGetUserInfo && le.Instance.GetWXUserInfo(), !s.isKSPlatform || s.isLogin || le.Instance.IsGetUserInfo || le.Instance.api.getLoginCode((e, t) => {
                le.Instance.GetWXUserInfo();
            }), le.Instance.IsGetUserInfo || s.isTTNMLogin ? (s.isLogin ? (this.OnNextSteup(), 
            w.Instance.GetNetMsgData("c2s_battle_recover").Send({})) : (s.isAppPlatform || s.isOppoGameCenterPlatform || s.isTopOnPlatform || s.isTapTapPlatform ? d.Instance.Send(a.UIGameTipsModel_SetTips, "正在连接,请稍后...", 1500) : d.Instance.Send(a.UIGameTipsModel_SetTips, "正在连接,请稍后..."), 
            this.PlayerLogin(!0)), s.isOppoGameCenterPlatform && le.Instance.sendRoleInfo()) : s.isTTPlatform && s.isClickLoginBtn && !le.Instance.IsGetUserInfo && le.Instance.api.showModal({
                title: "消息",
                content: "开启用户信息权限,游戏体验更佳！",
                showCancel: !0,
                confirmText: "开启",
                success: e => {
                    e.confirm ? le.Instance.api.openSetting() : (le.Instance.IsGetUserInfo = !0, this.OnStartGame());
                }
            });
        }
        GameMainOpenComplete() {
            d.Instance.Send(a.UIGameTipsModel_Close), d.Instance.Send(a.UILoginModel_Close, !1);
        }
        OnNextSteup() {
            d.Instance.Send(a.UIGameTipsModel_SetTips, "正在加载,请稍后..."), Laya.Scene.open("scenes/s_Common.scene", !0, null, Laya.Handler.create(this, e => {
                s.curScene = e, s.curScene.x += s.fixStageX, s.curGameScene = i.HomeScene, w.Instance.GetNetMsgData("c2s_set_chat_state").Send({
                    type: 1
                }), console.log("接收世界聊天"), e.autoDestroyAtClosed = !0, s.fixStageY > 0 && (e.y = s.fixStageY), 
                Am.Instance.checkGetFirsetMsg();
            }));
        }
        checkGetFirsetMsg() {
            Z.Instance.firstMsgData ? Laya.timer.once(100, this, this.checkGetFirsetMsg) : (d.Instance.Send(a.UIGameMain_Open), 
            d.Instance.Send(a.UIVideoTreasure_GetRed));
        }
        startGame() {
            null != this.uiControl && this.uiControl.isOpen && (this.isLoadComplete && this.uiControl.updateBar(1, this.waitConnect ? "等待服务器连接..." : "正在获取服务器列表..."), 
            this.uiControl.isOpen && w.Instance.NetConnect && this.isLoadComplete && (s.isTTPlatform || s.onMiniGame, 
            1) && (d.Instance.Send(a.UIGameTipsModel_Close), this.uiControl.showStartBtn(!0), 
            s.isXiaoMiPlatform || s.isOppoPlatform || s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isOppoGameCenterPlatform || s.isPCPlatform ? null == Laya.LocalStorage.getItem(s.PrivacyPolicyTag) || "" == Laya.LocalStorage.getItem(s.PrivacyPolicyTag) ? (d.Instance.Send(a.UIPrivacyPolicy_Open), 
            s.isXiaoMiPlatform && le.Instance.GetFixedModeSCALE_SHOWALL()) : (le.Instance.AgreePrivacy(), 
            this.CheckAutoLogin()) : this.CheckAutoLogin()));
        }
        CheckAutoLogin() {
            (s.isWXPlatform || s.isQQPlatform) && 2 != s.loadSubpackageSuccess || s.is233Platform && !s.isApplogined ? Laya.timer.once(1e3, this, this.CheckAutoLogin) : this.OnStartGame();
        }
        PlayerLogin(e) {
            this.isLoadComplete && (nu.Instance.waitReConnectCheck = !0, !e && this.uiControl && this.uiControl.isOpen ? (this.startGame(), 
            (s.isTTPlatform || s.isKSPlatform) && le.Instance.api.getLoginCode((e, t) => {
                le.Instance.GetWXUserInfo(), s.isTTNMLogin && (console.error("头条匿名"), w.Instance.GetNetMsgData("c2s_update_wx_data").Send({
                    name: "",
                    txurl: "",
                    sex: 3,
                    client_version: s.version
                }));
            })) : le.Instance.api.getLoginCode((t, i, n) => {
                if (console.log("GetPlayerID " + t), e && d.Instance.Send(a.UIGameTipsModel_SetTips, "正在登录,请稍后...", 1500), 
                i && (s.isOppoPlatform || s.isVivoPlatform || s.isTTPlatform || Laya.Browser.onWeiXin && le.Instance.IsGetUserInfo && !s.isKSPlatform)) w.Instance.GetNetMsgData("c2s_get_openid").Send({
                    jscode: t,
                    platform: q.getPlatfromName(),
                    encryptedData: n ? n.encryptedData : "",
                    iv: n ? n.iv : ""
                }); else {
                    s.loginToken = t;
                    var o = parseInt(s.inviterID + "");
                    isNaN(o) && (o = 0), s.is4399H5Platform && (le.Instance.UserInfo.nickName = s.nick, 
                    le.Instance.UserInfo.avatarUrl = Laya.Browser.window.H5API.getUserAvatar(s.userId), 
                    w.Instance.GetNetMsgData("c2s_update_name").Send({
                        name: le.Instance.UserInfo.nickName ? le.Instance.UserInfo.nickName : s.loginToken,
                        txurl: le.Instance.UserInfo.avatarUrl
                    })), s.is233Platform ? (console.log("ttad Laya 233 bind" + s.oldID + "    " + t), 
                    s.oldID && t && s.oldID != t && w.Instance.GetNetMsgData("c2s_bind").Send({
                        old: s.oldID,
                        new: t
                    }), Laya.timer.once(500, this, () => {
                        console.log("玩家信息5" + s.loginToken + "  " + le.Instance.UserInfo.nickName + "++++" + le.Instance.UserInfo.avatarUrl + "++++3"), 
                        w.Instance.GetNetMsgData("c2s_login").Send({
                            token: s.loginToken,
                            platformID: s.version,
                            channelID: "none",
                            deviceIMEI: "none",
                            inviteID: o,
                            appsid: s.playersid,
                            appuid: s.loginToken
                        }), w.Instance.GetNetMsgData("c2s_update_wx_data").Send({
                            name: "",
                            txurl: "",
                            sex: 3,
                            client_version: s.version
                        });
                    })) : (console.log("玩家信息3" + le.Instance.UserInfo.nickName + "++++" + le.Instance.UserInfo.avatarUrl + "++++3"), 
                    w.Instance.GetNetMsgData("c2s_login").Send({
                        token: s.loginToken,
                        platformID: s.version,
                        channelID: "none",
                        deviceIMEI: "none",
                        inviteID: o,
                        appsid: "",
                        appuid: ""
                    }), s.isOppoGameCenterPlatform || s.isDYVivoPlatform || s.isXiaoMiPlatform || s.isKSPlatform ? (console.log("玩家信息4" + le.Instance.UserInfo.nickName + "++++" + le.Instance.UserInfo.avatarUrl + "++++3"), 
                    w.Instance.GetNetMsgData("c2s_update_wx_data").Send({
                        name: le.Instance.UserInfo.nickName,
                        txurl: le.Instance.UserInfo.avatarUrl,
                        sex: 3,
                        client_version: s.version
                    })) : w.Instance.GetNetMsgData("c2s_update_wx_data").Send({
                        name: "",
                        txurl: "",
                        sex: 3,
                        client_version: s.version
                    }));
                }
            }));
        }
    }
    Am.instance = null;
    class Om extends n.ui_view.v_LoginUI {
        constructor() {
            super(), this.isOpen = !1, q.fixedFullBG(this, [ "back" ]), this.sp_startgame.on(Laya.Event.MOUSE_DOWN, this, this.onClick_StartGame), 
            this.back.on(Laya.Event.MOUSE_DOWN, this, this.onClick_GotoGame), this.img_clickAD.on(Laya.Event.MOUSE_DOWN, this, () => {
                le.Instance.onClickOppoNative();
            }), this.Health_tips.visible = s.isAppPlatform, this.sp_set.on(Laya.Event.MOUSE_DOWN, this, this.onClickSet), 
            this.box_check.visible = s.isXiaoMiPlatform || s.isOppoPlatform || s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isOppoGameCenterPlatform || s.isPCPlatform, 
            this.btn_PrivacyPolicy.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIPrivacyPolicy_Open, !0);
            }), this.btn_check.on(Laya.Event.MOUSE_DOWN, this, () => {
                this.img_check.visible = !this.img_check.visible, this.img_check.visible ? Laya.LocalStorage.setItem(s.PrivacyPolicyTag, s.PrivacyPolicyTag) : Laya.LocalStorage.removeItem(s.PrivacyPolicyTag);
            }), this.img_check.visible = !(null == Laya.LocalStorage.getItem(s.PrivacyPolicyTag) || "" == Laya.LocalStorage.getItem(s.PrivacyPolicyTag)), 
            this.img_Logo.skin = s.is233mlcsjPlatform ? "login/jinru_img_jj.png" : "login/jinru_img_001.png", 
            console.log("  this.img_Logo.skin " + s.is233mlcsjPlatform);
        }
        onClickSet() {
            d.Instance.Send(a.UISet_Open);
        }
        onClick_StartGame() {
            !this.box_check.visible || this.img_check.visible ? s.isChangeAccounting ? d.Instance.Send(a.UILoginModel_Close) : (s.isXiaoMiPlatform && (le.Instance.AgreePrivacy(), 
            Am.Instance.CheckAutoLogin()), console.log(">>click startGame isOpen " + this.isOpen), 
            d.Instance.Send(a.UILoginModel_StartGame), (s.isTapTapPlatform || s.isWcfjlPlatform) && le.Instance.sendClickStartGame(), 
            s.is4399H5Platform && Laya.Browser.window.H5API.roleLogin(0, 0, 1, s.nick, 1, 0)) : d.Instance.Send(a.UIGameTipsModel_SetTips, "同意用户隐私协议后才可进入游戏", 1500);
        }
        onClick_GotoGame() {
            d.Instance.Send(a.UILoginModel_GotoGame);
        }
        onEnable() {
            this.isOpen = !0, this.img_barbg.visible = !1, this.label_bar.visible = !1, this.img_bar.scaleX = 0, 
            this.sp_barflag.x = 0, this.sp_set.visible = s.isXiaoMiPlatform;
        }
        onDisable() {
            this.isOpen = !1;
        }
        updateBackAD(e) {
            this.cacheData = e, null != this.cacheData && (this.back.visible = !0, this.back.skin = e.otherScreenImgUrl);
        }
        updateBackADTime(e) {
            this.label_time.text = "正在努力加载中请耐心等待，" + e + "秒后关闭", e <= 0 && (this.back.visible = !1);
        }
        updateBar(e, t) {
            this.sp_barflag.x = this.img_bar.width * e, this.img_bar.scaleX = e, this.label_bar.text = t;
        }
        showStartBtn(e) {
            this.label_bar.visible = !e, this.img_barbg.visible = !e, this.sp_startgame.visible = e;
        }
    }
    class Em {
        constructor() {
            this.isEvendEnd = !0, this.path = "ui_dialog/d_GetFreeGlod.scene", this.isOpen = !1, 
            this.isLoad = !1, this.cashData = null, d.Instance.Reg(a.UIGetFreeGlod_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGetFreeGlod_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIGetFreeGlod_ClickVideo, e => {
                this.onClickVideo();
            }), w.Instance.RegisterNet(15058, e => {
                this.s2c_ad_res_index(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Em.instance = new Em()), Em.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            if (this.isOpen = !0, this.uiControl.popup(), this.index = 1, w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                type: 2,
                act: 1
            }), s.isOppoPlatform && le.Instance.ShowNativeBannerAD(1, this.uiControl, 217, 636, 900, 113, 1), 
            s.isVivoPlatform && (s.isOnline && le.Instance.ShowBannerAD(1, this), le.Instance.ShowNativeBannerAD(1, this.uiControl, 1093, 178, 88, 88, 2)), 
            s.isHuaweiPlatform) le.Instance.showNativeInterstitialad(); else if (s.is4399Platform || s.isXiaoMiPlatform) {
                if (le.Instance.ShowNativeBannerAD(1, this, 608, 630, 215, 120, 2), s.isXiaoMiPlatform) {
                    let e = !0;
                    s.isXiaoMiPlatform && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                    e = !1), le.Instance.showNativeInterstitialad(e);
                }
            } else s.isDYVivoPlatform && (le.Instance.ShowDYVIVOBannerAD(315, 636, 900, 113), 
            le.Instance.showFloatIcon(1080, 21));
            s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0), s.isWXPlatform && le.Instance.ShowBannerAD(2, this), 
            s.isVivoPlatform && (le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 1153,
                y: 90,
                width: 120,
                height: 120,
                style: I.icon
            } ]), le.Instance.api.showSystemBanner({
                style: v.Center_bottom
            }));
        }
        Close() {
            s.isVivoPlatform && (le.Instance.HideNewNativeAD(I.icon), le.Instance.api.hideSystemBanner()), 
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
        s2c_ad_res_index(e) {
            null != e && 2 == e.type && (this.index = e.index, this.cashData = e, this.isEvendEnd = e.index >= 3, 
            this.uiControl && this.uiControl.update(e), 2 == e.act && null != e.reward && e.reward.length > 0 && d.Instance.Send(a.UIShowPrize_Open, e.reward));
        }
        onClickVideo() {
            !s.isPCPlatform && this.index >= 1 ? le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                    type: 2,
                    act: 2
                });
            }, 14) : w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                type: 2,
                act: 2
            });
        }
    }
    Em.instance = null;
    class Gm {
        constructor() {
            this.isEvendEnd = !0, this.path = "ui_dialog/d_GetFreeDiamond.scene", this.isOpen = !1, 
            this.isLoad = !1, this.cashData = null, d.Instance.Reg(a.UIGetFreeDiamond_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGetFreeDiamond_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIGetFreeDiamond_ClickVideo, e => {
                this.onClickVideo();
            }), w.Instance.RegisterNet(15058, e => {
                this.s2c_ad_res_index(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Gm.instance = new Gm()), Gm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            if (this.isOpen = !0, this.uiControl.popup(), this.index = 1, w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                type: 1,
                act: 1
            }), s.isVivoPlatform && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 1093, 178, 88, 88, 2), 
            s.isOnline && le.Instance.ShowBannerAD(1, this)), s.isXiaoMiPlatform) {
                let e = !0;
                s.isXiaoMiPlatform && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                e = !1), le.Instance.showNativeInterstitialad(e);
            } else s.isHuaweiPlatform ? le.Instance.showNativeInterstitialad() : s.is4399Platform ? le.Instance.ShowNativeBannerAD(1, this, 593, 625, 215, 120, 2) : s.isDYVivoPlatform && (le.Instance.ShowDYVIVOBannerAD(315, 636, 900, 105), 
            le.Instance.showFloatIcon(1080, 21));
            s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0), s.isWXPlatform && le.Instance.ShowBannerAD(2, this), 
            s.isVivoPlatform && (le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 1153,
                y: 90,
                width: 120,
                height: 120,
                style: I.icon
            } ]), le.Instance.api.showSystemBanner({
                style: v.Center_bottom
            }));
        }
        Close() {
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isOpen = !1, this.uiControl && this.uiControl.close(), s.isVivoPlatform && (le.Instance.HideNewNativeAD(I.icon), 
            le.Instance.api.hideSystemBanner());
        }
        s2c_ad_res_index(e) {
            null != e && 1 == e.type && (this.index = e.index, this.cashData = e, this.isEvendEnd = e.index >= 3, 
            this.uiControl && this.uiControl.update(e), 2 == e.act && null != e.reward && e.reward.length > 0 && d.Instance.Send(a.UIShowPrize_Open, e.reward));
        }
        onClickVideo() {
            !s.isPCPlatform && this.index >= 1 ? le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                    type: 1,
                    act: 2
                });
            }, 13) : w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                type: 1,
                act: 2
            });
        }
    }
    Gm.instance = null;
    class Rm {
        constructor() {
            this.isEvendEnd = !0, this.path = "ui_dialog/d_GetFreeSP.scene", this.isOpen = !1, 
            this.isLoad = !1, this.getType = 3, this.cashData = null, d.Instance.Reg(a.UIGetFreeSP_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGetFreeSP_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIGetFreeSP_ClickVideo, e => {
                this.onClickVideo();
            }), w.Instance.RegisterNet(15058, e => {
                this.s2c_ad_res_index(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Rm.instance = new Rm()), Rm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            if (this.isOpen = !0, this.uiControl.popup(), this.index = 1, w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                type: this.getType,
                act: 1
            }), s.isHuaweiPlatform) le.Instance.showNativeInterstitialad(); else if (s.is4399Platform || s.isXiaoMiPlatform) {
                if (le.Instance.ShowNativeBannerAD(1, this, 600, 630, 215, 120, 2), s.isXiaoMiPlatform) {
                    let e = !0;
                    s.isXiaoMiPlatform && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                    e = !1), le.Instance.showNativeInterstitialad(e);
                }
            } else s.isVivoPlatform ? (le.Instance.ShowNativeBannerAD(1, this.uiControl, 1088, 184, 88, 88, 2), 
            le.Instance.ShowBannerAD(1, this)) : s.isDYVivoPlatform && (le.Instance.ShowDYVIVOBannerAD(253, 638, 900, 112), 
            le.Instance.showFloatIcon(1070, 21));
            s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0), s.isWXPlatform && le.Instance.ShowBannerAD(2, this), 
            s.isVivoPlatform && (le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 1153 + s.fixStageX,
                y: 90,
                width: 120,
                height: 120,
                style: I.icon
            } ]), le.Instance.api.showSystemBanner({
                style: v.Center_bottom
            }));
        }
        Close() {
            s.isVivoPlatform && (le.Instance.HideNewNativeAD(I.icon), le.Instance.api.hideSystemBanner()), 
            le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
        s2c_ad_res_index(e) {
            null != e && e.type == this.getType && (this.index = e.index, this.cashData = e, 
            this.uiControl && this.uiControl.update(e), s.isHuaweiPlatform ? le.Instance.showNativeInterstitialad() : s.is4399Platform || s.isXiaoMiPlatform || s.isDYVivoPlatform || 2 == e.act && null != e.reward && e.reward.length > 0 && d.Instance.Send(a.UIShowPrize_Open, e.reward));
        }
        onClickVideo() {
            !s.isPCPlatform && this.index >= 1 ? le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                    type: this.getType,
                    act: 2
                });
            }, 15) : w.Instance.GetNetMsgData("c2s_ad_res_index").Send({
                type: this.getType,
                act: 2
            });
        }
    }
    Rm.instance = null;
    class Bm extends n.ui_view.v_MainUI {
        constructor() {
            super(), this.isOpen = !1, this.dis = 2, this.curTime = 0, this.btn_rank.on(Laya.Event.MOUSE_DOWN, this, this.OnClickRank), 
            this.sp_sevenday.on(Laya.Event.MOUSE_DOWN, this, this.OnClickSevenday), this.sp_Treasure.on(Laya.Event.MOUSE_DOWN, this, this.OnClickCj), 
            this.sp_video.on(Laya.Event.MOUSE_DOWN, this, this.OnClickVideo), this.sp_invite.on(Laya.Event.MOUSE_DOWN, this, this.OnClickInvite), 
            this.btn_pws.on(Laya.Event.MOUSE_DOWN, this, this.OnClickGotogame, [ Y.mapID_33 ]), 
            this.btn_active.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIEventHome_Open);
            }), this.btn_online.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIOnlineReward_Open);
            }), this.btn_gettl.on(Laya.Event.MOUSE_DOWN, this, this.OnClickGettl), this.img_zm.on(Laya.Event.MOUSE_DOWN, this, this.onClickAddDesktop), 
            this.img_ttzm.on(Laya.Event.MOUSE_DOWN, this, this.onClickttAddDesktop), this.sp_moregame.on(Laya.Event.MOUSE_DOWN, this, this.onClickMoreGame), 
            this.sp_tianfu.on(Laya.Event.MOUSE_DOWN, this, this.onClickTianFu), this.btn_xmshop.on(Laya.Event.MOUSE_DOWN, this, this.onClickXMShop), 
            this.btn_friend.on(Laya.Event.MOUSE_DOWN, this, this.onClickFriend), this.btn_event.on(Laya.Event.MOUSE_DOWN, this, this.onClickEvent), 
            this.img_code.on(Laya.Event.MOUSE_DOWN, this, this.onClickCode), this.img_moreGame.on(Laya.Event.MOUSE_DOWN, this, this.showOppoMoreGame), 
            this.img_moreGame1.on(Laya.Event.MOUSE_DOWN, this, this.showOppoMoreGame), this.sp_guanzhu.on(Laya.Event.MOUSE_DOWN, this, this.onClickDouYin), 
            this.sp_wing.on(Laya.Event.MOUSE_DOWN, this, this.onClickWing), this.btn_sesaon.on(Laya.Event.MOUSE_DOWN, this, this.onClickSeason), 
            this.btn_shmodel.on(Laya.Event.MOUSE_DOWN, this, this.OnClickGotogame, [ Y.mapID_sh ]), 
            this.sp_freeskin.on(Laya.Event.MOUSE_DOWN, this, this.onClickFreeSkin), this.sp_freediamond.on(Laya.Event.MOUSE_DOWN, this, this.onClickFreeDiamond), 
            this.sp_freeglod.on(Laya.Event.MOUSE_DOWN, this, this.onClickFreeGlod), this.sp_freesp.on(Laya.Event.MOUSE_DOWN, this, this.onClickFreeSp), 
            this.sp_shreward.on(Laya.Event.MOUSE_DOWN, this, this.onClickSHReward), this.img_cleanAD && this.img_cleanAD.on(Laya.Event.MOUSE_DOWN, this, this.onClickCleanAD), 
            this.img_mobileAD && this.img_mobileAD.on(Laya.Event.MOUSE_DOWN, this, this.onClickMobile), 
            this.img_mobileADClose && this.img_mobileADClose.on(Laya.Event.MOUSE_DOWN, this, this.onClickCleanADClose), 
            this.box_talk && this.box_talk.on(Laya.Event.MOUSE_DOWN, this, this.onClickFriend), 
            this.img_clickAD.on(Laya.Event.MOUSE_DOWN, this, () => {
                le.Instance.onClickOppoNative();
            }), this.img_gonggao.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGonggao_Open);
            }), this.btn_coin.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeGlod_Open);
            }), this.btn_diamond.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeDiamond_Open);
            }), this.btn_yb.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGetFreeSP_Open);
            }), this.btn_5v5 && this.btn_5v5.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIGameMain_StartGame, Y.mapID_33);
            }), this.img_heroicon.on(Laya.Event.MOUSE_DOWN, this, this.onClickHero), this.btn_PrivacyPolicy.on(Laya.Event.MOUSE_DOWN, this, () => {
                d.Instance.Send(a.UIPrivacyPolicy_Open, !0, !1);
            });
        }
        onClickHero() {
            d.Instance.Send(a.UIpersonal_info_Open, s.playerID);
        }
        textScroll() {
            this.label_talkmsg && this.label_talkmsg.maxScrollX > 0 && (this.label_talkmsg.scrollX += this.dis, 
            (this.label_talkmsg.scrollX >= this.label_talkmsg.maxScrollX || this.label_talkmsg.scrollX <= 0) && (this.dis = -this.dis));
        }
        onClickCleanADClose() {
            this.box_mobileAD && (this.box_mobileAD.visible = !1);
        }
        onClickMobile() {
            le.Instance.getUrl();
        }
        onClickCleanAD() {
            d.Instance.Send(a.UICleanAD_Open);
        }
        onClosed() {}
        onEnable() {
            this.img_heroicon.skin = le.Instance.UserInfo.avatarUrl, this.label_playername.text = le.Instance.UserInfo.nickName;
            var e = mp.Instance.GetRankData(Z.Instance.rank);
            this.label_rank.text = e.rankName, this.UpdateData(), this.updateTime(), Laya.timer.loop(1e3, this, this.updateTime), 
            this.box_talk.visible = !s.isKSPlatform, this.img_zm.visible = s.isOppoPlatform || s.isVivoPlatform, 
            this.img_ttzm.visible = s.isTTPlatform, this.sp_moregame.visible = s.isWXPlatform && !s.isGs && 1 == le.Instance.GetBannerType(), 
            this.img_startWX && (this.img_startWX.visible = s.isWXPlatform && le.Instance.checkShowKP(s.sceneID)), 
            this.img_star && (this.img_star.visible = !this.img_startWX || !this.img_startWX.visible), 
            this.btn_5v5 && (this.btn_5v5.visible = !!this.img_startWX && this.img_startWX.visible), 
            this.sp_freeskin.visible = !s.isGs, this.sp_freediamond.visible = !s.isGs, this.sp_freeglod.visible = !s.isGs, 
            this.btn_xmshop.visible = !s.isGs, this.sp_sevenday.visible = !s.isGs, this.sp_freesp.visible = !s.isGs, 
            this.btn_active.visible = !s.isGs, this.btn_online.visible = !s.isGs, this.img_moreGame.visible = s.isOppoPlatform, 
            this.sp_guanzhu.visible = s.isTTPlatform && "Douyin" == s.systemInfo.appName, this.img_moreGame1.visible = s.isOppoGameCenterPlatform, 
            this.img_tel.visible = s.isOppoGameCenterPlatform || s.isDYVivoPlatform, this.btn_PrivacyPolicy.visible = s.is233Platform || s.isPCPlatform || s.isOppoPlatform, 
            this.tex_tel.text = s.isOppoGameCenterPlatform ? "客服QQ:2841395663" : "客服QQ:1515925561", 
            this.img_cleanAD && (this.img_cleanAD.visible = s.isXiaoMiPlatform && s.MobileShop), 
            this.box_mobileAD && (this.box_mobileAD.visible = s.isXiaoMiPlatform && s.MobileShop), 
            this.lab_shP && (this.lab_shP.text = "娱乐赛剩余门票:" + Z.Instance.menpiao), s.isWXPlatform && le.Instance.checkShowKP(s.sceneID) ? (this.btn_shmodel.pos(402, 543), 
            this.btn_shmodel.width = 192, this.btn_shmodel.height = 103, this.btn_pws.pos(592, 506), 
            this.btn_pws.width = 154, this.btn_pws.height = 157, this.btn_5v5.pos(746, 539), 
            this.btn_5v5.width = 196, this.btn_5v5.height = 100) : (this.btn_shmodel.pos(402, 548), 
            this.btn_shmodel.width = 256, this.btn_shmodel.height = 103, this.btn_pws.pos(667, 548), 
            this.btn_pws.width = 266, this.btn_pws.height = 100, this.btn_5v5.pos(934, 549), 
            this.btn_5v5.width = 211, this.btn_5v5.height = 100), s.isXiaoMiPlatform && (this.sp_newevent.y = 228), 
            this.img_code.visible = !s.is4399H5Platform, this.updateSeason(), this.updateOffLineMsg(), 
            s.isVivoPlatform && this.showOppoMoreGame();
        }
        updateSeason() {
            this.label_curSeason.text = Jp.Instance.curSeason ? "S" + Jp.Instance.curSeason.id + "赛季" : "赛季";
        }
        onClickSeason() {
            d.Instance.Send(a.UISeason_Open);
        }
        onClickWing() {
            d.Instance.Send(a.UIWing_Open);
        }
        showOppoMoreGame() {
            (s.isOppoPlatform || s.isVivoPlatform) && le.Instance.ShowGamePortalAd(), s.isOppoGameCenterPlatform && le.Instance.jumpLeisureSubject();
        }
        updateEvent(e) {
            if (this.btn_event.visible = !1, e) {
                for (let i = 0; i < e.list.length; i++) {
                    const n = e.list[i];
                    if (n && 0 == n.state) {
                        !0;
                        var t = yu.Instance.getEventData(n.id);
                        t && t.btnName && "" != t.btnName && this[t.btnName] && (this[t.btnName].visible = !s.isGs, 
                        this[t.btnName].on(Laya.Event.MOUSE_DOWN, this, this.onClickEventSingle, [ t.msgOpen, t.id, !0 ]));
                    }
                }
                this.btn_event.visible = !s.isGs;
            }
        }
        updateOffLineMsg() {
            this.sp_friendred.visible = rm.Instance.offlineMsgID.length > 0 || rm.Instance.newMsgTeam || rm.Instance.newMsgFriend;
        }
        onClickFreeDiamond() {
            d.Instance.Send(a.UIGetFreeDiamond_Open);
        }
        onClickSHReward() {
            d.Instance.Send(a.UIDungeonReward_Open);
        }
        onClickCFKJCard() {
            d.Instance.Send(a.UIEventCFKJ_Open);
        }
        onClickFreeSp() {
            d.Instance.Send(a.UIGetFreeSP_Open);
        }
        onClickFreeGlod() {
            d.Instance.Send(a.UIGetFreeGlod_Open);
        }
        onClickFreeSkin() {
            d.Instance.Send(a.UIGetFreeSkin_Open);
        }
        onClickMoreGame() {
            d.Instance.Send(a.UIMoreGameFull_Open);
        }
        onClickTianFu() {
            d.Instance.Send(a.UITianFu_Open);
        }
        onClickXMShop() {
            d.Instance.Send(a.UIGetFuWen_Open);
        }
        onClickFriend() {
            d.Instance.Send(a.UISocial_Open, 3, !1);
        }
        onClickEvent() {
            d.Instance.Send(a.UIAllHeroShow_Open);
        }
        onClickCode() {
            d.Instance.Send(a.UICode_Open);
        }
        onClickDouYin() {
            le.Instance.api && le.Instance.api.openAwemeUserProfile();
        }
        onClickEventSingle(e, t, i) {
            d.Instance.Send(a[e], !1, t, i);
        }
        UpdateData() {
            this.label_coin.text = Z.Instance.gold + "", this.label_diamond.text = Z.Instance.diamond + "", 
            this.label_yb.text = Z.Instance.yb + "";
        }
        UpdateDesk(e, t) {
            t && e >= t.length && (this.img_ttzm.visible = !1);
        }
        onDisable() {
            Laya.timer.clear(this, this.updateTime);
        }
        updateTime() {
            this.label_time.visible = Ep.Instance.curOnlineMainTime < Ep.Instance.MaxonlineTime, 
            Ep.Instance.curOnlineMainTime < Ep.Instance.MaxonlineTime && (this.label_time.text = q.ChangeHourMinutestr(Ep.Instance.curOnlineMainTime) + (s.OnlineRewardTime % 60 < 10 ? "0" + s.OnlineRewardTime % 60 : s.OnlineRewardTime % 60), 
            s.OnlineRewardTime++, s.OnlineRewardTime % 60 == 0 && Ep.Instance.curOnlineMainTime++, 
            Ep.Instance.curOnlineMainTime >= Ep.Instance.nextGetTime && w.Instance.GetNetMsgData("c2s_active_info_ot").Send({
                id: Ep.Instance.activeId
            }));
        }
        UpdateRank(e) {
            for (var t = [], i = 1; i <= 4; i++) {
                var s = e[i];
                if (null == s) break;
                var n = {
                    img_flag: {
                        visible: i <= 3,
                        skin: 1 == s.rank ? "common/ph_num1.png" : 2 == s.rank ? "common/ph_num2.png" : "common/ph_num3.png"
                    },
                    img_icon: {
                        skin: s.wx_txurl
                    }
                };
                t.push(n);
            }
            this.list_rank.array = t;
        }
        updateRed(e) {
            if (null != e && null != e.point) {
                for (var t = !1, i = [], n = 0; n < e.point.length; n++) {
                    var o = e.point[n], l = null, h = yu.Instance.getEventData(o.id);
                    if (h && h.btnRed && this[h.btnRed]) this[h.btnRed].visible = 1 == o.num && !s.isGs, 
                    1 == o.num && (t = !0, i.push(o.id)); else {
                        switch (o.id) {
                          case 1:
                            l = this.sp_sevendayred;
                            break;

                          case 2:
                            l = this.sp_freeskin;
                            break;

                          case 3:
                            l = this.sp_freeglodred, Em.Instance.isEvendEnd = 1 != o.num;
                            break;

                          case 4:
                            l = this.sp_freediamondred, Gm.Instance.isEvendEnd = 1 != o.num;
                            break;

                          case 5:
                            l = this.sp_xmshopred;
                            break;

                          case 6:
                            l = this.sp_freespred, Rm.Instance.isEvendEnd = 1 != o.num;
                            break;

                          case 7:
                            l = this.sp_shrewardred;
                            break;

                          case 8:
                            l = this.sp_headRed;
                            break;

                          case 8001:
                            l = this.sp_onlineRed;
                            break;

                          case 10001:
                            l = this.sp_invitered;
                        }
                        null != l && (l.visible = 1 == o.num && !s.isGs, l == this.sp_headRed && d.Instance.Send(a.UIpersonal_updateRed, l.visible));
                    }
                }
                if (this.sp_activeRed.visible = t, d.Instance.Send(a.UIEventHome_Red, i), vm.Instance.curWingLv < uu.Instance.maxWingLv) {
                    var r = uu.Instance.getWingLvData(vm.Instance.curWingLv);
                    this.sp_wingred.visible = !!r && Z.Instance.wingSP >= r.sp;
                } else this.sp_wingred.visible = !1;
            }
        }
        OnClickRank() {
            d.Instance.Send(a.UIRank_Open);
        }
        OnClickGotogame(e) {
            d.Instance.Send(a.UIGameMain_StartGame, e);
        }
        onClickAddDesktop() {
            q.oppoInstallShortcut(), this.img_zm.visible = !1;
        }
        onClickttAddDesktop() {
            le.Instance.api.isaddShortcuted = !0;
        }
        OnClickFind() {
            d.Instance.Send(a.UIFindRes_Open);
        }
        OnClickGettl() {
            d.Instance.Send(a.UIGetFoodModel_Open);
        }
        OnClickVideoOnce() {
            d.Instance.Send(a.UIVideoPrize_Open);
        }
        OnClickSevenday() {
            d.Instance.Send(a.UISevenDay_Open, !1);
        }
        OnClickCj() {
            d.Instance.Send(a.UIGetFreeSkin_Open);
        }
        OnClickVideo() {
            d.Instance.Send(a.UIVideoTreasure_Open);
        }
        OnClickInvite() {
            d.Instance.Send(a.UIShare_Open);
        }
        OnClickHero() {}
        setTalkMsg(e, t) {
            this.label_talkname && (this.label_talkname.text = e), -1 != t.indexOf("#") && (t = t.substring(0, t.indexOf("#"))), 
            this.label_talkmsg && (this.label_talkmsg.text = ":" + t);
        }
    }
    class Hm {
        constructor() {}
        static init() {
            var e = Laya.ClassUtils.regClass;
            e("script/UI/UI_AllHeroShow.ts", ve), e("script/UI/UI_Auth_View.ts", _e), e("script/UI/UI_BuyEqTips.ts", Se), 
            e("script/UI/UI_CleanAD.ts", we), e("script/UI/UI_Code.ts", De), e("script/UI/UI_Confirm_View.ts", ke), 
            e("script/UI/UI_ContinueGame.ts", Ce), e("script/UI/UI_DebugInfo.ts", Iu), e("script/UI/UI_DungeonReward.ts", _u), 
            e("script/UI/UI_EventALS.ts", wu), e("script/UI/UI_EventATM.ts", ku), e("script/UI/UI_EventBD.ts", bu), 
            e("script/UI/UI_EventBZSK.ts", xu), e("script/UI/UI_EventCFTT.ts", Uu), e("script/UI/UI_EventDHWJ.ts", Nu), 
            e("script/UI/UI_EventDSGL.ts", Au), e("script/UI/UI_EventHome.ts", Hu), e("script/UI/UI_EventNQCT.ts", Vu), 
            e("script/UI/UI_EventPintu.ts", Wu), e("script/UI/UI_EventTiger.ts", Ku), e("script/UI/UI_EventXRKH_NQ.ts", qu), 
            e("script/UI/UI_EventXRKH_ZY.ts", zu), e("script/UI/UI_EventXSLB.ts", Yu), e("script/UI/UI_EventYGBH.ts", Qu), 
            e("script/UI/UI_EventZY.ts", Zu), e("script/UI/UI_FightEndFail.ts", $u), e("script/UI/UI_FightEndBox.ts", up), 
            e("script/UI/UI_FightInfo.ts", pp), e("script/UI/UI_FightInvite.ts", fp), e("script/UI/UI_FightKillTip.ts", Ip), 
            e("script/UI/UI_FightShop.ts", vp), e("script/UI/UI_FriendAdd.ts", _p), e("script/UI/UI_FriendDel.ts", Sp), 
            e("script/UI/UI_GameExit.ts", wp), e("script/UI/UI_GetFreeDiamond.ts", Dp), e("script/UI/UI_GetFreeGlod.ts", kp), 
            e("script/UI/UI_GetFreeSkin.ts", Cp), e("script/UI/UI_GetFreeSp.ts", bp), e("script/UI/UI_GetFuWen.ts", Pp), 
            e("script/UI/UI_Gonggao_View.ts", xp), e("script/UI/UI_Invitefriends.ts", Up), e("script/UI/UI_ItemTips.ts", Lp), 
            e("script/UI/UI_MatchIng_View.ts", Np), e("script/UI/UI_MobileShop.ts", Mp), e("script/UI/UI_MoreGameFull_View.ts", Ap), 
            e("script/UI/UI_NativeInterstitial_View.ts", Op), e("script/UI/UI_OnlineReward.ts", Gp), 
            e("script/UI/UI_Personal_info.ts", Bp), e("script/UI/UI_PrivacyPolicy_View.ts", Fp), 
            e("script/UI/UI_Rank.ts", jp), e("script/UI/UI_RankPos.ts", Wp), e("script/UI/UI_RankSafeCardFail.ts", Kp), 
            e("script/UI/UI_RankSafeCardWin.ts", qp), e("script/UI/UI_ScrollText_View.ts", Yp), 
            e("script/UI/UI_Season.ts", Zp), e("script/UI/UI_SeasonGet.ts", $p), e("script/UI/UI_Set_View.ts", em), 
            e("script/UI/UI_SevenDay_View.ts", im), e("script/UI/UI_SHModel.ts", sm), e("script/UI/UI_ShowPrize_View.ts", am), 
            e("script/UI/UI_SkillTips.ts", om), e("script/UI/UI_Social.ts", cm), e("script/UI/UI_SuperStart.ts", dm), 
            e("script/UI/UI_TianFu.ts", um), e("script/UI/UI_TianFuTips.ts", mm), e("script/UI/UI_GameTips_View.ts", gm), 
            e("script/UI/UI_VideoToNavigateGame_View.ts", fm), e("script/UI/UI_FightEndWin.ts", Im), 
            e("script/UI/UI_Wing.ts", _m), e("script/UI/UI_XPSkill.ts", Sm), e("script/UI/UI_FightEnd.ts", wm), 
            e("script/UI/UI_FightEndRankShow.ts", Dm), e("script/UI/UI_FightEndSHShow.ts", Cm), 
            e("script/UI/UI_FightMain_View.ts", Um), e("script/UI/UI_FightReady_View.ts", Lm), 
            e("script/UI/UI_HeroShow3d_View.ts", Nm), e("script/UI/UI_Load_View.ts", Mm), e("script/UI/UI_Login_View.ts", Om), 
            e("script/UI/UI_GameMain_View.ts", Bm);
        }
    }
    Hm.width = 1334, Hm.height = 750, Hm.scaleMode = "fixedwidth", Hm.screenMode = "horizontal", 
    Hm.alignV = "middle", Hm.alignH = "center", Hm.startScene = "scenes/s_Login.scene", 
    Hm.sceneRoot = "", Hm.debug = !1, Hm.stat = !1, Hm.physicsDebug = !1, Hm.exportSceneToJson = !0, 
    Hm.init();
    class Fm {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_BuyEqTips.scene", this.isLoad = !1, this.isInit = !1, 
            this.cacheData = [], d.Instance.Reg(a.UIBuyEqTips_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIBuyEqTips_WaitShow, e => {
                this.waitShow(e[0], e[1]);
            }), d.Instance.Reg(a.UIBuyEqTips_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (Fm.instance = new Fm()), Fm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.isOpen || this.uiControl.show(), this.isOpen = !0, this.playShowData(this.curShowData);
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.closeView(), 
            this.uiControl && this.uiControl.close()), this.isInit = !1, Laya.timer.clear(this, this.updateTime);
        }
        waitShow(e, t) {
            nu.Instance.isReConnect || (this.cacheData.push({
                time: 2e3,
                eqName: e,
                attrData: t
            }), this.isInit || (this.isInit = !0, Laya.timer.loop(100, this, this.updateTime), 
            this.updateTime()));
        }
        updateTime() {
            if (null == this.curShowData) {
                if (0 == this.cacheData.length || !fu.Instance.isFighting) return this.cacheData = [], 
                void this.Close();
                this.curShowData = this.cacheData.shift(), this.playShowData(this.curShowData);
            } else this.curShowData.time -= 100, this.curShowData.time <= 0 && (this.curShowData = null);
        }
        playShowData(e) {
            null != e && (this.isOpen && this.uiControl ? (this.uiControl && this.uiControl.closeView(), 
            this.uiControl.init(e.eqName, e.attrData)) : this.Open());
        }
    }
    Fm.instance = null;
    class Vm {
        constructor() {
            this.path = "ui_dialog/d_CleanAD.scene", this.isLoad = !1, this.isOpen = !1, d.Instance.Reg(a.UICleanAD_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UICleanAD_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (Vm.instance = new Vm()), Vm.instance;
        }
        Open(e, t) {
            this.type = e, this.isfirstEnable = t, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.popup();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    Vm.instance = null;
    class jm {
        constructor() {
            this.path = "ui_dialog/d_Code.scene", this.isLoad = !1, d.Instance.Reg(a.UICode_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UICode_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(15062, e => {
                this.s2c_use_dhm(e);
            });
        }
        static get Instance() {
            return null == this.instance && (jm.instance = new jm()), jm.instance;
        }
        s2c_use_dhm(e) {
            1 != e.code && d.Instance.Send(a.UIGameTipsModel_SetTips, "无效的兑换码！", 1e3);
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.uiControl.init();
        }
        Close() {
            this.uiControl && this.uiControl.close();
        }
    }
    jm.instance = null;
    class Wm {
        constructor() {
            this.path = "ui_dialog/d_ContinueGame.scene", this.isLoad = !1, this.isOpen = !1, 
            d.Instance.Reg(a.UIContinueGame_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIContinueGame_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (Wm.instance = new Wm()), Wm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.popup();
        }
        Close() {
            Laya.Browser.window.focus(), this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    Wm.instance = null;
    class Xm {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_DungeonReward.scene", this.isLoad = !1, 
            this.firstOpen = !0, d.Instance.Reg(a.UIDungeonReward_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIDungeonReward_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(12048, e => {
                this.s2c_xx_reward_info(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Xm.instance = new Xm()), Xm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            }))), w.Instance.GetNetMsgData("c2s_xx_reward_info").Send({});
        }
        openUI() {
            this.uiControl.popup(), this.cacheReward && this.uiControl.init(this.cacheReward), 
            d.Instance.Send(a.UIGameMain_HideWxClup), this.isOpen = !0, s.is4399Platform && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 527, 617, 279, 127, 2), 
            le.Instance.ShowBannerAD(1, this)), s.isTapTapPlatform && le.Instance.ShowNativeBannerAD(1, this.uiControl, 388, 619, 558, 127, 2), 
            s.isOppoGameCenterPlatform && le.Instance.ShowNativeBannerAD(1, this.uiControl, 0, 600, 118 + s.fixStageX, 148, 2), 
            s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0), s.isXiaoMiPlatform && le.Instance.showInterXiaomi();
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close(), le.Instance.HideBannerAD(), 
            d.Instance.Send(a.UIGameMain_ShowWxClup));
        }
        s2c_xx_reward_info(e) {
            this.cacheReward = e, this.uiControl && this.uiControl.init(e);
        }
    }
    Xm.instance = null;
    class Km {
        constructor() {
            this.isOpen = !1, this.pathWin = "ui_dialog/d_win.scene", this.pathFail = "ui_dialog/d_fail.scene", 
            this.isLoad = !1, this.waitOpen = !1, this.isWin = !1, d.Instance.Reg(a.UIFightEndWinOrFail_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UIFightEndWinOrFail_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIFightEndWinOrFail_ShowNext, e => {
                this.showNext();
            });
        }
        static get Instance() {
            return null == this.instance && (Km.instance = new Km()), Km.instance;
        }
        Open(e) {
            this.waitOpen = !0, this.isWin = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.isWin ? this.pathWin : this.pathFail, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.waitOpen && (this.uiControl.popup(), this.isOpen = !0, (s.isOppoPlatform || s.isOppoGameCenterPlatform) && s.isOnline, 
            this.uiControl.sp_next.visible = !1, (s.isVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.is4399Platform || s.isHuaweiPlatform) && (this.uiControl.sp_next.y = 620, 
            (s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.is4399Platform || s.isHuaweiPlatform) && le.Instance.api.setShowNativeCallBack(e => {
                e && this.uiControl && this.uiControl.sp_next && (this.uiControl.sp_next.y = 673);
            }), Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 623, 576, 88, 88, 2), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.sp_next.y = 673));
            })), s.isWXPlatform && 1 == le.Instance.GetBannerType() && le.Instance.ShowBannerAD(2, null));
        }
        Close() {
            s.isOppoPlatform && cp.Instance.HidePanel_Box(), le.Instance.HideBannerAD(), this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close(), this.uiControl.destroy(!0)), this.uiControl = null, 
            this.isLoad = !1, this.waitOpen = !1;
        }
        showNext() {
            this.uiControl.sp_next.visible = !0;
        }
    }
    Km.instance = null;
    class qm {
        constructor() {
            this.isOpen = !1, this.path = "ui_view/v_FightEnd.scene", this.isLoad = !1, d.Instance.Reg(a.UIFightEnd_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFightEnd_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIFightEnd_OnVideoShared, e => {
                this.OnVideoShared();
            });
        }
        static get Instance() {
            return null == this.instance && (qm.instance = new qm()), qm.instance;
        }
        OnVideoShared() {
            this.uiControl && this.uiControl.onVideoShared();
        }
        Open() {
            s.isTTPlatform && d.Instance.Send(a.GameRecorder_stop), this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen || ie.Instance.addUI(this), this.isOpen = !0, this.uiControl.updateInfo(), 
            this.uiControl.updateFightInfo(), s.isWXPlatform && !s.isGs && d.Instance.Send(a.UIMoreGameFull_Open), 
            s.isAppPlatform && (s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(2), this.uiControl.img_back.y = 592, 
            (s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.is4399Platform || s.isHuaweiPlatform) && le.Instance.api.setShowNativeCallBack(e => {
                e && this.uiControl && this.uiControl.img_back && (this.uiControl.img_back.y = 664);
            }), Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && (s.is4399Platform || s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 540, 500, 240, 150, 2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(607, 529) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 570, 552, 188, 100, 2), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_back.y = 664));
            })), s.isOppoPlatform && (this.uiControl.img_back.y = 666, this.uiControl.img_back.x = 1120, 
            le.Instance.ShowGameBannerAd()), (s.isOppoGameCenterPlatform || s.isXiaoMiPlatform) && le.Instance.sendRoleInfo(), 
            s.isXiaoMiPlatform && le.Instance.showVideoInterXiaomi(), s.is233mlcsjPlatform && (this.uiControl.img_back.y = 592), 
            s.is233mlcsjPlatform && (le.Instance.showAppInterstitialadCallback = (() => {
                qm.Instance.isOpen && le.Instance.show233Banner();
            }), le.Instance.showAppInterstitialad(60)), s.isVivoPlatform && le.Instance.ShowInter();
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (le.Instance.HideBannerAD(), 
            le.Instance.HideGameBannerAd()), s.is233mlcsjPlatform && le.Instance.hide233Banner(), 
            this.isOpen && (this.isOpen = !1, ie.Instance.removeUI(this), this.uiControl.autoDestroyAtClosed = !0, 
            this.uiControl.close()), this.uiControl = null, this.isLoad = !1, s.teamId > 0 && (w.Instance.GetNetMsgData("c2s_leave_team").Send({
                teamID: s.teamId
            }), s.teamId = 0), ie.Instance.closeAllUI(), Laya.Scene.open("scenes/s_Common.scene", !0, null, Laya.Handler.create(this, e => {
                s.curScene = e, s.curScene.x += s.fixStageX, s.curGameScene = i.HomeScene, s.curLoginFightEndCount++, 
                e.autoDestroyAtClosed = !0, w.Instance.GetNetMsgData("c2s_set_chat_state").Send({
                    type: 1
                }), console.log("接收世界聊天"), s.fixStageY > 0 && (e.y = s.fixStageY), Laya.Resource.destroyUnusedResources(), 
                d.Instance.Send(a.UIGameMain_Open), !s.isWXPlatform || s.isWXPlatform && !s.isGs ? d.Instance.Send(a.UIGameMain_FightEndPopupUI) : d.Instance.Send(a.UIGameMain_StartGame, Y.mapID_sh);
            })), s.isOppoGameCenterPlatform && s.canShowNative && le.Instance.showInterVideo();
        }
    }
    qm.instance = null;
    class zm {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_FightInfo.scene", this.isLoad = !1, d.Instance.Reg(a.UIFightInfo_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFightInfo_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (zm.instance = new zm()), zm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.updateFightInfo();
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close());
        }
    }
    zm.instance = null;
    class Ym {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_FightKillTip.scene", this.isLoad = !1, 
            this.isInit = !1, this.cacheData = [], d.Instance.Reg(a.UIFightKillTip_Open, e => {
                this.waitShow(e[0]);
            }), d.Instance.Reg(a.UIFightKillTip_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (Ym.instance = new Ym()), Ym.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.isOpen || this.uiControl.show(), this.isOpen = !0, this.playShowData(this.curShowData);
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close()), this.isInit = !1, 
            Laya.timer.clear(this, this.updateTime);
        }
        waitShow(e) {
            for (let t = 0; t < e.length; t++) this.cacheData.push({
                time: 3e3,
                data: e[t]
            });
            this.isInit || (this.isInit = !0, Laya.timer.loop(100, this, this.updateTime), this.updateTime());
        }
        updateTime() {
            if (null == this.curShowData) {
                if (0 == this.cacheData.length || !fu.Instance.isFighting) return this.cacheData = [], 
                void this.Close();
                this.curShowData = this.cacheData.shift(), this.playShowData(this.curShowData);
            } else this.curShowData.time -= 100, this.curShowData.time <= 0 && (this.curShowData = null);
        }
        playShowData(e) {
            if (null != e) {
                var t = e.data.data;
                t.enemySound && "" != t.enemySound && !e.data.isSelfTeam ? Ll.Instance.playSound(q.getSoundType(t.enemySound), 1) : t.sound && "" != t.sound && Ll.Instance.playSound(q.getSoundType(t.sound), 1), 
                this.isOpen && this.uiControl ? this.uiControl.updateTips(t.bglv, t.title, e.data.team1, e.data.team1Icon, e.data.team1Name, e.data.team2, e.data.team2Icon, e.data.team2Name) : this.Open();
            }
        }
    }
    Ym.instance = null;
    class Jm {
        constructor() {
            this.path = "ui_dialog/d_FriendAdd.scene", this.isLoad = !1, this.isOpen = !1, d.Instance.Reg(a.UIFriendAdd_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIFriendAdd_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (Jm.instance = new Jm()), Jm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.updateUI(), this.uiControl.popup();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    Jm.instance = null;
    class Qm {
        constructor() {
            this.path = "ui_dialog/d_GameExit.scene", this.isLoad = !1, this.isOpen = !1, d.Instance.Reg(a.UIGameExit_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIGameExit_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (Qm.instance = new Qm()), Qm.instance;
        }
        Open(e, t) {
            this.type = e, this.isfirstEnable = t, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.updateUI(this.type), this.uiControl.popup();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    Qm.instance = null;
    class Zm {
        constructor() {
            this.path = "ui_dialog/d_Gonggao.scene", this.isLoad = !1, this.isOpen = !1, this.isHaveMsg = !1, 
            d.Instance.Reg(a.UIGonggao_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGonggao_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(18007, e => {
                this.s2c_gonggao(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Zm.instance = new Zm()), Zm.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, w.Instance.GetNetMsgData("c2s_gonggao").Send({}), 
            this.uiControl && this.cashMsg && this.uiControl.updateUI(this.cashMsg);
        }
        Close() {
            this.uiControl && this.uiControl.close();
        }
        s2c_gonggao(e) {
            let t = new Date().getTime();
            this.isHaveMsg = 1e3 * e.etime > t, this.cashMsg = e, this.uiControl && this.uiControl.updateUI(e);
        }
    }
    Zm.instance = null;
    var $m = Laya.Scene;
    class eg {
        constructor() {
            this.path = "ui_view/v_Main.scene", this.isLoad = !1, this.isLoadComplete = !1, 
            this.firstOpen = !0, this.isOpen = !1, this.waitRoomId = 0, this.firstPopupMsg = [], 
            this.isInitPopupUI = !1, this.isGetEventInfo = 0, this.fightEndPopupUI = !1, this.newPlayerPopup = !1, 
            this.newPlayerAutoStart = !0, d.Instance.Reg(a.UIGameMain_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGameMain_UpdateRes, e => {
                this.updateRes();
            }), d.Instance.Reg(a.UIGameMain_UpdateRank, e => {
                this.setRankList(e[0]);
            }), d.Instance.Reg(a.UIGameMain_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIGameMain_StartGame, e => {
                this.StartGame(e[0]);
            }), d.Instance.Reg(a.UIGameMain_UpdateOffLineMsg, e => {
                this.UpdateOffLineMsg();
            }), d.Instance.Reg(a.UIGameMain_UpdateDesk, e => {
                this.UpdateDesk(e[0], e[1]);
            }), d.Instance.Reg(a.UIGameMain_Event, e => {
                this.updateEvent(e[0]);
            }), d.Instance.Reg(a.UIGameMain_WaitJoinRoom, e => {
                this.waitJoinRoom(e[0]);
            }), d.Instance.Reg(a.UIGameMain_ShowWxClup, e => {
                this.showWxClup();
            }), d.Instance.Reg(a.UIGameMain_HideWxClup, e => {
                this.hideWxClup();
            }), d.Instance.Reg(a.UIGameMain_FightEndPopupUI, e => {
                this.initFightEndPopupUI();
            }), d.Instance.Reg(a.UIGameMain_UpdateSeason, e => {
                this.updateSeason();
            }), d.Instance.Reg(a.UIGameMain_WorldTalk, e => {
                this.updateWorldMsg(e[0]);
            }), d.Instance.Reg(a.JUMP5V5, e => {
                le.Instance.jump5v5("购买英雄");
            }), w.Instance.RegisterNet(11014, e => {
                this.s2c_red_point(e);
            }), w.Instance.RegisterNet(12019, e => {
                this.s2c_battle_recover(e);
            });
        }
        static get Instance() {
            return null == this.instance && (eg.instance = new eg()), eg.instance;
        }
        Open() {
            if (Z.Instance.isNewPlayerFlag && this.newPlayerAutoStart && !s.isGs || s.isGs && s.isWXPlatform) return this.newPlayerPopup = !0, 
            w.Instance.GetNetMsgData("c2s_mw_info").Send({}), w.Instance.GetNetMsgData("c2s_get_rank").Send({
                type: 1,
                index: 1
            }), w.Instance.GetNetMsgData("c2s_red_point").Send({}), w.Instance.GetNetMsgData("c2s_active_list").Send({}), 
            void te.Instance.loadUnit3DScene(() => {
                this.newPlayerAutoStart = !1, $m.load(this.path, Laya.Handler.create(this, e => {
                    this.isLoadComplete = !0, this.uiControl = e, this.cache_s2c_battle_recover && (this.s2c_battle_recover(this.cache_s2c_battle_recover), 
                    this.cache_s2c_battle_recover = null);
                })), d.Instance.Send(a.UIGameMain_OpenComplete), this.StartGame(Y.mapID_sh);
            });
            w.Instance.GetNetMsgData("c2s_red_point").Send({}), w.Instance.GetNetMsgData("c2s_active_list").Send({}), 
            w.Instance.GetNetMsgData("c2s_pvp_achieve").Send({}), w.Instance.GetNetMsgData("c2s_pvp_history").Send({}), 
            s.playerID && w.Instance.GetNetMsgData("c2s_player_show").Send({
                playerid: s.playerID
            }), w.Instance.GetNetMsgData("c2s_active_info_ot").Send({
                id: Ep.Instance.activeId
            }), (s.isPCPlatform || s.isTTPlatform) && w.Instance.GetNetMsgData("c2s_ad_res_index_forever").Send({
                type: 1,
                act: 1
            }), this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, $m.load(this.path, Laya.Handler.create(this, e => {
                this.isLoadComplete = !0, this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            if ((s.isOppoPlatform || s.isWXPlatform) && du.Instance.exitVoIPChat(), f.isLocalServer = !1, 
            this.isOpen = !0, ie.Instance.addUI(this), this.uiControl.updateRed(this.cacheRedData), 
            this.uiControl.updateEvent(this.cacheEventData), this.uiControl && this.uiControl.UpdateDesk(this.cache_deskIndex, this.cache_deskInfo), 
            this.showWxClup(), this.firstOpen) {
                te.Instance.loadUnit3DScene(null), w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                    type: 1002
                }), this.firstOpen = !1;
                var e = E.Instance.GetKey("GraphicsLV");
                s.GraphicsLv = null == e || "" == e ? t.Nomal : parseInt(e), w.Instance.GetNetMsgData("c2s_mw_info").Send({}), 
                w.Instance.GetNetMsgData("c2s_get_rank").Send({
                    type: 1,
                    index: 1
                }), du.Instance.initConfig();
            } else s.isTTPlatform ? le.Instance.ShowInterstitialAd(0) : s.isXiaoMiPlatform ? le.Instance.showInterXiaomi() : s.isDYVivoPlatform ? le.Instance.showInterVideo() : le.Instance.showInterstitialad(1);
            d.Instance.Send(a.UIGameMain_OpenComplete), this.cache_s2c_battle_recover && (this.s2c_battle_recover(this.cache_s2c_battle_recover), 
            this.cache_s2c_battle_recover = null), Ll.Instance.playBgMusic(Ul.Instance.bgSound_main), 
            s.isOppoPlatform ? (this.uiControl.img_hotTips.visible = !1, this.uiControl.img_clickAD.visible = !1, 
            s.isOnline && (s.isOppoPlatform || s.isOppoGameCenterPlatform), this.uiControl.img_moreGame.visible = s.isOnline, 
            le.Instance.ShowNativeBannerAD("1", this.uiControl, 943, 518, 194, 134, 1)) : s.isVivoPlatform ? (le.Instance.ShowNativeBannerAD("1", this.uiControl, 970, 127, 158, 150, 1), 
            le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_hotTips.visible = !0, 
            this.uiControl.img_clickAD.visible = !1)) : le.Instance.checkShowKP(s.sceneID) && s.maiLiangSwitch && cp.Instance.ShowPanel_Single(this.path, this.uiControl, [ {
                x: 165,
                y: 125,
                s: .8
            }, {
                x: 165,
                y: 378,
                s: .8
            } ]), s.isOppoGameCenterPlatform && (this.uiControl.img_clickAD.visible = s.isOnline && s.canShowNative), 
            this.waitRoomId > 0 && (this.waitJoinRoom(this.waitRoomId), this.waitRoomId = 0), 
            s.isHaveAd || !s.isTTPlatform && !s.isH5Platform || (this.uiControl.img_ttzm.visible = !1, 
            this.uiControl.sp_guanzhu.visible = !1), s.isXiaoMiPlatform && le.Instance.sendRoleInfo(), 
            s.isWXPlatform && !s.maiLiangSwitch && Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.setFree);
        }
        setFree() {
            Laya.timer.once(1e3, this, () => {
                this.firstPopupMsg && this.firstPopupMsg.length <= 0 && Laya.Dialog.manager.numChildren <= 0 && ie.Instance.uiList.length <= 1 ? this.isOpen && !s.maiLiangSwitch && (le.Instance.CustomAdCallBack = (() => {
                    le.Instance.checkShowKP(s.sceneID) && cp.Instance.ShowPanel_Single(this.path, this.uiControl, [ {
                        x: 165,
                        y: 125,
                        s: .8
                    }, {
                        x: 165,
                        y: 378,
                        s: .8
                    } ]);
                }), le.Instance.showCustomAd(3, 4, 165, 125), le.Instance.showCustomAd(4, 5, 165, 378)) : le.Instance.hideCustomAd();
            });
        }
        showWxClup() {
            if (s.isWXPlatform && this.isOpen) {
                var e = le.Instance.api.createGameClubButton();
                e && e.show();
            }
            s.isVivoPlatform && le.Instance.showBoxPortalAd();
        }
        hideWxClup() {
            if (s.isWXPlatform) {
                var e = le.Instance.api.createGameClubButton();
                e && e.hide();
            }
            s.isVivoPlatform && le.Instance.hideBoxPortalAd();
        }
        initPopupUI(e = !1) {
            Z.Instance.isNewPlayerFlag ? this.newPlayerPopup = !0 : (this.isGetEventInfo++, 
            this.isGetEventInfo > 1 && !this.isInitPopupUI && null == this.cache_s2c_battle_recover && !s.isGs && 0 == this.waitRoomId && (this.isInitPopupUI = !0, 
            this.firstPopupMsg = [], this.newPlayerPopup ? this.fightEndPopupUI = !0 : (Zm.Instance.isHaveMsg && this.firstPopupMsg.push({
                openMsg: a.UIGonggao_Open,
                closeMsg: a.UIGonggao_Close
            }), this.initPopuMsg()), this.openPopupUI()));
        }
        initFightEndPopupUI() {
            this.isInitPopupUI = !0, (this.fightEndPopupUI || Z.Instance.isStarSmall2 && !s.isVivoPlatform || s.isVivoPlatform) && (this.fightEndPopupUI = !1, 
            this.initPopuMsg(), this.openPopupUI());
        }
        initPopuMsg() {
            s.isVivoPlatform ? (Gu.Instance.isEventEnd || this.firstPopupMsg.push({
                openMsg: a.UIEventXRKH_ZY_Open,
                closeMsg: a.UIEventXRKH_ZY_Close
            }), Ru.Instance.isEventEnd || this.firstPopupMsg.push({
                openMsg: a.UIEventXRKH_NQ_Open,
                closeMsg: a.UIEventXRKH_NQ_Close
            }), this.firstPopupMsg.push({
                openMsg: a.UISevenDay_Open,
                closeMsg: a.UISevenDay_Close
            }), this.fightEndPopupUI = !0) : (Ou.Instance.isEventEnd || this.firstPopupMsg.push({
                openMsg: a.UIEventXSLB_Open,
                closeMsg: a.UIEventXSLB_Close
            }), Gu.Instance.isEventEnd || this.firstPopupMsg.push({
                openMsg: a.UIEventXRKH_ZY_Open,
                closeMsg: a.UIEventXRKH_ZY_Close
            }), Ru.Instance.isEventEnd || this.firstPopupMsg.push({
                openMsg: a.UIEventXRKH_NQ_Open,
                closeMsg: a.UIEventXRKH_NQ_Close
            }), this.firstPopupMsg.push({
                openMsg: a.UISevenDay_Open,
                closeMsg: a.UISevenDay_Close
            }), s.isTTPlatform && (Pu.Instance.isEventEnd ? this.firstPopupMsg.push({
                openMsg: a.UIInvitefriends_Open,
                closeMsg: a.UIInvitefriends_Close
            }) : this.firstPopupMsg.push({
                openMsg: a.UIEventBZSK_Open,
                closeMsg: a.UIEventBZSK_Close
            })), (s.isPCPlatform || s.isWXPlatform && 1 == le.Instance.GetBannerType()) && (Em.Instance.isEvendEnd ? Gm.Instance.isEvendEnd ? this.firstPopupMsg.push({
                openMsg: a.UIGetFreeSP_Open,
                closeMsg: a.UIGetFreeSP_Close
            }) : this.firstPopupMsg.push({
                openMsg: a.UIGetFreeDiamond_Open,
                closeMsg: a.UIGetFreeDiamond_Close
            }) : this.firstPopupMsg.push({
                openMsg: a.UIGetFreeGlod_Open,
                closeMsg: a.UIGetFreeGlod_Close
            })), s.isWXPlatform && !s.isGs && 1 == le.Instance.GetBannerType() && this.firstPopupMsg.push({
                openMsg: a.UIMoreGameFull_Open,
                closeMsg: a.UIMoreGameFull_Close
            }));
        }
        openPopupUI() {
            this.curPopupData = null, null != this.firstPopupMsg && this.firstPopupMsg.length > 0 ? (this.curPopupData = this.firstPopupMsg.shift(), 
            d.Instance.Send(this.curPopupData.openMsg), this.curPopupData.closeMsg && d.Instance.Reg(this.curPopupData.closeMsg, this.closePopupUI), 
            this.newPlayerPopup && (this.newPlayerPopup = !1)) : w.Instance.GetNetMsgData("c2s_season").Send({});
        }
        closePopupUI() {
            eg.Instance.curPopupData && (d.Instance.UnReg(eg.Instance.curPopupData.closeMsg, eg.Instance.closePopupUI), 
            eg.Instance.openPopupUI());
        }
        Close() {
            this.hideWxClup(), s.isWXPlatform && Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.setFree), 
            (s.isOppoPlatform || s.isVivoPlatform) && le.Instance.HideBannerAD(), this.isOpen && (this.isOpen = !1, 
            ie.Instance.removeUI(this), cp.Instance.HidePanel_Single(), le.Instance.hideCustomAd());
        }
        UpdateDesk(e, t) {
            this.cache_deskIndex = e, this.cache_deskInfo = t, this.uiControl && this.uiControl.UpdateDesk(e, t);
        }
        updateRes() {
            this.uiControl && this.uiControl.UpdateData();
        }
        setRankList(e) {
            this.uiControl && this.uiControl.UpdateRank(e);
        }
        s2c_red_point(e) {
            if (this.cacheRedData = e, this.isOpen && this.uiControl && this.uiControl.updateRed(this.cacheRedData), 
            null != e && null != e.point) for (var t = 0; t < e.point.length; t++) {
                var i = e.point[t];
                switch (i.id) {
                  case 2:
                    d.Instance.Send(a.UIGetFreeSkin_State, 1 != i.num);
                    break;

                  case 3:
                    Em.Instance.isEvendEnd = 1 != i.num;
                    break;

                  case 4:
                    Gm.Instance.isEvendEnd = 1 != i.num;
                    break;

                  case 6:
                    Rm.Instance.isEvendEnd = 1 != i.num;
                }
            }
            this.initPopupUI();
        }
        s2c_battle_recover(e) {
            if (this.isLoadComplete) {
                if (console.log("战场数据请求成功 s2c_battle_recover data.battleid " + (e ? e.battleid : "null")), 
                d.Instance.Send(a.UIGameTipsModel_Close), nu.Instance.waitReConnectCheck = !1, null == e || 0 == e.battleid) return fu.Instance.isFighting && !f.isLocalServer && (fu.Instance.exitGame(), 
                s.isChangeAccounting && d.Instance.Send(a.UILoginModel_Open)), void d.Instance.Send(a.UIFightReady_CheckInfo);
                Y.curMapID = e.mapid, Z.Instance.isNewPlayerFlag = !1, fu.Instance.isFighting ? nu.Instance.isReConnect || (nu.Instance.beginFightIngReConnect(), 
                this.isOpen && this.Close()) : s.curGameScene == i.HomeScene ? (nu.Instance.beginReConnect(e), 
                this.Close()) : fu.Instance.battleResultMsg(fu.Instance.cacheBattleResultSendData);
            } else this.cache_s2c_battle_recover = e;
        }
        StartGame(e) {
            null == e && (e = Y.mapID_33), 0 == s.teamId ? w.Instance.GetNetMsgData("c2s_join_team").Send({
                teamID: 0,
                mapID: e
            }) : w.Instance.GetNetMsgData("c2s_join_team").Send({
                teamID: s.teamId,
                mapID: e
            });
        }
        UpdateOffLineMsg() {
            this.uiControl && this.uiControl.updateOffLineMsg();
        }
        updateEvent(e) {
            this.cacheEventData = e, this.uiControl && this.uiControl.updateEvent(e), this.initPopupUI();
        }
        waitJoinRoom(e) {
            this.waitRoomId = e, this.uiControl && this.isOpen && this.waitRoomId > 0 && (w.Instance.GetNetMsgData("c2s_join_team").Send({
                teamID: this.waitRoomId,
                mapID: 0
            }), this.waitRoomId = 0);
        }
        updateSeason() {
            this.uiControl && this.uiControl.updateSeason();
        }
        updateWorldMsg(e) {
            this.uiControl && this.uiControl.setTalkMsg(e.player.nickname, e.msg);
        }
    }
    eg.instance = null, eg.waitLogin = !1;
    class tg {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_Tip.scene", this.isLoad = !1, this.waitClose = !1, 
            this.isModelShow = !0, this.cacheText = "", d.Instance.Reg(a.UIGameTipsModel_SetTipsNoModel, e => {
                this.isModelShow = !1, e.length > 1 ? this.SetTipsTime(e[0], e[1]) : this.SetTips(e[0]);
            }), d.Instance.Reg(a.UIGameTipsModel_SetTips, e => {
                this.isModelShow = !0, e.length > 1 ? this.SetTipsTime(e[0], e[1]) : this.SetTips(e[0]);
            }), d.Instance.Reg(a.UIGameTipsModel_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (tg.instance = new tg()), tg.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.waitClose ? this.waitClose = !1 : (this.isModelShow ? (this.uiControl.mouseEnabled = !0, 
            this.uiControl.popup()) : (this.uiControl.mouseEnabled = !1, this.uiControl.show()), 
            this.isOpen = !0, this.uiControl.zOrder = 99999, this.uiControl.SetTips(this.cacheText));
        }
        Close() {
            this.isLoad && null == this.uiControl && (this.waitClose = !0), this.isOpen = !1, 
            this.uiControl && this.uiControl.close();
        }
        SetTips(e) {
            this.cacheText = e, this.Open(), Laya.timer.clearAll(this);
        }
        SetTipsTime(e, t) {
            this.cacheText = e, this.Open(), this.uiControl && this.uiControl.SetTips(this.cacheText), 
            Laya.timer.once(t, this, () => {
                this.Close();
            });
        }
    }
    tg.instance = null;
    class ig {
        constructor() {
            this.path = "ui_dialog/d_GetFreeSkin.scene", this.isOpen = !1, this.isLoad = !1, 
            this.isEventEnd = !0, this.cacheReward = null, this.spaceTime = 0, this.spaceBase = 50, 
            this.spaceIndex = 1, this.isPlaying = !1, this.allSpaceIndex = 0, this.stopIndex = 0, 
            this.waitShowReward = !1, this.forceJumpAd = !1, d.Instance.Reg(a.UIGetFreeSkin_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGetFreeSkin_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIGetFreeSkin_State, e => {
                this.setEventState(e[0]);
            }), d.Instance.Reg(a.UIGetFreeSkin_ClickFree, e => {
                this.onClickFree();
            }), d.Instance.Reg(a.UIGetFreeSkin_ClickVideo, e => {
                this.onClickVideo();
            }), d.Instance.Reg(a.UIGetFreeSkin_ClickQuan, e => {
                this.onClickQuan();
            }), d.Instance.Reg(a.UIGetFreeSkin_Updata, e => {
                this.onUpdata(e[0]);
            }), d.Instance.Reg(a.UIGetFreeSkin_Common, e => {
                this.onClickCommon(e[0]);
            }), w.Instance.RegisterNet(15008, e => {
                this.s2c_wheel_info(e);
            }), w.Instance.RegisterNet(15010, e => {
                this.s2c_wheel_get(e);
            }), d.Instance.Reg(a.UIEventForceAD, e => {
                this.forceShowNative(e[0]);
            });
        }
        static get Instance() {
            return null == this.instance && (ig.instance = new ig()), ig.instance;
        }
        Open() {
            this.isEventEnd || (this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            }))));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.popup(), w.Instance.GetNetMsgData("c2s_wheel_info").Send({}), 
            w.Instance.GetNetMsgData("c2s_yxdq_cost").Send({
                type: 2,
                act: 1
            }), s.isOppoPlatform && (this.forceJumpAd ? (this.uiControl.btn_close.x = 1168, 
            this.uiControl.btn_close.visible = !1, Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && (this.uiControl.btn_close.visible = !0), s.isOnline && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1154, 120, 88, 88, 1), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.btn_close.x = 1100);
            })) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 217, 670, 900, 80, 1)), 
            (s.isTopOnPlatform || s.isTapTapPlatform || s.is4399Platform) && le.Instance.ShowNativeBannerAD(1, this.uiControl, 227, 666, 900, 84, 1), 
            s.isHuaweiPlatform ? le.Instance.showNativeInterstitialad() : (s.isOppoGameCenterPlatform || s.isVivoPlatform) && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 1131, 52, 88, 88, 1), 
            s.isOppoGameCenterPlatform && (s.isForceInter = !0)), s.isDYVivoPlatform && (le.Instance.ShowDYVIVOBannerAD(274, 656, 900, 94), 
            le.Instance.showFloatIcon(1093, 19)), s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0);
        }
        onUpdata(e) {
            this.uiControl.label_num.text = "x" + e[0].num;
        }
        forceShowNative(e) {
            s.isOppoPlatform && "freeSkin" == e && (this.forceJumpAd = !0);
        }
        Close() {
            this.isPlaying || (s.isOppoGameCenterPlatform && s.canShowNative && .6 <= Math.random() && le.Instance.getRandInter() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (le.Instance.setRandInter(), 
            le.Instance.onClickOppoNative()), s.isOppoPlatform && s.isOnline && this.forceJumpAd && le.Instance.getAderrorrate() && le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && le.Instance.onClickOppoNative(), 
            this.forceJumpAd = !1, le.Instance.HideBannerAD(), w.Instance.GetNetMsgData("c2s_red_point").Send({}), 
            this.isOpen = !1, this.uiControl && this.uiControl.close());
        }
        s2c_wheel_info(e) {
            null != e && this.uiControl && this.uiControl.update(e);
        }
        s2c_wheel_get(e) {
            this.isPlaying || (e.index > 8 && (e.index = 8), this.spaceIndex = 1, this.stopIndex = 8 + e.index, 
            this.allSpaceIndex = this.spaceIndex, this.isPlaying = !0, Laya.timer.frameLoop(1, this, this.moveAnim));
        }
        setEventState(e) {
            this.isEventEnd = e;
        }
        moveAnim() {
            this.uiControl && this.uiControl.updateSelect(this.spaceIndex), this.spaceTime -= Laya.timer.delta, 
            this.spaceTime <= 0 && (this.allSpaceIndex == this.stopIndex && (this.spaceTime = 0, 
            this.allSpaceIndex = 0, this.stopIndex = 0, this.waitShowReward = !1, Laya.timer.clear(this, this.moveAnim), 
            this.isPlaying = !1, w.Instance.GetNetMsgData("c2s_wheel_info").Send({}), d.Instance.Send(a.UIShowPrize_Open, this.cacheReward), 
            this.cacheReward = null), this.spaceTime = this.spaceBase, this.spaceIndex++, this.allSpaceIndex++, 
            this.spaceIndex > 8 && (this.spaceIndex = 1));
        }
        onClickFree() {
            this.isPlaying || (this.waitShowReward = !0, w.Instance.GetNetMsgData("c2s_wheel_get").Send({
                type: 1
            }));
        }
        onClickCommon(e) {
            1 == e ? this.isPlaying || (this.waitShowReward = !0, w.Instance.GetNetMsgData("c2s_wheel_get").Send({}), 
            w.Instance.GetNetMsgData("c2s_yxdq_cost").Send({
                type: 2,
                act: 1
            })) : (d.Instance.Send(a.UIGetFreeSP_Open), d.Instance.Send(a.UIGameTipsModel_SetTips, "资源不足", 1e3));
        }
        onClickVideo() {
            this.isPlaying || (s.isPCPlatform ? (this.waitShowReward = !0, w.Instance.GetNetMsgData("c2s_wheel_get").Send({})) : le.Instance.ShowVideoAD(e => {
                1 == e && (this.waitShowReward = !0, w.Instance.GetNetMsgData("c2s_wheel_get").Send({}));
            }, 12));
        }
        onClickQuan() {
            w.Instance.GetNetMsgData("c2s_yxdq_cost").Send({
                type: 2,
                act: 2
            });
        }
    }
    ig.instance = null;
    class sg {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_GetFuWen.scene", this.isLoad = !1, d.Instance.Reg(a.UIGetFuWen_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGameMain_UpdateRes, e => {
                this.updateRes();
            }), d.Instance.Reg(a.UIGetFuWen_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(16006, e => {
                this.s2c_mw_shop_info(e);
            }), w.Instance.RegisterNet(16008, e => {
                this.s2c_mw_shop_get(e);
            });
        }
        static get Instance() {
            return null == this.instance && (sg.instance = new sg()), sg.instance;
        }
        Open() {
            w.Instance.GetNetMsgData("c2s_mw_shop_info").Send({}), this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            if (this.uiControl.popup(), this.isOpen = !0, this.uiControl.init(), this.uiControl.updateData(this.caccheData), 
            this.uiControl.updateRes(), (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (s.isDYVivoPlatform ? le.Instance.showFloatIcon(112, 74) : s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 5, 68, 246, 154, 1) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 5, 135, 250, 130, 1), 
            le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_clickAD.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform))), 
            d.Instance.Send(a.UIGameMain_HideWxClup), s.isXiaoMiPlatform) {
                let e = !0;
                s.isXiaoMiPlatform && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                e = !1), le.Instance.showNativeInterstitialad(e);
            }
            s.isHuaweiPlatform && le.Instance.showNativeInterstitialad(), s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(5);
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close(), w.Instance.GetNetMsgData("c2s_red_point").Send({})), 
            d.Instance.Send(a.UIGameMain_ShowWxClup), s.isDYVivoPlatform && le.Instance.showInterVideo();
        }
        s2c_mw_shop_info(e) {
            this.caccheData = e, this.uiControl && this.uiControl.updateData(e);
        }
        s2c_mw_shop_get(e) {
            null != e && null != e.reward && e.reward.length > 0 && (this.uiControl && this.uiControl.anim_bg.stop(), 
            this.uiControl && this.uiControl.anim_open.play(0, !1), Laya.timer.once(600, this, () => {
                this.uiControl && this.uiControl.anim_bg.play(0, !0), d.Instance.Send(a.UIShowPrize_Open, e.reward);
            })), w.Instance.GetNetMsgData("c2s_mw_shop_info").Send({});
        }
        updateRes() {
            this.isOpen && this.uiControl && this.uiControl.updateRes();
        }
    }
    sg.instance = null;
    class ng {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_ItemTips.scene", this.isLoad = !1, d.Instance.Reg(a.UIItemTips_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UIItemTips_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (ng.instance = new ng()), ng.instance;
        }
        Open(e) {
            this.showItemId = e, this.isOpen = !0, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            }))), Laya.stage.on(Laya.Event.MOUSE_UP, this, this.Close);
        }
        openUI() {
            this.isOpen && (this.uiControl.show(), this.uiControl.showTips(this.showItemId), 
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.Close));
        }
        Close() {
            Laya.stage.off(Laya.Event.MOUSE_UP, this, this.Close), this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
    }
    ng.instance = null;
    class ag {
        constructor() {
            this.path = "ui_view/v_Load.scene", this.isLoad = !1, this.firstOpen = !0, d.Instance.Reg(a.UILoad_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UILoad_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UILoad_Bar, e => {
                this.UpdateBar(e[0]);
            }), d.Instance.Reg(a.UILoad_Tips, e => {
                this.UpdateTips(e[0]);
            }), d.Instance.Reg(a.UILoad_Next, e => {
                this.StartFight();
            });
        }
        static get Instance() {
            return null == this.instance && (ag.instance = new ag()), ag.instance;
        }
        Open(e) {
            this.cacheData = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1007
            }), this.firstOpen = !1), ie.Instance.addUI(this), this.uiControl.zOrder = 100, 
            this.cacheData && this.uiControl.updatePlayer(this.cacheData);
        }
        Close() {
            this.uiControl && this.uiControl.loadComp(), this.cacheData = null, Laya.timer.once(500, this, () => {
                ie.Instance.removeUI(this);
            });
        }
        UpdateBar(e) {}
        UpdateTips(e) {}
        StartFight() {}
    }
    ag.instance = null;
    class og {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_MatchIng.scene", this.isLoad = !1, this.firstOpen = !0, 
            this.waitClose = !1, this.cacheTime = 0, this.cachePlayers = [], d.Instance.Reg(a.UIMatchIngModel_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIMatchIngModel_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(12038, e => {
                this.s2c_match_info(e);
            });
        }
        static get Instance() {
            return null == this.instance && (og.instance = new og()), og.instance;
        }
        Open() {
            this.waitClose = !1, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.waitClose || this.openUI();
            })));
        }
        openUI() {
            this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1006
            }), this.firstOpen = !1), this.uiControl.popup(), this.isOpen = !0, this.cacheTime = 1, 
            this.uiControl.updateTime(this.cacheTime), this.uiControl.updatePlayer(this.cachePlayers), 
            Laya.timer.loop(1e3, this, this.updateTime), (s.isOppoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.is4399Platform) && le.Instance.ShowNativeBannerAD(1, this.uiControl, 217, 670, 900, 80, 1), 
            s.isOppoGameCenterPlatform && le.Instance.showAppBanner(), s.isVivoPlatform && s.isOnline && le.Instance.ShowBannerAD(1, this), 
            s.isDYVivoPlatform && le.Instance.ShowDYVIVOBannerAD(315, 636, 900, 113), s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0), 
            s.is233Platform && le.Instance.show233Banner();
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            s.isOppoGameCenterPlatform && le.Instance.hideAppBanner(), s.is233Platform && le.Instance.hide233Banner(), 
            this.waitClose = !0, this.isOpen && (this.isOpen = !1, this.cachePlayers = [], this.uiControl && this.uiControl.close(), 
            Laya.timer.clear(this, this.updateTime));
        }
        s2c_match_info(e) {
            this.cachePlayers = e.player, this.isOpen && this.uiControl && this.uiControl.updatePlayer(e.player);
        }
        updateTime() {
            this.cacheTime++, this.uiControl.updateTime(this.cacheTime);
        }
    }
    og.instance = null;
    class lg {
        constructor() {
            this.path = "ui_dialog/d_MobileShop.scene", this.isLoad = !1, this.isOpen = !1, 
            d.Instance.Reg(a.UIMobileShop_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIMobileShop_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (lg.instance = new lg()), lg.instance;
        }
        Open(e, t) {
            this.type = e, this.isfirstEnable = t, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, this.uiControl.popup();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close();
        }
    }
    lg.instance = null;
    class hg {
        constructor() {
            this.path = "ui_dialog/d_MoreGameFull.scene", this.isLoad = !1, this.isOpen = !1, 
            this.startIndex = 0, this.loginWaitTime = 0, d.Instance.Reg(a.UIMoreGameFull_Opened, e => {
                this.opened(e[0]);
            }), d.Instance.Reg(a.UIMoreGameFull_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UIMoreGameFull_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (hg.instance = new hg()), hg.instance;
        }
        Open(e) {
            this.closeCall = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            s.isHaveAd && 1 == le.Instance.GetBannerType() && (d.Instance.Send(a.UIGameMain_HideWxClup), 
            le.Instance.HideBannerAD(), s.maiLiangSwitch ? (this.isOpen = !0, this.uiControl.popup(), 
            this.startIndex = 0, this.loginWaitTime = 4, this.uiControl.initUI(), this.uiControl.SetGameList(), 
            this.WaitADData(), s.isWXPlatform && this.uiControl.randomGame(), Laya.timer.loop(1e3, this, this.WaitADData), 
            Laya.timer.loop(2e3, this, this.MoveGameList)) : (le.Instance.CustomAdCallBack = (() => {
                this.isOpen = !0, this.uiControl.popup(), this.startIndex = 0, this.loginWaitTime = 4, 
                this.uiControl.initUI(), this.uiControl.SetGameList(), this.WaitADData(), s.isWXPlatform && this.uiControl.randomGame(), 
                Laya.timer.loop(1e3, this, this.WaitADData), Laya.timer.loop(2e3, this, this.MoveGameList);
            }), le.Instance.showCustomAd(2, 3, .3 * s.systemInfo.windowWidth, .25 * s.systemInfo.windowHeight)));
        }
        opened(e = !1) {
            s.isHaveAd && (this.isOpen = !0, this.uiControl.popup(), this.uiControl.list_gamelist.visible = e, 
            this.uiControl.label_time.visible = e, this.uiControl.img_continue.visible = e, 
            this.uiControl.img_random.visible = e, this.uiControl.label_close.visible = e, e ? (this.uiControl.label_close.visible = !1, 
            this.uiControl.img_bg.off(Laya.Event.CLICK, this, this.Close), Laya.timer.clear(this, () => {
                this.uiControl.label_close.visible = !0, this.uiControl.img_bg.on(Laya.Event.CLICK, this, this.Close);
            })) : Laya.timer.once(3e3, this, () => {
                this.uiControl.label_close.visible = !0, this.uiControl.img_bg.on(Laya.Event.CLICK, this, this.Close);
            }));
        }
        WaitADData() {
            this.loginWaitTime--, this.loginWaitTime <= 0 && Laya.timer.clear(this, this.WaitADData), 
            this.uiControl && this.uiControl.WaitADData(this.loginWaitTime);
        }
        MoveGameList() {
            this.uiControl && this.uiControl.MoveGameList();
        }
        Close() {
            this.isOpen = !1, this.uiControl && this.uiControl.close(), Laya.timer.clear(this, this.MoveGameList), 
            this.closeCall && this.closeCall(), this.closeCall = null, le.Instance.hideCenterCustomAd(), 
            this.uiControl.img_bg.off(Laya.Event.CLICK, this, this.Close);
        }
    }
    hg.instance = null;
    class rg {
        constructor() {
            this.pr_inter = 0, this.path = "ui_dialog/d_NativeInterstitial.scene", this.isLoad = !1, 
            this.isOpen = !1, this.ispreOpen = !1, this.width = 0, this.istaolu = !1, d.Instance.Reg(a.UINativeInterstitial_Open, e => {
                this.Open(e[0], e[1], e[2], e[3]);
            }), d.Instance.Reg(a.UINativeInterstitial_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UINativeInterstitial_Ok, e => {
                this.onClick_OK();
            });
        }
        static get Instance() {
            return null == this.instance && (rg.instance = new rg()), rg.instance;
        }
        Open(e, t = !1, i = 0, n = !1) {
            if (!this.ispreOpen) {
                if (this.ispreOpen = !0, this.width = e, this.istaolu = t, this.pr_inter = i, console.log("ttad  open istaolu" + this.istaolu + "isover" + n), 
                null != le.Instance.api) {
                    var a = null;
                    if (s.isOppoGameCenterPlatform) {
                        if (!B.Instance.OppoADctr.isaggreation || Number(B.Instance.OppoADctr.isaggreation) <= 0) return;
                        n && (console.log("ttad over1"), a = le.Instance.api.GetNativeOverAd()), null == a && (a = le.Instance.api.GetNativeBanner(), 
                        console.log("ttad over2")), null == a && (console.log("ttad over3"), a = le.Instance.api.GetNativeInterstitialAd());
                    } else a = le.Instance.api.GetNativeInterstitialAd();
                    if (null != a) this.curNativeData = a; else if (null == this.curNativeData) return console.log(">>>>当前没有原生插屏广告"), 
                    console.log("ttad over4"), s.isVivoPlatform && le.Instance.ShowInterstitialAd(0), 
                    s.isOppoGameCenterPlatform && le.Instance.showInterstitialad(2), !1;
                }
                this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                    this.uiControl = e, this.openUI();
                })));
            }
        }
        openUI() {
            null != this.curNativeData && (this.isOpen = !0, console.log("reportAdShow3:", this.curNativeData.data.adId), 
            this.curNativeData.nativeAd.reportAdShow({
                adId: this.curNativeData.data.adId
            }), this.uiControl && (this.uiControl.sp_bg.x = .45 == this.pr_inter ? 300 : 366), 
            this.uiControl.zOrder = 99999, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
            this.uiControl.updateData(this.curNativeData.data.title, this.curNativeData.data.imgUrlList[0], this.width), 
            this.uiControl.popup());
        }
        Close() {
            if (this.ispreOpen = !1, this.isOpen = !1, this.uiControl && this.uiControl.close(), 
            console.log("ttad  close istaolu" + this.istaolu + "  " + le.Instance.getRandInter()), 
            s.isOppoGameCenterPlatform && this.istaolu && le.Instance.getRandInter()) {
                let e = this.pr_inter >= Math.random();
                console.log("ttad  close istaolu" + e), e && (le.Instance.setRandInter(), console.log("原生广告点击 " + this.curNativeData.data.adId), 
                this.curNativeData.nativeAd.reportAdClick({
                    adId: this.curNativeData.data.adId
                }));
            }
            this.istaolu = !1, this.pr_inter = 0, this.curNativeData && (this.curNativeData.nativeAd.load(), 
            console.log("ttad  nativeAd.load 3"));
        }
        onClick_OK() {
            null != this.curNativeData && (console.log("原生广告点击 " + this.curNativeData.data.adId), 
            this.curNativeData.nativeAd.reportAdClick({
                adId: this.curNativeData.data.adId
            })), this.Close();
        }
    }
    rg.instance = null;
    class cg {
        constructor() {
            this.path = "ui_dialog/d_RankPos.scene", this.isLoad = !1, this.selectPosID = 0, 
            this.isShowPop = !1, d.Instance.Reg(a.UIRankPos_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIRankPos_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIRankPos_Save, e => {
                this.savePos();
            }), d.Instance.Reg(a.UIRankPos_Pop, e => {
                this.switchPop();
            }), d.Instance.Reg(a.UIRankPos_Select, e => {
                this.selectPos(e[0]);
            }), w.Instance.RegisterNet(11009, e => {
                this.s2c_update_shen_shi(e);
            });
        }
        static get Instance() {
            return null == this.instance && (cg.instance = new cg()), cg.instance;
        }
        s2c_update_shen_shi(e) {
            d.Instance.Send(a.UIRank_GetRankInfo);
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.selectPosID = Z.Instance.cityID, this.uiControl.updateList(mp.Instance.provinceConfig), 
            this.uiControl.updateView(mp.Instance.getProvinceByID(Z.Instance.cityID), this.isShowPop), 
            this.uiControl.popup(), this.uiControl.omDialogOpen();
        }
        Close() {
            this.uiControl && this.uiControl.close();
        }
        switchPop() {
            this.isShowPop = !this.isShowPop, this.uiControl.updateView(mp.Instance.getProvinceByID(this.selectPosID), this.isShowPop);
        }
        savePos() {
            if (s.isPCPlatform) {
                if (Z.Instance.cityID != this.selectPosID) {
                    var e = mp.Instance.getProvinceByID(this.selectPosID);
                    null != e && w.Instance.GetNetMsgData("c2s_update_shen_shi").Send({
                        shen: e.bigPID,
                        shi: e.pID
                    });
                }
                this.Close();
            } else le.Instance.ShowVideoAD(e => {
                if (1 == e) {
                    if (Z.Instance.cityID != this.selectPosID) {
                        var t = mp.Instance.getProvinceByID(this.selectPosID);
                        null != t && w.Instance.GetNetMsgData("c2s_update_shen_shi").Send({
                            shen: t.bigPID,
                            shi: t.pID
                        });
                    }
                    this.Close();
                }
            }, 4);
        }
        selectPos(e) {
            this.selectPosID = e, this.isShowPop = !this.isShowPop, this.uiControl && this.uiControl.updateView(mp.Instance.getProvinceByID(this.selectPosID), this.isShowPop);
        }
    }
    cg.instance = null;
    class dg {
        constructor() {
            this.isOpen = !1, this.pathWin = "ui_dialog/d_RankSafeCardWin.scene", this.pathFail = "ui_dialog/d_RankSafeCardFail.scene", 
            this.isLoad = !1, this.isWin = !1, d.Instance.Reg(a.RankSafeCardWinOrFail_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.RankSafeCardWinOrFail_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.RankSafeCardWinOrFail_Use, e => {
                this.useAddStar();
            }), w.Instance.RegisterNet(14008, e => {
                this.s2c_star_active(e);
            });
        }
        static get Instance() {
            return null == this.instance && (dg.instance = new dg()), dg.instance;
        }
        Open(e) {
            this.isWin = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.isWin ? this.pathWin : this.pathFail, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.closeEffect = null, this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.onDialogOpen(), (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (le.Instance.HideBannerAD(), 
            s.is233Platform && !s.is233mlcsjPlatform && le.Instance.hide233Banner(), this.uiControl.temp_video.y = 564, 
            Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && ((s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.is4399Platform || s.isHuaweiPlatform) && le.Instance.api.setShowNativeCallBack(e => {
                    e && this.uiControl && this.uiControl.temp_video && (s.is4399Platform || s.isXiaoMiPlatform || s.isHuaweiPlatform ? this.uiControl.temp_video.y = 679 : s.isDYVivoPlatform ? this.uiControl.temp_video.y = 682 : this.uiControl.temp_video.y = 634);
                }), s.is4399Platform || s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this, 568, 562, 198, 117, 2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(606, 553) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 592, 562, 156, 66, 2), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.temp_video.y = 634));
            }), s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(0));
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close(), this.uiControl.destroy(!0)), 
            this.uiControl = null, this.isLoad = !1, d.Instance.Send(a.UIFightEndRankShow_ShowOppoNative);
        }
        s2c_star_active(e) {
            e && 1 == e.code && (Z.Instance.rank = e.stage, d.Instance.Send(a.UIFightEndRankShow_UpdateStar, e.stage)), 
            this.Close();
        }
        useAddStar() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_star_active").Send({
                type: this.isWin ? 1 : 2
            }) : le.Instance.ShowVideoAD(e => {
                1 == e && (w.Instance.GetNetMsgData("c2s_star_active").Send({
                    type: this.isWin ? 1 : 2
                }), (s.isVivoPlatform || s.isOppoPlatform) && Xp.Instance.onClickContinue());
            }, this.isWin ? 5 : 6);
        }
    }
    dg.instance = null;
    class ug {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_SeasonGet.scene", this.isLoad = !1, this.selfData = null, 
            this.allData = {}, this.cacheData = {}, d.Instance.Reg(a.UISeasonGet_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UISeasonGet_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (ug.instance = new ug()), ug.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.isOpen = !0, this.uiControl.init();
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close());
        }
    }
    ug.instance = null;
    class pg {
        constructor() {
            this.path = "ui_dialog/d_Set.scene", this.isLoad = !1, d.Instance.Reg(a.UISet_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UISet_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (pg.instance = new pg()), pg.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            this.uiControl && (this.uiControl.box_1.visible = !0, this.uiControl.box_2.visible = !1, 
            this.uiControl.box_3.visible = !1), this.uiControl.popup();
        }
        Close() {
            this.uiControl && this.uiControl.close();
        }
    }
    pg.instance = null;
    class mg {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_SHModel.scene", this.isLoad = !1, this.firstOpen = !0, 
            d.Instance.Reg(a.UISHModel_Open, e => {
                this.Open(e[0]);
            }), d.Instance.Reg(a.UISHModel_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UISHModel_StartCallBack, e => {
                this.callBack();
            }), w.Instance.RegisterNet(12046, e => {
                this.s2c_get_xxmp(e);
            });
        }
        static get Instance() {
            return null == this.instance && (mg.instance = new mg()), mg.instance;
        }
        Open(e) {
            this.cacheCallBack = e, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.uiControl.onDialogOpen(), le.Instance.HideBannerAD(), 
            this.isOpen = !0, this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1010
            }), this.firstOpen = !1), s.isVivoPlatform && (le.Instance.ShowNativeBannerAD(1, this.uiControl, 1151, 86, 88, 88, 1), 
            le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 934,
                y: 550,
                width: 400,
                height: 200,
                style: I.bigImage,
                gravity: "bottom|right"
            } ])), s.isOppoGameCenterPlatform && le.Instance.ShowNativeBannerAD(1, this.uiControl, 1007, 527, 328 + s.fixStageX, 218, 2);
        }
        Close() {
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.bigImage), le.Instance.HideBannerAD(), 
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close());
        }
        s2c_get_xxmp(e) {
            this.uiControl && this.uiControl.onDialogOpen();
        }
        callBack() {
            this.cacheCallBack && this.cacheCallBack();
        }
    }
    mg.instance = null;
    class gg {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_SkillTips.scene", this.isLoad = !1, this.allMWAttr = {}, 
            this.downMouseSkillPos = new Laya.Point(), d.Instance.Reg(a.UISkillTips_Open, e => {
                this.Open(e[0], e[1], e[2], e[3]);
            }), d.Instance.Reg(a.UISkillTips_DelayOpen, e => {
                this.delayOpen(e[0], e[1], e[2], e[3]);
            }), d.Instance.Reg(a.UISkillTips_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (gg.instance = new gg()), gg.instance;
        }
        Open(e, t, i, s) {
            this.showSkillId = e, this.showStartLv = t || 0, this.showbuffId = i, this.showbuffLv = s, 
            this.isOpen = !0, this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, 
            Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            }))), Laya.stage.on(Laya.Event.MOUSE_UP, this, this.Close);
        }
        openUI() {
            this.isOpen && (this.uiControl.show(), 0 == this.showSkillId && 0 == this.showStartLv && 0 != this.showbuffId ? this.uiControl.showBuffTips(this.showbuffId, this.showbuffLv) : this.uiControl.showTips(this.showSkillId, this.showStartLv));
        }
        Close() {
            this.showbuffId = 0, Laya.stage.off(Laya.Event.MOUSE_UP, this, this.Close), this.isOpen && (this.isOpen = !1, 
            this.uiControl && this.uiControl.close());
        }
        delayOpen(e, t, i, s) {
            if (e) {
                if (this.touchSkillInfo = null, this.touchSkillID = e.touchId, null != e.touches) for (var n = 0; n < e.touches.length; n++) if (this.touchSkillID == e.touches[n].identifier) {
                    this.touchSkillInfo = e.touches[n];
                    break;
                }
                this.downMouseSkillPos.x = null == this.touchSkillInfo ? Laya.stage.mouseX : this.touchSkillInfo.stageX, 
                this.downMouseSkillPos.y = null == this.touchSkillInfo ? Laya.stage.mouseY : this.touchSkillInfo.stageY;
            }
            Laya.stage.timer.once(t, this, this.showSkillTips, [ i, s ]), Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.touchMove), 
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.closeSkillTips);
        }
        showSkillTips(e, t) {
            var i = null == this.touchSkillInfo ? Laya.stage.mouseX : this.touchSkillInfo.stageX, s = null == this.touchSkillInfo ? Laya.stage.mouseY : this.touchSkillInfo.stageY;
            Math.abs(this.downMouseSkillPos.x - i) < 1 && Math.abs(this.downMouseSkillPos.y - s) < 1 && this.Open(e, t, 0, 0);
        }
        closeSkillTips() {
            Laya.stage.timer.clear(this, this.showSkillTips), Laya.stage.off(Laya.Event.MOUSE_UP, this, this.closeSkillTips), 
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.touchMove);
        }
        touchMove(e) {
            if (this.touchSkillID == e.touchId && (this.touchSkillInfo = null, null != e.touches)) for (var t = 0; t < e.touches.length; t++) if (this.touchSkillID == e.touches[t].identifier) {
                this.touchSkillInfo = e.touches[t];
                break;
            }
        }
    }
    gg.instance = null;
    class fg {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_SuperStart.scene", this.isLoad = !1, 
            this.firstOpen = !0, this.isWaitOpen = !1, d.Instance.Reg(a.UISuperStart_Open, e => {
                this.checkData(e[0]);
            }), d.Instance.Reg(a.UISuperStart_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(15051, e => {
                this.s2c_kjfl(e);
            });
        }
        static get Instance() {
            return null == this.instance && (fg.instance = new fg()), fg.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.uiControl.popup(), this.uiControl.onDialogOpen(), this.isOpen = !0, this.firstOpen && (w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1005
            }), this.firstOpen = !1), s.isAppPlatform && le.Instance.HideBannerAD(), (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (s.isWcfjlPlatform ? le.Instance.ShowBannerCSJ(0) : s.is4399Platform ? le.Instance.ShowNativeBannerAD(1, this, 191, 543, 337, 188, 2) : (this.uiControl.temp_video.y = 564, 
            Laya.timer.once(s.oppoNativeDelay, this, () => {
                this.isOpen && this.uiControl && ((s.isDYVivoPlatform || s.isTopOnPlatform || s.isTapTapPlatform || s.isXiaoMiPlatform || s.isHuaweiPlatform) && le.Instance.api.setShowNativeCallBack(e => {
                    e && this.uiControl && this.uiControl.temp_video && (s.isXiaoMiPlatform || s.isHuaweiPlatform ? this.uiControl.temp_video.y = 684 : this.uiControl.temp_video.y = 643);
                }), s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this, 756, 519, 230, 135, 2) : s.isDYVivoPlatform ? le.Instance.showFloatIcon(792, 518) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 806, 564, 102, 66, 2), 
                le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.temp_video.y = 634));
            })));
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close()), this.cacheCallBack && this.cacheCallBack();
        }
        checkData(e) {
            this.isWaitOpen = !0, this.cacheCallBack = e, w.Instance.GetNetMsgData("c2s_kjfl").Send({
                type: 1
            });
        }
        s2c_kjfl(e) {
            (this.isWaitOpen || this.isOpen) && (this.isWaitOpen = !1, 1 == e.type ? 0 == e.state ? this.Open() : this.cacheCallBack && this.cacheCallBack() : 2 == e.type && this.Close());
        }
    }
    fg.instance = null;
    class Ig {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_TianFu.scene", this.isLoad = !1, this.allMWAttr = {}, 
            d.Instance.Reg(a.UITianFu_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIGameMain_UpdateRes, e => {
                this.updateRes();
            }), d.Instance.Reg(a.UITianFu_Close, e => {
                this.Close();
            }), w.Instance.RegisterNet(16004, e => {
                this.s2c_mw_up(e);
            }), w.Instance.RegisterNet(16010, e => {
                this.s2c_mw_up(e);
            }), w.Instance.RegisterNet(16002, e => {
                this.s2c_mw_info(e);
            });
        }
        static get Instance() {
            return null == this.instance && (Ig.instance = new Ig()), Ig.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            if (this.uiControl.popup(), this.isOpen = !0, this.uiControl.updateAttr(this.allMWAttr), 
            this.uiControl.updateRes(), (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && (s.isDYVivoPlatform ? le.Instance.showFloatIcon(176, 1) : s.isXiaoMiPlatform || s.isHuaweiPlatform ? le.Instance.ShowNativeBannerAD(1, this.uiControl, 1e3, 495, 345, 202, 1) : le.Instance.ShowNativeBannerAD(1, this.uiControl, 1e3, 630, 345, 117, 1), 
            le.Instance.oppoNativeImage && le.Instance.oppoNativeImage.parent && (this.uiControl.img_clickAD.visible = s.isOnline && s.canShowNative && (s.isOppoPlatform || s.isOppoGameCenterPlatform))), 
            d.Instance.Send(a.UIGameMain_HideWxClup), s.isXiaoMiPlatform) {
                let e = !0;
                s.isXiaoMiPlatform && le.Instance.getRandAderror() && le.Instance.getAderrorRate() && (le.Instance.setRandAderror(), 
                e = !1), le.Instance.showNativeInterstitialad(e);
            }
            s.isHuaweiPlatform && le.Instance.showNativeInterstitialad(), s.isDYVivoPlatform && le.Instance.showInterVideo(), 
            s.isWcfjlPlatform && le.Instance.ShowBannerCSJ(2), s.isVivoPlatform && (le.Instance.HideNewNativeAD(I.icon), 
            le.Instance.ShowNewNativeAD([ {
                uiRoot: this.uiControl,
                x: 934,
                y: 550,
                width: 400,
                height: 200,
                style: I.bigImage,
                gravity: "bottom|right"
            } ]));
        }
        Close() {
            (s.isOppoPlatform || s.isVivoPlatform || s.isAppPlatform) && le.Instance.HideBannerAD(), 
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.bigImage), d.Instance.Send(a.UIGameMain_ShowWxClup), 
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.close()), s.isTapTapPlatform && le.Instance.sendShowSplashAd();
        }
        s2c_mw_info(e) {
            if (null != e) for (let t = 0; t < e.info.length; t++) {
                const i = e.info[t];
                this.updateHeroAttr(i.type, i.lv);
            }
        }
        s2c_mw_up(e) {
            if (null != e) {
                if (2 == e.code) return d.Instance.Send(a.UIGetFreeSP_Open), d.Instance.Send(a.UIGameTipsModel_SetTips, "资源不足", 1e3), 
                void console.log("16004 s2c_mw_up erroe code " + e.code);
                if (1 != e.code) return void console.log("16004 s2c_mw_up erroe code " + e.code);
                1 == e.code && d.Instance.Send(a.UITianFuTips_Close), this.updateHeroAttr(e.type, e.lv);
            }
        }
        updateHeroAttr(e, t) {
            var i = [];
            for (let n = 0; n <= t; n++) {
                var s = ye.Instance.getMingWen(e, n);
                null != s && this.addAllAttr(i, s.data);
            }
            this.allMWAttr[e] = {
                lv: t,
                data: i
            }, this.uiControl && this.isOpen && this.uiControl.updateAttr(this.allMWAttr);
        }
        addAllAttr(e, t) {
            for (var i = 0; i < t.length; i++) {
                var s = t[i];
                e[s.key] || (e[s.key] = 0), e[s.key] = e[s.key] + s.value;
            }
        }
        updateRes() {
            this.isOpen && this.uiControl && this.uiControl.updateRes();
        }
    }
    Ig.instance = null;
    class vg {
        constructor() {
            this.path = "ui_dialog/d_VideoToNavigateGame.scene", this.isLoad = !1, this.isVideo = !0, 
            this.delayClose = !1, this.advImageIndex = 0, d.Instance.Reg(a.UIVideoToNavigateGame_Open, e => {
                this.Open(e[0], e[1]);
            }), d.Instance.Reg(a.UIVideoToNavigateGame_Close, e => {
                this.Close();
            });
        }
        static get Instance() {
            return null == this.instance && (vg.instance = new vg()), vg.instance;
        }
        Open(e, t) {
            if (this.cacheCaLLBack = e, this.cacheAdData = t, this.cacheAdLsit = B.Instance.GetNoClickAppIDList(), 
            0 == this.cacheAdLsit.length) return console.log("没有可以强跳转的游戏！"), !1;
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.openUI();
            })));
        }
        openUI() {
            null == this.cacheAdData && (this.isVideo = !0, B.Instance.adVideoData = G.Instance.ListSortByClick(B.Instance.adVideoData), 
            console.log("adv sort: ", B.Instance.adVideoData)), this.delayClose = !0, Laya.timer.once(1e3, this, () => {
                this.delayClose = !1;
            }), null == this.cacheAdData ? (Math.random() > .5 && this.advImageIndex++, this.cacheAdLsit.length > 0 && this.advImageIndex >= this.cacheAdLsit.length && (this.advImageIndex = 0), 
            this.adImageData = this.cacheAdLsit[this.advImageIndex]) : (this.isVideo = !1, this.adImageData = this.cacheAdData), 
            null != this.adImageData && (this.advImageIndex++, le.Instance.GotoOtherGame("激励视频跳转", this.adImageData, 100, e => {
                this.gotoCallBack(e);
            }, !0)), this.uiControl.updateData(this.cacheAdData), this.uiControl.popup();
        }
        Close() {
            this.delayClose || this.uiControl && this.uiControl.close();
        }
        gotoCallBack(e) {
            this.delayClose = !1, this.Close(), null != this.cacheCaLLBack && (console.log(">> gotoGame CallBack waitCallBack ", e), 
            this.cacheCaLLBack(e), this.cacheCaLLBack = null);
        }
    }
    vg.instance = null;
    class _g {
        constructor() {
            this.isOpen = !1, this.path = "ui_dialog/d_Wing.scene", this.isLoad = !1, this.allMWAttr = {}, 
            d.Instance.Reg(a.UIWing_Open, e => {
                this.Open();
            }), d.Instance.Reg(a.UIWing_Close, e => {
                this.Close();
            }), d.Instance.Reg(a.UIWing_UP, e => {
                this.wingLvup();
            }), d.Instance.Reg(a.UIWing_UPDiamond, e => {
                this.wingLvUpDiamond();
            }), d.Instance.Reg(a.UIWing_UPUpdate, e => {
                this.wingUpdate();
            });
        }
        static get Instance() {
            return null == this.instance && (_g.instance = new _g()), _g.instance;
        }
        Open() {
            this.uiControl ? this.openUI() : this.isLoad || (this.isLoad = !0, Laya.Scene.load(this.path, Laya.Handler.create(this, e => {
                this.uiControl = e, this.uiControl.popupEffect = null, this.uiControl.closeEffect = null, 
                this.openUI();
            })));
        }
        openUI() {
            this.isOpen = !0, ie.Instance.addUI(this), this.uiControl.initWing(), this.uiControl.updateWing(), 
            d.Instance.Send(a.UIGameMain_HideWxClup), s.isXiaoMiPlatform && le.Instance.showInterXiaomi(), 
            s.isVivoPlatform && le.Instance.HideNewNativeAD(I.icon);
        }
        Close() {
            this.isOpen && (this.isOpen = !1, this.uiControl && this.uiControl.clearWing(), 
            te.Instance.removeScene3d(), ie.Instance.removeUI(this)), d.Instance.Send(a.UIFightReady_UpdateWing), 
            d.Instance.Send(a.UIGameMain_ShowWxClup), s.isTapTapPlatform && le.Instance.sendShowSplashAd();
        }
        wingLvUpDiamond() {
            Z.Instance.diamond >= 500 ? w.Instance.GetNetMsgData("c2s_wing_lvup").Send({
                cost: 2
            }) : d.Instance.Send(a.UIConfirm_Open, 3, 0, "钻石不足，观看视频免费升级吗?", Laya.Handler.create(this, e => {
                this.wingLvup();
            }));
        }
        wingLvup() {
            s.isPCPlatform ? w.Instance.GetNetMsgData("c2s_wing_lvup").Send({
                cost: 4
            }) : le.Instance.ShowVideoAD(e => {
                1 == e && w.Instance.GetNetMsgData("c2s_wing_lvup").Send({
                    cost: 4
                });
            }, vm.Instance.curWingLv > 0 ? 24 : 23);
        }
        wingUpdate() {
            this.isOpen && this.uiControl && this.uiControl.updateWing();
        }
    }
    _g.instance = null;
    class yg {
        constructor() {
            d.Instance.Reg(a.Main_Login, e => {
                this.Login();
            }), d.Instance.Reg(a.Main_GetSystemInfo, e => {
                this.GetSystemInfo();
            }), d.Instance.Reg(a.Main_SendLogin, e => {
                this.SendLogin();
            }), d.Instance.Reg(a.Main_canshowInterVideo, e => {
                this.canshowInterVideo();
            }), d.Instance.Reg(a.Main_233BannerCheck, e => {
                this.Main_233BannerCheck();
            });
        }
        static get Instance() {
            return null == yg.instance && (yg.instance = new yg()), yg.instance;
        }
        onConfigLoaded() {
            console.log("onConfigLoaded"), Am.Instance, pg.Instance, Hp.Instance, Hm.startScene && Laya.Scene.open(Hm.startScene, !0, null, Laya.Handler.create(this, e => {
                s.curScene = e, s.curScene.x += s.fixStageX, s.curGameScene = i.LoginScene, e.autoDestroyAtClosed = !0, 
                s.fixStageY > 0 && (e.y = s.fixStageY), s.isAppPlatform && e.img_bg && (e.img_bg.x = s.fixStageX), 
                d.Instance.Send(a.UILoginModel_Open);
            }));
        }
        Init() {
            window.Laya3D ? window.Laya3D.init(Hm.width, Hm.height) : Laya.init(Hm.width, Hm.height, Laya.WebGL), 
            Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded)), 
            Laya.URL.exportSceneToJson = Hm.exportSceneToJson, UIConfig.closeDialogOnSide = !1;
            var e = console.log;
            console.log = function(t, i, n, a, o) {
                let l = s.is233Platform ? "ttad" : "";
                (null == s || s.DebugLv > 0) && (null != t && null != i && null != n && null != a && null != o ? e.call(console, l + t + i + n + a + o) : null != t && null != i && null != n && null != a ? e.call(console, l + t + i + n + a) : null != t && null != i && null != n ? e.call(console, l + t + i + n) : null != t && null != i ? e.call(console, l + t + i) : e.call(console, l + t));
            }, u.TrigonometricFunction(), this.PlatformCheck(), this.GetServerInfo(), this.getShareInfo(), 
            this.InitCurPlatform();
        }
        PlatformCheck() {
            let e = Laya.Browser.window.location && Laya.Browser.window.location.search && Laya.Browser.window.location.search.substring && Laya.Browser.window.location.search.substring(1);
            if (Laya.Browser.onMiniGame) s.onMiniGame = !0, s.isWXPlatform = !0, s.platformPathDir_WX = Laya.Browser.window.wx.env.USER_DATA_PATH, 
            Laya.Browser.window.KSGameGlobal && "undefined" != Laya.Browser.window.KSGameGlobal && (s.isWXPlatform = !1, 
            s.isKSPlatform = !0), console.log("PlatformCheck  " + s.isKSPlatform); else if (Laya.Browser.onTTMiniGame) s.onMiniGame = !0, 
            s.isTTPlatform = !0, s.platformPathDir_TT = "ttfile://user/"; else if (Laya.Browser.onQQMiniGame) s.onMiniGame = !0, 
            s.isQQPlatform = !0; else if (Laya.Browser.onQGMiniGame) s.isWXPlatform = !1, s.isOppoPlatform = !0, 
            s.onMiniGame = !0, s.platformPathDir_OPPO = Laya.Browser.window.qg.env.USER_DATA_PATH; else if (Laya.Browser.onVVMiniGame) s.isWXPlatform = !1, 
            s.isVivoPlatform = !0, s.onMiniGame = !0, s.platformPathDir_VIVO = "internal://files/"; else if (null != Laya.Browser.window.conch) {
                s.isAppPlatform = !0, s.isWXPlatform = !1, s.isTTPlatform = !1, s.isHaveAd = !0;
                var t = Laya.Browser.window.PlatformClass.createClass("demo.DeviceIdUtil");
                if (null != t) {
                    var i = t.call("getPlatformName");
                    if (i && "dyvivo" === i && (s.isDYVivoPlatform = !0), i && "gameCenter" === i && (s.isOppoGameCenterPlatform = !0), 
                    i && "topOn" === i && (s.isTopOnPlatform = !0), i && "xiaomi" === i && (s.isXiaoMiPlatform = !0), 
                    i && "m4399" === i && (s.is4399Platform = !0), i && "huawei" === i && (s.isHuaweiPlatform = !0), 
                    i && "baidu" === i && (s.isBaiduPlatform = !0), i && "taptap" === i && (s.isTapTapPlatform = !0), 
                    i && "momoyu" === i && (s.isMomoyuPlatform = !0), i && "wcfjl" === i && (s.isWcfjlPlatform = !0), 
                    i && ("233" === i || "233ml" === i || "233mlcsj" === i)) {
                        s.is233Platform = !0, s.is233mlPlatform = "233ml" === i, s.is233mlcsjPlatform = "233mlcsj" === i;
                        var n = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                        null != n && (n.call("doLogin"), console.log("ttad doLogin main"));
                    }
                }
            } else s.isH5Platform ? s.isHaveAd = !1 : e ? (s.is4399H5Platform = !0, s.isH5Platform = !1, 
            le.Instance.UserInfo.nickName = e + "", s.userId = e + "", Laya.URL.basePath = "https://wwjres.haowan823.cn/xyxh5_test/mb3d3v3_h5_test/ver3/", 
            window.onload = function() {
                document.body.style.backgroundColor = "#000000";
            }, this.init()) : (s.isPCPlatform = !0, window.onload = function() {
                document.body.style.backgroundColor = "#000000";
            });
            Laya.Browser.window.H5API;
            Laya.timer.once(2e3, this, () => {
                console.log(">>MainConfig.isWXPlatform " + s.isWXPlatform), console.log(">>MainConfig.isTTPlatform " + s.isTTPlatform), 
                console.log(">>MainConfig.isQQPlatform " + s.isQQPlatform), console.log(">>MainConfig.isOppoPlatform " + s.isOppoPlatform), 
                console.log(">>MainConfig.isVivoPlatform " + s.isVivoPlatform), console.log(">>MainConfig.isAppPlatform " + s.isAppPlatform), 
                console.log(">>MainConfig.isH5Platform " + s.isH5Platform), console.log(">>MainConfig.isAppOppoPlatform " + s.isOppoGameCenterPlatform), 
                console.log(">>MainConfig.isDYVivoPlatform " + s.isDYVivoPlatform), console.log(">>MainConfig.isTopOnPlatform" + s.isTopOnPlatform), 
                console.log(">>MainConfig.isXiaoMiPlatform" + s.isXiaoMiPlatform), console.log(">>MainConfig.is4399Platform" + s.is4399Platform), 
                console.log(">>MainConfig.isHuaweiPlatform" + s.isHuaweiPlatform), console.log(">>MainConfig.isPCPlatform" + s.isPCPlatform), 
                console.log(">>MainConfig.isBaiduPlatform" + s.isBaiduPlatform), console.log(">>MainConfig.isTapTapPlatform" + s.isTapTapPlatform), 
                s.isPCPlatform && s.isTestVersion && cu.Instance, console.log(">>MainConfig.isKSPlatform" + s.isKSPlatform), 
                console.log(">>phone onPC" + Laya.Browser.onPC), console.log(">>phone onAndroid" + Laya.Browser.onAndroid), 
                console.log(">>phone onIOS" + Laya.Browser.onIOS), console.log(">>phone onIPad" + Laya.Browser.onIPad), 
                console.log(">>phone onIPhone" + Laya.Browser.onIPhone);
            });
        }
        InitCurPlatform() {
            if (s.firstLogin = !0, le.Instance.Init(), this.GetSystemInfo(), s.onMiniGame) {
                if (Laya.stage.scaleMode == Laya.Stage.SCALE_FIXED_HEIGHT) s.screenScale = s.systemInfo.screenHeight * s.systemInfo.pixelRatio / Laya.stage.designHeight, 
                s.fixStageX = Math.floor((s.systemInfo.screenWidth * s.systemInfo.pixelRatio - s.screenScale * Laya.stage.designWidth) / 2 / s.screenScale), 
                s.fixStageX < 0 && (s.fixStageX = 0); else {
                    s.screenScale = s.systemInfo.screenWidth * s.systemInfo.pixelRatio / Laya.stage.designWidth, 
                    s.fixStageY = Math.floor((s.systemInfo.screenHeight * s.systemInfo.pixelRatio - s.screenScale * Laya.stage.designHeight) / 2 / s.screenScale), 
                    s.fixStageY < 0 && (s.fixStageY = 0);
                    var e = new Laya.Sprite();
                    e.graphics.drawRect(0, 0, s.systemInfo.screenWidth * s.systemInfo.pixelRatio, s.systemInfo.screenHeight * s.systemInfo.pixelRatio, "#000000"), 
                    Laya.stage.addChild(e), le.Instance.fixBannerPos();
                }
                if (console.log(">>screenScale ", s.screenScale), console.log(">>fixStageX ", s.fixStageX), 
                console.log(">>fixStageY ", s.fixStageY), B.Instance.init(), le.Instance.IsGetUserInfo = !1, 
                le.Instance.api.showShareMenu(), s.isWXPlatform) le.Instance.GetWXUserInfo(), B.Instance.isGetLoginGameData || le.Instance.CreateAD(); else if (s.isQQPlatform) le.Instance.GetWXUserInfo(), 
                le.Instance.CreateAD(); else if (s.isTTPlatform) j.Instance.init(), le.Instance.CreateAD(); else if (s.isOppoPlatform) {
                    if (le.Instance.IsGetUserInfo = !0, le.Instance.CreateAD(), null != Laya.Browser.window.qg) {
                        var t = Laya.Browser.window.qg.getSystemInfoSync();
                        if (console.log("====> versioncode===", t.platformVersionCode), t.platformVersionCode >= 1060 && Laya.Browser.window.qg.reportMonitor("game_scene", 0), 
                        t.platformVersionCode >= 1050) {
                            s.oppohtsdk = Laya.Browser.window.htSdk;
                            var i = Laya.Browser.window.qg.getLaunchOptionsSync();
                            null != s.oppohtsdk && s.oppohtsdk.init(s.oppohtgid, i.query, (e, t) => {
                                console.log(">>>>>>>>>> MainConfig.oppohtsdk.init"), this.SetOppoAdvButData();
                            });
                        }
                    }
                } else s.isVivoPlatform && (le.Instance.IsGetUserInfo = !0, le.Instance.CreateAD());
                var n = [ "bigpic/", "config/", "dungeon/", "js/", "libs/", "login/", "music/", "prefab/", "res/", "respack/", "scenes/", "sound/", "ui_dialog/", "ui_view/", "3dres/", "3dunit/", "zipconfig" ];
                s.isOppoPlatform ? window.Laya.QGMiniAdapter.nativefiles = n : s.isVivoPlatform ? window.Laya.VVMiniAdapter.nativefiles = n : s.isWXPlatform || s.isKSPlatform ? window.Laya.MiniAdpter.nativefiles = n : s.isTTPlatform && (window.Laya.TTMiniAdapter.nativefiles = n), 
                Laya.URL.basePath = s.cdn;
            } else s.isAppPlatform ? (Laya.stage.scaleMode == Laya.Stage.SCALE_FIXED_HEIGHT ? (s.screenScale = window.screen.height * window.devicePixelRatio / Laya.stage.designHeight, 
            s.fixStageX = (window.screen.width * window.devicePixelRatio - s.screenScale * Laya.stage.designWidth) / 2 / s.screenScale, 
            s.fixStageX < 0 && (s.fixStageX = 0)) : (s.screenScale = window.screen.width * window.devicePixelRatio / Laya.stage.designWidth, 
            s.fixStageY = (window.screen.height * window.devicePixelRatio - s.screenScale * Laya.stage.designHeight) / 2 / s.screenScale, 
            s.fixStageY < 0 && (s.fixStageY = 0)), s.systemInfo = {
                windowWidth: window.screen.width,
                windowHeight: window.screen.height,
                screenWidth: window.screen.width,
                screenHeight: window.screen.height,
                pixelRatio: 1
            }, s.wxSDKVersion = 1, le.Instance.IsGetUserInfo = !0, s.isAppPlatform && (le.Instance.CreateAD(), 
            B.Instance.init())) : s.is4399H5Platform || s.isH5Test ? (this.GetSystemInfo(), 
            Laya.stage.scaleMode == Laya.Stage.SCALE_SHOWALL ? (s.fixStageX = 0, s.fixStageY = 0) : Laya.stage.scaleMode == Laya.Stage.SCALE_FIXED_HEIGHT ? (s.screenScale = Laya.Browser.clientHeight * window.devicePixelRatio / Laya.stage.designHeight, 
            s.fixStageX = (Laya.Browser.clientWidth * window.devicePixelRatio - s.screenScale * Laya.stage.designWidth) / 2 / s.screenScale, 
            s.fixStageX < 0 && (s.fixStageX = 0)) : (s.screenScale = Laya.Browser.clientWidth * window.devicePixelRatio / Laya.stage.designWidth, 
            s.fixStageY = (Laya.Browser.clientHeight * window.devicePixelRatio - s.screenScale * Laya.stage.designHeight) / 2 / s.screenScale, 
            s.fixStageY < 0 && (s.fixStageY = 0)), console.log(JSON.stringify(s.systemInfo)), 
            s.wxSDKVersion = 1, le.Instance.IsGetUserInfo = !0, s.isH5Test && (Hm.debug = !0, 
            Hm.stat = !0, le.Instance.IsGetUserInfo = !0)) : (Hm.debug = !0, Hm.stat = !0, this.GetSystemInfo(), 
            le.Instance.IsGetUserInfo = !0);
        }
        GetSystemInfo() {
            if (s.onMiniGame) {
                let t = le.Instance.api.getSystemInfoSync();
                if (null == t) return void (s.systemInfo = {
                    windowWidth: window.screen.width,
                    windowHeight: window.screen.height,
                    screenWidth: window.screen.width,
                    screenHeight: window.screen.height,
                    pixelRatio: 1
                });
                if (s.isVivoPlatform && (t.windowWidth = t.screenWidth, t.windowHeight = t.screenHeight, 
                t.system = t.osType, t.platform = t.platformVersionName, t.pixelRatio = 1), console.log("========================"), 
                console.log("iPhone.model,", JSON.stringify(t.model)), console.log("iPhone.screenWidth,", JSON.stringify(t.screenWidth)), 
                console.log("iPhone.screenHeight,", JSON.stringify(t.screenHeight)), console.log("iPhone.windowWidth,", JSON.stringify(t.windowWidth)), 
                console.log("iPhone.windowHeight,", JSON.stringify(t.windowHeight)), console.log("iPhone.system,", JSON.stringify(t.system)), 
                console.log("iPhone.platform,", JSON.stringify(t.platform)), console.log("iPhone.pixelRatio,", JSON.stringify(t.pixelRatio)), 
                console.log("iPhone.SDKVersion,", JSON.stringify(t.SDKVersion)), s.isTTPlatform && console.log("iPhone.appName,", JSON.stringify(t.appName)), 
                console.log("Laya.Browser.window.wx.getSystemInfoSync()", JSON.stringify(le.Instance.api.getSystemInfoSync())), 
                console.log("========================"), 812 == t.windowWidth && 375 == t.windowHeight && (s.iPhoneX = !0), 
                s.systemInfo = t, s.isOppoPlatform || s.isVivoPlatform || s.isKSPlatform) s.wxSDKVersion = 0; else {
                    var e = s.systemInfo.SDKVersion.replace(/[.]/g, "");
                    s.wxSDKVersion = parseInt(e);
                }
            } else s.systemInfo = {
                windowWidth: Hm.width,
                windowHeight: Hm.height,
                screenWidth: Hm.width,
                screenHeight: Hm.height,
                pixelRatio: 1
            };
            UIConfig.popupBgColor = "#060315", UIConfig.popupBgAlpha = .7, Laya.stage.scaleMode = q.getFixedMode(), 
            Laya.stage.screenMode = Laya.Stage.SCREEN_HORIZONTAL, Laya.stage.alignV = Laya.Stage.ALIGN_CENTER, 
            Laya.stage.alignH = Laya.Stage.ALIGN_CENTER, Laya.stage.frameRate = Laya.Stage.FRAME_FAST;
        }
        GetServerInfo() {
            console.log("get server list..."), s.initServer = !1;
            var e = "serverlist_mb_3d_wx.json?timestamp=";
            s.isWXPlatform ? e = "serverlist_mb_3d_wx.json?timestamp=" : s.isKSPlatform ? e = "serverlist_mb_3d_ks.json?timestamp=" : s.isTTPlatform ? e = "serverlist_mb_3d_tt.json?timestamp=" : s.isOppoPlatform ? e = "serverlist_mb_3d_oppo.json?timestamp=" : s.isVivoPlatform ? e = "serverlist_mb_3d_vivo.json?timestamp=" : s.isPCPlatform ? e = "serverlist_mb_3d_wx.json?timestamp=" : s.isAppPlatform ? (e = "serverlist_mb_3d_app_233.json?timestamp=", 
            s.is233mlPlatform && (e = "serverlist_mb_3d_app_ml.json?timestamp="), s.is233mlcsjPlatform && (e = "serverlist_mb_3d_app_ml_csj.json?timestamp="), 
            s.isOppoGameCenterPlatform && (e = "serverlist_mb_3d_app_233.json?timestamp="), 
            s.isOppoGameCenterPlatform && (e = "serverlist_mb_3d_qdd.json?timestamp="), s.isDYVivoPlatform && (e = "serverlist_mb_3d_qdd_vivo.json?timestamp="), 
            s.isTopOnPlatform && (e = "serverlist_mb_3d_topon.json?timestamp="), s.isXiaoMiPlatform && (e = "serverlist_mb_3d_qdd_xm.json?timestamp="), 
            s.is4399Platform && (e = "serverlist_mb_3d_qdd_4399.json?timestamp="), s.isHuaweiPlatform && (e = "serverlist_mb_3d_qdd_hw.json?timestamp="), 
            s.isBaiduPlatform && (e = "serverlist_mb_3d_qdd_bd.json?timestamp="), s.isTapTapPlatform && (e = "serverlist_mb_3d_qdd_tap.json?timestamp="), 
            s.isMomoyuPlatform && (e = "serverlist_mb_3d_momoyu.json?timestamp="), s.isWcfjlPlatform && (e = "serverlist_mb_3d_wcfjl.json?timestamp=")) : s.is4399H5Platform ? e = "serverlist_mb_3d_h5_4399.json?timestamp=" : s.isH5Platform && (e = "serverlist_mb_3d_h5.json?timestamp=");
            var t = new Laya.HttpRequest();
            t.http.timeout = 5e3, t.once(Laya.Event.COMPLETE, this, this.XhrCompleteHandler), 
            t.once(Laya.Event.ERROR, this, this.XhrErrorHandler), t.on(Laya.Event.PROGRESS, this, this.XhrProcessHandler), 
            t.send(s.cdn + e + new Date().getTime(), "", "get", "text"), Laya.timer.once(6e3, this, this.CheckServerInfo);
        }
        CheckServerInfo() {
            s.initServer || this.GetServerInfo();
        }
        xhrLoadCompleteHandler(e) {
            var t = null;
            try {
                t = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("load.json error ", e);
            }
            if (null != t) {
                var i = 1;
                if (null != t.load) {
                    s.cacheServerLoad = {};
                    for (var n = 0; n < t.load.length; n++) {
                        var a = t.load[n];
                        s.cacheServerLoad["s" + i++] = a;
                    }
                }
                null != s.cacheServerList && (Laya.timer.clear(this, this.waitSetServerInfo), this.setServerInfo());
            }
        }
        xhrLoadErrorHandler(e) {}
        xhrLoadProcessHandler(e) {}
        XhrCompleteHandler(e) {
            var t, i = null;
            try {
                i = JSON.parse(e);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("serverlist.json error ", e), Laya.timer.once(100, this, this.GetServerInfo);
            }
            if (null != i) if (console.log("ttad " + i), s.cacheServerList = i, s.isGs = s.onMiniGame && !s.isTestVersion && s.version > s.cacheServerList.version, 
            s.isTTPlatform && (s.isTTGs = s.isGs, s.isGs = !1, s.isKSPlatform, console.log(">>>>>>>>>>>>>>>>>>> TT是否审核 " + s.isTTGs + " server version " + s.cacheServerList.version)), 
            (s.isOppoPlatform || s.isOppoGameCenterPlatform) && s.cacheServerList.pr_end && (s.pr_end = s.cacheServerList.pr_end ? Number(s.cacheServerList.pr_end) : 0), 
            s.taoluSwitch = s.cacheServerList.taoluSwitch ? Number(s.cacheServerList.taoluSwitch) : 0, 
            s.maiLiangSwitch = s.cacheServerList.maiLiangSwitch ? Number(s.cacheServerList.maiLiangSwitch) : 0, 
            s.sendMsgTime = s.cacheServerList.sendMsgTime ? Number(s.cacheServerList.sendMsgTime) : 30, 
            s.isXiaoMiPlatform && s.cacheServerList.MobileShop && (s.MobileShop = !!s.cacheServerList.MobileShop && 1 == Number(s.cacheServerList.MobileShop)), 
            s.cacheServerList && s.cacheServerList.pr_inter && (s.pr_inter = s.cacheServerList.pr_inter ? Number(s.cacheServerList.pr_inter) : 0), 
            s.isVivoPlatform && (s.isFightShowAdVivo = 1 == s.cacheServerList.isFightShowAdVivo), 
            s.cacheServerList && s.cacheServerList.AllScreenVideoTime && (s.AllScreenVideoTime = s.cacheServerList.AllScreenVideoTime ? Number(s.cacheServerList.AllScreenVideoTime) : 0), 
            s.isWXPlatform && (Laya.SoundManager.muted = s.isGs), (s.isTTPlatform || s.isOppoPlatform || s.isVivoPlatform || s.isH5Platform || s.isKSPlatform) && (s.isGs = !1), 
            console.log(">>>>>>>>>>>>>>>>>>> 是否审核 " + s.isGs + " server version " + s.cacheServerList.version), 
            s.showMoreGame = 1 == s.cacheServerList.open, null != s.cacheServerList.cpdelay && (s.cpdelay = s.cacheServerList.cpdelay), 
            1047 != s.sceneID && 1048 != s.sceneID || (s.showMoreGame = !1), s.fixMisleadADCheck = 1 == s.cacheServerList.open_ad, 
            s.open_kp = s.cacheServerList.open_kp, s.bannerToVideo = s.cacheServerList.bannerToVideo, 
            t = s.cacheServerList.loadName, null == s.cacheServerLoad) if (null != t && "" != t) {
                var n = new Laya.HttpRequest();
                n.http.timeout = 5e3, n.once(Laya.Event.COMPLETE, this, this.xhrLoadCompleteHandler), 
                n.once(Laya.Event.ERROR, this, this.xhrLoadErrorHandler), n.on(Laya.Event.PROGRESS, this, this.xhrLoadProcessHandler), 
                n.send(s.cdn + t + "?timestamp=" + new Date().getTime(), "", "get", "text"), Laya.timer.once(2e3, this, this.waitSetServerInfo);
            } else Laya.timer.once(1e3, this, this.waitSetServerInfo); else this.setServerInfo();
        }
        waitSetServerInfo() {
            this.setServerInfo();
        }
        setServerInfo() {
            if (!s.initServer) {
                if ((s.isAppPlatform || s.onMiniGame || s.is4399H5Platform) && s.version <= s.cacheServerList.version) {
                    for (var e = [], t = 0; t < s.cacheServerList.server.length; t++) {
                        var i = 0;
                        null != s.cacheServerLoad && (i = s.cacheServerLoad["s" + (t + 1)]), (isNaN(i) || null == i) && (i = 0), 
                        e.push({
                            player: i,
                            url: s.cacheServerList.server[t]
                        });
                    }
                    e.sort((e, t) => e.player - t.player);
                    var n = e.length - Math.floor(e.length / 2);
                    (isNaN(n) || 0 == n) && (n = 1);
                    var a = Math.floor(10 * Math.random()) % n;
                    s.serverip = e[a].url, console.log("server info:", e[a].url + " num " + e[a].player);
                } else {
                    a = Math.floor(10 * Math.random()) % s.cacheServerList.test_server.length;
                    s.serverip = s.cacheServerList.test_server[a];
                }
                console.log("MainConfig.serverip:", s.serverip), B.Instance.isGetLoginGameData ? s.initServer = !0 : this.Login();
            }
        }
        XhrErrorHandler(e) {
            Laya.timer.once(100, this, this.GetServerInfo);
        }
        XhrProcessHandler(e) {}
        getShareInfo() {
            var e = new Laya.HttpRequest();
            e.http.timeout = 5e3, e.once(Laya.Event.COMPLETE, this, this.xhrShareCompleteHandler), 
            e.once(Laya.Event.ERROR, this, this.xhrShareErrorHandler), e.on(Laya.Event.PROGRESS, this, this.xhrShareProcessHandler), 
            e.send(s.cdn + "share.json?timestamp=" + new Date().getTime(), "", "get", "text");
        }
        xhrShareCompleteHandler(e) {
            try {
                var t = JSON.parse(e);
                null != t && (le.Instance.shareData = t);
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                console.log("load.json error ", e);
            }
        }
        xhrShareErrorHandler(e) {
            Laya.timer.once(2e3, this, this.getShareInfo);
        }
        xhrShareProcessHandler(e) {}
        SetOppoAdvButData() {
            null != s.oppohtsdk && (s.oppohtsdk.getBox("5e83237393a44e292f0133cb", (e, t) => {
                if (null != e && console.log(">>>>>>>>1 err" + e), null != t) {
                    s.oppoIconGames = [];
                    for (var i = 0; i < t.length; i++) for (var n = t[i], a = 0; a < n.length; a++) n[a].bid = "5e83237393a44e292f0133cb", 
                    n[a].otherName = n[a].txt, n[a].otherIconUrl = n[a].iconUrl;
                }
            }), s.oppohtsdk.getBox("5e83239093a44e292f0133cc", (e, t) => {
                if (null != e && console.log(">>>>>>>>2 err" + e), null != t) {
                    s.oppoMoreGames = [];
                    for (var i = 0; i < t.length; i++) for (var n = t[i], a = 0; a < n.length; a++) n[a].bid = "5e83239093a44e292f0133cc", 
                    n[a].otherName = n[a].txt, n[a].otherIconUrl = n[a].iconUrl;
                }
            }), s.oppohtsdk.getBox("5e8323af93a44e292f0133cd", (e, t) => {
                if (null != e && console.log(">>>>>>>>3 err" + e), null != t) {
                    s.oppoResultGames = [];
                    for (var i = 0; i < t.length; i++) for (var n = t[i], a = 0; a < n.length; a++) n[a].bid = "5e8323af93a44e292f0133cd", 
                    n[a].otherName = n[a].txt, n[a].otherIconUrl = n[a].iconUrl;
                }
            })), Laya.timer.once(3e5, this, this.SetOppoAdvButData);
        }
        waitJoinRoom(e) {}
        SendLogin() {
            console.log("没有获取到用户信息--\x3e 等待获取"), le.Instance.IsGetUserInfo ? s.isQQPlatform && le.Instance.api.onShareAppMessage(function() {
                return le.Instance.GetShareData();
            }) : Laya.timer.once(1e3, this, this.SendLogin);
        }
        Login() {
            s.initServer = !0, s.onMiniGame && s.isGs && le.Instance.api.hideShareMenu();
            var e = s.serverip;
            w.Instance.Init(e, "login/proto/rpc.proto"), w.Instance.RegisterNet(10003, e => {
                this.s2c_get_openid(e);
            }), w.Instance.RegisterNet(10001, e => {
                this.s2c_login(e);
            }), w.Instance.RegisterNet(10006, e => {
                this.s2c_name_url(e);
            }), w.Instance.RegisterNet(11002, e => {
                this.s2c_get_player_info(e);
            }), w.Instance.RegisterNet(13002, e => {
                this.s2c_get_player_role(e);
            }), w.Instance.RegisterNet(11007, e => {
                this.s2c_update_wx_data(e);
            }), w.Instance.RegisterNet(11005, e => {
                this.s2c_refresh_player_attr(e);
            }), w.Instance.RegisterNet(15006, e => {
                this.s2c_watch_ad(e);
            }), w.Instance.RegisterNet(15015, e => {
                this.s2c_relive_get(e);
            }), w.Instance.RegisterNet(15013, e => {
                this.s2c_relive_info(e);
            }), w.Instance.RegisterNet(10004, e => {
                this.s2c_update_banner(e);
            }), w.Instance.RegisterNet(11009, e => {
                this.s2c_update_shen_shi(e);
            }), w.Instance.RegisterNet(18001, e => {
                this.s2c_tip(e);
            }), w.Instance.RegisterNet(15023, e => {
                this.s2c_get_reward_once2(e);
            }), w.Instance.RegisterNet(11010, e => {
                this.s2c_box_reward(e);
            }), w.Instance.RegisterNet(10005, e => {
                this.s2c_is_new(e);
            }), w.Instance.RegisterNet(12042, e => {
                this.s2c_pve_food_info(e);
            }), w.Instance.RegisterNet(15061, e => {
                this.s2c_dia_info(e);
            }), w.Instance.RegisterNet(17014, e => {
                this.s2c_friend_pvp_invite(e);
            }), w.Instance.RegisterNet(15060, e => {
                this.s2c_yxdq_cost(e);
            }), w.Instance.RegisterNet(15067, e => {
                this.s2c_ad_res_index_forever(e);
            }), w.Instance.RegisterNet(15070, e => {
                this.s2c_get_reward_nolimit(e);
            }), w.Instance.RegisterNet(11020, e => {
                this.s_get_kb_url(e);
            }), w.Instance.RegisterNet(10008, e => {
                this.s2c_clean_account(e);
            }), tg.Instance, eg.Instance;
        }
        s2c_clean_account(e) {
            e && e.code && le.Instance.exitGame();
        }
        s_get_kb_url(e) {
            e && e.url && le.Instance.openUrl(e.url);
        }
        s2c_get_reward_nolimit(e) {
            e && e.reward && e.reward.length > 0 && d.Instance.Send(a.UIShowPrize_Open, e.reward);
        }
        s2c_ad_res_index_forever(e) {
            1 == e.type && (1 == e.act && d.Instance.Send(a.UIGameMain_UpdateDesk, e.index, e.info), 
            2 == e.act && (e.reward && e.reward.length > 0 && d.Instance.Send(a.UIShowPrize_Open, e.reward), 
            d.Instance.Send(a.UIGameMain_UpdateDesk, e.index, e.info)));
        }
        s2c_yxdq_cost(e) {
            1 == e.type && (1 == e.act && d.Instance.Send(a.UISevenDay_Updata, e.cost), 2 == e.act && d.Instance.Send(a.UISevenDay_Common, e.code)), 
            2 == e.type && (1 == e.act && d.Instance.Send(a.UIGetFreeSkin_Updata, e.cost), 2 == e.act && d.Instance.Send(a.UIGetFreeSkin_Common, e.code));
        }
        s2c_name_url(e) {
            null != e && (console.log("s2c_name_url data.txurl" + e.txurl), console.log("s2c_name_url data.name" + e.name), 
            le.Instance.UserInfo.avatarUrl = e.txurl, le.Instance.UserInfo.nickName = e.name);
        }
        s2c_is_new(e) {
            null != e && (s.isNewPlayer = 1 == e.is_new);
        }
        s2c_pve_food_info(e) {}
        s2c_dia_info(e) {}
        s2c_friend_pvp_invite(e) {
            eg.Instance.isOpen && d.Instance.Send(a.UIFightInvite_Open, e);
        }
        s2c_box_reward(e) {
            if (null != e && null != e.reward) {
                let t = [];
                for (let i = 0; i < e.reward.length; i++) {
                    const s = e.reward[i];
                    if (-1 == s.boxid) d.Instance.Send(a.UIShowPrize_SetSPPrize, s.reward); else if (ig.Instance.isOpen) ig.Instance.cacheReward = s.reward; else if (Du.Instance.isOpen) Du.Instance.cacheReward = s.reward; else if (s.reward && s.reward.length > 0) for (let e = 0; e < s.reward.length; e++) t.push(s.reward[e]);
                }
                t && t.length > 0 && d.Instance.Send(a.UIShowPrize_Open, t);
            }
        }
        s2c_get_reward_once2(e) {
            s.loginReward = !1, 1 == e.code && (e.count > 0 || (s.loginReward = !0, !s.isTTPlatform || 11014 != s.sceneID && 11004 != s.sceneID || w.Instance.GetNetMsgData("c2s_get_reward_once2").Send({
                type: 2
            })));
        }
        s2c_tip(e) {
            null != e && d.Instance.Send(a.UIScrollTextModel_Open, e.msg);
        }
        s2c_update_shen_shi(e) {
            null != e && 1 == e.code && (Z.Instance.provinceID = e.shen, Z.Instance.cityID = e.shi, 
            Z.Instance.changePostime = e.sstime);
        }
        s2c_update_banner(t) {
            if (null != t) {
                if (le.Instance.bannerTime = t.banner, le.Instance.gotoGameRatio = t.watchskip, 
                le.Instance.switchAD = t.allswatch, le.Instance.switchShare = t.shareswatch, le.Instance.gotoGameRatioB = t.watchskipZTL, 
                B.Instance.SetADData(t), s.TaoLuConfig[e.FightBannerTime] = 0, s.TaoLuConfig[e.FightBannerSpaceTime] = 0, 
                s.TaoLuConfig[e.FightBannerCount] = 2, s.TaoLuConfig[e.FightDeadCP] = 80, s.TaoLuConfig[e.OpenBList] = 1, 
                t.kv) for (var i = 0; i < t.kv.length; i++) {
                    var n = t.kv[i];
                    switch (n.id) {
                      case e.FightBannerTime:
                        s.TaoLuConfig[e.FightBannerTime] = n.num;
                        break;

                      case e.FightBannerSpaceTime:
                        s.TaoLuConfig[e.FightBannerSpaceTime] = n.num;
                        break;

                      case e.FightBannerCount:
                        s.TaoLuConfig[e.FightBannerCount] = n.num;
                        break;

                      case e.FightDeadCP:
                        s.TaoLuConfig[e.FightDeadCP] = n.num;
                        break;

                      case e.OpenBList:
                        s.TaoLuConfig[e.OpenBList] = n.num;
                        break;

                      case e.NOBanner:
                        s.TaoLuConfig[e.NOBanner] = n.num;
                        break;

                      case e.NOVideo:
                        s.TaoLuConfig[e.NOVideo] = n.num;
                    }
                }
                s.isWXPlatform && B.Instance.CheckAddBList(0), 1 == le.Instance.GetBannerType() && E.Instance.SaveKey(le.Instance.storagelocalmlkgKey, "open"), 
                console.log("广告设置： ", t), console.log("TaoLuConfig" + JSON.stringify(s.TaoLuConfig));
            }
        }
        s2c_relive_info(e) {
            null != e && (Z.Instance.reliveCurGet = e.get, Z.Instance.reliveLimit = e.limit);
        }
        s2c_relive_get(e) {
            1 != e.code ? (console.log("12004 errorCode", e.code), d.Instance.Send(a.UIGameTipsModel_SetTips, "今日领取已达上限,完成一场战斗上限+10", 1500)) : w.Instance.GetNetMsgData("c2s_relive_info").Send({});
        }
        s2c_watch_ad(e) {
            le.Instance.showInciteADCount = null == e ? 0 : e.count, console.log("视频观看次数", le.Instance.showInciteADCount);
        }
        s2c_update_wx_data(e) {}
        s2c_refresh_player_attr(e) {
            Z.Instance.UpdatePlayerAttrs(e.attrs);
        }
        s2c_get_player_role(e) {
            Z.Instance.UpdateHaveHero(e.role_list);
        }
        s2c_get_player_info(e) {
            if (console.log("s2c_get_player_info", e), d.Instance.Send(a.UIGameTipsModel_Close), 
            s.isQQPlatform) {
                var t = {
                    role_id: e.id,
                    create_time: new Date().getTime() / 1e3
                };
                le.Instance.api.cspsdk.getDyb().roleData(t, function() {}), le.Instance.api.cspsdk.getDyb().uploginData(t, function() {});
            }
            if (s.playerID = e.id, s.kbcount = e.kbcount, s.isGetPlayerInfo = !0, console.log("s2c_get_player_info playerID ", s.playerID), 
            0 != s.waitJoinRoom) {
                var i = s.waitJoinRoom;
                Laya.timer.loop(200, this, this.waitJoinRoom, [ i ]), s.waitJoinRoom = 0;
            }
            if (Z.Instance.UpdatePlayerData(e), null != w.Instance.onOnceConnetSucess && (w.Instance.onOnceConnetSucess(), 
            w.Instance.onOnceConnetSucess = null), 0 == e.shen && e.shi, s.isTopOnPlatform) {
                let e = "玩家" + s.playerID;
                le.Instance.UserInfo.nickName = e, w.Instance.GetNetMsgData("c2s_update_wx_data").Send({
                    name: e,
                    txurl: "",
                    sex: 3,
                    client_version: s.version
                });
            }
        }
        s2c_game_loaded(e) {}
        s2c_register(e) {}
        s2c_login(e) {
            if (Tm.Instance, 1 != e.code) return d.Instance.Send(a.UIGameTipsModel_Close), void (1013 == e.code ? s.is4399H5Platform && (d.Instance.Send(a.UIGameTipsModel_Close), 
            d.Instance.Send(a.UIGameExit_Open, !1), s.other_login = !0) : 1014 == e.code ? d.Instance.Send(a.UIConfirm_Open, 0, 0, "账号异常，请联系平台处理！(UID: " + e.id + ")") : d.Instance.Send(a.UIConfirm_Open, 0, 0, "登录失败," + (1012 == e.code ? "版本过低,请升级版本！" : "错误码:" + e.code) + (e.id > 0 ? "(UID: " + e.id + ")" : "")));
            if (s.isLogin || w.Instance.GetNetMsgData("c2s_watch_ad_upload").Send({
                type: 1001
            }), s.isLogin = !0, s.isGetPlayerInfo = !1, le.Instance.bannerTime = e.banner, le.Instance.gotoGameRatio = e.watchskip, 
            1 == le.Instance.GetBannerType() && E.Instance.SaveKey(le.Instance.storagelocalmlkgKey, "open"), 
            Am.Instance.uiControl && Am.Instance.uiControl.isOpen && s.isClickLoginBtn && Am.Instance.OnNextSteup(), 
            s.other_login = s.is4399H5Platform && e && 1013 == e.code, s.fixMisleadAD && w.Instance.GetNetMsgData("c2s_ertiao").Send({}), 
            Laya.Browser.onAndroid && Laya.Browser.window.PlatformClass) {
                console.log("安卓设备,反射方式获取ID");
                var t = Laya.Browser.window.PlatformClass.createClass("demo.DeviceIdUtil");
                if (null != t && s.isHaveAd) {
                    if (!s.isTopOnPlatform) {
                        var i = t.call("getPlayerName");
                        if (null != i && (le.Instance.UserInfo.nickName = i), !s.isOppoGameCenterPlatform && !s.isDYVivoPlatform) {
                            var n = t.call("getPlayerImg");
                            null != n && (le.Instance.UserInfo.avatarUrl = n);
                        }
                    }
                    console.log("玩家信息1" + le.Instance.UserInfo.nickName + "++++" + le.Instance.UserInfo.avatarUrl + "++++3"), 
                    w.Instance.GetNetMsgData("c2s_update_wx_data").Send({
                        name: le.Instance.UserInfo.nickName,
                        txurl: le.Instance.UserInfo.avatarUrl,
                        sex: 3,
                        client_version: s.version
                    });
                }
            }
            if (d.Instance.Send(a.UIGameTipsModel_SetTips, "正在获取角色信息,请稍后..."), w.Instance.GetNetMsgData("c2s_get_player_info").Send({}), 
            w.Instance.GetNetMsgData("c2s_get_player_role").Send({}), s.isClickLoginBtn && w.Instance.GetNetMsgData("c2s_battle_recover").Send({}), 
            w.Instance.GetNetMsgData("c2s_watch_ad").Send({
                type: 0
            }), w.Instance.GetNetMsgData("c2s_relive_info").Send({}), w.Instance.GetNetMsgData("c2s_pve_food_info").Send({}), 
            w.Instance.GetNetMsgData("c2s_dia_info").Send({}), w.Instance.GetNetMsgData("c2s_get_friend_online").Send({}), 
            w.Instance.GetNetMsgData("c2s_get_friend_list").Send({
                index: 1
            }), w.Instance.GetNetMsgData("c2s_get_offline_ids").Send({}), hm.Instance, Pm.Instance, 
            ag.Instance, og.Instance, fu.Instance, Xp.Instance, Km.Instance, qm.Instance, zm.Instance, 
            au.Instance, tm.Instance, nm.Instance, Ig.Instance, pm.Instance, fg.Instance, Ym.Instance, 
            dg.Instance, dp.Instance, Vp.Instance, cg.Instance, Fm.Instance, vg.Instance, hg.Instance, 
            sg.Instance, de.Instance, Rp.Instance, Ie.Instance, ig.Instance, Gm.Instance, Em.Instance, 
            Rm.Instance, rm.Instance, gp.Instance, Jm.Instance, yp.Instance, Bu.Instance, Mu.Instance, 
            Qm.Instance, rg.Instance, jm.Instance, Tu.Instance, Fu.Instance, Ou.Instance, Ju.Instance, 
            Pu.Instance, Cu.Instance, Xu.Instance, Tm.Instance, Zm.Instance, du.Instance, Hp.Instance, 
            Du.Instance, vm.Instance.getWingInfo(), _g.Instance, gg.Instance, Jp.Instance.Init(), 
            Qp.Instance, ug.Instance, mg.Instance, zp.Instance, km.Instance, Su.Instance, Ep.Instance, 
            ym.Instance, Xm.Instance, Wm.Instance, lg.Instance, Vm.Instance, ng.Instance, Eu.Instance, 
            Lu.Instance, ju.Instance, s.isTTPlatform && w.Instance.GetNetMsgData("c2s_get_reward_once2").Send({
                type: 1
            }), null != w.Instance.cacheSendMsg && w.Instance.cacheSendMsg.length > 0) {
                for (var o = 0; o < w.Instance.cacheSendMsg.length; o++) {
                    var l = w.Instance.cacheSendMsg[o];
                    l.AwesomeData.id && l.AwesomeData.msgData && l.data && w.Instance.DoSend(l.AwesomeData.id, l.AwesomeData.msgData, l.data);
                }
                w.Instance.cacheSendMsg = [];
            }
            s.isChangeAccounting && d.Instance.Send(a.UILoginModel_Open);
        }
        s2c_get_openid(e) {
            if (null == e) return w.Instance.stopConnect(), void console.log("玩家信息获取失败");
            le.Instance.api.aldSendOpenid(e.openid), s.isWXPlatform && B.Instance.SetUsetInfo(e.openid), 
            console.log("S1002 playerId: " + JSON.stringify(e)), s.loginToken = e.openid, s.session_key = e.sessionkey, 
            E.Instance.init(le.Instance.api, e.openid), d.Instance.Send(a.UIGameTipsModel_SetTips, "正在获取角色信息,请稍后...");
            var t = parseInt(s.inviterID + "");
            if (isNaN(t) && (t = 0), w.Instance.GetNetMsgData("c2s_login").Send({
                token: s.loginToken,
                platformID: 1,
                channelID: "none",
                deviceIMEI: "none",
                inviteID: t,
                appsid: s.playersid,
                appuid: s.loginToken
            }), le.Instance.IsGetUserInfo) {
                s.isWXPlatform && B.Instance.SetUsetAuth();
                var i = parseInt(le.Instance.UserInfo.gender);
                (isNaN(i) || 0 == i) && (i = 3), console.log("玩家信息2" + le.Instance.UserInfo.nickName + "++++" + le.Instance.UserInfo.avatarUrl + "++++3"), 
                w.Instance.GetNetMsgData("c2s_update_wx_data").Send({
                    name: le.Instance.UserInfo.nickName,
                    txurl: le.Instance.UserInfo.avatarUrl,
                    sex: i,
                    client_version: s.version
                });
            } else Laya.timer.once(1e3, this, this.SendLogin);
        }
        init() {
            for (var e = Laya.Browser.window.location.search.substring(1).split("&"), t = 0; t < e.length; t++) {
                var i = e[t].split("=");
                console.log(i), "account" == i[0] && (s.account = i[1]), "gameId" == i[0] && (s.gameId = Number(i[1])), 
                "nick" == i[0] && (s.nick = decodeURI(i[1])), "userId" == i[0] && (s.userId = i[1]), 
                "userName" == i[0] && (s.userName = decodeURI(i[1])), "time" == i[0] && (s.time = i[1]), 
                "sign" == i[0] && (s.sign = i[1]), "pc" == i[0] && (s.pc = Number(i[1])), "device" == i[0] && (s.device = i[1]), 
                "addiction" == i[0] && (s.addiction = i[1]), "shareId" == i[0] && (s.shareId = Number(i[1])), 
                "extra" == i[0] && (s.extra = Number(i[1]));
            }
        }
        canshowInterVideo() {
            console.log("ttad1 canshowInterVideo "), console.log("ttad1 canshowInterVideo " + !Pm.Instance.isOpen + " " + le.Instance.api && !le.Instance.api.isInterVideoShowing), 
            !s.xiaomiAppAdSwich.insertVideoSwitch || Pm.Instance.isOpen || Am.Instance.isOpen || !le.Instance.api || le.Instance.api.isInterVideoShowing || le.Instance.showVideoInterXiaomi();
        }
        Main_233BannerCheck() {
            if (console.log("ttad Main_233BannerCheck  " + s.canshow233Banner), s.canshow233Banner && s.is233Platform) {
                var e = Laya.Browser.window.PlatformClass.createClass("demo.AdSdkUtil");
                null != e && (s.is233mlcsjPlatform ? e.call("hideTTBanner") : e.call("hide233Banner"));
            }
        }
    }
    yg.instance = null, Laya.Browser.window.GameMain = yg, s.isTestVersion = 0, s.version = 63, 
    s.DebugLv = 0, yg.Instance.Init();
}();