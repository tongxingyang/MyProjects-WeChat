var e, t, n = require("../@babel/runtime/helpers/interopRequireDefault")(require("../@babel/runtime/helpers/typeof")), i = "[UMENG] -- ", r = (e = null, 
t = !1, function() {
    return null === e && (e = new o()), e;
});

function o() {
    this.setDebug = function(e) {
        t = e;
    }, this.d = function() {
        if (t) try {
            "string" == typeof arguments[0] && (arguments[0] = i + arguments[0]), console.debug.apply(console, arguments);
        } catch (e) {}
    }, this.i = function() {
        try {
            if (t) try {
                "string" == typeof arguments[0] && (arguments[0] = i + arguments[0]), console.info.apply(console, arguments);
            } catch (e) {}
        } catch (e) {}
    }, this.e = function() {
        if (t) try {
            "string" == typeof arguments[0] && (arguments[0] = i + arguments[0]), console.error.apply(console, arguments);
        } catch (e) {}
    }, this.w = function() {
        if (t) try {
            "string" == typeof arguments[0] && (arguments[0] = i + arguments[0]), console.warn.apply(console, arguments);
        } catch (e) {}
    }, this.v = function() {
        if (t) try {
            "string" == typeof arguments[0] && (arguments[0] = i + arguments[0]), console.log.apply(console, arguments);
        } catch (e) {}
    }, this.t = function() {
        if (t) try {
            console.table.apply(console, arguments);
        } catch (e) {}
    }, this.tip = function() {
        try {
            "string" == typeof arguments[0] && (arguments[0] = i + arguments[0]), console.log.apply(console, arguments);
        } catch (e) {}
    }, this.tip_w = function(e) {
        try {
            console.log("%c " + i + e, "background:red; padding: 4px; padding-right: 8px; border-radius: 4px; color: #fff;");
        } catch (e) {}
    }, this.err = function() {
        try {
            "string" == typeof arguments[0] && (arguments[0] = i + arguments[0]), console.error.apply(console, arguments);
        } catch (e) {}
    };
}

var s = function(e, t) {
    return (s = Object.setPrototypeOf || {
        __proto__: []
    } instanceof Array && function(e, t) {
        e.__proto__ = t;
    } || function(e, t) {
        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
    })(e, t);
};

function a(e, t) {
    function n() {
        this.constructor = e;
    }
    s(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, 
    new n());
}

var u, c, f = new (function(e) {
    function t() {
        return null !== e && e.apply(this, arguments) || this;
    }
    return a(t, e), t.prototype.getSdkType = function() {
        return "wxgamemp";
    }, t.prototype.getPlatform = function() {
        return "wx";
    }, t;
}(function() {
    function e() {}
    return e.prototype.setStorage = function(e, t, n) {
        wx.setStorage({
            key: e,
            data: t,
            success: function() {
                "function" == typeof n && n(!0);
            },
            fail: function() {
                "function" == typeof n && n(!1);
            }
        });
    }, e.prototype.getStorage = function(e, t) {
        wx.getStorage({
            key: e,
            success: function(e) {
                "function" == typeof t && t(e.data);
            },
            fail: function(n) {
                r().w(e + ": " + n.errMsg), "function" == typeof t && t();
            }
        });
    }, e.prototype.removeStorage = function(e, t) {
        wx.removeStorage({
            key: e,
            success: function() {
                "function" == typeof t && t(!0);
            },
            fail: function() {
                "function" == typeof t && t(!1);
            }
        });
    }, e.prototype.getSystemInfo = function(e) {
        wx.getSystemInfo({
            success: function(t) {
                var n = {
                    model: t.model,
                    brand: t.brand,
                    pixelRatio: t.pixelRatio,
                    screenWidth: t.screenWidth,
                    screenHeight: t.screenHeight,
                    fontSizeSetting: t.fontSizeSetting,
                    platform: t.platform,
                    platformVersion: t.version,
                    platformSDKVersion: t.SDKVersion,
                    language: t.language,
                    deviceName: t.model,
                    OSVersion: t.system,
                    resolution: ""
                }, i = t.system.split(" ");
                Array.isArray(i) && (n.OS = i[0]), i = Math.round(t.screenWidth * t.pixelRatio), 
                t = Math.round(t.screenHeight * t.pixelRatio), n.resolution = t < i ? i + "*" + t : t + "*" + i, 
                "function" == typeof e && e(n);
            },
            fail: function() {
                "function" == typeof e && e();
            }
        });
    }, e.prototype.getDeviceInfo = function(e) {
        "function" == typeof e && e("");
    }, e.prototype.checkNetworkAvailable = function(e) {
        wx.getNetworkType({
            success: function(t) {
                "function" == typeof e && e(t && "none" !== t.networkType);
            },
            fail: function() {
                "function" == typeof e && e(!1);
            }
        });
    }, e.prototype.getNetworkInfo = function(e) {
        wx.getNetworkType({
            success: function(t) {
                "function" == typeof e && e({
                    networkAvailable: "none" !== t.networkType,
                    networkType: t.networkType
                });
            },
            fail: function() {
                "function" == typeof e && e();
            }
        });
    }, e.prototype.getDeviceId = function(e) {
        e("");
    }, e.prototype.getAdvertisingId = function(e) {
        "function" == typeof e && e("");
    }, e.prototype.onNetworkStatusChange = function(e) {
        wx.onNetworkStatusChange(function(t) {
            "function" == typeof e && e(t.isConnected);
        });
    }, e.prototype.request = function(e) {
        var t = e.success, n = e.fail, i = !1, r = null;
        e.success = function(e) {
            i || (r && clearTimeout(r), "function" == typeof t && t(e));
        }, e.fail = function() {
            i || (r && clearTimeout(r), "function" == typeof n && n(!1));
        }, wx.request(e), r = setTimeout(function() {
            r && clearTimeout(r), i = !0, "function" == typeof n && n(i);
        }, e.timeout || 5e3);
    }, e.prototype.getSdkType = function() {
        return "wxmp";
    }, e.prototype.getPlatform = function() {
        return "wx";
    }, e.prototype.connectSocket = function(e) {
        wx.connectSocket(e);
    }, e.prototype.closeSocket = function(e) {
        wx.closeSocket(e);
    }, e.prototype.sendSocketMessage = function(e) {
        wx.sendSocketMessage(e);
    }, e.prototype.onSocketOpen = function(e) {
        wx.onSocketOpen(e);
    }, e.prototype.onSocketClose = function(e) {
        wx.onSocketClose(e);
    }, e.prototype.onSocketMessage = function(e) {
        wx.onSocketMessage(e);
    }, e.prototype.onSocketError = function(e) {
        wx.onSocketError(e);
    }, e.prototype.getClipboard = function(e) {
        try {
            wx.getClipboardData({
                success: function(t) {
                    "function" == typeof e && e(t.data);
                },
                fail: function() {
                    "function" == typeof e && e("");
                }
            });
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            r.e("读取clipboard发生错误", e);
        }
    }, e.prototype.showModal = function(e) {
        try {
            wx.showModal(e);
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            r.e("展示Modal时发生错误", e);
        }
    }, e.prototype.showToast = function(e) {
        try {
            wx.showToast(e);
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            r.e("showToast error", e);
        }
    }, e.prototype.getUserInfo = function(e) {
        var t = {
            fail: function() {
                e && e();
            },
            success: function(t) {
                t && t.userInfo && (t = t.userInfo, e && e({
                    avatar: t.avatarUrl,
                    nickName: t.nickName,
                    gender: t.gender,
                    country: t.country,
                    province: t.province,
                    city: t.city,
                    language: t.language
                }));
            }
        };
        try {
            wx.getSetting({
                success: function(e) {
                    e.authSetting["scope.userInfo"] && wx.getUserInfo(t);
                },
                fail: function() {
                    e();
                }
            });
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            r.e("getUserInfo error", e);
        }
    }, e.prototype.getAppInfoSync = function() {
        var e;
        return wx.getAccountInfoSync ? {
            appId: (e = (e = wx.getAccountInfoSync()) && e.miniProgram ? e.miniProgram : {}).appId,
            appEnv: e.envVersion,
            appVersion: e.version
        } : {};
    }, e.prototype.onShareAppMessage = function(e) {
        wx.onShareAppMessage(e);
    }, e.prototype.shareAppMessage = function(e) {
        wx.shareAppMessage(e);
    }, e;
}()))(), p = {
    SESSION_INTERVAL: 3e4,
    LOG_URL: "https://umini.shujupie.com/wxm_logs",
    GET_OPENID_URL: "https://umini.shujupie.com/uminiprogram_logs/wx/getuut",
    USERINFO_URL: "https://umini.shujupie.com/uminiprogram_logs/comm/uif",
    DEVICE_INFO_KEY: "device_info",
    ADVERTISING_ID: "mobile_ad_id",
    ANDROID_ID: "android_id",
    CURRENT_SESSION: "current_session",
    SESSION_PAUSE_TIME: "session_pause_time",
    EVENT_SEND_DEFAULT_INTERVAL: 15e3,
    EVENT_LAST_SEND_TIME: "last_send_time",
    MAX_EVENTID_LENGTH: 128,
    MAX_PROPERTY_KEY_LENGTH: 256,
    MAX_PROPERTY_KEYS_COUNT: 100,
    REPORT_POLICY: "report_policy",
    REPORT_INTERVAL_TIME: "report_interval_time",
    REPORT_POLICY_START_SEND: "1",
    REPORT_POLICY_INTERVAL: "6",
    IMPRINT: "imprint",
    SEED_VERSION: "1.0.0",
    IMPL_VERSION: "2.4.11",
    ALIPAY_AVAILABLE_VERSION: "10.1.52",
    SHARE_PATH: "um_share_path",
    SHARES: "shares",
    REQUESTS: "requests",
    UUID: "um_uuid",
    UUID_SUFFIX: "ud",
    OPENID: "um_od",
    UNIONID: "um_unid",
    ALIPAYID: "um_alipayid",
    USERID: "um_userid",
    PROVIDER: "um_provider",
    SWANID: "um_swanid",
    ANONYMOUSID: "um_anonymousid",
    LAUNCH_OPTIONS: "LAUNCH_OPTIONS",
    UM_SSRC: "_um_ssrc",
    USER_INFO: "user_info",
    IS_ALIYUN: !1,
    ALIYUN_URL: "serverless.huoban.youmeng.network.forward"
}, d = {
    isNumber: function(e) {
        return !Number.isNaN(parseInt(e, 10));
    },
    compareVersion: function(e, t) {
        for (var n = String(e).split("."), i = String(t).split("."), r = 0; r < Math.max(n.length, i.length); r++) {
            var o = parseInt(n[r] || 0, 10), s = parseInt(i[r] || 0, 10);
            if (s < o) return 1;
            if (o < s) return -1;
        }
        return 0;
    },
    getRandomStr: function(e) {
        for (var t = "", n = [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ], i = 0; i < Number(e); i++) t += n[Math.round(Math.random() * (n.length - 1))];
        return t;
    },
    clone: function(e) {
        return JSON.parse(JSON.stringify(e));
    },
    startsWith: function(e, t) {
        return !(!e || !t || 0 === t.length || t.length > e.length) && e.substr(0, t.length) === t;
    },
    endsWith: function(e, t) {
        return !(!t || 0 === e.length || t.length > e.length) && e.substring(e.length - t.length) === t;
    },
    assign: function(e) {
        if (null == e) throw new TypeError("Cannot convert undefined or null to object");
        for (var t = Object(e), n = 1; n < arguments.length; n++) {
            var i = arguments[n];
            if (i) for (var r in i) Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r]);
        }
        return t;
    },
    deepEqual: function e(t, i) {
        if (t === i) return !0;
        if (t && "object" == (0, n.default)(t) && i && "object" == (0, n.default)(i)) {
            if (Object.keys(t).length !== Object.keys(i).length) return !1;
            for (var r in t) {
                if (Object.prototype.hasOwnProperty.call(i, r)) return !1;
                if (!e(t[r], i[r])) return !1;
            }
            return !0;
        }
        return !1;
    },
    trimStart: function(e, t) {
        return e ? ("string" == typeof t && t.length ? (t = new RegExp("^" + t + "*"), e = e.replace(t, "")) : e = e.replace(/^s*/, ""), 
        e) : "";
    },
    trimEnd: function(e, t) {
        if (!e) return "";
        var n, i;
        if ("string" == typeof t && t.length) {
            for (n = new RegExp(t), i = e.length; n.test(e.charAt(i)); ) --i;
            return e.slice(0, i + 1);
        }
        for (n = /s/, i = e.length - 1; n.test(e.charAt(i)); ) --i;
        return e.slice(0, i + 1);
    }
}, l = function(e) {
    function t() {
        return null !== e && e.apply(this, arguments) || this;
    }
    return a(t, e), t.prototype.getOpenIdAsync = function(e, t) {
        var n = this;
        wx.login({
            success: function(i) {
                i.code ? f.request({
                    url: p.GET_OPENID_URL,
                    method: "GET",
                    data: {
                        key: e,
                        code: i.code
                    },
                    success: function(e) {
                        if (e && 200 === e.statusCode && e.data && e.data.data) return e = e.data.data, 
                        n.setOpenid(e.oid), n.setUnionid(e.uid), t && t(!0);
                        t && t();
                    },
                    fail: function(e) {
                        r().v("wx request failed...", e), t && t();
                    }
                }) : t && t();
            },
            fail: function() {
                t && t();
            }
        });
    }, t;
}(function(e) {
    function t() {
        var t = null !== e && e.apply(this, arguments) || this;
        return t._openid = "", t._unionid = "", t._useOpenid = !1, t;
    }
    return a(t, e), t.prototype.initID = function(e) {
        var t = this;
        t._idType = t._useOpenid ? "openid" : "uuid", r().v("id type: ", t._idType), f.getStorage(p.UNIONID, function(e) {
            t._unionid = e;
        }), this._useOpenid ? f.getStorage(p.OPENID, function(n) {
            t._openid = n, e && e();
        }) : e && e();
    }, t.prototype.setUseOpenid = function(e) {
        this._useOpenid = e;
    }, t.prototype.setOpenid = function(e) {
        !this._openid && e && (this._openid = e, f.setStorage(p.OPENID, e));
    }, t.prototype.setUnionid = function(e) {
        !this._unionid && e && (this._unionid = e, f.setStorage(p.UNIONID, e));
    }, t.prototype.getIdTracking = function() {
        var t = e.prototype.getIdTracking.call(this);
        return this._openid && (t.openid = this._openid), this._unionid && (t.unionid = this._unionid), 
        this._userid && (t.userid = this._userid), t;
    }, t.prototype.getId = function() {
        return this._useOpenid ? this._openid : this._uuid;
    }, t;
}(function() {
    function e() {
        this._uuid = "", this._userid = "", this._provider = "", this._idType = "";
    }
    return e.prototype.createUUID = function() {
        return d.getRandomStr(10) + Date.now() + d.getRandomStr(7) + p.UUID_SUFFIX;
    }, e.prototype.initUUID = function(e) {
        var t = this;
        f.getStorage(p.UUID, function(n) {
            n ? t._uuid = n : (t._uuid = t.createUUID(), f.setStorage(p.UUID, t._uuid)), e && e(n);
        });
    }, e.prototype.initUserid = function() {
        var e = this;
        f.getStorage(p.USERID, function(t) {
            !e._userid && t && (e._userid = t, r().v("userId is ", t));
        }), f.getStorage(p.PROVIDER, function(t) {
            !e._provider && t && (e._provider = t, r().v("provider is ", t));
        });
    }, e.prototype.init = function(e) {
        var t = this;
        t.initUUID(function() {
            t.initUserid(), t.initID(e);
        });
    }, e.prototype.setUserid = function(e, t) {
        !this._userid && e && (this._userid = e, this._provider = t, f.setStorage(p.USERID, e), 
        f.setStorage(p.PROVIDER, t));
    }, e.prototype.getUserId = function() {
        return this._userid;
    }, e.prototype.getProvider = function() {
        return this._provider;
    }, e.prototype.getIdType = function() {
        return this._idType;
    }, e.prototype.getIdTracking = function() {
        var e = {};
        return this._uuid && (e.uuid = this._uuid), this._userid && (e.userid = this._userid), 
        e;
    }, e;
}())), h = function() {
    return u = u || new l();
}, g = (c = u = null, function() {
    return c = c || new v();
});

function v() {
    var e = {};
    this.useOpenid = function() {
        return !!e.useOpenid;
    }, this.useSwanid = function() {
        return !!e.useSwanid;
    }, this.autoGetOpenid = function() {
        return !!e.autoGetOpenid;
    }, this.appKey = function() {
        return e.appKey;
    }, this.uploadUserInfo = function() {
        return e.uploadUserInfo;
    }, this.enableVerify = function() {
        return e.enableVerify;
    }, this.set = function(t) {
        e = t;
    }, this.get = function() {
        return e;
    }, this.setItem = function(t, n) {
        e[t] = n;
    }, this.getItem = function(t) {
        return e[t];
    };
}

var y = {
    FETCH_URL: "https://ucc.umeng.com/v1/mini/fetch",
    ABLOG_URL: "https://pslog.umeng.com/mini_ablog",
    SDK_VERSION: "2.4.11",
    MOBILE_NETWORK_NONE: "none",
    MOBILE_NETWORK_2G: "2g",
    MOBILE_NETWORK_3G: "3g",
    MOBILE_NETWORK_4G: "4g",
    MOBILE_NETWORK_5G: "5g",
    MOBILE_NETWORK_WIFI: "wifi",
    IMPRINT: "imprint"
}, _ = {}, m = Array.isArray;

_.isArray = m || function(e) {
    return "[object Array]" === toString.call(e);
}, _.isObject = function(e) {
    return e === Object(e) && !_.isArray(e);
}, _.isEmptyObject = function(e) {
    if (_.isObject(e)) {
        for (var t in e) if (hasOwnProperty.call(e, t)) return !1;
        return !0;
    }
    return !1;
}, _.isUndefined = function(e) {
    return void 0 === e;
}, _.isString = function(e) {
    return "[object String]" === toString.call(e);
}, _.isDate = function(e) {
    return "[object Date]" === toString.call(e);
}, _.isNumber = function(e) {
    return "[object Number]" === toString.call(e);
}, _.each = function(e, t, n) {
    if (null != e) {
        var i = {}, r = Array.prototype.forEach;
        if (r && e.forEach === r) e.forEach(t, n); else if (e.length === +e.length) {
            for (var o = 0, s = e.length; o < s; o++) if (o in e && t.call(n, e[o], o, e) === i) return;
        } else for (var a in e) if (hasOwnProperty.call(e, a) && t.call(n, e[a], a, e) === i) return;
    }
}, _.buildQuery = function(e, t) {
    var n, i, r = [];
    return void 0 === t && (t = "&"), _.each(e, function(e, t) {
        n = encodeURIComponent(e.toString()), i = encodeURIComponent(t), r[r.length] = i + "=" + n;
    }), r.join(t);
}, _.JSONDecode = function(e) {
    if (e) {
        try {
            return JSON.parse(e);
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            console.error("JSONDecode error", e);
        }
        return null;
    }
}, _.JSONEncode = function(e) {
    try {
        return JSON.stringify(e);
    } catch (e) {
        e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
        console.error("JSONEncode error", e);
    }
};

var S, I, E, O, A = {
    stringify: function(e) {
        if (e) try {
            return JSON.stringify(e);
        } catch (e) {}
        return "";
    },
    parse: function(e) {
        if (e) try {
            return JSON.parse(e);
        } catch (e) {}
        return null;
    },
    parseToArray: function(e) {
        if (e) try {
            return JSON.parse(e);
        } catch (e) {}
        return [];
    }
}, N = (I = "", E = S = null, O = !1, function() {
    return S = S || new w();
});

function w() {
    this.load = function(e) {
        E ? (f.removeStorage(I), e()) : (I = "um_cache_" + g().appKey(), f.getStorage(I, function(t) {
            E = A.parse(t) || {}, O = !0, f.removeStorage(I), e();
        }));
    }, this.save = function() {
        E && f.setStorage(I, A.stringify(E));
    }, this.set = function(e, t) {
        E && (E[e] = t);
    }, this.get = function(e) {
        return (E || {})[e];
    }, this.remove = function(e) {
        E && E[e] && delete E[e];
    }, this.getAll = function() {
        return E;
    }, this.clear = function() {
        E = null;
    }, this.has = function(e) {
        return !!this.get(e);
    }, this.isLoaded = function() {
        return O;
    };
}

function T(e) {
    if (e.length < 2) return (t = e.charCodeAt(0)) < 128 ? e : t < 2048 ? P(192 | t >>> 6) + P(128 | 63 & t) : P(224 | t >>> 12 & 15) + P(128 | t >>> 6 & 63) + P(128 | 63 & t);
    var t = 65536 + 1024 * (e.charCodeAt(0) - 55296) + (e.charCodeAt(1) - 56320);
    return P(240 | t >>> 18 & 7) + P(128 | t >>> 12 & 63) + P(128 | t >>> 6 & 63) + P(128 | 63 & t);
}

function k(e) {
    var t = [ 0, 2, 1 ][e.length % 3];
    e = e.charCodeAt(0) << 16 | (1 < e.length ? e.charCodeAt(1) : 0) << 8 | (2 < e.length ? e.charCodeAt(2) : 0);
    return [ D.charAt(e >>> 18), D.charAt(e >>> 12 & 63), 2 <= t ? "=" : D.charAt(e >>> 6 & 63), 1 <= t ? "=" : D.charAt(63 & e) ].join("");
}

function R(e) {
    return e.replace(x, T).replace(/[\s\S]{1,3}/g, k);
}

function b(e) {
    switch (e.length) {
      case 4:
        var t = ((7 & e.charCodeAt(0)) << 18 | (63 & e.charCodeAt(1)) << 12 | (63 & e.charCodeAt(2)) << 6 | 63 & e.charCodeAt(3)) - 65536;
        return P(55296 + (t >>> 10)) + P(56320 + (1023 & t));

      case 3:
        return P((15 & e.charCodeAt(0)) << 12 | (63 & e.charCodeAt(1)) << 6 | 63 & e.charCodeAt(2));

      default:
        return P((31 & e.charCodeAt(0)) << 6 | 63 & e.charCodeAt(1));
    }
}

function U(e) {
    var t = e.length, n = t % 4;
    e = (0 < t ? L[e.charAt(0)] << 18 : 0) | (1 < t ? L[e.charAt(1)] << 12 : 0) | (2 < t ? L[e.charAt(2)] << 6 : 0) | (3 < t ? L[e.charAt(3)] : 0);
    return (e = [ P(e >>> 16), P(e >>> 8 & 255), P(255 & e) ]).length -= [ 0, 0, 2, 1 ][n], 
    e.join("");
}

var D = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", L = function(e) {
    for (var t = {}, n = 0, i = e.length; n < i; n++) t[e.charAt(n)] = n;
    return t;
}(D), P = String.fromCharCode, x = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g, M = new RegExp([ "[À-ß][-¿]", "[à-ï][-¿]{2}", "[ð-÷][-¿]{3}" ].join("|"), "g"), C = {
    encode: function(e, t) {
        return t ? R(String(e)).replace(/[+\/]/g, function(e) {
            return "+" == e ? "-" : "_";
        }).replace(/=/g, "") : R(String(e));
    },
    decode: function(e) {
        return function(e) {
            return e.replace(/[\s\S]{1,4}/g, U).replace(M, b);
        }(String(e).replace(/[-_]/g, function(e) {
            return "-" == e ? "+" : "/";
        }).replace(/[^A-Za-z0-9\+\/]/g, ""));
    }
}, V = new function() {
    var e = "", t = this;
    this.set = function(t) {
        e = t;
    }, this.get = function() {
        return e;
    }, this.getImpObj = function() {
        return A.parse(C.decode(e));
    }, this.getItem = function(e) {
        var n = t.getImpObj();
        return n && n[e] || "";
    }, this.load = function() {
        e = N().get(p.IMPRINT);
    }, this.save = function() {
        e && N().set(p.IMPRINT, e);
    };
}(), j = Object.create(null);

function K() {
    this.listeners = {}, this.maxListener = 2;
}

K.prototype.addListener = K.prototype.on = function(e, t) {
    var n = this.listeners;
    n[e] && n[e].length >= this.maxListener ? console.error("监听器的最大数量是%d,您已超出限制", this.maxListener) : n[e] instanceof Array ? -1 === n[e].indexOf(t) && n[e].push(t) : n[e] = [].concat(t);
}, K.prototype.emit = function(e) {
    var t = Array.prototype.slice.call(arguments);
    t.shift();
    var n = this.listeners;
    n[e] instanceof Array && n[e].forEach(function(e) {
        e.apply(null, t);
    });
}, K.prototype.listeners = function(e) {
    return this.listeners[e];
}, K.prototype.setMaxListeners = function(e) {
    this.maxListener = e;
}, K.prototype.removeListener = function(e, t) {
    var n = this.listeners;
    0 <= (t = (n[e] || []).indexOf(t)) && n[e].splice(t, 1);
}, K.prototype.removeAllListener = function(e) {
    this.listeners[e] = [];
}, K.prototype.once = function(e, t) {
    var n = this;
    this.on(e, function i() {
        var r = Array.prototype.slice.call(arguments);
        t.apply(null, r), n.removeListener(e, i);
    });
};

var G = new K(), q = 0, F = Object.create(null), H = null, Y = !1, W = {
    minFetchIntervalSeconds: 43200
};

function J(e) {
    e && _.each(e, function(e) {
        F[e.k] = e;
    });
}

function B() {
    var e = this;
    this.STORAGE_NAME = null, G.on(q, function(t) {
        r().v("云配初始化开始..."), e.init(t);
    });
}

B.prototype = {
    setDefaultValues: function(e) {
        Y && _.isObject(e) && _.each(e, function(e, t) {
            F[t] && F[t].v || (F[t] = {
                v: e
            });
        });
    },
    getValue: function(e) {
        r().v("从配置项中读取 value, 当前配置为: ", F), r().v("待读取的 key : ", e);
        try {
            if (!Y) return;
            var t = F[e] || {};
            return r().v("读取相应配置ing..., 结果为: ", t), _.isNumber(t.e) && _.isNumber(t.g) && (r().v("读取到相应配置, 开始数据上报..."), 
            function(e) {
                var t = {
                    appkey: g().appKey(),
                    sdkType: f.getSdkType(),
                    expId: e && e.e,
                    groupId: e && e.g,
                    clientTs: Date.now(),
                    key: e && e.k,
                    value: e && e.v,
                    umid: h().getId()
                };
                try {
                    f.request({
                        url: y.ABLOG_URL,
                        method: "POST",
                        data: [ t ],
                        success: function(e) {
                            e && 200 === e.statusCode ? r().v("上传数据成功", t) : r().w("ablog 请求成功, 返回结果异常 ", e);
                        },
                        fail: function(e) {
                            r().w("ablog 请求数据错误 ", t, e);
                        }
                    });
                } catch (e) {
                    e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                    r().w("urequest 调用错误", e);
                }
            }(t)), t.v;
        } catch (t) {
            t = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(t);
            r().w("getValue error, key: ", e);
        }
    },
    active: function(e) {
        try {
            if (!Y) return;
            var t, n;
            e && e.params && (t = e.params), e && e.callback && (n = e.callback), r().v("激活配置项: ", t), 
            t ? (r().v("本地已缓存的配置项: ", F), J(t), r().v("合并后的配置项: ", F), n && n(F), r().v("active 结束")) : (r().v("配置项为空!! 读取本地配置..."), 
            f.getStorage(this.STORAGE_NAME, function(e) {
                e ? (J((e = _.JSONDecode(e) || {}).params), r().v("当前本地配置项为: ", F), n && n(F), r().v("active 结束")) : r().v("当前本地配置项为空, 退出激活");
            }));
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            r().w("SDK active 错误", e);
        }
    },
    init: function(e) {
        e.appKey && (H = e.appKey, this.STORAGE_NAME = "um_remote_config_{{" + H + "}}"), 
        H ? Y ? r().w("SDK 已经初始化, 请避免重复初始化") : (Y = !0, this.setOptions(e), this.active()) : r().err("请检查您的小程序 appKey, appKey 不能为空");
    },
    setOptions: function(e) {
        _.isObject(e) && (e = e.minFetchIntervalSeconds, _.isNumber(e) && (W.minFetchIntervalSeconds = Math.max(e, 5)));
    },
    fetch: function(e) {
        if (Y && this.STORAGE_NAME) {
            var t, n;
            e && e.active && (t = e.active), e && e.callback && (n = e.callback);
            var i = this;
            f.getStorage(this.STORAGE_NAME, function(e) {
                var o;
                r().v("开始读缓存 data is ", e), (e = _.JSONDecode(e) || {}).params && e.ts && Date.now() - e.ts < 1e3 * W.minFetchIntervalSeconds ? (r().v("缓存数据存在, 并且本次触发时间距离上次fetch触发时间未超过 fetch 时间间隔, 无需 fetch"), 
                n && n(e.params)) : (o = function(e) {
                    r().v("缓存数据不存在, 构建 fetch body :", e);
                    try {
                        f.request({
                            url: y.FETCH_URL,
                            method: "POST",
                            data: e,
                            success: function(e) {
                                if (e && 200 === e.statusCode && e.data && e.data.cc) {
                                    r().v("fetch 请求成功, 响应数据: ", e.data);
                                    var o = Object.create(null);
                                    _.each(e.data.cc, function(e) {
                                        o[e.k] = e;
                                    });
                                    var s = {
                                        ts: Date.now(),
                                        params: o
                                    };
                                    r().v("开始缓存 fetch 请求的云配置结果..."), f.setStorage(i.STORAGE_NAME, _.JSONEncode(s), function(e) {
                                        r().v("缓存云配置成功, 缓存数据为: ", s), r().v("缓存云配置成功, 成功消息为: ", e), r().v("云配拉取数据是否自动激活: ", t), 
                                        e && t && (r().v("激活云配置..."), i.active({
                                            params: o,
                                            callback: n
                                        }));
                                    });
                                } else r().w("fetch 请求成功,返回结果异常 ", e.data), n && n();
                            },
                            fail: function(t) {
                                r().w("fetch请求数据错误 ", e, t), n && n();
                            }
                        });
                    } catch (e) {
                        e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                        r().w("urequest调用错误", e);
                    }
                }, r().v("开始构建 fetch body"), f.getSystemInfo(function(e) {
                    f.getNetworkInfo(function(t) {
                        t = (t = (t = t || {}).networkType) === y.MOBILE_NETWORK_NONE ? "unknown" : t.toUpperCase(), 
                        j.access = t, function(e, t) {
                            var n = e.brand || "";
                            j.deviceType = "Phone", j.sdkVersion = y.SDK_VERSION, j.appkey = g().appKey(), j.sdkType = f.getSdkType(), 
                            j.umid = h().getId(), e && (j.language = e.language || "", j.os = e.OS, j.osVersion = e.OSVersion, 
                            j.deviceName = e.deviceName, j.platformVersion = e.platformVersion, j.platformSdkVersion = e.platformSDKVersion, 
                            j.deviceBrand = n, e = e.resolution.split("*"), _.isArray(e) && (j.resolutionHeight = Number(e[0]), 
                            j.resolutionWidth = Number(e[1]))), function(e) {
                                e && (j.installTime = e.install_datetime && Date.parse(e.install_datetime), j.scene = e.install_scene, 
                                j.channel = e.install_channel, j.campaign = e.install_campaign);
                            }(V.getImpObj()), t && t(j);
                        }(e, o);
                    });
                }));
            });
        }
    }
};

var X, z = function() {
    return X = X || new Q();
};

function Q() {
    var e = !1, t = null, n = [];
    this.addPageStart = function(n) {
        n && !e && (t = {
            ts: Date.now(),
            path: n,
            page_name: n
        }, e = !0);
    }, this.addPageEnd = function(i) {
        e && i && t && i === t.page_name && (i = Date.now() - t.ts, t.duration = Math.abs(i), 
        n.push(t), t = null, e = !1);
    }, this.get = function() {
        return n;
    }, this.getCurrentPage = function() {
        return t;
    }, this.clear = function() {
        n.length = 0;
    };
}

var Z = {};

var $, ee, te, ne = (ee = [], function() {
    return $ = $ || new ie();
});

function ie() {
    return {
        add: function(e, t) {
            r().v("share origin: %o", e);
            var n = {
                title: e && e.title,
                path: e && e.path && e.path.split("?")[0],
                _um_sts: Date.now()
            };
            n.path && 1 < n.path.length && d.startsWith(n.path, "/") && (n.path = d.trimStart(n.path, "/"));
            var i = e.path || "", o = h().getId();
            if (o) {
                var s = te.split(","), a = (s = s.filter(function(e) {
                    return 0 < e.length;
                })).indexOf(o);
                0 <= a && (s = s.slice(0, a)), s.length < 3 && s.push(o), o = s.join(","), -1 !== i.indexOf("?") ? i += "&_um_ssrc=" + o : i += "?_um_ssrc=" + o, 
                i += "&_um_sts=" + (s = Date.now()), t ? (t = (t = function(e) {
                    var t, n = [];
                    for (t in e) "_um_ssrc" !== t && "_um_sts" !== t && n.push(t + "=" + e[t]);
                    return n.join("&");
                }(Z)) ? t + "&_um_ssrc=" + o + "&_um_sts=" + s : "_um_ssrc=" + o + "&_um_sts=" + s, 
                e.query = e.query ? e.query + "&_um_ssrc=" + o + "&_um_sts=" + s : t) : e.path = i, 
                n._um_ssrc = o, n._um_sts = s;
            }
            return ee.push(n), r().v("share: %o", e), e;
        },
        setShareSource: function(e) {
            te = e;
        },
        clear: function() {
            ee.length = 0;
        },
        get: function() {
            return ee;
        }
    };
}

var re, oe, se, ae, ue = "ekvs", ce = 1e4, fe = (se = [], function() {
    return re = re || {
        addEvent: function(e) {
            oe ? (se.unshift(e), 1 < se.length && (!function() {
                if (se.length) {
                    var e = N().get(ue);
                    (function(e) {
                        var t, n = 0;
                        for (t in e) Array.isArray(e[t]) && (n += e[t].length);
                        return n;
                    })(e) + se.length <= ce && (e = pe(e, se), N().set(ue, e));
                }
            }(), se.length = 0)) : (r().w("session id is null: ", oe), ae.unshift(e));
        },
        setSessionId: function(e) {
            if (oe = e, r().v("setSessionId: ", oe), Array.isArray(ae) && ae.length && oe) {
                for (var t = 0; t < ae.length; t++) this.addEvent(ae[t]);
                ae.length = 0;
            }
        },
        getEkvs: function() {
            var e = N().get(ue);
            return se && se.length && (e = pe(e, se)), e;
        },
        clear: function() {
            N().remove(ue), se.length = 0;
        }
    };
});

function pe(e, t) {
    var n = (e = e || {})[oe];
    return Array.isArray(n) && n.length ? e[oe] = n.concat(t) : e[oe] = [].concat(t), 
    e;
}

var de, le = "2g", he = "3g", ge = "4g", ve = {
    HALF_SESSION: "half_session",
    CLOSE_SESSION: "close_session",
    EKV: "ekv",
    ENTER_PAGE: "enter_page",
    LEAVE_PAGE: "leave_page"
}, ye = [ "access", "access_subtype" ], _e = {
    instance: function() {
        return de = de || function() {
            var e = !1, t = {};
            return {
                init: function() {
                    !function(e) {
                        var n = N().get(p.IMPRINT);
                        n && (t.imprint = n), t.device_type = "Phone", t.sdk_version = p.IMPL_VERSION, t.appkey = g().appKey(), 
                        f.getDeviceInfo(function(e) {
                            t.device_info = e || "";
                        }), n = f.getAppInfoSync(), t.appid = n.appId, t.app_env = n.appEnv, t.app_version = n.appVersion, 
                        f.getSystemInfo(function(n) {
                            f.getNetworkInfo(function(i) {
                                i = function(e, t) {
                                    var n = {}, i = (t = t || {}).networkType;
                                    "none" === i && (i = "unknown");
                                    var r = e.model || "", o = e.platform || "", s = e.brand || "", t = s.toLowerCase();
                                    switch (n.sdk_type = f.getSdkType(), n.platform = f.getPlatform(), n.platform_sdk_version = e.platformSDKVersion, 
                                    n.platform_version = e.platformVersion, n.resolution = e.resolution, n.pixel_ratio = e.pixelRatio, 
                                    n.os = o, n.font_size_setting = e.fontSizeSetting, n.device_model = r, n.device_brand = s, 
                                    n.device_manufacturer = t, n.device_manuid = r, n.device_name = r, n.os_version = e.OSVersion, 
                                    n.language = e.language, i = i ? i.toLowerCase() : "") {
                                      case ge:
                                        n.access_subtype = "LTE", n.access = "4G";
                                        break;

                                      case he:
                                        n.access_subtype = "CDMA", n.access = "3G";
                                        break;

                                      case le:
                                        n.access_subtype = "GRPS", n.access = "2G";
                                        break;

                                      default:
                                        n.access = i, delete n.access_subtype;
                                    }
                                    return n;
                                }(n, i), d.assign(t, i), function(e) {
                                    var n = [];
                                    n.push({
                                        name: "设备型号",
                                        value: t.device_model
                                    }), n.push({
                                        name: "设备生产商",
                                        value: t.device_brand
                                    }), n.push({
                                        name: "os版本号",
                                        value: t.os_version
                                    }), n.push({
                                        name: "网络类型",
                                        value: t.access
                                    }), n.push({
                                        name: "运营商",
                                        value: t.access_subtype
                                    }), n.push({
                                        name: "分辨率",
                                        value: t.resolution
                                    }), n.push({
                                        name: "pixelRatio",
                                        value: t.pixel_ratio
                                    });
                                    for (var i = "", o = 0; o < n.length; o++) {
                                        var s = n[o];
                                        i += s.name + ": " + s.value + "; ";
                                    }
                                    r().v("调试辅助信息: ", i);
                                }(), e && e();
                            });
                        });
                    }(function() {
                        e = !0;
                    });
                },
                isLoaded: function() {
                    return e;
                },
                get: function() {
                    return t;
                },
                getRealtimeFields: function() {
                    var e = {};
                    return ye.forEach(function(n) {
                        e[n] = t[n];
                    }), e;
                },
                setIdTracking: function(e) {
                    this.setItem("id_tracking", e);
                },
                setIdType: function(e) {
                    this.setItem("id_type", e);
                },
                setAppVersion: function(e) {
                    this.setItem("app_version", e);
                },
                setSuperProperty: function(e) {
                    t.sp || (t.sp = {}), t.sp.isv = e;
                },
                getSuperProperty: function() {
                    return t && t.sp ? t.sp.isv : "";
                },
                setItem: function(e, n) {
                    t[e] = n;
                },
                getItem: function(e) {
                    return t[e];
                }
            };
        }();
    }
};

var me, Se, Ie, Ee = function() {
    return me = me || {
        resume: function(e) {
            var t = !1;
            Ie = Ie || N().get(p.CURRENT_SESSION);
            var n = new Date();
            return Se = n.getTime(), !Ie || !Ie.end_time || Se - Ie.end_time > p.SESSION_INTERVAL ? (t = !0, 
            function(e) {
                try {
                    var t = (Ie || {}).options || {}, n = d.assign({}, function(e) {
                        var t, n = {};
                        for (t in e) 0 === t.indexOf("_um_") && (n[t] = e[t]);
                        return r().v("query: ", e), r().v("_um_params: ", n), n;
                    }(e.query));
                    n.path = e.path || t.path, n.scene = e.scene ? f.getPlatform() + "_" + e.scene : t.scene, 
                    (t = e.referrerInfo) && (n.referrerAppId = t.appId), r().v("session options: ", n), 
                    (t = n[p.UM_SSRC]) && ne().setShareSource(t), t = Date.now(), Ie = {
                        id: d.getRandomStr(10) + t,
                        start_time: t,
                        options: n
                    };
                } catch (e) {
                    e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                    r().e("生成新session失败: ", e);
                }
            }(e), r().v("开始新的session(%s): ", Ie.id, Ie)) : r().v("延续上一次session(%s): %s ", Ie.id, n.toLocaleTimeString(), Ie), 
            t;
        },
        pause: function() {
            !function() {
                if (Ie) {
                    var e = new Date();
                    Ie.end_time = e.getTime(), "number" != typeof Ie.duration && (Ie.duration = 0), 
                    Ie.duration = Ie.end_time - Se, N().set(p.CURRENT_SESSION, Ie), r().v("退出会话(%s): %s ", Ie.id, e.toLocaleTimeString(), Ie);
                }
            }();
        },
        getCurrentSessionId: function() {
            return (Ie || {}).id;
        },
        getCurrentSession: function() {
            return Ie;
        },
        cloneCurrentSession: function() {
            return d.clone(Ie);
        }
    };
};

var Oe = {
    sessions: "sn",
    ekvs: "e",
    active_user: "active_user"
}, Ae = {
    sdk_type: "sdt",
    access: "ac",
    access_subtype: "acs",
    device_model: "dm",
    language: "lang",
    device_type: "dt",
    device_manufacturer: "dmf",
    device_name: "dn",
    platform_version: "pv",
    id_type: "it",
    font_size_setting: "fss",
    os_version: "ov",
    device_manuid: "did",
    platform_sdk_version: "psv",
    device_brand: "db",
    appkey: "ak",
    _id: "id",
    id_tracking: "itr",
    imprint: "imp",
    sdk_version: "sv",
    resolution: "rl",
    testToken: "ttn"
}, Ne = {
    uuid: "ud",
    unionid: "und",
    openid: "od",
    anonymousid: "nd",
    alipay_id: "ad",
    device_id: "dd",
    userid: "puid"
};

function we(e, t) {
    var n, i = {};
    for (n in e) t[n] ? i[t[n]] = e[n] : i[n] = e[n];
    return i;
}

var Te = te = "";

function ke(e, t, n, i) {
    _e.instance().setIdType(h().getIdType()), _e.instance().setIdTracking(h().getIdTracking()), 
    (o = h().getUserId()) && e.analytics && (e.analytics.active_user = {
        puid: o,
        provider: h().getProvider()
    }), o = d.clone(_e.instance().get()), e.header = d.assign(o, e.header, {
        ts: Date.now(),
        testToken: Te,
        traceId: d.getRandomStr(10) + Date.now() + d.getRandomStr(9)
    });
    var o = function(e) {
        return {
            h: function(e, t) {
                var n = we(e, t);
                return e && e.id_tracking && (n[t.id_tracking || "id_tracking"] = we(e.id_tracking, Ne)), 
                n;
            }(e.header, Ae),
            a: function(e, t) {
                var n = {};
                if (e) for (var i in e) e[i] && (n[t[i]] = e[i]);
                return n;
            }(e.analytics, Oe)
        };
    }(e), s = A.stringify(o);
    o = {
        url: p.LOG_URL,
        method: "POST",
        data: C.encode(s),
        success: function(i) {
            var o = i.code || i.status || i.statusCode;
            200 === o || 413 === o ? (r().i("数据发送成功: ", e, s), function(e) {
                e && (_e.instance().setItem(p.IMPRINT, e), V.set(e), V.save(), r().v("imprint: ", V.getImpObj()), 
                V.getItem("ttn_invalid") && (Te = ""));
            }((i.data || {}).imprint), "function" == typeof t && t(i)) : (r().w("数据发送失败: ", s), 
            "function" == typeof n && n());
        },
        fail: function(e) {
            r().w("超时: ", s), "function" == typeof n && n();
        },
        complete: function() {
            "function" == typeof i && i();
        }
    };
    f.request(d.assign(o, {
        header: {
            "Content-Type": o = f.getSdkType() + "/json",
            "Msg-Type": o
        }
    }));
}

var Re, be, Ue, De, Le = (Re = Ie = Se = me = de = $ = X = null, be = !(ae = []), 
Ue = [], De = new function(e) {
    var t = e, n = [];
    this.enqueue = function(e) {
        "number" == typeof t && this.size() >= t && this.dequeue(), n.push(e);
    }, this.dequeue = function() {
        return n.shift();
    }, this.front = function() {
        return n[0];
    }, this.isEmpty = function() {
        return 0 === n.length;
    }, this.clear = function() {
        n.length = 0;
    }, this.size = function() {
        return n.length;
    }, this.items = function() {
        return n;
    }, this.print = function() {
        console.log(n.toString());
    };
}(50), function() {
    return Re = Re || new xe();
});

function Pe(e) {
    h().getId() ? be ? r().i("队列正在发送中") : (be = !0, function e(t) {
        var n = De.front();
        n ? ke(n, function() {
            De.dequeue(), e(t);
        }, function() {
            var n = De.dequeue();
            n && !n.noCache && Ue.push(n), e(t);
        }) : (Ue.forEach(function(e) {
            De.enqueue(e);
        }), Ue.length = 0, t());
    }(function() {
        be = !1, "function" == typeof e && e();
    })) : (r().i("获取id标识失败，暂缓发送"), "function" == typeof e && e());
}

function xe() {
    this.send = function(e, t, n) {
        e ? this.add(e, t, function() {
            Pe(n);
        }) : Pe(n);
    }, this.add = function(e, t, n) {
        !function e(t, n, i) {
            if (_e.instance().isLoaded()) {
                n = n || {};
                var r = function(e) {
                    var t = null;
                    switch (e) {
                      case ve.HALF_SESSION:
                        t = function() {
                            var e = null, t = Ee().cloneCurrentSession();
                            return t && (e = {
                                header: {
                                    st: "1"
                                },
                                analytics: {
                                    sessions: [ t ]
                                }
                            }), e;
                        }();
                        break;

                      case ve.CLOSE_SESSION:
                        t = function() {
                            var e = null, t = {}, n = Ee().cloneCurrentSession();
                            if (n) {
                                var i = z().get(), r = ne().get();
                                Array.isArray(i) && i.length && (n.pages = d.clone(i)), Array.isArray(r) && r.length && (n.shares = d.clone(r)), 
                                z().clear(), ne().clear(), t.sessions = [ n ];
                            }
                            return (n = fe().getEkvs()) && (t.ekvs = d.clone(n), fe().clear()), (t.sessions || t.ekvs) && (e = {
                                analytics: t
                            }), e;
                        }();
                        break;

                      case ve.EKV:
                        t = function() {
                            var e = null, t = fe().getEkvs();
                            return t && (e = {
                                analytics: {
                                    ekvs: d.clone(t)
                                }
                            }, fe().clear()), e;
                        }();
                    }
                    return t;
                }(t);
                if (r) {
                    var o = _e.instance().getRealtimeFields();
                    r.header = d.assign({}, r.header, o), r.noCache = n.noCache, De.enqueue(r);
                }
                "function" == typeof i && i();
            } else setTimeout(function() {
                e(t, n, i);
            }, 100);
        }(e, t, n);
    }, this.load = function() {
        var e = N().get(p.REQUESTS);
        e && e.length && e.forEach(function(e) {
            De.enqueue(e);
        }), N().remove(p.REQUESTS);
    }, this.save = function() {
        N().set(p.REQUESTS, d.clone(De.items())), De.clear();
    };
}

var Me, Ce = (Me = null, function() {
    return Me = Me || new Ve();
});

function Ve() {
    this.update = function() {
        f.getUserInfo(function(e) {
            if (e) {
                var t = N().get(p.USER_INFO);
                t && d.deepEqual(e, t) || function(e, t) {
                    var n = g().appKey(), i = f.getSdkType(), o = h().getId(), s = h().getIdType();
                    n && i && o && s && (s = {
                        ak: g().appKey(),
                        sdt: f.getSdkType(),
                        uin: e.nickName,
                        uia: e.avatar,
                        uig: e.gender,
                        uit: e.country,
                        uip: e.province,
                        uic: e.city,
                        uil: e.language,
                        id: h().getId(),
                        it: h().getIdType()
                    }, s = JSON.stringify(s), s = C.encode(s), f.request({
                        url: p.USERINFO_URL,
                        method: "POST",
                        header: {
                            "content-type": "application/x-www-form-urlencoded"
                        },
                        data: "ui=" + s,
                        success: function(n) {
                            r().v("用户信息上传成功: ", e), t && t(n && n.data && 200 === n.data.code);
                        },
                        fail: function() {
                            r().e("用户信息上传失败: ", e), t && t(!1);
                        }
                    }));
                }(e, function(t) {
                    t && N().set(p.USER_INFO, e);
                });
            }
        });
    };
}

function je(e, t) {
    this.id = e, this.ts = Date.now();
    var i = (0, n.default)(t);
    if ("string" == i && t) this[e] = t; else if ("object" == i) for (var r in t) !{}.hasOwnProperty.call(t, r) || (this[r] = t[r]);
}

function Ke() {
    var e = !1, t = !1, i = 0;
    this.init = function(t) {
        r().v("sdk version: " + p.IMPL_VERSION), e ? r().v("Lib重复实例化") : N().load(function() {
            r().v("cache初始化成功: ", N().getAll()), h().setUseOpenid && h().setUseOpenid(g().useOpenid()), 
            h().init(function() {
                _e.instance().init(), r().v("Header初始化成功");
            }), e = !0, "function" == typeof t && t(), r().tip("SDK集成成功");
        });
    }, this.resume = function(n) {
        var i;
        e && !t && (r().v("showOptions: ", n), t = !0, g().enableVerify() && n && n.query && (i = n.query._ttn, 
        Te = i || Te), this._resume(n));
    }, this._resume = function(e) {
        Le().load();
        var t = Ee().resume(e);
        e = Ee().getCurrentSessionId();
        fe().setSessionId(e), t && Le().add(ve.HALF_SESSION, {}, function() {
            h().setUseOpenid && h().setUseOpenid(g().useOpenid()), g().useOpenid() && g().autoGetOpenid() && !h().getId() ? (r().v("get id async"), 
            function e(t, n) {
                h().getId() || t <= 0 || h().getOpenIdAsync(g().appKey(), function(i) {
                    i ? (r().v("获取id成功"), Le().send()) : (r().v("获取openid失败,启动重试,剩余可用次数", t - 1), setTimeout(function() {
                        e(t - 1, n);
                    }, n));
                });
            }(10, 3e3)) : (r().v("session auto send"), Le().send());
        });
    }, this.pause = function(n) {
        e && (t = !1, i = 0, Ee().pause(), g().uploadUserInfo() && Ce().update(), Le().send(ve.CLOSE_SESSION, {}, function() {
            Le().save(), N().save(), r().v("cache save success"), "function" == typeof n && n();
        }));
    }, this.setOpenid = function(e) {
        r().v("setOpenId: %s", e), h().setOpenid(e), Le().send();
    }, this.setUnionid = function(e) {
        r().v("setUnionid: %s", e), h().setUnionid(e);
    }, this.setUserid = function(e, t) {
        r().v("setUserid: %s", e, t), h().setUserid(e, t);
    }, this.setAnonymousid = function(e) {
        r().v("setAnonymousId: %s", e), h().setAnonymousid(e), Le().send();
    }, this.setAppVersion = function(e) {
        e && "string" != typeof e ? r().w("setAppVersion方法只接受字符串类型参数") : _e.instance().setAppVersion(e);
    }, this.setAlipayUserid = function(e) {
        e && "string" != typeof e ? r().w("setAlipayUserid方法只接受字符串类型参数") : (r().v("setAlipayUserid: %s", e), 
        h().setAlipayUserid(e));
    }, this.setSuperProperty = function(e) {
        if (e && "string" != typeof e) r().w("超级属性只支持字符串类型"); else {
            var t = this;
            _e.instance().getSuperProperty() !== e && (_e.instance().setSuperProperty(e), t.pause(function() {
                t.resume();
            }));
        }
    }, this.trackEvent = function(t, o) {
        if (e && (r().v("event: ", t, o), function(e, t) {
            if (e && "string" == typeof e) {
                var i = [ "id", "ts", "du" ], o = {};
                if (i.forEach(function(e) {
                    o[e] = 1;
                }), o[e]) r().e("eventId不能与以下保留字冲突: " + i.join(",")); else if (e.length > p.MAX_EVENTID_LENGTH) r().e("The maximum length of event id shall not exceed " + p.MAX_EVENTID_LENGTH); else {
                    if (!t || "object" == (0, n.default)(t) && !Array.isArray(t) || "string" == typeof t) {
                        if ("object" == (0, n.default)(t)) {
                            var s, a = 0;
                            for (s in t) if ({}.hasOwnProperty.call(t, s)) {
                                if (s.length > p.MAX_PROPERTY_KEY_LENGTH) return void r().e("The maximum length of property key shall not exceed " + p.MAX_PROPERTY_KEY_LENGTH);
                                if (a >= p.MAX_PROPERTY_KEYS_COUNT) return void r().e("The maximum count of properties shall not exceed " + p.MAX_PROPERTY_KEYS_COUNT);
                                if (o[s]) return void r().e("属性中的key不能与以下保留字冲突: " + i.join(","));
                                a += 1;
                            }
                        }
                        return 1;
                    }
                    r().e("please check trackEvent properties. properties should be string or object(not include Array)");
                }
            } else r().e('please check trackEvent id. id should be "string" and not null');
        }(t, o))) {
            var s = new je(t, o);
            fe().addEvent(s);
            var a = !!Te;
            t = a ? 0 : p.EVENT_SEND_DEFAULT_INTERVAL;
            s = o = Date.now(), t = t, ("number" != typeof i || "number" != typeof t || i <= 0 || t < s - i) && (i = o, 
            Le().send(ve.EKV, {
                noCache: a
            }, function() {}));
        }
    }, this.trackShare = function(t) {
        if (e) {
            try {
                -1 < f.getSdkType().indexOf("game") ? (t = ne().add(t, !0), r().v("shareQuery: ", t)) : (t = ne().add(t, !1), 
                r().v("sharePath: ", t.path));
            } catch (t) {
                t = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(t);
                r().v("shareAppMessage: ", t);
            }
            return t;
        }
    }, this.trackPageStart = function(t) {
        e && z().addPageStart(t);
    }, this.trackPageEnd = function(t) {
        e && z().addPageEnd(t);
    }, this.onShareAppMessage = function(e) {
        var t = this;
        f.onShareAppMessage(function() {
            return t.trackShare(e());
        });
    }, this.shareAppMessage = function(e) {
        this.trackShare(e), f.shareAppMessage(e);
    };
}

var Ge = [];

function qe() {}

qe.prototype = {
    createMethod: function(e, t, n) {
        try {
            e[t] = n && n[t] ? function() {
                return n[t].apply(n, arguments);
            } : function() {
                Ge.push([ t, [].slice.call(arguments) ]);
            };
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            r().v("create method errror: ", e);
        }
    },
    installApi: function(e, t) {
        try {
            for (var n = "resume,pause,trackEvent,trackPageStart,trackPageEnd,trackShare,setUserid,setOpenid,setUnionid,onShareAppMessage,shareAppMessage".split(","), i = 0, o = n.length; i < o; i++) this.createMethod(e, n[i], t);
            if (t) for (i = 0, o = Ge.length; i < o; i++) {
                var s = Ge[i];
                try {
                    t[s[0]].apply(t, s[1]);
                } catch (e) {
                    e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                    r().v("impl[v[0]].apply error: ", s[0], e);
                }
            }
        } catch (e) {
            e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
            r().v("install api errror: ", e);
        }
    }
};

var Fe = [ "https://umini.shujupie.com", "https://ulogs.umeng.com" ], He = 0;

!function(e) {
    setTimeout(function() {
        !function e(t, n) {
            t >= Fe.length || n ? (n && function() {
                var e = "https://umini.shujupie.com";
                p.LOG_URL = p.LOG_URL.replace(e, Fe[He]), p.GET_OPENID_URL = p.GET_OPENID_URL.replace(e, Fe[He]), 
                p.USERINFO_URL = p.USERINFO_URL.replace(e, Fe[He]);
            }(), n && r().v("命中可用服务", Fe[He]), n || r().tip_w("未命中可用服务")) : f.request({
                url: Fe[t] + "/uminiprogram_logs/ckdh",
                success: function(n) {
                    200 === (n.code || n.status || n.statusCode) && n.data && 200 === n.data.code ? e((He = t) + 1, !0) : e(t + 1, !1);
                },
                fail: function() {
                    e(t + 1, !1);
                }
            });
        }(0, !1);
    }, e);
}(3e3);

var Ye = new qe(), We = {
    _inited: !1,
    init: function(e) {
        if (this._inited) r().v("已经实例过，请避免重复初始化"); else if (e) if (e.appKey) {
            "boolean" != typeof e.useOpenid && (e.useOpenid = !0), g().set(e), r().setDebug(e.debug), 
            this._inited = !0;
            var t = this;
            G.emit(q, e);
            try {
                var n = new Ke();
                r().v("成功创建Lib对象"), n.init(function() {
                    r().v("Lib对象初始化成功"), Ye.installApi(t, n), r().v("安装Lib接口成功"), G.emit(1, e);
                });
            } catch (e) {
                e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
                r().w("创建Lib对象异常: " + e);
            }
        } else r().err("请确保传入正确的appkey"); else r().err("请正确设置相关信息！");
    }
};

try {
    Ye.installApi(We, null);
} catch (e) {
    e = VM2_INTERNAL_STATE_DO_NOT_USE_OR_PROGRAM_WILL_FAIL.handleException(e);
    r().w("uma赋值异常: ", e);
}

wx.onShow(function(e) {
    var t;
    r().v("game onShow: ", e), t = e.query, Z = t, We.resume(e, !0);
}), wx.onHide(function() {
    r().v("game onHide"), We.pause();
});

var Je = We.init;

We.init = function(e) {
    e && e.useOpenid && (r().tip_w("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"), 
    r().tip_w("您选择了使用openid进行统计，请确保使用setOpenid回传openid或通过设置autoGetOpenid为true，并在友盟后台设置secret由友盟帮您获取"), 
    r().tip_w("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")), 
    Je.call(We, e);
}, m = new B(), function(e, t, i) {
    if ("object" == (0, n.default)(e)) {
        if (t.length) e.rc = i; else for (var o in i) if ({}.hasOwnProperty.call(i, o)) {
            if (e[o]) return void r().v("方法已定义，无法注入此插件方法: ", o);
            i[o] && (e[o] = function() {
                i[o](arguments);
            });
        }
    } else r().v("插件安装失败，宿主对象不能为空");
}(We, "rc", m), wx.uma = We, module.exports = We;