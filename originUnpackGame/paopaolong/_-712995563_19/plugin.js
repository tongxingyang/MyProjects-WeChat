	define("__plugin__/wx0446ba2621dda60a", function(require, module, exports){			
module.exports = require('wx0446ba2621dda60a/base.js'); 
 			});
 		define("__plugin__/wx0446ba2621dda60a/2d.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./index-31f38084.js", "./sprite-frame-1c023836.js", "./sprite-723e419c.js", "./renderable-2d-f6cb180f.js", "./graphics-f8140643.js", "./vertex-format-bf491aa3.js", "./deprecated-81ea4bff.js", "./deprecated-ddee6a28.js"], function (e) {
  "use strict";

  return {
    setters: [function () {}, function () {}, function () {}, function () {}, function () {}, function () {}, function () {}, function () {}, function (n) {
      var t = {};
      t.UI = n.B, t.earcut = n.e, t.graphicsAssembler = n.g, t.labelAssembler = n.l, t.spriteAssembler = n.s, e(t);
    }, function (n) {
      var t = {};
      t.SpriteFrame = n.S, t.dynamicAtlasManager = n.d, e(t);
    }, function (n) {
      var t = {};
      t.BASELINE_RATIO = n.d, t.BitmapFont = n.B, t.CacheMode = n.b, t.CanvasPool = n.C, t.Font = n.F, t.HorizontalTextAlignment = n.H, t.Label = n.c, t.LabelAtlas = n.L, t.LabelComponent = n.c, t.MIDDLE_RATIO = n.M, t.Overflow = n.O, t.Sprite = n.a, t.SpriteAtlas = n.S, t.SpriteComponent = n.a, t.TTFFont = n.T, t.VerticalTextAlignment = n.V, t.fragmentText = n.f, t.getBaselineOffset = n.g, t.isUnicodeCJK = n.i, t.isUnicodeSpace = n.e, t.safeMeasureText = n.s, e(t);
    }, function (n) {
      var t = {};
      t.InstanceMaterialType = n.I, t.RenderComponent = n.R, t.Renderable2D = n.R, t.StencilManager = n.S, t.UIRenderable = n.R, t.UITransform = n.U, t.UITransformComponent = n.U, e(t);
    }, function (n) {
      var t = {};
      t.Graphics = n.G, t.GraphicsComponent = n.G, e(t);
    }, function (n) {
      e("UIVertexFormat", n.v);
    }, function (n) {
      var t = {};
      t.HtmlTextParser = n.H, t.LabelOutline = n.L, t.LabelOutlineComponent = n.L, t.LabelShadow = n.c, t.Mask = n.a, t.MaskComponent = n.a, t.MeshBuffer = n.M, t.RichText = n.R, t.RichTextComponent = n.R, t.UIDrawBatch = n.D, t.UIMeshRenderer = n.U, t.UIModelComponent = n.U, t.UIOpacity = n.d, t.UIOpacityComponent = n.d, t.UIStaticBatch = n.b, t.UIStaticBatchComponent = n.b, e(t);
    }, function (n) {
      var t = {};
      t.Canvas = n.C, t.CanvasComponent = n.C, t.RenderRoot2D = n.R, t.UIComponent = n.U, e(t);
    }],
    execute: function execute() {}
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/3d.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./index-da6f70c6.js", "./create-mesh-9aab53f1.js", "./mesh-c8768986.js", "./mesh-renderer-86d175c0.js", "./skeleton-314b4fa5.js"], function (e) {
  "use strict";

  return {
    setters: [function () {}, function () {}, function () {}, function () {}, function () {}, function (n) {
      e("SkelAnimDataHub", n.u);
    }, function (n) {
      var t = {};
      t.BatchedSkinningModelComponent = n.c, t.BatchingUtility = n.B, t.DirectionalLight = n.D, t.DirectionalLightComponent = n.D, t.Light = n.L, t.LightComponent = n.L, t.SkeletalAnimation = n.g, t.SkeletalAnimationComponent = n.g, t.SkeletalAnimationState = n.e, t.SkinnedMeshBatchRenderer = n.c, t.SkinnedMeshRenderer = n.b, t.SkinnedMeshUnit = n.d, t.SkinningModelComponent = n.b, t.SkinningModelUnit = n.d, t.Socket = n.f, t.SphereLight = n.S, t.SphereLightComponent = n.S, t.SpotLight = n.a, t.SpotLightComponent = n.a, t.utils = n.u, e(t);
    }, function () {}, function (n) {
      e("Mesh", n.M);
    }, function (n) {
      var t = {};
      t.MeshRenderer = n.M, t.ModelComponent = n.M, e(t);
    }, function (n) {
      e("Skeleton", n.S);
    }],
    execute: function execute() {}
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/@babel/runtime/helpers/Arrayincludes.js", function(require, module, exports){ 			
Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(r,e){if(null==this)throw new TypeError('"this" is null or not defined');var t=Object(this),n=t.length>>>0;if(0==n)return!1;var i,o,a=0|e,u=Math.max(0<=a?a:n-Math.abs(a),0);for(;u<n;){if((i=t[u])===(o=r)||"number"==typeof i&&"number"==typeof o&&isNaN(i)&&isNaN(o))return!0;u++}return!1}}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/@babel/runtime/helpers/interopRequireDefault.js", function(require, module, exports){ 			
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

module.exports = _interopRequireDefault; 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/@babel/runtime/helpers/typeof.js", function(require, module, exports){ 			
function _typeof2(o){return(_typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o})(o)}function _typeof(o){return"function"==typeof Symbol&&"symbol"===_typeof2(Symbol.iterator)?module.exports=_typeof=function(o){return _typeof2(o)}:module.exports=_typeof=function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":_typeof2(o)},_typeof(o)}module.exports=_typeof; 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/ZipUtils-3ae2be0b.js", function(require, module, exports){ 			
"use strict";

System.register([], function (t) {
  "use strict";

  return {
    execute: function execute() {
      /** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
      var e = {};
      (function () {
        function t(t) {
          throw t;
        }

        var e = void 0,
            r = !0,
            i = this;

        function s(t, r) {
          var s,
              a = t.split("."),
              h = i;
          !(a[0] in h) && h.execScript && h.execScript("var " + a[0]);

          for (; a.length && (s = a.shift());) {
            a.length || r === e ? h = h[s] ? h[s] : h[s] = {} : h[s] = r;
          }
        }

        var a = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array;

        function h(t) {
          if ("string" == typeof t) {
            var e,
                r,
                i = t.split("");

            for (e = 0, r = i.length; e < r; e++) {
              i[e] = (255 & i[e].charCodeAt(0)) >>> 0;
            }

            t = i;
          }

          for (var s, a = 1, h = 0, n = t.length, f = 0; 0 < n;) {
            n -= s = 1024 < n ? 1024 : n;

            do {
              h += a += t[f++];
            } while (--s);

            a %= 65521, h %= 65521;
          }

          return (h << 16 | a) >>> 0;
        }

        function n(e, r) {
          this.index = "number" == typeof r ? r : 0, this.i = 0, this.buffer = e instanceof (a ? Uint8Array : Array) ? e : new (a ? Uint8Array : Array)(32768), 2 * this.buffer.length <= this.index && t(Error("invalid index")), this.buffer.length <= this.index && this.f();
        }

        n.prototype.f = function () {
          var t,
              e = this.buffer,
              r = e.length,
              i = new (a ? Uint8Array : Array)(r << 1);
          if (a) i.set(e);else for (t = 0; t < r; ++t) {
            i[t] = e[t];
          }
          return this.buffer = i;
        }, n.prototype.d = function (t, e, r) {
          var i,
              s = this.buffer,
              a = this.index,
              h = this.i,
              n = s[a];
          if (r && 1 < e && (t = 8 < e ? (d[255 & t] << 24 | d[t >>> 8 & 255] << 16 | d[t >>> 16 & 255] << 8 | d[t >>> 24 & 255]) >> 32 - e : d[t] >> 8 - e), 8 > e + h) n = n << e | t, h += e;else for (i = 0; i < e; ++i) {
            n = n << 1 | t >> e - i - 1 & 1, 8 == ++h && (h = 0, s[a++] = d[n], n = 0, a === s.length && (s = this.f()));
          }
          s[a] = n, this.buffer = s, this.i = h, this.index = a;
        }, n.prototype.finish = function () {
          var t,
              e = this.buffer,
              r = this.index;
          return 0 < this.i && (e[r] <<= 8 - this.i, e[r] = d[e[r]], r++), a ? t = e.subarray(0, r) : (e.length = r, t = e), t;
        };
        var f,
            o = new (a ? Uint8Array : Array)(256);

        for (f = 0; 256 > f; ++f) {
          for (var u = c = f, l = 7, c = c >>> 1; c; c >>>= 1) {
            u <<= 1, u |= 1 & c, --l;
          }

          o[f] = (u << l & 255) >>> 0;
        }

        var d = o;

        function p(t) {
          this.buffer = new (a ? Uint16Array : Array)(2 * t), this.length = 0;
        }

        function y(t) {
          var e,
              r,
              i,
              s,
              h,
              n,
              f,
              o,
              u,
              l = t.length,
              c = 0,
              d = Number.POSITIVE_INFINITY;

          for (o = 0; o < l; ++o) {
            t[o] > c && (c = t[o]), t[o] < d && (d = t[o]);
          }

          for (e = 1 << c, r = new (a ? Uint32Array : Array)(e), i = 1, s = 0, h = 2; i <= c;) {
            for (o = 0; o < l; ++o) {
              if (t[o] === i) {
                for (n = 0, f = s, u = 0; u < i; ++u) {
                  n = n << 1 | 1 & f, f >>= 1;
                }

                for (u = n; u < e; u += h) {
                  r[u] = i << 16 | o;
                }

                ++s;
              }
            }

            ++i, s <<= 1, h <<= 1;
          }

          return [r, c, d];
        }

        function b(t, e) {
          this.h = A, this.w = 0, this.input = t, this.b = 0, e && (e.lazy && (this.w = e.lazy), "number" == typeof e.compressionType && (this.h = e.compressionType), e.outputBuffer && (this.a = a && e.outputBuffer instanceof Array ? new Uint8Array(e.outputBuffer) : e.outputBuffer), "number" == typeof e.outputIndex && (this.b = e.outputIndex)), this.a || (this.a = new (a ? Uint8Array : Array)(32768));
        }

        p.prototype.getParent = function (t) {
          return 2 * ((t - 2) / 4 | 0);
        }, p.prototype.push = function (t, e) {
          var r,
              i,
              s,
              a = this.buffer;

          for (r = this.length, a[this.length++] = e, a[this.length++] = t; 0 < r && (i = this.getParent(r), a[r] > a[i]);) {
            s = a[r], a[r] = a[i], a[i] = s, s = a[r + 1], a[r + 1] = a[i + 1], a[i + 1] = s, r = i;
          }

          return this.length;
        }, p.prototype.pop = function () {
          var t,
              e,
              r,
              i,
              s,
              a = this.buffer;

          for (e = a[0], t = a[1], this.length -= 2, a[0] = a[this.length], a[1] = a[this.length + 1], s = 0; !((i = 2 * s + 2) >= this.length) && (i + 2 < this.length && a[i + 2] > a[i] && (i += 2), a[i] > a[s]);) {
            r = a[s], a[s] = a[i], a[i] = r, r = a[s + 1], a[s + 1] = a[i + 1], a[i + 1] = r, s = i;
          }

          return {
            index: t,
            value: e,
            length: this.length
          };
        };
        var g,
            A = 2,
            B = {
          NONE: 0,
          r: 1,
          j: A,
          N: 3
        },
            v = [];

        for (g = 0; 288 > g; g++) {
          switch (r) {
            case 143 >= g:
              v.push([g + 48, 8]);
              break;

            case 255 >= g:
              v.push([g - 144 + 400, 9]);
              break;

            case 279 >= g:
              v.push([g - 256 + 0, 7]);
              break;

            case 287 >= g:
              v.push([g - 280 + 192, 8]);
              break;

            default:
              t("invalid literal: " + g);
          }
        }

        function k(t, e) {
          this.length = t, this.G = e;
        }

        function w() {
          var e = m;

          switch (r) {
            case 3 === e:
              return [257, e - 3, 0];

            case 4 === e:
              return [258, e - 4, 0];

            case 5 === e:
              return [259, e - 5, 0];

            case 6 === e:
              return [260, e - 6, 0];

            case 7 === e:
              return [261, e - 7, 0];

            case 8 === e:
              return [262, e - 8, 0];

            case 9 === e:
              return [263, e - 9, 0];

            case 10 === e:
              return [264, e - 10, 0];

            case 12 >= e:
              return [265, e - 11, 1];

            case 14 >= e:
              return [266, e - 13, 1];

            case 16 >= e:
              return [267, e - 15, 1];

            case 18 >= e:
              return [268, e - 17, 1];

            case 22 >= e:
              return [269, e - 19, 2];

            case 26 >= e:
              return [270, e - 23, 2];

            case 30 >= e:
              return [271, e - 27, 2];

            case 34 >= e:
              return [272, e - 31, 2];

            case 42 >= e:
              return [273, e - 35, 3];

            case 50 >= e:
              return [274, e - 43, 3];

            case 58 >= e:
              return [275, e - 51, 3];

            case 66 >= e:
              return [276, e - 59, 3];

            case 82 >= e:
              return [277, e - 67, 4];

            case 98 >= e:
              return [278, e - 83, 4];

            case 114 >= e:
              return [279, e - 99, 4];

            case 130 >= e:
              return [280, e - 115, 4];

            case 162 >= e:
              return [281, e - 131, 5];

            case 194 >= e:
              return [282, e - 163, 5];

            case 226 >= e:
              return [283, e - 195, 5];

            case 257 >= e:
              return [284, e - 227, 5];

            case 258 === e:
              return [285, e - 258, 0];

            default:
              t("invalid length: " + e);
          }
        }

        b.prototype.n = function () {
          var i,
              s,
              h,
              f,
              o = this.input;

          switch (this.h) {
            case 0:
              for (h = 0, f = o.length; h < f;) {
                var u,
                    l,
                    c,
                    d = s = a ? o.subarray(h, h + 65535) : o.slice(h, h + 65535),
                    p = (h += s.length) === f,
                    y = e,
                    b = e,
                    g = this.a,
                    B = this.b;

                if (a) {
                  for (g = new Uint8Array(this.a.buffer); g.length <= B + d.length + 5;) {
                    g = new Uint8Array(g.length << 1);
                  }

                  g.set(this.a);
                }

                if (u = p ? 1 : 0, g[B++] = 0 | u, c = 65536 + ~(l = d.length) & 65535, g[B++] = 255 & l, g[B++] = l >>> 8 & 255, g[B++] = 255 & c, g[B++] = c >>> 8 & 255, a) g.set(d, B), B += d.length, g = g.subarray(0, B);else {
                  for (y = 0, b = d.length; y < b; ++y) {
                    g[B++] = d[y];
                  }

                  g.length = B;
                }
                this.b = B, this.a = g;
              }

              break;

            case 1:
              var k = new n(new Uint8Array(this.a.buffer), this.b);
              k.d(1, 1, r), k.d(1, 2, r);
              var w,
                  m,
                  U,
                  x = I(this, o);

              for (w = 0, m = x.length; w < m; w++) {
                if (U = x[w], n.prototype.d.apply(k, v[U]), 256 < U) k.d(x[++w], x[++w], r), k.d(x[++w], 5), k.d(x[++w], x[++w], r);else if (256 === U) break;
              }

              this.a = k.finish(), this.b = this.a.length;
              break;

            case A:
              var T,
                  C,
                  N,
                  D,
                  Z,
                  L,
                  P,
                  j,
                  S,
                  M,
                  R,
                  F,
                  G,
                  O,
                  _,
                  H = new n(new Uint8Array(this.a), this.b),
                  V = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                  J = Array(19);

              for (T = A, H.d(1, 1, r), H.d(T, 2, r), C = I(this, o), P = z(L = E(this.L, 15)), S = z(j = E(this.K, 7)), N = 286; 257 < N && 0 === L[N - 1]; N--) {
                ;
              }

              for (D = 30; 1 < D && 0 === j[D - 1]; D--) {
                ;
              }

              var X,
                  q,
                  K,
                  Y,
                  Q,
                  W,
                  $ = N,
                  tt = D,
                  et = new (a ? Uint32Array : Array)($ + tt),
                  rt = new (a ? Uint32Array : Array)(316),
                  it = new (a ? Uint8Array : Array)(19);

              for (X = q = 0; X < $; X++) {
                et[q++] = L[X];
              }

              for (X = 0; X < tt; X++) {
                et[q++] = j[X];
              }

              if (!a) for (X = 0, Y = it.length; X < Y; ++X) {
                it[X] = 0;
              }

              for (X = Q = 0, Y = et.length; X < Y; X += q) {
                for (q = 1; X + q < Y && et[X + q] === et[X]; ++q) {
                  ;
                }

                if (K = q, 0 === et[X]) {
                  if (3 > K) for (; 0 < K--;) {
                    rt[Q++] = 0, it[0]++;
                  } else for (; 0 < K;) {
                    (W = 138 > K ? K : 138) > K - 3 && W < K && (W = K - 3), 10 >= W ? (rt[Q++] = 17, rt[Q++] = W - 3, it[17]++) : (rt[Q++] = 18, rt[Q++] = W - 11, it[18]++), K -= W;
                  }
                } else if (rt[Q++] = et[X], it[et[X]]++, 3 > --K) for (; 0 < K--;) {
                  rt[Q++] = et[X], it[et[X]]++;
                } else for (; 0 < K;) {
                  (W = 6 > K ? K : 6) > K - 3 && W < K && (W = K - 3), rt[Q++] = 16, rt[Q++] = W - 3, it[16]++, K -= W;
                }
              }

              for (i = a ? rt.subarray(0, Q) : rt.slice(0, Q), M = E(it, 7), O = 0; 19 > O; O++) {
                J[O] = M[V[O]];
              }

              for (Z = 19; 4 < Z && 0 === J[Z - 1]; Z--) {
                ;
              }

              for (R = z(M), H.d(N - 257, 5, r), H.d(D - 1, 5, r), H.d(Z - 4, 4, r), O = 0; O < Z; O++) {
                H.d(J[O], 3, r);
              }

              for (O = 0, _ = i.length; O < _; O++) {
                if (F = i[O], H.d(R[F], M[F], r), 16 <= F) {
                  switch (O++, F) {
                    case 16:
                      G = 2;
                      break;

                    case 17:
                      G = 3;
                      break;

                    case 18:
                      G = 7;
                      break;

                    default:
                      t("invalid code: " + F);
                  }

                  H.d(i[O], G, r);
                }
              }

              var st,
                  at,
                  ht,
                  nt,
                  ft,
                  ot,
                  ut,
                  lt,
                  ct = [P, L],
                  dt = [S, j];

              for (ft = ct[0], ot = ct[1], ut = dt[0], lt = dt[1], st = 0, at = C.length; st < at; ++st) {
                if (ht = C[st], H.d(ft[ht], ot[ht], r), 256 < ht) H.d(C[++st], C[++st], r), nt = C[++st], H.d(ut[nt], lt[nt], r), H.d(C[++st], C[++st], r);else if (256 === ht) break;
              }

              this.a = H.finish(), this.b = this.a.length;
              break;

            default:
              t("invalid compression type");
          }

          return this.a;
        };

        var m,
            U,
            x = [];

        for (m = 3; 258 >= m; m++) {
          U = w(), x[m] = U[2] << 24 | U[1] << 16 | U[0];
        }

        var T = a ? new Uint32Array(x) : x;

        function I(i, s) {
          function h(e, i) {
            var s,
                a,
                h,
                n,
                f = e.G,
                o = [],
                u = 0;

            switch (s = T[e.length], o[u++] = 65535 & s, o[u++] = s >> 16 & 255, o[u++] = s >> 24, r) {
              case 1 === f:
                a = [0, f - 1, 0];
                break;

              case 2 === f:
                a = [1, f - 2, 0];
                break;

              case 3 === f:
                a = [2, f - 3, 0];
                break;

              case 4 === f:
                a = [3, f - 4, 0];
                break;

              case 6 >= f:
                a = [4, f - 5, 1];
                break;

              case 8 >= f:
                a = [5, f - 7, 1];
                break;

              case 12 >= f:
                a = [6, f - 9, 2];
                break;

              case 16 >= f:
                a = [7, f - 13, 2];
                break;

              case 24 >= f:
                a = [8, f - 17, 3];
                break;

              case 32 >= f:
                a = [9, f - 25, 3];
                break;

              case 48 >= f:
                a = [10, f - 33, 4];
                break;

              case 64 >= f:
                a = [11, f - 49, 4];
                break;

              case 96 >= f:
                a = [12, f - 65, 5];
                break;

              case 128 >= f:
                a = [13, f - 97, 5];
                break;

              case 192 >= f:
                a = [14, f - 129, 6];
                break;

              case 256 >= f:
                a = [15, f - 193, 6];
                break;

              case 384 >= f:
                a = [16, f - 257, 7];
                break;

              case 512 >= f:
                a = [17, f - 385, 7];
                break;

              case 768 >= f:
                a = [18, f - 513, 8];
                break;

              case 1024 >= f:
                a = [19, f - 769, 8];
                break;

              case 1536 >= f:
                a = [20, f - 1025, 9];
                break;

              case 2048 >= f:
                a = [21, f - 1537, 9];
                break;

              case 3072 >= f:
                a = [22, f - 2049, 10];
                break;

              case 4096 >= f:
                a = [23, f - 3073, 10];
                break;

              case 6144 >= f:
                a = [24, f - 4097, 11];
                break;

              case 8192 >= f:
                a = [25, f - 6145, 11];
                break;

              case 12288 >= f:
                a = [26, f - 8193, 12];
                break;

              case 16384 >= f:
                a = [27, f - 12289, 12];
                break;

              case 24576 >= f:
                a = [28, f - 16385, 13];
                break;

              case 32768 >= f:
                a = [29, f - 24577, 13];
                break;

              default:
                t("invalid distance");
            }

            for (s = a, o[u++] = s[0], o[u++] = s[1], o[u++] = s[2], h = 0, n = o.length; h < n; ++h) {
              g[A++] = o[h];
            }

            v[o[0]]++, w[o[3]]++, B = e.length + i - 1, p = null;
          }

          var n,
              f,
              o,
              u,
              l,
              c,
              d,
              p,
              y,
              b = {},
              g = a ? new Uint16Array(2 * s.length) : [],
              A = 0,
              B = 0,
              v = new (a ? Uint32Array : Array)(286),
              w = new (a ? Uint32Array : Array)(30),
              m = i.w;

          if (!a) {
            for (o = 0; 285 >= o;) {
              v[o++] = 0;
            }

            for (o = 0; 29 >= o;) {
              w[o++] = 0;
            }
          }

          for (v[256] = 1, n = 0, f = s.length; n < f; ++n) {
            for (o = l = 0, u = 3; o < u && n + o !== f; ++o) {
              l = l << 8 | s[n + o];
            }

            if (b[l] === e && (b[l] = []), c = b[l], !(0 < B--)) {
              for (; 0 < c.length && 32768 < n - c[0];) {
                c.shift();
              }

              if (n + 3 >= f) {
                for (p && h(p, -1), o = 0, u = f - n; o < u; ++o) {
                  y = s[n + o], g[A++] = y, ++v[y];
                }

                break;
              }

              if (0 < c.length) {
                var U = e,
                    x = e,
                    I = 0,
                    E = e,
                    z = e,
                    C = e,
                    N = s.length,
                    D = (z = 0, c.length);

                t: for (; z < D; z++) {
                  if (U = c[D - z - 1], E = 3, 3 < I) {
                    for (C = I; 3 < C; C--) {
                      if (s[U + C - 1] !== s[n + C - 1]) continue t;
                    }

                    E = I;
                  }

                  for (; 258 > E && n + E < N && s[U + E] === s[n + E];) {
                    ++E;
                  }

                  if (E > I && (x = U, I = E), 258 === E) break;
                }

                d = new k(I, n - x), p ? p.length < d.length ? (y = s[n - 1], g[A++] = y, ++v[y], h(d, 0)) : h(p, -1) : d.length < m ? p = d : h(d, 0);
              } else p ? h(p, -1) : (y = s[n], g[A++] = y, ++v[y]);
            }

            c.push(n);
          }

          return g[A++] = 256, v[256]++, i.L = v, i.K = w, a ? g.subarray(0, A) : g;
        }

        function E(t, e) {
          function r(t) {
            var e = m[t][U[t]];
            e === A ? (r(t + 1), r(t + 1)) : --k[e], ++U[t];
          }

          var i,
              s,
              h,
              n,
              f,
              o = t.length,
              u = new p(572),
              l = new (a ? Uint8Array : Array)(o);
          if (!a) for (n = 0; n < o; n++) {
            l[n] = 0;
          }

          for (n = 0; n < o; ++n) {
            0 < t[n] && u.push(n, t[n]);
          }

          if (i = Array(u.length / 2), s = new (a ? Uint32Array : Array)(u.length / 2), 1 === i.length) return l[u.pop().index] = 1, l;

          for (n = 0, f = u.length / 2; n < f; ++n) {
            i[n] = u.pop(), s[n] = i[n].value;
          }

          var c,
              d,
              y,
              b,
              g,
              A = s.length,
              B = new (a ? Uint16Array : Array)(e),
              v = new (a ? Uint8Array : Array)(e),
              k = new (a ? Uint8Array : Array)(A),
              w = Array(e),
              m = Array(e),
              U = Array(e),
              x = (1 << e) - A,
              T = 1 << e - 1;

          for (B[e - 1] = A, d = 0; d < e; ++d) {
            x < T ? v[d] = 0 : (v[d] = 1, x -= T), x <<= 1, B[e - 2 - d] = (B[e - 1 - d] / 2 | 0) + A;
          }

          for (B[0] = v[0], w[0] = Array(B[0]), m[0] = Array(B[0]), d = 1; d < e; ++d) {
            B[d] > 2 * B[d - 1] + v[d] && (B[d] = 2 * B[d - 1] + v[d]), w[d] = Array(B[d]), m[d] = Array(B[d]);
          }

          for (c = 0; c < A; ++c) {
            k[c] = e;
          }

          for (y = 0; y < B[e - 1]; ++y) {
            w[e - 1][y] = s[y], m[e - 1][y] = y;
          }

          for (c = 0; c < e; ++c) {
            U[c] = 0;
          }

          for (1 === v[e - 1] && (--k[0], ++U[e - 1]), d = e - 2; 0 <= d; --d) {
            for (b = c = 0, g = U[d + 1], y = 0; y < B[d]; y++) {
              (b = w[d + 1][g] + w[d + 1][g + 1]) > s[c] ? (w[d][y] = b, m[d][y] = A, g += 2) : (w[d][y] = s[c], m[d][y] = c, ++c);
            }

            U[d] = 0, 1 === v[d] && r(d);
          }

          for (h = k, n = 0, f = i.length; n < f; ++n) {
            l[i[n].index] = h[n];
          }

          return l;
        }

        function z(e) {
          var r,
              i,
              s,
              h,
              n = new (a ? Uint16Array : Array)(e.length),
              f = [],
              o = [],
              u = 0;

          for (r = 0, i = e.length; r < i; r++) {
            f[e[r]] = 1 + (0 | f[e[r]]);
          }

          for (r = 1, i = 16; r <= i; r++) {
            o[r] = u, (u += 0 | f[r]) > 1 << r && t("overcommitted"), u <<= 1;
          }

          for (65536 > u && t("undercommitted"), r = 0, i = e.length; r < i; r++) {
            for (u = o[e[r]], o[e[r]] += 1, s = n[r] = 0, h = e[r]; s < h; s++) {
              n[r] = n[r] << 1 | 1 & u, u >>>= 1;
            }
          }

          return n;
        }

        function C(t, e) {
          this.input = t, this.a = new (a ? Uint8Array : Array)(32768), this.h = N.j;
          var r,
              i = {};

          for (r in !e && (e = {}) || "number" != typeof e.compressionType || (this.h = e.compressionType), e) {
            i[r] = e[r];
          }

          i.outputBuffer = this.a, this.z = new b(this.input, i);
        }

        var N = B;

        function D(e, r) {
          switch (this.k = [], this.l = 32768, this.e = this.g = this.c = this.q = 0, this.input = a ? new Uint8Array(e) : e, this.s = !1, this.m = L, this.B = !1, !r && (r = {}) || (r.index && (this.c = r.index), r.bufferSize && (this.l = r.bufferSize), r.bufferType && (this.m = r.bufferType), r.resize && (this.B = r.resize)), this.m) {
            case Z:
              this.b = 32768, this.a = new (a ? Uint8Array : Array)(32768 + this.l + 258);
              break;

            case L:
              this.b = 0, this.a = new (a ? Uint8Array : Array)(this.l), this.f = this.J, this.t = this.H, this.o = this.I;
              break;

            default:
              t(Error("invalid inflate mode"));
          }
        }

        C.prototype.n = function () {
          var e,
              r,
              i,
              s,
              n,
              f,
              o,
              u = 0;

          switch (o = this.a, e = ut) {
            case ut:
              r = Math.LOG2E * Math.log(32768) - 8;
              break;

            default:
              t(Error("invalid compression method"));
          }

          switch (i = r << 4 | e, o[u++] = i, e) {
            case ut:
              switch (this.h) {
                case N.NONE:
                  n = 0;
                  break;

                case N.r:
                  n = 1;
                  break;

                case N.j:
                  n = 2;
                  break;

                default:
                  t(Error("unsupported compression type"));
              }

              break;

            default:
              t(Error("invalid compression method"));
          }

          return s = n << 6 | 0, o[u++] = s | 31 - (256 * i + s) % 31, f = h(this.input), this.z.b = u, u = (o = this.z.n()).length, a && ((o = new Uint8Array(o.buffer)).length <= u + 4 && (this.a = new Uint8Array(o.length + 4), this.a.set(o), o = this.a), o = o.subarray(0, u + 4)), o[u++] = f >> 24 & 255, o[u++] = f >> 16 & 255, o[u++] = f >> 8 & 255, o[u++] = 255 & f, o;
        }, s("Zlib.Deflate", C), s("Zlib.Deflate.compress", function (t, e) {
          return new C(t, e).n();
        }), s("Zlib.Deflate.CompressionType", N), s("Zlib.Deflate.CompressionType.NONE", N.NONE), s("Zlib.Deflate.CompressionType.FIXED", N.r), s("Zlib.Deflate.CompressionType.DYNAMIC", N.j);
        var Z = 0,
            L = 1,
            P = {
          D: Z,
          C: L
        };

        D.prototype.p = function () {
          for (; !this.s;) {
            var i = tt(this, 3);

            switch (1 & i && (this.s = r), i >>>= 1) {
              case 0:
                var s = this.input,
                    h = this.c,
                    n = this.a,
                    f = this.b,
                    o = e,
                    u = e,
                    l = e,
                    c = n.length,
                    d = e;

                switch (this.e = this.g = 0, (o = s[h++]) === e && t(Error("invalid uncompressed block header: LEN (first byte)")), u = o, (o = s[h++]) === e && t(Error("invalid uncompressed block header: LEN (second byte)")), u |= o << 8, (o = s[h++]) === e && t(Error("invalid uncompressed block header: NLEN (first byte)")), l = o, (o = s[h++]) === e && t(Error("invalid uncompressed block header: NLEN (second byte)")), u === ~(l |= o << 8) && t(Error("invalid uncompressed block header: length verify")), h + u > s.length && t(Error("input buffer is broken")), this.m) {
                  case Z:
                    for (; f + u > n.length;) {
                      if (u -= d = c - f, a) n.set(s.subarray(h, h + d), f), f += d, h += d;else for (; d--;) {
                        n[f++] = s[h++];
                      }
                      this.b = f, n = this.f(), f = this.b;
                    }

                    break;

                  case L:
                    for (; f + u > n.length;) {
                      n = this.f({
                        v: 2
                      });
                    }

                    break;

                  default:
                    t(Error("invalid inflate mode"));
                }

                if (a) n.set(s.subarray(h, h + u), f), f += u, h += u;else for (; u--;) {
                  n[f++] = s[h++];
                }
                this.c = h, this.b = f, this.a = n;
                break;

              case 1:
                this.o(Q, $);
                break;

              case 2:
                rt(this);
                break;

              default:
                t(Error("unknown BTYPE: " + i));
            }
          }

          return this.t();
        };

        var j,
            S,
            M = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
            R = a ? new Uint16Array(M) : M,
            F = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258],
            G = a ? new Uint16Array(F) : F,
            O = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0],
            _ = a ? new Uint8Array(O) : O,
            H = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],
            V = a ? new Uint16Array(H) : H,
            J = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
            X = a ? new Uint8Array(J) : J,
            q = new (a ? Uint8Array : Array)(288);

        for (j = 0, S = q.length; j < S; ++j) {
          q[j] = 143 >= j ? 8 : 255 >= j ? 9 : 279 >= j ? 7 : 8;
        }

        var K,
            Y,
            Q = y(q),
            W = new (a ? Uint8Array : Array)(30);

        for (K = 0, Y = W.length; K < Y; ++K) {
          W[K] = 5;
        }

        var $ = y(W);

        function tt(r, i) {
          for (var s, a = r.g, h = r.e, n = r.input, f = r.c; h < i;) {
            (s = n[f++]) === e && t(Error("input buffer is broken")), a |= s << h, h += 8;
          }

          return s = a & (1 << i) - 1, r.g = a >>> i, r.e = h - i, r.c = f, s;
        }

        function et(r, i) {
          for (var s, a, h, n = r.g, f = r.e, o = r.input, u = r.c, l = i[0], c = i[1]; f < c;) {
            (s = o[u++]) === e && t(Error("input buffer is broken")), n |= s << f, f += 8;
          }

          return h = (a = l[n & (1 << c) - 1]) >>> 16, r.g = n >> h, r.e = f - h, r.c = u, 65535 & a;
        }

        function rt(t) {
          function e(t, e, r) {
            var i, s, a, h;

            for (h = 0; h < t;) {
              switch (i = et(this, e)) {
                case 16:
                  for (a = 3 + tt(this, 2); a--;) {
                    r[h++] = s;
                  }

                  break;

                case 17:
                  for (a = 3 + tt(this, 3); a--;) {
                    r[h++] = 0;
                  }

                  s = 0;
                  break;

                case 18:
                  for (a = 11 + tt(this, 7); a--;) {
                    r[h++] = 0;
                  }

                  s = 0;
                  break;

                default:
                  s = r[h++] = i;
              }
            }

            return r;
          }

          var r,
              i,
              s,
              h,
              n = tt(t, 5) + 257,
              f = tt(t, 5) + 1,
              o = tt(t, 4) + 4,
              u = new (a ? Uint8Array : Array)(R.length);

          for (h = 0; h < o; ++h) {
            u[R[h]] = tt(t, 3);
          }

          r = y(u), i = new (a ? Uint8Array : Array)(n), s = new (a ? Uint8Array : Array)(f), t.o(y(e.call(t, n, r, i)), y(e.call(t, f, r, s)));
        }

        function it(e, r) {
          var i, s;

          switch (this.input = e, this.c = 0, !r && (r = {}) || (r.index && (this.c = r.index), r.verify && (this.M = r.verify)), i = e[this.c++], s = e[this.c++], 15 & i) {
            case ut:
              this.method = ut;
              break;

            default:
              t(Error("unsupported compression method"));
          }

          0 != ((i << 8) + s) % 31 && t(Error("invalid fcheck flag:" + ((i << 8) + s) % 31)), 32 & s && t(Error("fdict flag is not supported")), this.A = new D(e, {
            index: this.c,
            bufferSize: r.bufferSize,
            bufferType: r.bufferType,
            resize: r.resize
          });
        }

        D.prototype.o = function (t, e) {
          var r = this.a,
              i = this.b;
          this.u = t;

          for (var s, a, h, n, f = r.length - 258; 256 !== (s = et(this, t));) {
            if (256 > s) i >= f && (this.b = i, r = this.f(), i = this.b), r[i++] = s;else for (n = G[a = s - 257], 0 < _[a] && (n += tt(this, _[a])), s = et(this, e), h = V[s], 0 < X[s] && (h += tt(this, X[s])), i >= f && (this.b = i, r = this.f(), i = this.b); n--;) {
              r[i] = r[i++ - h];
            }
          }

          for (; 8 <= this.e;) {
            this.e -= 8, this.c--;
          }

          this.b = i;
        }, D.prototype.I = function (t, e) {
          var r = this.a,
              i = this.b;
          this.u = t;

          for (var s, a, h, n, f = r.length; 256 !== (s = et(this, t));) {
            if (256 > s) i >= f && (f = (r = this.f()).length), r[i++] = s;else for (n = G[a = s - 257], 0 < _[a] && (n += tt(this, _[a])), s = et(this, e), h = V[s], 0 < X[s] && (h += tt(this, X[s])), i + n > f && (f = (r = this.f()).length); n--;) {
              r[i] = r[i++ - h];
            }
          }

          for (; 8 <= this.e;) {
            this.e -= 8, this.c--;
          }

          this.b = i;
        }, D.prototype.f = function () {
          var t,
              e,
              r = new (a ? Uint8Array : Array)(this.b - 32768),
              i = this.b - 32768,
              s = this.a;
          if (a) r.set(s.subarray(32768, r.length));else for (t = 0, e = r.length; t < e; ++t) {
            r[t] = s[t + 32768];
          }
          if (this.k.push(r), this.q += r.length, a) s.set(s.subarray(i, i + 32768));else for (t = 0; 32768 > t; ++t) {
            s[t] = s[i + t];
          }
          return this.b = 32768, s;
        }, D.prototype.J = function (t) {
          var e,
              r,
              i,
              s = this.input.length / this.c + 1 | 0,
              h = this.input,
              n = this.a;
          return t && ("number" == typeof t.v && (s = t.v), "number" == typeof t.F && (s += t.F)), r = 2 > s ? (i = (h.length - this.c) / this.u[2] / 2 * 258 | 0) < n.length ? n.length + i : n.length << 1 : n.length * s, a ? (e = new Uint8Array(r)).set(n) : e = n, this.a = e;
        }, D.prototype.t = function () {
          var t,
              e,
              r,
              i,
              s,
              h = 0,
              n = this.a,
              f = this.k,
              o = new (a ? Uint8Array : Array)(this.q + (this.b - 32768));
          if (0 === f.length) return a ? this.a.subarray(32768, this.b) : this.a.slice(32768, this.b);

          for (e = 0, r = f.length; e < r; ++e) {
            for (i = 0, s = (t = f[e]).length; i < s; ++i) {
              o[h++] = t[i];
            }
          }

          for (e = 32768, r = this.b; e < r; ++e) {
            o[h++] = n[e];
          }

          return this.k = [], this.buffer = o;
        }, D.prototype.H = function () {
          var t,
              e = this.b;
          return a ? this.B ? (t = new Uint8Array(e)).set(this.a.subarray(0, e)) : t = this.a.subarray(0, e) : (this.a.length > e && (this.a.length = e), t = this.a), this.buffer = t;
        }, it.prototype.p = function () {
          var e,
              r = this.input;
          return e = this.A.p(), this.c = this.A.c, this.M && (r[this.c++] << 24 | r[this.c++] << 16 | r[this.c++] << 8 | r[this.c++]) >>> 0 !== h(e) && t(Error("invalid adler-32 checksum")), e;
        }, s("Zlib.Inflate", it), s("Zlib.Inflate.BufferType", P), P.ADAPTIVE = P.C, P.BLOCK = P.D, s("Zlib.Inflate.prototype.decompress", it.prototype.p);
        var st,
            at,
            ht = new (a ? Uint8Array : Array)(288);

        for (st = 0, at = ht.length; st < at; ++st) {
          ht[st] = 143 >= st ? 8 : 255 >= st ? 9 : 279 >= st ? 7 : 8;
        }

        y(ht);
        var nt,
            ft,
            ot = new (a ? Uint8Array : Array)(30);

        for (nt = 0, ft = ot.length; nt < ft; ++nt) {
          ot[nt] = 5;
        }

        y(ot);
        var ut = 8;
      }).call(e);
      var r = t("_", e.Zlib);
      r.Deflate = r.Deflate, r.Deflate.compress = r.Deflate.compress, r.Inflate = r.Inflate, r.Inflate.BufferType = r.Inflate.BufferType, r.Inflate.prototype.decompress = r.Inflate.prototype.decompress;

      for (var i = new Array(123), s = 0; s < 123; ++s) {
        i[s] = 64;
      }

      for (var a = 0; a < 64; ++a) {
        i["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(a)] = a;
      }

      var h = {
        name: "Jacob__Codec__Base64",
        decode: function decode(t) {
          var e,
              r,
              s,
              a,
              h,
              n,
              f = [],
              o = 0;

          for (t = t.replace(/[^A-Za-z0-9\+\/\=]/g, ""); o < t.length;) {
            e = i[t.charCodeAt(o++)] << 2 | (a = i[t.charCodeAt(o++)]) >> 4, r = (15 & a) << 4 | (h = i[t.charCodeAt(o++)]) >> 2, s = (3 & h) << 6 | (n = i[t.charCodeAt(o++)]), f.push(String.fromCharCode(e)), 64 !== h && f.push(String.fromCharCode(r)), 64 !== n && f.push(String.fromCharCode(s));
          }

          return f.join("");
        },
        decodeAsArray: function decodeAsArray(t, e) {
          var r,
              i,
              s,
              a = this.decode(t),
              h = [];

          for (r = 0, s = a.length / e; r < s; r++) {
            for (h[r] = 0, i = e - 1; i >= 0; --i) {
              h[r] += a.charCodeAt(r * e + i) << 8 * i;
            }
          }

          return h;
        }
      },
          n = function n(t) {
        this.data = t, this.debug = !1, this.gpflags = void 0, this.files = 0, this.unzipped = [], this.buf32k = new Array(32768), this.bIdx = 0, this.modeZIP = !1, this.bytepos = 0, this.bb = 1, this.bits = 0, this.nameBuf = [], this.fileout = void 0, this.literalTree = new Array(n.LITERALS), this.distanceTree = new Array(32), this.treepos = 0, this.Places = null, this.len = 0, this.fpos = new Array(17), this.fpos[0] = 0, this.flens = void 0, this.fmax = void 0;
      };

      n.gunzip = function (t) {
        return t.constructor === Array || t.constructor, new n(t).gunzip()[0][0];
      }, n.HufNode = function () {
        this.b0 = 0, this.b1 = 0, this.jump = null, this.jumppos = -1;
      }, n.LITERALS = 288, n.NAMEMAX = 256, n.bitReverse = [0, 128, 64, 192, 32, 160, 96, 224, 16, 144, 80, 208, 48, 176, 112, 240, 8, 136, 72, 200, 40, 168, 104, 232, 24, 152, 88, 216, 56, 184, 120, 248, 4, 132, 68, 196, 36, 164, 100, 228, 20, 148, 84, 212, 52, 180, 116, 244, 12, 140, 76, 204, 44, 172, 108, 236, 28, 156, 92, 220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146, 82, 210, 50, 178, 114, 242, 10, 138, 74, 202, 42, 170, 106, 234, 26, 154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230, 22, 150, 86, 214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110, 238, 30, 158, 94, 222, 62, 190, 126, 254, 1, 129, 65, 193, 33, 161, 97, 225, 17, 145, 81, 209, 49, 177, 113, 241, 9, 137, 73, 201, 41, 169, 105, 233, 25, 153, 89, 217, 57, 185, 121, 249, 5, 133, 69, 197, 37, 165, 101, 229, 21, 149, 85, 213, 53, 181, 117, 245, 13, 141, 77, 205, 45, 173, 109, 237, 29, 157, 93, 221, 61, 189, 125, 253, 3, 131, 67, 195, 35, 163, 99, 227, 19, 147, 83, 211, 51, 179, 115, 243, 11, 139, 75, 203, 43, 171, 107, 235, 27, 155, 91, 219, 59, 187, 123, 251, 7, 135, 71, 199, 39, 167, 103, 231, 23, 151, 87, 215, 55, 183, 119, 247, 15, 143, 79, 207, 47, 175, 111, 239, 31, 159, 95, 223, 63, 191, 127, 255], n.cplens = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], n.cplext = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 99, 99], n.cpdist = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577], n.cpdext = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], n.border = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], n.prototype.gunzip = function () {
        return this.outputArr = [], this.nextFile(), this.unzipped;
      }, n.prototype.readByte = function () {
        return this.bits += 8, this.bytepos < this.data.length ? this.data.charCodeAt(this.bytepos++) : -1;
      }, n.prototype.byteAlign = function () {
        this.bb = 1;
      }, n.prototype.readBit = function () {
        var t;
        return this.bits++, t = 1 & this.bb, this.bb >>= 1, 0 === this.bb && (this.bb = this.readByte(), t = 1 & this.bb, this.bb = this.bb >> 1 | 128), t;
      }, n.prototype.readBits = function (t) {
        for (var e = 0, r = t; r--;) {
          e = e << 1 | this.readBit();
        }

        return t && (e = n.bitReverse[e] >> 8 - t), e;
      }, n.prototype.flushBuffer = function () {
        this.bIdx = 0;
      }, n.prototype.addBuffer = function (t) {
        this.buf32k[this.bIdx++] = t, this.outputArr.push(String.fromCharCode(t)), 32768 === this.bIdx && (this.bIdx = 0);
      }, n.prototype.IsPat = function () {
        for (;;) {
          if (this.fpos[this.len] >= this.fmax) return -1;
          if (this.flens[this.fpos[this.len]] === this.len) return this.fpos[this.len]++;
          this.fpos[this.len]++;
        }
      }, n.prototype.Rec = function () {
        var t,
            e = this.Places[this.treepos];
        if (17 === this.len) return -1;
        if (this.treepos++, this.len++, (t = this.IsPat()) >= 0) e.b0 = t;else if (e.b0 = 32768, this.Rec()) return -1;
        if ((t = this.IsPat()) >= 0) e.b1 = t, e.jump = null;else if (e.b1 = 32768, e.jump = this.Places[this.treepos], e.jumppos = this.treepos, this.Rec()) return -1;
        return this.len--, 0;
      }, n.prototype.CreateTree = function (t, e, r) {
        var i;

        for (this.Places = t, this.treepos = 0, this.flens = r, this.fmax = e, i = 0; i < 17; i++) {
          this.fpos[i] = 0;
        }

        return this.len = 0, this.Rec() ? -1 : 0;
      }, n.prototype.DecodeValue = function (t) {
        for (var e, r, i = 0, s = t[i];;) {
          if (this.readBit()) {
            if (!(32768 & s.b1)) return s.b1;

            for (s = s.jump, e = t.length, r = 0; r < e; r++) {
              if (t[r] === s) {
                i = r;
                break;
              }
            }
          } else {
            if (!(32768 & s.b0)) return s.b0;
            s = t[++i];
          }
        }

        return -1;
      }, n.prototype.DeflateLoop = function () {
        var t, e, r;

        do {
          var i, s;
          if (t = this.readBit(), 0 === (e = this.readBits(2))) for (this.byteAlign(), i = this.readByte(), i |= this.readByte() << 8, s = this.readByte(), 65535 & (i ^ ~(s |= this.readByte() << 8)) && document.write("BlockLen checksum mismatch\n"); i--;) {
            a = this.readByte(), this.addBuffer(a);
          } else if (1 === e) for (;;) {
            if ((h = n.bitReverse[this.readBits(7)] >> 1) > 23 ? (h = h << 1 | this.readBit()) > 199 ? h = (h -= 128) << 1 | this.readBit() : (h -= 48) > 143 && (h += 136) : h += 256, h < 256) this.addBuffer(h);else {
              if (256 === h) break;

              for (h -= 257, y = this.readBits(n.cplext[h]) + n.cplens[h], h = n.bitReverse[this.readBits(5)] >> 3, n.cpdext[h] > 8 ? (b = this.readBits(8), b |= this.readBits(n.cpdext[h] - 8) << 8) : b = this.readBits(n.cpdext[h]), b += n.cpdist[h], h = 0; h < y; h++) {
                var a = this.buf32k[this.bIdx - b & 32767];
                this.addBuffer(a);
              }
            }
          } else if (2 === e) {
            var h,
                f,
                o,
                u,
                l,
                c = new Array(320);

            for (o = 257 + this.readBits(5), u = 1 + this.readBits(5), l = 4 + this.readBits(4), h = 0; h < 19; h++) {
              c[h] = 0;
            }

            for (h = 0; h < l; h++) {
              c[n.border[h]] = this.readBits(3);
            }

            for (y = this.distanceTree.length, r = 0; r < y; r++) {
              this.distanceTree[r] = new n.HufNode();
            }

            if (this.CreateTree(this.distanceTree, 19, c, 0)) return this.flushBuffer(), 1;

            for (f = o + u, r = 0; r < f;) {
              if ((h = this.DecodeValue(this.distanceTree)) < 16) c[r++] = h;else if (16 === h) {
                var d;
                if (r + (h = 3 + this.readBits(2)) > f) return this.flushBuffer(), 1;

                for (d = r ? c[r - 1] : 0; h--;) {
                  c[r++] = d;
                }
              } else {
                if (r + (h = 17 === h ? 3 + this.readBits(3) : 11 + this.readBits(7)) > f) return this.flushBuffer(), 1;

                for (; h--;) {
                  c[r++] = 0;
                }
              }
            }

            for (y = this.literalTree.length, r = 0; r < y; r++) {
              this.literalTree[r] = new n.HufNode();
            }

            if (this.CreateTree(this.literalTree, o, c, 0)) return this.flushBuffer(), 1;

            for (y = this.literalTree.length, r = 0; r < y; r++) {
              this.distanceTree[r] = new n.HufNode();
            }

            var p = new Array();

            for (r = o; r < c.length; r++) {
              p[r - o] = c[r];
            }

            if (this.CreateTree(this.distanceTree, u, p, 0)) return this.flushBuffer(), 1;

            for (;;) {
              if ((h = this.DecodeValue(this.literalTree)) >= 256) {
                var y, b;
                if (0 == (h -= 256)) break;

                for (h--, y = this.readBits(n.cplext[h]) + n.cplens[h], h = this.DecodeValue(this.distanceTree), n.cpdext[h] > 8 ? (b = this.readBits(8), b |= this.readBits(n.cpdext[h] - 8) << 8) : b = this.readBits(n.cpdext[h]), b += n.cpdist[h]; y--;) {
                  a = this.buf32k[this.bIdx - b & 32767], this.addBuffer(a);
                }
              } else this.addBuffer(h);
            }
          }
        } while (!t);

        return this.flushBuffer(), this.byteAlign(), 0;
      }, n.prototype.unzipFile = function (t) {
        var e;

        for (this.gunzip(), e = 0; e < this.unzipped.length; e++) {
          if (this.unzipped[e][1] === t) return this.unzipped[e][0];
        }
      }, n.prototype.nextFile = function () {
        this.outputArr = [], this.modeZIP = !1;
        var t = [];

        if (t[0] = this.readByte(), t[1] = this.readByte(), 120 === t[0] && 218 === t[1] && (this.DeflateLoop(), this.unzipped[this.files] = [this.outputArr.join(""), "geonext.gxt"], this.files++), 31 === t[0] && 139 === t[1] && (this.skipdir(), this.unzipped[this.files] = [this.outputArr.join(""), "file"], this.files++), 80 === t[0] && 75 === t[1] && (this.modeZIP = !0, t[2] = this.readByte(), t[3] = this.readByte(), 3 === t[2] && 4 === t[3])) {
          t[0] = this.readByte(), t[1] = this.readByte(), this.gpflags = this.readByte(), this.gpflags |= this.readByte() << 8;
          var e = this.readByte();
          e |= this.readByte() << 8, this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte();
          var r = this.readByte();
          r |= this.readByte() << 8;
          var i = this.readByte();

          for (i |= this.readByte() << 8, a = 0, this.nameBuf = []; r--;) {
            var s = this.readByte();
            "/" === s | ":" === s ? a = 0 : a < n.NAMEMAX - 1 && (this.nameBuf[a++] = String.fromCharCode(s));
          }

          this.fileout || (this.fileout = this.nameBuf);

          for (var a = 0; a < i;) {
            s = this.readByte(), a++;
          }

          8 === e && (this.DeflateLoop(), this.unzipped[this.files] = [this.outputArr.join(""), this.nameBuf.join("")], this.files++), this.skipdir();
        }
      }, n.prototype.skipdir = function () {
        var t,
            e,
            r = [];
        if (8 & this.gpflags && (r[0] = this.readByte(), r[1] = this.readByte(), r[2] = this.readByte(), r[3] = this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte()), this.modeZIP && this.nextFile(), r[0] = this.readByte(), 8 !== r[0]) return 0;
        if (this.gpflags = this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), 4 & this.gpflags) for (r[0] = this.readByte(), r[2] = this.readByte(), this.len = r[0] + 256 * r[1], t = 0; t < this.len; t++) {
          this.readByte();
        }
        if (8 & this.gpflags) for (t = 0, this.nameBuf = []; e = this.readByte();) {
          "7" !== e && ":" !== e || (t = 0), t < n.NAMEMAX - 1 && (this.nameBuf[t++] = e);
        }
        if (16 & this.gpflags) for (; e = this.readByte();) {
          ;
        }
        2 & this.gpflags && (this.readByte(), this.readByte()), this.DeflateLoop(), this.readByte(), this.readByte(), this.readByte(), this.readByte(), this.modeZIP && this.nextFile();
      };
      var f = t("c", {
        name: "Jacob__Codec"
      });
      f.Base64 = h, f.GZip = n, f.unzip = function () {
        return f.GZip.gunzip.apply(f.GZip, arguments);
      }, f.unzipBase64 = function () {
        var t = f.Base64.decode.apply(f.Base64, arguments);

        try {
          return f.GZip.gunzip.call(f.GZip, t);
        } catch (e) {
          return t.slice(7);
        }
      }, f.unzipBase64AsArray = function (t, e) {
        e = e || 1;
        var r,
            i,
            s,
            a = this.unzipBase64(t),
            h = [];

        for (r = 0, s = a.length / e; r < s; r++) {
          for (h[r] = 0, i = e - 1; i >= 0; --i) {
            h[r] += a.charCodeAt(r * e + i) << 8 * i;
          }
        }

        return h;
      }, f.unzipAsArray = function (t, e) {
        e = e || 1;
        var r,
            i,
            s,
            a = this.unzip(t),
            h = [];

        for (r = 0, s = a.length / e; r < s; r++) {
          for (h[r] = 0, i = e - 1; i >= 0; --i) {
            h[r] += a.charCodeAt(r * e + i) << 8 * i;
          }
        }

        return h;
      };
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/audio.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js"], function (t) {
  "use strict";

  var e, n, o, i, r, u, a, s, c, d, h, l, f, _, p, y, v, g, m, T, N, E, P, I, A, O, S;

  return {
    setters: [function (t) {
      e = t.co, n = t.e2, o = t.eO, i = t.eg, r = t.dd, u = t.eL, a = t.cp, s = t.l, c = t.ef, d = t.ec, h = t.df, l = t.gn, f = t.eh, _ = t.ed, p = t.ei, y = t.gX, v = t.ek, g = t.fZ, m = t.f_, T = t.fU, N = t.gf, E = t.dO, P = t.cR, I = t.cT, A = t.eM;
    }, function (t) {
      O = t.s, S = t.t;
    }, function () {}, function () {}, function () {}, function () {}, function () {}],
    execute: function execute() {
      var w, D, k;
      !function (t) {
        t.PLAYED = "play", t.PAUSED = "pause", t.STOPPED = "stop", t.SEEKED = "seeked", t.ENDED = "ended", t.INTERRUPTION_BEGIN = "interruptionBegin", t.INTERRUPTION_END = "interruptionEnd", t.USER_GESTURE = "on_gesture";
      }(w || (w = {})), function (t) {
        t[t.DOM_AUDIO = 0] = "DOM_AUDIO", t[t.WEB_AUDIO = 1] = "WEB_AUDIO", t[t.MINIGAME_AUDIO = 2] = "MINIGAME_AUDIO", t[t.NATIVE_AUDIO = 3] = "NATIVE_AUDIO", t[t.UNKNOWN_AUDIO = 4] = "UNKNOWN_AUDIO";
      }(D || (D = {})), function (t) {
        t[t.INIT = 0] = "INIT", t[t.PLAYING = 1] = "PLAYING", t[t.PAUSED = 2] = "PAUSED", t[t.STOPPED = 3] = "STOPPED", t[t.INTERRUPTED = 4] = "INTERRUPTED";
      }(k || (k = {}));
      var C = 0;

      function b(t, e) {
        var n;
        e.invoking || (e.invoking = !0, (n = e.func).call.apply(n, [t].concat(e.args)).then(function () {
          e.invoking = !1, t._operationQueue.shift(), t._eventTarget.emit(e.id.toString());
          var n = t._operationQueue[0];
          n && b(t, n);
        }).catch(function () {}));
      }

      function R(t, e, n) {
        var o = n.value;

        n.value = function () {
          for (var t = this, e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
            n[i] = arguments[i];
          }

          return new Promise(function (e) {
            var i = C++,
                r = t;
            r._operationQueue.push({
              id: i,
              func: o,
              args: n,
              invoking: !1
            }), r._eventTarget.once(i.toString(), e), b(r, r._operationQueue[0]);
          });
        };
      }

      var U,
          L,
          B,
          x,
          G,
          M,
          j,
          H,
          Y,
          K,
          W,
          Q,
          V = function () {
        function t(t) {
          this._nativeAudio = void 0, this._startTime = 0, this._startOffset = 0, this._isPaused = !0, this._nativeAudio = t;
        }

        var o = t.prototype;
        return o.destroy = function () {
          this._nativeAudio = void 0;
        }, o._now = function () {
          return performance.now() / 1e3;
        }, o._calculateCurrentTime = function () {
          var t = this._now() - this._startTime,
              e = this._startOffset + t;

          return e >= this.duration && (this._startTime = this._now(), this._startOffset = 0), e % this.duration;
        }, o.start = function () {
          this._isPaused = !1, this._startTime = this._now();
        }, o.pause = function () {
          this._isPaused || (this._isPaused = !0, this._startOffset = this._calculateCurrentTime());
        }, o.stop = function () {
          this._isPaused = !0, this._startOffset = 0;
        }, o.seek = function (t) {
          this._startTime = this._now(), this._startOffset = e(t, 0, this.duration);
        }, n(t, [{
          key: "duration",
          get: function get() {
            return this._nativeAudio.duration;
          }
        }, {
          key: "currentTime",
          get: function get() {
            return this._isPaused ? this._startOffset : this._calculateCurrentTime();
          }
        }]), t;
      }(),
          z = function () {
        function t(t, e) {
          var n = this;
          this._innerAudioContext = void 0, this._onPlayCb = void 0, this._onEndCb = void 0, this._innerAudioContext = t, t.volume = e, t.onPlay(function () {
            var t;
            null === (t = n._onPlayCb) || void 0 === t || t.call(n);
          }), t.onEnded(function () {
            var e;
            null === (e = n._onEndCb) || void 0 === e || e.call(n), t.destroy();
          });
        }

        var e = t.prototype;
        return e.play = function () {
          this._innerAudioContext.play();
        }, e.stop = function () {
          this._innerAudioContext.stop();
        }, n(t, [{
          key: "onPlay",
          get: function get() {
            return this._onPlayCb;
          },
          set: function set(t) {
            this._onPlayCb = t;
          }
        }, {
          key: "onEnd",
          get: function get() {
            return this._onEndCb;
          },
          set: function set(t) {
            this._onEndCb = t;
          }
        }]), t;
      }(),
          X = (L = function () {
        function t(t) {
          var e = this;
          this._innerAudioContext = void 0, this._state = k.INIT, this._onPlay = void 0, this._onPause = void 0, this._onStop = void 0, this._onSeeked = void 0, this._onEnded = void 0, this._audioTimer = void 0, this._readyToHandleOnShow = !1, this._eventTarget = new r(), this._operationQueue = [], this._innerAudioContext = t, this._audioTimer = new V(t), this._eventTarget = new r(), o.on("hide", this._onHide, this), o.on("show", this._onShow, this);
          var n = this._eventTarget;
          this._onPlay = function () {
            e._state = k.PLAYING, n.emit(w.PLAYED);
          }, t.onPlay(this._onPlay), this._onPause = function () {
            e._state = k.PAUSED, n.emit(w.PAUSED);
          }, t.onPause(this._onPause), this._onStop = function () {
            e._state = k.STOPPED, n.emit(w.STOPPED);
          }, t.onStop(this._onStop), this._onSeeked = function () {
            n.emit(w.SEEKED);
          }, t.onSeeked(this._onSeeked), this._onEnded = function () {
            e._audioTimer.stop(), e._state = k.INIT, n.emit(w.ENDED);
          }, t.onEnded(this._onEnded);
        }

        var i = t.prototype;
        return i.destroy = function () {
          var t = this;
          this._audioTimer.destroy(), o.off("hide", this._onHide, this), o.off("show", this._onShow, this), this._innerAudioContext && (["Play", "Pause", "Stop", "Seeked", "Ended"].forEach(function (e) {
            t._offEvent(e);
          }), this._innerAudioContext.destroy(), this._innerAudioContext = null);
        }, i._onHide = function () {
          var t = this;
          this._state === k.PLAYING && this.pause().then(function () {
            t._state = k.INTERRUPTED, t._readyToHandleOnShow = !0, t._eventTarget.emit(w.INTERRUPTION_BEGIN);
          }).catch(function () {});
        }, i._onShow = function () {
          var t = this;
          this._readyToHandleOnShow ? (this._state === k.INTERRUPTED && this.play().then(function () {
            t._eventTarget.emit(w.INTERRUPTION_END);
          }).catch(function () {}), this._readyToHandleOnShow = !1) : this._eventTarget.once(w.INTERRUPTION_BEGIN, this._onShow, this);
        }, i._offEvent = function (t) {
          this["_on" + t] && (this._innerAudioContext["off" + t](this["_on" + t]), this["_on" + t] = null);
        }, t.load = function (e) {
          return new Promise(function (n) {
            t.loadNative(e).then(function (e) {
              n(new t(e));
            }).catch(function () {});
          });
        }, t.loadNative = function (t) {
          return new Promise(function (e, n) {
            var o = u.createInnerAudioContext(),
                i = setTimeout(function () {
              r(), e(o);
            }, 8e3);

            function r() {
              o.offCanplay(a), o.offError(s);
            }

            function a() {
              r(), clearTimeout(i), e(o);
            }

            function s(t) {
              r(), clearTimeout(i), console.error("failed to load innerAudioContext"), n(new Error(t));
            }

            o.onCanplay(a), o.onError(s), o.src = t;
          });
        }, t.loadOneShotAudio = function (e, n) {
          return new Promise(function (o, i) {
            t.loadNative(e).then(function (t) {
              o(new z(t, n));
            }).catch(i);
          });
        }, i.seek = function (t) {
          var n = this;
          return new Promise(function (o) {
            t = e(t, 0, n.duration), n._eventTarget.once(w.SEEKED, o), n._innerAudioContext.seek(t), n._audioTimer.seek(t);
          });
        }, i.play = function () {
          var t = this;
          return new Promise(function (e) {
            t._eventTarget.once(w.PLAYED, e), t._innerAudioContext.play(), t._audioTimer.start();
          });
        }, i.pause = function () {
          var t = this;
          return new Promise(function (e) {
            t._eventTarget.once(w.PAUSED, e), t._innerAudioContext.pause(), t._audioTimer.pause();
          });
        }, i.stop = function () {
          var t = this;
          return new Promise(function (e) {
            t._eventTarget.once(w.STOPPED, e), t._innerAudioContext.stop(), t._audioTimer.stop();
          });
        }, i.onInterruptionBegin = function (t) {
          this._eventTarget.on(w.INTERRUPTION_BEGIN, t);
        }, i.offInterruptionBegin = function (t) {
          this._eventTarget.off(w.INTERRUPTION_BEGIN, t);
        }, i.onInterruptionEnd = function (t) {
          this._eventTarget.on(w.INTERRUPTION_END, t);
        }, i.offInterruptionEnd = function (t) {
          this._eventTarget.off(w.INTERRUPTION_END, t);
        }, i.onEnded = function (t) {
          this._eventTarget.on(w.ENDED, t);
        }, i.offEnded = function (t) {
          this._eventTarget.off(w.ENDED, t);
        }, n(t, [{
          key: "src",
          get: function get() {
            return this._innerAudioContext ? this._innerAudioContext.src : "";
          }
        }, {
          key: "type",
          get: function get() {
            return D.MINIGAME_AUDIO;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state;
          }
        }, {
          key: "loop",
          get: function get() {
            return this._innerAudioContext.loop;
          },
          set: function set(t) {
            this._innerAudioContext.loop = t;
          }
        }, {
          key: "volume",
          get: function get() {
            return this._innerAudioContext.volume;
          },
          set: function set(t) {
            t = a(t), this._innerAudioContext.volume = t;
          }
        }, {
          key: "duration",
          get: function get() {
            return this._innerAudioContext.duration;
          }
        }, {
          key: "currentTime",
          get: function get() {
            return this._audioTimer ? this._audioTimer.currentTime : 0;
          }
        }]), t;
      }(), i((U = L).prototype, "seek", [R], Object.getOwnPropertyDescriptor(U.prototype, "seek"), U.prototype), i(U.prototype, "play", [R], Object.getOwnPropertyDescriptor(U.prototype, "play"), U.prototype), i(U.prototype, "pause", [R], Object.getOwnPropertyDescriptor(U.prototype, "pause"), U.prototype), i(U.prototype, "stop", [R], Object.getOwnPropertyDescriptor(U.prototype, "stop"), U.prototype), U),
          Z = null === (B = u.tt) || void 0 === B || null === (x = B.getAudioContext) || void 0 === x ? void 0 : x.call(B),
          q = function () {
        function t(t, e) {
          this._bufferSourceNode = void 0, this._onPlayCb = void 0, this._onEndCb = void 0, this._bufferSourceNode = Z.createBufferSource(), this._bufferSourceNode.buffer = t, this._bufferSourceNode.loop = !1;
          var n = Z.createGain();
          n.gain.value = e, this._bufferSourceNode.connect(n), n.connect(Z.destination);
        }

        var e = t.prototype;
        return e.play = function () {
          var t,
              e = this;
          this._bufferSourceNode.start(), null === (t = this.onPlay) || void 0 === t || t.call(this), this._bufferSourceNode.onended = function () {
            var t;
            null === (t = e._onEndCb) || void 0 === t || t.call(e);
          };
        }, e.stop = function () {
          this._bufferSourceNode.onended = null, this._bufferSourceNode.stop();
        }, n(t, [{
          key: "onPlay",
          get: function get() {
            return this._onPlayCb;
          },
          set: function set(t) {
            this._onPlayCb = t;
          }
        }, {
          key: "onEnd",
          get: function get() {
            return this._onEndCb;
          },
          set: function set(t) {
            this._onEndCb = t;
          }
        }]), t;
      }(),
          F = (j = M = function () {
        function t(t, e) {
          this._src = void 0, this._audioBuffer = void 0, this._sourceNode = void 0, this._gainNode = void 0, this._volume = 1, this._loop = !1, this._state = k.INIT, this._audioTimer = void 0, this._readyToHandleOnShow = !1, this._eventTarget = new r(), this._operationQueue = [], this._audioBuffer = t, this._audioTimer = new V(t), this._gainNode = Z.createGain(), this._gainNode.connect(Z.destination), this._src = e, o.on("hide", this._onHide, this), o.on("show", this._onShow, this);
        }

        var e = t.prototype;
        return e.destroy = function () {
          this._audioTimer.destroy(), this._audioBuffer && (this._audioBuffer = null), o.off("hide", this._onHide, this), o.off("show", this._onShow, this);
        }, e._onHide = function () {
          var t = this;
          this._state === k.PLAYING && this.pause().then(function () {
            t._state = k.INTERRUPTED, t._readyToHandleOnShow = !0, t._eventTarget.emit(w.INTERRUPTION_BEGIN);
          }).catch(function () {});
        }, e._onShow = function () {
          var t = this;
          this._readyToHandleOnShow ? (this._state === k.INTERRUPTED && this.play().then(function () {
            t._eventTarget.emit(w.INTERRUPTION_END);
          }).catch(function () {}), this._readyToHandleOnShow = !1) : this._eventTarget.once(w.INTERRUPTION_BEGIN, this._onShow, this);
        }, t.load = function (e) {
          return new Promise(function (n) {
            t.loadNative(e).then(function (o) {
              n(new t(o, e));
            }).catch(function () {});
          });
        }, t.loadNative = function (e) {
          return new Promise(function (n, o) {
            var i = t._audioBufferCacheMap[e];
            i ? n(i) : fsUtils.readArrayBuffer(e, function (i, r) {
              i ? o(i) : Z.decodeAudioData(r).then(function (o) {
                t._audioBufferCacheMap[e] = o, n(o);
              }).catch(function () {});
            });
          });
        }, t.loadOneShotAudio = function (e, n) {
          return new Promise(function (o, i) {
            t.loadNative(e).then(function (t) {
              var e = new q(t, n);
              o(e);
            }).catch(i);
          });
        }, e.seek = function (t) {
          var e = this;
          return new Promise(function (n) {
            e._audioTimer.seek(t), e._state === k.PLAYING ? e._doPlay().then(n).catch(function () {}) : n();
          });
        }, e.play = function () {
          return this._doPlay();
        }, e._doPlay = function () {
          var t = this;
          return new Promise(function (e) {
            t._stopSourceNode(), t._sourceNode = Z.createBufferSource(), t._sourceNode.buffer = t._audioBuffer, t._sourceNode.loop = t._loop, t._sourceNode.connect(t._gainNode), t._sourceNode.start(0, t._audioTimer.currentTime), t._state = k.PLAYING, t._audioTimer.start(), t._sourceNode.onended = function () {
              t._audioTimer.stop(), t._eventTarget.emit(w.ENDED), t._state = k.INIT;
            }, e();
          });
        }, e._stopSourceNode = function () {
          try {
            this._sourceNode && (this._sourceNode.onended = null, this._sourceNode.stop());
          } catch (t) {}
        }, e.pause = function () {
          return this._state === k.PLAYING && this._sourceNode ? (this._audioTimer.pause(), this._state = k.PAUSED, this._stopSourceNode(), Promise.resolve()) : Promise.resolve();
        }, e.stop = function () {
          return this._sourceNode ? (this._audioTimer.stop(), this._state = k.STOPPED, this._stopSourceNode(), Promise.resolve()) : Promise.resolve();
        }, e.onInterruptionBegin = function (t) {
          this._eventTarget.on(w.INTERRUPTION_BEGIN, t);
        }, e.offInterruptionBegin = function (t) {
          this._eventTarget.off(w.INTERRUPTION_BEGIN, t);
        }, e.onInterruptionEnd = function (t) {
          this._eventTarget.on(w.INTERRUPTION_END, t);
        }, e.offInterruptionEnd = function (t) {
          this._eventTarget.off(w.INTERRUPTION_END, t);
        }, e.onEnded = function (t) {
          this._eventTarget.on(w.ENDED, t);
        }, e.offEnded = function (t) {
          this._eventTarget.off(w.ENDED, t);
        }, n(t, [{
          key: "src",
          get: function get() {
            return this._src;
          }
        }, {
          key: "type",
          get: function get() {
            return D.WEB_AUDIO;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state;
          }
        }, {
          key: "loop",
          get: function get() {
            return this._loop;
          },
          set: function set(t) {
            this._loop = t, this._sourceNode && (this._sourceNode.loop = t);
          }
        }, {
          key: "volume",
          get: function get() {
            return this._volume;
          },
          set: function set(t) {
            t = a(t), this._volume = t, this._gainNode.gain.value = t;
          }
        }, {
          key: "duration",
          get: function get() {
            return this._audioBuffer.duration;
          }
        }, {
          key: "currentTime",
          get: function get() {
            return this._audioTimer.currentTime;
          }
        }]), t;
      }(), M._audioBufferCacheMap = {}, i((G = j).prototype, "seek", [R], Object.getOwnPropertyDescriptor(G.prototype, "seek"), G.prototype), i(G.prototype, "play", [R], Object.getOwnPropertyDescriptor(G.prototype, "play"), G.prototype), i(G.prototype, "pause", [R], Object.getOwnPropertyDescriptor(G.prototype, "pause"), G.prototype), i(G.prototype, "stop", [R], Object.getOwnPropertyDescriptor(G.prototype, "stop"), G.prototype), G),
          J = function () {
        function t(t) {
          this._audio = void 0, this._audio = t;
        }

        var e = t.prototype;
        return e.play = function () {
          this._audio.play();
        }, e.stop = function () {
          this._audio.stop();
        }, n(t, [{
          key: "onPlay",
          get: function get() {
            return this._audio.onPlay;
          },
          set: function set(t) {
            this._audio.onPlay = t;
          }
        }, {
          key: "onEnd",
          get: function get() {
            return this._audio.onEnd;
          },
          set: function set(t) {
            this._audio.onEnd = t;
          }
        }]), t;
      }(),
          $ = function () {
        function t(t) {
          this._player = void 0, this._player = t;
        }

        t.load = function (e) {
          return new Promise(function (n) {
            "object" == (0, _typeof2.default)(u.tt) && void 0 !== u.tt.getAudioContext ? F.load(e).then(function (e) {
              n(new t(e));
            }).catch(function () {}) : X.load(e).then(function (e) {
              n(new t(e));
            }).catch(function () {});
          });
        };

        var e = t.prototype;
        return e.destroy = function () {
          this._player.destroy();
        }, t.loadNative = function (t) {
          return "object" == (0, _typeof2.default)(u.tt) && void 0 !== u.tt.getAudioContext ? F.loadNative(t) : X.loadNative(t);
        }, t.loadOneShotAudio = function (t, e) {
          return new Promise(function (n, o) {
            "object" == (0, _typeof2.default)(u.tt) && void 0 !== u.tt.getAudioContext ? F.loadOneShotAudio(t, e).then(function (t) {
              n(new J(t));
            }).catch(o) : X.loadOneShotAudio(t, e).then(function (t) {
              n(new J(t));
            }).catch(o);
          });
        }, e.seek = function (t) {
          return this._player.seek(t);
        }, e.play = function () {
          return this._player.play();
        }, e.pause = function () {
          return this._player.pause();
        }, e.stop = function () {
          return this._player.stop();
        }, e.onInterruptionBegin = function (t) {
          this._player.onInterruptionBegin(t);
        }, e.offInterruptionBegin = function (t) {
          this._player.offInterruptionBegin(t);
        }, e.onInterruptionEnd = function (t) {
          this._player.onInterruptionEnd(t);
        }, e.offInterruptionEnd = function (t) {
          this._player.offInterruptionEnd(t);
        }, e.onEnded = function (t) {
          this._player.onEnded(t);
        }, e.offEnded = function (t) {
          this._player.offEnded(t);
        }, n(t, [{
          key: "src",
          get: function get() {
            return this._player.src;
          }
        }, {
          key: "type",
          get: function get() {
            return this._player.type;
          }
        }, {
          key: "state",
          get: function get() {
            return this._player.state;
          }
        }, {
          key: "loop",
          get: function get() {
            return this._player.loop;
          },
          set: function set(t) {
            this._player.loop = t;
          }
        }, {
          key: "volume",
          get: function get() {
            return this._player.volume;
          },
          set: function set(t) {
            this._player.volume = t;
          }
        }, {
          key: "duration",
          get: function get() {
            return this._player.duration;
          }
        }, {
          key: "currentTime",
          get: function get() {
            return this._player.currentTime;
          }
        }]), t;
      }();

      $.maxAudioChannel = 10, s.AudioPlayer = $;
      var tt = t("AudioClip", c("cc.AudioClip")((Q = W = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, f(e, "_duration", K, _(e)), e._loadMode = D.UNKNOWN_AUDIO, e._meta = null, e._player = void 0, e;
        }

        d(e, t);
        var o = e.prototype;
        return o.destroy = function () {
          var e,
              n = t.prototype.destroy.call(this);
          return null === (e = this._player) || void 0 === e || e.destroy(), n;
        }, o.validate = function () {
          return !!this._meta;
        }, o.getDuration = function () {
          return this._duration ? this._duration : this._meta ? this._meta.duration : 0;
        }, o.getCurrentTime = function () {
          return this._player ? this._player.currentTime : 0;
        }, o.getVolume = function () {
          return this._player ? this._player.volume : 0;
        }, o.getLoop = function () {
          return !!this._player && this._player.loop;
        }, o.setCurrentTime = function (t) {
          var e;
          null === (e = this._player) || void 0 === e || e.seek(t).catch(function () {});
        }, o.setVolume = function (t) {
          this._player && (this._player.volume = t);
        }, o.setLoop = function (t) {
          this._player && (this._player.loop = t);
        }, o.play = function () {
          var t;
          null === (t = this._player) || void 0 === t || t.play().catch(function () {});
        }, o.pause = function () {
          var t;
          null === (t = this._player) || void 0 === t || t.pause().catch(function () {});
        }, o.stop = function () {
          var t;
          null === (t = this._player) || void 0 === t || t.stop().catch(function () {});
        }, o.playOneShot = function (t) {
          void 0 === t && (t = 1), this._nativeAsset && $.loadOneShotAudio(this._nativeAsset.url, t).then(function (t) {
            t.play();
          }).catch(function () {});
        }, n(e, [{
          key: "_nativeAsset",
          get: function get() {
            return this._meta;
          },
          set: function set(t) {
            this._meta = t, t ? (this._loadMode = t.type, this._player = t.player) : (this._meta = null, this._loadMode = D.UNKNOWN_AUDIO, this._duration = 0);
          }
        }, {
          key: "_nativeDep",
          get: function get() {
            return {
              uuid: this._uuid,
              audioLoadMode: this.loadMode,
              ext: this._native,
              __isNative__: !0
            };
          }
        }, {
          key: "loadMode",
          get: function get() {
            return this._loadMode;
          }
        }, {
          key: "state",
          get: function get() {
            return this._player ? this._player.state : k.INIT;
          }
        }]), e;
      }(h), W.AudioType = D, K = i((Y = Q).prototype, "_duration", [p], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), i(Y.prototype, "_nativeDep", [l], Object.getOwnPropertyDescriptor(Y.prototype, "_nativeDep"), Y.prototype), H = Y)) || H);

      function et(t, e, n) {
        $.load(t, {
          audioLoadMode: e.audioLoadMode
        }).then(function (e) {
          var o = {
            player: e,
            url: t,
            duration: e.duration,
            type: e.type
          };
          n(null, o);
        }).catch(function (t) {
          n(t);
        });
      }

      function nt(t, e, n, o) {
        var i = new tt();
        i._nativeUrl = t, i._nativeAsset = e, i._duration = e.duration, o(null, i);
      }

      s.AudioClip = tt, O.register({
        ".mp3": et,
        ".ogg": et,
        ".wav": et,
        ".m4a": et
      }), S.register({
        ".mp3": nt,
        ".ogg": nt,
        ".wav": nt,
        ".m4a": nt
      });

      var ot,
          it,
          rt,
          ut,
          at,
          st,
          ct,
          dt,
          ht,
          lt,
          ft,
          _t,
          pt,
          yt,
          vt,
          gt,
          mt,
          Tt,
          Nt,
          Et = new (function () {
        function t() {
          this._oneShotAudioInfoList = [], this._audioPlayerInfoList = [];
        }

        var e = t.prototype;
        return e._findIndex = function (t, e) {
          return t.findIndex(function (t) {
            return t.audio === e;
          });
        }, e._tryAddPlaying = function (t, e) {
          var n = this._findIndex(t, e);

          return n > -1 ? (t[n].playTime = performance.now(), !1) : (t.push({
            audio: e,
            playTime: performance.now()
          }), !0);
        }, e.addPlaying = function (t) {
          if (t instanceof $) {
            if (this._tryAddPlaying(this._audioPlayerInfoList, t)) return;
          } else this._tryAddPlaying(this._oneShotAudioInfoList, t);
        }, e._tryRemovePlaying = function (t, e) {
          var n = this._findIndex(t, e);

          return -1 !== n && (y(t, n), !0);
        }, e.removePlaying = function (t) {
          if (t instanceof $) {
            if (this._tryRemovePlaying(this._audioPlayerInfoList, t)) return;
          } else this._tryRemovePlaying(this._oneShotAudioInfoList, t);
        }, e.discardOnePlayingIfNeeded = function () {
          var t;
          this._audioPlayerInfoList.length + this._oneShotAudioInfoList.length < $.maxAudioChannel || (this._oneShotAudioInfoList.length > 0 ? this._oneShotAudioInfoList.forEach(function (e) {
            (!t || e.playTime < t.playTime) && (t = e);
          }) : this._audioPlayerInfoList.forEach(function (e) {
            (!t || e.playTime < t.playTime) && (t = e);
          }), t && (t.audio.stop(), this.removePlaying(t.audio)));
        }, t;
      }())();

      !function (t) {
        t.STARTED = "started", t.ENDED = "ended";
      }(Nt || (Nt = {}));
      var Pt,
          It = (ot = c("cc.AudioSource"), it = g(), rt = m(), ut = v(tt), at = v(tt), st = T(), ct = T(), dt = T(), ht = N(), lt = T(), Pt = ot(ft = it(ft = rt((Tt = mt = function (t) {
        function o() {
          for (var e, n = arguments.length, o = new Array(n), i = 0; i < n; i++) {
            o[i] = arguments[i];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, f(e, "_clip", pt, _(e)), e._player = null, f(e, "_loop", yt, _(e)), f(e, "_playOnAwake", vt, _(e)), f(e, "_volume", gt, _(e)), e._cachedCurrentTime = 0, e._operationsBeforeLoading = [], e._isLoaded = !1, e._lastSetClip = void 0, e;
        }

        d(o, t);
        var i = o.prototype;
        return i._syncPlayer = function () {
          var t = this,
              e = this._clip;
          this._isLoaded = !1, e && this._lastSetClip !== e && (e._nativeAsset ? (this._lastSetClip = e, $.load(e._nativeAsset.url, {
            audioLoadMode: e.loadMode
          }).then(function (n) {
            t._lastSetClip === e && (t._isLoaded = !0, t._player && (t._player.offEnded(), t._player.offInterruptionBegin(), t._player.offInterruptionEnd(), t._player.destroy()), t._player = n, n.onEnded(function () {
              Et.removePlaying(n), t.node.emit(Nt.ENDED, t);
            }), n.onInterruptionBegin(function () {
              Et.removePlaying(n);
            }), n.onInterruptionEnd(function () {
              Et.addPlaying(n);
            }), t._syncStates());
          }).catch(function () {})) : console.error("Invalid audio clip"));
        }, i.onLoad = function () {
          this._syncPlayer();
        }, i.onEnable = function () {
          this._playOnAwake && !this.playing && this.play();
        }, i.onDisable = function () {
          var t = this._getRootNode();

          (null == t ? void 0 : t._persistNode) || this.pause();
        }, i.onDestroy = function () {
          var t;
          this.stop(), null === (t = this._player) || void 0 === t || t.destroy();
        }, i._getRootNode = function () {
          for (var t, e, n = this.node, o = null === (t = n) || void 0 === t || null === (e = t.parent) || void 0 === e ? void 0 : e.parent; o;) {
            var i, r, u;
            o = null === (r = n = null === (i = n) || void 0 === i ? void 0 : i.parent) || void 0 === r || null === (u = r.parent) || void 0 === u ? void 0 : u.parent;
          }

          return n;
        }, i.play = function () {
          var t,
              e,
              n = this;
          this._isLoaded ? (Et.discardOnePlayingIfNeeded(), this.state === k.PLAYING && (null === (e = this._player) || void 0 === e || e.stop().catch(function () {})), null === (t = this._player) || void 0 === t || t.play().then(function () {
            Et.addPlaying(n._player), n.node.emit(Nt.STARTED, n);
          }).catch(function () {})) : this._operationsBeforeLoading.push("play");
        }, i.pause = function () {
          var t,
              e = this;
          this._isLoaded ? null === (t = this._player) || void 0 === t || t.pause().then(function () {
            Et.removePlaying(e._player);
          }).catch(function () {}) : this._operationsBeforeLoading.push("pause");
        }, i.stop = function () {
          var t,
              e = this;
          this._isLoaded ? null === (t = this._player) || void 0 === t || t.stop().then(function () {
            Et.removePlaying(e._player);
          }).catch(function () {}) : this._operationsBeforeLoading.push("stop");
        }, i.playOneShot = function (t, e) {
          void 0 === e && (e = 1), t._nativeAsset ? $.loadOneShotAudio(t._nativeAsset.url, this._volume * e, {
            audioLoadMode: t.loadMode
          }).then(function (t) {
            Et.discardOnePlayingIfNeeded(), t.onPlay = function () {
              Et.addPlaying(t);
            }, t.onEnd = function () {
              Et.removePlaying(t);
            }, t.play();
          }).catch(function () {}) : console.error("Invalid audio clip");
        }, i._syncStates = function () {
          var t = this;
          this._player && this._player.seek(this._cachedCurrentTime).then(function () {
            t._player && (t._player.loop = t._loop, t._player.volume = t._volume, t._operationsBeforeLoading.forEach(function (e) {
              var n;
              null === (n = t[e]) || void 0 === n || n.call(t);
            }), t._operationsBeforeLoading.length = 0);
          }).catch(function () {});
        }, n(o, [{
          key: "clip",
          get: function get() {
            return this._clip;
          },
          set: function set(t) {
            t !== this._clip && (this._clip = t, this._syncPlayer());
          }
        }, {
          key: "loop",
          get: function get() {
            return this._loop;
          },
          set: function set(t) {
            this._loop = t, this._player && (this._player.loop = t);
          }
        }, {
          key: "playOnAwake",
          get: function get() {
            return this._playOnAwake;
          },
          set: function set(t) {
            this._playOnAwake = t;
          }
        }, {
          key: "volume",
          get: function get() {
            return this._volume;
          },
          set: function set(t) {
            Number.isNaN(t) ? console.warn("illegal audio volume!") : (t = e(t, 0, 1), this._player ? (this._player.volume = t, this._volume = this._player.volume) : this._volume = t);
          }
        }, {
          key: "currentTime",
          get: function get() {
            return this._player ? this._player.currentTime : this._cachedCurrentTime;
          },
          set: function set(t) {
            var n;
            Number.isNaN(t) ? console.warn("illegal audio time!") : (t = e(t, 0, this.duration), this._cachedCurrentTime = t, null === (n = this._player) || void 0 === n || n.seek(this._cachedCurrentTime).catch(function () {}));
          }
        }, {
          key: "duration",
          get: function get() {
            var t, e;
            return null !== (t = null === (e = this._clip) || void 0 === e ? void 0 : e.getDuration()) && void 0 !== t ? t : this._player ? this._player.currentTime : 0;
          }
        }, {
          key: "state",
          get: function get() {
            return this._player ? this._player.state : k.INIT;
          }
        }, {
          key: "playing",
          get: function get() {
            return this.state === o.AudioState.PLAYING;
          }
        }], [{
          key: "maxAudioChannel",
          get: function get() {
            return $.maxAudioChannel;
          }
        }]), o;
      }(E), mt.AudioState = k, mt.EventType = Nt, pt = i((_t = Tt).prototype, "_clip", [ut], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), yt = i(_t.prototype, "_loop", [p], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), vt = i(_t.prototype, "_playOnAwake", [p], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), gt = i(_t.prototype, "_volume", [p], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), i(_t.prototype, "clip", [at, st], Object.getOwnPropertyDescriptor(_t.prototype, "clip"), _t.prototype), i(_t.prototype, "loop", [ct], Object.getOwnPropertyDescriptor(_t.prototype, "loop"), _t.prototype), i(_t.prototype, "playOnAwake", [dt], Object.getOwnPropertyDescriptor(_t.prototype, "playOnAwake"), _t.prototype), i(_t.prototype, "volume", [ht, lt], Object.getOwnPropertyDescriptor(_t.prototype, "volume"), _t.prototype), ft = _t)) || ft) || ft) || ft, t({
        AudioSource: Pt,
        AudioSourceComponent: Pt
      }), Pt);
      P(tt, "AudioClip", [{
        name: "PlayingState",
        newName: "AudioState",
        target: It,
        targetName: "AudioSource"
      }]), I(tt.prototype, "AudioClip.prototype", ["state", "play", "pause", "stop", "playOneShot", "setCurrentTime", "setVolume", "setLoop", "getCurrentTime", "getVolume", "getLoop"].map(function (t) {
        return {
          name: t,
          suggest: "please use AudioSource.prototype." + t + " instead"
        };
      })), s.AudioSourceComponent = It, A.setClassAlias(It, "cc.AudioSourceComponent");
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/base.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js"], function (e) {
  "use strict";

  var t, r, a, n, o, i, l, u, s, c, d, p, g, m, f, b, S, h, T, C, v, y, I, P, A, R, B, D, F, N, _, M, w, E, V, x, O, L, j, k, z, H, U, G, Q, W, Y, J, X, q, K, Z, $, ee, te, re, ae, ne, oe, ie, le, ue, se, ce, de, pe, ge, me, fe, be, Se, he, Te, Ce, ve, ye, Ie, Pe, Ae, Re, Be, De, Fe, Ne, _e, Me, we, Ee, Ve, xe, Oe, Le, je, ke, ze, He, Ue, Ge, Qe, We, Ye, Je, Xe, qe, Ke, Ze, $e, et, tt, rt, at, nt, ot, it, lt, ut, st, ct, dt, pt, gt, mt, ft, bt, St, ht, Tt, Ct, vt, yt, It, Pt, At, Rt, Bt, Dt, Ft, Nt, _t, Mt, wt, Et, Vt, xt, Ot, Lt, jt, kt, zt, Ht, Ut, Gt, Qt, Wt, Yt, Jt, Xt, qt, Kt, Zt, $t, er, tr, rr, ar, nr, or, ir, lr, ur, sr, cr, dr, pr, gr, mr, fr, br, Sr, hr, Tr, Cr, vr, yr, Ir, Pr, Ar, Rr, Br, Dr, Fr, Nr, _r, Mr, wr, Er, Vr, xr, Or, Lr, jr, kr, zr, Hr, Ur, Gr, Qr, Wr, Yr, Jr, Xr, qr, Kr, Zr, $r, ea, ta, ra, aa, na, oa, ia, la, ua, sa, ca, da, pa, ga, ma;

  return {
    setters: [function (vr) {
      t = vr.P, r = vr.R, a = vr.C, n = vr.l, o = vr.a, i = vr.w, l = vr.e, u = vr.b, s = vr._, c = vr.c, d = vr.d, p = vr.f, g = vr.g, m = vr.h, f = vr.j, b = vr.i, S = vr.m, h = vr.k, T = vr.n, C = vr.o, v = vr.p, y = vr.q, I = vr.s, P = vr.r, vr.t, A = vr.D, R = vr.B, B = vr.u, D = vr.O, F = vr.S, N = vr.A, _ = vr.v, M = vr.F, w = vr.x, E = vr.y, V = vr.T, x = vr.z, O = vr.E, L = vr.M, j = vr.G, k = vr.H, z = vr.I, H = vr.J, U = vr.K, G = vr.L, Q = vr.N, W = vr.Q, Y = vr.U, J = vr.V, X = vr.W, q = vr.X, K = vr.Y, Z = vr.Z, $ = vr.$, ee = vr.a0, te = vr.a1, re = vr.a2, ae = vr.a3, ne = vr.a4, oe = vr.a5, ie = vr.a6, le = vr.a7, ue = vr.a8, se = vr.a9, ce = vr.aa, de = vr.ab, pe = vr.ac, ge = vr.ad, me = vr.ae, fe = vr.af, be = vr.ag, Se = vr.ah, he = vr.ai, Te = vr.aj, Ce = vr.ak, ve = vr.al, ye = vr.am, Ie = vr.an, Pe = vr.ao, Ae = vr.ap, Re = vr.aq, Be = vr.ar, De = vr.as, Fe = vr.at, Ne = vr.au, _e = vr.av, Me = vr.aw, we = vr.ax, Ee = vr.ay, Ve = vr.az, xe = vr.aA, Oe = vr.aB, Le = vr.aC, je = vr.aD, ke = vr.aE, ze = vr.aF, He = vr.aG, Ue = vr.aH, Ge = vr.aI, Qe = vr.aJ, We = vr.aK, Ye = vr.aL, Je = vr.aM, Xe = vr.aN, qe = vr.aO, Ke = vr.aP, Ze = vr.aQ, $e = vr.aR, et = vr.aS, tt = vr.aT, rt = vr.aU, at = vr.aV, nt = vr.aW, ot = vr.aX, it = vr.aY, lt = vr.aZ, ut = vr.a_, st = vr.a$, ct = vr.b0, dt = vr.b1, pt = vr.b2, gt = vr.b3, mt = vr.b4, ft = vr.b5, bt = vr.b6, St = vr.b7, ht = vr.b8, Tt = vr.b9, Ct = vr.ba, vt = vr.bb, yt = vr.bc, It = vr.bd, Pt = vr.be, At = vr.bf, Rt = vr.bg, Bt = vr.bh, Dt = vr.bi, Ft = vr.bj, Nt = vr.bk, _t = vr.bl, Mt = vr.bm, wt = vr.bn, Et = vr.bo, Vt = vr.bp, xt = vr.bq, Ot = vr.br, Lt = vr.bs, jt = vr.bt, kt = vr.bu, zt = vr.bv, Ht = vr.bw, Ut = vr.bx, Gt = vr.by, Qt = vr.bz, Wt = vr.bA, Yt = vr.bB, Jt = vr.bC, Xt = vr.bD, qt = vr.bE, Kt = vr.bF, Zt = vr.bG, $t = vr.bH, er = vr.bI, tr = vr.bJ, rr = vr.bK, ar = vr.bL, nr = vr.bM, or = vr.bN, ir = vr.bO, lr = vr.bP, ur = vr.bQ, sr = vr.bR, cr = vr.bS, dr = vr.bT, pr = vr.bU, gr = vr.bV, mr = vr.bW, fr = vr.bX, br = vr.bY, Sr = vr.bZ, hr = vr.b_, Tr = vr.b$, Cr = vr.c0;
      var yr = {};
      yr.AffineTransform = vr.ce, yr.Asset = vr.df, yr.BaseNode = vr.dG, yr.BitMask = vr.cI, yr.BufferAsset = vr.dg, yr.CCBoolean = vr.d6, yr.CCClass = vr.cZ, yr.CCFloat = vr.d5, yr.CCInteger = vr.d4, yr.CCObject = vr.c_, yr.CCString = vr.d7, yr.CachedArray = vr.C, yr.Color = vr.cj, yr.CompactValueTypeArray = vr.d8, yr.Component = vr.dO, yr.DebugMode = vr.dA, yr.Details = vr.d1, yr.EPSILON = vr.cl, yr.EffectAsset = vr.dq, yr.Enum = vr.cJ, yr.Event = vr.dc, yr.EventTarget = vr.dd, yr.Eventify = vr.de, yr.ExtrapolationMode = vr.dW, yr.ImageAsset = vr.dm, yr.JavaScript = vr.du, yr.JsonAsset = vr.dl, yr.Layers = vr.dJ, yr.MATH_FLOAT_ARRAY = vr.cG, yr.Mat3 = vr.cb, yr.Mat4 = vr.cc, yr.Material = vr.dr, yr.MathBase = vr.cH, yr.MissingScript = vr.dN, yr.Node = vr.dH, yr.NodeActivator = vr.dL, yr.ObjectCurve = vr.d_, yr.Pool = vr.P, yr.Prefab = vr.dh, yr.PrefabLink = vr.cP, yr.PrivateNode = vr.dM, yr.Quat = vr.c9, yr.QuatCurve = vr.dY, yr.QuatInterpolationMode = vr.dZ, yr.RealCurve = vr.dU, yr.RealInterpolationMode = vr.dV, yr.Rect = vr.ch, yr.RecyclePool = vr.R, yr.RenderTexture = vr.ds, yr.RenderingSubMesh = vr.di, yr.Scene = vr.dI, yr.SceneAsset = vr.dj, yr.Script = vr.dt, yr.Size = vr.cf, yr.SystemEventType = vr.dD, yr.TangentWeightMode = vr.dX, yr.TextAsset = vr.dk, yr.Texture2D = vr.dn, yr.TextureCube = vr.dp, yr.TypeScript = vr.dv, yr.VERSION = vr.c1, yr.ValueType = vr.cL, yr.Vec2 = vr.c3, yr.Vec3 = vr.c5, yr.Vec4 = vr.c7, yr.WorldNode3DToLocalNodeUI = vr.cV, yr.WorldNode3DToWorldNodeUI = vr.cW, yr._decorator = vr.cY, yr.absMax = vr.cE, yr.absMaxComponent = vr.cD, yr.approx = vr.cn, yr.assert = vr.b, yr.assertID = vr.g, yr.bezier = vr.dS, yr.bezierByTime = vr.dT, yr.bits = vr.c2, yr.builtinResMgr = vr.dQ, yr.ccenum = vr.cK, yr.cclegacy = vr.l, yr.clamp = vr.co, yr.clamp01 = vr.cp, yr.color = vr.ck, yr.convertUtils = vr.cX, yr.debug = vr.dw, yr.deserialize = vr.d0, yr.deserializeTag = vr.da, yr.easing = vr.dR, yr.editorExtrasTag = vr.d9, yr.effects = vr.dP, yr.enumerableProps = vr.cF, yr.equals = vr.cm, yr.error = vr.e, yr.errorID = vr.f, yr.find = vr.dK, yr.getError = vr.dz, yr.getPhaseID = vr.dF, yr.getSerializationMetadata = vr.d2, yr.instantiate = vr.d3, yr.inverseLerp = vr.cC, yr.isDisplayStats = vr.dx, yr.isValid = vr.c$, yr.js = vr.cM, yr.lerp = vr.cq, yr.log = vr.a, yr.logID = vr.c, yr.macro = vr.dC, yr.markAsWarning = vr.cT, yr.mat4 = vr.cd, yr.misc = vr.cN, yr.murmurhash2_32_gc = vr.cU, yr.nextPow2 = vr.cz, yr.path = vr.cO, yr.pingPong = vr.cB, yr.pipeline = vr.dE, yr.pseudoRandom = vr.cw, yr.pseudoRandomRange = vr.cx, yr.pseudoRandomRangeInt = vr.cy, yr.quat = vr.ca, yr.random = vr.ct, yr.randomRange = vr.cu, yr.randomRangeInt = vr.cv, yr.rect = vr.ci, yr.removeProperty = vr.cS, yr.repeat = vr.cA, yr.replaceProperty = vr.cR, yr.serializeTag = vr.db, yr.setDefaultLogTimes = vr.cQ, yr.setDisplayStats = vr.dy, yr.size = vr.cg, yr.sys = vr.dB, yr.toDegree = vr.cs, yr.toRadian = vr.cr, yr.v2 = vr.c4, yr.v3 = vr.c6, yr.v4 = vr.c8, yr.warn = vr.w, yr.warnID = vr.d, e(yr);
    }, function (t) {
      vr = t.U, yr = t.M, Ir = t.a, Pr = t.b;
      var r = {};
      r.AnimationManager = t.q, r.AssetLibrary = t.f, r.AssetManager = t.A, r.CCLoader = t.C, r.ComponentModifier = t.i, r.CurveValueAdapter = t.j, r.Director = t.D, r.EventHandler = t.E, r.HierachyModifier = t.H, r.Scheduler = t.S, r.System = t.h, r.UniformCurveValueAdapter = t.k, r.assetManager = t.e, r.createDefaultPipeline = t.c, r.director = t.d, r.geometry = t.g, r.isCustomTargetModifier = t.p, r.isElementModifier = t.o, r.isPropertyModifier = t.n, r.loader = t.l, r.math = t.m, r.resources = t.r, r.url = t.u, e(r);
    }, function (t) {
      Ar = t.C, Rr = t.a, Br = t.b, Dr = t.c, Fr = t.d, Nr = t.S, _r = t.e, Mr = t.f, wr = t.V, Er = t.D, Vr = t.g, xr = t.L, Or = t.n, Lr = t.h, jr = t.M, kr = t.i, zr = t.R, Hr = t.j, Ur = t.k, Gr = t.l, Qr = t.m, Wr = t.o, Yr = t.P;
      var r = {};
      r.DeferredPipeline = t.H, r.EventAcceleration = t.t, r.EventKeyboard = t.u, r.EventMouse = t.E, r.EventTouch = t.r, r.ForwardFlow = t.A, r.ForwardPipeline = t.F, r.ForwardStage = t.B, r.Game = t.G, r.GbufferFlow = t.I, r.GbufferStage = t.J, r.InstancedBuffer = t.X, r.KeyCode = t.K, r.LightingFlow = t.N, r.LightingStage = t.O, r.PipelineStateManager = t.Y, r.PostprocessStage = t.Q, r.RenderFlow = t.y, r.RenderPipeline = t.x, r.RenderStage = t.z, r.ResolutionPolicy = t.q, r.ShadowFlow = t.U, r.ShadowStage = t.W, r.Touch = t.T, r.View = t.p, r.game = t.w, r.screen = t.s, r.view = t.v, e(r);
    }, function (e) {
      Jr = e.R, Xr = e.P, qr = e.n, Kr = e.T;
    }, function (t) {
      var r = {};
      r.SystemEvent = t.S, r.systemEvent = t.s, e(r);
    }, function (t) {
      var r = {};
      r.Camera = t.C, r.CameraComponent = t.C, e(r);
    }, function (t) {
      e("RenderableComponent", t.R);
    }, function (t) {
      Zr = t.T, $r = t.a, ea = t.R, ta = t.V, ra = t.Q, aa = t.C, na = t.S, oa = t.O, ia = t.i, la = t.b, ua = t.H, sa = t.c, ca = t.d, da = t.e, pa = t.f, ga = t.g, ma = t.h;
      var r = {};
      r.AnimCurve = t.m, r.Animation = t.k, r.AnimationClip = t.A, r.AnimationComponent = t.k, r.AnimationState = t.j, r.CubicSplineNumberValue = t.h, r.CubicSplineQuatValue = t.g, r.CubicSplineVec2Value = t.d, r.CubicSplineVec3Value = t.e, r.CubicSplineVec4Value = t.f, r.EventInfo = t.E, r.RatioSampler = t.l, r.computeRatioByType = t.n, r.getPathFromRoot = t.o, r.getWorldTransformUntilRoot = t.p, r.sampleAnimationCurve = t.s, e(r);
    }],
    execute: function execute() {
      e("memop", Object.freeze({
        __proto__: null,
        Pool: t,
        RecyclePool: r,
        CachedArray: a
      })), n.log = o, n.warn = i, n.error = l, n.assert = u, n._throw = s, n.logID = c, n.warnID = d, n.errorID = p, n.assertID = g, n.debug = m, n.path = {
        join: f,
        extname: b,
        mainFileName: S,
        basename: h,
        dirname: T,
        changeExtname: C,
        changeBasename: v,
        _normalize: y,
        stripSep: I,

        get sep() {
          return P();
        }

      };
      var fa = 0,
          ba = {};
      e("gfx", Object.freeze({
        __proto__: null,
        DescriptorSet: A,
        Buffer: R,
        CommandBuffer: B,

        get ObjectType() {
          return D;
        },

        get Status() {
          return F;
        },

        get API() {
          return N;
        },

        get SurfaceTransform() {
          return _;
        },

        get Feature() {
          return M;
        },

        get Format() {
          return w;
        },

        get FormatType() {
          return E;
        },

        get Type() {
          return V;
        },

        get BufferUsageBit() {
          return x;
        },

        get BufferFlagBit() {
          return O;
        },

        get MemoryAccessBit() {
          return L;
        },

        get MemoryUsageBit() {
          return j;
        },

        get TextureType() {
          return k;
        },

        get TextureUsageBit() {
          return z;
        },

        get TextureFlagBit() {
          return H;
        },

        get SampleCount() {
          return U;
        },

        get Filter() {
          return G;
        },

        get Address() {
          return Q;
        },

        get ComparisonFunc() {
          return W;
        },

        get StencilOp() {
          return Y;
        },

        get BlendFactor() {
          return J;
        },

        get BlendOp() {
          return X;
        },

        get ColorMask() {
          return q;
        },

        get ShaderStageFlagBit() {
          return K;
        },

        get LoadOp() {
          return Z;
        },

        get StoreOp() {
          return $;
        },

        get AccessType() {
          return ee;
        },

        get ResolveMode() {
          return te;
        },

        get PipelineBindPoint() {
          return re;
        },

        get PrimitiveMode() {
          return ae;
        },

        get PolygonMode() {
          return ne;
        },

        get ShadeModel() {
          return oe;
        },

        get CullMode() {
          return ie;
        },

        get DynamicStateFlagBit() {
          return le;
        },

        get StencilFace() {
          return ue;
        },

        get DescriptorType() {
          return se;
        },

        get QueueType() {
          return ce;
        },

        get CommandBufferType() {
          return de;
        },

        get ClearFlagBit() {
          return pe;
        },

        Size: ge,
        DeviceCaps: me,
        Offset: fe,
        Rect: be,
        Extent: Se,
        TextureSubresLayers: he,
        TextureSubresRange: Te,
        TextureCopy: Ce,
        TextureBlit: ve,
        BufferTextureCopy: ye,
        Viewport: Ie,
        Color: Pe,
        BindingMappingInfo: Ae,
        BufferInfo: Re,
        BufferViewInfo: Be,
        DrawInfo: De,
        DispatchInfo: Fe,
        IndirectBuffer: Ne,
        TextureInfo: _e,
        TextureViewInfo: Me,
        SamplerInfo: we,
        Uniform: Ee,
        UniformBlock: Ve,
        UniformSamplerTexture: xe,
        UniformSampler: Oe,
        UniformTexture: Le,
        UniformStorageImage: je,
        UniformStorageBuffer: ke,
        UniformInputAttachment: ze,
        ShaderStage: He,
        Attribute: Ue,
        ShaderInfo: Ge,
        InputAssemblerInfo: Qe,
        ColorAttachment: We,
        DepthStencilAttachment: Ye,
        SubpassInfo: Je,
        SubpassDependency: Xe,
        RenderPassInfo: qe,
        GlobalBarrierInfo: Ke,
        TextureBarrierInfo: Ze,
        FramebufferInfo: $e,
        DescriptorSetLayoutBinding: et,
        DescriptorSetLayoutInfo: tt,
        DescriptorSetInfo: rt,
        PipelineLayoutInfo: at,
        InputState: nt,
        CommandBufferInfo: ot,
        QueueInfo: it,
        FormatInfo: lt,
        MemoryStatus: ut,
        DynamicStencilStates: st,
        DynamicStates: ct,
        Obj: dt,
        DeviceInfo: pt,

        get AttributeName() {
          return gt;
        },

        FormatInfos: mt,
        DESCRIPTOR_BUFFER_TYPE: ft,
        DESCRIPTOR_SAMPLER_TYPE: bt,
        DESCRIPTOR_DYNAMIC_TYPE: St,
        DRAW_INFO_SIZE: ht,
        IsPowerOf2: Tt,
        FormatSize: Ct,
        FormatSurfaceSize: vt,
        GetTypeSize: yt,
        getTypedArrayConstructor: It,
        Device: Pt,
        Framebuffer: At,
        InputAssembler: Rt,
        DescriptorSetLayout: Bt,
        PipelineLayout: Dt,
        RasterizerState: Ft,
        DepthStencilState: Nt,
        BlendTarget: _t,
        BlendState: Mt,
        PipelineStateInfo: wt,
        PipelineState: Et,
        Queue: Vt,
        RenderPass: xt,
        Sampler: Ot,
        Shader: Lt,
        Texture: jt,
        GlobalBarrier: kt,
        TextureBarrier: zt
      }));

      var Sa = Object.freeze({
        __proto__: null,
        Ambient: Ht,

        get CameraFOVAxis() {
          return Ar;
        },

        get CameraProjection() {
          return Rr;
        },

        get CameraAperture() {
          return Br;
        },

        get CameraISO() {
          return Dr;
        },

        get CameraShutter() {
          return Fr;
        },

        SKYBOX_FLAG: Nr,
        Camera: _r,
        CameraVisFlags: Mr,
        VisibilityFlags: wr,
        DirectionalLight: Er,
        ColorTemperatureToRGB: Vr,

        get LightType() {
          return xr;
        },

        nt2lm: Or,
        Light: Lr,

        get ModelType() {
          return jr;
        },

        Model: kr,
        ShadowSize: Ut,
        ShadowType: Gt,
        PCFType: Qt,
        Shadows: Wt,
        RenderScene: zr,
        Skybox: Hr,
        SphereLight: Ur,
        SpotLight: Gr,
        SubModel: Qr,
        NativeNode: null,
        NativeScene: null,
        NativeAABB: null,
        NativeModel: null,
        NativeSkinningModel: null,
        NativeBakedAnimInfo: null,
        NativeBakedJointInfo: null,
        NativeBakedSkinningModel: null,
        NativeLight: null,
        NativeDirectionalLight: null,
        NativeSphereLight: null,
        NativeSpotLight: null,
        NaitveSkybox: null,
        NativeFog: null,
        NativeRenderWindow: null,
        NativeCamera: null,
        NativePass: null,
        NativeSubModel: null,
        NativeDrawBatch2D: null,
        NativeRenderScene: null,
        NativeAmbient: null,
        NativeShadow: null,
        NativeRoot: null,
        NativeJointTransform: null,
        NativeJointInfo: null,
        NativePipelineSharedSceneData: null
      }),
          ha = function ha(e) {
        if (void 0 === ba[e]) {
          var t = 1 << fa;
          ba[e] = t, fa += 1;
        }
      },
          Ta = Object.freeze({
        __proto__: null,
        addStage: ha,
        scene: Sa,
        createIA: function createIA(e, t) {
          if (!t.positions) return console.error("The data must have positions field"), null;

          for (var r = [], a = t.positions.length / 3, n = 0; n < a; ++n) {
            r.push(t.positions[3 * n], t.positions[3 * n + 1], t.positions[3 * n + 2]), t.normals && r.push(t.normals[3 * n], t.normals[3 * n + 1], t.normals[3 * n + 2]), t.uvs && r.push(t.uvs[2 * n], t.uvs[2 * n + 1]), t.colors && r.push(t.colors[3 * n], t.colors[3 * n + 1], t.colors[3 * n + 2]);
          }

          var o = [];
          o.push(new Ue(gt.ATTR_POSITION, w.RGB32F)), t.normals && o.push(new Ue(gt.ATTR_NORMAL, w.RGB32F)), t.uvs && o.push(new Ue(gt.ATTR_TEX_COORD, w.RG32F)), t.colors && o.push(new Ue(gt.ATTR_COLOR, w.RGB32F));
          var i = e.createBuffer(new Re(x.VERTEX | x.TRANSFER_DST, j.HOST | j.DEVICE, 4 * r.length, 4 * r.length / a));
          i.update(new Float32Array(r));
          var l = null;
          return t.indices && (l = e.createBuffer(new Re(x.INDEX | x.TRANSFER_DST, j.HOST | j.DEVICE, 2 * t.indices.length, 2))).update(new Uint16Array(t.indices)), e.createInputAssembler(new Qe(o, [i], l));
        },

        get RenderQueue() {
          return Jr;
        },

        get PassStage() {
          return Xr;
        },

        get PropertyType() {
          return Yt;
        },

        genHandle: Jt,
        getPropertyTypeFromHandle: Xt,
        getTypeFromHandle: qt,
        getSetIndexFromHandle: Kt,
        getBindingFromHandle: Zt,
        getOffsetFromHandle: $t,
        customizeType: er,
        type2reader: tr,
        type2writer: rr,
        getDefaultFromType: ar,
        overrideMacros: nr,

        get BatchingSchemes() {
          return or;
        },

        Pass: ir,
        getDeviceShaderVersion: lr,
        programLib: ur,

        get SamplerInfoIndex() {
          return sr;
        },

        defaultSamplerHash: cr,
        genSamplerHash: dr,
        samplerLib: pr,
        nearestPOT: qr,
        TextureBufferPool: Kr,
        MaterialInstance: Wr,
        PassInstance: Yr,

        get PoolType() {
          return gr;
        },

        NULL_HANDLE: mr,

        get NodeView() {
          return fr;
        },

        NodePool: br,

        get PassView() {
          return Sr;
        },

        PassPool: hr,

        get AABBView() {
          return Tr;
        },

        AABBPool: Cr
      });

      e("renderer", Ta), e("animation", Object.freeze({
        __proto__: null,
        UniformProxyFactory: vr,
        MorphWeightValueProxy: yr,
        MorphWeightsValueProxy: Ir,
        MorphWeightsAllValueProxy: Pr,
        Track: Zr,
        TrackPath: $r,
        RealTrack: ea,
        VectorTrack: ta,
        QuatTrack: ra,
        ColorTrack: aa,
        SizeTrack: na,
        ObjectTrack: oa,
        isPropertyPath: ia,
        isCustomPath: la,
        HierarchyPath: ua,
        ComponentPath: sa,
        CubicSplineVec2Value: ca,
        CubicSplineVec3Value: da,
        CubicSplineVec4Value: pa,
        CubicSplineQuatValue: ga,
        CubicSplineNumberValue: ma
      }));
      var Ca = e("NodePool", function () {
        function e(e) {
          this.poolHandlerComp = void 0, this._pool = void 0, this.poolHandlerComp = e, this._pool = [];
        }

        var t = e.prototype;
        return t.size = function () {
          return this._pool.length;
        }, t.clear = function () {
          for (var e = this._pool.length, t = 0; t < e; ++t) {
            this._pool[t].destroy();
          }

          this._pool.length = 0;
        }, t.put = function (e) {
          if (e && -1 === this._pool.indexOf(e)) {
            e.removeFromParent();
            var t = this.poolHandlerComp ? e.getComponent(this.poolHandlerComp) : null;
            t && t.unuse && t.unuse(), this._pool.push(e);
          }
        }, t.get = function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }

          var a = this._pool.length - 1;
          if (a < 0) return null;
          var n = this._pool[a];
          this._pool.length = a;
          var o = this.poolHandlerComp ? n.getComponent(this.poolHandlerComp) : null;
          return o && o.reuse && o.reuse(arguments), n;
        }, e;
      }());
      n.NodePool = Ca, n.renderer = Ta;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/camera-component-ec549211.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js"], function (t) {
  "use strict";

  var e, r, i, o, a, n, c, s, h, p, _, u, l, f, y, m, g, b, d, w, T, v, O, x, S, j, C, D, E, P, z, k, A;

  return {
    setters: [function (t) {
      e = t.c5, r = t.cJ, i = t.ac, o = t.ef, a = t.ek, n = t.dJ, c = t.ds, s = t.fY, h = t.ec, p = t.eb, _ = t.e1, u = t.l, l = t.cr, f = t.e2, y = t.eg, m = t.fZ, g = t.f_, b = t.ej, d = t.fU, w = t.eh, T = t.ed, v = t.dO, O = t.ei, x = t.cj, S = t.ch, j = t.d$;
    }, function (t) {
      C = t.a, D = t.C, E = t.b, P = t.d, z = t.c, k = t.S, A = t.v;
    }],
    execute: function execute() {
      var F,
          H,
          R,
          I,
          L,
          N,
          W,
          M,
          U,
          V,
          G,
          X,
          Y,
          B,
          J,
          K,
          Z,
          $,
          q,
          Q,
          tt,
          et,
          rt,
          it,
          ot,
          at,
          nt,
          ct,
          st,
          ht,
          pt,
          _t,
          ut,
          lt,
          ft,
          yt,
          mt,
          gt,
          bt,
          dt,
          wt,
          Tt,
          vt,
          Ot,
          xt,
          St,
          jt,
          Ct,
          Dt,
          Et,
          Pt,
          zt,
          kt,
          At,
          Ft,
          Ht,
          Rt,
          It,
          Lt,
          Nt,
          Wt,
          Mt,
          Ut,
          Vt,
          Gt,
          Xt,
          Yt,
          Bt = new e(),
          Jt = r(C),
          Kt = r(D),
          Zt = r(E),
          $t = r(P),
          qt = r(z),
          Qt = r({
        SKYBOX: k | i.DEPTH_STENCIL,
        SOLID_COLOR: i.ALL,
        DEPTH_ONLY: i.DEPTH_STENCIL,
        DONT_CLEAR: i.NONE
      }),
          te = t("C", (F = o("cc.Camera"), H = m(), R = g(), I = b(), L = d(), N = a(n.BitMask), W = b(), M = d(), U = a(Qt), V = b(), G = d(), X = b(), Y = d(), B = b(), J = d(), K = b(), Z = d(), $ = a(Jt), q = b(), Q = d(), tt = a(Kt), et = b(), rt = d(), it = b(), ot = d(), at = b(), nt = d(), ct = b(), st = d(), ht = b(), pt = d(), _t = a(Zt), ut = b(), lt = d(), ft = a($t), yt = b(), mt = d(), gt = a(qt), bt = b(), dt = d(), wt = b(), Tt = d(), vt = a(c), Ot = b(), xt = d(), F(St = H(St = R(St = s((Yt = Xt = function (t) {
        function r() {
          for (var e, r = arguments.length, i = new Array(r), o = 0; o < r; o++) {
            i[o] = arguments[o];
          }

          return e = t.call.apply(t, [this].concat(i)) || this, w(e, "_projection", Ct, T(e)), w(e, "_priority", Dt, T(e)), w(e, "_fov", Et, T(e)), w(e, "_fovAxis", Pt, T(e)), w(e, "_orthoHeight", zt, T(e)), w(e, "_near", kt, T(e)), w(e, "_far", At, T(e)), w(e, "_color", Ft, T(e)), w(e, "_depth", Ht, T(e)), w(e, "_stencil", Rt, T(e)), w(e, "_clearFlags", It, T(e)), w(e, "_rect", Lt, T(e)), w(e, "_aperture", Nt, T(e)), w(e, "_shutter", Wt, T(e)), w(e, "_iso", Mt, T(e)), w(e, "_screenScale", Ut, T(e)), w(e, "_visibility", Vt, T(e)), w(e, "_targetTexture", Gt, T(e)), e._camera = null, e._inEditorMode = !1, e._flows = void 0, e;
        }

        h(r, t);
        var i = r.prototype;
        return i.onLoad = function () {
          this._createCamera();
        }, i.onEnable = function () {
          this.node.hasChangedFlags |= p.POSITION, this._camera && this._attachToScene();
        }, i.onDisable = function () {
          this._camera && this._detachFromScene();
        }, i.onDestroy = function () {
          this._camera && (this._camera.destroy(), this._camera = null), this._targetTexture && this._targetTexture.off("resize");
        }, i.screenPointToRay = function (t, e, r) {
          return r || (r = _.create()), this._camera && this._camera.screenPointToRay(r, t, e), r;
        }, i.worldToScreen = function (t, r) {
          return r || (r = new e()), this._camera && this._camera.worldToScreen(r, t), r;
        }, i.screenToWorld = function (t, e) {
          return e || (e = this.node.getWorldPosition()), this._camera && this._camera.screenToWorld(e, t), e;
        }, i.convertToUINode = function (t, r, i) {
          if (i || (i = new e()), !this._camera) return i;
          this.worldToScreen(t, Bt);
          var o = r.getComponent("cc.UITransform"),
              a = A.getVisibleSize(),
              n = Bt.x - .5 * this._camera.width,
              c = Bt.y - .5 * this._camera.height;
          return Bt.x = n / u.view.getScaleX() + .5 * a.width, Bt.y = c / u.view.getScaleY() + .5 * a.height, o && o.convertToNodeSpaceAR(Bt, i), i;
        }, i._createCamera = function () {
          this._camera || (this._camera = u.director.root.createCamera(), this._camera.initialize({
            name: this.node.name,
            node: this.node,
            projection: this._projection,
            window: this._inEditorMode ? u.director.root && u.director.root.mainWindow : u.director.root && u.director.root.tempWindow,
            priority: this._priority
          }), this._camera.viewport = this._rect, this._camera.fovAxis = this._fovAxis, this._camera.fov = l(this._fov), this._camera.orthoHeight = this._orthoHeight, this._camera.nearClip = this._near, this._camera.farClip = this._far, this._camera.clearColor = this._color, this._camera.clearDepth = this._depth, this._camera.clearStencil = this._stencil, this._camera.clearFlag = this._clearFlags, this._camera.visibility = this._visibility, this._camera.aperture = this._aperture, this._camera.shutter = this._shutter, this._camera.iso = this._iso), this._updateTargetTexture();
        }, i._attachToScene = function () {
          this.node.scene && this._camera && (this._camera && this._camera.scene && this._camera.scene.removeCamera(this._camera), this._getRenderScene().addCamera(this._camera));
        }, i._detachFromScene = function () {
          this._camera && this._camera.scene && this._camera.scene.removeCamera(this._camera);
        }, i._checkTargetTextureEvent = function (t) {
          var e = this;
          t && t.off("resize"), this._targetTexture && this._targetTexture.on("resize", function (t) {
            e._camera && e._camera.setFixedSize(t.width, t.height);
          }, this);
        }, i._updateTargetTexture = function () {
          if (this._camera && this._targetTexture) {
            var t = this._targetTexture.window;
            this._camera.changeTargetWindow(t), this._camera.setFixedSize(t.width, t.height);
          }
        }, f(r, [{
          key: "camera",
          get: function get() {
            return this._camera;
          }
        }, {
          key: "priority",
          get: function get() {
            return this._priority;
          },
          set: function set(t) {
            this._priority = t, this._camera && (this._camera.priority = t);
          }
        }, {
          key: "visibility",
          get: function get() {
            return this._visibility;
          },
          set: function set(t) {
            this._visibility = t, this._camera && (this._camera.visibility = t);
          }
        }, {
          key: "clearFlags",
          get: function get() {
            return this._clearFlags;
          },
          set: function set(t) {
            this._clearFlags = t, this._camera && (this._camera.clearFlag = t);
          }
        }, {
          key: "clearColor",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color.set(t), this._camera && (this._camera.clearColor = this._color);
          }
        }, {
          key: "clearDepth",
          get: function get() {
            return this._depth;
          },
          set: function set(t) {
            this._depth = t, this._camera && (this._camera.clearDepth = t);
          }
        }, {
          key: "clearStencil",
          get: function get() {
            return this._stencil;
          },
          set: function set(t) {
            this._stencil = t, this._camera && (this._camera.clearStencil = t);
          }
        }, {
          key: "projection",
          get: function get() {
            return this._projection;
          },
          set: function set(t) {
            this._projection = t, this._camera && (this._camera.projectionType = t);
          }
        }, {
          key: "fovAxis",
          get: function get() {
            return this._fovAxis;
          },
          set: function set(t) {
            t !== this._fovAxis && (this._fovAxis = t, this._camera && (this._camera.fovAxis = t, t === D.VERTICAL ? this.fov = this._fov * this._camera.aspect : this.fov = this._fov / this._camera.aspect));
          }
        }, {
          key: "fov",
          get: function get() {
            return this._fov;
          },
          set: function set(t) {
            this._fov = t, this._camera && (this._camera.fov = l(t));
          }
        }, {
          key: "orthoHeight",
          get: function get() {
            return this._orthoHeight;
          },
          set: function set(t) {
            this._orthoHeight = t, this._camera && (this._camera.orthoHeight = t);
          }
        }, {
          key: "near",
          get: function get() {
            return this._near;
          },
          set: function set(t) {
            this._near = t, this._camera && (this._camera.nearClip = t);
          }
        }, {
          key: "far",
          get: function get() {
            return this._far;
          },
          set: function set(t) {
            this._far = t, this._camera && (this._camera.farClip = t);
          }
        }, {
          key: "aperture",
          get: function get() {
            return this._aperture;
          },
          set: function set(t) {
            this._aperture = t, this._camera && (this._camera.aperture = t);
          }
        }, {
          key: "shutter",
          get: function get() {
            return this._shutter;
          },
          set: function set(t) {
            this._shutter = t, this._camera && (this._camera.shutter = t);
          }
        }, {
          key: "iso",
          get: function get() {
            return this._iso;
          },
          set: function set(t) {
            this._iso = t, this._camera && (this._camera.iso = t);
          }
        }, {
          key: "rect",
          get: function get() {
            return this._rect;
          },
          set: function set(t) {
            this._rect = t, this._camera && (this._camera.viewport = t);
          }
        }, {
          key: "targetTexture",
          get: function get() {
            return this._targetTexture;
          },
          set: function set(t) {
            if (this._targetTexture !== t) {
              var e = this._targetTexture;
              this._targetTexture = t, this._checkTargetTextureEvent(e), this._updateTargetTexture(), !t && this._camera && (this._camera.changeTargetWindow(null), this._camera.isWindowSize = !0), this.node.emit(r.TARGET_TEXTURE_CHANGE, this);
            }
          }
        }, {
          key: "screenScale",
          get: function get() {
            return this._screenScale;
          },
          set: function set(t) {
            this._screenScale = t, this._camera && (this._camera.screenScale = t);
          }
        }, {
          key: "inEditorMode",
          get: function get() {
            return this._inEditorMode;
          },
          set: function set(t) {
            this._inEditorMode = t, this._camera && this._camera.changeTargetWindow(t ? u.director.root && u.director.root.mainWindow : u.director.root && u.director.root.tempWindow);
          }
        }]), r;
      }(v), Xt.ProjectionType = Jt, Xt.FOVAxis = Kt, Xt.ClearFlag = Qt, Xt.Aperture = Zt, Xt.Shutter = $t, Xt.ISO = qt, Xt.TARGET_TEXTURE_CHANGE = "tex-change", Ct = y((jt = Yt).prototype, "_projection", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Jt.PERSPECTIVE;
        }
      }), Dt = y(jt.prototype, "_priority", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Et = y(jt.prototype, "_fov", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 45;
        }
      }), Pt = y(jt.prototype, "_fovAxis", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Kt.VERTICAL;
        }
      }), zt = y(jt.prototype, "_orthoHeight", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 10;
        }
      }), kt = y(jt.prototype, "_near", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), At = y(jt.prototype, "_far", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1e3;
        }
      }), Ft = y(jt.prototype, "_color", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new x("#333333");
        }
      }), Ht = y(jt.prototype, "_depth", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Rt = y(jt.prototype, "_stencil", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), It = y(jt.prototype, "_clearFlags", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Qt.SOLID_COLOR;
        }
      }), Lt = y(jt.prototype, "_rect", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new S(0, 0, 1, 1);
        }
      }), Nt = y(jt.prototype, "_aperture", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Zt.F16_0;
        }
      }), Wt = y(jt.prototype, "_shutter", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return $t.D125;
        }
      }), Mt = y(jt.prototype, "_iso", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return qt.ISO100;
        }
      }), Ut = y(jt.prototype, "_screenScale", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Vt = y(jt.prototype, "_visibility", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return j;
        }
      }), Gt = y(jt.prototype, "_targetTexture", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), y(jt.prototype, "priority", [I, L], Object.getOwnPropertyDescriptor(jt.prototype, "priority"), jt.prototype), y(jt.prototype, "visibility", [N, W, M], Object.getOwnPropertyDescriptor(jt.prototype, "visibility"), jt.prototype), y(jt.prototype, "clearFlags", [U, V, G], Object.getOwnPropertyDescriptor(jt.prototype, "clearFlags"), jt.prototype), y(jt.prototype, "clearColor", [X, Y], Object.getOwnPropertyDescriptor(jt.prototype, "clearColor"), jt.prototype), y(jt.prototype, "clearDepth", [B, J], Object.getOwnPropertyDescriptor(jt.prototype, "clearDepth"), jt.prototype), y(jt.prototype, "clearStencil", [K, Z], Object.getOwnPropertyDescriptor(jt.prototype, "clearStencil"), jt.prototype), y(jt.prototype, "projection", [$, q, Q], Object.getOwnPropertyDescriptor(jt.prototype, "projection"), jt.prototype), y(jt.prototype, "fovAxis", [tt, et, rt], Object.getOwnPropertyDescriptor(jt.prototype, "fovAxis"), jt.prototype), y(jt.prototype, "fov", [it, ot], Object.getOwnPropertyDescriptor(jt.prototype, "fov"), jt.prototype), y(jt.prototype, "orthoHeight", [at, nt], Object.getOwnPropertyDescriptor(jt.prototype, "orthoHeight"), jt.prototype), y(jt.prototype, "near", [ct, st], Object.getOwnPropertyDescriptor(jt.prototype, "near"), jt.prototype), y(jt.prototype, "far", [ht, pt], Object.getOwnPropertyDescriptor(jt.prototype, "far"), jt.prototype), y(jt.prototype, "aperture", [_t, ut, lt], Object.getOwnPropertyDescriptor(jt.prototype, "aperture"), jt.prototype), y(jt.prototype, "shutter", [ft, yt, mt], Object.getOwnPropertyDescriptor(jt.prototype, "shutter"), jt.prototype), y(jt.prototype, "iso", [gt, bt, dt], Object.getOwnPropertyDescriptor(jt.prototype, "iso"), jt.prototype), y(jt.prototype, "rect", [wt, Tt], Object.getOwnPropertyDescriptor(jt.prototype, "rect"), jt.prototype), y(jt.prototype, "targetTexture", [vt, Ot, xt], Object.getOwnPropertyDescriptor(jt.prototype, "targetTexture"), jt.prototype), St = jt)) || St) || St) || St) || St));

      u.Camera = te;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/capsule-1280d817.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js"], function (n) {
  "use strict";

  var s;
  return {
    setters: [function (n) {
      s = n.c5;
    }],
    execute: function execute() {
      function e(n) {
        return void 0 === (n = n || {}).includeNormal && (n.includeNormal = !0), void 0 === n.includeUV && (n.includeUV = !0), n;
      }

      n({
        a: e,
        b: function b(n) {
          var e = (n = n || {}).widthSegments || 1,
              c = n.heightSegments || 1,
              l = n.lengthSegments || 1,
              g = (n.width || 1) / 2,
              m = (n.height || 1) / 2,
              M = (n.length || 1) / 2,
              P = [s.set(i, -g, -m, M), s.set(o, g, -m, M), s.set(u, g, m, M), s.set(v, -g, m, M), s.set(p, g, -m, -M), s.set(d, -g, -m, -M), s.set(f, -g, m, -M), s.set(w, g, m, -M)],
              S = [[2, 3, 1], [4, 5, 7], [7, 6, 2], [1, 0, 4], [1, 4, 2], [5, 0, 6]],
              x = [[0, 0, 1], [0, 0, -1], [0, 1, 0], [0, -1, 0], [1, 0, 0], [-1, 0, 0]],
              y = [[-1, 0, 0, 1], [-1, 0, 0, 1], [-1, 0, 0, 1], [-1, 0, 0, 1], [0, 0, -1, 1], [0, 0, 1, 1]],
              I = [],
              b = [],
              z = [],
              A = [],
              R = [],
              U = new s(-g, -m, -M),
              V = new s(g, m, M),
              q = Math.sqrt(g * g + m * m + M * M);

          function N(n, e, i) {
            var o,
                u,
                v,
                p,
                d = I.length / 3,
                f = S[n],
                w = x[n],
                c = y[n];

            for (p = 0; p <= i; p++) {
              for (v = 0; v <= e; v++) {
                if (o = v / e, u = p / i, s.lerp(t, P[f[0]], P[f[1]], o), s.lerp(r, P[f[0]], P[f[2]], u), s.subtract(a, r, P[f[0]]), s.add(h, t, a), I.push(h.x, h.y, h.z), b.push(w[0], w[1], w[2]), z.push(o, u), A.push(c[0], c[1], c[2], c[3]), v < e && p < i) {
                  var l = e + 1,
                      g = v + p * l,
                      m = v + (p + 1) * l,
                      M = v + 1 + (p + 1) * l,
                      U = v + 1 + p * l;
                  R.push(d + g, d + U, d + m), R.push(d + m, d + U, d + M);
                }
              }
            }
          }

          return N(0, e, c), N(4, l, c), N(1, e, c), N(5, l, c), N(3, e, l), N(2, e, l), {
            positions: I,
            normals: b,
            uvs: z,
            tangents: A,
            indices: R,
            minPos: U,
            maxPos: V,
            boundingRadius: q
          };
        },
        c: function c(n, e, t, r) {
          void 0 === n && (n = .5), void 0 === e && (e = .5), void 0 === t && (t = 2), void 0 === r && (r = {});
          var a = .5 * t,
              h = r.radialSegments || 32,
              i = r.heightSegments || 1,
              o = void 0 === r.capped || r.capped,
              u = r.arc || 2 * Math.PI,
              v = 0;
          o || (n > 0 && v++, e > 0 && v++);
          var p = (h + 1) * (i + 1);
          o && (p += (h + 1) * v + h * v);
          var d = h * i * 6;
          o && (d += h * v * 3);
          var f = new Array(d),
              w = new Array(3 * p),
              g = new Array(3 * p),
              m = new Array(2 * p),
              M = Math.max(n, e),
              P = new s(-M, -a, -M),
              S = new s(M, a, M),
              x = Math.sqrt(M * M + a * a),
              y = 0,
              I = 0;
          return function () {
            for (var r = [], o = n - e, v = o * o / t * Math.sign(o), p = 0; p <= i; p++) {
              for (var d = [], M = p / i, P = M * o + e, S = 0; S <= h; ++S) {
                var x = S / h,
                    b = x * u,
                    z = Math.sin(b),
                    A = Math.cos(b);
                w[3 * y] = P * z, w[3 * y + 1] = M * t - a, w[3 * y + 2] = P * A, s.normalize(_c, s.set(l, z, -v, A)), g[3 * y] = _c.x, g[3 * y + 1] = _c.y, g[3 * y + 2] = _c.z, m[2 * y] = 2 * (1 - x) % 1, m[2 * y + 1] = M, d.push(y), ++y;
              }

              r.push(d);
            }

            for (var R = 0; R < i; ++R) {
              for (var U = 0; U < h; ++U) {
                var V = r[R][U],
                    q = r[R + 1][U],
                    N = r[R + 1][U + 1],
                    j = r[R][U + 1];
                f[I] = V, ++I, f[I] = j, ++I, f[I] = q, ++I, f[I] = j, ++I, f[I] = N, ++I, f[I] = q, ++I;
              }
            }
          }(), o && (e > 0 && b(!1), n > 0 && b(!0)), {
            positions: w,
            normals: g,
            uvs: m,
            indices: f,
            minPos: P,
            maxPos: S,
            boundingRadius: x
          };

          function b(s) {
            for (var t = s ? n : e, r = s ? 1 : -1, i = y, o = 1; o <= h; ++o) {
              w[3 * y] = 0, w[3 * y + 1] = a * r, w[3 * y + 2] = 0, g[3 * y] = 0, g[3 * y + 1] = r, g[3 * y + 2] = 0, m[2 * y] = .5, m[2 * y + 1] = .5, ++y;
            }

            for (var v = y, p = 0; p <= h; ++p) {
              var d = p / h * u,
                  c = Math.cos(d),
                  l = Math.sin(d);
              w[3 * y] = t * l, w[3 * y + 1] = a * r, w[3 * y + 2] = t * c, g[3 * y] = 0, g[3 * y + 1] = r, g[3 * y + 2] = 0, m[2 * y] = .5 - .5 * l * r, m[2 * y + 1] = .5 + .5 * c, ++y;
            }

            for (var M = 0; M < h; ++M) {
              var P = i + M,
                  S = v + M;
              s ? (f[I] = S + 1, ++I, f[I] = P, ++I, f[I] = S, ++I) : (f[I] = P, ++I, f[I] = S + 1, ++I, f[I] = S, ++I);
            }
          }
        },
        d: function d(n, e, t, r) {
          void 0 === n && (n = .5), void 0 === e && (e = .5), void 0 === t && (t = 2), void 0 === r && (r = {});
          var a = t - n - e,
              h = r.sides || 32,
              i = r.heightSegments || 32,
              o = e / t,
              u = a / t,
              v = n / t,
              p = Math.floor(i * o),
              d = Math.floor(i * v),
              f = Math.floor(i * u),
              w = a + e - t / 2,
              c = e - t / 2,
              l = e - t / 2,
              g = r.arc || 2 * Math.PI,
              m = [],
              M = [],
              P = [],
              S = [],
              x = Math.max(n, e),
              y = new s(-x, -t / 2, -x),
              z = new s(x, t / 2, x),
              A = t / 2,
              R = 0,
              U = [];
          return function () {
            for (var n = 0; n <= p; ++n) {
              for (var s = n * Math.PI / p / 2, t = Math.sin(s), r = -Math.cos(s), a = 0; a <= h; ++a) {
                var o = 2 * a * Math.PI / h - Math.PI / 2,
                    u = Math.sin(o) * t,
                    v = r,
                    d = Math.cos(o) * t,
                    f = a / h,
                    w = n / i;

                if (m.push(u * e, v * e + l, d * e), M.push(u, v, d), P.push(f, w), n < p && a < h) {
                  var c = h + 1,
                      g = c * n + a,
                      x = c * (n + 1) + a,
                      y = c * (n + 1) + a + 1,
                      I = c * n + a + 1;
                  S.push(g, I, x), S.push(I, y, x);
                }

                ++R;
              }
            }
          }(), function () {
            for (var t = (n - e) / a, r = 0; r <= f; r++) {
              for (var i = [], v = r / f, p = v * (n - e) + e, d = 0; d <= h; ++d) {
                var w = d / h,
                    l = v * u + o,
                    x = w * g - g / 4,
                    y = Math.sin(x),
                    z = Math.cos(x);
                m.push(p * y), m.push(v * a + c), m.push(p * z), s.normalize(I, s.set(b, y, -t, z)), M.push(I.x), M.push(I.y), M.push(I.z), P.push(w, l), i.push(R), ++R;
              }

              U.push(i);
            }

            for (var A = 0; A < f; ++A) {
              for (var V = 0; V < h; ++V) {
                var q = U[A][V],
                    N = U[A + 1][V],
                    j = U[A + 1][V + 1],
                    k = U[A][V + 1];
                S.push(q), S.push(k), S.push(N), S.push(k), S.push(j), S.push(N);
              }
            }
          }(), function () {
            for (var s = 0; s <= d; ++s) {
              for (var e = s * Math.PI / d / 2 + Math.PI / 2, t = Math.sin(e), r = -Math.cos(e), a = 0; a <= h; ++a) {
                var o = 2 * a * Math.PI / h - Math.PI / 2,
                    u = Math.sin(o) * t,
                    p = r,
                    c = Math.cos(o) * t,
                    l = a / h,
                    g = s / i + (1 - v);

                if (m.push(u * n, p * n + w, c * n), M.push(u, p, c), P.push(l, g), s < d && a < h) {
                  var x = h + 1,
                      y = x * s + a + U[f][h] + 1,
                      I = x * (s + 1) + a + U[f][h] + 1,
                      b = x * (s + 1) + a + 1 + U[f][h] + 1,
                      z = x * s + a + 1 + U[f][h] + 1;
                  S.push(y, z, I), S.push(z, b, I);
                }
              }
            }
          }(), {
            positions: m,
            normals: M,
            uvs: P,
            indices: S,
            minPos: y,
            maxPos: z,
            boundingRadius: A
          };
        },
        p: function p(n) {
          var t = function (n) {
            return (n = e(n)).width = n.width || 10, n.length = n.length || 10, n.widthSegments = n.widthSegments || 10, n.lengthSegments = n.lengthSegments || 10, n;
          }(n),
              r = t.width,
              a = t.length,
              h = t.widthSegments,
              i = t.lengthSegments,
              o = .5 * r,
              u = .5 * a,
              v = [],
              p = [],
              d = [],
              f = new s(-o, 0, -u),
              w = new s(o, 0, u),
              c = Math.sqrt(r * r + a * a);

          s.set(S, -o, 0, u), s.set(x, o, 0, u), s.set(y, -o, 0, -u);

          for (var l = 0; l <= i; l++) {
            for (var I = 0; I <= h; I++) {
              var b = I / h,
                  z = l / i;

              if (s.lerp(g, S, x, b), s.lerp(m, S, y, z), s.subtract(M, m, S), s.add(P, g, M), v.push(P.x, P.y, P.z), t.includeUV && p.push(b, z), I < h && l < i) {
                var A = h + 1,
                    R = I + l * A,
                    U = I + (l + 1) * A,
                    V = I + 1 + (l + 1) * A,
                    q = I + 1 + l * A;
                d.push(R, q, U), d.push(q, V, U);
              }
            }
          }

          var N = {
            positions: v,
            indices: d,
            minPos: f,
            maxPos: w,
            boundingRadius: c
          };

          if (t.includeNormal) {
            var j = (i + 1) * (h + 1),
                k = new Array(3 * j);
            N.normals = k;

            for (var B = 0; B < j; ++B) {
              k[3 * B + 0] = 0, k[3 * B + 1] = 1, k[3 * B + 2] = 0;
            }
          }

          return t.includeUV && (N.uvs = p), N;
        }
      });

      var t = new s(),
          r = new s(),
          a = new s(),
          h = new s(),
          i = new s(),
          o = new s(),
          u = new s(),
          v = new s(),
          p = new s(),
          d = new s(),
          f = new s(),
          w = new s(),
          _c = new s(0, 0, 0),
          l = new s(0, 0, 0),
          g = new s(0, 0, 0),
          m = new s(0, 0, 0),
          M = new s(0, 0, 0),
          P = new s(0, 0, 0),
          S = new s(0, 0, 0),
          x = new s(0, 0, 0),
          y = new s(0, 0, 0),
          I = new s(0, 0, 0),
          b = new s(0, 0, 0);
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/create-mesh-9aab53f1.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./mesh-c8768986.js"], function (t) {
  "use strict";

  var e, a, _r, n, s, i, o, u, f, l, v;

  return {
    setters: [function (t) {
      e = t.b3, a = t.t, _r = t.gb, n = t.b4, s = t.x, i = t.aH, o = t.c5, u = t.gc, f = t.a3;
    }, function (t) {
      l = t.M, v = t.B;
    }],
    execute: function execute() {
      var h;
      t({
        c: function c(t, r, i) {
          i = i || {};
          var h,
              c = [],
              T = 0,
              b = [],
              g = 0,
              R = t.positions.slice();

          if (R.length > 0) {
            if (h = null, t.attributes) for (var A, w = a(t.attributes); !(A = w()).done;) {
              var O = A.value;

              if (O.name === e.ATTR_POSITION) {
                h = O;
                break;
              }
            }
            h || (h = d[0]), c.push(h);
            var x = n[h.format];
            g = Math.max(g, Math.floor(R.length / x.count)), b.push({
              offset: T,
              data: R,
              attribute: h
            }), T += x.size;
          }

          if (t.normals && t.normals.length > 0) {
            if (h = null, t.attributes) for (var p, M = a(t.attributes); !(p = M()).done;) {
              var _ = p.value;

              if (_.name === e.ATTR_NORMAL) {
                h = _;
                break;
              }
            }
            h || (h = d[1]);
            var B = n[h.format];
            c.push(h), g = Math.max(g, Math.floor(t.normals.length / B.count)), b.push({
              offset: T,
              data: t.normals,
              attribute: h
            }), T += B.size;
          }

          if (t.uvs && t.uvs.length > 0) {
            if (h = null, t.attributes) for (var L, N = a(t.attributes); !(L = N()).done;) {
              var I = L.value;

              if (I.name === e.ATTR_TEX_COORD) {
                h = I;
                break;
              }
            }
            h || (h = d[2]);
            var y = n[h.format];
            c.push(h), g = Math.max(g, Math.floor(t.uvs.length / y.count)), b.push({
              offset: T,
              data: t.uvs,
              attribute: h
            }), T += y.size;
          }

          if (t.tangents && t.tangents.length > 0) {
            if (h = null, t.attributes) for (var z, G = a(t.attributes); !(z = G()).done;) {
              var C = z.value;

              if (C.name === e.ATTR_TANGENT) {
                h = C;
                break;
              }
            }
            h || (h = d[3]);
            var P = n[h.format];
            c.push(h), g = Math.max(g, Math.floor(t.tangents.length / P.count)), b.push({
              offset: T,
              data: t.tangents,
              attribute: h
            }), T += P.size;
          }

          if (t.colors && t.colors.length > 0) {
            if (h = null, t.attributes) for (var D, E = a(t.attributes); !(D = E()).done;) {
              var k = D.value;

              if (k.name === e.ATTR_COLOR) {
                h = k;
                break;
              }
            }
            h || (h = d[4]);
            var F = n[h.format];
            c.push(h), g = Math.max(g, Math.floor(t.colors.length / F.count)), b.push({
              offset: T,
              data: t.colors,
              attribute: h
            }), T += F.size;
          }

          if (t.customAttributes) for (var S, V = a(t.customAttributes); !(S = V()).done;) {
            var j = S.value,
                U = n[j.attr.format];
            c.push(j.attr), g = Math.max(g, Math.floor(j.values.length / U.count)), b.push({
              offset: T,
              data: j.values,
              attribute: j.attr
            }), T += U.size;
          }

          for (var X = new v(), H = new ArrayBuffer(g * T), q = new DataView(H), J = 0, K = b; J < K.length; J++) {
            var Q = K[J];
            u(q, Q.data, Q.attribute.format, Q.offset, T);
          }

          X.setNextAlignment(0);
          var W = {
            attributes: c,
            view: {
              offset: X.getLength(),
              length: H.byteLength,
              count: g,
              stride: T
            }
          };
          X.addBuffer(H);
          var Y = null,
              Z = 0;

          if (t.indices) {
            var $ = t.indices;
            Z = $.length, Y = new ArrayBuffer(2 * Z);
            var tt = new DataView(Y);
            u(tt, $, s.R16UI);
          }

          var et = {
            primitiveMode: t.primitiveMode || f.TRIANGLE_LIST,
            vertexBundelIndices: [0]
          };
          Y && (X.setNextAlignment(2), et.indexView = {
            offset: X.getLength(),
            length: Y.byteLength,
            count: Z,
            stride: 2
          }, X.addBuffer(Y));
          var at = t.minPos;

          if (!at && i.calculateBounds) {
            at = o.set(new o(), 1 / 0, 1 / 0, 1 / 0);

            for (var rt = 0; rt < g; ++rt) {
              o.set(m, R[3 * rt + 0], R[3 * rt + 1], R[3 * rt + 2]), o.min(at, at, m);
            }
          }

          var nt = t.maxPos;

          if (!nt && i.calculateBounds) {
            nt = o.set(new o(), -1 / 0, -1 / 0, -1 / 0);

            for (var st = 0; st < g; ++st) {
              o.set(m, R[3 * st + 0], R[3 * st + 1], R[3 * st + 2]), o.max(nt, nt, m);
            }
          }

          var it = {
            vertexBundles: [W],
            primitives: [et]
          };
          return at && (it.minPosition = new o(at.x, at.y, at.z)), nt && (it.maxPosition = new o(nt.x, nt.y, nt.z)), r || (r = new l()), r.reset({
            struct: it,
            data: new Uint8Array(X.getCombined())
          }), r;
        },
        r: function r(t, e) {
          void 0 === e && (e = 0);

          for (var i, o = {
            positions: []
          }, u = new DataView(t.data.buffer, t.data.byteOffset, t.data.byteLength), f = t.struct, l = f.primitives[e], v = a(l.vertexBundelIndices); !(i = v()).done;) {
            for (var d, m = i.value, c = f.vertexBundles[m], T = c.view.offset, b = c.view, g = b.length, R = b.stride, A = a(c.attributes); !(d = A()).done;) {
              var w = d.value,
                  O = h[w.name];
              O && (o[O] = (o[O] || []).concat(_r(u, w.format, T, g, R))), T += n[w.format].size;
            }
          }

          var x = l.indexView;
          return o.indices = _r(u, s["R" + 8 * x.stride + "UI"], x.offset, x.length), o;
        }
      }), function (t) {
        t[t.positions = e.ATTR_POSITION] = "positions", t[t.normals = e.ATTR_NORMAL] = "normals", t[t.uvs = e.ATTR_TEX_COORD] = "uvs", t[t.colors = e.ATTR_COLOR] = "colors";
      }(h || (h = {}));
      var d = [new i(e.ATTR_POSITION, s.RGB32F), new i(e.ATTR_NORMAL, s.RGB32F), new i(e.ATTR_TEX_COORD, s.RG32F), new i(e.ATTR_TANGENT, s.RGBA32F), new i(e.ATTR_COLOR, s.RGBA32F)],
          m = new o();
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/deprecated-0fa1cf2f.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js"], function (e) {
  "use strict";

  var t, n, E, s, a, r, o, m, N, O, T, i, y, v, A, u, p, _, S, c;

  return {
    setters: [function (e) {
      t = e.cR, n = e.dD, E = e.ec, s = e.c, a = e.d, r = e.eX, o = e.eN, m = e.l, N = e.dd, O = e.cS, T = e.cT, i = e.dc, y = e.dB, v = e.dH, A = e.dC;
    }, function (e) {
      u = e.Z, p = e.p, _ = e.E, S = e.r, c = e.s;
    }],
    execute: function execute() {
      t(n, "Node.EventType", [{
        name: "POSITION_PART",
        newName: "TRANSFORM_CHANGED"
      }, {
        name: "ROTATION_PART",
        newName: "TRANSFORM_CHANGED"
      }, {
        name: "SCALE_PART",
        newName: "TRANSFORM_CHANGED"
      }]);
      var I = null,
          C = null,
          l = null,
          U = null,
          M = e("S", function (e) {
        function t() {
          return e.call(this) || this;
        }

        E(t, e);
        var N = t.prototype;
        return N.setAccelerometerEnabled = function (e) {
          e && window.DeviceMotionEvent && "function" == typeof DeviceMotionEvent.requestPermission ? DeviceMotionEvent.requestPermission().then(function (e) {
            s(3520, e), u.setAccelerometerEnabled("granted" === e);
          }).catch(function (e) {
            a(3521, e.message), u.setAccelerometerEnabled(!1);
          }) : u.setAccelerometerEnabled(e);
        }, N.setAccelerometerInterval = function (e) {
          u.setAccelerometerInterval(e);
        }, N.on = function (t, E, s, a) {
          return e.prototype.on.call(this, t, E, s, a), t !== n.KEY_DOWN && t !== n.KEY_UP || I || (I = r.create({
            event: r.KEYBOARD,
            onKeyDown: function onKeyDown(e, t) {
              g.emit(t.type, t);
            },
            onKeyPressed: function onKeyPressed(e, t) {
              g.emit(t.type, t);
            },
            onKeyReleased: function onKeyReleased(e, t) {
              g.emit(t.type, t);
            }
          }), o.addListener(I, 256)), t === n.DEVICEMOTION && (C || (C = r.create({
            event: r.ACCELERATION,
            callback: function callback(e, t) {
              m.systemEvent.emit(t.type, t);
            }
          }), o.addListener(C, 256))), t !== n.TOUCH_START && t !== n.TOUCH_MOVE && t !== n.TOUCH_END && t !== n.TOUCH_CANCEL || l || (l = r.create({
            event: r.TOUCH_ONE_BY_ONE,
            onTouchBegan: function onTouchBegan(e, t) {
              return m.systemEvent.emit(t.type, e, t), !0;
            },
            onTouchMoved: function onTouchMoved(e, t) {
              m.systemEvent.emit(t.type, e, t);
            },
            onTouchEnded: function onTouchEnded(e, t) {
              m.systemEvent.emit(t.type, e, t);
            },
            onTouchCancelled: function onTouchCancelled(e, t) {
              m.systemEvent.emit(t.type, e, t);
            }
          }), o.addListener(l, 256)), t !== n.MOUSE_DOWN && t !== n.MOUSE_MOVE && t !== n.MOUSE_UP && t !== n.MOUSE_WHEEL || U || (U = r.create({
            event: r.MOUSE,
            onMouseDown: function onMouseDown(e) {
              m.systemEvent.emit(e.type, e);
            },
            onMouseMove: function onMouseMove(e) {
              m.systemEvent.emit(e.type, e);
            },
            onMouseUp: function onMouseUp(e) {
              m.systemEvent.emit(e.type, e);
            },
            onMouseScroll: function onMouseScroll(e) {
              m.systemEvent.emit(e.type, e);
            }
          }), o.addListener(U, 256)), E;
        }, N.off = function (t, E, s) {
          if (e.prototype.off.call(this, t, E, s), I && (t === n.KEY_DOWN || t === n.KEY_UP)) {
            var a = this.hasEventListener(n.KEY_DOWN),
                r = this.hasEventListener(n.KEY_UP);
            a || r || (o.removeListener(I), I = null);
          }

          if (C && t === n.DEVICEMOTION && (o.removeListener(C), C = null), l && (t === n.TOUCH_START || t === n.TOUCH_MOVE || t === n.TOUCH_END || t === n.TOUCH_CANCEL)) {
            var m = this.hasEventListener(n.TOUCH_START),
                N = this.hasEventListener(n.TOUCH_MOVE),
                O = this.hasEventListener(n.TOUCH_END),
                T = this.hasEventListener(n.TOUCH_CANCEL);
            m || N || O || T || (o.removeListener(l), l = null);
          }

          if (U && (t === n.MOUSE_DOWN || t === n.MOUSE_MOVE || t === n.MOUSE_UP || t === n.MOUSE_WHEEL)) {
            var i = this.hasEventListener(n.MOUSE_DOWN),
                y = this.hasEventListener(n.MOUSE_MOVE),
                v = this.hasEventListener(n.MOUSE_UP),
                A = this.hasEventListener(n.MOUSE_WHEEL);
            i || y || v || A || (o.removeListener(U), U = null);
          }
        }, t;
      }(N));
      M.EventType = n, m.SystemEvent = M;
      var g = e("s", new M());
      m.systemEvent = g, O(p.prototype, "View.prototype", [{
        name: "isAntiAliasEnabled",
        suggest: "The API of Texture2d have been largely modified, no alternative"
      }, {
        name: "enableAntiAlias",
        suggest: "The API of Texture2d have been largely modified, no alternative"
      }]), T(p.prototype, "View.prototype", [{
        name: "adjustViewportMeta"
      }, {
        name: "enableAutoFullScreen",
        suggest: "use screen.requestFullScreen() instead."
      }, {
        name: "isAutoFullScreenEnabled"
      }]), T(m, "cc", [{
        name: "winSize",
        suggest: "please use view.getVisibleSize() instead."
      }]), t(i, "Event", [{
        name: "ACCELERATION",
        newName: "DEVICEMOTION",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }]), T(i, "Event", [{
        name: "TOUCH",
        suggest: "please use SystemEvent.EventType.TOUCH_START, SystemEvent.EventType.TOUCH_MOVE, SystemEvent.EventType.TOUCH_END and SystemEvent.EventType.TOUCH_CANCEL instead"
      }, {
        name: "MOUSE",
        suggest: "please use SystemEvent.EventType.MOUSE_DOWN, SystemEvent.EventType.MOUSE_MOVE, SystemEvent.EventType.MOUSE_UP, SystemEvent.EventType.MOUSE_WHEEL, Node.EventType.MOUSE_ENTER and Node.EventType.MOUSE_LEAVE instead"
      }, {
        name: "KEYBOARD",
        suggest: "please use SystemEvent.EventType.KEY_DOWN and SystemEvent.EventType.KEY_UP instead"
      }]), t(_, "EventMouse", ["DOWN", "UP", "MOVE"].map(function (e) {
        return {
          name: e,
          newName: "MOUSE_" + e,
          target: M.EventType,
          targetName: "SystemEvent.EventType"
        };
      })), t(_, "EventMouse", [{
        name: "SCROLL",
        newName: "MOUSE_WHEEL",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }]), T(_.prototype, "EventMouse.prototype", [{
        name: "eventType",
        suggest: "please use EventMouse.prototype.type instead"
      }]), t(S, "EventTouch", [{
        name: "BEGAN",
        newName: "TOUCH_START",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }]), t(S, "EventTouch", [{
        name: "MOVED",
        newName: "TOUCH_MOVE",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }]), t(S, "EventTouch", [{
        name: "ENDED",
        newName: "TOUCH_END",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }]), t(S, "EventTouch", [{
        name: "CANCELLED",
        newName: "TOUCH_CANCEL",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }]), T(S.prototype, "EventTouch.prototype", [{
        name: "getEventCode",
        suggest: "please use EventTouch.prototype.type instead"
      }]), t(y, "sys", ["UNKNOWN", "ENGLISH", "CHINESE", "FRENCH", "ITALIAN", "GERMAN", "SPANISH", "DUTCH", "RUSSIAN", "KOREAN", "JAPANESE", "HUNGARIAN", "PORTUGUESE", "ARABIC", "NORWEGIAN", "POLISH", "TURKISH", "UKRAINIAN", "ROMANIAN", "BULGARIAN"].map(function (e) {
        return {
          name: "LANGUAGE_" + e,
          newName: e,
          target: y.Language,
          targetName: "sys.Language"
        };
      })), t(y, "sys", ["UNKNOWN", "IOS", "ANDROID", "WINDOWS", "LINUX", "OSX"].map(function (e) {
        return {
          name: "OS_" + e,
          newName: e,
          target: y.OS,
          targetName: "sys.OS"
        };
      })), t(y, "sys", ["UNKNOWN", "WECHAT", "ANDROID", "IE", "EDGE", "QQ", "MOBILE_QQ", "UC", "UCBS", "BAIDU_APP", "BAIDU", "MAXTHON", "OPERA", "OUPENG", "MIUI", "FIREFOX", "SAFARI", "CHROME", "LIEBAO", "QZONE", "SOUGOU", "HUAWEI"].map(function (e) {
        return {
          name: "BROWSER_TYPE_" + e,
          newName: e,
          target: y.BrowserType,
          targetName: "sys.BrowserType"
        };
      })), t(y, "sys", [{
        name: "BROWSER_TYPE_360",
        newName: "BROWSER_360",
        target: y.BrowserType,
        targetName: "sys.BrowserType"
      }]), t(y, "sys", ["UNKNOWN", "EDITOR_PAGE", "EDITOR_CORE", "MOBILE_BROWSER", "DESKTOP_BROWSER", "WIN32", "MACOS", "IOS", "ANDROID", "OHOS", "WECHAT_GAME", "BAIDU_MINI_GAME", "XIAOMI_QUICK_GAME", "ALIPAY_MINI_GAME", "BYTEDANCE_MINI_GAME", "OPPO_MINI_GAME", "VIVO_MINI_GAME", "HUAWEI_QUICK_GAME", "COCOSPLAY", "LINKSURE_MINI_GAME", "QTT_MINI_GAME"].map(function (e) {
        return {
          name: e,
          target: y.Platform,
          targetName: "sys.Platform"
        };
      })), t(y, "sys", [{
        name: "IPHONE",
        newName: "IOS",
        target: y.Platform,
        targetName: "sys.Platform"
      }, {
        name: "IPAD",
        newName: "IOS",
        target: y.Platform,
        targetName: "sys.Platform"
      }]), O(y, "sys", ["LINUX", "BLACKBERRY", "NACL", "EMSCRIPTEN", "TIZEN", "WINRT", "WP8", "QQ_PLAY", "FB_PLAYABLE_ADS"].map(function (e) {
        return {
          name: e
        };
      })), t(n, "SystemEventType", ["MOUSE_ENTER", "MOUSE_LEAVE", "TRANSFORM_CHANGED", "SCENE_CHANGED_FOR_PERSISTS", "SIZE_CHANGED", "ANCHOR_CHANGED", "COLOR_CHANGED", "CHILD_ADDED", "CHILD_REMOVED", "PARENT_CHANGED", "NODE_DESTROYED", "LAYER_CHANGED", "SIBLING_ORDER_CHANGED"].map(function (e) {
        return {
          name: e,
          target: v.EventType,
          targetName: "Node.EventType"
        };
      })), t(v.EventType, "Node.EventType", [{
        name: "DEVICEMOTION",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }, {
        name: "KEY_DOWN",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }, {
        name: "KEY_UP",
        target: M.EventType,
        targetName: "SystemEvent.EventType"
      }]), T(A.KEY, "macro.KEY", ["back", "menu", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "*", "+", "-", "/", ";", "=", ",", ".", "[", "]", "dpadLeft", "dpadRight", "dpadUp", "dpadDown", "dpadCenter"].map(function (e) {
        return {
          name: e
        };
      })), T(A.KEY, "macro.KEY", [{
        name: "shift",
        suggest: "please use KeyCode.SHIFT_LEFT instead"
      }]), T(A.KEY, "macro.KEY", [{
        name: "ctrl",
        suggest: "please use KeyCode.CTRL_LEFT instead"
      }]), T(A.KEY, "macro.KEY", [{
        name: "alt",
        suggest: "please use KeyCode.ALT_LEFT instead"
      }]), T(A, "macro", [{
        name: "KEY",
        suggest: "please use KeyCode instead"
      }]), T(c, "screen", [{
        name: "autoFullScreen",
        suggest: "please use screen.requestFullScreen() instead."
      }, {
        name: "disableAutoFullScreen"
      }]);
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/deprecated-81ea4bff.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./sprite-frame-1c023836.js", "./sprite-723e419c.js", "./renderable-2d-f6cb180f.js", "./graphics-f8140643.js", "./vertex-format-bf491aa3.js", "./deprecated-ddee6a28.js"], function (t) {
  "use strict";

  var e, i, n, r, s, o, a, h, l, c, u, p, f, _, d, y, g, m, b, v, C, x, S, A, D, T, O, E, w, I, L, R, F, B, M, k, P, H, z, W, j, N, U, G, X, V, Y, q, Q, Z, J, $, K, tt, et, it, nt, rt, st, ot, at, ht, lt, ct, ut, pt, ft, _t, dt, yt, gt, mt, bt;

  return {
    setters: [function (t) {
      e = t.cc, i = t.c3, n = t.cK, r = t.ef, s = t.ek, o = t.ec, a = t.c_, h = t.cj, l = t.c5, c = t.dQ, u = t.l, p = t.aq, f = t.z, _ = t.G, d = t.di, y = t.a3, g = t.e2, m = t.eg, b = t.ge, v = t.gn, C = t.gE, x = t.fZ, S = t.ga, A = t.f_, D = t.ej, T = t.fU, O = t.go, E = t.gf, w = t.eh, I = t.ed, L = t.co, R = t.ei, F = t.t, B = t.fY, M = t.gC, k = t.dO, P = t.gz, H = t.gD, z = t.dH, W = t.d, j = t.gA, N = t.e4, U = t.aJ, G = t.dJ, X = t.bO, V = t.eu, Y = t.gF, q = t.eM;
    }, function (t) {
      Q = t.d;
    }, function (t) {
      Z = t.o, J = t.i;
    }, function () {}, function () {}, function () {}, function () {}, function (t) {
      $ = t.S;
    }, function (t) {
      K = t.c, tt = t.H, et = t.F, it = t.b, nt = t.S, t.T, rt = t.a, st = t.f, ot = t.d, at = t.i, ht = t.e, lt = t.V;
    }, function (t) {
      ct = t.a, ut = t.R, pt = t.I, ft = t.U;
    }, function (t) {
      _t = t.G;
    }, function (t) {
      dt = t.g, yt = t.a, gt = t.b, mt = t.c;
    }, function (t) {
      bt = t.U;
    }],
    execute: function execute() {
      var vt, Ct, xt, St, At, Dt, Tt, Ot, Et, wt, It, Lt, Rt, Ft, Bt, Mt, kt, Pt, Ht, zt, Wt, jt, Nt, Ut, Gt;
      t("e", void 0);
      var Xt,
          Vt = new e(),
          Yt = new i(),
          qt = new e(),
          Qt = [];
      !function (t) {
        t[t.RECT = 0] = "RECT", t[t.ELLIPSE = 1] = "ELLIPSE", t[t.GRAPHICS_STENCIL = 2] = "GRAPHICS_STENCIL", t[t.IMAGE_STENCIL = 3] = "IMAGE_STENCIL";
      }(Xt || (Xt = t("e", {}))), n(Xt);
      var Zt = t("a", (vt = r("cc.Mask"), Ct = x(), xt = S(110), St = A(), At = s(Xt), Dt = D(), Tt = T(), Ot = D(), Et = T(), wt = O(), It = s($), Lt = O(), Rt = O(), Ft = E(), Bt = O(), Mt = O(), vt(kt = Ct(kt = xt(kt = St((Gt = Ut = function (t) {
        function n() {
          var e;
          return (e = t.call(this) || this)._clearStencilMtl = null, e._clearModel = null, w(e, "_type", Ht, I(e)), w(e, "_inverted", zt, I(e)), w(e, "_segments", Wt, I(e)), w(e, "_spriteFrame", jt, I(e)), w(e, "_alphaThreshold", Nt, I(e)), e._graphics = null, e._clearModelMesh = null, e._instanceMaterialType = pt.ADD_COLOR, e;
        }

        o(n, t);
        var r = n.prototype;
        return r.onLoad = function () {
          this._createClearModel(), this._createGraphics(), this._graphics && this._graphics.onLoad();
        }, r.onEnable = function () {
          t.prototype.onEnable.call(this), this._updateGraphics(), this._enableGraphics();
        }, r.onRestore = function () {
          this._createGraphics(), t.prototype.updateMaterial.call(this), this._updateGraphics(), this._renderFlag = this._canRender();
        }, r.onDisable = function () {
          t.prototype.onDisable.call(this), this._disableGraphics();
        }, r.onDestroy = function () {
          t.prototype.onDestroy.call(this), this._clearModel && this._clearModelMesh && (Q.root.destroyModel(this._clearModel), this._clearModelMesh.destroy()), this._clearStencilMtl && this._clearStencilMtl.destroy(), this._removeGraphics();
        }, r.isHit = function (t) {
          var n = this.node._uiProps.uiTransformComp,
              r = n.contentSize,
              s = r.width,
              o = r.height,
              a = Yt;
          this.node.getWorldMatrix(Vt), e.invert(qt, Vt), i.transformMat4(a, t, qt);
          var h = n.anchorPoint;
          a.x += h.x * s, a.y += h.y * o;
          var l = !1;
          if (this.type === Xt.RECT || this.type === Xt.GRAPHICS_STENCIL) l = a.x >= 0 && a.y >= 0 && a.x <= s && a.y <= o;else if (this.type === Xt.ELLIPSE) {
            var c = s / 2,
                u = o / 2,
                p = a.x - .5 * s,
                f = a.y - .5 * o;
            l = p * p / (c * c) + f * f / (u * u) < 1;
          }
          return this._inverted && (l = !l), l;
        }, r._render = function (t) {
          t.commitComp(this, null, this._assembler, null);
        }, r._postRender = function (t) {
          this._postAssembler && t.commitComp(this, null, this._postAssembler, null);
        }, r._nodeStateChange = function (e) {
          t.prototype._nodeStateChange.call(this, e), this._updateGraphics();
        }, r._canRender = function () {
          return !!t.prototype._canRender.call(this) && null !== this._graphics && (this._type !== Xt.IMAGE_STENCIL || null !== this._spriteFrame);
        }, r._flushAssembler = function () {
          var t = n.Assembler.getAssembler(this),
              e = n.PostAssembler.getAssembler(this);
          this._assembler !== t && (this.destroyRenderData(), this._assembler = t), this._postAssembler !== e && (this._postAssembler = e), this._useRenderData();
        }, r._createGraphics = function () {
          if (!this._graphics) {
            var t = this._graphics = new _t();
            t._objFlags |= a.Flags.IsOnLoadCalled, t.node = this.node, t.node.getWorldMatrix(), t.lineWidth = 0;
            var e = h.WHITE.clone();
            e.a = 0, t.fillColor = e;
          }

          this._updateMaterial();
        }, r._updateGraphics = function () {
          if (this._graphics && (this._type === Xt.RECT || this._type === Xt.ELLIPSE)) {
            var t = this.node._uiProps.uiTransformComp,
                e = this._graphics;
            e.clear();
            var i = t.contentSize,
                n = i.width,
                r = i.height,
                s = t.anchorPoint,
                o = -n * s.x,
                a = -r * s.y;
            if (this._type === Xt.RECT) e.rect(o, a, n, r);else if (this._type === Xt.ELLIPSE) {
              for (var h = function (t, e, i) {
                Qt.length = 0;

                for (var n = 2 * Math.PI / i, r = 0; r < i; ++r) {
                  Qt.push(new l(e.x * Math.cos(n * r) + t.x, e.y * Math.sin(n * r) + t.y, 0));
                }

                return Qt;
              }(new l(o + n / 2, a + r / 2, 0), new l(n / 2, r / 2, 0), this._segments), c = 0; c < h.length; ++c) {
                var u = h[c];
                0 === c ? e.moveTo(u.x, u.y) : e.lineTo(u.x, u.y);
              }

              e.close();
            }
            e.fill();
          }
        }, r._createClearModel = function () {
          if (!this._clearModel) {
            var t = c.get("default-clear-stencil");
            this._clearStencilMtl = new Z({
              parent: t,
              owner: this,
              subModelIdx: 0
            }), this._clearModel = Q.root.createModel(J), this._clearModel.node = this._clearModel.transform = this.node;
            var e = dt(yt),
                i = u.director.root.device,
                n = i.createBuffer(new p(f.VERTEX | f.TRANSFER_DST, _.DEVICE, 4 * e, e)),
                r = new Float32Array([-1, -1, 0, 1, -1, 0, -1, 1, 0, 1, 1, 0]);
            n.update(r);
            var s = i.createBuffer(new p(f.INDEX | f.TRANSFER_DST, _.DEVICE, 6 * Uint16Array.BYTES_PER_ELEMENT, Uint16Array.BYTES_PER_ELEMENT)),
                o = new Uint16Array([0, 1, 2, 2, 1, 3]);
            s.update(o), this._clearModelMesh = new d([n], yt, y.TRIANGLE_LIST, s), this._clearModelMesh.subMeshIdx = 0, this._clearModel.initSubModel(0, this._clearModelMesh, this._clearStencilMtl);
          }
        }, r._updateMaterial = function () {
          if (this._graphics) {
            var t,
                e = this._graphics;
            e.stencilStage = ct.DISABLED, this._type === Xt.IMAGE_STENCIL ? (t = c.get("ui-alpha-test-material"), e.setMaterial(t, 0), (t = e.getMaterialInstance(0)).setProperty("alphaThreshold", this._alphaThreshold)) : (t = c.get("ui-graphics-material"), e.setMaterial(t, 0), e.getMaterialInstance(0));
          }
        }, r._enableGraphics = function () {
          this._graphics && (this._graphics._renderFlag = this._graphics._canRender());
        }, r._disableGraphics = function () {
          this._graphics && this._graphics.onDisable();
        }, r._removeGraphics = function () {
          this._graphics && (this._graphics.destroy(), this._graphics._destroyImmediate(), this._graphics = null);
        }, r._useRenderData = function () {
          this._type !== Xt.IMAGE_STENCIL || this._renderData || this._assembler && this._assembler.createData && (this._renderData = this._assembler.createData(this), this.markForUpdateRenderData());
        }, g(n, [{
          key: "type",
          get: function get() {
            return this._type;
          },
          set: function set(t) {
            this._type !== t && (this._type = t, this.markForUpdateRenderData(!1), this._updateMaterial(), this._type !== Xt.IMAGE_STENCIL ? (this._spriteFrame = null, this._updateGraphics(), this._renderData && (this.destroyRenderData(), this._renderData = null)) : (this._useRenderData(), this._graphics && this._graphics.clear()));
          }
        }, {
          key: "inverted",
          get: function get() {
            return this._inverted;
          },
          set: function set(t) {
            this._inverted = t, this.stencilStage = ct.DISABLED, this._graphics && (this._graphics.stencilStage = ct.DISABLED);
          }
        }, {
          key: "segments",
          get: function get() {
            return this._segments;
          },
          set: function set(t) {
            this._segments !== t && (this._segments = L(t, 3, 1e4), this._updateGraphics());
          }
        }, {
          key: "spriteFrame",
          get: function get() {
            return this._spriteFrame;
          },
          set: function set(t) {
            if (this._spriteFrame !== t) {
              var e = this._spriteFrame;
              this._spriteFrame = t, this._type === Xt.IMAGE_STENCIL && !e && t && this.markForUpdateRenderData();
            }
          }
        }, {
          key: "alphaThreshold",
          get: function get() {
            return this._alphaThreshold;
          },
          set: function set(t) {
            this._alphaThreshold !== t && (this._alphaThreshold = t, this.type === Xt.IMAGE_STENCIL && this._graphics && this._graphics.getMaterialInstance(0).setProperty("alphaThreshold", this._alphaThreshold));
          }
        }, {
          key: "graphics",
          get: function get() {
            return this._graphics;
          }
        }, {
          key: "dstBlendFactor",
          get: function get() {
            return this._dstBlendFactor;
          },
          set: function set(t) {
            this._dstBlendFactor !== t && (this._dstBlendFactor = t, this._updateBlendFunc());
          }
        }, {
          key: "srcBlendFactor",
          get: function get() {
            return this._srcBlendFactor;
          },
          set: function set(t) {
            this._srcBlendFactor !== t && (this._srcBlendFactor = t, this._updateBlendFunc());
          }
        }, {
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color !== t && (this._color.set(t), this.markForUpdateRenderData());
          }
        }, {
          key: "customMaterial",
          get: function get() {
            return this._customMaterial;
          },
          set: function set() {}
        }]), n;
      }(ut), Ut.Type = Xt, m((Pt = Gt).prototype, "type", [At, Dt, Tt], Object.getOwnPropertyDescriptor(Pt.prototype, "type"), Pt.prototype), m(Pt.prototype, "inverted", [Ot, Et], Object.getOwnPropertyDescriptor(Pt.prototype, "inverted"), Pt.prototype), m(Pt.prototype, "segments", [wt], Object.getOwnPropertyDescriptor(Pt.prototype, "segments"), Pt.prototype), m(Pt.prototype, "spriteFrame", [It, Lt], Object.getOwnPropertyDescriptor(Pt.prototype, "spriteFrame"), Pt.prototype), m(Pt.prototype, "alphaThreshold", [Rt, Ft, b], Object.getOwnPropertyDescriptor(Pt.prototype, "alphaThreshold"), Pt.prototype), m(Pt.prototype, "color", [v, Bt], Object.getOwnPropertyDescriptor(Pt.prototype, "color"), Pt.prototype), m(Pt.prototype, "customMaterial", [v, Mt], Object.getOwnPropertyDescriptor(Pt.prototype, "customMaterial"), Pt.prototype), Ht = m(Pt.prototype, "_type", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Xt.RECT;
        }
      }), zt = m(Pt.prototype, "_inverted", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Wt = m(Pt.prototype, "_segments", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 64;
        }
      }), jt = m(Pt.prototype, "_spriteFrame", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Nt = m(Pt.prototype, "_alphaThreshold", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .1;
        }
      }), kt = Pt)) || kt) || kt) || kt) || kt));
      C._comp = Zt, u.Mask = Zt;

      var Jt,
          $t,
          Kt,
          te,
          ee,
          ie,
          ne,
          re,
          se,
          oe,
          ae,
          he,
          le,
          ce,
          ue,
          pe,
          fe,
          _e,
          de,
          ye,
          ge,
          me,
          be,
          ve,
          Ce,
          xe,
          Se,
          Ae,
          De,
          Te,
          Oe,
          Ee,
          we,
          Ie,
          Le,
          Re,
          Fe,
          Be,
          Me,
          ke,
          Pe,
          He,
          ze,
          We,
          je,
          Ne,
          Ue,
          Ge = /^(click)(\s)*=|(param)(\s)*=/,
          Xe = /(\s)*src(\s)*=|(\s)*height(\s)*=|(\s)*width(\s)*=|(\s)*align(\s)*=|(\s)*offset(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/,
          Ve = t("H", function () {
        function t() {
          this._specialSymbolArray = [], this._stack = [], this._resultObjectArray = [], this._specialSymbolArray.push([/&lt;/g, "<"]), this._specialSymbolArray.push([/&gt;/g, ">"]), this._specialSymbolArray.push([/&amp;/g, "&"]), this._specialSymbolArray.push([/&quot;/g, '"']), this._specialSymbolArray.push([/&apos;/g, "'"]);
        }

        var e = t.prototype;
        return e.parse = function (t) {
          this._resultObjectArray.length = 0, this._stack.length = 0;

          for (var e = 0, i = t.length; e < i;) {
            var n = t.indexOf(">", e),
                r = -1;
            if (n >= 0 && (r = t.lastIndexOf("<", n)) < e - 1 && (r = t.indexOf("<", n + 1), n = t.indexOf(">", r + 1)), r < 0) this._stack.pop(), this._processResult(t.substring(e)), e = i;else {
              var s = t.substring(e, r),
                  o = t.substring(r + 1, n);
              "" === o && (s = t.substring(e, n + 1)), this._processResult(s), -1 === n ? n = r : "/" === t.charAt(r + 1) ? this._stack.pop() : this._addToStack(o), e = n + 1;
            }
          }

          return this._resultObjectArray;
        }, e._attributeToObject = function (t) {
          t = t.trim();
          var e = {},
              i = /^(color|size)(\s)*=/.exec(t),
              n = "",
              r = 0,
              s = "";

          if (i) {
            if (n = i[0], "" === (t = t.substring(n.length).trim())) return e;

            switch (r = t.indexOf(" "), n[0]) {
              case "c":
                e.color = r > -1 ? t.substring(0, r).trim() : t;
                break;

              case "s":
                e.size = parseInt(t);
            }

            return r > -1 && (s = t.substring(r + 1).trim(), e.event = this._processEventHandler(s)), e;
          }

          if ((i = /^(br(\s)*\/)/.exec(t)) && i[0].length > 0 && (n = i[0].trim()).startsWith("br") && "/" === n[n.length - 1]) return e.isNewLine = !0, this._resultObjectArray.push({
            text: "",
            style: {
              isNewLine: !0
            }
          }), e;
          var o = "";

          if ((i = /^(img(\s)*src(\s)*=[^>]+\/)/.exec(t)) && i[0].length > 0 && (n = i[0].trim()).startsWith("img") && "/" === n[n.length - 1]) {
            var a;
            i = Xe.exec(t);

            for (var h = !1; i;) {
              if (n = (t = t.substring(t.indexOf(i[0]))).substr(0, i[0].length), a = (r = (o = t.substring(n.length).trim()).indexOf(" ")) > -1 ? o.substr(0, r) : o, n = (n = n.replace(/[^a-zA-Z]/g, "").trim()).toLowerCase(), t = o.substring(r).trim(), a.endsWith("/") && (a = a.slice(0, -1)), "src" === n) {
                switch (a.charCodeAt(0)) {
                  case 34:
                  case 39:
                    h = !0, a = a.slice(1, -1);
                }

                e.isImage = !0, e.src = a;
              } else if ("height" === n) e.imageHeight = parseInt(a);else if ("width" === n) e.imageWidth = parseInt(a);else if ("align" === n) {
                switch (a.charCodeAt(0)) {
                  case 34:
                  case 39:
                    a = a.slice(1, -1);
                }

                e.imageAlign = a.toLowerCase();
              } else "offset" === n ? e.imageOffset = a : "click" === n && (e.event = this._processEventHandler(n + "=" + a));

              e.event && "param" === n && (e.event[n] = a.replace(/^"|"$/g, "")), i = Xe.exec(t);
            }

            return h && e.isImage && this._resultObjectArray.push({
              text: "",
              style: e
            }), {};
          }

          if (i = /^(outline(\s)*[^>]*)/.exec(t)) {
            var l = {
              color: "#ffffff",
              width: 1
            };

            if (t = i[0].substring("outline".length).trim()) {
              var c,
                  u = /(\s)*color(\s)*=|(\s)*width(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/;

              for (i = u.exec(t); i;) {
                n = (t = t.substring(t.indexOf(i[0]))).substr(0, i[0].length), c = (r = (o = t.substring(n.length).trim()).indexOf(" ")) > -1 ? o.substr(0, r) : o, n = (n = n.replace(/[^a-zA-Z]/g, "").trim()).toLowerCase(), t = o.substring(r).trim(), "click" === n ? e.event = this._processEventHandler(n + "=" + c) : "color" === n ? l.color = c : "width" === n && (l.width = parseInt(c)), e.event && "param" === n && (e.event[n] = c.replace(/^"|"$/g, "")), i = u.exec(t);
              }
            }

            e.outline = l;
          }

          if ((i = /^(on|u|b|i)(\s)*/.exec(t)) && i[0].length > 0) {
            switch (n = i[0], t = t.substring(n.length).trim(), n[0]) {
              case "u":
                e.underline = !0;
                break;

              case "i":
                e.italic = !0;
                break;

              case "b":
                e.bold = !0;
            }

            if ("" === t) return e;
            e.event = this._processEventHandler(t);
          }

          return e;
        }, e._processEventHandler = function (t) {
          for (var e = {}, i = 0, n = !1, r = Ge.exec(t); r;) {
            var s = r[0],
                o = "";
            if (n = !1, '"' === (t = t.substring(s.length).trim()).charAt(0)) (i = t.indexOf('"', 1)) > -1 && (o = t.substring(1, i).trim(), n = !0), i++;else if ("'" === t.charAt(0)) (i = t.indexOf("'", 1)) > -1 && (o = t.substring(1, i).trim(), n = !0), i++;else {
              var a = /(\S)+/.exec(t);
              i = (o = a ? a[0] : "").length;
            }
            n && (e[s = s.substring(0, s.length - 1).trim()] = o), t = t.substring(i).trim(), r = Ge.exec(t);
          }

          return e;
        }, e._addToStack = function (t) {
          var e = this._attributeToObject(t);

          if (0 === this._stack.length) this._stack.push(e);else {
            if (e.isNewLine || e.isImage) return;
            var i = this._stack[this._stack.length - 1];

            for (var n in i) {
              e[n] || (e[n] = i[n]);
            }

            this._stack.push(e);
          }
        }, e._processResult = function (t) {
          0 !== t.length && (t = this._escapeSpecialSymbol(t), this._stack.length > 0 ? this._resultObjectArray.push({
            text: t,
            style: this._stack[this._stack.length - 1]
          }) : this._resultObjectArray.push({
            text: t
          }));
        }, e._escapeSpecialSymbol = function (t) {
          for (var e, i = F(this._specialSymbolArray); !(e = i()).done;) {
            var n = e.value,
                r = n[0],
                s = n[1];
            t = t.replace(r, s);
          }

          return t;
        }, t;
      }()),
          Ye = t("L", (Jt = r("cc.LabelOutline"), $t = x(), Kt = S(110), te = A(), ee = M(K), ie = T(), ne = T(), Jt(re = $t(re = Kt(re = te(re = ee(re = B((he = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, w(e, "_color", oe, I(e)), w(e, "_width", ae, I(e)), e;
        }

        o(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          this._updateRenderData();
        }, i.onDisable = function () {
          this._updateRenderData();
        }, i._updateRenderData = function () {
          var t = this.node.getComponent(K);
          t && t.updateRenderData(!0);
        }, g(e, [{
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color !== t && (this._color.set(t), this._updateRenderData());
          }
        }, {
          key: "width",
          get: function get() {
            return this._width;
          },
          set: function set(t) {
            this._width !== t && (this._width = t, this._updateRenderData());
          }
        }]), e;
      }(k), oe = m((se = he).prototype, "_color", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new h(0, 0, 0, 255);
        }
      }), ae = m(se.prototype, "_width", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 2;
        }
      }), m(se.prototype, "color", [ie], Object.getOwnPropertyDescriptor(se.prototype, "color"), se.prototype), m(se.prototype, "width", [ne], Object.getOwnPropertyDescriptor(se.prototype, "width"), se.prototype), re = se)) || re) || re) || re) || re) || re) || re)),
          qe = new Ve(),
          Qe = "RICHTEXT_CHILD",
          Ze = "RICHTEXT_Image_CHILD",
          Je = new P(function (t) {
        if (!u.isValid(t.node)) return !1;
        var e = t.node.getComponent(Ye);
        return e && (e.width = 0), !0;
      }, 20),
          $e = new P(function (t) {
        return u.isValid(t.node);
      }, 10);

      function Ke(t) {
        return {
          node: new z(t),
          comp: null,
          lineCount: 0,
          styleIndex: 0,
          imageOffset: "",
          clickParam: "",
          clickHandler: "",
          type: t
        };
      }

      function ti(t, e) {
        var i;
        t === Qe ? i = Je._get() : t === Ze && (i = $e._get());
        var n = (i = i || Ke(t)).node;
        return n || (n = new z(t)), n.hideFlags |= a.Flags.DontSave | a.Flags.HideInHierarchy, t === Ze ? (i.comp = n.getComponent(rt) || n.addComponent(rt), i.comp.spriteFrame = e, i.comp.type = rt.Type.SLICED, i.comp.sizeMode = rt.SizeMode.CUSTOM) : (i.comp = n.getComponent(K) || n.addComponent(K), i.comp.string = e, i.comp.horizontalAlign = tt.LEFT, i.comp.verticalAlign = lt.TOP), n.setPosition(0, 0, 0), n._uiProps.uiTransformComp.setAnchorPoint(.5, .5), i.node = n, i.lineCount = 0, i.styleIndex = 0, i.imageOffset = "", i.clickParam = "", i.clickHandler = "", i;
      }

      var ei,
          ii = t("R", (le = r("cc.RichText"), ce = x(), ue = S(110), pe = A(), fe = T(), _e = s(tt), de = T(), ye = T(), ge = T(), me = s(et), be = T(), ve = T(), Ce = s(it), xe = T(), Se = T(), Ae = T(), De = s(nt), Te = T(), Oe = T(), le(Ee = ce(Ee = ue(Ee = pe(Ee = B((Ue = Ne = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, w(e, "_lineHeight", Ie, I(e)), w(e, "_string", Le, I(e)), w(e, "_horizontalAlign", Re, I(e)), w(e, "_fontSize", Fe, I(e)), w(e, "_maxWidth", Be, I(e)), w(e, "_fontFamily", Me, I(e)), w(e, "_font", ke, I(e)), w(e, "_isSystemFontUsed", Pe, I(e)), w(e, "_userDefinedFont", He, I(e)), w(e, "_cacheMode", ze, I(e)), w(e, "_imageAtlas", We, I(e)), w(e, "_handleTouchEvent", je, I(e)), e._textArray = [], e._segments = [], e._labelSegmentsCache = [], e._linesWidth = [], e._lineCount = 1, e._labelWidth = 0, e._labelHeight = 0, e._layoutDirty = !0, e._lineOffsetX = 0, e._updateRichTextStatus = void 0, e._updateRichTextStatus = e._updateRichText, e;
        }

        o(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          this.node.on(H.LAYER_CHANGED, this._applyLayer, this);
        }, i.onEnable = function () {
          this.handleTouchEvent && this._addEventListeners(), this._updateRichText(), this._activateChildren(!0);
        }, i.onDisable = function () {
          this.handleTouchEvent && this._removeEventListeners(), this._activateChildren(!1);
        }, i.start = function () {
          this._onTTFLoaded(), this.node.on(H.ANCHOR_CHANGED, this._updateRichTextPosition, this);
        }, i.onRestore = function () {}, i.onDestroy = function () {
          for (var t, e = F(this._segments); !(t = e()).done;) {
            var i = t.value;
            i.node.removeFromParent(), i.type === Qe ? Je.put(i) : i.type === Ze && $e.put(i);
          }

          this.node.off(H.ANCHOR_CHANGED, this._updateRichTextPosition, this), this.node.off(H.LAYER_CHANGED, this._applyLayer, this);
        }, i._addEventListeners = function () {
          this.node.on(H.TOUCH_END, this._onTouchEnded, this);
        }, i._removeEventListeners = function () {
          this.node.off(H.TOUCH_END, this._onTouchEnded, this);
        }, i._updateLabelSegmentTextAttributes = function () {
          var t = this;

          this._segments.forEach(function (e) {
            t._applyTextAttribute(e);
          });
        }, i._createFontLabel = function (t) {
          return ti(Qe, t);
        }, i._createImage = function (t) {
          return ti(Ze, t);
        }, i._onTTFLoaded = function () {
          this._font, this._layoutDirty = !0, this._updateRichText();
        }, i._measureText = function (t, e) {
          var i = this,
              n = function n(e) {
            var n;
            return 0 === i._labelSegmentsCache.length ? (n = i._createFontLabel(e), i._labelSegmentsCache.push(n)) : (n = i._labelSegmentsCache[0]).node.getComponent(K).string = e, n.styleIndex = t, i._applyTextAttribute(n), n.node._uiProps.uiTransformComp.contentSize.width;
          };

          return e ? n(e) : n;
        }, i._onTouchEnded = function (t) {
          for (var e, i = this, n = this.node.getComponents(k), r = function r() {
            var r = e.value,
                s = r.clickHandler,
                o = r.clickParam;
            s && i._containsTouchLocation(r, t.touch.getUILocation()) && (n.forEach(function (e) {
              var i = e[s];
              e.enabledInHierarchy && i && i.call(e, t, o);
            }), t.propagationStopped = !0);
          }, s = F(this._segments); !(e = s()).done;) {
            r();
          }
        }, i._containsTouchLocation = function (t, e) {
          var i = t.node.getComponent(ft);
          return !!i && i.getBoundingBoxToWorld().contains(e);
        }, i._resetState = function () {
          for (var t = this.node.children, e = t.length - 1; e >= 0; e--) {
            var i = t[e];

            if (i.name === Qe || i.name === Ze) {
              i.parent === this.node ? i.parent = null : t.splice(e, 1);
              var n = Ke(i.name);
              n.node = i, i.name === Qe ? (n.comp = i.getComponent(K), Je.put(n)) : (n.comp = i.getComponent(rt), $e.put(n));
            }
          }

          t.length = 0, this._segments.length = 0, this._labelSegmentsCache.length = 0, this._linesWidth.length = 0, this._lineOffsetX = 0, this._lineCount = 1, this._labelWidth = 0, this._labelHeight = 0, this._layoutDirty = !0;
        }, i._activateChildren = function (t) {
          for (var e = this.node.children.length - 1; e >= 0; e--) {
            var i = this.node.children[e];
            i.name !== Qe && i.name !== Ze || (i.active = t);
          }
        }, i._addLabelSegment = function (t, e) {
          var i;
          if (0 === this._labelSegmentsCache.length) i = this._createFontLabel(t);else {
            var n = (i = this._labelSegmentsCache.pop()).node.getComponent(K);

            n && (n.string = t);
          }
          return i.styleIndex = e, i.lineCount = this._lineCount, i.node._uiProps.uiTransformComp.setAnchorPoint(0, 0), i.node.layer = this.node.layer, this._applyTextAttribute(i), this.node.addChild(i.node), this._segments.push(i), i;
        }, i._updateRichTextWithMaxWidth = function (t, e, i) {
          var n = e;
          if (this._lineOffsetX > 0 && n + this._lineOffsetX > this._maxWidth) for (var r = 0; this._lineOffsetX <= this._maxWidth;) {
            var s = this._getFirstWordLen(t, r, t.length),
                o = t.substr(r, s),
                a = this._measureText(i, o);

            if (!(this._lineOffsetX + a <= this._maxWidth)) {
              if (r > 0) {
                var h = t.substr(0, r);
                this._addLabelSegment(h, i), t = t.substr(r, t.length), n = this._measureText(i, t);
              }

              this._updateLineInfo();

              break;
            }

            this._lineOffsetX += a, r += s;
          }
          if (n > this._maxWidth) for (var l = st(t, n, this._maxWidth, this._measureText(i)), c = 0; c < l.length; ++c) {
            var u = l[c],
                p = this._addLabelSegment(u, i).node._uiProps.uiTransformComp.contentSize;

            this._lineOffsetX += p.width, l.length > 1 && c < l.length - 1 && this._updateLineInfo();
          } else this._lineOffsetX += n, this._addLabelSegment(t, i);
        }, i._isLastComponentCR = function (t) {
          return t.length - 1 === t.lastIndexOf("\n");
        }, i._updateLineInfo = function () {
          this._linesWidth.push(this._lineOffsetX), this._lineOffsetX = 0, this._lineCount++;
        }, i._needsUpdateTextLayout = function (t) {
          if (this._layoutDirty || !this._textArray || !t) return !0;
          if (this._textArray.length !== t.length) return !0;

          for (var e = 0; e < this._textArray.length; e++) {
            var i = this._textArray[e],
                n = t[e];
            if (i.text !== n.text) return !0;
            var r = i.style,
                s = n.style;

            if (r) {
              if (s) {
                if (!!s.outline != !!r.outline) return !0;
                if (r.size !== s.size || r.italic !== s.italic || r.isImage !== s.isImage) return !0;
                if (r.src !== s.src || r.imageAlign !== s.imageAlign || r.imageHeight !== s.imageHeight || r.imageWidth !== s.imageWidth || r.imageOffset !== s.imageOffset) return !0;
              } else if (r.size || r.italic || r.isImage || r.outline) return !0;
            } else if (s && (s.size || s.italic || s.isImage || s.outline)) return !0;
          }

          return !1;
        }, i._addRichTextImageElement = function (t) {
          if (t.style) {
            var e = t.style,
                i = e.src,
                n = this._imageAtlas && i && this._imageAtlas.getSpriteFrame(i);

            if (n) {
              var r = this._createImage(n);

              switch (r.comp, e.imageAlign) {
                case "top":
                  r.node._uiProps.uiTransformComp.setAnchorPoint(0, 1);

                  break;

                case "center":
                  r.node._uiProps.uiTransformComp.setAnchorPoint(0, .5);

                  break;

                default:
                  r.node._uiProps.uiTransformComp.setAnchorPoint(0, 0);

              }

              r.node.layer = this.node.layer, this.node.addChild(r.node), this._segments.push(r);
              var s = n.rect.clone(),
                  o = 1,
                  a = s.width,
                  h = s.height,
                  l = e.imageWidth || 0,
                  c = e.imageHeight || 0;
              c > 0 ? (a *= o = c / h, h *= o) : (a *= o = this._lineHeight / h, h *= o), l > 0 && (a = l), this._maxWidth > 0 ? (this._lineOffsetX + a > this._maxWidth && this._updateLineInfo(), this._lineOffsetX += a) : (this._lineOffsetX += a, this._lineOffsetX > this._labelWidth && (this._labelWidth = this._lineOffsetX)), r.node._uiProps.uiTransformComp.setContentSize(a, h), r.lineCount = this._lineCount, r.clickHandler = "", r.clickParam = "";
              var u = e.event;
              u && (r.clickHandler = u.click, r.clickParam = u.param);
            } else W(4400);
          }
        }, i._updateRichText = function () {
          if (this.enabledInHierarchy) {
            var t = qe.parse(this._string);
            if (!this._needsUpdateTextLayout(t)) return this._textArray = t.slice(), void this._updateLabelSegmentTextAttributes();
            this._textArray = t.slice(), this._resetState();

            for (var e, i = !1, n = 0; n < this._textArray.length; ++n) {
              var r = this._textArray[n],
                  s = r.text;

              if (void 0 !== s) {
                if ("" === s) {
                  if (r.style && r.style.isNewLine) {
                    this._updateLineInfo();

                    continue;
                  }

                  if (r.style && r.style.isImage && this._imageAtlas) {
                    this._addRichTextImageElement(r);

                    continue;
                  }
                }

                for (var o = s.split("\n"), a = 0; a < o.length; ++a) {
                  var h = o[a];
                  if ("" !== h) {
                    if (i = !1, this._maxWidth > 0) {
                      var l = this._measureText(n, h);

                      this._updateRichTextWithMaxWidth(h, l, n), o.length > 1 && a < o.length - 1 && this._updateLineInfo();
                    } else e = this._addLabelSegment(h, n), this._lineOffsetX += e.node._uiProps.uiTransformComp.width, this._lineOffsetX > this._labelWidth && (this._labelWidth = this._lineOffsetX), o.length > 1 && a < o.length - 1 && this._updateLineInfo();
                  } else {
                    if (this._isLastComponentCR(s) && a === o.length - 1) continue;
                    this._updateLineInfo(), i = !0;
                  }
                }
              }
            }

            i || this._linesWidth.push(this._lineOffsetX), this._maxWidth > 0 && (this._labelWidth = this._maxWidth), this._labelHeight = (this._lineCount + ot) * this._lineHeight, this.node._uiProps.uiTransformComp.setContentSize(this._labelWidth, this._labelHeight), this._updateRichTextPosition(), this._layoutDirty = !1;
          }
        }, i._getFirstWordLen = function (t, e, i) {
          var n = t.charAt(e);
          if (at(n) || ht(n)) return 1;

          for (var r = 1, s = e + 1; s < i && (n = t.charAt(s), !ht(n) && !at(n)); ++s) {
            r++;
          }

          return r;
        }, i._updateRichTextPosition = function () {
          for (var t = 0, e = 1, i = this._lineCount, n = this.node._uiProps.uiTransformComp, r = n.anchorX, s = n.anchorY, o = 0; o < this._segments.length; ++o) {
            var a = this._segments[o],
                h = a.lineCount;
            h > e && (t = 0, e = h);
            var l = this._labelWidth * (.5 * this._horizontalAlign - r);

            switch (this._horizontalAlign) {
              case tt.LEFT:
                break;

              case tt.CENTER:
                l -= this._linesWidth[h - 1] / 2;
                break;

              case tt.RIGHT:
                l -= this._linesWidth[h - 1];
            }

            var c = a.node.position;

            if (a.node.setPosition(t + l, this._lineHeight * (i - h) - this._labelHeight * s, c.z), h === e && (t += a.node._uiProps.uiTransformComp.width), a.node.getComponent(rt)) {
              var u = a.node.position.clone(),
                  p = this._lineHeight,
                  f = this._lineHeight * (1 + ot);

              switch (a.node._uiProps.uiTransformComp.anchorY) {
                case 1:
                  u.y += p + (f - p) / 2;
                  break;

                case .5:
                  u.y += f / 2;
                  break;

                default:
                  u.y += (f - p) / 2;
              }

              if (a.imageOffset) {
                var _ = a.imageOffset.split(",");

                if (1 === _.length && _[0]) {
                  var d = parseFloat(_[0]);
                  Number.isInteger(d) && (u.y += d);
                } else if (2 === _.length) {
                  var y = parseFloat(_[0]),
                      g = parseFloat(_[1]);
                  Number.isInteger(y) && (u.x += y), Number.isInteger(g) && (u.y += g);
                }
              }

              a.node.position = u;
            }

            var m = a.node.getComponent(Ye);

            if (m) {
              var b = a.node.position.clone();
              b.y -= m.width, a.node.position = b;
            }
          }
        }, i._convertLiteralColorValue = function (t) {
          var e = t.toUpperCase();
          return h[e] ? h[e] : new h().fromHEX(t);
        }, i._applyTextAttribute = function (t) {
          var e = t.node.getComponent(K);

          if (e) {
            this._resetLabelState(e);

            var i,
                n = t.styleIndex;

            if (this._textArray[n] && (i = this._textArray[n].style), i) {
              if (e.color = this._convertLiteralColorValue(i.color || "white"), e.isBold = !!i.bold, e.isItalic = !!i.italic, e.isUnderline = !!i.underline, i.outline) {
                var r = t.node.getComponent(Ye);
                r || (r = t.node.addComponent(Ye)), r.color = this._convertLiteralColorValue(i.outline.color), r.width = i.outline.width;
              }

              e.fontSize = i.size || this._fontSize, t.clickHandler = "", t.clickParam = "";
              var s = i.event;
              s && (t.clickHandler = s.click || "", t.clickParam = s.param || "");
            }

            e.cacheMode = this._cacheMode, this._font instanceof et && !this._isSystemFontUsed ? e.font = this._font : e.fontFamily = this._fontFamily, e.useSystemFont = this._isSystemFontUsed, e.lineHeight = this._lineHeight, e.updateRenderData(!0);
            var o = e._assembler;
            o && o.updateRenderData(e);
          }
        }, i._applyLayer = function () {
          for (var t, e = F(this._segments); !(t = e()).done;) {
            t.value.node.layer = this.node.layer;
          }
        }, i._resetLabelState = function (t) {
          t.fontSize = this._fontSize, t.color = h.WHITE, t.isBold = !1, t.isItalic = !1, t.isUnderline = !1;
        }, g(e, [{
          key: "string",
          get: function get() {
            return this._string;
          },
          set: function set(t) {
            this._string !== t && (this._string = t, this._updateRichTextStatus());
          }
        }, {
          key: "horizontalAlign",
          get: function get() {
            return this._horizontalAlign;
          },
          set: function set(t) {
            this.horizontalAlign !== t && (this._horizontalAlign = t, this._layoutDirty = !0, this._updateRichTextStatus());
          }
        }, {
          key: "fontSize",
          get: function get() {
            return this._fontSize;
          },
          set: function set(t) {
            this._fontSize !== t && (this._fontSize = t, this._layoutDirty = !0, this._updateRichTextStatus());
          }
        }, {
          key: "fontFamily",
          get: function get() {
            return this._fontFamily;
          },
          set: function set(t) {
            this._fontFamily !== t && (this._fontFamily = t, this._layoutDirty = !0, this._updateRichTextStatus());
          }
        }, {
          key: "font",
          get: function get() {
            return this._font;
          },
          set: function set(t) {
            this._font !== t && (this._font = t, this._layoutDirty = !0, this._font ? (this.useSystemFont = !1, this._onTTFLoaded()) : this.useSystemFont = !0, this._updateRichTextStatus());
          }
        }, {
          key: "useSystemFont",
          get: function get() {
            return this._isSystemFontUsed;
          },
          set: function set(t) {
            this._isSystemFontUsed !== t && (this._isSystemFontUsed = t, this._layoutDirty = !0, this._updateRichTextStatus());
          }
        }, {
          key: "cacheMode",
          get: function get() {
            return this._cacheMode;
          },
          set: function set(t) {
            this._cacheMode !== t && (this._cacheMode = t, this._updateRichTextStatus());
          }
        }, {
          key: "maxWidth",
          get: function get() {
            return this._maxWidth;
          },
          set: function set(t) {
            this._maxWidth !== t && (this._maxWidth = t, this._layoutDirty = !0, this._updateRichTextStatus());
          }
        }, {
          key: "lineHeight",
          get: function get() {
            return this._lineHeight;
          },
          set: function set(t) {
            this._lineHeight !== t && (this._lineHeight = t, this._layoutDirty = !0, this._updateRichTextStatus());
          }
        }, {
          key: "imageAtlas",
          get: function get() {
            return this._imageAtlas;
          },
          set: function set(t) {
            this._imageAtlas !== t && (this._imageAtlas = t, this._layoutDirty = !0, this._updateRichTextStatus());
          }
        }, {
          key: "handleTouchEvent",
          get: function get() {
            return this._handleTouchEvent;
          },
          set: function set(t) {
            this._handleTouchEvent !== t && (this._handleTouchEvent = t, this.enabledInHierarchy && (this.handleTouchEvent ? this._addEventListeners() : this._removeEventListeners()));
          }
        }]), e;
      }(bt), Ne.HorizontalAlign = tt, Ne.VerticalAlign = lt, m((we = Ue).prototype, "string", [j, fe], Object.getOwnPropertyDescriptor(we.prototype, "string"), we.prototype), m(we.prototype, "horizontalAlign", [_e, de], Object.getOwnPropertyDescriptor(we.prototype, "horizontalAlign"), we.prototype), m(we.prototype, "fontSize", [ye], Object.getOwnPropertyDescriptor(we.prototype, "fontSize"), we.prototype), m(we.prototype, "fontFamily", [ge], Object.getOwnPropertyDescriptor(we.prototype, "fontFamily"), we.prototype), m(we.prototype, "font", [me, be], Object.getOwnPropertyDescriptor(we.prototype, "font"), we.prototype), m(we.prototype, "useSystemFont", [ve], Object.getOwnPropertyDescriptor(we.prototype, "useSystemFont"), we.prototype), m(we.prototype, "cacheMode", [Ce, xe], Object.getOwnPropertyDescriptor(we.prototype, "cacheMode"), we.prototype), m(we.prototype, "maxWidth", [Se], Object.getOwnPropertyDescriptor(we.prototype, "maxWidth"), we.prototype), m(we.prototype, "lineHeight", [Ae], Object.getOwnPropertyDescriptor(we.prototype, "lineHeight"), we.prototype), m(we.prototype, "imageAtlas", [De, Te], Object.getOwnPropertyDescriptor(we.prototype, "imageAtlas"), we.prototype), m(we.prototype, "handleTouchEvent", [Oe], Object.getOwnPropertyDescriptor(we.prototype, "handleTouchEvent"), we.prototype), Ie = m(we.prototype, "_lineHeight", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 40;
        }
      }), Le = m(we.prototype, "_string", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "<color=#00ff00>Rich</color><color=#0fffff>Text</color>";
        }
      }), Re = m(we.prototype, "_horizontalAlign", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return tt.LEFT;
        }
      }), Fe = m(we.prototype, "_fontSize", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 40;
        }
      }), Be = m(we.prototype, "_maxWidth", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Me = m(we.prototype, "_fontFamily", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "Arial";
        }
      }), ke = m(we.prototype, "_font", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Pe = m(we.prototype, "_isSystemFontUsed", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), He = m(we.prototype, "_userDefinedFont", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ze = m(we.prototype, "_cacheMode", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return it.NONE;
        }
      }), We = m(we.prototype, "_imageAtlas", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), je = m(we.prototype, "_handleTouchEvent", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Ee = we)) || Ee) || Ee) || Ee) || Ee) || Ee)),
          ni = t("U", r("cc.UIMeshRenderer")(ei = x()(ei = S(110)(ei = A()(ei = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (e = t.call.apply(t, [this].concat(n)) || this)._models = null, e._modelComponent = null, e;
        }

        o(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          this.node._uiProps.uiTransformComp || this.node.addComponent("cc.UITransform"), this._modelComponent = this.getComponent("cc.RenderableComponent"), this._modelComponent ? this._models = this._modelComponent._collectModels() : console.warn("node '" + (this.node && this.node.name) + "' doesn't have any renderable component");
        }, i.onEnable = function () {
          t.prototype.onEnable.call(this);
        }, i.onDisable = function () {
          t.prototype.onDisable.call(this);
        }, i.onDestroy = function () {
          t.prototype.onDestroy.call(this), this._modelComponent = this.getComponent("cc.RenderableComponent"), this._modelComponent && (this._modelComponent._sceneGetter = null, this._models = null);
        }, i.updateAssembler = function (t) {
          if (this._models) {
            this._modelComponent._detachFromScene();

            for (var e, i = F(this._models); !(e = i()).done;) {
              var n = e.value;
              t.commitModel.call(t, this, n, this._modelComponent.material);
            }

            return !0;
          }

          return !1;
        }, i.update = function () {
          this._fitUIRenderQueue();
        }, i._fitUIRenderQueue = function () {
          if (this._modelComponent) for (var t = this._modelComponent.sharedMaterials.length, e = 0; e < t; e++) {
            var i = this._modelComponent.getMaterialInstance(e);

            if (null != i) for (var n = i.passes, r = n.length, s = 0; s < r; s++) {
              n[s]._priority = N.MAX - 11, i.recompileShaders({
                CC_FORCE_FORWARD_SHADING: !0
              }, s);
            }
          }
        }, g(e, [{
          key: "modelComponent",
          get: function get() {
            return this._modelComponent;
          }
        }]), e;
      }(bt)) || ei) || ei) || ei) || ei),
          ri = t("M", function () {
        function t(t) {
          this.vData = null, this.iData = null, this.byteStart = 0, this.byteOffset = 0, this.indicesStart = 0, this.indicesOffset = 0, this.vertexStart = 0, this.vertexOffset = 0, this.lastByteOffset = 1, this._attributes = null, this._vertexBuffers = [], this._indexBuffer = null, this._iaInfo = null, this._batcher = void 0, this._dirty = !1, this._vertexFormatBytes = 0, this._initVDataCount = 0, this._initIDataCount = 1536, this._outOfCallback = null, this._hInputAssemblers = [], this._nextFreeIAHandle = 0, this._batcher = t;
        }

        var e = t.prototype;
        return e.initialize = function (t, e) {
          this._outOfCallback = e;
          var i = gt(t);
          this._vertexFormatBytes = i * Float32Array.BYTES_PER_ELEMENT, this._initVDataCount = 256 * this._vertexFormatBytes;
          var n = Float32Array.BYTES_PER_ELEMENT * i;
          this.vertexBuffers.length || this.vertexBuffers.push(this._batcher.device.createBuffer(new p(f.VERTEX | f.TRANSFER_DST, _.HOST | _.DEVICE, n, n)));
          var r = Uint16Array.BYTES_PER_ELEMENT;
          this.indexBuffer || (this._indexBuffer = this._batcher.device.createBuffer(new p(f.INDEX | f.TRANSFER_DST, _.HOST | _.DEVICE, r, r))), this._attributes = t, this._iaInfo = new U(this.attributes, this.vertexBuffers, this.indexBuffer), this.vData && this.iData || this._reallocBuffer();
        }, e.request = function (t, e) {
          void 0 === t && (t = 4), void 0 === e && (e = 6), this.lastByteOffset = this.byteOffset;
          var i = this.byteOffset + t * this._vertexFormatBytes,
              n = this.indicesOffset + e;
          if (t + this.vertexOffset > 65535) return this._outOfCallback && this._outOfCallback.call(this._batcher, t, e), !1;
          var r = this.vData.byteLength,
              s = this.iData.length;

          if (i > r || n > s) {
            for (; r < i || s < n;) {
              this._initVDataCount *= 2, this._initIDataCount *= 2, r = 4 * this._initVDataCount, s = this._initIDataCount;
            }

            this._reallocBuffer();
          }

          return this.vertexOffset += t, this.indicesOffset += e, this.byteOffset = i, this._dirty = !0, !0;
        }, e.reset = function () {
          this.byteStart = 0, this.byteOffset = 0, this.indicesStart = 0, this.indicesOffset = 0, this.vertexStart = 0, this.vertexOffset = 0, this.lastByteOffset = 0, this._nextFreeIAHandle = 0, this._dirty = !1;
        }, e.destroy = function () {
          this._attributes = null, this.vertexBuffers[0].destroy(), this.vertexBuffers.length = 0, this.indexBuffer.destroy(), this._indexBuffer = null;

          for (var t = 0; t < this._hInputAssemblers.length; t++) {
            this._hInputAssemblers[t].destroy();
          }

          this._hInputAssemblers.length = 0;
        }, e.recordBatch = function () {
          var t = this.indicesOffset - this.indicesStart;
          if (!t) return null;
          this._hInputAssemblers.length <= this._nextFreeIAHandle && this._hInputAssemblers.push(this._batcher.device.createInputAssembler(this._iaInfo));
          var e = this._hInputAssemblers[this._nextFreeIAHandle++];
          return e.firstIndex = this.indicesStart, e.indexCount = t, e;
        }, e.uploadBuffers = function () {
          if (0 !== this.byteOffset && this._dirty) {
            var t = new Float32Array(this.vData.buffer, 0, this.byteOffset >> 2),
                e = new Uint16Array(this.iData.buffer, 0, this.indicesOffset);
            this.byteOffset > this.vertexBuffers[0].size && this.vertexBuffers[0].resize(this.byteOffset), this.vertexBuffers[0].update(t), 2 * this.indicesOffset > this.indexBuffer.size && this.indexBuffer.resize(2 * this.indicesOffset), this.indexBuffer.update(e), this._dirty = !1;
          }
        }, e._reallocBuffer = function () {
          this._reallocVData(!0), this._reallocIData(!0);
        }, e._reallocVData = function (t) {
          var e;
          if (this.vData && (e = new Uint8Array(this.vData.buffer)), this.vData = new Float32Array(this._initVDataCount), e && t) for (var i = new Uint8Array(this.vData.buffer), n = 0, r = e.length; n < r; n++) {
            i[n] = e[n];
          }
        }, e._reallocIData = function (t) {
          var e = this.iData;
          if (this.iData = new Uint16Array(this._initIDataCount), e && t) for (var i = this.iData, n = 0, r = e.length; n < r; n++) {
            i[n] = e[n];
          }
        }, g(t, [{
          key: "attributes",
          get: function get() {
            return this._attributes;
          }
        }, {
          key: "vertexBuffers",
          get: function get() {
            return this._vertexBuffers;
          }
        }, {
          key: "indexBuffer",
          get: function get() {
            return this._indexBuffer;
          }
        }, {
          key: "vertexFormatBytes",
          get: function get() {
            return this._vertexFormatBytes;
          }
        }]), t;
      }());
      ri.OPACITY_OFFSET = 8;

      var si,
          oi,
          ai,
          hi,
          li,
          ci,
          ui,
          pi,
          fi,
          _i,
          di,
          yi,
          gi,
          mi,
          bi,
          vi,
          Ci,
          xi,
          Si,
          Ai,
          Di,
          Ti,
          Oi,
          Ei,
          wi,
          Ii,
          Li = G.Enum.NONE | G.Enum.UI_3D,
          Ri = t("D", function () {
        function t() {
          this.bufferBatch = null, this.camera = null, this.renderScene = null, this.model = null, this.texture = null, this.sampler = null, this.useLocalData = null, this.isStatic = !1, this.textureHash = 0, this.samplerHash = 0, this._passes = [], this._shaders = [], this._visFlags = Li, this._inputAssember = null, this._descriptorSet = null;
        }

        var e = t.prototype;
        return e.destroy = function () {
          this._passes = [];
        }, e.clear = function () {
          this.bufferBatch = null, this.inputAssembler = null, this.descriptorSet = null, this.camera = null, this.texture = null, this.sampler = null, this.model = null, this.isStatic = !1, this.useLocalData = null, this.visFlags = Li, this.renderScene = null;
        }, e.fillPasses = function (t, e, i, n, r, s) {
          if (t) {
            var o = t.passes;
            if (!o) return;
            var a = 0;
            this._shaders.length = o.length;

            for (var h = 0; h < o.length; h++) {
              this._passes[h] || (this._passes[h] = new X(u.director.root));
              var l = o[h],
                  c = this._passes[h];
              l.update(), e || (e = l.depthStencilState, i = 0), n || (n = l.blendState, r = 0), -1 === r && (r = 0), a = i << 16 | r, c._initPassFromTarget(l, e, n, a), this._shaders[h] = c.getShaderVariant(s);
            }
          }
        }, g(t, [{
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }, {
          key: "inputAssembler",
          get: function get() {
            return this._inputAssember;
          },
          set: function set(t) {
            this._inputAssember = t;
          }
        }, {
          key: "descriptorSet",
          get: function get() {
            return this._descriptorSet;
          },
          set: function set(t) {
            this._descriptorSet = t;
          }
        }, {
          key: "visFlags",
          get: function get() {
            return this._visFlags;
          },
          set: function set(t) {
            this._visFlags = t;
          }
        }, {
          key: "passes",
          get: function get() {
            return this._passes;
          }
        }, {
          key: "shaders",
          get: function get() {
            return this._shaders;
          }
        }]), t;
      }()),
          Fi = t("b", (si = r("cc.UIStaticBatch"), oi = x(), ai = A(), hi = S(110), li = O(), si(ci = oi(ci = ai(ci = hi((pi = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (e = t.call.apply(t, [this].concat(n)) || this)._init = !1, e._meshBuffer = null, e._dirty = !0, e._lastMeshBuffer = null, e._uiDrawBatchList = [], e;
        }

        o(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          var t = this._getBatcher();

          if (t) {
            var e = mt,
                i = new ri(t);
            i.initialize(e, this._arrivalMaxBuffer.bind(this)), this._meshBuffer = i;
          }
        }, i.onDestroy = function () {
          t.prototype.onDestroy.call(this), this._clearData(), this._meshBuffer && (this._meshBuffer.destroy(), this._meshBuffer = null);
        }, i.updateAssembler = function (t) {
          t.currIsStatic = !0, this._dirty && (t.finishMergeBatches(), this._lastMeshBuffer = t.currBufferBatch, t.currBufferBatch = this._meshBuffer, t.currStaticRoot = this), this._init && (t.finishMergeBatches(), t.commitStaticBatch(this));
        }, i.postUpdateAssembler = function (t) {
          this._dirty && (t.finishMergeBatches(), t.currBufferBatch = this._lastMeshBuffer, t.currStaticRoot = null, this._dirty = !1, this._init = !0, this.node._static = !0, this._meshBuffer.uploadBuffers()), t.currIsStatic = !1;
        }, i.markAsDirty = function () {
          this._getBatcher() && (this.node._static = !1, this._dirty = !0, this._init = !1, this._clearData());
        }, i._requireDrawBatch = function () {
          var t = new Ri();
          return t.isStatic = !0, this._uiDrawBatchList.push(t), t;
        }, i._clearData = function () {
          if (this._meshBuffer) {
            this._meshBuffer.reset();

            for (var t = this._getBatcher(), e = 0; e < this._uiDrawBatchList.length; e++) {
              this._uiDrawBatchList[e].destroy(t);
            }
          }

          this._uiDrawBatchList.length = 0, this._init = !1;
        }, i._getBatcher = function () {
          return Q.root && Q.root.batcher2D ? Q.root.batcher2D : (W(9301), null);
        }, i._arrivalMaxBuffer = function () {
          var t = this._getBatcher();

          t && t.autoMergeBatches(), W(9300);
        }, g(e, [{
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color !== t && this._color.set(t);
          }
        }, {
          key: "drawBatchList",
          get: function get() {
            return this._uiDrawBatchList;
          }
        }]), e;
      }(ut), m((ui = pi).prototype, "color", [v, li], Object.getOwnPropertyDescriptor(ui.prototype, "color"), ui.prototype), ci = ui)) || ci) || ci) || ci) || ci)),
          Bi = (t("c", (fi = r("cc.LabelShadow"), _i = x(), di = S(110), yi = A(), gi = M(K), mi = T(), bi = T(), vi = T(), fi(Ci = _i(Ci = di(Ci = yi(Ci = gi(Ci = B((Ti = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, w(e, "_color", Si, I(e)), w(e, "_offset", Ai, I(e)), w(e, "_blur", Di, I(e)), e;
        }

        o(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          this._updateRenderData();
        }, i.onDisable = function () {
          this._updateRenderData();
        }, i._updateRenderData = function () {
          var t = this.node.getComponent(K);
          t && t.updateRenderData(!0);
        }, g(e, [{
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color !== t && (this._color.set(t), this._updateRenderData());
          }
        }, {
          key: "offset",
          get: function get() {
            return this._offset;
          },
          set: function set(t) {
            this._offset = t, this._updateRenderData();
          }
        }, {
          key: "blur",
          get: function get() {
            return this._blur;
          },
          set: function set(t) {
            this._blur = t, this._updateRenderData();
          }
        }]), e;
      }(k), Si = m((xi = Ti).prototype, "_color", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new h(0, 0, 0, 255);
        }
      }), Ai = m(xi.prototype, "_offset", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new i(2, 2);
        }
      }), Di = m(xi.prototype, "_blur", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 2;
        }
      }), m(xi.prototype, "color", [mi], Object.getOwnPropertyDescriptor(xi.prototype, "color"), xi.prototype), m(xi.prototype, "offset", [bi], Object.getOwnPropertyDescriptor(xi.prototype, "offset"), xi.prototype), m(xi.prototype, "blur", [vi], Object.getOwnPropertyDescriptor(xi.prototype, "blur"), xi.prototype), Ci = xi)) || Ci) || Ci) || Ci) || Ci) || Ci) || Ci)), t("d", r("cc.UIOpacity")(Oi = x()(Oi = S(110)(Oi = A()(Oi = B((Ii = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, w(e, "_opacity", wi, I(e)), e;
        }

        o(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          this.node._uiProps.localOpacity = this._opacity / 255;
        }, i.onDisable = function () {
          this.node._uiProps.localOpacity = 1;
        }, g(e, [{
          key: "opacity",
          get: function get() {
            return this._opacity;
          },
          set: function set(t) {
            this._opacity !== t && (t = Y(t, 0, 255), this._opacity = t, this.node._uiProps.localOpacity = t / 255);
          }
        }]), e;
      }(k), m((Ei = Ii).prototype, "opacity", [V], Object.getOwnPropertyDescriptor(Ei.prototype, "opacity"), Ei.prototype), wi = m(Ei.prototype, "_opacity", [R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 255;
        }
      }), Oi = Ei)) || Oi) || Oi) || Oi) || Oi) || Oi));

      u.MaskComponent = Zt, q.setClassAlias(Zt, "cc.MaskComponent"), u.LabelComponent = K, q.setClassAlias(K, "cc.LabelComponent"), u.LabelOutlineComponent = Ye, q.setClassAlias(Ye, "cc.LabelOutlineComponent"), u.RichTextComponent = ii, q.setClassAlias(ii, "cc.RichTextComponent"), u.SpriteComponent = rt, q.setClassAlias(rt, "cc.SpriteComponent"), u.UIModelComponent = ni, q.setClassAlias(ni, "cc.UIModelComponent"), u.GraphicsComponent = _t, q.setClassAlias(_t, "cc.GraphicsComponent"), q.setClassAlias(Fi, "cc.UIStaticBatchComponent"), q.setClassAlias(Bi, "cc.UIOpacityComponent");
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/deprecated-ddee6a28.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./camera-component-ec549211.js", "./renderable-2d-f6cb180f.js"], function (e) {
  "use strict";

  var t, n, o, a, r, i, s, c, m, p, h, u, C, l, _, f, d, g, y, v, R, b, S, E, T, A, D, w, O, z, G, N;

  return {
    setters: [function (e) {
      t = e.ef, n = e.gB, o = e.fY, a = e.ec, r = e.l, i = e.ga, s = e.f_, c = e.gC, m = e.dO, p = e.c5, h = e.cJ, u = e.ek, C = e.gD, l = e.e2, _ = e.eg, f = e.fZ, d = e.fU, g = e.eh, y = e.ed, v = e.ei, R = e.cS, b = e.cR, S = e.cj, E = e.cT, T = e.eM;
    }, function (e) {
      A = e._, D = e.w, w = e.v;
    }, function (e) {
      O = e.C;
    }, function (e) {
      z = e.U, G = e.a, N = e.R;
    }],
    execute: function execute() {
      var P,
          U,
          x,
          W,
          F,
          j,
          I,
          M,
          H,
          V,
          k,
          B,
          L,
          Y,
          X,
          J = e("R", t("cc.RenderRoot2D")(P = i(100)(P = s()(P = c(z)(P = n(P = o(P = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        a(t, e);
        var n = t.prototype;
        return n.onEnable = function () {
          r.director.root.batcher2D.addScreen(this);
        }, n.onDisable = function () {
          r.director.root.batcher2D.removeScreen(this);
        }, n.onDestroy = function () {
          r.director.root.batcher2D.removeScreen(this);
        }, t;
      }(m)) || P) || P) || P) || P) || P) || P),
          K = new p(),
          Z = h({
        OVERLAY: 0,
        INTERSPERSE: 1
      }),
          q = e("C", (U = t("cc.Canvas"), x = f(), W = i(100), F = s(), j = u(O), I = d(), M = d(), H = u(O), U(V = x(V = W(V = F(V = o(V = n((Y = function (e) {
        function t() {
          var t;
          return t = e.call(this) || this, g(t, "_cameraComponent", B, y(t)), g(t, "_alignCanvasWithScreen", L, y(t)), t._thisOnCameraResized = void 0, t._fitDesignResolution = void 0, t._pos = new p(), t._renderMode = Z.OVERLAY, t._thisOnCameraResized = t._onResizeCamera.bind(y(t)), t;
        }

        a(t, e);
        var n = t.prototype;
        return n.__preload = function () {
          var e = this.getComponent("cc.Widget");
          e && e.updateAlignment(), this._cameraComponent && (this._cameraComponent._createCamera(), this._cameraComponent.node.on(O.TARGET_TEXTURE_CHANGE, this._thisOnCameraResized)), this._onResizeCamera(), this.node.on(C.TRANSFORM_CHANGED, this._thisOnCameraResized);
        }, n.onEnable = function () {
          e.prototype.onEnable.call(this), this._cameraComponent && this._cameraComponent.node.on(O.TARGET_TEXTURE_CHANGE, this._thisOnCameraResized);
        }, n.onDisable = function () {
          e.prototype.onDisable.call(this), this._cameraComponent && this._cameraComponent.node.off(O.TARGET_TEXTURE_CHANGE, this._thisOnCameraResized);
        }, n.onDestroy = function () {
          e.prototype.onDestroy.call(this), this.node.off(C.TRANSFORM_CHANGED, this._thisOnCameraResized);
        }, n._onResizeCamera = function () {
          if (this._cameraComponent && this._alignCanvasWithScreen) {
            if (this._cameraComponent.targetTexture) {
              var e = this._cameraComponent.targetTexture.window;
              this._cameraComponent.camera && this._cameraComponent.camera.setFixedSize(e.width, e.height), this._cameraComponent.orthoHeight = A.height / 2;
            } else if (D.canvas) {
              var t = D.canvas;
              this._cameraComponent.camera && this._cameraComponent.camera.resize(t.width, t.height), this._cameraComponent.orthoHeight = D.canvas.height / w.getScaleY() / 2;
            }

            this.node.getWorldPosition(K), this._cameraComponent.node.setWorldPosition(K.x, K.y, 1e3);
          }
        }, n._getViewPriority = function () {
          if (this._cameraComponent) {
            var e,
                t = null === (e = this.cameraComponent) || void 0 === e ? void 0 : e.priority;
            return this._renderMode === Z.OVERLAY ? t | 1 << 30 : t & ~(1 << 30);
          }

          return 0;
        }, l(t, [{
          key: "renderMode",
          get: function get() {
            return this._renderMode;
          },
          set: function set(e) {
            this._renderMode = e, this._cameraComponent && (this._cameraComponent.priority = this._getViewPriority());
          }
        }, {
          key: "cameraComponent",
          get: function get() {
            return this._cameraComponent;
          },
          set: function set(e) {
            this._cameraComponent !== e && (this._cameraComponent = e, this._onResizeCamera());
          }
        }, {
          key: "alignCanvasWithScreen",
          get: function get() {
            return this._alignCanvasWithScreen;
          },
          set: function set(e) {
            this._alignCanvasWithScreen = e, this._onResizeCamera();
          }
        }]), t;
      }(J), _((k = Y).prototype, "cameraComponent", [j, I], Object.getOwnPropertyDescriptor(k.prototype, "cameraComponent"), k.prototype), _(k.prototype, "alignCanvasWithScreen", [M], Object.getOwnPropertyDescriptor(k.prototype, "alignCanvasWithScreen"), k.prototype), B = _(k.prototype, "_cameraComponent", [H], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), L = _(k.prototype, "_alignCanvasWithScreen", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), V = k)) || V) || V) || V) || V) || V) || V));
      r.Canvas = q;
      var Q = e("U", t("cc.UIComponent")(X = c(z)(X = i(110)(X = n(X = o(X = function (e) {
        function t() {
          for (var t, n = arguments.length, o = new Array(n), a = 0; a < n; a++) {
            o[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(o)) || this)._lastParent = null, t.stencilStage = G.DISABLED, t;
        }

        a(t, e);
        var n = t.prototype;
        return n.__preload = function () {
          this.node._uiProps.uiComp = this;
        }, n.onEnable = function () {}, n.onDisable = function () {}, n.onDestroy = function () {
          this.node._uiProps.uiComp === this && (this.node._uiProps.uiComp = null);
        }, n.updateAssembler = function () {}, n.postUpdateAssembler = function () {}, n.markForUpdateRenderData = function () {}, t;
      }(m)) || X) || X) || X) || X) || X);
      R(Q.prototype, "UIComponent", [{
        name: "_visibility"
      }, {
        name: "setVisibility"
      }]), b(q.prototype, "Canvas.prototype", [{
        name: "camera",
        newName: "cameraComponent.camera",
        customGetter: function customGetter() {
          return this._cameraComponent.camera;
        }
      }, {
        name: "clearFlag",
        newName: "cameraComponent.clearFlags",
        customGetter: function customGetter() {
          return this._cameraComponent ? this._cameraComponent.clearFlags : 0;
        },
        customSetter: function customSetter(e) {
          this._cameraComponent && (this._cameraComponent.clearFlags = e);
        }
      }, {
        name: "color",
        newName: "cameraComponent.clearColor",
        customGetter: function customGetter() {
          return this._cameraComponent ? this._cameraComponent.clearColor : S.BLACK;
        },
        customSetter: function customSetter(e) {
          this._cameraComponent && (this._cameraComponent.clearColor = e);
        }
      }, {
        name: "priority",
        newName: "cameraComponent.priority",
        customGetter: function customGetter() {
          return this._cameraComponent ? this._cameraComponent.priority : 0;
        },
        customSetter: function customSetter(e) {
          this._cameraComponent && (this._cameraComponent.priority = e);
        }
      }, {
        name: "targetTexture",
        newName: "cameraComponent.targetTexture",
        customGetter: function customGetter() {
          return this._cameraComponent ? this._cameraComponent.targetTexture : null;
        },
        customSetter: function customSetter(e) {
          this._cameraComponent && (this._cameraComponent.targetTexture = e);
        }
      }, {
        name: "visibility",
        newName: "cameraComponent.visibility",
        customGetter: function customGetter() {
          return this._cameraComponent ? this._cameraComponent.visibility : 0;
        }
      }]), E(N.prototype, "Renderable2D.prototype", [{
        name: "srcBlendFactor",
        suggest: "Please use a custom material to specify blending options instead."
      }, {
        name: "dstBlendFactor",
        suggest: "Please use a custom material to specify blending options instead."
      }]), E(z.prototype, "UITransform.prototype", [{
        name: "priority",
        suggest: "Please use setSiblingIndex to change index of the current node in its parent's children array."
      }]), r.UITransformComponent = z, T.setClassAlias(z, "cc.UITransformComponent"), T.setClassAlias(N, "cc.RenderComponent"), r.CanvasComponent = q, T.setClassAlias(q, "cc.CanvasComponent");
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/dragon-bones.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./index-31f38084.js", "./sprite-frame-1c023836.js", "./sprite-723e419c.js", "./renderable-2d-f6cb180f.js", "./graphics-f8140643.js", "./vertex-format-bf491aa3.js", "./deprecated-81ea4bff.js", "./deprecated-ddee6a28.js"], function (t) {
  "use strict";

  var e, a, i, r, n, s, o, l, h, u, _, f, c, m, p, d, y, g, v, D, A, b, T, S, P, O, x, C, M, B, E, I, w, F, R, N, k, j, L, U, V, Y;

  return {
    setters: [function (t) {
      e = t.ef, a = t.ec, i = t.e2, r = t.ch, n = t.cc, s = t.cj, o = t.c5, l = t.dd, h = t.dH, u = t.ed, _ = t.cJ, f = t.df, c = t.eg, m = t.l, p = t.eh, d = t.ei, y = t.ek, g = t.dn, v = t.cK, D = t.g_, A = t.fY, b = t.c_, T = t.t, S = t.eu, P = t.cZ, O = t.fZ, x = t.f_, C = t.fU, M = t.go, B = t.f$, E = t.f, I = t.V;
    }, function (t) {
      w = t.S, F = t.d, R = t.h;
    }, function (t) {
      N = t.w, k = t.G, j = t.o;
    }, function () {}, function () {}, function () {}, function () {}, function () {}, function () {}, function (t) {
      L = t.S;
    }, function () {}, function (t) {
      U = t.M, V = t.R;
    }, function (t) {
      Y = t.G;
    }, function () {}, function () {}, function () {}],
    execute: function execute() {
      var X = Object.setPrototypeOf,
          G = {};
      G || (G = {}), function (t) {
        var e = function () {
          function e(a) {
            this._clock = new t.WorldClock(), this._events = [], this._objects = [], this._eventManager = null, this._eventManager = a, console.info("DragonBones: " + e.VERSION + "\nWebsite: http://dragonbones.com/\nSource and Demo: https://github.com/DragonBones/");
          }

          return e.prototype.advanceTime = function (e) {
            if (this._objects.length > 0) {
              for (var a = 0, i = this._objects; a < i.length; a++) {
                i[a].returnToPool();
              }

              this._objects.length = 0;
            }

            if (this._clock.advanceTime(e), this._events.length > 0) {
              for (var r = 0; r < this._events.length; ++r) {
                var n = this._events[r],
                    s = n.armature;
                null !== s._armatureData && (s.eventDispatcher.dispatchDBEvent(n.type, n), n.type === t.EventObject.SOUND_EVENT && this._eventManager.dispatchDBEvent(n.type, n)), this.bufferObject(n);
              }

              this._events.length = 0;
            }
          }, e.prototype.bufferEvent = function (t) {
            this._events.indexOf(t) < 0 && this._events.push(t);
          }, e.prototype.bufferObject = function (t) {
            this._objects.indexOf(t) < 0 && this._objects.push(t);
          }, Object.defineProperty(e.prototype, "clock", {
            get: function get() {
              return this._clock;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(e.prototype, "eventManager", {
            get: function get() {
              return this._eventManager;
            },
            enumerable: !0,
            configurable: !0
          }), e.VERSION = "5.6.300", e.yDown = !1, e.debug = !1, e.debugDraw = !1, e.webAssembly = !1, e;
        }();

        t.DragonBones = e;
      }(G || (G = {})), console.warn || (console.warn = function () {}), console.assert || (console.assert = function () {}), Date.now || (Date.now = function () {
        return new Date().getTime();
      }), X = function X(t, e) {
        function a() {
          this.constructor = t;
        }

        for (var i in e) {
          e.hasOwnProperty(i) && (t[i] = e[i]);
        }

        a.prototype = e.prototype, t.prototype = new a();
      }, function (t) {
        var e = function () {
          function t() {
            this.hashCode = t._hashCode++, this._isInPool = !1;
          }

          return t._returnObject = function (e) {
            var a = String(e.constructor),
                i = a in t._maxCountMap ? t._maxCountMap[a] : t._defaultMaxCount,
                r = t._poolsMap[a] = t._poolsMap[a] || [];
            r.length < i && (e._isInPool ? console.warn("The object is already in the pool.") : (e._isInPool = !0, r.push(e)));
          }, t.toString = function () {
            throw new Error();
          }, t.setMaxCount = function (e, a) {
            if ((a < 0 || a != a) && (a = 0), null !== e) null !== (r = (i = String(e)) in t._poolsMap ? t._poolsMap[i] : null) && r.length > a && (r.length = a), t._maxCountMap[i] = a;else for (var i in t._defaultMaxCount = a, t._poolsMap) {
              var r;
              (r = t._poolsMap[i]).length > a && (r.length = a), i in t._maxCountMap && (t._maxCountMap[i] = a);
            }
          }, t.clearPool = function (e) {
            if (void 0 === e && (e = null), null !== e) {
              var a = String(e);
              null !== (r = a in t._poolsMap ? t._poolsMap[a] : null) && r.length > 0 && (r.length = 0);
            } else for (var i in t._poolsMap) {
              var r;
              (r = t._poolsMap[i]).length = 0;
            }
          }, t.borrowObject = function (e) {
            var a = String(e),
                i = a in t._poolsMap ? t._poolsMap[a] : null;

            if (null !== i && i.length > 0) {
              var r = i.pop();
              return r._isInPool = !1, r;
            }

            var n = new e();
            return n._onClear(), n;
          }, t.prototype.returnToPool = function () {
            this._onClear(), t._returnObject(this);
          }, t._hashCode = 0, t._defaultMaxCount = 3e3, t._maxCountMap = {}, t._poolsMap = {}, t;
        }();

        t.BaseObject = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function t(t, e, a, i, r, n) {
            void 0 === t && (t = 1), void 0 === e && (e = 0), void 0 === a && (a = 0), void 0 === i && (i = 1), void 0 === r && (r = 0), void 0 === n && (n = 0), this.a = t, this.b = e, this.c = a, this.d = i, this.tx = r, this.ty = n;
          }

          return t.prototype.toString = function () {
            return "[object dragonBones.Matrix] a:" + this.a + " b:" + this.b + " c:" + this.c + " d:" + this.d + " tx:" + this.tx + " ty:" + this.ty;
          }, t.prototype.copyFrom = function (t) {
            return this.a = t.a, this.b = t.b, this.c = t.c, this.d = t.d, this.tx = t.tx, this.ty = t.ty, this;
          }, t.prototype.copyFromArray = function (t, e) {
            return void 0 === e && (e = 0), this.a = t[e], this.b = t[e + 1], this.c = t[e + 2], this.d = t[e + 3], this.tx = t[e + 4], this.ty = t[e + 5], this;
          }, t.prototype.identity = function () {
            return this.a = this.d = 1, this.b = this.c = 0, this.tx = this.ty = 0, this;
          }, t.prototype.concat = function (t) {
            var e = this.a * t.a,
                a = 0,
                i = 0,
                r = this.d * t.d,
                n = this.tx * t.a + t.tx,
                s = this.ty * t.d + t.ty;
            return 0 === this.b && 0 === this.c || (e += this.b * t.c, a += this.b * t.d, i += this.c * t.a, r += this.c * t.b), 0 === t.b && 0 === t.c || (a += this.a * t.b, i += this.d * t.c, n += this.ty * t.c, s += this.tx * t.b), this.a = e, this.b = a, this.c = i, this.d = r, this.tx = n, this.ty = s, this;
          }, t.prototype.invert = function () {
            var t = this.a,
                e = this.b,
                a = this.c,
                i = this.d,
                r = this.tx,
                n = this.ty;
            if (0 === e && 0 === a) return this.b = this.c = 0, 0 === t || 0 === i ? this.a = this.b = this.tx = this.ty = 0 : (t = this.a = 1 / t, i = this.d = 1 / i, this.tx = -t * r, this.ty = -i * n), this;
            var s = t * i - e * a;
            if (0 === s) return this.a = this.d = 1, this.b = this.c = 0, this.tx = this.ty = 0, this;
            s = 1 / s;
            var o = this.a = i * s;
            return e = this.b = -e * s, a = this.c = -a * s, i = this.d = t * s, this.tx = -(o * r + a * n), this.ty = -(e * r + i * n), this;
          }, t.prototype.transformPoint = function (t, e, a, i) {
            void 0 === i && (i = !1), a.x = this.a * t + this.c * e, a.y = this.b * t + this.d * e, i || (a.x += this.tx, a.y += this.ty);
          }, t.prototype.transformRectangle = function (t, e) {
            void 0 === e && (e = !1);

            var a = this.a,
                i = this.b,
                r = this.c,
                n = this.d,
                s = e ? 0 : this.tx,
                o = e ? 0 : this.ty,
                l = t.x,
                h = t.y,
                u = l + t.width,
                _ = h + t.height,
                f = a * l + r * h + s,
                c = i * l + n * h + o,
                m = a * u + r * h + s,
                p = i * u + n * h + o,
                d = a * u + r * _ + s,
                y = i * u + n * _ + o,
                g = a * l + r * _ + s,
                v = i * l + n * _ + o,
                D = 0;

            f > m && (D = f, f = m, m = D), d > g && (D = d, d = g, g = D), t.x = Math.floor(f < d ? f : d), t.width = Math.ceil((m > g ? m : g) - t.x), c > p && (D = c, c = p, p = D), y > v && (D = y, y = v, v = D), t.y = Math.floor(c < y ? c : y), t.height = Math.ceil((p > v ? p : v) - t.y);
          }, t;
        }();

        t.Matrix = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function t(t, e, a, i, r, n) {
            void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === a && (a = 0), void 0 === i && (i = 0), void 0 === r && (r = 1), void 0 === n && (n = 1), this.x = t, this.y = e, this.skew = a, this.rotation = i, this.scaleX = r, this.scaleY = n;
          }

          return t.normalizeRadian = function (t) {
            return (t = (t + Math.PI) % (2 * Math.PI)) + (t > 0 ? -Math.PI : Math.PI);
          }, t.prototype.toString = function () {
            return "[object dragonBones.Transform] x:" + this.x + " y:" + this.y + " skewX:" + 180 * this.skew / Math.PI + " skewY:" + 180 * this.rotation / Math.PI + " scaleX:" + this.scaleX + " scaleY:" + this.scaleY;
          }, t.prototype.copyFrom = function (t) {
            return this.x = t.x, this.y = t.y, this.skew = t.skew, this.rotation = t.rotation, this.scaleX = t.scaleX, this.scaleY = t.scaleY, this;
          }, t.prototype.identity = function () {
            return this.x = this.y = 0, this.skew = this.rotation = 0, this.scaleX = this.scaleY = 1, this;
          }, t.prototype.add = function (t) {
            return this.x += t.x, this.y += t.y, this.skew += t.skew, this.rotation += t.rotation, this.scaleX *= t.scaleX, this.scaleY *= t.scaleY, this;
          }, t.prototype.minus = function (t) {
            return this.x -= t.x, this.y -= t.y, this.skew -= t.skew, this.rotation -= t.rotation, this.scaleX /= t.scaleX, this.scaleY /= t.scaleY, this;
          }, t.prototype.fromMatrix = function (e) {
            var a = this.scaleX,
                i = this.scaleY,
                r = t.PI_Q;
            this.x = e.tx, this.y = e.ty, this.rotation = Math.atan(e.b / e.a);
            var n = Math.atan(-e.c / e.d);
            return this.scaleX = this.rotation > -r && this.rotation < r ? e.a / Math.cos(this.rotation) : e.b / Math.sin(this.rotation), this.scaleY = n > -r && n < r ? e.d / Math.cos(n) : -e.c / Math.sin(n), a >= 0 && this.scaleX < 0 && (this.scaleX = -this.scaleX, this.rotation = this.rotation - Math.PI), i >= 0 && this.scaleY < 0 && (this.scaleY = -this.scaleY, n -= Math.PI), this.skew = n - this.rotation, this;
          }, t.prototype.toMatrix = function (t) {
            return 0 === this.rotation ? (t.a = 1, t.b = 0) : (t.a = Math.cos(this.rotation), t.b = Math.sin(this.rotation)), 0 === this.skew ? (t.c = -t.b, t.d = t.a) : (t.c = -Math.sin(this.skew + this.rotation), t.d = Math.cos(this.skew + this.rotation)), 1 !== this.scaleX && (t.a *= this.scaleX, t.b *= this.scaleX), 1 !== this.scaleY && (t.c *= this.scaleY, t.d *= this.scaleY), t.tx = this.x, t.ty = this.y, this;
          }, t.PI = Math.PI, t.PI_D = 2 * Math.PI, t.PI_H = Math.PI / 2, t.PI_Q = Math.PI / 4, t.RAD_DEG = 180 / Math.PI, t.DEG_RAD = Math.PI / 180, t;
        }();

        t.Transform = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function t(t, e, a, i, r, n, s, o) {
            void 0 === t && (t = 1), void 0 === e && (e = 1), void 0 === a && (a = 1), void 0 === i && (i = 1), void 0 === r && (r = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === o && (o = 0), this.alphaMultiplier = t, this.redMultiplier = e, this.greenMultiplier = a, this.blueMultiplier = i, this.alphaOffset = r, this.redOffset = n, this.greenOffset = s, this.blueOffset = o;
          }

          return t.prototype.copyFrom = function (t) {
            this.alphaMultiplier = t.alphaMultiplier, this.redMultiplier = t.redMultiplier, this.greenMultiplier = t.greenMultiplier, this.blueMultiplier = t.blueMultiplier, this.alphaOffset = t.alphaOffset, this.redOffset = t.redOffset, this.greenOffset = t.greenOffset, this.blueOffset = t.blueOffset;
          }, t.prototype.identity = function () {
            this.alphaMultiplier = this.redMultiplier = this.greenMultiplier = this.blueMultiplier = 1, this.alphaOffset = this.redOffset = this.greenOffset = this.blueOffset = 0;
          }, t;
        }();

        t.ColorTransform = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function t(t, e) {
            void 0 === t && (t = 0), void 0 === e && (e = 0), this.x = t, this.y = e;
          }

          return t.prototype.copyFrom = function (t) {
            this.x = t.x, this.y = t.y;
          }, t.prototype.clear = function () {
            this.x = this.y = 0;
          }, t;
        }();

        t.Point = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function t(t, e, a, i) {
            void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === a && (a = 0), void 0 === i && (i = 0), this.x = t, this.y = e, this.width = a, this.height = i;
          }

          return t.prototype.copyFrom = function (t) {
            this.x = t.x, this.y = t.y, this.width = t.width, this.height = t.height;
          }, t.prototype.clear = function () {
            this.x = this.y = 0, this.width = this.height = 0;
          }, t;
        }();

        t.Rectangle = e;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.ints = [], e.floats = [], e.strings = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.UserData]";
          }, e.prototype._onClear = function () {
            this.ints.length = 0, this.floats.length = 0, this.strings.length = 0;
          }, e.prototype.addInt = function (t) {
            this.ints.push(t);
          }, e.prototype.addFloat = function (t) {
            this.floats.push(t);
          }, e.prototype.addString = function (t) {
            this.strings.push(t);
          }, e.prototype.getInt = function (t) {
            return void 0 === t && (t = 0), t >= 0 && t < this.ints.length ? this.ints[t] : 0;
          }, e.prototype.getFloat = function (t) {
            return void 0 === t && (t = 0), t >= 0 && t < this.floats.length ? this.floats[t] : 0;
          }, e.prototype.getString = function (t) {
            return void 0 === t && (t = 0), t >= 0 && t < this.strings.length ? this.strings[t] : "";
          }, e;
        }(t.BaseObject);

        t.UserData = e;

        var a = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.data = null, e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.ActionData]";
          }, e.prototype._onClear = function () {
            null !== this.data && this.data.returnToPool(), this.type = 0, this.name = "", this.bone = null, this.slot = null, this.data = null;
          }, e;
        }(t.BaseObject);

        t.ActionData = a;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.frameIndices = [], e.cachedFrames = [], e.armatureNames = [], e.armatures = {}, e.userData = null, e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.DragonBonesData]";
          }, e.prototype._onClear = function () {
            for (var t in this.armatures) {
              this.armatures[t].returnToPool(), delete this.armatures[t];
            }

            null !== this.userData && this.userData.returnToPool(), this.autoSearch = !1, this.frameRate = 0, this.version = "", this.name = "", this.stage = null, this.frameIndices.length = 0, this.cachedFrames.length = 0, this.armatureNames.length = 0, this.binary = null, this.intArray = null, this.floatArray = null, this.frameIntArray = null, this.frameFloatArray = null, this.frameArray = null, this.timelineArray = null, this.userData = null;
          }, e.prototype.addArmature = function (t) {
            t.name in this.armatures ? console.warn("Same armature: " + t.name) : (t.parent = this, this.armatures[t.name] = t, this.armatureNames.push(t.name));
          }, e.prototype.getArmature = function (t) {
            return t in this.armatures ? this.armatures[t] : null;
          }, e.prototype.dispose = function () {
            console.warn("已废弃"), this.returnToPool();
          }, e;
        }(t.BaseObject);

        t.DragonBonesData = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.aabb = new t.Rectangle(), a.animationNames = [], a.sortedBones = [], a.sortedSlots = [], a.defaultActions = [], a.actions = [], a.bones = {}, a.slots = {}, a.constraints = {}, a.skins = {}, a.animations = {}, a.canvas = null, a.userData = null, a;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.ArmatureData]";
          }, a.prototype._onClear = function () {
            for (var t = 0, e = this.defaultActions; t < e.length; t++) {
              e[t].returnToPool();
            }

            for (var a = 0, i = this.actions; a < i.length; a++) {
              i[a].returnToPool();
            }

            for (var r in this.bones) {
              this.bones[r].returnToPool(), delete this.bones[r];
            }

            for (var r in this.slots) {
              this.slots[r].returnToPool(), delete this.slots[r];
            }

            for (var r in this.constraints) {
              this.constraints[r].returnToPool(), delete this.constraints[r];
            }

            for (var r in this.skins) {
              this.skins[r].returnToPool(), delete this.skins[r];
            }

            for (var r in this.animations) {
              this.animations[r].returnToPool(), delete this.animations[r];
            }

            null !== this.canvas && this.canvas.returnToPool(), null !== this.userData && this.userData.returnToPool(), this.type = 0, this.frameRate = 0, this.cacheFrameRate = 0, this.scale = 1, this.name = "", this.aabb.clear(), this.animationNames.length = 0, this.sortedBones.length = 0, this.sortedSlots.length = 0, this.defaultActions.length = 0, this.actions.length = 0, this.defaultSkin = null, this.defaultAnimation = null, this.canvas = null, this.userData = null, this.parent = null;
          }, a.prototype.sortBones = function () {
            var t = this.sortedBones.length;

            if (!(t <= 0)) {
              var e = this.sortedBones.concat(),
                  a = 0,
                  i = 0;

              for (this.sortedBones.length = 0; i < t;) {
                var r = e[a++];

                if (a >= t && (a = 0), !(this.sortedBones.indexOf(r) >= 0)) {
                  var n = !1;

                  for (var s in this.constraints) {
                    var o = this.constraints[s];

                    if (o.root === r && this.sortedBones.indexOf(o.target) < 0) {
                      n = !0;
                      break;
                    }
                  }

                  n || null !== r.parent && this.sortedBones.indexOf(r.parent) < 0 || (this.sortedBones.push(r), i++);
                }
              }
            }
          }, a.prototype.cacheFrames = function (t) {
            if (!(this.cacheFrameRate > 0)) for (var e in this.cacheFrameRate = t, this.animations) {
              this.animations[e].cacheFrames(this.cacheFrameRate);
            }
          }, a.prototype.setCacheFrame = function (t, e) {
            var a = this.parent.cachedFrames,
                i = a.length;
            return a.length += 10, a[i] = t.a, a[i + 1] = t.b, a[i + 2] = t.c, a[i + 3] = t.d, a[i + 4] = t.tx, a[i + 5] = t.ty, a[i + 6] = e.rotation, a[i + 7] = e.skew, a[i + 8] = e.scaleX, a[i + 9] = e.scaleY, i;
          }, a.prototype.getCacheFrame = function (t, e, a) {
            var i = this.parent.cachedFrames;
            t.a = i[a], t.b = i[a + 1], t.c = i[a + 2], t.d = i[a + 3], t.tx = i[a + 4], t.ty = i[a + 5], e.rotation = i[a + 6], e.skew = i[a + 7], e.scaleX = i[a + 8], e.scaleY = i[a + 9], e.x = t.tx, e.y = t.ty;
          }, a.prototype.addBone = function (t) {
            t.name in this.bones ? console.warn("Same bone: " + t.name) : (this.bones[t.name] = t, this.sortedBones.push(t));
          }, a.prototype.addSlot = function (t) {
            t.name in this.slots ? console.warn("Same slot: " + t.name) : (this.slots[t.name] = t, this.sortedSlots.push(t));
          }, a.prototype.addConstraint = function (t) {
            t.name in this.constraints ? console.warn("Same constraint: " + t.name) : this.constraints[t.name] = t;
          }, a.prototype.addSkin = function (t) {
            t.name in this.skins ? console.warn("Same skin: " + t.name) : (t.parent = this, this.skins[t.name] = t, null === this.defaultSkin && (this.defaultSkin = t), "default" === t.name && (this.defaultSkin = t));
          }, a.prototype.addAnimation = function (t) {
            t.name in this.animations ? console.warn("Same animation: " + t.name) : (t.parent = this, this.animations[t.name] = t, this.animationNames.push(t.name), null === this.defaultAnimation && (this.defaultAnimation = t));
          }, a.prototype.addAction = function (t, e) {
            e ? this.defaultActions.push(t) : this.actions.push(t);
          }, a.prototype.getBone = function (t) {
            return t in this.bones ? this.bones[t] : null;
          }, a.prototype.getSlot = function (t) {
            return t in this.slots ? this.slots[t] : null;
          }, a.prototype.getConstraint = function (t) {
            return t in this.constraints ? this.constraints[t] : null;
          }, a.prototype.getSkin = function (t) {
            return t in this.skins ? this.skins[t] : null;
          }, a.prototype.getMesh = function (t, e, a) {
            var i = this.getSkin(t);
            return null === i ? null : i.getDisplay(e, a);
          }, a.prototype.getAnimation = function (t) {
            return t in this.animations ? this.animations[t] : null;
          }, a;
        }(t.BaseObject);

        t.ArmatureData = e;

        var a = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.transform = new t.Transform(), a.userData = null, a;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.BoneData]";
          }, a.prototype._onClear = function () {
            null !== this.userData && this.userData.returnToPool(), this.inheritTranslation = !1, this.inheritRotation = !1, this.inheritScale = !1, this.inheritReflection = !1, this.type = 0, this.length = 0, this.name = "", this.transform.identity(), this.userData = null, this.parent = null;
          }, a;
        }(t.BaseObject);

        t.BoneData = a;

        var i = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.vertices = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.SurfaceData]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.type = 1, this.segmentX = 0, this.segmentY = 0, this.vertices.length = 0;
          }, e;
        }(a);

        t.SurfaceData = i;

        var r = function (e) {
          function a() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.color = null, t.userData = null, t;
          }

          return X(a, e), a.createColor = function () {
            return new t.ColorTransform();
          }, a.toString = function () {
            return "[class dragonBones.SlotData]";
          }, a.prototype._onClear = function () {
            null !== this.userData && this.userData.returnToPool(), this.blendMode = 0, this.displayIndex = 0, this.zOrder = 0, this.name = "", this.color = null, this.userData = null, this.parent = null;
          }, a.DEFAULT_COLOR = new t.ColorTransform(), a;
        }(t.BaseObject);

        t.SlotData = r;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.prototype._onClear = function () {
            this.order = 0, this.name = "", this.type = 0, this.target = null, this.root = null, this.bone = null;
          }, e;
        }(t.BaseObject);

        t.ConstraintData = e;

        var a = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.IKConstraintData]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.scaleEnabled = !1, this.bendPositive = !1, this.weight = 1;
          }, e;
        }(e);

        t.IKConstraintData = a;

        var i = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.bones = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.PathConstraintData]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.pathSlot = null, this.pathDisplayData = null, this.bones.length = 0, this.positionMode = 0, this.spacingMode = 1, this.rotateMode = 1, this.position = 0, this.spacing = 0, this.rotateOffset = 0, this.rotateMix = 0, this.translateMix = 0;
          }, e.prototype.AddBone = function (t) {
            this.bones.push(t);
          }, e;
        }(e);

        t.PathConstraintData = i;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.CanvasData]";
          }, e.prototype._onClear = function () {
            this.hasBackground = !1, this.color = 0, this.x = 0, this.y = 0, this.width = 0, this.height = 0;
          }, e;
        }(t.BaseObject);

        t.CanvasData = e;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.displays = {}, e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.SkinData]";
          }, e.prototype._onClear = function () {
            for (var t in this.displays) {
              for (var e = 0, a = this.displays[t]; e < a.length; e++) {
                var i = a[e];
                null !== i && i.returnToPool();
              }

              delete this.displays[t];
            }

            this.name = "", this.parent = null;
          }, e.prototype.addDisplay = function (t, e) {
            t in this.displays || (this.displays[t] = []), null !== e && (e.parent = this), this.displays[t].push(e);
          }, e.prototype.getDisplay = function (t, e) {
            var a = this.getDisplays(t);
            if (null !== a) for (var i = 0, r = a; i < r.length; i++) {
              var n = r[i];
              if (null !== n && n.name === e) return n;
            }
            return null;
          }, e.prototype.getDisplays = function (t) {
            return t in this.displays ? this.displays[t] : null;
          }, e;
        }(t.BaseObject);

        t.SkinData = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function t() {
            this.weight = null;
          }

          return t.prototype.clear = function () {
            this.isShared || null === this.weight || this.weight.returnToPool(), this.isShared = !1, this.inheritDeform = !1, this.offset = 0, this.data = null, this.weight = null;
          }, t.prototype.shareFrom = function (t) {
            this.isShared = !0, this.offset = t.offset, this.weight = t.weight;
          }, t;
        }();

        t.VerticesData = e;

        var a = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.transform = new t.Transform(), a;
          }

          return X(a, e), a.prototype._onClear = function () {
            this.name = "", this.path = "", this.transform.identity(), this.parent = null;
          }, a;
        }(t.BaseObject);

        t.DisplayData = a;

        var i = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.pivot = new t.Point(), a;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.ImageDisplayData]";
          }, a.prototype._onClear = function () {
            e.prototype._onClear.call(this), this.type = 0, this.pivot.clear(), this.texture = null;
          }, a;
        }(a);

        t.ImageDisplayData = i;

        var r = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.actions = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.ArmatureDisplayData]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this);

            for (var e = 0, a = this.actions; e < a.length; e++) {
              a[e].returnToPool();
            }

            this.type = 1, this.inheritAnimation = !1, this.actions.length = 0, this.armature = null;
          }, e.prototype.addAction = function (t) {
            this.actions.push(t);
          }, e;
        }(a);

        t.ArmatureDisplayData = r;

        var n = function (t) {
          function a() {
            var a = null !== t && t.apply(this, arguments) || this;
            return a.vertices = new e(), a;
          }

          return X(a, t), a.toString = function () {
            return "[class dragonBones.MeshDisplayData]";
          }, a.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.type = 2, this.vertices.clear(), this.texture = null;
          }, a;
        }(a);

        t.MeshDisplayData = n;

        var s = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.boundingBox = null, e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.BoundingBoxDisplayData]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), null !== this.boundingBox && this.boundingBox.returnToPool(), this.type = 3, this.boundingBox = null;
          }, e;
        }(a);

        t.BoundingBoxDisplayData = s;

        var o = function (t) {
          function a() {
            var a = null !== t && t.apply(this, arguments) || this;
            return a.vertices = new e(), a.curveLengths = [], a;
          }

          return X(a, t), a.toString = function () {
            return "[class dragonBones.PathDisplayData]";
          }, a.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.type = 4, this.closed = !1, this.constantSpeed = !1, this.vertices.clear(), this.curveLengths.length = 0;
          }, a;
        }(a);

        t.PathDisplayData = o;

        var l = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.bones = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.WeightData]";
          }, e.prototype._onClear = function () {
            this.count = 0, this.offset = 0, this.bones.length = 0;
          }, e.prototype.addBone = function (t) {
            this.bones.push(t);
          }, e;
        }(t.BaseObject);

        t.WeightData = l;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.prototype._onClear = function () {
            this.color = 0, this.width = 0, this.height = 0;
          }, e;
        }(t.BaseObject);

        t.BoundingBoxData = e;

        var a = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.RectangleBoundingBoxData]";
          }, e._computeOutCode = function (t, e, a, i, r, n) {
            var s = 0;
            return t < a ? s |= 1 : t > r && (s |= 2), e < i ? s |= 4 : e > n && (s |= 8), s;
          }, e.rectangleIntersectsSegment = function (t, a, i, r, n, s, o, l, h, u, _) {
            void 0 === h && (h = null), void 0 === u && (u = null), void 0 === _ && (_ = null);
            var f = t > n && t < o && a > s && a < l,
                c = i > n && i < o && r > s && r < l;
            if (f && c) return -1;

            for (var m = 0, p = e._computeOutCode(t, a, n, s, o, l), d = e._computeOutCode(i, r, n, s, o, l);;) {
              if (0 == (p | d)) {
                m = 2;
                break;
              }

              if (0 != (p & d)) break;
              var y = 0,
                  g = 0,
                  v = 0,
                  D = 0 !== p ? p : d;
              0 != (4 & D) ? (y = t + (i - t) * (s - a) / (r - a), g = s, null !== _ && (v = .5 * -Math.PI)) : 0 != (8 & D) ? (y = t + (i - t) * (l - a) / (r - a), g = l, null !== _ && (v = .5 * Math.PI)) : 0 != (2 & D) ? (g = a + (r - a) * (o - t) / (i - t), y = o, null !== _ && (v = 0)) : 0 != (1 & D) && (g = a + (r - a) * (n - t) / (i - t), y = n, null !== _ && (v = Math.PI)), D === p ? (t = y, a = g, p = e._computeOutCode(t, a, n, s, o, l), null !== _ && (_.x = v)) : (i = y, r = g, d = e._computeOutCode(i, r, n, s, o, l), null !== _ && (_.y = v));
            }

            return m && (f ? (m = 2, null !== h && (h.x = i, h.y = r), null !== u && (u.x = i, u.y = i), null !== _ && (_.x = _.y + Math.PI)) : c ? (m = 1, null !== h && (h.x = t, h.y = a), null !== u && (u.x = t, u.y = a), null !== _ && (_.y = _.x + Math.PI)) : (m = 3, null !== h && (h.x = t, h.y = a), null !== u && (u.x = i, u.y = r))), m;
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.type = 0;
          }, e.prototype.containsPoint = function (t, e) {
            var a = .5 * this.width;

            if (t >= -a && t <= a) {
              var i = .5 * this.height;
              if (e >= -i && e <= i) return !0;
            }

            return !1;
          }, e.prototype.intersectsSegment = function (t, a, i, r, n, s, o) {
            void 0 === n && (n = null), void 0 === s && (s = null), void 0 === o && (o = null);
            var l = .5 * this.width,
                h = .5 * this.height;
            return e.rectangleIntersectsSegment(t, a, i, r, -l, -h, l, h, n, s, o);
          }, e;
        }(e);

        t.RectangleBoundingBoxData = a;

        var i = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.EllipseData]";
          }, e.ellipseIntersectsSegment = function (t, e, a, i, r, n, s, o, l, h, u) {
            void 0 === l && (l = null), void 0 === h && (h = null), void 0 === u && (u = null);

            var _ = s / o,
                f = _ * _,
                c = a - t,
                m = (i *= _) - (e *= _),
                p = Math.sqrt(c * c + m * m),
                d = c / p,
                y = m / p,
                g = (r - t) * d + (n - e) * y,
                v = s * s,
                D = v - (t * t + e * e) + g * g,
                A = 0;

            if (D >= 0) {
              var b = Math.sqrt(D),
                  T = g - b,
                  S = g + b,
                  P = T < 0 ? -1 : T <= p ? 0 : 1,
                  O = S < 0 ? -1 : S <= p ? 0 : 1,
                  x = P * O;
              if (x < 0) return -1;
              0 === x && (-1 === P ? (A = 2, a = t + S * d, i = (e + S * y) / _, null !== l && (l.x = a, l.y = i), null !== h && (h.x = a, h.y = i), null !== u && (u.x = Math.atan2(i / v * f, a / v), u.y = u.x + Math.PI)) : 1 === O ? (A = 1, t += T * d, e = (e + T * y) / _, null !== l && (l.x = t, l.y = e), null !== h && (h.x = t, h.y = e), null !== u && (u.x = Math.atan2(e / v * f, t / v), u.y = u.x + Math.PI)) : (A = 3, null !== l && (l.x = t + T * d, l.y = (e + T * y) / _, null !== u && (u.x = Math.atan2(l.y / v * f, l.x / v))), null !== h && (h.x = t + S * d, h.y = (e + S * y) / _, null !== u && (u.y = Math.atan2(h.y / v * f, h.x / v)))));
            }

            return A;
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.type = 1;
          }, e.prototype.containsPoint = function (t, e) {
            var a = .5 * this.width;

            if (t >= -a && t <= a) {
              var i = .5 * this.height;
              if (e >= -i && e <= i) return e *= a / i, Math.sqrt(t * t + e * e) <= a;
            }

            return !1;
          }, e.prototype.intersectsSegment = function (t, a, i, r, n, s, o) {
            return void 0 === n && (n = null), void 0 === s && (s = null), void 0 === o && (o = null), e.ellipseIntersectsSegment(t, a, i, r, 0, 0, .5 * this.width, .5 * this.height, n, s, o);
          }, e;
        }(e);

        t.EllipseBoundingBoxData = i;

        var r = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.vertices = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.PolygonBoundingBoxData]";
          }, e.polygonIntersectsSegment = function (t, e, a, i, r, n, s, o) {
            void 0 === n && (n = null), void 0 === s && (s = null), void 0 === o && (o = null), t === a && (t = a + 1e-6), e === i && (e = i + 1e-6);

            for (var l = r.length, h = t - a, u = e - i, _ = t * i - e * a, f = 0, c = r[l - 2], m = r[l - 1], p = 0, d = 0, y = 0, g = 0, v = 0, D = 0, A = 0; A < l; A += 2) {
              var b = r[A],
                  T = r[A + 1];
              c === b && (c = b + 1e-4), m === T && (m = T + 1e-4);
              var S = c - b,
                  P = m - T,
                  O = c * T - m * b,
                  x = h * P - u * S,
                  C = (_ * S - h * O) / x;

              if ((C >= c && C <= b || C >= b && C <= c) && (0 === h || C >= t && C <= a || C >= a && C <= t)) {
                var M = (_ * P - u * O) / x;

                if ((M >= m && M <= T || M >= T && M <= m) && (0 === u || M >= e && M <= i || M >= i && M <= e)) {
                  if (null === s) {
                    y = C, g = M, v = C, D = M, f++, null !== o && (o.x = Math.atan2(T - m, b - c) - .5 * Math.PI, o.y = o.x);
                    break;
                  }

                  var B = C - t;
                  B < 0 && (B = -B), 0 === f ? (p = B, d = B, y = C, g = M, v = C, D = M, null !== o && (o.x = Math.atan2(T - m, b - c) - .5 * Math.PI, o.y = o.x)) : (B < p && (p = B, y = C, g = M, null !== o && (o.x = Math.atan2(T - m, b - c) - .5 * Math.PI)), B > d && (d = B, v = C, D = M, null !== o && (o.y = Math.atan2(T - m, b - c) - .5 * Math.PI))), f++;
                }
              }

              c = b, m = T;
            }

            return 1 === f ? (null !== n && (n.x = y, n.y = g), null !== s && (s.x = y, s.y = g), null !== o && (o.y = o.x + Math.PI)) : f > 1 && (f++, null !== n && (n.x = y, n.y = g), null !== s && (s.x = v, s.y = D)), f;
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.type = 2, this.x = 0, this.y = 0, this.vertices.length = 0;
          }, e.prototype.containsPoint = function (t, e) {
            var a = !1;
            if (t >= this.x && t <= this.width && e >= this.y && e <= this.height) for (var i = 0, r = this.vertices.length, n = r - 2; i < r; i += 2) {
              var s = this.vertices[n + 1],
                  o = this.vertices[i + 1];

              if (o < e && s >= e || s < e && o >= e) {
                var l = this.vertices[n],
                    h = this.vertices[i];
                (e - o) * (l - h) / (s - o) + h < t && (a = !a);
              }

              n = i;
            }
            return a;
          }, e.prototype.intersectsSegment = function (t, i, r, n, s, o, l) {
            void 0 === s && (s = null), void 0 === o && (o = null), void 0 === l && (l = null);
            var h = 0;
            return 0 !== a.rectangleIntersectsSegment(t, i, r, n, this.x, this.y, this.x + this.width, this.y + this.height, null, null, null) && (h = e.polygonIntersectsSegment(t, i, r, n, this.vertices, s, o, l)), h;
          }, e;
        }(e);

        t.PolygonBoundingBoxData = r;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.cachedFrames = [], e.boneTimelines = {}, e.surfaceTimelines = {}, e.slotTimelines = {}, e.constraintTimelines = {}, e.animationTimelines = {}, e.boneCachedFrameIndices = {}, e.slotCachedFrameIndices = {}, e.actionTimeline = null, e.zOrderTimeline = null, e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.AnimationData]";
          }, e.prototype._onClear = function () {
            for (var t in this.boneTimelines) {
              for (var e = 0, a = this.boneTimelines[t]; e < a.length; e++) {
                a[e].returnToPool();
              }

              delete this.boneTimelines[t];
            }

            for (var t in this.surfaceTimelines) {
              for (var i = 0, r = this.surfaceTimelines[t]; i < r.length; i++) {
                r[i].returnToPool();
              }

              delete this.surfaceTimelines[t];
            }

            for (var t in this.slotTimelines) {
              for (var n = 0, s = this.slotTimelines[t]; n < s.length; n++) {
                s[n].returnToPool();
              }

              delete this.slotTimelines[t];
            }

            for (var t in this.constraintTimelines) {
              for (var o = 0, l = this.constraintTimelines[t]; o < l.length; o++) {
                l[o].returnToPool();
              }

              delete this.constraintTimelines[t];
            }

            for (var t in this.animationTimelines) {
              for (var h = 0, u = this.animationTimelines[t]; h < u.length; h++) {
                u[h].returnToPool();
              }

              delete this.animationTimelines[t];
            }

            for (var t in this.boneCachedFrameIndices) {
              delete this.boneCachedFrameIndices[t];
            }

            for (var t in this.slotCachedFrameIndices) {
              delete this.slotCachedFrameIndices[t];
            }

            null !== this.actionTimeline && this.actionTimeline.returnToPool(), null !== this.zOrderTimeline && this.zOrderTimeline.returnToPool(), this.frameIntOffset = 0, this.frameFloatOffset = 0, this.frameOffset = 0, this.frameCount = 0, this.playTimes = 0, this.duration = 0, this.scale = 1, this.fadeInTime = 0, this.cacheFrameRate = 0, this.name = "", this.cachedFrames.length = 0, this.actionTimeline = null, this.zOrderTimeline = null, this.parent = null;
          }, e.prototype.cacheFrames = function (t) {
            if (!(this.cacheFrameRate > 0)) {
              this.cacheFrameRate = Math.max(Math.ceil(t * this.scale), 1);
              var e = Math.ceil(this.cacheFrameRate * this.duration) + 1;
              this.cachedFrames.length = e;

              for (var a = 0, i = this.cacheFrames.length; a < i; ++a) {
                this.cachedFrames[a] = !1;
              }

              for (var r = 0, n = this.parent.sortedBones; r < n.length; r++) {
                var s = n[r];

                for (a = 0, i = (h = new Array(e)).length; a < i; ++a) {
                  h[a] = -1;
                }

                this.boneCachedFrameIndices[s.name] = h;
              }

              for (var o = 0, l = this.parent.sortedSlots; o < l.length; o++) {
                var h,
                    u = l[o];

                for (a = 0, i = (h = new Array(e)).length; a < i; ++a) {
                  h[a] = -1;
                }

                this.slotCachedFrameIndices[u.name] = h;
              }
            }
          }, e.prototype.addBoneTimeline = function (t, e) {
            var a = t.name in this.boneTimelines ? this.boneTimelines[t.name] : this.boneTimelines[t.name] = [];
            a.indexOf(e) < 0 && a.push(e);
          }, e.prototype.addSurfaceTimeline = function (t, e) {
            var a = t.name in this.surfaceTimelines ? this.surfaceTimelines[t.name] : this.surfaceTimelines[t.name] = [];
            a.indexOf(e) < 0 && a.push(e);
          }, e.prototype.addSlotTimeline = function (t, e) {
            var a = t.name in this.slotTimelines ? this.slotTimelines[t.name] : this.slotTimelines[t.name] = [];
            a.indexOf(e) < 0 && a.push(e);
          }, e.prototype.addConstraintTimeline = function (t, e) {
            var a = t.name in this.constraintTimelines ? this.constraintTimelines[t.name] : this.constraintTimelines[t.name] = [];
            a.indexOf(e) < 0 && a.push(e);
          }, e.prototype.addAnimationTimeline = function (t, e) {
            var a = t in this.animationTimelines ? this.animationTimelines[t] : this.animationTimelines[t] = [];
            a.indexOf(e) < 0 && a.push(e);
          }, e.prototype.getBoneTimelines = function (t) {
            return t in this.boneTimelines ? this.boneTimelines[t] : null;
          }, e.prototype.getSurfaceTimelines = function (t) {
            return t in this.surfaceTimelines ? this.surfaceTimelines[t] : null;
          }, e.prototype.getSlotTimelines = function (t) {
            return t in this.slotTimelines ? this.slotTimelines[t] : null;
          }, e.prototype.getConstraintTimelines = function (t) {
            return t in this.constraintTimelines ? this.constraintTimelines[t] : null;
          }, e.prototype.getAnimationTimelines = function (t) {
            return t in this.animationTimelines ? this.animationTimelines[t] : null;
          }, e.prototype.getBoneCachedFrameIndices = function (t) {
            return t in this.boneCachedFrameIndices ? this.boneCachedFrameIndices[t] : null;
          }, e.prototype.getSlotCachedFrameIndices = function (t) {
            return t in this.slotCachedFrameIndices ? this.slotCachedFrameIndices[t] : null;
          }, e;
        }(t.BaseObject);

        t.AnimationData = e;

        var a = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.TimelineData]";
          }, e.prototype._onClear = function () {
            this.type = 10, this.offset = 0, this.frameIndicesOffset = -1;
          }, e;
        }(t.BaseObject);

        t.TimelineData = a;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.boneMask = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.AnimationConfig]";
          }, e.prototype._onClear = function () {
            this.pauseFadeOut = !0, this.fadeOutMode = 4, this.fadeOutTweenType = 1, this.fadeOutTime = -1, this.actionEnabled = !0, this.additiveBlending = !1, this.displayControl = !0, this.pauseFadeIn = !0, this.resetToPose = !0, this.fadeInTweenType = 1, this.playTimes = -1, this.layer = 0, this.position = 0, this.duration = -1, this.timeScale = -100, this.weight = 1, this.fadeInTime = -1, this.autoFadeOutTime = -1, this.name = "", this.animation = "", this.group = "", this.boneMask.length = 0;
          }, e.prototype.clear = function () {
            this._onClear();
          }, e.prototype.copyFrom = function (t) {
            this.pauseFadeOut = t.pauseFadeOut, this.fadeOutMode = t.fadeOutMode, this.autoFadeOutTime = t.autoFadeOutTime, this.fadeOutTweenType = t.fadeOutTweenType, this.actionEnabled = t.actionEnabled, this.additiveBlending = t.additiveBlending, this.displayControl = t.displayControl, this.pauseFadeIn = t.pauseFadeIn, this.resetToPose = t.resetToPose, this.playTimes = t.playTimes, this.layer = t.layer, this.position = t.position, this.duration = t.duration, this.timeScale = t.timeScale, this.fadeInTime = t.fadeInTime, this.fadeOutTime = t.fadeOutTime, this.fadeInTweenType = t.fadeInTweenType, this.weight = t.weight, this.name = t.name, this.animation = t.animation, this.group = t.group, this.boneMask.length = t.boneMask.length;

            for (var e = 0, a = this.boneMask.length; e < a; ++e) {
              this.boneMask[e] = t.boneMask[e];
            }
          }, e.prototype.containsBoneMask = function (t) {
            return 0 === this.boneMask.length || this.boneMask.indexOf(t) >= 0;
          }, e.prototype.addBoneMask = function (t, e, a) {
            void 0 === a && (a = !0);
            var i = t.getBone(e);
            if (null !== i && (this.boneMask.indexOf(e) < 0 && this.boneMask.push(e), a)) for (var r = 0, n = t.getBones(); r < n.length; r++) {
              var s = n[r];
              this.boneMask.indexOf(s.name) < 0 && i.contains(s) && this.boneMask.push(s.name);
            }
          }, e.prototype.removeBoneMask = function (t, e, a) {
            void 0 === a && (a = !0);
            var i = this.boneMask.indexOf(e);

            if (i >= 0 && this.boneMask.splice(i, 1), a) {
              var r = t.getBone(e);
              if (null !== r) if (this.boneMask.length > 0) for (var n = 0, s = t.getBones(); n < s.length; n++) {
                var o = s[n],
                    l = this.boneMask.indexOf(o.name);
                l >= 0 && r.contains(o) && this.boneMask.splice(l, 1);
              } else for (var h = 0, u = t.getBones(); h < u.length; h++) {
                (o = u[h]) !== r && (r.contains(o) || this.boneMask.push(o.name));
              }
            }
          }, e;
        }(t.BaseObject);

        t.AnimationConfig = e;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.textures = {}, e;
          }

          return X(e, t), e.prototype._onClear = function () {
            for (var t in this.textures) {
              this.textures[t].returnToPool(), delete this.textures[t];
            }

            this.autoSearch = !1, this.width = 0, this.height = 0, this.scale = 1, this.name = "", this.imagePath = "";
          }, e.prototype.copyFrom = function (t) {
            for (var e in this.autoSearch = t.autoSearch, this.scale = t.scale, this.width = t.width, this.height = t.height, this.name = t.name, this.imagePath = t.imagePath, this.textures) {
              this.textures[e].returnToPool(), delete this.textures[e];
            }

            for (var e in t.textures) {
              var a = this.createTexture();
              a.copyFrom(t.textures[e]), this.textures[e] = a;
            }
          }, e.prototype.addTexture = function (t) {
            t.name in this.textures ? console.warn("Same texture: " + t.name) : (t.parent = this, this.textures[t.name] = t);
          }, e.prototype.getTexture = function (t) {
            return t in this.textures ? this.textures[t] : null;
          }, e;
        }(t.BaseObject);

        t.TextureAtlasData = e;

        var a = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.region = new t.Rectangle(), a.frame = null, a;
          }

          return X(a, e), a.createRectangle = function () {
            return new t.Rectangle();
          }, a.prototype._onClear = function () {
            this.rotated = !1, this.name = "", this.region.clear(), this.parent = null, this.frame = null;
          }, a.prototype.copyFrom = function (t) {
            this.rotated = t.rotated, this.name = t.name, this.region.copyFrom(t.region), this.parent = t.parent, null === this.frame && null !== t.frame ? this.frame = a.createRectangle() : null !== this.frame && null === t.frame && (this.frame = null), null !== this.frame && null !== t.frame && this.frame.copyFrom(t.frame);
          }, a;
        }(t.BaseObject);

        t.TextureData = a;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.vertices = [], e.bones = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.DeformVertices]";
          }, e.prototype._onClear = function () {
            this.verticesDirty = !1, this.vertices.length = 0, this.bones.length = 0, this.verticesData = null;
          }, e.prototype.init = function (t, e) {
            if (this.verticesData = t, null !== this.verticesData) {
              var a;
              a = null !== this.verticesData.weight ? 2 * this.verticesData.weight.count : 2 * this.verticesData.data.intArray[this.verticesData.offset + 0], this.verticesDirty = !0, this.vertices.length = a, this.bones.length = 0;

              for (var i = 0, r = this.vertices.length; i < r; ++i) {
                this.vertices[i] = 0;
              }

              if (null !== this.verticesData.weight) for (i = 0, r = this.verticesData.weight.bones.length; i < r; ++i) {
                var n = e.getBone(this.verticesData.weight.bones[i].name);
                this.bones.push(n);
              }
            } else this.verticesDirty = !1, this.vertices.length = 0, this.bones.length = 0, this.verticesData = null;
          }, e.prototype.isBonesUpdate = function () {
            for (var t = 0, e = this.bones; t < e.length; t++) {
              var a = e[t];
              if (null !== a && a._childrenTransformDirty) return !0;
            }

            return !1;
          }, e;
        }(t.BaseObject);

        t.DeformVertices = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._bones = [], t._slots = [], t._constraints = [], t._actions = [], t._animation = null, t._proxy = null, t._replaceTextureAtlasData = null, t._clock = null, t;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.Armature]";
          }, a._onSortSlots = function (t, e) {
            return t._zOrder > e._zOrder ? 1 : -1;
          }, a.prototype._onClear = function () {
            null !== this._clock && this._clock.remove(this);

            for (var t = 0, e = this._bones; t < e.length; t++) {
              e[t].returnToPool();
            }

            for (var a = 0, i = this._slots; a < i.length; a++) {
              i[a].returnToPool();
            }

            for (var r = 0, n = this._constraints; r < n.length; r++) {
              n[r].returnToPool();
            }

            for (var s = 0, o = this._actions; s < o.length; s++) {
              o[s].returnToPool();
            }

            null !== this._animation && this._animation.returnToPool(), null !== this._proxy && this._proxy.dbClear(), null !== this._replaceTextureAtlasData && this._replaceTextureAtlasData.returnToPool(), this.inheritAnimation = !0, this.userData = null, this._lockUpdate = !1, this._slotsDirty = !0, this._zOrderDirty = !1, this._flipX = !1, this._flipY = !1, this._cacheFrameIndex = -1, this._bones.length = 0, this._slots.length = 0, this._constraints.length = 0, this._actions.length = 0, this._armatureData = null, this._animation = null, this._proxy = null, this._display = null, this._replaceTextureAtlasData = null, this._replacedTexture = null, this._dragonBones = null, this._clock = null, this._parent = null;
          }, a.prototype._sortZOrder = function (t, e) {
            var a = this._armatureData.sortedSlots,
                i = null === t;

            if (this._zOrderDirty || !i) {
              for (var r = 0, n = a.length; r < n; ++r) {
                var s = i ? r : t[e + r];

                if (!(s < 0 || s >= n)) {
                  var o = a[s],
                      l = this.getSlot(o.name);
                  null !== l && l._setZorder(r);
                }
              }

              this._slotsDirty = !0, this._zOrderDirty = !i;
            }
          }, a.prototype._addBone = function (t) {
            this._bones.indexOf(t) < 0 && this._bones.push(t);
          }, a.prototype._addSlot = function (t) {
            this._slots.indexOf(t) < 0 && this._slots.push(t);
          }, a.prototype._addConstraint = function (t) {
            this._constraints.indexOf(t) < 0 && this._constraints.push(t);
          }, a.prototype._bufferAction = function (t, e) {
            this._actions.indexOf(t) < 0 && (e ? this._actions.push(t) : this._actions.unshift(t));
          }, a.prototype.dispose = function () {
            null !== this._armatureData && (this._lockUpdate = !0, this._dragonBones.bufferObject(this));
          }, a.prototype.init = function (e, a, i, r) {
            null === this._armatureData && (this._armatureData = e, this._animation = t.BaseObject.borrowObject(t.Animation), this._proxy = a, this._display = i, this._dragonBones = r, this._proxy.dbInit(this), this._animation.init(this), this._animation.animations = this._armatureData.animations);
          }, a.prototype.advanceTime = function (t) {
            if (!this._lockUpdate) if (null !== this._armatureData) {
              if (null !== this._armatureData.parent) {
                var e = this._cacheFrameIndex;

                if (this._animation.advanceTime(t), this._slotsDirty && (this._slotsDirty = !1, this._slots.sort(a._onSortSlots)), this._cacheFrameIndex < 0 || this._cacheFrameIndex !== e) {
                  var i = 0,
                      r = 0;

                  for (i = 0, r = this._bones.length; i < r; ++i) {
                    this._bones[i].update(this._cacheFrameIndex);
                  }

                  for (i = 0, r = this._slots.length; i < r; ++i) {
                    this._slots[i].update(this._cacheFrameIndex);
                  }
                }

                if (this._actions.length > 0) {
                  this._lockUpdate = !0;

                  for (var n = 0, s = this._actions; n < s.length; n++) {
                    var o = s[n],
                        l = o.actionData;
                    if (null !== l && 0 === l.type) if (null !== o.slot) null !== (_ = o.slot.childArmature) && _.animation.fadeIn(l.name);else if (null !== o.bone) for (var h = 0, u = this.getSlots(); h < u.length; h++) {
                      var _,
                          f = u[h];

                      f.parent === o.bone && null !== (_ = f.childArmature) && _.animation.fadeIn(l.name);
                    } else this._animation.fadeIn(l.name);
                    o.returnToPool();
                  }

                  this._actions.length = 0, this._lockUpdate = !1;
                }

                this._proxy.dbUpdate();
              } else console.warn("The armature data has been disposed.\nPlease make sure dispose armature before call factory.clear().");
            } else console.warn("The armature has been disposed.");
          }, a.prototype.invalidUpdate = function (t, e) {
            if (void 0 === t && (t = null), void 0 === e && (e = !1), null !== t && t.length > 0) {
              if (null !== (s = this.getBone(t)) && (s.invalidUpdate(), e)) for (var a = 0, i = this._slots; a < i.length; a++) {
                (h = i[a]).parent === s && h.invalidUpdate();
              }
            } else {
              for (var r = 0, n = this._bones; r < n.length; r++) {
                var s;
                (s = n[r]).invalidUpdate();
              }

              if (e) for (var o = 0, l = this._slots; o < l.length; o++) {
                var h;
                (h = l[o]).invalidUpdate();
              }
            }
          }, a.prototype.containsPoint = function (t, e) {
            for (var a = 0, i = this._slots; a < i.length; a++) {
              var r = i[a];
              if (r.containsPoint(t, e)) return r;
            }

            return null;
          }, a.prototype.intersectsSegment = function (t, e, a, i, r, n, s) {
            void 0 === r && (r = null), void 0 === n && (n = null), void 0 === s && (s = null);

            for (var o = t === a, l = 0, h = 0, u = 0, _ = 0, f = 0, c = 0, m = 0, p = 0, d = null, y = null, g = 0, v = this._slots; g < v.length; g++) {
              var D = v[g];

              if (D.intersectsSegment(t, e, a, i, r, n, s) > 0) {
                if (null === r && null === n) {
                  d = D;
                  break;
                }

                var A;
                null !== r && ((A = o ? r.y - e : r.x - t) < 0 && (A = -A), (null === d || A < l) && (l = A, u = r.x, _ = r.y, d = D, s && (m = s.x))), null !== n && ((A = n.x - t) < 0 && (A = -A), (null === y || A > h) && (h = A, f = n.x, c = n.y, y = D, null !== s && (p = s.y)));
              }
            }

            return null !== d && null !== r && (r.x = u, r.y = _, null !== s && (s.x = m)), null !== y && null !== n && (n.x = f, n.y = c, null !== s && (s.y = p)), d;
          }, a.prototype.getBone = function (t) {
            for (var e = 0, a = this._bones; e < a.length; e++) {
              var i = a[e];
              if (i.name === t) return i;
            }

            return null;
          }, a.prototype.getBoneByDisplay = function (t) {
            var e = this.getSlotByDisplay(t);
            return null !== e ? e.parent : null;
          }, a.prototype.getSlot = function (t) {
            for (var e = 0, a = this._slots; e < a.length; e++) {
              var i = a[e];
              if (i.name === t) return i;
            }

            return null;
          }, a.prototype.getSlotByDisplay = function (t) {
            if (null !== t) for (var e = 0, a = this._slots; e < a.length; e++) {
              var i = a[e];
              if (i.display === t) return i;
            }
            return null;
          }, a.prototype.getBones = function () {
            return this._bones;
          }, a.prototype.getSlots = function () {
            return this._slots;
          }, Object.defineProperty(a.prototype, "flipX", {
            get: function get() {
              return this._flipX;
            },
            set: function set(t) {
              this._flipX !== t && (this._flipX = t, this.invalidUpdate());
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "flipY", {
            get: function get() {
              return this._flipY;
            },
            set: function set(t) {
              this._flipY !== t && (this._flipY = t, this.invalidUpdate());
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "cacheFrameRate", {
            get: function get() {
              return this._armatureData.cacheFrameRate;
            },
            set: function set(t) {
              if (this._armatureData.cacheFrameRate !== t) {
                this._armatureData.cacheFrames(t);

                for (var e = 0, a = this._slots; e < a.length; e++) {
                  var i = a[e].childArmature;
                  null !== i && (i.cacheFrameRate = t);
                }
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "name", {
            get: function get() {
              return this._armatureData.name;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "armatureData", {
            get: function get() {
              return this._armatureData;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "animation", {
            get: function get() {
              return this._animation;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "proxy", {
            get: function get() {
              return this._proxy;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "eventDispatcher", {
            get: function get() {
              return this._proxy;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "display", {
            get: function get() {
              return this._display;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "replacedTexture", {
            get: function get() {
              return this._replacedTexture;
            },
            set: function set(t) {
              if (this._replacedTexture !== t) {
                null !== this._replaceTextureAtlasData && (this._replaceTextureAtlasData.returnToPool(), this._replaceTextureAtlasData = null), this._replacedTexture = t;

                for (var e = 0, a = this._slots; e < a.length; e++) {
                  var i = a[e];
                  i.invalidUpdate(), i.update(-1);
                }
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "clock", {
            get: function get() {
              return this._clock;
            },
            set: function set(t) {
              if (this._clock !== t) {
                null !== this._clock && this._clock.remove(this), this._clock = t, this._clock && this._clock.add(this);

                for (var e = 0, a = this._slots; e < a.length; e++) {
                  var i = a[e].childArmature;
                  null !== i && (i.clock = this._clock);
                }
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "parent", {
            get: function get() {
              return this._parent;
            },
            enumerable: !0,
            configurable: !0
          }), a.prototype.replaceTexture = function (t) {
            this.replacedTexture = t;
          }, a.prototype.hasEventListener = function (t) {
            return this._proxy.hasDBEventListener(t);
          }, a.prototype.addEventListener = function (t, e, a) {
            this._proxy.addDBEventListener(t, e, a);
          }, a.prototype.removeEventListener = function (t, e, a) {
            this._proxy.removeDBEventListener(t, e, a);
          }, a.prototype.enableAnimationCache = function (t) {
            console.warn("Deprecated."), this.cacheFrameRate = t;
          }, a.prototype.getDisplay = function () {
            return this._display;
          }, a;
        }(t.BaseObject);

        t.Armature = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.globalTransformMatrix = new t.Matrix(), a.global = new t.Transform(), a.offset = new t.Transform(), a;
          }

          return X(a, e), a.prototype._onClear = function () {
            this.globalTransformMatrix.identity(), this.global.identity(), this.offset.identity(), this.origin = null, this.userData = null, this._globalDirty = !1, this._armature = null;
          }, a.prototype.updateGlobalTransform = function () {
            this._globalDirty && (this._globalDirty = !1, this.global.fromMatrix(this.globalTransformMatrix));
          }, Object.defineProperty(a.prototype, "armature", {
            get: function get() {
              return this._armature;
            },
            enumerable: !0,
            configurable: !0
          }), a._helpMatrix = new t.Matrix(), a._helpTransform = new t.Transform(), a._helpPoint = new t.Point(), a;
        }(t.BaseObject);

        t.TransformObject = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.animationPose = new t.Transform(), a._blendState = new t.BlendState(), a;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.Bone]";
          }, a.prototype._onClear = function () {
            e.prototype._onClear.call(this), this.offsetMode = 1, this.animationPose.identity(), this._transformDirty = !1, this._childrenTransformDirty = !1, this._localDirty = !0, this._hasConstraint = !1, this._visible = !0, this._cachedFrameIndex = -1, this._blendState.clear(), this._boneData = null, this._parent = null, this._cachedFrameIndices = null;
          }, a.prototype._updateGlobalTransformMatrix = function (e) {
            var a = this._boneData,
                i = this.global,
                r = this.globalTransformMatrix,
                n = this.origin,
                s = this.offset,
                o = this.animationPose,
                l = this._parent,
                h = this._armature.flipX,
                u = this._armature.flipY === t.DragonBones.yDown,
                _ = null !== l,
                f = 0;

            if (1 === this.offsetMode ? null !== n ? (i.x = n.x + s.x + o.x, i.scaleX = n.scaleX * s.scaleX * o.scaleX, i.scaleY = n.scaleY * s.scaleY * o.scaleY, t.DragonBones.yDown ? (i.y = n.y + s.y + o.y, i.skew = n.skew + s.skew + o.skew, i.rotation = n.rotation + s.rotation + o.rotation) : (i.y = n.y - s.y + o.y, i.skew = n.skew - s.skew + o.skew, i.rotation = n.rotation - s.rotation + o.rotation)) : (i.copyFrom(s), t.DragonBones.yDown || (i.y = -i.y, i.skew = -i.skew, i.rotation = -i.rotation), i.add(o)) : 0 === this.offsetMode ? null !== n ? i.copyFrom(n).add(o) : i.copyFrom(o) : (_ = !1, i.copyFrom(s), t.DragonBones.yDown || (i.y = -i.y, i.skew = -i.skew, i.rotation = -i.rotation)), _) {
              var c = 0 === l._boneData.type ? l.globalTransformMatrix : l._getGlobalTransformMatrix(i.x, i.y);
              if (a.inheritScale) a.inheritRotation || (l.updateGlobalTransform(), f = h && u ? i.rotation - (l.global.rotation + Math.PI) : h ? i.rotation + l.global.rotation + Math.PI : u ? i.rotation + l.global.rotation : i.rotation - l.global.rotation, i.rotation = f), i.toMatrix(r), r.concat(c), a.inheritTranslation ? (i.x = r.tx, i.y = r.ty) : (r.tx = i.x, r.ty = i.y), e ? i.fromMatrix(r) : this._globalDirty = !0;else {
                if (a.inheritTranslation) {
                  var m = i.x,
                      p = i.y;
                  i.x = c.a * m + c.c * p + c.tx, i.y = c.b * m + c.d * p + c.ty;
                } else h && (i.x = -i.x), u && (i.y = -i.y);

                a.inheritRotation ? (l.updateGlobalTransform(), f = l.global.scaleX < 0 ? i.rotation + l.global.rotation + Math.PI : i.rotation + l.global.rotation, c.a * c.d - c.b * c.c < 0 && (f -= 2 * i.rotation, (h !== u || a.inheritReflection) && (i.skew += Math.PI), t.DragonBones.yDown || (i.skew = -i.skew)), i.rotation = f) : (h || u) && (h && u ? f = i.rotation + Math.PI : (f = h ? Math.PI - i.rotation : -i.rotation, i.skew += Math.PI), i.rotation = f), i.toMatrix(r);
              }
            } else (h || u) && (h && (i.x = -i.x), u && (i.y = -i.y), h && u ? f = i.rotation + Math.PI : (f = h ? Math.PI - i.rotation : -i.rotation, i.skew += Math.PI), i.rotation = f), i.toMatrix(r);
          }, a.prototype.init = function (t, e) {
            null === this._boneData && (this._boneData = t, this._armature = e, null !== this._boneData.parent && (this._parent = this._armature.getBone(this._boneData.parent.name)), this._armature._addBone(this), this.origin = this._boneData.transform);
          }, a.prototype.update = function (t) {
            if (this._blendState.dirty = !1, t >= 0 && null !== this._cachedFrameIndices) {
              var e = this._cachedFrameIndices[t];
              if (e >= 0 && this._cachedFrameIndex === e) this._transformDirty = !1;else if (e >= 0) this._transformDirty = !0, this._cachedFrameIndex = e;else {
                if (this._hasConstraint) for (var a = 0, i = this._armature._constraints; a < i.length; a++) {
                  (s = i[a])._root === this && s.update();
                }
                this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty ? (this._transformDirty = !0, this._cachedFrameIndex = -1) : this._cachedFrameIndex >= 0 ? (this._transformDirty = !1, this._cachedFrameIndices[t] = this._cachedFrameIndex) : (this._transformDirty = !0, this._cachedFrameIndex = -1);
              }
            } else {
              if (this._hasConstraint) for (var r = 0, n = this._armature._constraints; r < n.length; r++) {
                var s;
                (s = n[r])._root === this && s.update();
              }
              (this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty) && (t = -1, this._transformDirty = !0, this._cachedFrameIndex = -1);
            }

            if (this._transformDirty) {
              if (this._transformDirty = !1, this._childrenTransformDirty = !0, this._cachedFrameIndex < 0) {
                var o = t >= 0;
                this._localDirty && this._updateGlobalTransformMatrix(o), o && null !== this._cachedFrameIndices && (this._cachedFrameIndex = this._cachedFrameIndices[t] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global));
              } else this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);
            } else this._childrenTransformDirty && (this._childrenTransformDirty = !1);
            this._localDirty = !0;
          }, a.prototype.updateByConstraint = function () {
            this._localDirty && (this._localDirty = !1, (this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty) && this._updateGlobalTransformMatrix(!0), this._transformDirty = !0);
          }, a.prototype.invalidUpdate = function () {
            this._transformDirty = !0;
          }, a.prototype.contains = function (t) {
            if (t === this) return !1;

            for (var e = t; e !== this && null !== e;) {
              e = e.parent;
            }

            return e === this;
          }, Object.defineProperty(a.prototype, "boneData", {
            get: function get() {
              return this._boneData;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "visible", {
            get: function get() {
              return this._visible;
            },
            set: function set(t) {
              if (this._visible !== t) {
                this._visible = t;

                for (var e = 0, a = this._armature.getSlots(); e < a.length; e++) {
                  var i = a[e];
                  i.parent === this && i._updateVisible();
                }
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "name", {
            get: function get() {
              return this._boneData.name;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "parent", {
            get: function get() {
              return this._parent;
            },
            enumerable: !0,
            configurable: !0
          }), a.prototype.getBones = function () {
            console.warn("Deprecated.");

            for (var t = new Array(), e = 0, a = this._armature.getBones(); e < a.length; e++) {
              var i = a[e];
              i.parent === this && t.push(i);
            }

            return t;
          }, a.prototype.getSlots = function () {
            console.warn("Deprecated.");

            for (var t = new Array(), e = 0, a = this._armature.getSlots(); e < a.length; e++) {
              var i = a[e];
              i.parent === this && t.push(i);
            }

            return t;
          }, Object.defineProperty(a.prototype, "slot", {
            get: function get() {
              console.warn("Deprecated.");

              for (var t = 0, e = this._armature.getSlots(); t < e.length; t++) {
                var a = e[t];
                if (a.parent === this) return a;
              }

              return null;
            },
            enumerable: !0,
            configurable: !0
          }), a;
        }(t.TransformObject);

        t.Bone = e;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._vertices = [], e._deformVertices = [], e._hullCache = [], e._matrixCahce = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.Surface]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this._dX = 0, this._dY = 0, this._k = 0, this._kX = 0, this._kY = 0, this._vertices.length = 0, this._deformVertices.length = 0, this._matrixCahce.length = 0, this._hullCache.length = 0;
          }, e.prototype._getAffineTransform = function (t, e, a, i, r, n, s, o, l, h, u, _, f) {
            var c = s - r,
                m = o - n,
                p = l - r,
                d = h - n;
            u.rotation = Math.atan2(m, c), u.skew = Math.atan2(d, p) - .5 * Math.PI - u.rotation, f && (u.rotation += Math.PI), u.scaleX = Math.sqrt(c * c + m * m) / a, u.scaleY = Math.sqrt(p * p + d * d) / i, u.toMatrix(_), u.x = _.tx = r - (_.a * t + _.c * e), u.y = _.ty = n - (_.b * t + _.d * e);
          }, e.prototype._updateVertices = function () {
            var t = this._boneData.vertices,
                e = this._vertices,
                a = this._deformVertices;
            if (null !== this._parent) {
              if (1 === this._parent._boneData.type) for (var i = 0, r = t.length; i < r; i += 2) {
                var n = t[i] + a[i],
                    s = t[i + 1] + a[i],
                    o = this._parent._getGlobalTransformMatrix(n, s);

                e[i] = o.a * n + o.c * s + o.tx, e[i + 1] = o.b * n + o.d * s + o.ty;
              } else {
                var l = this._parent.globalTransformMatrix;

                for (i = 0, r = t.length; i < r; i += 2) {
                  n = t[i] + a[i], s = t[i + 1] + a[i + 1], e[i] = l.a * n + l.c * s + l.tx, e[i + 1] = l.b * n + l.d * s + l.ty;
                }
              }
            } else for (i = 0, r = t.length; i < r; i += 2) {
              e[i] = t[i] + a[i], e[i + 1] = t[i + 1] + a[i + 1];
            }
          }, e.prototype._updateGlobalTransformMatrix = function () {
            var t = 2 * this._boneData.segmentX,
                e = this._vertices.length - 2,
                a = this._vertices[0],
                i = this._vertices[1],
                r = this._vertices[t],
                n = this._vertices[t + 1],
                s = this._vertices[e],
                o = this._vertices[e + 1],
                l = this._vertices[e - t],
                h = this._vertices[e - t + 1],
                u = a + .5 * (s - a),
                _ = i + .5 * (o - i),
                f = u + .5 * (r + .5 * (l - r) - u),
                c = _ + .5 * (n + .5 * (h - n) - _),
                m = r + .5 * (s - r),
                p = n + .5 * (o - n),
                d = l + .5 * (s - l),
                y = h + .5 * (o - h);

            this._globalDirty = !1, this._getAffineTransform(0, 0, 200, 200, f, c, m, p, d, y, this.global, this.globalTransformMatrix, !1);
          }, e.prototype._getGlobalTransformMatrix = function (t, a) {
            var i = 1e3;
            if (t < -i || i < t || a < -i || i < a) return this.globalTransformMatrix;
            var r = !1,
                n = 200,
                s = this._boneData,
                o = s.segmentX,
                l = s.segmentY,
                h = 2 * s.segmentX,
                u = this._dX,
                _ = this._dY,
                f = Math.floor((t + n) / u),
                c = Math.floor((a + n) / _),
                m = 0,
                p = f * u - n,
                d = c * _ - n,
                y = this._matrixCahce,
                g = e._helpMatrix;

            if (t < -n) {
              if (a < -n || a >= n) return this.globalTransformMatrix;
              if (m = 7 * (2 * (o * (l + 1) + 2 * o + l + c) + ((r = a > this._kX * (t + n) + d) ? 1 : 0)), this._matrixCahce[m] > 0) g.copyFromArray(y, m + 1);else {
                var v = c * (h + 2),
                    D = this._hullCache[4],
                    A = this._hullCache[5],
                    b = this._hullCache[2] - (l - c) * D,
                    T = this._hullCache[3] - (l - c) * A,
                    S = this._vertices;
                r ? this._getAffineTransform(-n, d + _, 800, _, S[v + h + 2], S[v + h + 3], b + D, T + A, S[v], S[v + 1], e._helpTransform, g, !0) : this._getAffineTransform(-i, d, 800, _, b, T, S[v], S[v + 1], b + D, T + A, e._helpTransform, g, !1), y[m] = 1, y[m + 1] = g.a, y[m + 2] = g.b, y[m + 3] = g.c, y[m + 4] = g.d, y[m + 5] = g.tx, y[m + 6] = g.ty;
              }
            } else if (t >= n) {
              if (a < -n || a >= n) return this.globalTransformMatrix;
              m = 7 * (2 * (o * (l + 1) + o + c) + ((r = a > this._kX * (t - i) + d) ? 1 : 0)), this._matrixCahce[m] > 0 ? g.copyFromArray(y, m + 1) : (v = (c + 1) * (h + 2) - 2, D = this._hullCache[4], A = this._hullCache[5], b = this._hullCache[0] + c * D, T = this._hullCache[1] + c * A, S = this._vertices, r ? this._getAffineTransform(i, d + _, 800, _, b + D, T + A, S[v + h + 2], S[v + h + 3], b, T, e._helpTransform, g, !0) : this._getAffineTransform(n, d, 800, _, S[v], S[v + 1], b, T, S[v + h + 2], S[v + h + 3], e._helpTransform, g, !1), y[m] = 1, y[m + 1] = g.a, y[m + 2] = g.b, y[m + 3] = g.c, y[m + 4] = g.d, y[m + 5] = g.tx, y[m + 6] = g.ty);
            } else if (a < -n) {
              if (t < -n || t >= n) return this.globalTransformMatrix;
              m = 7 * (o * (l + 1) + 2 * f + ((r = a > this._kY * (t - p - u) - i) ? 1 : 0)), this._matrixCahce[m] > 0 ? g.copyFromArray(y, m + 1) : (v = 2 * f, D = this._hullCache[10], A = this._hullCache[11], b = this._hullCache[8] + f * D, T = this._hullCache[9] + f * A, S = this._vertices, r ? this._getAffineTransform(p + u, -n, u, 800, S[v + 2], S[v + 3], S[v], S[v + 1], b + D, T + A, e._helpTransform, g, !0) : this._getAffineTransform(p, -i, u, 800, b, T, b + D, T + A, S[v], S[v + 1], e._helpTransform, g, !1), y[m] = 1, y[m + 1] = g.a, y[m + 2] = g.b, y[m + 3] = g.c, y[m + 4] = g.d, y[m + 5] = g.tx, y[m + 6] = g.ty);
            } else if (a >= n) {
              if (t < -n || t >= n) return this.globalTransformMatrix;
              m = 7 * (2 * (o * (l + 1) + o + l + c) + ((r = a > this._kY * (t - p - u) + n) ? 1 : 0)), this._matrixCahce[m] > 0 ? g.copyFromArray(y, m + 1) : (v = l * (h + 2) + 2 * f, D = this._hullCache[10], A = this._hullCache[11], b = this._hullCache[6] - (o - f) * D, T = this._hullCache[7] - (o - f) * A, S = this._vertices, r ? this._getAffineTransform(p + u, i, u, 800, b + D, T + A, b, T, S[v + 2], S[v + 3], e._helpTransform, g, !0) : this._getAffineTransform(p, n, u, 800, S[v], S[v + 1], S[v + 2], S[v + 3], b, T, e._helpTransform, g, !1), y[m] = 1, y[m + 1] = g.a, y[m + 2] = g.b, y[m + 3] = g.c, y[m + 4] = g.d, y[m + 5] = g.tx, y[m + 6] = g.ty);
            } else m = 7 * (2 * (o * c + f) + ((r = a > this._k * (t - p - u) + d) ? 1 : 0)), this._matrixCahce[m] > 0 ? g.copyFromArray(y, m + 1) : (v = 2 * f + c * (h + 2), S = this._vertices, r ? this._getAffineTransform(p + u, d + _, u, _, S[v + h + 4], S[v + h + 5], S[v + h + 2], S[v + h + 3], S[v + 2], S[v + 3], e._helpTransform, g, !0) : this._getAffineTransform(p, d, u, _, S[v], S[v + 1], S[v + 2], S[v + 3], S[v + h + 2], S[v + h + 3], e._helpTransform, g, !1), y[m] = 1, y[m + 1] = g.a, y[m + 2] = g.b, y[m + 3] = g.c, y[m + 4] = g.d, y[m + 5] = g.tx, y[m + 6] = g.ty);

            return g;
          }, e.prototype.init = function (e, a) {
            if (null === this._boneData) {
              t.prototype.init.call(this, e, a);
              var i = e.segmentX,
                  r = e.segmentY,
                  n = e.vertices.length;
              this._dX = 400 / i, this._dY = 400 / r, this._k = -this._dY / this._dX, this._kX = -this._dY / 800, this._kY = -800 / this._dX, this._vertices.length = n, this._deformVertices.length = n, this._matrixCahce.length = 14 * (i * r + 2 * i + 2 * r), this._hullCache.length = 10;

              for (var s = 0; s < n; ++s) {
                this._deformVertices[s] = 0;
              }
            }
          }, e.prototype.update = function (t) {
            if (this._blendState.dirty = !1, t >= 0 && null !== this._cachedFrameIndices) {
              var a = this._cachedFrameIndices[t];
              if (a >= 0 && this._cachedFrameIndex === a) this._transformDirty = !1;else if (a >= 0) this._transformDirty = !0, this._cachedFrameIndex = a;else {
                if (this._hasConstraint) for (var i = 0, r = this._armature._constraints; i < r.length; i++) {
                  (o = r[i])._root === this && o.update();
                }
                this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty ? (this._transformDirty = !0, this._cachedFrameIndex = -1) : this._cachedFrameIndex >= 0 ? (this._transformDirty = !1, this._cachedFrameIndices[t] = this._cachedFrameIndex) : (this._transformDirty = !0, this._cachedFrameIndex = -1);
              }
            } else {
              if (this._hasConstraint) for (var n = 0, s = this._armature._constraints; n < s.length; n++) {
                var o;
                (o = s[n])._root === this && o.update();
              }
              (this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty) && (t = -1, this._transformDirty = !0, this._cachedFrameIndex = -1);
            }

            if (this._transformDirty) {
              this._transformDirty = !1, this._childrenTransformDirty = !0;

              for (var l = 0, h = this._matrixCahce.length; l < h; l += 7) {
                this._matrixCahce[l] = -1;
              }

              if (this._updateVertices(), this._cachedFrameIndex < 0) {
                var u = t >= 0;
                this._localDirty && this._updateGlobalTransformMatrix(u), u && null !== this._cachedFrameIndices && (this._cachedFrameIndex = this._cachedFrameIndices[t] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global));
              } else this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);

              var _ = 2 * this.global.x,
                  f = 2 * this.global.y,
                  c = e._helpPoint;

              this.globalTransformMatrix.transformPoint(1e3, -200, c), this._hullCache[0] = c.x, this._hullCache[1] = c.y, this._hullCache[2] = _ - c.x, this._hullCache[3] = f - c.y, this.globalTransformMatrix.transformPoint(0, this._dY, c, !0), this._hullCache[4] = c.x, this._hullCache[5] = c.y, this.globalTransformMatrix.transformPoint(200, 1e3, c), this._hullCache[6] = c.x, this._hullCache[7] = c.y, this._hullCache[8] = _ - c.x, this._hullCache[9] = f - c.y, this.globalTransformMatrix.transformPoint(this._dX, 0, c, !0), this._hullCache[10] = c.x, this._hullCache[11] = c.y;
            } else this._childrenTransformDirty && (this._childrenTransformDirty = !1);

            this._localDirty = !0;
          }, e;
        }(t.Bone);

        t.Surface = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a._localMatrix = new t.Matrix(), a._colorTransform = new t.ColorTransform(), a._displayDatas = [], a._displayList = [], a._deformVertices = null, a._rawDisplay = null, a._meshDisplay = null, a;
          }

          return X(a, e), a.prototype._onClear = function () {
            e.prototype._onClear.call(this);

            for (var a = [], i = 0, r = this._displayList; i < r.length; i++) {
              null !== (o = r[i]) && o !== this._rawDisplay && o !== this._meshDisplay && a.indexOf(o) < 0 && a.push(o);
            }

            for (var n = 0, s = a; n < s.length; n++) {
              var o;
              (o = s[n]) instanceof t.Armature ? o.dispose() : this._disposeDisplay(o, !0);
            }

            null !== this._deformVertices && this._deformVertices.returnToPool(), null !== this._meshDisplay && this._meshDisplay !== this._rawDisplay && this._disposeDisplay(this._meshDisplay, !1), null !== this._rawDisplay && this._disposeDisplay(this._rawDisplay, !1), this.displayController = null, this._displayDirty = !1, this._zOrderDirty = !1, this._blendModeDirty = !1, this._colorDirty = !1, this._transformDirty = !1, this._visible = !0, this._blendMode = 0, this._displayIndex = -1, this._animationDisplayIndex = -1, this._zOrder = 0, this._cachedFrameIndex = -1, this._pivotX = 0, this._pivotY = 0, this._localMatrix.identity(), this._colorTransform.identity(), this._displayList.length = 0, this._displayDatas.length = 0, this._slotData = null, this._rawDisplayDatas = null, this._displayData = null, this._boundingBoxData = null, this._textureData = null, this._deformVertices = null, this._rawDisplay = null, this._meshDisplay = null, this._display = null, this._childArmature = null, this._parent = null, this._cachedFrameIndices = null;
          }, a.prototype._getDefaultRawDisplayData = function (t) {
            var e = this._armature._armatureData.defaultSkin;

            if (null !== e) {
              var a = e.getDisplays(this._slotData.name);
              if (null !== a) return t < a.length ? a[t] : null;
            }

            return null;
          }, a.prototype._updateDisplayData = function () {
            var e = this._displayData,
                i = null !== this._deformVertices ? this._deformVertices.verticesData : null,
                r = this._textureData,
                n = null,
                s = null;

            if (this._displayData = null, this._boundingBoxData = null, this._textureData = null, this._displayIndex >= 0 && (null !== this._rawDisplayDatas && (n = this._displayIndex < this._rawDisplayDatas.length ? this._rawDisplayDatas[this._displayIndex] : null), null === n && (n = this._getDefaultRawDisplayData(this._displayIndex)), this._displayIndex < this._displayDatas.length && (this._displayData = this._displayDatas[this._displayIndex])), null !== this._displayData && (2 === this._displayData.type || 4 === this._displayData.type ? s = this._displayData.vertices : null !== n && (2 === n.type || 4 === n.type) && (s = n.vertices), 3 === this._displayData.type ? this._boundingBoxData = this._displayData.boundingBox : null !== n && 3 === n.type && (this._boundingBoxData = n.boundingBox), (0 === this._displayData.type || 2 === this._displayData.type) && (this._textureData = this._displayData.texture)), this._displayData !== e || s !== i || this._textureData !== r) {
              if (null === s && null !== this._textureData) {
                var o = this._displayData,
                    l = this._textureData.parent.scale * this._armature._armatureData.scale,
                    h = this._textureData.frame;
                this._pivotX = o.pivot.x, this._pivotY = o.pivot.y;
                var u = null !== h ? h : this._textureData.region,
                    _ = u.width,
                    f = u.height;
                this._textureData.rotated && null === h && (_ = u.height, f = u.width), this._pivotX *= _ * l, this._pivotY *= f * l, null !== h && (this._pivotX += h.x * l, this._pivotY += h.y * l), null !== this._displayData && null !== n && this._displayData !== n && (n.transform.toMatrix(a._helpMatrix), a._helpMatrix.invert(), a._helpMatrix.transformPoint(0, 0, a._helpPoint), this._pivotX -= a._helpPoint.x, this._pivotY -= a._helpPoint.y, this._displayData.transform.toMatrix(a._helpMatrix), a._helpMatrix.invert(), a._helpMatrix.transformPoint(0, 0, a._helpPoint), this._pivotX += a._helpPoint.x, this._pivotY += a._helpPoint.y), t.DragonBones.yDown || (this._pivotY = (this._textureData.rotated ? this._textureData.region.width : this._textureData.region.height) * l - this._pivotY);
              } else this._pivotX = 0, this._pivotY = 0;

              null !== n ? this.origin = n.transform : null !== this._displayData ? this.origin = this._displayData.transform : this.origin = null, s !== i ? (null === this._deformVertices && (this._deformVertices = t.BaseObject.borrowObject(t.DeformVertices)), this._deformVertices.init(s, this._armature)) : null !== this._deformVertices && this._textureData !== r && (this._deformVertices.verticesDirty = !0), this._displayDirty = !0, this._transformDirty = !0;
            }
          }, a.prototype._updateDisplay = function () {
            var e = null !== this._display ? this._display : this._rawDisplay,
                a = this._childArmature;
            this._displayIndex >= 0 && this._displayIndex < this._displayList.length ? (this._display = this._displayList[this._displayIndex], null !== this._display && this._display instanceof t.Armature ? (this._childArmature = this._display, this._display = this._childArmature.display) : this._childArmature = null) : (this._display = null, this._childArmature = null);
            var i = null !== this._display ? this._display : this._rawDisplay;

            if (i !== e && (this._onUpdateDisplay(), this._replaceDisplay(e), this._transformDirty = !0, this._visibleDirty = !0, this._blendModeDirty = !0, this._colorDirty = !0), i !== this._rawDisplay && i !== this._meshDisplay || this._updateFrame(), this._childArmature !== a && (null !== a && (a._parent = null, a.clock = null, a.inheritAnimation && a.animation.reset()), null !== this._childArmature && (this._childArmature._parent = this, this._childArmature.clock = this._armature.clock, this._childArmature.inheritAnimation))) {
              if (0 === this._childArmature.cacheFrameRate) {
                var r = this._armature.cacheFrameRate;
                0 !== r && (this._childArmature.cacheFrameRate = r);
              }

              var n = null;
              if (null !== this._displayData && 1 === this._displayData.type) n = this._displayData.actions;else if (this._displayIndex >= 0 && null !== this._rawDisplayDatas) {
                var s = this._displayIndex < this._rawDisplayDatas.length ? this._rawDisplayDatas[this._displayIndex] : null;
                null === s && (s = this._getDefaultRawDisplayData(this._displayIndex)), null !== s && 1 === s.type && (n = s.actions);
              }
              if (null !== n && n.length > 0) for (var o = 0, l = n; o < l.length; o++) {
                var h = l[o],
                    u = t.BaseObject.borrowObject(t.EventObject);
                t.EventObject.actionDataToInstance(h, u, this._armature), u.slot = this, this._armature._bufferAction(u, !1);
              } else this._childArmature.animation.play();
            }
          }, a.prototype._updateGlobalTransformMatrix = function (t) {
            var e = 0 === this._parent._boneData.type ? this._parent.globalTransformMatrix : this._parent._getGlobalTransformMatrix(this.global.x, this.global.y);
            this.globalTransformMatrix.copyFrom(this._localMatrix), this.globalTransformMatrix.concat(e), t ? this.global.fromMatrix(this.globalTransformMatrix) : this._globalDirty = !0;
          }, a.prototype._setDisplayIndex = function (t, e) {
            if (void 0 === e && (e = !1), e) {
              if (this._animationDisplayIndex === t) return !1;
              this._animationDisplayIndex = t;
            }

            return this._displayIndex !== t && (this._displayIndex = t, this._displayDirty = !0, this._updateDisplayData(), this._displayDirty);
          }, a.prototype._setZorder = function (t) {
            return this._zOrder, this._zOrder = t, this._zOrderDirty = !0, this._zOrderDirty;
          }, a.prototype._setColor = function (t) {
            return this._colorTransform.copyFrom(t), this._colorDirty = !0, this._colorDirty;
          }, a.prototype._setDisplayList = function (e) {
            if (null !== e && e.length > 0) {
              this._displayList.length !== e.length && (this._displayList.length = e.length);

              for (var a = 0, i = e.length; a < i; ++a) {
                var r = e[a];
                null !== r && r !== this._rawDisplay && r !== this._meshDisplay && !(r instanceof t.Armature) && this._displayList.indexOf(r) < 0 && this._initDisplay(r, !0), this._displayList[a] = r;
              }
            } else this._displayList.length > 0 && (this._displayList.length = 0);

            return this._displayIndex >= 0 && this._displayIndex < this._displayList.length ? this._displayDirty = this._display !== this._displayList[this._displayIndex] : this._displayDirty = null !== this._display, this._updateDisplayData(), this._displayDirty;
          }, a.prototype.init = function (t, e, a, i) {
            if (null === this._slotData) {
              this._slotData = t, this._isFromCache = !1, this._visibleDirty = !0, this._blendModeDirty = !0, this._colorDirty = !0, this._blendMode = this._slotData.blendMode, this._zOrder = this._slotData.zOrder, this._colorTransform.copyFrom(this._slotData.color), this._rawDisplay = a, this._meshDisplay = i, this._armature = e;

              var r = this._armature.getBone(this._slotData.parent.name);

              null !== r && (this._parent = r), this._armature._addSlot(this), this._initDisplay(this._rawDisplay, !1), this._rawDisplay !== this._meshDisplay && this._initDisplay(this._meshDisplay, !1), this._onUpdateDisplay(), this._addDisplay();
            }
          }, a.prototype.update = function (t) {
            if (this._isFromCache = !1, this._displayDirty && (this._displayDirty = !1, this._updateDisplay(), this._transformDirty && (null !== this.origin ? this.global.copyFrom(this.origin).add(this.offset).toMatrix(this._localMatrix) : this.global.copyFrom(this.offset).toMatrix(this._localMatrix))), this._zOrderDirty && (this._zOrderDirty = !1, this._updateZOrder()), t >= 0 && null !== this._cachedFrameIndices) {
              var e = this._cachedFrameIndices[t];
              e >= 0 && this._cachedFrameIndex === e ? this._transformDirty = !1 : e >= 0 ? (this._transformDirty = !0, this._cachedFrameIndex = e) : this._transformDirty || this._parent._childrenTransformDirty ? (this._transformDirty = !0, this._cachedFrameIndex = -1) : this._cachedFrameIndex >= 0 ? (this._transformDirty = !1, this._cachedFrameIndices[t] = this._cachedFrameIndex) : (this._transformDirty = !0, this._cachedFrameIndex = -1);
            } else (this._transformDirty || this._parent._childrenTransformDirty) && (t = -1, this._transformDirty = !0, this._cachedFrameIndex = -1);

            if (null !== this._display) {
              if (this._visibleDirty && (this._visibleDirty = !1, this._updateVisible()), this._blendModeDirty && (this._blendModeDirty = !1, this._updateBlendMode()), this._colorDirty && (this._colorDirty = !1, this._updateColor()), null !== this._deformVertices && null !== this._deformVertices.verticesData && this._display === this._meshDisplay) {
                var a = null !== this._deformVertices.verticesData.weight,
                    i = 0 !== this._parent._boneData.type;
                if ((this._deformVertices.verticesDirty || a && this._deformVertices.isBonesUpdate() || i && this._parent._childrenTransformDirty) && (this._deformVertices.verticesDirty = !1, this._updateMesh()), a || i) return;
              }

              if (this._transformDirty) {
                if (this._transformDirty = !1, this._cachedFrameIndex < 0) {
                  var r = t >= 0;
                  this._updateGlobalTransformMatrix(r), r && null !== this._cachedFrameIndices && (this._cachedFrameIndex = this._cachedFrameIndices[t] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global));
                } else this._isFromCache = !0, this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);

                this._updateTransform();
              }
            }
          }, a.prototype.updateTransformAndMatrix = function () {
            this._transformDirty && (this._transformDirty = !1, this._updateGlobalTransformMatrix(!1));
          }, a.prototype.replaceDisplayData = function (t, e) {
            if (void 0 === e && (e = -1), e < 0 && (e = this._displayIndex < 0 ? 0 : this._displayIndex), this._displayDatas.length <= e) {
              this._displayDatas.length = e + 1;

              for (var a = 0, i = this._displayDatas.length; a < i; ++a) {
                this._displayDatas[a] || (this._displayDatas[a] = null);
              }
            }

            this._displayDatas[e] = t;
          }, a.prototype.containsPoint = function (t, e) {
            return null !== this._boundingBoxData && (this.updateTransformAndMatrix(), a._helpMatrix.copyFrom(this.globalTransformMatrix), a._helpMatrix.invert(), a._helpMatrix.transformPoint(t, e, a._helpPoint), this._boundingBoxData.containsPoint(a._helpPoint.x, a._helpPoint.y));
          }, a.prototype.intersectsSegment = function (t, e, i, r, n, s, o) {
            if (void 0 === n && (n = null), void 0 === s && (s = null), void 0 === o && (o = null), null === this._boundingBoxData) return 0;
            this.updateTransformAndMatrix(), a._helpMatrix.copyFrom(this.globalTransformMatrix), a._helpMatrix.invert(), a._helpMatrix.transformPoint(t, e, a._helpPoint), t = a._helpPoint.x, e = a._helpPoint.y, a._helpMatrix.transformPoint(i, r, a._helpPoint), i = a._helpPoint.x, r = a._helpPoint.y;

            var l = this._boundingBoxData.intersectsSegment(t, e, i, r, n, s, o);

            return l > 0 && (1 === l || 2 === l ? null !== n ? (this.globalTransformMatrix.transformPoint(n.x, n.y, n), null !== s && (s.x = n.x, s.y = n.y)) : null !== s && this.globalTransformMatrix.transformPoint(s.x, s.y, s) : (null !== n && this.globalTransformMatrix.transformPoint(n.x, n.y, n), null !== s && this.globalTransformMatrix.transformPoint(s.x, s.y, s)), null !== o && (this.globalTransformMatrix.transformPoint(Math.cos(o.x), Math.sin(o.x), a._helpPoint, !0), o.x = Math.atan2(a._helpPoint.y, a._helpPoint.x), this.globalTransformMatrix.transformPoint(Math.cos(o.y), Math.sin(o.y), a._helpPoint, !0), o.y = Math.atan2(a._helpPoint.y, a._helpPoint.x))), l;
          }, a.prototype.invalidUpdate = function () {
            this._displayDirty = !0, this._transformDirty = !0;
          }, Object.defineProperty(a.prototype, "visible", {
            get: function get() {
              return this._visible;
            },
            set: function set(t) {
              this._visible !== t && (this._visible = t, this._updateVisible());
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "displayIndex", {
            get: function get() {
              return this._displayIndex;
            },
            set: function set(t) {
              this._setDisplayIndex(t) && this.update(-1);
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "name", {
            get: function get() {
              return this._slotData.name;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "displayList", {
            get: function get() {
              return this._displayList.concat();
            },
            set: function set(e) {
              var a = this._displayList.concat(),
                  i = new Array();

              this._setDisplayList(e) && this.update(-1);

              for (var r = 0, n = a; r < n.length; r++) {
                null !== (l = n[r]) && l !== this._rawDisplay && l !== this._meshDisplay && this._displayList.indexOf(l) < 0 && i.indexOf(l) < 0 && i.push(l);
              }

              for (var s = 0, o = i; s < o.length; s++) {
                var l;
                (l = o[s]) instanceof t.Armature || this._disposeDisplay(l, !0);
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "slotData", {
            get: function get() {
              return this._slotData;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "rawDisplayDatas", {
            get: function get() {
              return this._rawDisplayDatas;
            },
            set: function set(t) {
              if (this._rawDisplayDatas !== t) if (this._displayDirty = !0, this._rawDisplayDatas = t, null !== this._rawDisplayDatas) {
                this._displayDatas.length = this._rawDisplayDatas.length;

                for (var e = 0, a = this._displayDatas.length; e < a; ++e) {
                  var i = this._rawDisplayDatas[e];
                  null === i && (i = this._getDefaultRawDisplayData(e)), this._displayDatas[e] = i;
                }
              } else this._displayDatas.length = 0;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "displayData", {
            get: function get() {
              return this._displayData;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "boundingBoxData", {
            get: function get() {
              return this._boundingBoxData;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "rawDisplay", {
            get: function get() {
              return this._rawDisplay;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "meshDisplay", {
            get: function get() {
              return this._meshDisplay;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "display", {
            get: function get() {
              return this._display;
            },
            set: function set(t) {
              if (this._display !== t) {
                var e = this._displayList.length;

                if (this._displayIndex < 0 && 0 === e && (this._displayIndex = 0), !(this._displayIndex < 0)) {
                  var a = this.displayList;
                  e <= this._displayIndex && (a.length = this._displayIndex + 1), a[this._displayIndex] = t, this.displayList = a;
                }
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "childArmature", {
            get: function get() {
              return this._childArmature;
            },
            set: function set(t) {
              this._childArmature !== t && (this.display = t);
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "parent", {
            get: function get() {
              return this._parent;
            },
            enumerable: !0,
            configurable: !0
          }), a.prototype.getDisplay = function () {
            return this._display;
          }, a.prototype.setDisplay = function (t) {
            this.display = t;
          }, a;
        }(t.TransformObject);

        t.Slot = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            return null !== e && e.apply(this, arguments) || this;
          }

          return X(a, e), a.prototype._onClear = function () {
            this._armature = null, this._target = null, this._root = null, this._bone = null;
          }, Object.defineProperty(a.prototype, "name", {
            get: function get() {
              return this._constraintData.name;
            },
            enumerable: !0,
            configurable: !0
          }), a._helpMatrix = new t.Matrix(), a._helpTransform = new t.Transform(), a._helpPoint = new t.Point(), a;
        }(t.BaseObject);

        t.Constraint = e;

        var a = function (e) {
          function a() {
            return null !== e && e.apply(this, arguments) || this;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.IKConstraint]";
          }, a.prototype._onClear = function () {
            e.prototype._onClear.call(this), this._scaleEnabled = !1, this._bendPositive = !1, this._weight = 1, this._constraintData = null;
          }, a.prototype._computeA = function () {
            var e = this._target.global,
                a = this._root.global,
                i = this._root.globalTransformMatrix,
                r = Math.atan2(e.y - a.y, e.x - a.x);
            a.scaleX < 0 && (r += Math.PI), a.rotation += t.Transform.normalizeRadian(r - a.rotation) * this._weight, a.toMatrix(i);
          }, a.prototype._computeB = function () {
            var e = this._bone._boneData.length,
                a = this._root,
                i = this._target.global,
                r = a.global,
                n = this._bone.global,
                s = this._bone.globalTransformMatrix,
                o = s.a * e,
                l = s.b * e,
                h = o * o + l * l,
                u = Math.sqrt(h),
                _ = n.x - r.x,
                f = n.y - r.y,
                c = _ * _ + f * f,
                m = Math.sqrt(c),
                p = n.rotation,
                d = r.rotation,
                y = Math.atan2(f, _),
                g = (_ = i.x - r.x) * _ + (f = i.y - r.y) * f,
                v = Math.sqrt(g),
                D = 0;

            if (u + m <= v || v + u <= m || v + m <= u) D = Math.atan2(i.y - r.y, i.x - r.x), u + m <= v || m < u && (D += Math.PI);else {
              var A = (c - h + g) / (2 * g),
                  b = Math.sqrt(c - A * A * g) / v,
                  T = r.x + _ * A,
                  S = r.y + f * A,
                  P = -f * b,
                  O = _ * b,
                  x = !1,
                  C = a.parent;

              if (null !== C) {
                var M = C.globalTransformMatrix;
                x = M.a * M.d - M.b * M.c < 0;
              }

              x !== this._bendPositive ? (n.x = T - P, n.y = S - O) : (n.x = T + P, n.y = S + O), D = Math.atan2(n.y - r.y, n.x - r.x);
            }
            var B = t.Transform.normalizeRadian(D - y);
            r.rotation = d + B * this._weight, r.toMatrix(a.globalTransformMatrix);
            var E = y + B * this._weight;
            n.x = r.x + Math.cos(E) * m, n.y = r.y + Math.sin(E) * m;
            var I = Math.atan2(i.y - n.y, i.x - n.x);
            n.scaleX < 0 && (I += Math.PI), n.rotation = r.rotation + p - d + t.Transform.normalizeRadian(I - B - p) * this._weight, n.toMatrix(s);
          }, a.prototype.init = function (t, e) {
            if (null === this._constraintData) {
              this._constraintData = t, this._armature = e, this._target = this._armature.getBone(this._constraintData.target.name), this._root = this._armature.getBone(this._constraintData.root.name), this._bone = null !== this._constraintData.bone ? this._armature.getBone(this._constraintData.bone.name) : null;
              var a = this._constraintData;
              this._scaleEnabled = a.scaleEnabled, this._bendPositive = a.bendPositive, this._weight = a.weight, this._root._hasConstraint = !0;
            }
          }, a.prototype.update = function () {
            this._root.updateByConstraint(), null !== this._bone ? (this._bone.updateByConstraint(), this._computeB()) : this._computeA();
          }, a.prototype.invalidUpdate = function () {
            this._root.invalidUpdate(), null !== this._bone && this._bone.invalidUpdate();
          }, a;
        }(e);

        t.IKConstraint = a;

        var i = function (e) {
          function a() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._bones = [], t._spaces = [], t._positions = [], t._curves = [], t._boneLengths = [], t._pathGlobalVertices = [], t._segments = [10], t;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.PathConstraint]";
          }, a.prototype._onClear = function () {
            e.prototype._onClear.call(this), this.dirty = !1, this.pathOffset = 0, this.position = 0, this.spacing = 0, this.rotateOffset = 0, this.rotateMix = 1, this.translateMix = 1, this._pathSlot = null, this._bones.length = 0, this._spaces.length = 0, this._positions.length = 0, this._curves.length = 0, this._boneLengths.length = 0, this._pathGlobalVertices.length = 0;
          }, a.prototype._updatePathVertices = function (t) {
            var e = this._armature,
                a = e.armatureData.parent,
                i = e.armatureData.scale,
                r = a.intArray,
                n = a.floatArray,
                s = t.offset,
                o = r[s + 0],
                l = r[s + 2];
            this._pathGlobalVertices.length = 2 * o;
            var h = t.weight;
            if (null !== h) for (var u = this._pathSlot._deformVertices.bones, _ = h.bones.length, f = h.offset, c = r[f + 1], m = f + 2 + _, p = (S = 0, 0); S < o; S++) {
              for (var d = 0, y = 0, g = 0, v = r[m++]; g < v; g++) {
                var D = u[r[m++]];

                if (null !== D) {
                  D.updateByConstraint(), T = D.globalTransformMatrix;
                  var A = n[c++];
                  O = n[c++] * i, x = n[c++] * i, d += (T.a * O + T.c * x + T.tx) * A, y += (T.b * O + T.d * x + T.ty) * A;
                }
              }

              this._pathGlobalVertices[p++] = d, this._pathGlobalVertices[p++] = y;
            } else {
              var b = this._pathSlot.parent;
              b.updateByConstraint();

              for (var T = b.globalTransformMatrix, S = 0, P = l; S < o; S += 2) {
                var O = n[P++] * i,
                    x = n[P++] * i,
                    C = T.a * O + T.c * x + T.tx,
                    M = T.b * O + T.d * x + T.ty;
                this._pathGlobalVertices[S] = C, this._pathGlobalVertices[S + 1] = M;
              }
            }
          }, a.prototype._computeVertices = function (t, e, a, i) {
            for (var r = a, n = t; r < e; r += 2) {
              i[r] = this._pathGlobalVertices[n++], i[r + 1] = this._pathGlobalVertices[n++];
            }
          }, a.prototype._computeBezierCurve = function (t, e, a, i, r) {
            var n = this._armature.armatureData.parent.intArray[t.vertices.offset + 0],
                s = this._positions,
                o = this._spaces,
                l = t.closed,
                h = Array(),
                u = 2 * n,
                _ = u / 6,
                f = -1,
                c = this.position;

            s.length = 3 * e + 2;
            var m = 0;

            if (t.constantSpeed) {
              l ? (u += 2, h.length = n, this._computeVertices(2, u - 4, 0, h), this._computeVertices(0, 2, u - 4, h), h[u - 2] = h[0], h[u - 1] = h[1]) : (_--, u -= 4, h.length = u, this._computeVertices(2, u, 0, h));
              var p = new Array(_);
              m = 0;

              for (var d, y, g, v, D, A, b, T, S = h[0], P = h[1], O = 0, x = 0, C = 0, M = 0, B = 0, E = 0, I = (Y = 0, 2); Y < _; Y++, I += 6) {
                O = h[I], x = h[I + 1], C = h[I + 2], M = h[I + 3], D = 2 * (d = .1875 * (S - 2 * O + C)) + (g = .09375 * (3 * (O - C) - S + (B = h[I + 4]))), A = 2 * (y = .1875 * (P - 2 * x + M)) + (v = .09375 * (3 * (x - M) - P + (E = h[I + 5]))), b = .75 * (O - S) + d + .16666667 * g, T = .75 * (x - P) + y + .16666667 * v, m += Math.sqrt(b * b + T * T), b += D, T += A, D += g, A += v, m += Math.sqrt(b * b + T * T), b += D, T += A, m += Math.sqrt(b * b + T * T), b += D + g, T += A + v, m += Math.sqrt(b * b + T * T), p[Y] = m, S = B, P = E;
              }

              if (i && (c *= m), r) for (Y = 0; Y < e; Y++) {
                o[Y] *= m;
              }

              for (var w = this._segments, F = 0, R = (Y = 0, X = 0, G = 0, 0); Y < e; Y++, X += 3) {
                var N = c += o[Y];
                if (l) (N %= m) < 0 && (N += m), G = 0;else {
                  if (N < 0) continue;
                  if (N > m) continue;
                }

                for (;; G++) {
                  var k = p[G];

                  if (!(N > k)) {
                    0 === G ? N /= k : N = (N - (U = p[G - 1])) / (k - U);
                    break;
                  }
                }

                if (G !== f) {
                  f = G;
                  var j = 6 * G;

                  for (S = h[j], P = h[j + 1], O = h[j + 2], x = h[j + 3], C = h[j + 4], M = h[j + 5], D = 2 * (d = .03 * (S - 2 * O + C)) + (g = .006 * (3 * (O - C) - S + (B = h[j + 6]))), A = 2 * (y = .03 * (P - 2 * x + M)) + (v = .006 * (3 * (x - M) - P + (E = h[j + 7]))), b = .3 * (O - S) + d + .16666667 * g, T = .3 * (x - P) + y + .16666667 * v, F = Math.sqrt(b * b + T * T), w[0] = F, j = 1; j < 8; j++) {
                    b += D, T += A, D += g, A += v, F += Math.sqrt(b * b + T * T), w[j] = F;
                  }

                  b += D, T += A, F += Math.sqrt(b * b + T * T), w[8] = F, b += D + g, T += A + v, F += Math.sqrt(b * b + T * T), w[9] = F, R = 0;
                }

                for (N *= F;; R++) {
                  var L = w[R];

                  if (!(N > L)) {
                    var U;
                    0 === R ? N /= L : N = R + (N - (U = w[R - 1])) / (L - U);
                    break;
                  }
                }

                this.addCurvePosition(.1 * N, S, P, O, x, C, M, B, E, s, X, a);
              }
            } else {
              var V = t.curveLengths;
              if (m = V[_ -= l ? 1 : 2], i && (c *= m), r) for (var Y = 0; Y < e; Y++) {
                o[Y] *= m;
              }
              h.length = 8;
              Y = 0;

              for (var X = 0, G = 0; Y < e; Y++, X += 3) {
                if (c += o[Y], l) (c %= m) < 0 && (c += m), G = 0;else {
                  if (c < 0) continue;
                  if (c > m) continue;
                }

                for (var H = 0;; G++) {
                  var W = V[G];

                  if (!(c > W)) {
                    if (0 === G) H = c / W;else {
                      var z = V[G - 1];
                      H = (c - z) / (W - z);
                    }
                    break;
                  }
                }

                G !== f && (f = G, l && G === _ ? (this._computeVertices(u - 4, 4, 0, h), this._computeVertices(0, 4, 4, h)) : this._computeVertices(6 * G + 2, 8, 0, h)), this.addCurvePosition(H, h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], s, X, a);
              }
            }
          }, a.prototype.addCurvePosition = function (t, e, a, i, r, n, s, o, l, h, u, _) {
            if (0 === t) return h[u] = e, h[u + 1] = a, void (h[u + 2] = 0);
            if (1 === t) return h[u] = o, h[u + 1] = l, void (h[u + 2] = 0);
            var f = 1 - t,
                c = f * f,
                m = t * t,
                p = c * f,
                d = c * t * 3,
                y = f * m * 3,
                g = t * m,
                v = p * e + d * i + y * n + g * o,
                D = p * a + d * r + y * s + g * l;
            h[u] = v, h[u + 1] = D, h[u + 2] = _ ? Math.atan2(D - (p * a + d * r + y * s), v - (p * e + d * i + y * n)) : 0;
          }, a.prototype.init = function (t, e) {
            this._constraintData = t, this._armature = e;
            var a = t;
            this.pathOffset = a.pathDisplayData.vertices.offset, this.position = a.position, this.spacing = a.spacing, this.rotateOffset = a.rotateOffset, this.rotateMix = a.rotateMix, this.translateMix = a.translateMix, this._root = this._armature.getBone(a.root.name), this._target = this._armature.getBone(a.target.name), this._pathSlot = this._armature.getSlot(a.pathSlot.name);

            for (var i = 0, r = a.bones.length; i < r; i++) {
              var n = this._armature.getBone(a.bones[i].name);

              null !== n && this._bones.push(n);
            }

            2 === a.rotateMode && (this._boneLengths.length = this._bones.length), this._root._hasConstraint = !0;
          }, a.prototype.update = function () {
            var e = this._pathSlot;

            if (null !== e._deformVertices && null !== e._deformVertices.verticesData && e._deformVertices.verticesData.offset === this.pathOffset) {
              var a = this._constraintData,
                  i = e._displayData,
                  r = !1,
                  n = e._deformVertices;

              if (this._root._childrenTransformDirty ? (this._updatePathVertices(i.vertices), r = !0) : null !== n && (n.verticesDirty || n.isBonesUpdate()) && (this._updatePathVertices(i.vertices), n.verticesDirty = !1, r = !0), r || this.dirty) {
                var s = a.positionMode,
                    o = a.spacingMode,
                    l = a.rotateMode,
                    h = this._bones,
                    u = 0 === o,
                    _ = 2 === l,
                    f = 0 === l,
                    c = h.length,
                    m = f ? c : c + 1,
                    p = this.spacing,
                    d = this._spaces;

                if (d.length = m, _ || u) {
                  d[0] = 0;

                  for (var y = 0, g = m - 1; y < g; y++) {
                    (E = h[y]).updateByConstraint();
                    var v = E._boneData.length,
                        D = v * (I = E.globalTransformMatrix).a,
                        A = v * I.b,
                        b = Math.sqrt(D * D + A * A);
                    _ && (this._boneLengths[y] = b), d[y + 1] = (v + p) * b / v;
                  }
                } else for (y = 0; y < m; y++) {
                  d[y] = p;
                }

                this._computeBezierCurve(i, m, f, 1 === s, 2 === o);

                var T,
                    S = this._positions,
                    P = this.rotateOffset,
                    O = S[0],
                    x = S[1];
                0 === P ? T = 1 === l : (T = !1, null !== (E = e.parent) && (P *= (I = E.globalTransformMatrix).a * I.d - I.b * I.c > 0 ? t.Transform.DEG_RAD : -t.Transform.DEG_RAD));

                for (var C = this.rotateMix, M = this.translateMix, B = (y = 0, 3); y < c; y++, B += 3) {
                  var E, I;
                  (E = h[y]).updateByConstraint(), (I = E.globalTransformMatrix).tx += (O - I.tx) * M, I.ty += (x - I.ty) * M;
                  var w = (D = S[B]) - O,
                      F = (A = S[B + 1]) - x;

                  if (_) {
                    var R = this._boneLengths[y],
                        N = (Math.sqrt(w * w + F * F) / R - 1) * C + 1;
                    I.a *= N, I.b *= N;
                  }

                  if (O = D, x = A, C > 0) {
                    var k = I.a,
                        j = I.b,
                        L = I.c,
                        U = I.d,
                        V = void 0,
                        Y = void 0,
                        X = void 0;

                    if (V = f ? S[B - 1] : Math.atan2(F, w), V -= Math.atan2(j, k), T) {
                      Y = Math.cos(V), X = Math.sin(V);
                      var G = E._boneData.length;
                      O += (G * (Y * k - X * j) - w) * C, x += (G * (X * k + Y * j) - F) * C;
                    } else V += P;

                    V > t.Transform.PI ? V -= t.Transform.PI_D : V < -t.Transform.PI && (V += t.Transform.PI_D), V *= C, Y = Math.cos(V), X = Math.sin(V), I.a = Y * k - X * j, I.b = X * k + Y * j, I.c = Y * L - X * U, I.d = X * L + Y * U;
                  }

                  E.global.fromMatrix(I);
                }

                this.dirty = !1;
              }
            }
          }, a.prototype.invalidUpdate = function () {}, a;
        }(e);

        t.PathConstraint = i;
      }(G || (G = {})), function (t) {
        var e = function () {
          function t(t) {
            void 0 === t && (t = 0), this.time = 0, this.timeScale = 1, this._systemTime = 0, this._animatebles = [], this._clock = null, this.time = t, this._systemTime = .001 * new Date().getTime();
          }

          return t.prototype.advanceTime = function (t) {
            t != t && (t = 0);
            var e = .001 * Date.now();

            if (t < 0 && (t = e - this._systemTime), this._systemTime = e, 1 !== this.timeScale && (t *= this.timeScale), 0 !== t) {
              t < 0 ? this.time -= t : this.time += t;

              for (var a = 0, i = 0, r = this._animatebles.length; a < r; ++a) {
                var n = this._animatebles[a];
                null !== n ? (i > 0 && (this._animatebles[a - i] = n, this._animatebles[a] = null), n.advanceTime(t)) : i++;
              }

              if (i > 0) {
                for (r = this._animatebles.length; a < r; ++a) {
                  var s = this._animatebles[a];
                  null !== s ? this._animatebles[a - i] = s : i++;
                }

                this._animatebles.length -= i;
              }
            }
          }, t.prototype.contains = function (t) {
            if (t === this) return !1;

            for (var e = t; e !== this && null !== e;) {
              e = e.clock;
            }

            return e === this;
          }, t.prototype.add = function (t) {
            this._animatebles.indexOf(t) < 0 && (this._animatebles.push(t), t.clock = this);
          }, t.prototype.remove = function (t) {
            var e = this._animatebles.indexOf(t);

            e >= 0 && (this._animatebles[e] = null, t.clock = null);
          }, t.prototype.clear = function () {
            for (var t = 0, e = this._animatebles; t < e.length; t++) {
              var a = e[t];
              null !== a && (a.clock = null);
            }
          }, Object.defineProperty(t.prototype, "clock", {
            get: function get() {
              return this._clock;
            },
            set: function set(t) {
              this._clock !== t && (null !== this._clock && this._clock.remove(this), this._clock = t, null !== this._clock && this._clock.add(this));
            },
            enumerable: !0,
            configurable: !0
          }), t.clock = new t(), t;
        }();

        t.WorldClock = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._animationNames = [], t._animationStates = [], t._animations = {}, t._animationConfig = null, t;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.Animation]";
          }, a.prototype._onClear = function () {
            for (var t = 0, e = this._animationStates; t < e.length; t++) {
              e[t].returnToPool();
            }

            for (var a in this._animations) {
              delete this._animations[a];
            }

            null !== this._animationConfig && this._animationConfig.returnToPool(), this.timeScale = 1, this._lockUpdate = !1, this._animationDirty = !1, this._inheritTimeScale = 1, this._animationNames.length = 0, this._animationStates.length = 0, this._armature = null, this._animationConfig = null, this._lastAnimationState = null;
          }, a.prototype._fadeOut = function (t) {
            switch (t.fadeOutMode) {
              case 1:
                for (var e = 0, a = this._animationStates; e < a.length; e++) {
                  null === (h = a[e])._parent && h.layer === t.layer && h.fadeOut(t.fadeOutTime, t.pauseFadeOut);
                }

                break;

              case 2:
                for (var i = 0, r = this._animationStates; i < r.length; i++) {
                  null === (h = r[i])._parent && h.group === t.group && h.fadeOut(t.fadeOutTime, t.pauseFadeOut);
                }

                break;

              case 3:
                for (var n = 0, s = this._animationStates; n < s.length; n++) {
                  null === (h = s[n])._parent && h.layer === t.layer && h.group === t.group && h.fadeOut(t.fadeOutTime, t.pauseFadeOut);
                }

                break;

              case 4:
                for (var o = 0, l = this._animationStates; o < l.length; o++) {
                  var h;
                  null === (h = l[o])._parent && h.fadeOut(t.fadeOutTime, t.pauseFadeOut);
                }

            }
          }, a.prototype.init = function (e) {
            null === this._armature && (this._armature = e, this._animationConfig = t.BaseObject.borrowObject(t.AnimationConfig));
          }, a.prototype.advanceTime = function (t) {
            t < 0 && (t = -t), this._armature.inheritAnimation && null !== this._armature._parent ? this._inheritTimeScale = this._armature._parent._armature.animation._inheritTimeScale * this.timeScale : this._inheritTimeScale = this.timeScale, 1 !== this._inheritTimeScale && (t *= this._inheritTimeScale);
            var e = this._animationStates.length;
            if (1 === e) {
              if ((m = this._animationStates[0])._fadeState > 0 && m._subFadeState > 0) this._armature._dragonBones.bufferObject(m), this._animationStates.length = 0, this._lastAnimationState = null;else {
                var a = m._animationData,
                    i = a.cacheFrameRate;

                if (this._animationDirty && i > 0) {
                  this._animationDirty = !1;

                  for (var r = 0, n = this._armature.getBones(); r < n.length; r++) {
                    var s = n[r];
                    s._cachedFrameIndices = a.getBoneCachedFrameIndices(s.name);
                  }

                  for (var o = 0, l = this._armature.getSlots(); o < l.length; o++) {
                    var h = l[o],
                        u = h.rawDisplayDatas;

                    if (null !== u && u.length > 0) {
                      var _ = u[0];

                      if (null !== _ && _.parent === this._armature.armatureData.defaultSkin) {
                        h._cachedFrameIndices = a.getSlotCachedFrameIndices(h.name);
                        continue;
                      }
                    }

                    h._cachedFrameIndices = null;
                  }
                }

                m.advanceTime(t, i);
              }
            } else if (e > 1) {
              for (var f = 0, c = 0; f < e; ++f) {
                var m;
                (m = this._animationStates[f])._fadeState > 0 && m._subFadeState > 0 ? (c++, this._armature._dragonBones.bufferObject(m), this._animationDirty = !0, this._lastAnimationState === m && (this._lastAnimationState = null)) : (c > 0 && (this._animationStates[f - c] = m), m.advanceTime(t, 0)), f === e - 1 && c > 0 && (this._animationStates.length -= c, null === this._lastAnimationState && this._animationStates.length > 0 && (this._lastAnimationState = this._animationStates[this._animationStates.length - 1]));
              }

              this._armature._cacheFrameIndex = -1;
            } else this._armature._cacheFrameIndex = -1;
          }, a.prototype.reset = function () {
            for (var t = 0, e = this._animationStates; t < e.length; t++) {
              e[t].returnToPool();
            }

            this._animationDirty = !1, this._animationConfig.clear(), this._animationStates.length = 0, this._lastAnimationState = null;
          }, a.prototype.stop = function (t) {
            if (void 0 === t && (t = null), null !== t) null !== (i = this.getState(t)) && i.stop();else for (var e = 0, a = this._animationStates; e < a.length; e++) {
              var i;
              (i = a[e]).stop();
            }
          }, a.prototype.playConfig = function (e) {
            var a = e.animation;
            if (!(a in this._animations)) return console.warn("Non-existent animation.\n", "DragonBones name: " + this._armature.armatureData.parent.name, "Armature name: " + this._armature.name, "Animation name: " + a), null;
            var i = this._animations[a];
            if (5 === e.fadeOutMode) for (var r = 0, n = this._animationStates; r < n.length; r++) {
              var s = n[r];
              if (s._animationData === i) return s;
            }
            0 === this._animationStates.length ? e.fadeInTime = 0 : e.fadeInTime < 0 && (e.fadeInTime = i.fadeInTime), e.fadeOutTime < 0 && (e.fadeOutTime = e.fadeInTime), e.timeScale <= -100 && (e.timeScale = 1 / i.scale), i.frameCount > 1 ? (e.position < 0 ? (e.position %= i.duration, e.position = i.duration - e.position) : e.position === i.duration ? e.position -= 1e-6 : e.position > i.duration && (e.position %= i.duration), e.duration > 0 && e.position + e.duration > i.duration && (e.duration = i.duration - e.position), e.playTimes < 0 && (e.playTimes = i.playTimes)) : (e.playTimes = 1, e.position = 0, e.duration > 0 && (e.duration = 0)), 0 === e.duration && (e.duration = -1), this._fadeOut(e);
            var o = t.BaseObject.borrowObject(t.AnimationState);

            if (o.init(this._armature, i, e), this._animationDirty = !0, this._armature._cacheFrameIndex = -1, this._animationStates.length > 0) {
              for (var l = !1, h = 0, u = this._animationStates.length; h < u; ++h) {
                if (o.layer > this._animationStates[h].layer) {
                  l = !0, this._animationStates.splice(h, 0, o);
                  break;
                }

                if (h !== u - 1 && o.layer > this._animationStates[h + 1].layer) {
                  l = !0, this._animationStates.splice(h + 1, 0, o);
                  break;
                }
              }

              l || this._animationStates.push(o);
            } else this._animationStates.push(o);

            for (var _ = 0, f = this._armature.getSlots(); _ < f.length; _++) {
              var c = f[_].childArmature;
              null !== c && c.inheritAnimation && c.animation.hasAnimation(a) && null === c.animation.getState(a) && c.animation.fadeIn(a);
            }

            var m = !1;

            for (var p in i.animationTimelines) {
              this._lockUpdate || (m = !0, this._lockUpdate = !0);
              var d = this.fadeIn(p, e.fadeInTime, 1, o.layer, null, 0);
              null !== d && (d.resetToPose = !1, d._parent = o, d.stop());
            }

            return m && (this._lockUpdate = !1), this._lockUpdate || (e.fadeInTime <= 0 && this._armature.advanceTime(0), this._lastAnimationState = o), o;
          }, a.prototype.play = function (t, e) {
            if (void 0 === t && (t = null), void 0 === e && (e = -1), this._animationConfig.clear(), this._animationConfig.resetToPose = !0, this._animationConfig.playTimes = e, this._animationConfig.fadeInTime = 0, this._animationConfig.animation = null !== t ? t : "", null !== t && t.length > 0) this.playConfig(this._animationConfig);else if (null === this._lastAnimationState) {
              var a = this._armature.armatureData.defaultAnimation;
              null !== a && (this._animationConfig.animation = a.name, this.playConfig(this._animationConfig));
            } else this._lastAnimationState.isPlaying || this._lastAnimationState.isCompleted ? (this._animationConfig.animation = this._lastAnimationState.name, this.playConfig(this._animationConfig)) : this._lastAnimationState.play();
            return this._lastAnimationState;
          }, a.prototype.fadeIn = function (t, e, a, i, r, n) {
            return void 0 === e && (e = -1), void 0 === a && (a = -1), void 0 === i && (i = 0), void 0 === r && (r = null), void 0 === n && (n = 3), this._animationConfig.clear(), this._animationConfig.fadeOutMode = n, this._animationConfig.playTimes = a, this._animationConfig.layer = i, this._animationConfig.fadeInTime = e, this._animationConfig.animation = t, this._animationConfig.group = null !== r ? r : "", this.playConfig(this._animationConfig);
          }, a.prototype.gotoAndPlayByTime = function (t, e, a) {
            return void 0 === e && (e = 0), void 0 === a && (a = -1), this._animationConfig.clear(), this._animationConfig.resetToPose = !0, this._animationConfig.playTimes = a, this._animationConfig.position = e, this._animationConfig.fadeInTime = 0, this._animationConfig.animation = t, this.playConfig(this._animationConfig);
          }, a.prototype.gotoAndPlayByFrame = function (t, e, a) {
            void 0 === e && (e = 0), void 0 === a && (a = -1), this._animationConfig.clear(), this._animationConfig.resetToPose = !0, this._animationConfig.playTimes = a, this._animationConfig.fadeInTime = 0, this._animationConfig.animation = t;
            var i = t in this._animations ? this._animations[t] : null;
            return null !== i && (this._animationConfig.position = i.duration * e / i.frameCount), this.playConfig(this._animationConfig);
          }, a.prototype.gotoAndPlayByProgress = function (t, e, a) {
            void 0 === e && (e = 0), void 0 === a && (a = -1), this._animationConfig.clear(), this._animationConfig.resetToPose = !0, this._animationConfig.playTimes = a, this._animationConfig.fadeInTime = 0, this._animationConfig.animation = t;
            var i = t in this._animations ? this._animations[t] : null;
            return null !== i && (this._animationConfig.position = i.duration * (e > 0 ? e : 0)), this.playConfig(this._animationConfig);
          }, a.prototype.gotoAndStopByTime = function (t, e) {
            void 0 === e && (e = 0);
            var a = this.gotoAndPlayByTime(t, e, 1);
            return null !== a && a.stop(), a;
          }, a.prototype.gotoAndStopByFrame = function (t, e) {
            void 0 === e && (e = 0);
            var a = this.gotoAndPlayByFrame(t, e, 1);
            return null !== a && a.stop(), a;
          }, a.prototype.gotoAndStopByProgress = function (t, e) {
            void 0 === e && (e = 0);
            var a = this.gotoAndPlayByProgress(t, e, 1);
            return null !== a && a.stop(), a;
          }, a.prototype.getState = function (t) {
            for (var e = this._animationStates.length; e--;) {
              var a = this._animationStates[e];
              if (a.name === t) return a;
            }

            return null;
          }, a.prototype.hasAnimation = function (t) {
            return t in this._animations;
          }, a.prototype.getStates = function () {
            return this._animationStates;
          }, Object.defineProperty(a.prototype, "isPlaying", {
            get: function get() {
              for (var t = 0, e = this._animationStates; t < e.length; t++) {
                if (e[t].isPlaying) return !0;
              }

              return !1;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "isCompleted", {
            get: function get() {
              for (var t = 0, e = this._animationStates; t < e.length; t++) {
                if (!e[t].isCompleted) return !1;
              }

              return this._animationStates.length > 0;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "lastAnimationName", {
            get: function get() {
              return null !== this._lastAnimationState ? this._lastAnimationState.name : "";
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "animationNames", {
            get: function get() {
              return this._animationNames;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "animations", {
            get: function get() {
              return this._animations;
            },
            set: function set(t) {
              if (this._animations !== t) {
                for (var e in this._animationNames.length = 0, this._animations) {
                  delete this._animations[e];
                }

                for (var e in t) {
                  this._animationNames.push(e), this._animations[e] = t[e];
                }
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "animationConfig", {
            get: function get() {
              return this._animationConfig.clear(), this._animationConfig;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "lastAnimationState", {
            get: function get() {
              return this._lastAnimationState;
            },
            enumerable: !0,
            configurable: !0
          }), a.prototype.gotoAndPlay = function (t, e, a, i, r, n, s) {
            void 0 === e && (e = -1), void 0 === a && (a = -1), void 0 === i && (i = -1), void 0 === r && (r = 0), void 0 === n && (n = null), void 0 === s && (s = 3), console.warn("Deprecated."), this._animationConfig.clear(), this._animationConfig.resetToPose = !0, this._animationConfig.fadeOutMode = s, this._animationConfig.playTimes = i, this._animationConfig.layer = r, this._animationConfig.fadeInTime = e, this._animationConfig.animation = t, this._animationConfig.group = null !== n ? n : "";
            var o = this._animations[t];
            return o && a > 0 && (this._animationConfig.timeScale = o.duration / a), this.playConfig(this._animationConfig);
          }, a.prototype.gotoAndStop = function (t, e) {
            return void 0 === e && (e = 0), console.warn("Deprecated."), this.gotoAndStopByTime(t, e);
          }, Object.defineProperty(a.prototype, "animationList", {
            get: function get() {
              return console.warn("Deprecated."), this._animationNames;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(a.prototype, "animationDataList", {
            get: function get() {
              console.warn("Deprecated.");

              for (var t = [], e = 0, a = this._animationNames.length; e < a; ++e) {
                t.push(this._animations[this._animationNames[e]]);
              }

              return t;
            },
            enumerable: !0,
            configurable: !0
          }), a;
        }(t.BaseObject);

        t.Animation = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function r() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._blendState = new i(), t._boneMask = [], t._boneTimelines = [], t._surfaceTimelines = [], t._slotTimelines = [], t._constraintTimelines = [], t._animationTimelines = [], t._poseTimelines = [], t._bonePoses = {}, t._actionTimeline = null, t._zOrderTimeline = null, t._parent = null, t;
          }

          return X(r, e), r.toString = function () {
            return "[class dragonBones.AnimationState]";
          }, r.prototype._onClear = function () {
            for (var t = 0, e = this._boneTimelines; t < e.length; t++) {
              e[t].returnToPool();
            }

            for (var a = 0, i = this._surfaceTimelines; a < i.length; a++) {
              i[a].returnToPool();
            }

            for (var r = 0, n = this._slotTimelines; r < n.length; r++) {
              n[r].returnToPool();
            }

            for (var s = 0, o = this._constraintTimelines; s < o.length; s++) {
              o[s].returnToPool();
            }

            for (var l = 0, h = this._animationTimelines; l < h.length; l++) {
              h[l].returnToPool();
            }

            for (var u in this._bonePoses) {
              this._bonePoses[u].returnToPool(), delete this._bonePoses[u];
            }

            null !== this._actionTimeline && this._actionTimeline.returnToPool(), null !== this._zOrderTimeline && this._zOrderTimeline.returnToPool(), this.actionEnabled = !1, this.additiveBlending = !1, this.displayControl = !1, this.resetToPose = !1, this.playTimes = 1, this.layer = 0, this.timeScale = 1, this.weight = 1, this.autoFadeOutTime = 0, this.fadeTotalTime = 0, this.name = "", this.group = "", this._timelineDirty = 2, this._playheadState = 0, this._fadeState = -1, this._subFadeState = -1, this._position = 0, this._duration = 0, this._fadeTime = 0, this._time = 0, this._fadeProgress = 0, this._weightResult = 0, this._blendState.clear(), this._boneMask.length = 0, this._boneTimelines.length = 0, this._surfaceTimelines.length = 0, this._slotTimelines.length = 0, this._constraintTimelines.length = 0, this._animationTimelines.length = 0, this._poseTimelines.length = 0, this._animationData = null, this._armature = null, this._actionTimeline = null, this._zOrderTimeline = null, this._parent = null;
          }, r.prototype._updateTimelines = function () {
            for (var e = 0, a = this._armature._constraints; e < a.length; e++) {
              var i = a[e];
              if (null !== (l = this._animationData.getConstraintTimelines(i.name))) for (var r = 0, n = l; r < n.length; r++) {
                switch ((f = n[r]).type) {
                  case 30:
                    (c = t.BaseObject.borrowObject(t.IKConstraintTimelineState)).constraint = i, c.init(this._armature, this, f), this._constraintTimelines.push(c);
                }
              } else this.resetToPose && ((c = t.BaseObject.borrowObject(t.IKConstraintTimelineState)).constraint = i, c.init(this._armature, this, null), this._constraintTimelines.push(c), this._poseTimelines.push(c));
            }

            for (var s = 0, o = this._armature.animation.getStates(); s < o.length; s++) {
              var l,
                  h = o[s];
              if (h._parent === this && null !== (l = this._animationData.getAnimationTimelines(h.name))) for (var u = 0, _ = l; u < _.length; u++) {
                var f;

                switch ((f = _[u]).type) {
                  case 40:
                    var c;
                    (c = t.BaseObject.borrowObject(t.AnimationTimelineState)).animationState = h, c.init(this._armature, this, f), this._animationTimelines.push(c);
                }
              }
            }
          }, r.prototype._updateBoneAndSlotTimelines = function () {
            for (var e = {}, i = 0, r = this._boneTimelines; i < r.length; i++) {
              (l = (g = r[i]).bone.name) in e || (e[l] = []), e[l].push(g);
            }

            for (var n = 0, s = this._armature.getBones(); n < s.length; n++) {
              var o = s[n],
                  l = o.name;
              if (this.containsBoneMask(l)) if (l in e) delete e[l];else if (0 === o._boneData.type) {
                var h = this._animationData.getBoneTimelines(l),
                    u = l in this._bonePoses ? this._bonePoses[l] : this._bonePoses[l] = t.BaseObject.borrowObject(a);

                if (null !== h) for (var _ = 0, f = h; _ < f.length; _++) {
                  switch ((E = f[_]).type) {
                    case 10:
                      (g = t.BaseObject.borrowObject(t.BoneAllTimelineState)).bone = o, g.bonePose = u, g.init(this._armature, this, E), this._boneTimelines.push(g);
                      break;

                    case 11:
                      (g = t.BaseObject.borrowObject(t.BoneTranslateTimelineState)).bone = o, g.bonePose = u, g.init(this._armature, this, E), this._boneTimelines.push(g);
                      break;

                    case 12:
                      (g = t.BaseObject.borrowObject(t.BoneRotateTimelineState)).bone = o, g.bonePose = u, g.init(this._armature, this, E), this._boneTimelines.push(g);
                      break;

                    case 13:
                      (g = t.BaseObject.borrowObject(t.BoneScaleTimelineState)).bone = o, g.bonePose = u, g.init(this._armature, this, E), this._boneTimelines.push(g);
                  }
                } else this.resetToPose && ((g = t.BaseObject.borrowObject(t.BoneAllTimelineState)).bone = o, g.bonePose = u, g.init(this._armature, this, null), this._boneTimelines.push(g), this._poseTimelines.push(g));
              } else if (1 === o._boneData.type) if (null !== (h = this._animationData.getSurfaceTimelines(l))) for (var c = 0, m = h; c < m.length; c++) {
                switch ((E = m[c]).type) {
                  case 50:
                    (g = t.BaseObject.borrowObject(t.SurfaceTimelineState)).surface = o, g.init(this._armature, this, E), this._surfaceTimelines.push(g);
                }
              } else this.resetToPose && ((g = t.BaseObject.borrowObject(t.SurfaceTimelineState)).surface = o, g.init(this._armature, this, null), this._surfaceTimelines.push(g), this._poseTimelines.push(g));
            }

            for (var p in e) {
              for (var d = 0, y = e[p]; d < y.length; d++) {
                var g = y[d];
                this._boneTimelines.splice(this._boneTimelines.indexOf(g), 1), g.returnToPool();
              }
            }

            for (var v = {}, D = [], A = 0, b = this._slotTimelines; A < b.length; A++) {
              (l = (g = b[A]).slot.name) in v || (v[l] = []), v[l].push(g);
            }

            for (var T = 0, S = this._armature.getSlots(); T < S.length; T++) {
              var P = S[T],
                  O = P.parent.name;
              if (this.containsBoneMask(O)) if (l = P.name, h = this._animationData.getSlotTimelines(l), l in v) delete v[l];else {
                var x = !1,
                    C = !1;
                if (D.length = 0, null !== h) for (var M = 0, B = h; M < B.length; M++) {
                  var E;

                  switch ((E = B[M]).type) {
                    case 20:
                      (g = t.BaseObject.borrowObject(t.SlotDislayTimelineState)).slot = P, g.init(this._armature, this, E), this._slotTimelines.push(g), x = !0;
                      break;

                    case 21:
                      (g = t.BaseObject.borrowObject(t.SlotColorTimelineState)).slot = P, g.init(this._armature, this, E), this._slotTimelines.push(g), C = !0;
                      break;

                    case 22:
                      (g = t.BaseObject.borrowObject(t.DeformTimelineState)).slot = P, g.init(this._armature, this, E), this._slotTimelines.push(g), D.push(g.vertexOffset);
                  }
                }
                if (this.resetToPose && (x || ((g = t.BaseObject.borrowObject(t.SlotDislayTimelineState)).slot = P, g.init(this._armature, this, null), this._slotTimelines.push(g), this._poseTimelines.push(g)), C || ((g = t.BaseObject.borrowObject(t.SlotColorTimelineState)).slot = P, g.init(this._armature, this, null), this._slotTimelines.push(g), this._poseTimelines.push(g)), null !== P.rawDisplayDatas)) for (var I = 0, w = P.rawDisplayDatas; I < w.length; I++) {
                  var F = w[I];

                  if (null !== F && 2 === F.type) {
                    var R = F.vertices.offset;
                    D.indexOf(R) < 0 && ((g = t.BaseObject.borrowObject(t.DeformTimelineState)).vertexOffset = R, g.slot = P, g.init(this._armature, this, null), this._slotTimelines.push(g), this._poseTimelines.push(g));
                  }
                }
              }
            }

            for (var p in v) {
              for (var N = 0, k = v[p]; N < k.length; N++) {
                g = k[N], this._slotTimelines.splice(this._slotTimelines.indexOf(g), 1), g.returnToPool();
              }
            }
          }, r.prototype._advanceFadeTime = function (e) {
            var a,
                i = this._fadeState > 0;

            if (this._subFadeState < 0) {
              this._subFadeState = 0;
              var r = i ? t.EventObject.FADE_OUT : t.EventObject.FADE_IN;
              this._armature.eventDispatcher.hasDBEventListener(r) && ((a = t.BaseObject.borrowObject(t.EventObject)).type = r, a.armature = this._armature, a.animationState = this, this._armature._dragonBones.bufferEvent(a));
            }

            (e < 0 && (e = -e), this._fadeTime += e, this._fadeTime >= this.fadeTotalTime ? (this._subFadeState = 1, this._fadeProgress = i ? 0 : 1) : this._fadeTime > 0 ? this._fadeProgress = i ? 1 - this._fadeTime / this.fadeTotalTime : this._fadeTime / this.fadeTotalTime : this._fadeProgress = i ? 1 : 0, this._subFadeState > 0) && (i || (this._playheadState |= 1, this._fadeState = 0), r = i ? t.EventObject.FADE_OUT_COMPLETE : t.EventObject.FADE_IN_COMPLETE, this._armature.eventDispatcher.hasDBEventListener(r) && ((a = t.BaseObject.borrowObject(t.EventObject)).type = r, a.armature = this._armature, a.animationState = this, this._armature._dragonBones.bufferEvent(a)));
          }, r.prototype.init = function (e, a, i) {
            if (null === this._armature) {
              if (this._armature = e, this._animationData = a, this.resetToPose = i.resetToPose, this.additiveBlending = i.additiveBlending, this.displayControl = i.displayControl, this.actionEnabled = i.actionEnabled, this.layer = i.layer, this.playTimes = i.playTimes, this.timeScale = i.timeScale, this.fadeTotalTime = i.fadeInTime, this.autoFadeOutTime = i.autoFadeOutTime, this.weight = i.weight, this.name = i.name.length > 0 ? i.name : i.animation, this.group = i.group, i.pauseFadeIn ? this._playheadState = 2 : this._playheadState = 3, i.duration < 0 ? (this._position = 0, this._duration = this._animationData.duration, 0 !== i.position ? this.timeScale >= 0 ? this._time = i.position : this._time = i.position - this._duration : this._time = 0) : (this._position = i.position, this._duration = i.duration, this._time = 0), this.timeScale < 0 && 0 === this._time && (this._time = -1e-6), this.fadeTotalTime <= 0 && (this._fadeProgress = .999999), i.boneMask.length > 0) {
                this._boneMask.length = i.boneMask.length;

                for (var r = 0, n = this._boneMask.length; r < n; ++r) {
                  this._boneMask[r] = i.boneMask[r];
                }
              }

              this._actionTimeline = t.BaseObject.borrowObject(t.ActionTimelineState), this._actionTimeline.init(this._armature, this, this._animationData.actionTimeline), this._actionTimeline.currentTime = this._time, this._actionTimeline.currentTime < 0 && (this._actionTimeline.currentTime = this._duration - this._actionTimeline.currentTime), null !== this._animationData.zOrderTimeline && (this._zOrderTimeline = t.BaseObject.borrowObject(t.ZOrderTimelineState), this._zOrderTimeline.init(this._armature, this, this._animationData.zOrderTimeline));
            }
          }, r.prototype.advanceTime = function (e, a) {
            if (this._blendState.dirty = !1, 0 === this._fadeState && 0 === this._subFadeState || this._advanceFadeTime(e), 3 === this._playheadState && (1 !== this.timeScale && (e *= this.timeScale), this._time += e), 0 !== this._timelineDirty && (2 === this._timelineDirty && this._updateTimelines(), this._timelineDirty = 0, this._updateBoneAndSlotTimelines()), 0 !== this.weight) {
              var i = 0 === this._fadeState && a > 0,
                  r = !0,
                  n = !0,
                  s = this._time;

              if (this._weightResult = this.weight * this._fadeProgress, null !== this._parent && (this._weightResult *= this._parent._weightResult / this._parent._fadeProgress), this._actionTimeline.playState <= 0 && this._actionTimeline.update(s), i) {
                var o = 2 * a;
                this._actionTimeline.currentTime = Math.floor(this._actionTimeline.currentTime * o) / o;
              }

              if (null !== this._zOrderTimeline && this._zOrderTimeline.playState <= 0 && this._zOrderTimeline.update(s), i) {
                var l = Math.floor(this._actionTimeline.currentTime * a);
                this._armature._cacheFrameIndex === l ? (r = !1, n = !1) : (this._armature._cacheFrameIndex = l, this._animationData.cachedFrames[l] ? n = !1 : this._animationData.cachedFrames[l] = !0);
              }

              if (r) {
                if (n) for (var h = 0, u = this._boneTimelines.length; h < u; ++h) {
                  (p = this._boneTimelines[h]).playState <= 0 && p.update(s), (h === u - 1 || p.bone !== this._boneTimelines[h + 1].bone) && 0 !== (_ = p.bone._blendState.update(this._weightResult, this.layer)) && p.blend(_);
                }

                for (h = 0, u = this._surfaceTimelines.length; h < u; ++h) {
                  var _ = (p = this._surfaceTimelines[h]).surface._blendState.update(this._weightResult, this.layer);

                  p.playState <= 0 && p.update(s), 0 !== _ && p.blend(_);
                }

                if (this.displayControl) for (h = 0, u = this._slotTimelines.length; h < u; ++h) {
                  var f = (p = this._slotTimelines[h]).slot.displayController;
                  null !== f && f !== this.name && f !== this.group || p.playState <= 0 && p.update(s);
                }

                for (h = 0, u = this._constraintTimelines.length; h < u; ++h) {
                  (p = this._constraintTimelines[h]).playState <= 0 && p.update(s);
                }

                for (h = 0, u = this._animationTimelines.length; h < u; ++h) {
                  _ = (p = this._animationTimelines[h]).animationState._blendState.update(this._weightResult, this.layer), p.playState <= 0 && p.update(s), 0 !== _ && p.blend(_);
                }
              }

              if (0 === this._fadeState) {
                if (this._subFadeState > 0 && (this._subFadeState = 0, this._poseTimelines.length > 0)) {
                  for (var c = 0, m = this._poseTimelines; c < m.length; c++) {
                    var p;
                    (p = m[c]) instanceof t.BoneTimelineState ? this._boneTimelines.splice(this._boneTimelines.indexOf(p), 1) : p instanceof t.SurfaceTimelineState ? this._surfaceTimelines.splice(this._surfaceTimelines.indexOf(p), 1) : p instanceof t.SlotTimelineState ? this._slotTimelines.splice(this._slotTimelines.indexOf(p), 1) : p instanceof t.ConstraintTimelineState && this._constraintTimelines.splice(this._constraintTimelines.indexOf(p), 1), p.returnToPool();
                  }

                  this._poseTimelines.length = 0;
                }

                this._actionTimeline.playState > 0 && this.autoFadeOutTime >= 0 && this.fadeOut(this.autoFadeOutTime);
              }
            }
          }, r.prototype.play = function () {
            this._playheadState = 3;
          }, r.prototype.stop = function () {
            this._playheadState &= 1;
          }, r.prototype.fadeOut = function (t, e) {
            if (void 0 === e && (e = !0), t < 0 && (t = 0), e && (this._playheadState &= 2), this._fadeState > 0) {
              if (t > this.fadeTotalTime - this._fadeTime) return;
            } else {
              this._fadeState = 1, this._subFadeState = -1, (t <= 0 || this._fadeProgress <= 0) && (this._fadeProgress = 1e-6);

              for (var a = 0, i = this._boneTimelines; a < i.length; a++) {
                (f = i[a]).fadeOut();
              }

              for (var r = 0, n = this._surfaceTimelines; r < n.length; r++) {
                (f = n[r]).fadeOut();
              }

              for (var s = 0, o = this._slotTimelines; s < o.length; s++) {
                (f = o[s]).fadeOut();
              }

              for (var l = 0, h = this._constraintTimelines; l < h.length; l++) {
                (f = h[l]).fadeOut();
              }

              for (var u = 0, _ = this._animationTimelines; u < _.length; u++) {
                var f;
                (f = _[u]).animationState.fadeOut(t, e), f.fadeOut();
              }
            }

            this.displayControl = !1, this.fadeTotalTime = this._fadeProgress > 1e-6 ? t / this._fadeProgress : 0, this._fadeTime = this.fadeTotalTime * (1 - this._fadeProgress);
          }, r.prototype.containsBoneMask = function (t) {
            return 0 === this._boneMask.length || this._boneMask.indexOf(t) >= 0;
          }, r.prototype.addBoneMask = function (t, e) {
            void 0 === e && (e = !0);

            var a = this._armature.getBone(t);

            if (null !== a) {
              if (this._boneMask.indexOf(t) < 0 && this._boneMask.push(t), e) for (var i = 0, r = this._armature.getBones(); i < r.length; i++) {
                var n = r[i];
                this._boneMask.indexOf(n.name) < 0 && a.contains(n) && this._boneMask.push(n.name);
              }
              this._timelineDirty = 1;
            }
          }, r.prototype.removeBoneMask = function (t, e) {
            void 0 === e && (e = !0);

            var a = this._boneMask.indexOf(t);

            if (a >= 0 && this._boneMask.splice(a, 1), e) {
              var i = this._armature.getBone(t);

              if (null !== i) {
                var r = this._armature.getBones();

                if (this._boneMask.length > 0) for (var n = 0, s = r; n < s.length; n++) {
                  var o = s[n],
                      l = this._boneMask.indexOf(o.name);

                  l >= 0 && i.contains(o) && this._boneMask.splice(l, 1);
                } else for (var h = 0, u = r; h < u.length; h++) {
                  (o = u[h]) !== i && (i.contains(o) || this._boneMask.push(o.name));
                }
              }
            }

            this._timelineDirty = 1;
          }, r.prototype.removeAllBoneMask = function () {
            this._boneMask.length = 0, this._timelineDirty = 1;
          }, Object.defineProperty(r.prototype, "isFadeIn", {
            get: function get() {
              return this._fadeState < 0;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "isFadeOut", {
            get: function get() {
              return this._fadeState > 0;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "isFadeComplete", {
            get: function get() {
              return 0 === this._fadeState;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "isPlaying", {
            get: function get() {
              return 0 != (2 & this._playheadState) && this._actionTimeline.playState <= 0;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "isCompleted", {
            get: function get() {
              return this._actionTimeline.playState > 0;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "currentPlayTimes", {
            get: function get() {
              return this._actionTimeline.currentPlayTimes;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "totalTime", {
            get: function get() {
              return this._duration;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "currentTime", {
            get: function get() {
              return this._actionTimeline.currentTime;
            },
            set: function set(t) {
              var e = this._actionTimeline.currentPlayTimes - (this._actionTimeline.playState > 0 ? 1 : 0);

              if ((t < 0 || this._duration < t) && (t = t % this._duration + e * this._duration) < 0 && (t += this._duration), this.playTimes > 0 && e === this.playTimes - 1 && t === this._duration && (t = this._duration - 1e-6), this._time !== t) {
                this._time = t, this._actionTimeline.setCurrentTime(this._time), null !== this._zOrderTimeline && (this._zOrderTimeline.playState = -1);

                for (var a = 0, i = this._boneTimelines; a < i.length; a++) {
                  i[a].playState = -1;
                }

                for (var r = 0, n = this._slotTimelines; r < n.length; r++) {
                  n[r].playState = -1;
                }
              }
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(r.prototype, "animationData", {
            get: function get() {
              return this._animationData;
            },
            enumerable: !0,
            configurable: !0
          }), r;
        }(t.BaseObject);

        t.AnimationState = e;

        var a = function (e) {
          function a() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a.current = new t.Transform(), a.delta = new t.Transform(), a.result = new t.Transform(), a;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.BonePose]";
          }, a.prototype._onClear = function () {
            this.current.identity(), this.delta.identity(), this.result.identity();
          }, a;
        }(t.BaseObject);

        t.BonePose = a;

        var i = function () {
          function t() {}

          return t.prototype.update = function (t, e) {
            if (this.dirty) {
              if (!(this.leftWeight > 0)) return 0;

              if (this.layer !== e) {
                if (this.layerWeight >= this.leftWeight) return this.leftWeight = 0, 0;
                this.layer = e, this.leftWeight -= this.layerWeight, this.layerWeight = 0;
              }

              return t *= this.leftWeight, this.layerWeight += t, this.blendWeight = t, 2;
            }

            return this.dirty = !0, this.layer = e, this.layerWeight = t, this.leftWeight = 1, this.blendWeight = t, 1;
          }, t.prototype.clear = function () {
            this.dirty = !1, this.layer = 0, this.leftWeight = 0, this.layerWeight = 0, this.blendWeight = 0;
          }, t;
        }();

        t.BlendState = i;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.prototype._onClear = function () {
            this.playState = -1, this.currentPlayTimes = -1, this.currentTime = -1, this._tweenState = 0, this._frameRate = 0, this._frameValueOffset = 0, this._frameCount = 0, this._frameOffset = 0, this._frameIndex = -1, this._frameRateR = 0, this._position = 0, this._duration = 0, this._timeScale = 1, this._timeOffset = 0, this._dragonBonesData = null, this._animationData = null, this._timelineData = null, this._armature = null, this._animationState = null, this._actionTimeline = null, this._frameArray = null, this._frameIntArray = null, this._frameFloatArray = null, this._timelineArray = null, this._frameIndices = null;
          }, e.prototype._setCurrentTime = function (t) {
            var e = this.playState,
                a = this.currentPlayTimes,
                i = this.currentTime;
            if (null !== this._actionTimeline && this._frameCount <= 1) this.playState = this._actionTimeline.playState >= 0 ? 1 : -1, this.currentPlayTimes = 1, this.currentTime = this._actionTimeline.currentTime;else if (null === this._actionTimeline || 1 !== this._timeScale || 0 !== this._timeOffset) {
              var r = this._animationState.playTimes,
                  n = r * this._duration;
              t *= this._timeScale, 0 !== this._timeOffset && (t += this._timeOffset * this._animationData.duration), r > 0 && (t >= n || t <= -n) ? (this.playState <= 0 && 3 === this._animationState._playheadState && (this.playState = 1), this.currentPlayTimes = r, this.currentTime = t < 0 ? 0 : this._duration + 1e-6) : (0 !== this.playState && 3 === this._animationState._playheadState && (this.playState = 0), t < 0 ? (t = -t, this.currentPlayTimes = Math.floor(t / this._duration), this.currentTime = this._duration - t % this._duration) : (this.currentPlayTimes = Math.floor(t / this._duration), this.currentTime = t % this._duration)), this.currentTime += this._position;
            } else this.playState = this._actionTimeline.playState, this.currentPlayTimes = this._actionTimeline.currentPlayTimes, this.currentTime = this._actionTimeline.currentTime;
            return (this.currentPlayTimes !== a || this.currentTime !== i) && ((e < 0 && this.playState !== e || this.playState <= 0 && this.currentPlayTimes !== a) && (this._frameIndex = -1), !0);
          }, e.prototype.init = function (t, e, a) {
            this._armature = t, this._animationState = e, this._timelineData = a, this._actionTimeline = this._animationState._actionTimeline, this === this._actionTimeline && (this._actionTimeline = null), this._animationData = this._animationState._animationData, this._frameRate = this._animationData.parent.frameRate, this._frameRateR = 1 / this._frameRate, this._position = this._animationState._position, this._duration = this._animationState._duration, this._dragonBonesData = this._animationData.parent.parent, null !== this._timelineData && (this._frameIntArray = this._dragonBonesData.frameIntArray, this._frameFloatArray = this._dragonBonesData.frameFloatArray, this._frameArray = this._dragonBonesData.frameArray, this._timelineArray = this._dragonBonesData.timelineArray, this._frameIndices = this._dragonBonesData.frameIndices, this._frameCount = this._timelineArray[this._timelineData.offset + 2], this._frameValueOffset = this._timelineArray[this._timelineData.offset + 4], this._timeScale = 100 / this._timelineArray[this._timelineData.offset + 0], this._timeOffset = .01 * this._timelineArray[this._timelineData.offset + 1]);
          }, e.prototype.fadeOut = function () {}, e.prototype.update = function (t) {
            if (this._setCurrentTime(t)) {
              if (this._frameCount > 1) {
                var e = Math.floor(this.currentTime * this._frameRate),
                    a = this._frameIndices[this._timelineData.frameIndicesOffset + e];
                this._frameIndex !== a && (this._frameIndex = a, this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 + this._frameIndex], this._onArriveAtFrame());
              } else this._frameIndex < 0 && (this._frameIndex = 0, null !== this._timelineData && (this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5]), this._onArriveAtFrame());

              0 !== this._tweenState && this._onUpdateFrame();
            }
          }, e;
        }(t.BaseObject);

        t.TimelineState = e;

        var a = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e._getEasingValue = function (t, e, a) {
            var i = e;

            switch (t) {
              case 3:
                i = Math.pow(e, 2);
                break;

              case 4:
                i = 1 - Math.pow(1 - e, 2);
                break;

              case 5:
                i = .5 * (1 - Math.cos(e * Math.PI));
            }

            return (i - e) * a + e;
          }, e._getEasingCurveValue = function (t, e, a, i) {
            if (t <= 0) return 0;
            if (t >= 1) return 1;
            var r = a + 1,
                n = Math.floor(t * r),
                s = 0 === n ? 0 : e[i + n - 1];
            return 1e-4 * (s + ((n === r - 1 ? 1e4 : e[i + n]) - s) * (t * r - n));
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this._tweenType = 0, this._curveCount = 0, this._framePosition = 0, this._frameDurationR = 0, this._tweenProgress = 0, this._tweenEasing = 0;
          }, e.prototype._onArriveAtFrame = function () {
            if (this._frameCount > 1 && (this._frameIndex !== this._frameCount - 1 || 0 === this._animationState.playTimes || this._animationState.currentPlayTimes < this._animationState.playTimes - 1)) {
              if (this._tweenType = this._frameArray[this._frameOffset + 1], this._tweenState = 0 === this._tweenType ? 1 : 2, 2 === this._tweenType ? this._curveCount = this._frameArray[this._frameOffset + 2] : 0 !== this._tweenType && 1 !== this._tweenType && (this._tweenEasing = .01 * this._frameArray[this._frameOffset + 2]), this._framePosition = this._frameArray[this._frameOffset] * this._frameRateR, this._frameIndex === this._frameCount - 1) this._frameDurationR = 1 / (this._animationData.duration - this._framePosition);else {
                var t = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 + this._frameIndex + 1],
                    e = this._frameArray[t] * this._frameRateR - this._framePosition;
                this._frameDurationR = e > 0 ? 1 / e : 0;
              }
            } else this._tweenState = 1;
          }, e.prototype._onUpdateFrame = function () {
            2 === this._tweenState ? (this._tweenProgress = (this.currentTime - this._framePosition) * this._frameDurationR, 2 === this._tweenType ? this._tweenProgress = e._getEasingCurveValue(this._tweenProgress, this._frameArray, this._curveCount, this._frameOffset + 3) : 1 !== this._tweenType && (this._tweenProgress = e._getEasingValue(this._tweenType, this._tweenProgress, this._tweenEasing))) : this._tweenProgress = 0;
          }, e;
        }(e);

        t.TweenTimelineState = a;

        var i = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.bone = null, this.bonePose = null;
          }, e.prototype.blend = function (t) {
            var e = this.bone._blendState.blendWeight,
                a = this.bone.animationPose,
                i = this.bonePose.result;
            2 === t ? (a.x += i.x * e, a.y += i.y * e, a.rotation += i.rotation * e, a.skew += i.skew * e, a.scaleX += (i.scaleX - 1) * e, a.scaleY += (i.scaleY - 1) * e) : 1 !== e ? (a.x = i.x * e, a.y = i.y * e, a.rotation = i.rotation * e, a.skew = i.skew * e, a.scaleX = (i.scaleX - 1) * e + 1, a.scaleY = (i.scaleY - 1) * e + 1) : (a.x = i.x, a.y = i.y, a.rotation = i.rotation, a.skew = i.skew, a.scaleX = i.scaleX, a.scaleY = i.scaleY), 0 === this._animationState._fadeState && 0 === this._animationState._subFadeState || (this.bone._transformDirty = !0);
          }, e;
        }(a);

        t.BoneTimelineState = i;

        var r = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.slot = null;
          }, e;
        }(a);

        t.SlotTimelineState = r;

        var n = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.constraint = null;
          }, e;
        }(a);

        t.ConstraintTimelineState = n;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            return null !== e && e.apply(this, arguments) || this;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.ActionTimelineState]";
          }, a.prototype._onCrossFrame = function (e) {
            var a = this._armature.eventDispatcher;
            if (this._animationState.actionEnabled) for (var i = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 + e], r = this._frameArray[i + 1], n = this._animationData.parent.actions, s = 0; s < r; ++s) {
              var o = n[this._frameArray[i + 2 + s]];
              if (0 === o.type) (l = t.BaseObject.borrowObject(t.EventObject)).time = this._frameArray[i] / this._frameRate, l.animationState = this._animationState, t.EventObject.actionDataToInstance(o, l, this._armature), this._armature._bufferAction(l, !0);else {
                var l,
                    h = 10 === o.type ? t.EventObject.FRAME_EVENT : t.EventObject.SOUND_EVENT;
                (11 === o.type || a.hasDBEventListener(h)) && ((l = t.BaseObject.borrowObject(t.EventObject)).time = this._frameArray[i] / this._frameRate, l.animationState = this._animationState, t.EventObject.actionDataToInstance(o, l, this._armature), this._armature._dragonBones.bufferEvent(l));
              }
            }
          }, a.prototype._onArriveAtFrame = function () {}, a.prototype._onUpdateFrame = function () {}, a.prototype.update = function (e) {
            var a = this.playState,
                i = this.currentPlayTimes,
                r = this.currentTime;

            if (this._setCurrentTime(e)) {
              var n = this._armature.eventDispatcher;

              if (a < 0) {
                if (this.playState === a) return;

                if (this._animationState.displayControl && this._animationState.resetToPose && this._armature._sortZOrder(null, 0), i = this.currentPlayTimes, n.hasDBEventListener(t.EventObject.START)) {
                  var s = t.BaseObject.borrowObject(t.EventObject);
                  s.type = t.EventObject.START, s.armature = this._armature, s.animationState = this._animationState, this._armature._dragonBones.bufferEvent(s);
                }
              }

              var o = this._animationState.timeScale < 0,
                  l = null,
                  h = null;

              if (this.currentPlayTimes !== i && (n.hasDBEventListener(t.EventObject.LOOP_COMPLETE) && ((l = t.BaseObject.borrowObject(t.EventObject)).type = t.EventObject.LOOP_COMPLETE, l.armature = this._armature, l.animationState = this._animationState), this.playState > 0 && n.hasDBEventListener(t.EventObject.COMPLETE) && ((h = t.BaseObject.borrowObject(t.EventObject)).type = t.EventObject.COMPLETE, h.armature = this._armature, h.animationState = this._animationState)), this._frameCount > 1) {
                var u = this._timelineData,
                    _ = Math.floor(this.currentTime * this._frameRate),
                    f = this._frameIndices[u.frameIndicesOffset + _];

                if (this._frameIndex !== f) {
                  var c = this._frameIndex;
                  if (this._frameIndex = f, null !== this._timelineArray) if (this._frameOffset = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + this._frameIndex], o) {
                    if (c < 0) {
                      var m = Math.floor(r * this._frameRate);
                      c = this._frameIndices[u.frameIndicesOffset + m], this.currentPlayTimes === i && c === f && (c = -1);
                    }

                    for (; c >= 0;) {
                      var p = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + c],
                          d = this._frameArray[p] / this._frameRate;
                      if (this._position <= d && d <= this._position + this._duration && this._onCrossFrame(c), null !== l && 0 === c && (this._armature._dragonBones.bufferEvent(l), l = null), c > 0 ? c-- : c = this._frameCount - 1, c === f) break;
                    }
                  } else for (c < 0 && (m = Math.floor(r * this._frameRate), c = this._frameIndices[u.frameIndicesOffset + m], p = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + c], d = this._frameArray[p] / this._frameRate, this.currentPlayTimes === i && (r <= d ? c > 0 ? c-- : c = this._frameCount - 1 : c === f && (c = -1))); c >= 0 && (c < this._frameCount - 1 ? c++ : c = 0, p = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + c], d = this._frameArray[p] / this._frameRate, this._position <= d && d <= this._position + this._duration && this._onCrossFrame(c), null !== l && 0 === c && (this._armature._dragonBones.bufferEvent(l), l = null), c !== f);) {
                    ;
                  }
                }
              } else this._frameIndex < 0 && (this._frameIndex = 0, null !== this._timelineData) && (this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5], d = this._frameArray[this._frameOffset] / this._frameRate, this.currentPlayTimes === i ? r <= d && this._onCrossFrame(this._frameIndex) : this._position <= d && (o || null === l || (this._armature._dragonBones.bufferEvent(l), l = null), this._onCrossFrame(this._frameIndex)));

              null !== l && this._armature._dragonBones.bufferEvent(l), null !== h && this._armature._dragonBones.bufferEvent(h);
            }
          }, a.prototype.setCurrentTime = function (t) {
            this._setCurrentTime(t), this._frameIndex = -1;
          }, a;
        }(t.TimelineState);

        t.ActionTimelineState = e;

        var a = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.ZOrderTimelineState]";
          }, e.prototype._onArriveAtFrame = function () {
            this.playState >= 0 && (this._frameArray[this._frameOffset + 1] > 0 ? this._armature._sortZOrder(this._frameArray, this._frameOffset + 2) : this._armature._sortZOrder(null, 0));
          }, e.prototype._onUpdateFrame = function () {}, e;
        }(t.TimelineState);

        t.ZOrderTimelineState = a;

        var i = function (e) {
          function a() {
            return null !== e && e.apply(this, arguments) || this;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.BoneAllTimelineState]";
          }, a.prototype._onArriveAtFrame = function () {
            if (e.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var t = this._animationData.frameFloatOffset + this._frameValueOffset + 6 * this._frameIndex,
                  a = this._armature._armatureData.scale,
                  i = this._frameFloatArray,
                  r = this.bonePose.current,
                  n = this.bonePose.delta;
              r.x = i[t++] * a, r.y = i[t++] * a, r.rotation = i[t++], r.skew = i[t++], r.scaleX = i[t++], r.scaleY = i[t++], 2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (t = this._animationData.frameFloatOffset + this._frameValueOffset), n.x = i[t++] * a - r.x, n.y = i[t++] * a - r.y, n.rotation = i[t++] - r.rotation, n.skew = i[t++] - r.skew, n.scaleX = i[t++] - r.scaleX, n.scaleY = i[t++] - r.scaleY) : (n.x = 0, n.y = 0, n.rotation = 0, n.skew = 0, n.scaleX = 0, n.scaleY = 0);
            } else r = this.bonePose.current, n = this.bonePose.delta, r.x = 0, r.y = 0, r.rotation = 0, r.skew = 0, r.scaleX = 1, r.scaleY = 1, n.x = 0, n.y = 0, n.rotation = 0, n.skew = 0, n.scaleX = 0, n.scaleY = 0;
          }, a.prototype._onUpdateFrame = function () {
            e.prototype._onUpdateFrame.call(this);

            var t = this.bonePose.current,
                a = this.bonePose.delta,
                i = this.bonePose.result;
            this.bone._transformDirty = !0, 2 !== this._tweenState && (this._tweenState = 0), i.x = t.x + a.x * this._tweenProgress, i.y = t.y + a.y * this._tweenProgress, i.rotation = t.rotation + a.rotation * this._tweenProgress, i.skew = t.skew + a.skew * this._tweenProgress, i.scaleX = t.scaleX + a.scaleX * this._tweenProgress, i.scaleY = t.scaleY + a.scaleY * this._tweenProgress;
          }, a.prototype.fadeOut = function () {
            var e = this.bonePose.result;
            e.rotation = t.Transform.normalizeRadian(e.rotation), e.skew = t.Transform.normalizeRadian(e.skew);
          }, a;
        }(t.BoneTimelineState);

        t.BoneAllTimelineState = i;

        var r = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.BoneTranslateTimelineState]";
          }, e.prototype._onArriveAtFrame = function () {
            if (t.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var e = this._animationData.frameFloatOffset + this._frameValueOffset + 2 * this._frameIndex,
                  a = this._armature._armatureData.scale,
                  i = this._frameFloatArray,
                  r = this.bonePose.current,
                  n = this.bonePose.delta;
              r.x = i[e++] * a, r.y = i[e++] * a, 2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (e = this._animationData.frameFloatOffset + this._frameValueOffset), n.x = i[e++] * a - r.x, n.y = i[e++] * a - r.y) : (n.x = 0, n.y = 0);
            } else r = this.bonePose.current, n = this.bonePose.delta, r.x = 0, r.y = 0, n.x = 0, n.y = 0;
          }, e.prototype._onUpdateFrame = function () {
            t.prototype._onUpdateFrame.call(this);

            var e = this.bonePose.current,
                a = this.bonePose.delta,
                i = this.bonePose.result;
            this.bone._transformDirty = !0, 2 !== this._tweenState && (this._tweenState = 0), i.x = e.x + a.x * this._tweenProgress, i.y = e.y + a.y * this._tweenProgress;
          }, e;
        }(t.BoneTimelineState);

        t.BoneTranslateTimelineState = r;

        var n = function (e) {
          function a() {
            return null !== e && e.apply(this, arguments) || this;
          }

          return X(a, e), a.toString = function () {
            return "[class dragonBones.BoneRotateTimelineState]";
          }, a.prototype._onArriveAtFrame = function () {
            if (e.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var a = this._animationData.frameFloatOffset + this._frameValueOffset + 2 * this._frameIndex,
                  i = this._frameFloatArray,
                  r = this.bonePose.current,
                  n = this.bonePose.delta;
              r.rotation = i[a++], r.skew = i[a++], 2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 ? (a = this._animationData.frameFloatOffset + this._frameValueOffset, n.rotation = t.Transform.normalizeRadian(i[a++] - r.rotation)) : n.rotation = i[a++] - r.rotation, n.skew = i[a++] - r.skew) : (n.rotation = 0, n.skew = 0);
            } else r = this.bonePose.current, n = this.bonePose.delta, r.rotation = 0, r.skew = 0, n.rotation = 0, n.skew = 0;
          }, a.prototype._onUpdateFrame = function () {
            e.prototype._onUpdateFrame.call(this);

            var t = this.bonePose.current,
                a = this.bonePose.delta,
                i = this.bonePose.result;
            this.bone._transformDirty = !0, 2 !== this._tweenState && (this._tweenState = 0), i.rotation = t.rotation + a.rotation * this._tweenProgress, i.skew = t.skew + a.skew * this._tweenProgress;
          }, a.prototype.fadeOut = function () {
            var e = this.bonePose.result;
            e.rotation = t.Transform.normalizeRadian(e.rotation), e.skew = t.Transform.normalizeRadian(e.skew);
          }, a;
        }(t.BoneTimelineState);

        t.BoneRotateTimelineState = n;

        var s = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.BoneScaleTimelineState]";
          }, e.prototype._onArriveAtFrame = function () {
            if (t.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var e = this._animationData.frameFloatOffset + this._frameValueOffset + 2 * this._frameIndex,
                  a = this._frameFloatArray,
                  i = this.bonePose.current,
                  r = this.bonePose.delta;
              i.scaleX = a[e++], i.scaleY = a[e++], 2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (e = this._animationData.frameFloatOffset + this._frameValueOffset), r.scaleX = a[e++] - i.scaleX, r.scaleY = a[e++] - i.scaleY) : (r.scaleX = 0, r.scaleY = 0);
            } else i = this.bonePose.current, r = this.bonePose.delta, i.scaleX = 1, i.scaleY = 1, r.scaleX = 0, r.scaleY = 0;
          }, e.prototype._onUpdateFrame = function () {
            t.prototype._onUpdateFrame.call(this);

            var e = this.bonePose.current,
                a = this.bonePose.delta,
                i = this.bonePose.result;
            this.bone._transformDirty = !0, 2 !== this._tweenState && (this._tweenState = 0), i.scaleX = e.scaleX + a.scaleX * this._tweenProgress, i.scaleY = e.scaleY + a.scaleY * this._tweenProgress;
          }, e;
        }(t.BoneTimelineState);

        t.BoneScaleTimelineState = s;

        var o = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._current = [], e._delta = [], e._result = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.SurfaceTimelineState]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.surface = null, this._frameFloatOffset = 0, this._valueCount = 0, this._deformCount = 0, this._valueOffset = 0, this._current.length = 0, this._delta.length = 0, this._result.length = 0;
          }, e.prototype._onArriveAtFrame = function () {
            if (t.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var e = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * this._valueCount,
                  a = this._armature._armatureData.scale,
                  i = this._frameFloatArray;

              if (2 === this._tweenState) {
                var r = e + this._valueCount;
                this._frameIndex === this._frameCount - 1 && (r = this._animationData.frameFloatOffset + this._frameValueOffset);

                for (var n = 0; n < this._valueCount; ++n) {
                  this._delta[n] = i[r + n] * a - (this._current[n] = i[e + n] * a);
                }
              } else for (n = 0; n < this._valueCount; ++n) {
                this._current[n] = i[e + n] * a;
              }
            } else for (n = 0; n < this._valueCount; ++n) {
              this._current[n] = 0;
            }
          }, e.prototype._onUpdateFrame = function () {
            t.prototype._onUpdateFrame.call(this), this.surface._transformDirty = !0, 2 !== this._tweenState && (this._tweenState = 0);

            for (var e = 0; e < this._valueCount; ++e) {
              this._result[e] = this._current[e] + this._delta[e] * this._tweenProgress;
            }
          }, e.prototype.init = function (e, a, i) {
            if (t.prototype.init.call(this, e, a, i), null !== this._timelineData) {
              var r = this._animationData.frameIntOffset + this._timelineArray[this._timelineData.offset + 3];
              this._deformCount = this._frameIntArray[r + 1], this._valueCount = this._frameIntArray[r + 2], this._valueOffset = this._frameIntArray[r + 3], this._frameFloatOffset = this._frameIntArray[r + 4] + this._animationData.frameFloatOffset;
            } else this._deformCount = this.surface._deformVertices.length, this._valueCount = this._deformCount, this._valueOffset = 0, this._frameFloatOffset = 0;

            this._current.length = this._valueCount, this._delta.length = this._valueCount, this._result.length = this._valueCount;

            for (var n = 0; n < this._valueCount; ++n) {
              this._delta[n] = 0;
            }
          }, e.prototype.blend = function (t) {
            for (var e = this.surface._blendState.blendWeight, a = this.surface._deformVertices, i = 0; i < this._deformCount; ++i) {
              var r;
              r = i < this._valueOffset ? this._frameFloatArray[this._frameFloatOffset + i] : i < this._valueOffset + this._valueCount ? this._result[i - this._valueOffset] : this._frameFloatArray[this._frameFloatOffset + i - this._valueCount], 2 === t ? a[i] += r * e : a[i] = 1 !== e ? r * e : r;
            }

            0 === this._animationState._fadeState && 0 === this._animationState._subFadeState || (this.surface._transformDirty = !0);
          }, e;
        }(t.TweenTimelineState);

        t.SurfaceTimelineState = o;

        var l = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.SlotDislayTimelineState]";
          }, e.prototype._onArriveAtFrame = function () {
            if (this.playState >= 0) {
              var t = null !== this._timelineData ? this._frameArray[this._frameOffset + 1] : this.slot._slotData.displayIndex;
              this.slot.displayIndex !== t && this.slot._setDisplayIndex(t, !0);
            }
          }, e;
        }(t.SlotTimelineState);

        t.SlotDislayTimelineState = l;

        var h = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._current = [0, 0, 0, 0, 0, 0, 0, 0], e._delta = [0, 0, 0, 0, 0, 0, 0, 0], e._result = [0, 0, 0, 0, 0, 0, 0, 0], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.SlotColorTimelineState]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this._dirty = !1;
          }, e.prototype._onArriveAtFrame = function () {
            if (t.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var e = this._dragonBonesData.intArray,
                  a = this._frameIntArray,
                  i = this._animationData.frameIntOffset + this._frameValueOffset + 1 * this._frameIndex,
                  r = a[i];
              r < 0 && (r += 65536), this._current[0] = e[r++], this._current[1] = e[r++], this._current[2] = e[r++], this._current[3] = e[r++], this._current[4] = e[r++], this._current[5] = e[r++], this._current[6] = e[r++], this._current[7] = e[r++], 2 === this._tweenState && ((r = this._frameIndex === this._frameCount - 1 ? a[this._animationData.frameIntOffset + this._frameValueOffset] : a[i + 1]) < 0 && (r += 65536), this._delta[0] = e[r++] - this._current[0], this._delta[1] = e[r++] - this._current[1], this._delta[2] = e[r++] - this._current[2], this._delta[3] = e[r++] - this._current[3], this._delta[4] = e[r++] - this._current[4], this._delta[5] = e[r++] - this._current[5], this._delta[6] = e[r++] - this._current[6], this._delta[7] = e[r++] - this._current[7]);
            } else {
              var n = this.slot._slotData.color;
              this._current[0] = 100 * n.alphaMultiplier, this._current[1] = 100 * n.redMultiplier, this._current[2] = 100 * n.greenMultiplier, this._current[3] = 100 * n.blueMultiplier, this._current[4] = n.alphaOffset, this._current[5] = n.redOffset, this._current[6] = n.greenOffset, this._current[7] = n.blueOffset;
            }
          }, e.prototype._onUpdateFrame = function () {
            t.prototype._onUpdateFrame.call(this), this._dirty = !0, 2 !== this._tweenState && (this._tweenState = 0), this._result[0] = .01 * (this._current[0] + this._delta[0] * this._tweenProgress), this._result[1] = .01 * (this._current[1] + this._delta[1] * this._tweenProgress), this._result[2] = .01 * (this._current[2] + this._delta[2] * this._tweenProgress), this._result[3] = .01 * (this._current[3] + this._delta[3] * this._tweenProgress), this._result[4] = this._current[4] + this._delta[4] * this._tweenProgress, this._result[5] = this._current[5] + this._delta[5] * this._tweenProgress, this._result[6] = this._current[6] + this._delta[6] * this._tweenProgress, this._result[7] = this._current[7] + this._delta[7] * this._tweenProgress;
          }, e.prototype.fadeOut = function () {
            this._tweenState = 0, this._dirty = !1;
          }, e.prototype.update = function (e) {
            if (t.prototype.update.call(this, e), 0 !== this._tweenState || this._dirty) {
              var a = this.slot._colorTransform;

              if (0 !== this._animationState._fadeState || 0 !== this._animationState._subFadeState) {
                if (a.alphaMultiplier !== this._result[0] || a.redMultiplier !== this._result[1] || a.greenMultiplier !== this._result[2] || a.blueMultiplier !== this._result[3] || a.alphaOffset !== this._result[4] || a.redOffset !== this._result[5] || a.greenOffset !== this._result[6] || a.blueOffset !== this._result[7]) {
                  var i = Math.pow(this._animationState._fadeProgress, 4);
                  a.alphaMultiplier += (this._result[0] - a.alphaMultiplier) * i, a.redMultiplier += (this._result[1] - a.redMultiplier) * i, a.greenMultiplier += (this._result[2] - a.greenMultiplier) * i, a.blueMultiplier += (this._result[3] - a.blueMultiplier) * i, a.alphaOffset += (this._result[4] - a.alphaOffset) * i, a.redOffset += (this._result[5] - a.redOffset) * i, a.greenOffset += (this._result[6] - a.greenOffset) * i, a.blueOffset += (this._result[7] - a.blueOffset) * i, this.slot._colorDirty = !0;
                }
              } else this._dirty && (this._dirty = !1, a.alphaMultiplier === this._result[0] && a.redMultiplier === this._result[1] && a.greenMultiplier === this._result[2] && a.blueMultiplier === this._result[3] && a.alphaOffset === this._result[4] && a.redOffset === this._result[5] && a.greenOffset === this._result[6] && a.blueOffset === this._result[7] || (a.alphaMultiplier = this._result[0], a.redMultiplier = this._result[1], a.greenMultiplier = this._result[2], a.blueMultiplier = this._result[3], a.alphaOffset = this._result[4], a.redOffset = this._result[5], a.greenOffset = this._result[6], a.blueOffset = this._result[7], this.slot._colorDirty = !0));
            }
          }, e;
        }(t.SlotTimelineState);

        t.SlotColorTimelineState = h;

        var u = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._current = [], e._delta = [], e._result = [], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.DeformTimelineState]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.vertexOffset = 0, this._dirty = !1, this._frameFloatOffset = 0, this._valueCount = 0, this._deformCount = 0, this._valueOffset = 0, this._current.length = 0, this._delta.length = 0, this._result.length = 0;
          }, e.prototype._onArriveAtFrame = function () {
            if (t.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var e = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * this._valueCount,
                  a = this._armature._armatureData.scale,
                  i = this._frameFloatArray;

              if (2 === this._tweenState) {
                var r = e + this._valueCount;
                this._frameIndex === this._frameCount - 1 && (r = this._animationData.frameFloatOffset + this._frameValueOffset);

                for (var n = 0; n < this._valueCount; ++n) {
                  this._delta[n] = i[r + n] * a - (this._current[n] = i[e + n] * a);
                }
              } else for (n = 0; n < this._valueCount; ++n) {
                this._current[n] = i[e + n] * a;
              }
            } else for (n = 0; n < this._valueCount; ++n) {
              this._current[n] = 0;
            }
          }, e.prototype._onUpdateFrame = function () {
            t.prototype._onUpdateFrame.call(this), this._dirty = !0, 2 !== this._tweenState && (this._tweenState = 0);

            for (var e = 0; e < this._valueCount; ++e) {
              this._result[e] = this._current[e] + this._delta[e] * this._tweenProgress;
            }
          }, e.prototype.init = function (e, a, i) {
            if (t.prototype.init.call(this, e, a, i), null !== this._timelineData) {
              var r = this._animationData.frameIntOffset + this._timelineArray[this._timelineData.offset + 3];
              this.vertexOffset = this._frameIntArray[r + 0], this.vertexOffset < 0 && (this.vertexOffset += 65536), this._deformCount = this._frameIntArray[r + 1], this._valueCount = this._frameIntArray[r + 2], this._valueOffset = this._frameIntArray[r + 3], this._frameFloatOffset = this._frameIntArray[r + 4] + this._animationData.frameFloatOffset;
            } else {
              var n = this.slot._deformVertices;
              this._deformCount = null !== n ? n.vertices.length : 0, this._valueCount = this._deformCount, this._valueOffset = 0, this._frameFloatOffset = 0;
            }

            this._current.length = this._valueCount, this._delta.length = this._valueCount, this._result.length = this._valueCount;

            for (var s = 0; s < this._valueCount; ++s) {
              this._delta[s] = 0;
            }
          }, e.prototype.fadeOut = function () {
            this._tweenState = 0, this._dirty = !1;
          }, e.prototype.update = function (e) {
            var a = this.slot._deformVertices;

            if (null !== a && null !== a.verticesData && a.verticesData.offset === this.vertexOffset && (t.prototype.update.call(this, e), 0 !== this._tweenState || this._dirty)) {
              var i = a.vertices;

              if (0 !== this._animationState._fadeState || 0 !== this._animationState._subFadeState) {
                for (var r = Math.pow(this._animationState._fadeProgress, 2), n = 0; n < this._deformCount; ++n) {
                  n < this._valueOffset ? i[n] += (this._frameFloatArray[this._frameFloatOffset + n] - i[n]) * r : n < this._valueOffset + this._valueCount ? i[n] += (this._result[n - this._valueOffset] - i[n]) * r : i[n] += (this._frameFloatArray[this._frameFloatOffset + n - this._valueCount] - i[n]) * r;
                }

                a.verticesDirty = !0;
              } else if (this._dirty) {
                for (this._dirty = !1, n = 0; n < this._deformCount; ++n) {
                  n < this._valueOffset ? i[n] = this._frameFloatArray[this._frameFloatOffset + n] : n < this._valueOffset + this._valueCount ? i[n] = this._result[n - this._valueOffset] : i[n] = this._frameFloatArray[this._frameFloatOffset + n - this._valueCount];
                }

                a.verticesDirty = !0;
              }
            }
          }, e;
        }(t.SlotTimelineState);

        t.DeformTimelineState = u;

        var _ = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.IKConstraintTimelineState]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this._current = 0, this._delta = 0;
          }, e.prototype._onArriveAtFrame = function () {
            t.prototype._onArriveAtFrame.call(this);

            var e = this.constraint;

            if (null !== this._timelineData) {
              var a = this._animationData.frameIntOffset + this._frameValueOffset + 2 * this._frameIndex,
                  i = this._frameIntArray,
                  r = 0 !== i[a++];
              this._current = .01 * i[a++], 2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (a = this._animationData.frameIntOffset + this._frameValueOffset), this._delta = .01 * i[a + 1] - this._current) : this._delta = 0, e._bendPositive = r;
            } else {
              var n = e._constraintData;
              this._current = n.weight, this._delta = 0, e._bendPositive = n.bendPositive;
            }

            e.invalidUpdate();
          }, e.prototype._onUpdateFrame = function () {
            t.prototype._onUpdateFrame.call(this), 2 !== this._tweenState && (this._tweenState = 0);
            var e = this.constraint;
            e._weight = this._current + this._delta * this._tweenProgress, e.invalidUpdate();
          }, e;
        }(t.ConstraintTimelineState);

        t.IKConstraintTimelineState = _;

        var f = function (t) {
          function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._floats = [0, 0, 0, 0, 0, 0], e;
          }

          return X(e, t), e.toString = function () {
            return "[class dragonBones.AnimationTimelineState]";
          }, e.prototype._onClear = function () {
            t.prototype._onClear.call(this), this.animationState = null;
          }, e.prototype._onArriveAtFrame = function () {
            if (t.prototype._onArriveAtFrame.call(this), null !== this._timelineData) {
              var e = this._animationData.frameIntOffset + this._frameValueOffset + 2 * this._frameIndex,
                  a = 1 / this.animationState._animationData.parent.frameRate,
                  i = this._frameIntArray;
              this._floats[0] = i[e++] * a, this._floats[3] = .01 * i[e++], 2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (e = this._animationData.frameIntOffset + this._frameValueOffset), this._floats[1] = i[e++] * a - this._floats[0], this._floats[4] = .01 * i[e++] - this._floats[3]) : (this._floats[1] = 0, this._floats[4] = 0);
            }
          }, e.prototype._onUpdateFrame = function () {
            t.prototype._onUpdateFrame.call(this), 2 !== this._tweenState && (this._tweenState = 0), this._floats[0] >= 0 && (this._floats[2] = this._floats[0] + this._floats[1] * this._tweenProgress), this._floats[5] = this._floats[3] + this._floats[4] * this._tweenProgress;
          }, e.prototype.blend = function (t) {
            var e = this.animationState,
                a = e._blendState.blendWeight;
            2 === t ? (e.weight += this._floats[5] * a, e.currentTime += this._floats[2] * a) : (e.weight = this._floats[5] * a, e.currentTime = this._floats[2] * a);
          }, e;
        }(t.TweenTimelineState);

        t.AnimationTimelineState = f;
      }(G || (G = {})), function (t) {
        var e = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return X(e, t), e.actionDataToInstance = function (t, a, i) {
            0 === t.type ? a.type = e.FRAME_EVENT : a.type = 10 === t.type ? e.FRAME_EVENT : e.SOUND_EVENT, a.name = t.name, a.armature = i, a.actionData = t, a.data = t.data, null !== t.bone && (a.bone = i.getBone(t.bone.name)), null !== t.slot && (a.slot = i.getSlot(t.slot.name));
          }, e.toString = function () {
            return "[class dragonBones.EventObject]";
          }, e.prototype._onClear = function () {
            this.time = 0, this.type = "", this.name = "", this.armature = null, this.bone = null, this.slot = null, this.animationState = null, this.actionData = null, this.data = null;
          }, e.START = "start", e.LOOP_COMPLETE = "loopComplete", e.COMPLETE = "complete", e.FADE_IN = "fadeIn", e.FADE_IN_COMPLETE = "fadeInComplete", e.FADE_OUT = "fadeOut", e.FADE_OUT_COMPLETE = "fadeOutComplete", e.FRAME_EVENT = "frameEvent", e.SOUND_EVENT = "soundEvent", e;
        }(t.BaseObject);

        t.EventObject = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function e() {}

          return e._getArmatureType = function (t) {
            switch (t.toLowerCase()) {
              case "stage":
                return 2;

              case "armature":
                return 0;

              case "movieclip":
                return 1;

              default:
                return 0;
            }
          }, e._getBoneType = function (t) {
            switch (t.toLowerCase()) {
              case "bone":
                return 0;

              case "surface":
                return 1;

              default:
                return 0;
            }
          }, e._getDisplayType = function (t) {
            switch (t.toLowerCase()) {
              case "image":
                return 0;

              case "mesh":
                return 2;

              case "armature":
                return 1;

              case "boundingbox":
                return 3;

              case "path":
                return 4;

              default:
                return 0;
            }
          }, e._getBoundingBoxType = function (t) {
            switch (t.toLowerCase()) {
              case "rectangle":
                return 0;

              case "ellipse":
                return 1;

              case "polygon":
                return 2;

              default:
                return 0;
            }
          }, e._getActionType = function (t) {
            switch (t.toLowerCase()) {
              case "play":
                return 0;

              case "frame":
                return 10;

              case "sound":
                return 11;

              default:
                return 0;
            }
          }, e._getBlendMode = function (t) {
            switch (t.toLowerCase()) {
              case "normal":
                return 0;

              case "add":
                return 1;

              case "alpha":
                return 2;

              case "darken":
                return 3;

              case "difference":
                return 4;

              case "erase":
                return 5;

              case "hardlight":
                return 6;

              case "invert":
                return 7;

              case "layer":
                return 8;

              case "lighten":
                return 9;

              case "multiply":
                return 10;

              case "overlay":
                return 11;

              case "screen":
                return 12;

              case "subtract":
                return 13;

              default:
                return 0;
            }
          }, e._getPositionMode = function (t) {
            switch (t.toLocaleLowerCase()) {
              case "percent":
                return 1;

              case "fixed":
                return 0;

              default:
                return 1;
            }
          }, e._getSpacingMode = function (t) {
            switch (t.toLocaleLowerCase()) {
              case "length":
                return 0;

              case "percent":
                return 2;

              case "fixed":
                return 1;

              default:
                return 0;
            }
          }, e._getRotateMode = function (t) {
            switch (t.toLocaleLowerCase()) {
              case "tangent":
                return 0;

              case "chain":
                return 1;

              case "chainscale":
                return 2;

              default:
                return 0;
            }
          }, e.parseDragonBonesData = function (e) {
            return console.warn("Deprecated."), e instanceof ArrayBuffer ? t.BinaryDataParser.getInstance().parseDragonBonesData(e) : t.ObjectDataParser.getInstance().parseDragonBonesData(e);
          }, e.parseTextureAtlasData = function (a, i) {
            void 0 === i && (i = 1), console.warn("已废弃");

            for (var r = {}, n = a[e.SUB_TEXTURE], s = 0, o = n.length; s < o; s++) {
              var l = n[s],
                  h = l[e.NAME],
                  u = new t.Rectangle(),
                  _ = null;
              u.x = l[e.X] / i, u.y = l[e.Y] / i, u.width = l[e.WIDTH] / i, u.height = l[e.HEIGHT] / i, e.FRAME_WIDTH in l && ((_ = new t.Rectangle()).x = l[e.FRAME_X] / i, _.y = l[e.FRAME_Y] / i, _.width = l[e.FRAME_WIDTH] / i, _.height = l[e.FRAME_HEIGHT] / i), r[h] = {
                region: u,
                frame: _,
                rotated: !1
              };
            }

            return r;
          }, e.DATA_VERSION_2_3 = "2.3", e.DATA_VERSION_3_0 = "3.0", e.DATA_VERSION_4_0 = "4.0", e.DATA_VERSION_4_5 = "4.5", e.DATA_VERSION_5_0 = "5.0", e.DATA_VERSION_5_5 = "5.5", e.DATA_VERSION = e.DATA_VERSION_5_5, e.DATA_VERSIONS = [e.DATA_VERSION_4_0, e.DATA_VERSION_4_5, e.DATA_VERSION_5_0, e.DATA_VERSION_5_5], e.TEXTURE_ATLAS = "textureAtlas", e.SUB_TEXTURE = "SubTexture", e.FORMAT = "format", e.IMAGE_PATH = "imagePath", e.WIDTH = "width", e.HEIGHT = "height", e.ROTATED = "rotated", e.FRAME_X = "frameX", e.FRAME_Y = "frameY", e.FRAME_WIDTH = "frameWidth", e.FRAME_HEIGHT = "frameHeight", e.DRADON_BONES = "dragonBones", e.USER_DATA = "userData", e.ARMATURE = "armature", e.BONE = "bone", e.SURFACE = "surface", e.SLOT = "slot", e.CONSTRAINT = "constraint", e.IK = "ik", e.PATH_CONSTRAINT = "path", e.SKIN = "skin", e.DISPLAY = "display", e.ANIMATION = "animation", e.Z_ORDER = "zOrder", e.FFD = "ffd", e.FRAME = "frame", e.TRANSLATE_FRAME = "translateFrame", e.ROTATE_FRAME = "rotateFrame", e.SCALE_FRAME = "scaleFrame", e.DISPLAY_FRAME = "displayFrame", e.COLOR_FRAME = "colorFrame", e.DEFAULT_ACTIONS = "defaultActions", e.ACTIONS = "actions", e.EVENTS = "events", e.INTS = "ints", e.FLOATS = "floats", e.STRINGS = "strings", e.CANVAS = "canvas", e.TRANSFORM = "transform", e.PIVOT = "pivot", e.AABB = "aabb", e.COLOR = "color", e.VERSION = "version", e.COMPATIBLE_VERSION = "compatibleVersion", e.FRAME_RATE = "frameRate", e.TYPE = "type", e.SUB_TYPE = "subType", e.NAME = "name", e.PARENT = "parent", e.TARGET = "target", e.STAGE = "stage", e.SHARE = "share", e.PATH = "path", e.LENGTH = "length", e.DISPLAY_INDEX = "displayIndex", e.BLEND_MODE = "blendMode", e.INHERIT_TRANSLATION = "inheritTranslation", e.INHERIT_ROTATION = "inheritRotation", e.INHERIT_SCALE = "inheritScale", e.INHERIT_REFLECTION = "inheritReflection", e.INHERIT_ANIMATION = "inheritAnimation", e.INHERIT_DEFORM = "inheritDeform", e.SEGMENT_X = "segmentX", e.SEGMENT_Y = "segmentY", e.BEND_POSITIVE = "bendPositive", e.CHAIN = "chain", e.WEIGHT = "weight", e.FADE_IN_TIME = "fadeInTime", e.PLAY_TIMES = "playTimes", e.SCALE = "scale", e.OFFSET = "offset", e.POSITION = "position", e.DURATION = "duration", e.TWEEN_EASING = "tweenEasing", e.TWEEN_ROTATE = "tweenRotate", e.TWEEN_SCALE = "tweenScale", e.CLOCK_WISE = "clockwise", e.CURVE = "curve", e.SOUND = "sound", e.EVENT = "event", e.ACTION = "action", e.X = "x", e.Y = "y", e.SKEW_X = "skX", e.SKEW_Y = "skY", e.SCALE_X = "scX", e.SCALE_Y = "scY", e.VALUE = "value", e.ROTATE = "rotate", e.SKEW = "skew", e.ALPHA_OFFSET = "aO", e.RED_OFFSET = "rO", e.GREEN_OFFSET = "gO", e.BLUE_OFFSET = "bO", e.ALPHA_MULTIPLIER = "aM", e.RED_MULTIPLIER = "rM", e.GREEN_MULTIPLIER = "gM", e.BLUE_MULTIPLIER = "bM", e.UVS = "uvs", e.VERTICES = "vertices", e.TRIANGLES = "triangles", e.WEIGHTS = "weights", e.SLOT_POSE = "slotPose", e.BONE_POSE = "bonePose", e.GLUE_WEIGHTS = "glueWeights", e.GLUE_MESHES = "glueMeshes", e.BONES = "bones", e.POSITION_MODE = "positionMode", e.SPACING_MODE = "spacingMode", e.ROTATE_MODE = "rotateMode", e.SPACING = "spacing", e.ROTATE_OFFSET = "rotateOffset", e.ROTATE_MIX = "rotateMix", e.TRANSLATE_MIX = "translateMix", e.TARGET_DISPLAY = "targetDisplay", e.CLOSED = "closed", e.CONSTANT_SPEED = "constantSpeed", e.VERTEX_COUNT = "vertexCount", e.LENGTHS = "lengths", e.GOTO_AND_PLAY = "gotoAndPlay", e.DEFAULT_NAME = "default", e;
        }();

        t.DataParser = e;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function i() {
            var a = null !== e && e.apply(this, arguments) || this;
            return a._rawTextureAtlasIndex = 0, a._rawBones = [], a._data = null, a._armature = null, a._bone = null, a._surface = null, a._slot = null, a._skin = null, a._mesh = null, a._animation = null, a._timeline = null, a._rawTextureAtlases = null, a._defaultColorOffset = -1, a._prevClockwise = 0, a._prevRotation = 0, a._helpMatrixA = new t.Matrix(), a._helpMatrixB = new t.Matrix(), a._helpTransform = new t.Transform(), a._helpColorTransform = new t.ColorTransform(), a._helpPoint = new t.Point(), a._helpArray = [], a._intArray = [], a._floatArray = [], a._frameIntArray = [], a._frameFloatArray = [], a._frameArray = [], a._timelineArray = [], a._cacheRawMeshes = [], a._cacheMeshes = [], a._actionFrames = [], a._weightSlotPose = {}, a._weightBonePoses = {}, a._cacheBones = {}, a._slotChildActions = {}, a;
          }

          return X(i, e), i._getBoolean = function (t, e, a) {
            if (e in t) {
              var i = t[e],
                  r = (0, _typeof2.default)(i);
              if ("boolean" === r) return i;
              if ("string" !== r) return !!i;

              switch (i) {
                case "0":
                case "NaN":
                case "":
                case "false":
                case "null":
                case "undefined":
                  return !1;

                default:
                  return !0;
              }
            }

            return a;
          }, i._getNumber = function (t, e, a) {
            if (e in t) {
              var i = t[e];
              return null === i || "NaN" === i ? a : +i || 0;
            }

            return a;
          }, i._getString = function (e, a, i) {
            if (a in e) {
              var r = e[a];

              if ("string" == typeof r) {
                if (t.DragonBones.webAssembly) for (var n = 0, s = r.length; n < s; ++n) {
                  if (r.charCodeAt(n) > 255) return encodeURI(r);
                }
                return r;
              }

              return String(r);
            }

            return i;
          }, i.prototype._getCurvePoint = function (t, e, a, i, r, n, s, o, l, h) {
            var u = 1 - l,
                _ = u * u,
                f = l * l,
                c = u * _,
                m = 3 * l * _,
                p = 3 * u * f,
                d = l * f;

            h.x = c * t + m * a + p * r + d * s, h.y = c * e + m * i + p * n + d * o;
          }, i.prototype._samplingEasingCurve = function (t, e) {
            for (var a = t.length, i = -2, r = 0, n = e.length; r < n; ++r) {
              for (var s = (r + 1) / (n + 1); (i + 6 < a ? t[i + 6] : 1) < s;) {
                i += 6;
              }

              for (var o = i >= 0 && i + 6 < a, l = o ? t[i] : 0, h = o ? t[i + 1] : 0, u = t[i + 2], _ = t[i + 3], f = t[i + 4], c = t[i + 5], m = o ? t[i + 6] : 1, p = o ? t[i + 7] : 1, d = 0, y = 1; y - d > 1e-4;) {
                var g = .5 * (y + d);
                this._getCurvePoint(l, h, u, _, f, c, m, p, g, this._helpPoint), s - this._helpPoint.x > 0 ? d = g : y = g;
              }

              e[r] = this._helpPoint.y;
            }
          }, i.prototype._parseActionDataInFrame = function (e, a, i, r) {
            t.DataParser.EVENT in e && this._mergeActionFrame(e[t.DataParser.EVENT], a, 10, i, r), t.DataParser.SOUND in e && this._mergeActionFrame(e[t.DataParser.SOUND], a, 11, i, r), t.DataParser.ACTION in e && this._mergeActionFrame(e[t.DataParser.ACTION], a, 0, i, r), t.DataParser.EVENTS in e && this._mergeActionFrame(e[t.DataParser.EVENTS], a, 10, i, r), t.DataParser.ACTIONS in e && this._mergeActionFrame(e[t.DataParser.ACTIONS], a, 0, i, r);
          }, i.prototype._mergeActionFrame = function (e, i, r, n, s) {
            for (var o = t.DragonBones.webAssembly ? this._armature.actions.size() : this._armature.actions.length, l = this._parseActionData(e, r, n, s), h = 0, u = null, _ = 0, f = l; _ < f.length; _++) {
              var c = f[_];

              this._armature.addAction(c, !1);
            }

            0 === this._actionFrames.length && ((u = new a()).frameStart = 0, this._actionFrames.push(u), u = null);

            for (var m = 0, p = this._actionFrames; m < p.length; m++) {
              var d = p[m];

              if (d.frameStart === i) {
                u = d;
                break;
              }

              if (d.frameStart > i) break;
              h++;
            }

            null === u && ((u = new a()).frameStart = i, this._actionFrames.splice(h + 1, 0, u));

            for (var y = 0; y < l.length; ++y) {
              u.actions.push(o + y);
            }
          }, i.prototype._parseArmature = function (e, a) {
            var r = t.BaseObject.borrowObject(t.ArmatureData);

            if (r.name = i._getString(e, t.DataParser.NAME, ""), r.frameRate = i._getNumber(e, t.DataParser.FRAME_RATE, this._data.frameRate), r.scale = a, t.DataParser.TYPE in e && "string" == typeof e[t.DataParser.TYPE] ? r.type = t.DataParser._getArmatureType(e[t.DataParser.TYPE]) : r.type = i._getNumber(e, t.DataParser.TYPE, 0), 0 === r.frameRate && (r.frameRate = 24), this._armature = r, t.DataParser.CANVAS in e) {
              var n = e[t.DataParser.CANVAS],
                  s = t.BaseObject.borrowObject(t.CanvasData);
              t.DataParser.COLOR in n ? s.hasBackground = !0 : s.hasBackground = !1, s.color = i._getNumber(n, t.DataParser.COLOR, 0), s.x = i._getNumber(n, t.DataParser.X, 0) * r.scale, s.y = i._getNumber(n, t.DataParser.Y, 0) * r.scale, s.width = i._getNumber(n, t.DataParser.WIDTH, 0) * r.scale, s.height = i._getNumber(n, t.DataParser.HEIGHT, 0) * r.scale, r.canvas = s;
            }

            if (t.DataParser.AABB in e) {
              var o = e[t.DataParser.AABB];
              r.aabb.x = i._getNumber(o, t.DataParser.X, 0) * r.scale, r.aabb.y = i._getNumber(o, t.DataParser.Y, 0) * r.scale, r.aabb.width = i._getNumber(o, t.DataParser.WIDTH, 0) * r.scale, r.aabb.height = i._getNumber(o, t.DataParser.HEIGHT, 0) * r.scale;
            }

            if (t.DataParser.BONE in e) for (var l = 0, h = e[t.DataParser.BONE]; l < h.length; l++) {
              var u = h[l],
                  _ = i._getString(u, t.DataParser.PARENT, ""),
                  f = this._parseBone(u);

              if (_.length > 0) {
                var c = r.getBone(_);
                null !== c ? f.parent = c : (_ in this._cacheBones || (this._cacheBones[_] = []), this._cacheBones[_].push(f));
              }

              if (f.name in this._cacheBones) {
                for (var m = 0, p = this._cacheBones[f.name]; m < p.length; m++) {
                  p[m].parent = f;
                }

                delete this._cacheBones[f.name];
              }

              r.addBone(f), this._rawBones.push(f);
            }
            if (t.DataParser.IK in e) for (var d = 0, y = e[t.DataParser.IK]; d < y.length; d++) {
              var g = y[d];
              (C = this._parseIKConstraint(g)) && r.addConstraint(C);
            }
            if (r.sortBones(), t.DataParser.SLOT in e) for (var v = 0, D = 0, A = e[t.DataParser.SLOT]; D < A.length; D++) {
              var b = A[D];
              r.addSlot(this._parseSlot(b, v++));
            }
            if (t.DataParser.SKIN in e) for (var T = 0, S = e[t.DataParser.SKIN]; T < S.length; T++) {
              var P = S[T];
              r.addSkin(this._parseSkin(P));
            }
            if (t.DataParser.PATH_CONSTRAINT in e) for (var O = 0, x = e[t.DataParser.PATH_CONSTRAINT]; O < x.length; O++) {
              var C,
                  M = x[O];
              (C = this._parsePathConstraint(M)) && r.addConstraint(C);
            }

            for (var B = 0, E = this._cacheRawMeshes.length; B < E; ++B) {
              var I = this._cacheRawMeshes[B];
              t.DataParser.GLUE_WEIGHTS in I && t.DataParser.GLUE_MESHES in I && this._parseMeshGlue(I, this._cacheMeshes[B]);
            }

            for (B = 0, E = this._cacheRawMeshes.length; B < E; ++B) {
              var w = this._cacheRawMeshes[B],
                  F = i._getString(w, t.DataParser.SHARE, "");

              if (0 !== F.length) {
                var R = i._getString(w, t.DataParser.SKIN, t.DataParser.DEFAULT_NAME);

                0 === R.length && (R = t.DataParser.DEFAULT_NAME);
                var N = r.getMesh(R, "", F);
                null !== N && this._cacheMeshes[B].vertices.shareFrom(N.vertices);
              }
            }

            if (t.DataParser.ANIMATION in e) for (var k = 0, j = e[t.DataParser.ANIMATION]; k < j.length; k++) {
              var L = j[k],
                  U = this._parseAnimation(L);

              r.addAnimation(U);
            }
            if (t.DataParser.DEFAULT_ACTIONS in e) for (var V = 0, Y = this._parseActionData(e[t.DataParser.DEFAULT_ACTIONS], 0, null, null); V < Y.length; V++) {
              var X = Y[V];
              r.addAction(X, !0), 0 === X.type && null !== (U = r.getAnimation(X.name)) && (r.defaultAnimation = U);
            }
            if (t.DataParser.ACTIONS in e) for (var G = 0, H = this._parseActionData(e[t.DataParser.ACTIONS], 0, null, null); G < H.length; G++) {
              X = H[G], r.addAction(X, !1);
            }

            for (var W in this._rawBones.length = 0, this._cacheRawMeshes.length = 0, this._cacheMeshes.length = 0, this._armature = null, this._weightSlotPose) {
              delete this._weightSlotPose[W];
            }

            for (var W in this._weightBonePoses) {
              delete this._weightBonePoses[W];
            }

            for (var W in this._cacheBones) {
              delete this._cacheBones[W];
            }

            for (var W in this._slotChildActions) {
              delete this._slotChildActions[W];
            }

            return r;
          }, i.prototype._parseBone = function (e) {
            var a = this._armature.scale;

            if (0 === (t.DataParser.TYPE in e && "string" == typeof e[t.DataParser.TYPE] ? t.DataParser._getBoneType(e[t.DataParser.TYPE]) : i._getNumber(e, t.DataParser.TYPE, 0))) {
              var r = t.BaseObject.borrowObject(t.BoneData);
              return r.inheritTranslation = i._getBoolean(e, t.DataParser.INHERIT_TRANSLATION, !0), r.inheritRotation = i._getBoolean(e, t.DataParser.INHERIT_ROTATION, !0), r.inheritScale = i._getBoolean(e, t.DataParser.INHERIT_SCALE, !0), r.inheritReflection = i._getBoolean(e, t.DataParser.INHERIT_REFLECTION, !0), r.length = i._getNumber(e, t.DataParser.LENGTH, 0) * a, r.name = i._getString(e, t.DataParser.NAME, ""), t.DataParser.TRANSFORM in e && this._parseTransform(e[t.DataParser.TRANSFORM], r.transform, a), r;
            }

            var n = t.BaseObject.borrowObject(t.SurfaceData);
            if (n.name = i._getString(e, t.DataParser.NAME, ""), n.segmentX = i._getNumber(e, t.DataParser.SEGMENT_X, 0), n.segmentY = i._getNumber(e, t.DataParser.SEGMENT_Y, 0), n.vertices.length = (n.segmentX + 1) * (n.segmentY + 1) * 2, t.DataParser.VERTICES in e) for (var s = e[t.DataParser.VERTICES], o = 0, l = n.vertices.length; o < l; ++o) {
              o < s.length ? n.vertices[o] = s[o] * a : n.vertices[o] = 0;
            }
            return n;
          }, i.prototype._parseIKConstraint = function (e) {
            var a = this._armature.getBone(i._getString(e, t.DataParser.BONE, ""));

            if (null === a) return null;

            var r = this._armature.getBone(i._getString(e, t.DataParser.TARGET, ""));

            if (null === r) return null;
            var n = t.BaseObject.borrowObject(t.IKConstraintData);
            return n.scaleEnabled = i._getBoolean(e, t.DataParser.SCALE, !1), n.bendPositive = i._getBoolean(e, t.DataParser.BEND_POSITIVE, !0), n.weight = i._getNumber(e, t.DataParser.WEIGHT, 1), n.name = i._getString(e, t.DataParser.NAME, ""), n.type = 0, n.target = r, i._getNumber(e, t.DataParser.CHAIN, 0) > 0 && null !== a.parent ? (n.root = a.parent, n.bone = a) : (n.root = a, n.bone = null), n;
          }, i.prototype._parsePathConstraint = function (e) {
            var a = this._armature.getSlot(i._getString(e, t.DataParser.TARGET, ""));

            if (null === a) return null;
            var r = this._armature.defaultSkin;
            if (null === r) return null;
            var n = r.getDisplay(a.name, i._getString(e, t.DataParser.TARGET_DISPLAY, a.name));
            if (null === n || !(n instanceof t.PathDisplayData)) return null;
            var s = e[t.DataParser.BONES];
            if (null === s || 0 === s.length) return null;
            var o = t.BaseObject.borrowObject(t.PathConstraintData);
            o.name = i._getString(e, t.DataParser.NAME, ""), o.type = 1, o.pathSlot = a, o.pathDisplayData = n, o.target = a.parent, o.positionMode = t.DataParser._getPositionMode(i._getString(e, t.DataParser.POSITION_MODE, "")), o.spacingMode = t.DataParser._getSpacingMode(i._getString(e, t.DataParser.SPACING_MODE, "")), o.rotateMode = t.DataParser._getRotateMode(i._getString(e, t.DataParser.ROTATE_MODE, "")), o.position = i._getNumber(e, t.DataParser.POSITION, 0), o.spacing = i._getNumber(e, t.DataParser.SPACING, 0), o.rotateOffset = i._getNumber(e, t.DataParser.ROTATE_OFFSET, 0), o.rotateMix = i._getNumber(e, t.DataParser.ROTATE_MIX, 1), o.translateMix = i._getNumber(e, t.DataParser.TRANSLATE_MIX, 1);

            for (var l = 0, h = s; l < h.length; l++) {
              var u = h[l],
                  _ = this._armature.getBone(u);

              null !== _ && (o.AddBone(_), null === o.root && (o.root = _));
            }

            return o;
          }, i.prototype._parseSlot = function (e, a) {
            var r = t.BaseObject.borrowObject(t.SlotData);
            return r.displayIndex = i._getNumber(e, t.DataParser.DISPLAY_INDEX, 0), r.zOrder = a, r.name = i._getString(e, t.DataParser.NAME, ""), r.parent = this._armature.getBone(i._getString(e, t.DataParser.PARENT, "")), t.DataParser.BLEND_MODE in e && "string" == typeof e[t.DataParser.BLEND_MODE] ? r.blendMode = t.DataParser._getBlendMode(e[t.DataParser.BLEND_MODE]) : r.blendMode = i._getNumber(e, t.DataParser.BLEND_MODE, 0), t.DataParser.COLOR in e ? (r.color = t.SlotData.createColor(), this._parseColorTransform(e[t.DataParser.COLOR], r.color)) : r.color = t.SlotData.DEFAULT_COLOR, t.DataParser.ACTIONS in e && (this._slotChildActions[r.name] = this._parseActionData(e[t.DataParser.ACTIONS], 0, null, null)), r;
          }, i.prototype._parseSkin = function (e) {
            var a = t.BaseObject.borrowObject(t.SkinData);

            if (a.name = i._getString(e, t.DataParser.NAME, t.DataParser.DEFAULT_NAME), 0 === a.name.length && (a.name = t.DataParser.DEFAULT_NAME), t.DataParser.SLOT in e) {
              var r = e[t.DataParser.SLOT];
              this._skin = a;

              for (var n = 0, s = r; n < s.length; n++) {
                var o = s[n],
                    l = i._getString(o, t.DataParser.NAME, ""),
                    h = this._armature.getSlot(l);

                if (null !== h) {
                  if (this._slot = h, t.DataParser.DISPLAY in o) for (var u = 0, _ = o[t.DataParser.DISPLAY]; u < _.length; u++) {
                    var f = _[u];
                    f ? a.addDisplay(l, this._parseDisplay(f)) : a.addDisplay(l, null);
                  }
                  this._slot = null;
                }
              }

              this._skin = null;
            }

            return a;
          }, i.prototype._parseDisplay = function (e) {
            var a = i._getString(e, t.DataParser.NAME, ""),
                r = i._getString(e, t.DataParser.PATH, ""),
                n = 0,
                s = null;

            switch (n = t.DataParser.TYPE in e && "string" == typeof e[t.DataParser.TYPE] ? t.DataParser._getDisplayType(e[t.DataParser.TYPE]) : i._getNumber(e, t.DataParser.TYPE, n)) {
              case 0:
                var o = s = t.BaseObject.borrowObject(t.ImageDisplayData);
                o.name = a, o.path = r.length > 0 ? r : a, this._parsePivot(e, o);
                break;

              case 1:
                var l = s = t.BaseObject.borrowObject(t.ArmatureDisplayData);
                if (l.name = a, l.path = r.length > 0 ? r : a, l.inheritAnimation = !0, t.DataParser.ACTIONS in e) for (var h = 0, u = this._parseActionData(e[t.DataParser.ACTIONS], 0, null, null); h < u.length; h++) {
                  var _ = u[h];
                  l.addAction(_);
                } else if (this._slot.name in this._slotChildActions) {
                  var f = this._skin.getDisplays(this._slot.name);

                  if (null === f ? 0 === this._slot.displayIndex : this._slot.displayIndex === f.length) {
                    for (var c = 0, m = this._slotChildActions[this._slot.name]; c < m.length; c++) {
                      _ = m[c], l.addAction(_);
                    }

                    delete this._slotChildActions[this._slot.name];
                  }
                }
                break;

              case 2:
                var p = s = t.BaseObject.borrowObject(t.MeshDisplayData);
                p.vertices.inheritDeform = i._getBoolean(e, t.DataParser.INHERIT_DEFORM, !0), p.name = a, p.path = r.length > 0 ? r : a, p.vertices.data = this._data, t.DataParser.SHARE in e ? (this._cacheRawMeshes.push(e), this._cacheMeshes.push(p)) : this._parseMesh(e, p), t.DataParser.GLUE_WEIGHTS in e && t.DataParser.GLUE_MESHES in e && (this._cacheRawMeshes.push(e), this._cacheMeshes.push(p));
                break;

              case 3:
                var d = this._parseBoundingBox(e);

                if (null !== d) {
                  var y = s = t.BaseObject.borrowObject(t.BoundingBoxDisplayData);
                  y.name = a, y.path = r.length > 0 ? r : a, y.boundingBox = d;
                }

                break;

              case 4:
                var g = e[t.DataParser.LENGTHS],
                    v = s = t.BaseObject.borrowObject(t.PathDisplayData);
                v.closed = i._getBoolean(e, t.DataParser.CLOSED, !1), v.constantSpeed = i._getBoolean(e, t.DataParser.CONSTANT_SPEED, !1), v.name = a, v.path = r.length > 0 ? r : a, v.vertices.data = this._data, v.curveLengths.length = g.length;

                for (var D = 0, A = g.length; D < A; ++D) {
                  v.curveLengths[D] = g[D];
                }

                this._parsePath(e, v);

            }

            return null !== s && t.DataParser.TRANSFORM in e && this._parseTransform(e[t.DataParser.TRANSFORM], s.transform, this._armature.scale), s;
          }, i.prototype._parsePath = function (e, a) {
            var r = e[t.DataParser.VERTICES],
                n = i._getNumber(e, t.DataParser.VERTEX_COUNT, 0),
                s = this._floatArray.length,
                o = this._intArray.length;

            if (a.vertices.offset = o, this._intArray.length += 2, this._intArray[o + 0] = n, this._intArray[o + 2] = s, t.DataParser.WEIGHTS in e) {
              var l = e[t.DataParser.WEIGHTS],
                  h = e[t.DataParser.BONES],
                  u = h.length,
                  _ = Math.floor(l.length - n) / 2,
                  f = this._intArray.length,
                  c = this._floatArray.length,
                  m = this._armature.sortedBones,
                  p = t.BaseObject.borrowObject(t.WeightData);

              for (p.count = _, p.offset = f, this._intArray.length += 2 + u + n + _, this._intArray[f + 0] = u, this._intArray[f + 1] = c, C = 0; C < u; C++) {
                var d = h[C],
                    y = this._rawBones[d];
                p.addBone(y), this._intArray[f + 2 + C] = m.indexOf(y);
              }

              this._floatArray.length += 3 * _, C = 0;

              for (var g = 0, v = 0, D = f + 2 + u, A = c; C < _; C++) {
                var b = l[g++];
                this._intArray[D++] = b;

                for (var T = 0; T < b; T++) {
                  var S = l[g++],
                      P = l[g++],
                      O = r[v++],
                      x = r[v++];
                  this._intArray[D++] = h.indexOf(S), this._floatArray[A++] = P, this._floatArray[A++] = O, this._floatArray[A++] = x;
                }
              }

              a.vertices.weight = p;
            } else {
              this._floatArray.length += r.length;

              for (var C = 0, M = r.length; C < M; ++C) {
                this._floatArray[s + C] = r[C];
              }
            }
          }, i.prototype._parsePivot = function (e, a) {
            if (t.DataParser.PIVOT in e) {
              var r = e[t.DataParser.PIVOT];
              a.pivot.x = i._getNumber(r, t.DataParser.X, 0), a.pivot.y = i._getNumber(r, t.DataParser.Y, 0);
            } else a.pivot.x = .5, a.pivot.y = .5;
          }, i.prototype._parseMesh = function (e, a) {
            var i = e[t.DataParser.VERTICES],
                r = e[t.DataParser.UVS],
                n = e[t.DataParser.TRIANGLES],
                s = Math.floor(i.length / 2),
                o = Math.floor(n.length / 3),
                l = this._floatArray.length,
                h = l + 2 * s,
                u = this._intArray.length,
                _ = this._skin.name + "_" + this._slot.name + "_" + a.name;

            a.vertices.offset = u, this._intArray.length += 4 + 3 * o, this._intArray[u + 0] = s, this._intArray[u + 1] = o, this._intArray[u + 2] = l;

            for (var f = 0, c = 3 * o; f < c; ++f) {
              this._intArray[u + 4 + f] = n[f];
            }

            for (this._floatArray.length += 2 * s + 2 * s, f = 0, c = 2 * s; f < c; ++f) {
              this._floatArray[l + f] = i[f], this._floatArray[h + f] = r[f];
            }

            if (t.DataParser.WEIGHTS in e) {
              var m = e[t.DataParser.WEIGHTS],
                  p = e[t.DataParser.SLOT_POSE],
                  d = e[t.DataParser.BONE_POSE],
                  y = this._armature.sortedBones,
                  g = new Array(),
                  v = Math.floor(d.length / 7),
                  D = this._floatArray.length,
                  A = Math.floor(m.length - s) / 2,
                  b = this._intArray.length,
                  T = t.BaseObject.borrowObject(t.WeightData);

              for (T.count = A, T.offset = b, g.length = v, this._intArray.length += 2 + v + s + A, this._intArray[b + 1] = D, f = 0; f < v; ++f) {
                var S = d[7 * f],
                    P = this._rawBones[S];
                T.addBone(P), g[f] = S, this._intArray[b + 2 + f] = y.indexOf(P);
              }

              this._floatArray.length += 3 * A, this._helpMatrixA.copyFromArray(p, 0), f = 0;

              for (var O = 0, x = b + 2 + v, C = D; f < s; ++f) {
                var M = 2 * f,
                    B = this._intArray[x++] = m[O++],
                    E = this._floatArray[l + M],
                    I = this._floatArray[l + M + 1];
                this._helpMatrixA.transformPoint(E, I, this._helpPoint), E = this._helpPoint.x, I = this._helpPoint.y;

                for (var w = 0; w < B; ++w) {
                  S = m[O++];
                  var F = g.indexOf(S);
                  this._helpMatrixB.copyFromArray(d, 7 * F + 1), this._helpMatrixB.invert(), this._helpMatrixB.transformPoint(E, I, this._helpPoint), this._intArray[x++] = F, this._floatArray[C++] = m[O++], this._floatArray[C++] = this._helpPoint.x, this._floatArray[C++] = this._helpPoint.y;
                }
              }

              a.vertices.weight = T, this._weightSlotPose[_] = p, this._weightBonePoses[_] = d;
            }
          }, i.prototype._parseMeshGlue = function () {}, i.prototype._parseBoundingBox = function (e) {
            var a = null,
                r = 0;

            switch (r = t.DataParser.SUB_TYPE in e && "string" == typeof e[t.DataParser.SUB_TYPE] ? t.DataParser._getBoundingBoxType(e[t.DataParser.SUB_TYPE]) : i._getNumber(e, t.DataParser.SUB_TYPE, r)) {
              case 0:
                a = t.BaseObject.borrowObject(t.RectangleBoundingBoxData);
                break;

              case 1:
                a = t.BaseObject.borrowObject(t.EllipseBoundingBoxData);
                break;

              case 2:
                a = this._parsePolygonBoundingBox(e);
            }

            return null !== a && (a.color = i._getNumber(e, t.DataParser.COLOR, 0), 0 !== a.type && 1 !== a.type || (a.width = i._getNumber(e, t.DataParser.WIDTH, 0), a.height = i._getNumber(e, t.DataParser.HEIGHT, 0))), a;
          }, i.prototype._parsePolygonBoundingBox = function (e) {
            var a = t.BaseObject.borrowObject(t.PolygonBoundingBoxData);

            if (t.DataParser.VERTICES in e) {
              var i = this._armature.scale,
                  r = e[t.DataParser.VERTICES],
                  n = a.vertices;
              t.DragonBones.webAssembly ? n.resize(r.length, 0) : n.length = r.length;

              for (var s = 0, o = r.length; s < o; s += 2) {
                var l = r[s] * i,
                    h = r[s + 1] * i;
                t.DragonBones.webAssembly ? (n.set(s, l), n.set(s + 1, h)) : (n[s] = l, n[s + 1] = h), 0 === s ? (a.x = l, a.y = h, a.width = l, a.height = h) : (l < a.x ? a.x = l : l > a.width && (a.width = l), h < a.y ? a.y = h : h > a.height && (a.height = h));
              }

              a.width -= a.x, a.height -= a.y;
            } else console.warn("Data error.\n Please reexport DragonBones Data to fixed the bug.");

            return a;
          }, i.prototype._parseAnimation = function (e) {
            var a = t.BaseObject.borrowObject(t.AnimationData);

            if (a.frameCount = Math.max(i._getNumber(e, t.DataParser.DURATION, 1), 1), a.playTimes = i._getNumber(e, t.DataParser.PLAY_TIMES, 1), a.duration = a.frameCount / this._armature.frameRate, a.fadeInTime = i._getNumber(e, t.DataParser.FADE_IN_TIME, 0), a.scale = i._getNumber(e, t.DataParser.SCALE, 1), a.name = i._getString(e, t.DataParser.NAME, t.DataParser.DEFAULT_NAME), 0 === a.name.length && (a.name = t.DataParser.DEFAULT_NAME), a.frameIntOffset = this._frameIntArray.length, a.frameFloatOffset = this._frameFloatArray.length, a.frameOffset = this._frameArray.length, this._animation = a, t.DataParser.FRAME in e) {
              var r = e[t.DataParser.FRAME],
                  n = r.length;
              if (n > 0) for (var s = 0, o = 0; s < n; ++s) {
                var l = r[s];
                this._parseActionDataInFrame(l, o, null, null), o += i._getNumber(l, t.DataParser.DURATION, 1);
              }
            }

            if (t.DataParser.Z_ORDER in e && (this._animation.zOrderTimeline = this._parseTimeline(e[t.DataParser.Z_ORDER], null, t.DataParser.FRAME, 1, !1, !1, 0, this._parseZOrderFrame)), t.DataParser.BONE in e) for (var h = 0, u = e[t.DataParser.BONE]; h < u.length; h++) {
              var _ = u[h];

              this._parseBoneTimeline(_);
            }
            if (t.DataParser.SURFACE in e) for (var f = 0, c = e[t.DataParser.SURFACE]; f < c.length; f++) {
              _ = c[f];

              var m = i._getString(_, t.DataParser.NAME, "");

              this._surface = this._armature.getBone(m), null !== this._surface && (null !== (C = this._parseTimeline(_, null, t.DataParser.FRAME, 50, !1, !0, 0, this._parseSurfaceFrame)) && this._animation.addSurfaceTimeline(this._surface, C), this._surface = null);
            }
            if (t.DataParser.SLOT in e) for (var p = 0, d = e[t.DataParser.SLOT]; p < d.length; p++) {
              _ = d[p], this._parseSlotTimeline(_);
            }
            if (t.DataParser.FFD in e) for (var y = 0, g = e[t.DataParser.FFD]; y < g.length; y++) {
              _ = g[y];

              var v = i._getString(_, t.DataParser.SKIN, t.DataParser.DEFAULT_NAME),
                  D = i._getString(_, t.DataParser.SLOT, ""),
                  A = i._getString(_, t.DataParser.NAME, "");

              0 === v.length && (v = t.DataParser.DEFAULT_NAME), this._slot = this._armature.getSlot(D), this._mesh = this._armature.getMesh(v, D, A), null !== this._slot && null !== this._mesh && (null !== (C = this._parseTimeline(_, null, t.DataParser.FRAME, 22, !1, !0, 0, this._parseSlotFFDFrame)) && this._animation.addSlotTimeline(this._slot, C), this._slot = null, this._mesh = null);
            }
            if (t.DataParser.IK in e) for (var b = 0, T = e[t.DataParser.IK]; b < T.length; b++) {
              _ = T[b];

              var S = i._getString(_, t.DataParser.NAME, ""),
                  P = this._armature.getConstraint(S);

              null !== P && null !== (C = this._parseTimeline(_, null, t.DataParser.FRAME, 30, !0, !1, 2, this._parseIKConstraintFrame)) && this._animation.addConstraintTimeline(P, C);
            }
            if (t.DataParser.ANIMATION in e) for (var O = 0, x = e[t.DataParser.ANIMATION]; O < x.length; O++) {
              _ = x[O];

              var C,
                  M = i._getString(_, t.DataParser.NAME, "");

              null !== (C = this._parseTimeline(_, null, t.DataParser.FRAME, 40, !0, !1, 2, this._parseAnimationFrame)) && this._animation.addAnimationTimeline(M, C);
            }
            return this._actionFrames.length > 0 && (this._animation.actionTimeline = this._parseTimeline(null, this._actionFrames, "", 0, !1, !1, 0, this._parseActionFrame), this._actionFrames.length = 0), this._animation = null, a;
          }, i.prototype._parseTimeline = function (e, r, n, s, o, l, h, u) {
            if (null !== e && n.length > 0 && n in e && (r = e[n]), null === r) return null;
            var _ = r.length;
            if (0 === _) return null;
            var f = this._frameIntArray.length,
                c = this._frameFloatArray.length,
                m = t.BaseObject.borrowObject(t.TimelineData),
                p = this._timelineArray.length;
            if (this._timelineArray.length += 5 + _, null !== e ? (this._timelineArray[p + 0] = Math.round(100 * i._getNumber(e, t.DataParser.SCALE, 1)), this._timelineArray[p + 1] = Math.round(100 * i._getNumber(e, t.DataParser.OFFSET, 0))) : (this._timelineArray[p + 0] = 100, this._timelineArray[p + 1] = 0), this._timelineArray[p + 2] = _, this._timelineArray[p + 3] = h, this._timelineArray[p + 4] = o ? f - this._animation.frameIntOffset : l ? c - this._animation.frameFloatOffset : 0, this._timeline = m, m.type = s, m.offset = p, 1 === _) m.frameIndicesOffset = -1, this._timelineArray[p + 5 + 0] = u.call(this, r[0], 0, 0) - this._animation.frameOffset;else {
              var d = this._animation.frameCount + 1,
                  y = this._data.frameIndices,
                  g = 0;
              t.DragonBones.webAssembly ? (g = y.size(), y.resize(g + d, 0)) : (g = y.length, y.length += d), m.frameIndicesOffset = g;

              for (var v = 0, D = 0, A = 0, b = 0; v < d; ++v) {
                if (A + b <= v && D < _) {
                  var T = r[D];
                  A = v, b = D === _ - 1 ? this._animation.frameCount - A : T instanceof a ? this._actionFrames[D + 1].frameStart - A : i._getNumber(T, t.DataParser.DURATION, 1), this._timelineArray[p + 5 + D] = u.call(this, T, A, b) - this._animation.frameOffset, D++;
                }

                t.DragonBones.webAssembly ? y.set(g + v, D - 1) : y[g + v] = D - 1;
              }
            }
            return this._timeline = null, m;
          }, i.prototype._parseBoneTimeline = function (e) {
            var a,
                r = this._armature.getBone(i._getString(e, t.DataParser.NAME, ""));

            null !== r && (this._bone = r, this._slot = this._armature.getSlot(this._bone.name), t.DataParser.TRANSLATE_FRAME in e && null !== (a = this._parseTimeline(e, null, t.DataParser.TRANSLATE_FRAME, 11, !1, !0, 2, this._parseBoneTranslateFrame)) && this._animation.addBoneTimeline(r, a), t.DataParser.ROTATE_FRAME in e && null !== (a = this._parseTimeline(e, null, t.DataParser.ROTATE_FRAME, 12, !1, !0, 2, this._parseBoneRotateFrame)) && this._animation.addBoneTimeline(r, a), t.DataParser.SCALE_FRAME in e && null !== (a = this._parseTimeline(e, null, t.DataParser.SCALE_FRAME, 13, !1, !0, 2, this._parseBoneScaleFrame)) && this._animation.addBoneTimeline(r, a), t.DataParser.FRAME in e && null !== (a = this._parseTimeline(e, null, t.DataParser.FRAME, 10, !1, !0, 6, this._parseBoneAllFrame)) && this._animation.addBoneTimeline(r, a), this._bone = null, this._slot = null);
          }, i.prototype._parseSlotTimeline = function (e) {
            var a = this._armature.getSlot(i._getString(e, t.DataParser.NAME, ""));

            if (null !== a) {
              this._slot = a;
              var r;
              null !== (r = t.DataParser.DISPLAY_FRAME in e ? this._parseTimeline(e, null, t.DataParser.DISPLAY_FRAME, 20, !1, !1, 0, this._parseSlotDisplayFrame) : this._parseTimeline(e, null, t.DataParser.FRAME, 20, !1, !1, 0, this._parseSlotDisplayFrame)) && this._animation.addSlotTimeline(a, r);
              var n;
              null !== (n = t.DataParser.COLOR_FRAME in e ? this._parseTimeline(e, null, t.DataParser.COLOR_FRAME, 21, !0, !1, 1, this._parseSlotColorFrame) : this._parseTimeline(e, null, t.DataParser.FRAME, 21, !0, !1, 1, this._parseSlotColorFrame)) && this._animation.addSlotTimeline(a, n), this._slot = null;
            }
          }, i.prototype._parseFrame = function (t, e) {
            var a = this._frameArray.length;
            return this._frameArray.length += 1, this._frameArray[a + 0] = e, a;
          }, i.prototype._parseTweenFrame = function (e, a, r) {
            var n = this._parseFrame(e, a, r);

            if (r > 0) {
              if (t.DataParser.CURVE in e) {
                var s = r + 1;
                this._helpArray.length = s, this._samplingEasingCurve(e[t.DataParser.CURVE], this._helpArray), this._frameArray.length += 2 + this._helpArray.length, this._frameArray[n + 1] = 2, this._frameArray[n + 2] = s;

                for (var o = 0; o < s; ++o) {
                  this._frameArray[n + 3 + o] = Math.round(1e4 * this._helpArray[o]);
                }
              } else {
                var l = -2;
                t.DataParser.TWEEN_EASING in e && (l = i._getNumber(e, t.DataParser.TWEEN_EASING, -2)), -2 === l ? (this._frameArray.length += 1, this._frameArray[n + 1] = 0) : 0 === l ? (this._frameArray.length += 1, this._frameArray[n + 1] = 1) : l < 0 ? (this._frameArray.length += 2, this._frameArray[n + 1] = 3, this._frameArray[n + 2] = Math.round(100 * -l)) : l <= 1 ? (this._frameArray.length += 2, this._frameArray[n + 1] = 4, this._frameArray[n + 2] = Math.round(100 * l)) : (this._frameArray.length += 2, this._frameArray[n + 1] = 5, this._frameArray[n + 2] = Math.round(100 * l - 100));
              }
            } else this._frameArray.length += 1, this._frameArray[n + 1] = 0;
            return n;
          }, i.prototype._parseActionFrame = function (t, e) {
            var a = this._frameArray.length,
                i = t.actions.length;
            this._frameArray.length += 2 + i, this._frameArray[a + 0] = e, this._frameArray[a + 0 + 1] = i;

            for (var r = 0; r < i; ++r) {
              this._frameArray[a + 0 + 2 + r] = t.actions[r];
            }

            return a;
          }, i.prototype._parseZOrderFrame = function (e, a, i) {
            var r = this._parseFrame(e, a, i);

            if (t.DataParser.Z_ORDER in e) {
              var n = e[t.DataParser.Z_ORDER];

              if (n.length > 0) {
                for (var s = this._armature.sortedSlots.length, o = new Array(s - n.length / 2), l = new Array(s), h = 0; h < o.length; ++h) {
                  o[h] = 0;
                }

                for (var u = 0; u < s; ++u) {
                  l[u] = -1;
                }

                for (var _ = 0, f = 0, c = 0, m = n.length; c < m; c += 2) {
                  for (var p = n[c], d = n[c + 1]; _ !== p;) {
                    o[f++] = _++;
                  }

                  l[_ + d] = _++;
                }

                for (; _ < s;) {
                  o[f++] = _++;
                }

                this._frameArray.length += 1 + s, this._frameArray[r + 1] = s;

                for (var y = s; y--;) {
                  -1 === l[y] ? this._frameArray[r + 2 + y] = o[--f] || 0 : this._frameArray[r + 2 + y] = l[y] || 0;
                }

                return r;
              }
            }

            return this._frameArray.length += 1, this._frameArray[r + 1] = 0, r;
          }, i.prototype._parseBoneAllFrame = function (e, a, r) {
            this._helpTransform.identity(), t.DataParser.TRANSFORM in e && this._parseTransform(e[t.DataParser.TRANSFORM], this._helpTransform, 1);
            var n = this._helpTransform.rotation;
            0 !== a && (0 === this._prevClockwise ? n = this._prevRotation + t.Transform.normalizeRadian(n - this._prevRotation) : ((this._prevClockwise > 0 ? n >= this._prevRotation : n <= this._prevRotation) && (this._prevClockwise = this._prevClockwise > 0 ? this._prevClockwise - 1 : this._prevClockwise + 1), n = this._prevRotation + n - this._prevRotation + t.Transform.PI_D * this._prevClockwise)), this._prevClockwise = i._getNumber(e, t.DataParser.TWEEN_ROTATE, 0), this._prevRotation = n;

            var s = this._parseTweenFrame(e, a, r),
                o = this._frameFloatArray.length;

            return this._frameFloatArray.length += 6, this._frameFloatArray[o++] = this._helpTransform.x, this._frameFloatArray[o++] = this._helpTransform.y, this._frameFloatArray[o++] = n, this._frameFloatArray[o++] = this._helpTransform.skew, this._frameFloatArray[o++] = this._helpTransform.scaleX, this._frameFloatArray[o++] = this._helpTransform.scaleY, this._parseActionDataInFrame(e, a, this._bone, this._slot), s;
          }, i.prototype._parseBoneTranslateFrame = function (e, a, r) {
            var n = this._parseTweenFrame(e, a, r),
                s = this._frameFloatArray.length;

            return this._frameFloatArray.length += 2, this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.X, 0), this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.Y, 0), n;
          }, i.prototype._parseBoneRotateFrame = function (e, a, r) {
            var n = i._getNumber(e, t.DataParser.ROTATE, 0) * t.Transform.DEG_RAD;
            0 !== a && (0 === this._prevClockwise ? n = this._prevRotation + t.Transform.normalizeRadian(n - this._prevRotation) : ((this._prevClockwise > 0 ? n >= this._prevRotation : n <= this._prevRotation) && (this._prevClockwise = this._prevClockwise > 0 ? this._prevClockwise - 1 : this._prevClockwise + 1), n = this._prevRotation + n - this._prevRotation + t.Transform.PI_D * this._prevClockwise)), this._prevClockwise = i._getNumber(e, t.DataParser.CLOCK_WISE, 0), this._prevRotation = n;

            var s = this._parseTweenFrame(e, a, r),
                o = this._frameFloatArray.length;

            return this._frameFloatArray.length += 2, this._frameFloatArray[o++] = n, this._frameFloatArray[o++] = i._getNumber(e, t.DataParser.SKEW, 0) * t.Transform.DEG_RAD, s;
          }, i.prototype._parseBoneScaleFrame = function (e, a, r) {
            var n = this._parseTweenFrame(e, a, r),
                s = this._frameFloatArray.length;

            return this._frameFloatArray.length += 2, this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.X, 1), this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.Y, 1), n;
          }, i.prototype._parseSurfaceFrame = function (e, a, r) {
            var n = this._frameFloatArray.length,
                s = this._parseTweenFrame(e, a, r),
                o = e[t.DataParser.VERTICES],
                l = i._getNumber(e, t.DataParser.OFFSET, 0),
                h = this._surface.vertices.length / 2,
                u = 0,
                _ = 0;

            this._frameFloatArray.length += 2 * h;

            for (var f = 0; f < 2 * h; f += 2) {
              u = f < l || f - l >= o.length ? 0 : o[f - l], _ = f + 1 < l || f + 1 - l >= o.length ? 0 : o[f + 1 - l], this._frameFloatArray[n + f] = u, this._frameFloatArray[n + f + 1] = _;
            }

            if (0 === a) {
              var c = this._frameIntArray.length;
              this._frameIntArray.length += 5, this._frameIntArray[c + 0] = 0, this._frameIntArray[c + 1] = this._frameFloatArray.length - n, this._frameIntArray[c + 2] = this._frameFloatArray.length - n, this._frameIntArray[c + 3] = 0, this._frameIntArray[c + 4] = n - this._animation.frameFloatOffset, this._timelineArray[this._timeline.offset + 3] = c - this._animation.frameIntOffset;
            }

            return s;
          }, i.prototype._parseSlotDisplayFrame = function (e, a, r) {
            var n = this._parseFrame(e, a, r);

            return this._frameArray.length += 1, t.DataParser.VALUE in e ? this._frameArray[n + 1] = i._getNumber(e, t.DataParser.VALUE, 0) : this._frameArray[n + 1] = i._getNumber(e, t.DataParser.DISPLAY_INDEX, 0), this._parseActionDataInFrame(e, a, this._slot.parent, this._slot), n;
          }, i.prototype._parseSlotColorFrame = function (e, a, i) {
            var r = this._parseTweenFrame(e, a, i),
                n = -1;

            if (t.DataParser.VALUE in e || t.DataParser.COLOR in e) {
              var s = t.DataParser.VALUE in e ? e[t.DataParser.VALUE] : e[t.DataParser.COLOR];

              for (var o in s) {
                this._parseColorTransform(s, this._helpColorTransform), n = this._intArray.length, this._intArray.length += 8, this._intArray[n++] = Math.round(100 * this._helpColorTransform.alphaMultiplier), this._intArray[n++] = Math.round(100 * this._helpColorTransform.redMultiplier), this._intArray[n++] = Math.round(100 * this._helpColorTransform.greenMultiplier), this._intArray[n++] = Math.round(100 * this._helpColorTransform.blueMultiplier), this._intArray[n++] = Math.round(this._helpColorTransform.alphaOffset), this._intArray[n++] = Math.round(this._helpColorTransform.redOffset), this._intArray[n++] = Math.round(this._helpColorTransform.greenOffset), this._intArray[n++] = Math.round(this._helpColorTransform.blueOffset), n -= 8;
                break;
              }
            }

            n < 0 && (this._defaultColorOffset < 0 && (this._defaultColorOffset = n = this._intArray.length, this._intArray.length += 8, this._intArray[n++] = 100, this._intArray[n++] = 100, this._intArray[n++] = 100, this._intArray[n++] = 100, this._intArray[n++] = 0, this._intArray[n++] = 0, this._intArray[n++] = 0, this._intArray[n++] = 0), n = this._defaultColorOffset);
            var l = this._frameIntArray.length;
            return this._frameIntArray.length += 1, this._frameIntArray[l] = n, r;
          }, i.prototype._parseSlotFFDFrame = function (e, a, r) {
            var n = this._frameFloatArray.length,
                s = this._parseTweenFrame(e, a, r),
                o = t.DataParser.VERTICES in e ? e[t.DataParser.VERTICES] : null,
                l = i._getNumber(e, t.DataParser.OFFSET, 0),
                h = this._intArray[this._mesh.vertices.offset + 0],
                u = this._mesh.parent.name + "_" + this._slot.name + "_" + this._mesh.name,
                _ = this._mesh.vertices.weight,
                f = 0,
                c = 0,
                m = 0,
                p = 0;

            if (null !== _) {
              var d = this._weightSlotPose[u];
              this._helpMatrixA.copyFromArray(d, 0), this._frameFloatArray.length += 2 * _.count, m = _.offset + 2 + _.bones.length;
            } else this._frameFloatArray.length += 2 * h;

            for (var y = 0; y < 2 * h; y += 2) {
              if (null === o ? (f = 0, c = 0) : (f = y < l || y - l >= o.length ? 0 : o[y - l], c = y + 1 < l || y + 1 - l >= o.length ? 0 : o[y + 1 - l]), null !== _) {
                var g = this._weightBonePoses[u],
                    v = this._intArray[m++];
                this._helpMatrixA.transformPoint(f, c, this._helpPoint, !0), f = this._helpPoint.x, c = this._helpPoint.y;

                for (var D = 0; D < v; ++D) {
                  var A = this._intArray[m++];
                  this._helpMatrixB.copyFromArray(g, 7 * A + 1), this._helpMatrixB.invert(), this._helpMatrixB.transformPoint(f, c, this._helpPoint, !0), this._frameFloatArray[n + p++] = this._helpPoint.x, this._frameFloatArray[n + p++] = this._helpPoint.y;
                }
              } else this._frameFloatArray[n + y] = f, this._frameFloatArray[n + y + 1] = c;
            }

            if (0 === a) {
              var b = this._frameIntArray.length;
              this._frameIntArray.length += 5, this._frameIntArray[b + 0] = this._mesh.vertices.offset, this._frameIntArray[b + 1] = this._frameFloatArray.length - n, this._frameIntArray[b + 2] = this._frameFloatArray.length - n, this._frameIntArray[b + 3] = 0, this._frameIntArray[b + 4] = n - this._animation.frameFloatOffset, this._timelineArray[this._timeline.offset + 3] = b - this._animation.frameIntOffset;
            }

            return s;
          }, i.prototype._parseIKConstraintFrame = function (e, a, r) {
            var n = this._parseTweenFrame(e, a, r),
                s = this._frameIntArray.length;

            return this._frameIntArray.length += 2, this._frameIntArray[s++] = i._getBoolean(e, t.DataParser.BEND_POSITIVE, !0) ? 1 : 0, this._frameIntArray[s++] = Math.round(100 * i._getNumber(e, t.DataParser.WEIGHT, 1)), n;
          }, i.prototype._parseAnimationFrame = function (e, a, r) {
            var n = this._parseTweenFrame(e, a, r),
                s = this._frameIntArray.length;

            return this._frameIntArray.length += 2, this._frameIntArray[s++] = i._getNumber(e, t.DataParser.VALUE, 0), this._frameIntArray[s++] = Math.round(100 * i._getNumber(e, t.DataParser.WEIGHT, 1)), n;
          }, i.prototype._parseActionData = function (e, a, r, n) {
            var s = new Array();
            if ("string" == typeof e) (u = t.BaseObject.borrowObject(t.ActionData)).type = a, u.name = e, u.bone = r, u.slot = n, s.push(u);else if (e instanceof Array) for (var o = 0, l = e; o < l.length; o++) {
              var h = l[o],
                  u = t.BaseObject.borrowObject(t.ActionData);

              if (t.DataParser.GOTO_AND_PLAY in h ? (u.type = 0, u.name = i._getString(h, t.DataParser.GOTO_AND_PLAY, "")) : (t.DataParser.TYPE in h && "string" == typeof h[t.DataParser.TYPE] ? u.type = t.DataParser._getActionType(h[t.DataParser.TYPE]) : u.type = i._getNumber(h, t.DataParser.TYPE, a), u.name = i._getString(h, t.DataParser.NAME, "")), t.DataParser.BONE in h) {
                var _ = i._getString(h, t.DataParser.BONE, "");

                u.bone = this._armature.getBone(_);
              } else u.bone = r;

              if (t.DataParser.SLOT in h) {
                var f = i._getString(h, t.DataParser.SLOT, "");

                u.slot = this._armature.getSlot(f);
              } else u.slot = n;

              var c = null;

              if (t.DataParser.INTS in h) {
                null === c && (c = t.BaseObject.borrowObject(t.UserData));

                for (var m = 0, p = h[t.DataParser.INTS]; m < p.length; m++) {
                  var d = p[m];
                  c.addInt(d);
                }
              }

              if (t.DataParser.FLOATS in h) {
                null === c && (c = t.BaseObject.borrowObject(t.UserData));

                for (var y = 0, g = h[t.DataParser.FLOATS]; y < g.length; y++) {
                  d = g[y], c.addFloat(d);
                }
              }

              if (t.DataParser.STRINGS in h) {
                null === c && (c = t.BaseObject.borrowObject(t.UserData));

                for (var v = 0, D = h[t.DataParser.STRINGS]; v < D.length; v++) {
                  d = D[v], c.addString(d);
                }
              }

              u.data = c, s.push(u);
            }
            return s;
          }, i.prototype._parseTransform = function (e, a, r) {
            a.x = i._getNumber(e, t.DataParser.X, 0) * r, a.y = i._getNumber(e, t.DataParser.Y, 0) * r, t.DataParser.ROTATE in e || t.DataParser.SKEW in e ? (a.rotation = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.ROTATE, 0) * t.Transform.DEG_RAD), a.skew = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.SKEW, 0) * t.Transform.DEG_RAD)) : (t.DataParser.SKEW_X in e || t.DataParser.SKEW_Y in e) && (a.rotation = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.SKEW_Y, 0) * t.Transform.DEG_RAD), a.skew = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.SKEW_X, 0) * t.Transform.DEG_RAD) - a.rotation), a.scaleX = i._getNumber(e, t.DataParser.SCALE_X, 1), a.scaleY = i._getNumber(e, t.DataParser.SCALE_Y, 1);
          }, i.prototype._parseColorTransform = function (e, a) {
            a.alphaMultiplier = .01 * i._getNumber(e, t.DataParser.ALPHA_MULTIPLIER, 100), a.redMultiplier = .01 * i._getNumber(e, t.DataParser.RED_MULTIPLIER, 100), a.greenMultiplier = .01 * i._getNumber(e, t.DataParser.GREEN_MULTIPLIER, 100), a.blueMultiplier = .01 * i._getNumber(e, t.DataParser.BLUE_MULTIPLIER, 100), a.alphaOffset = i._getNumber(e, t.DataParser.ALPHA_OFFSET, 0), a.redOffset = i._getNumber(e, t.DataParser.RED_OFFSET, 0), a.greenOffset = i._getNumber(e, t.DataParser.GREEN_OFFSET, 0), a.blueOffset = i._getNumber(e, t.DataParser.BLUE_OFFSET, 0);
          }, i.prototype._parseArray = function () {
            this._intArray.length = 0, this._floatArray.length = 0, this._frameIntArray.length = 0, this._frameFloatArray.length = 0, this._frameArray.length = 0, this._timelineArray.length = 0;
          }, i.prototype._modifyArray = function () {
            this._intArray.length % Int16Array.BYTES_PER_ELEMENT != 0 && this._intArray.push(0), this._frameIntArray.length % Int16Array.BYTES_PER_ELEMENT != 0 && this._frameIntArray.push(0), this._frameArray.length % Int16Array.BYTES_PER_ELEMENT != 0 && this._frameArray.push(0), this._timelineArray.length % Uint16Array.BYTES_PER_ELEMENT != 0 && this._timelineArray.push(0);
            var e = this._intArray.length * Int16Array.BYTES_PER_ELEMENT,
                a = this._floatArray.length * Float32Array.BYTES_PER_ELEMENT,
                i = this._frameIntArray.length * Int16Array.BYTES_PER_ELEMENT,
                r = this._frameFloatArray.length * Float32Array.BYTES_PER_ELEMENT,
                n = this._frameArray.length * Int16Array.BYTES_PER_ELEMENT,
                s = this._timelineArray.length * Uint16Array.BYTES_PER_ELEMENT,
                o = e + a + i + r + n + s;

            if (t.DragonBones.webAssembly) {
              for (var l = t.webAssemblyModule.HEAP16.buffer, h = t.webAssemblyModule._malloc(o), u = new Int16Array(l, h, this._intArray.length), _ = new Float32Array(l, h + e, this._floatArray.length), f = new Int16Array(l, h + e + a, this._frameIntArray.length), c = new Float32Array(l, h + e + a + i, this._frameFloatArray.length), m = new Int16Array(l, h + e + a + i + r, this._frameArray.length), p = new Uint16Array(l, h + e + a + i + r + n, this._timelineArray.length), d = 0, y = this._intArray.length; d < y; ++d) {
                u[d] = this._intArray[d];
              }

              for (d = 0, y = this._floatArray.length; d < y; ++d) {
                _[d] = this._floatArray[d];
              }

              for (d = 0, y = this._frameIntArray.length; d < y; ++d) {
                f[d] = this._frameIntArray[d];
              }

              for (d = 0, y = this._frameFloatArray.length; d < y; ++d) {
                c[d] = this._frameFloatArray[d];
              }

              for (d = 0, y = this._frameArray.length; d < y; ++d) {
                m[d] = this._frameArray[d];
              }

              for (d = 0, y = this._timelineArray.length; d < y; ++d) {
                p[d] = this._timelineArray[d];
              }

              t.webAssemblyModule.setDataBinary(this._data, h, e, a, i, r, n, s);
            } else {
              var g = new ArrayBuffer(o);

              for (u = new Int16Array(g, 0, this._intArray.length), _ = new Float32Array(g, e, this._floatArray.length), f = new Int16Array(g, e + a, this._frameIntArray.length), c = new Float32Array(g, e + a + i, this._frameFloatArray.length), m = new Int16Array(g, e + a + i + r, this._frameArray.length), p = new Uint16Array(g, e + a + i + r + n, this._timelineArray.length), d = 0, y = this._intArray.length; d < y; ++d) {
                u[d] = this._intArray[d];
              }

              for (d = 0, y = this._floatArray.length; d < y; ++d) {
                _[d] = this._floatArray[d];
              }

              for (d = 0, y = this._frameIntArray.length; d < y; ++d) {
                f[d] = this._frameIntArray[d];
              }

              for (d = 0, y = this._frameFloatArray.length; d < y; ++d) {
                c[d] = this._frameFloatArray[d];
              }

              for (d = 0, y = this._frameArray.length; d < y; ++d) {
                m[d] = this._frameArray[d];
              }

              for (d = 0, y = this._timelineArray.length; d < y; ++d) {
                p[d] = this._timelineArray[d];
              }

              this._data.binary = g, this._data.intArray = u, this._data.floatArray = _, this._data.frameIntArray = f, this._data.frameFloatArray = c, this._data.frameArray = m, this._data.timelineArray = p;
            }

            this._defaultColorOffset = -1;
          }, i.prototype.parseDragonBonesData = function (e, a) {
            void 0 === a && (a = 1), console.assert(null != e, "Data error.");

            var r = i._getString(e, t.DataParser.VERSION, ""),
                n = i._getString(e, t.DataParser.COMPATIBLE_VERSION, "");

            if (t.DataParser.DATA_VERSIONS.indexOf(r) >= 0 || t.DataParser.DATA_VERSIONS.indexOf(n) >= 0) {
              var s = t.BaseObject.borrowObject(t.DragonBonesData);

              if (s.version = r, s.name = i._getString(e, t.DataParser.NAME, ""), s.frameRate = i._getNumber(e, t.DataParser.FRAME_RATE, 24), 0 === s.frameRate && (s.frameRate = 24), t.DataParser.ARMATURE in e) {
                this._data = s, this._parseArray(e);

                for (var o = 0, l = e[t.DataParser.ARMATURE]; o < l.length; o++) {
                  var h = l[o];
                  s.addArmature(this._parseArmature(h, a));
                }

                this._data.binary || this._modifyArray(), t.DataParser.STAGE in e ? s.stage = s.getArmature(i._getString(e, t.DataParser.STAGE, "")) : s.armatureNames.length > 0 && (s.stage = s.getArmature(s.armatureNames[0])), this._data = null;
              }

              return t.DataParser.TEXTURE_ATLAS in e && (this._rawTextureAtlases = e[t.DataParser.TEXTURE_ATLAS]), s;
            }

            return console.assert(!1, "Nonsupport data version: " + r + "\nPlease convert DragonBones data to support version.\nRead more: https://github.com/DragonBones/Tools/"), null;
          }, i.prototype.parseTextureAtlasData = function (e, a, r) {
            if (void 0 === r && (r = 1), console.assert(void 0 !== e), null === e) {
              if (null === this._rawTextureAtlases || 0 === this._rawTextureAtlases.length) return !1;
              var n = this._rawTextureAtlases[this._rawTextureAtlasIndex++];
              return this.parseTextureAtlasData(n, a, r), this._rawTextureAtlasIndex >= this._rawTextureAtlases.length && (this._rawTextureAtlasIndex = 0, this._rawTextureAtlases = null), !0;
            }

            if (a.width = i._getNumber(e, t.DataParser.WIDTH, 0), a.height = i._getNumber(e, t.DataParser.HEIGHT, 0), a.scale = 1 === r ? 1 / i._getNumber(e, t.DataParser.SCALE, 1) : r, a.name = i._getString(e, t.DataParser.NAME, ""), a.imagePath = i._getString(e, t.DataParser.IMAGE_PATH, ""), t.DataParser.SUB_TEXTURE in e) for (var s = e[t.DataParser.SUB_TEXTURE], o = 0, l = s.length; o < l; ++o) {
              var h = s[o],
                  u = a.createTexture();
              u.rotated = i._getBoolean(h, t.DataParser.ROTATED, !1), u.name = i._getString(h, t.DataParser.NAME, ""), u.region.x = i._getNumber(h, t.DataParser.X, 0), u.region.y = i._getNumber(h, t.DataParser.Y, 0), u.region.width = i._getNumber(h, t.DataParser.WIDTH, 0), u.region.height = i._getNumber(h, t.DataParser.HEIGHT, 0);

              var _ = i._getNumber(h, t.DataParser.FRAME_WIDTH, -1),
                  f = i._getNumber(h, t.DataParser.FRAME_HEIGHT, -1);

              _ > 0 && f > 0 && (u.frame = t.TextureData.createRectangle(), u.frame.x = i._getNumber(h, t.DataParser.FRAME_X, 0), u.frame.y = i._getNumber(h, t.DataParser.FRAME_Y, 0), u.frame.width = _, u.frame.height = f), a.addTexture(u);
            }
            return !0;
          }, i.getInstance = function () {
            return null === i._objectDataParserInstance && (i._objectDataParserInstance = new i()), i._objectDataParserInstance;
          }, i._objectDataParserInstance = null, i;
        }(t.DataParser);

        t.ObjectDataParser = e;

        var a = function a() {
          this.frameStart = 0, this.actions = [];
        };

        t.ActionFrame = a;
      }(G || (G = {})), function (t) {
        var e = function (e) {
          function a() {
            return null !== e && e.apply(this, arguments) || this;
          }

          return X(a, e), a.prototype._inRange = function (t, e, a) {
            return e <= t && t <= a;
          }, a.prototype._decodeUTF8 = function (t) {
            for (var e, a = 0, i = "", r = 0, n = 0, s = 0, o = 0; t.length > a;) {
              var l = t[a++];
              if (-1 === l) e = 0 !== n ? 65533 : -1;else if (0 === n) this._inRange(l, 0, 127) ? e = l : (this._inRange(l, 194, 223) ? (n = 1, o = 128, r = l - 192) : this._inRange(l, 224, 239) ? (n = 2, o = 2048, r = l - 224) : this._inRange(l, 240, 244) && (n = 3, o = 65536, r = l - 240), r *= Math.pow(64, n), e = null);else if (this._inRange(l, 128, 191)) {
                if (s += 1, r += (l - 128) * Math.pow(64, n - s), s !== n) e = null;else {
                  var h = r,
                      u = o;
                  r = 0, n = 0, s = 0, o = 0, e = this._inRange(h, u, 1114111) && !this._inRange(h, 55296, 57343) ? h : l;
                }
              } else r = 0, n = 0, s = 0, o = 0, a--, e = l;
              null !== e && -1 !== e && (e <= 65535 ? e > 0 && (i += String.fromCharCode(e)) : (e -= 65536, i += String.fromCharCode(55296 + (e >> 10 & 1023)), i += String.fromCharCode(56320 + (1023 & e))));
            }

            return i;
          }, a.prototype._getUTF16Key = function (t) {
            for (var e = 0, a = t.length; e < a; ++e) {
              if (t.charCodeAt(e) > 255) return encodeURI(t);
            }

            return t;
          }, a.prototype._parseBinaryTimeline = function (e, a, i) {
            void 0 === i && (i = null);
            var r = null !== i ? i : t.BaseObject.borrowObject(t.TimelineData);
            r.type = e, r.offset = a, this._timeline = r;
            var n = this._timelineArrayBuffer[r.offset + 2];
            if (1 === n) r.frameIndicesOffset = -1;else {
              var s = 0,
                  o = this._animation.frameCount + 1,
                  l = this._data.frameIndices;
              t.DragonBones.webAssembly ? (s = l.size(), l.resize(s + o, 0)) : (s = l.length, l.length += o), r.frameIndicesOffset = s;

              for (var h = 0, u = 0, _ = 0, f = 0; h < o; ++h) {
                _ + f <= h && u < n && (_ = this._frameArrayBuffer[this._animation.frameOffset + this._timelineArrayBuffer[r.offset + 5 + u]], f = u === n - 1 ? this._animation.frameCount - _ : this._frameArrayBuffer[this._animation.frameOffset + this._timelineArrayBuffer[r.offset + 5 + u + 1]] - _, u++), t.DragonBones.webAssembly ? l.set(s + h, u - 1) : l[s + h] = u - 1;
              }
            }
            return this._timeline = null, r;
          }, a.prototype._parseVertices = function (e, a) {
            a.offset = e[t.DataParser.OFFSET];
            var i = this._intArrayBuffer[a.offset + 3];

            if (i >= 0) {
              var r = t.BaseObject.borrowObject(t.WeightData),
                  n = this._intArrayBuffer[a.offset + 0],
                  s = this._intArrayBuffer[i + 0];
              r.offset = i;

              for (var o = 0; o < s; ++o) {
                var l = this._intArrayBuffer[i + 2 + o];
                r.addBone(this._rawBones[l]);
              }

              for (var h = i + 2 + s, u = 0, _ = (o = 0, n); o < _; ++o) {
                var f = this._intArrayBuffer[h++];
                u += f, h += f;
              }

              r.count = u, a.weight = r;
            }
          }, a.prototype._parseMesh = function (t, e) {
            this._parseVertices(t, e.vertices);
          }, a.prototype._parsePath = function (t, e) {
            this._parseVertices(t, e.vertices);
          }, a.prototype._parseAnimation = function (e) {
            var a = t.BaseObject.borrowObject(t.AnimationData);
            a.frameCount = Math.max(t.ObjectDataParser._getNumber(e, t.DataParser.DURATION, 1), 1), a.playTimes = t.ObjectDataParser._getNumber(e, t.DataParser.PLAY_TIMES, 1), a.duration = a.frameCount / this._armature.frameRate, a.fadeInTime = t.ObjectDataParser._getNumber(e, t.DataParser.FADE_IN_TIME, 0), a.scale = t.ObjectDataParser._getNumber(e, t.DataParser.SCALE, 1), a.name = t.ObjectDataParser._getString(e, t.DataParser.NAME, t.DataParser.DEFAULT_NAME), 0 === a.name.length && (a.name = t.DataParser.DEFAULT_NAME);
            var i = e[t.DataParser.OFFSET];

            if (a.frameIntOffset = i[0], a.frameFloatOffset = i[1], a.frameOffset = i[2], this._animation = a, t.DataParser.ACTION in e && (a.actionTimeline = this._parseBinaryTimeline(0, e[t.DataParser.ACTION])), t.DataParser.Z_ORDER in e && (a.zOrderTimeline = this._parseBinaryTimeline(1, e[t.DataParser.Z_ORDER])), t.DataParser.BONE in e) {
              var r = e[t.DataParser.BONE];

              for (var n in r) {
                var s = r[n];
                t.DragonBones.webAssembly && (n = this._getUTF16Key(n));

                var o = this._armature.getBone(n);

                if (null !== o) for (var l = 0, h = s.length; l < h; l += 2) {
                  var u = s[l],
                      _ = s[l + 1],
                      f = this._parseBinaryTimeline(u, _);

                  this._animation.addBoneTimeline(o, f);
                }
              }
            }

            if (t.DataParser.SURFACE in e) for (var n in r = e[t.DataParser.SURFACE]) {
              s = r[n], t.DragonBones.webAssembly && (n = this._getUTF16Key(n));

              var c = this._armature.getBone(n);

              if (null !== c) for (l = 0, h = s.length; l < h; l += 2) {
                u = s[l], _ = s[l + 1], f = this._parseBinaryTimeline(u, _), this._animation.addSurfaceTimeline(c, f);
              }
            }
            if (t.DataParser.SLOT in e) for (var n in r = e[t.DataParser.SLOT]) {
              s = r[n], t.DragonBones.webAssembly && (n = this._getUTF16Key(n));

              var m = this._armature.getSlot(n);

              if (null !== m) for (l = 0, h = s.length; l < h; l += 2) {
                u = s[l], _ = s[l + 1], f = this._parseBinaryTimeline(u, _), this._animation.addSlotTimeline(m, f);
              }
            }
            if (t.DataParser.CONSTRAINT in e) for (var n in r = e[t.DataParser.CONSTRAINT]) {
              s = r[n], t.DragonBones.webAssembly && (n = this._getUTF16Key(n));

              var p = this._armature.getConstraint(n);

              if (null !== p) for (l = 0, h = s.length; l < h; l += 2) {
                u = s[l], _ = s[l + 1], f = this._parseBinaryTimeline(u, _), this._animation.addConstraintTimeline(p, f);
              }
            }
            if (t.DataParser.ANIMATION in e) for (var n in r = e[t.DataParser.ANIMATION]) {
              for (s = r[n], t.DragonBones.webAssembly && (n = this._getUTF16Key(n)), l = 0, h = s.length; l < h; l += 2) {
                u = s[l], _ = s[l + 1], f = this._parseBinaryTimeline(u, _), this._animation.addAnimationTimeline(n, f);
              }
            }
            return this._animation = null, a;
          }, a.prototype._parseArray = function (e) {
            var a = e[t.DataParser.OFFSET],
                i = a[1],
                r = a[3],
                n = a[5],
                s = a[7],
                o = a[9],
                l = a[11],
                h = new Int16Array(this._binary, this._binaryOffset + a[0], i / Int16Array.BYTES_PER_ELEMENT),
                u = new Float32Array(this._binary, this._binaryOffset + a[2], r / Float32Array.BYTES_PER_ELEMENT),
                _ = new Int16Array(this._binary, this._binaryOffset + a[4], n / Int16Array.BYTES_PER_ELEMENT),
                f = new Float32Array(this._binary, this._binaryOffset + a[6], s / Float32Array.BYTES_PER_ELEMENT),
                c = new Int16Array(this._binary, this._binaryOffset + a[8], o / Int16Array.BYTES_PER_ELEMENT),
                m = new Uint16Array(this._binary, this._binaryOffset + a[10], l / Uint16Array.BYTES_PER_ELEMENT);

            if (t.DragonBones.webAssembly) {
              for (var p = i + r + n + s + o + l, d = t.webAssemblyModule._malloc(p), y = new Uint8Array(this._binary, this._binaryOffset, p / Uint8Array.BYTES_PER_ELEMENT), g = new Uint8Array(t.webAssemblyModule.HEAP16.buffer, d, y.length), v = 0, D = y.length; v < D; ++v) {
                g[v] = y[v];
              }

              t.webAssemblyModule.setDataBinary(this._data, d, i, r, n, s, o, l), this._intArrayBuffer = h, this._floatArrayBuffer = u, this._frameIntArrayBuffer = _, this._frameFloatArrayBuffer = f, this._frameArrayBuffer = c, this._timelineArrayBuffer = m;
            } else this._data.binary = this._binary, this._data.intArray = this._intArrayBuffer = h, this._data.floatArray = this._floatArrayBuffer = u, this._data.frameIntArray = this._frameIntArrayBuffer = _, this._data.frameFloatArray = this._frameFloatArrayBuffer = f, this._data.frameArray = this._frameArrayBuffer = c, this._data.timelineArray = this._timelineArrayBuffer = m;
          }, a.prototype.parseDragonBonesData = function (t, a) {
            void 0 === a && (a = 1), console.assert(null != t && t instanceof ArrayBuffer, "Data error.");
            var i = new Uint8Array(t, 0, 8);
            if (i[0] !== "D".charCodeAt(0) || i[1] !== "B".charCodeAt(0) || i[2] !== "D".charCodeAt(0) || i[3] !== "T".charCodeAt(0)) return console.assert(!1, "Nonsupport data."), null;

            var r = new Uint32Array(t, 8, 1)[0],
                n = new Uint8Array(t, 12, r),
                s = this._decodeUTF8(n),
                o = JSON.parse(s);

            return this._binaryOffset = 12 + r, this._binary = t, e.prototype.parseDragonBonesData.call(this, o, a);
          }, a.getInstance = function () {
            return null === a._binaryDataParserInstance && (a._binaryDataParserInstance = new a()), a._binaryDataParserInstance;
          }, a._binaryDataParserInstance = null, a;
        }(t.ObjectDataParser);

        t.BinaryDataParser = e;
      }(G || (G = {})), function (t) {
        var e = function () {
          function e(a) {
            void 0 === a && (a = null), this.autoSearch = !1, this._dragonBonesDataMap = {}, this._textureAtlasDataMap = {}, this._dragonBones = null, this._dataParser = null, null === e._objectParser && (e._objectParser = new t.ObjectDataParser()), null === e._binaryParser && (e._binaryParser = new t.BinaryDataParser()), this._dataParser = null !== a ? a : e._objectParser;
          }

          return e.prototype._isSupportMesh = function () {
            return !0;
          }, e.prototype._getTextureData = function (t, e) {
            if (t in this._textureAtlasDataMap) for (var a = 0, i = this._textureAtlasDataMap[t]; a < i.length; a++) {
              if (null !== (l = (o = i[a]).getTexture(e))) return l;
            }
            if (this.autoSearch) for (var r in this._textureAtlasDataMap) {
              for (var n = 0, s = this._textureAtlasDataMap[r]; n < s.length; n++) {
                var o, l;
                if ((o = s[n]).autoSearch && null !== (l = o.getTexture(e))) return l;
              }
            }
            return null;
          }, e.prototype._fillBuildArmaturePackage = function (t, e, a, i, r) {
            var n = null,
                s = null;
            if (e.length > 0 && e in this._dragonBonesDataMap && (s = (n = this._dragonBonesDataMap[e]).getArmature(a)), null === s && (0 === e.length || this.autoSearch)) for (var o in this._dragonBonesDataMap) {
              if (n = this._dragonBonesDataMap[o], (0 === e.length || n.autoSearch) && null !== (s = n.getArmature(a))) {
                e = o;
                break;
              }
            }

            if (null !== s) {
              if (t.dataName = e, t.textureAtlasName = r, t.data = n, t.armature = s, t.skin = null, i.length > 0 && (t.skin = s.getSkin(i), null === t.skin && this.autoSearch)) for (var o in this._dragonBonesDataMap) {
                var l = this._dragonBonesDataMap[o].getArmature(i);

                if (null !== l) {
                  t.skin = l.defaultSkin;
                  break;
                }
              }
              return null === t.skin && (t.skin = s.defaultSkin), !0;
            }

            return !1;
          }, e.prototype._buildBones = function (e, a) {
            for (var i = 0, r = e.armature.sortedBones; i < r.length; i++) {
              var n = r[i];
              t.BaseObject.borrowObject(0 === n.type ? t.Bone : t.Surface).init(n, a);
            }
          }, e.prototype._buildSlots = function (e, a) {
            var i = e.skin,
                r = e.armature.defaultSkin;

            if (null !== i && null !== r) {
              var n = {};

              for (var s in r.displays) {
                var o = r.getDisplays(s);
                n[s] = o;
              }

              if (i !== r) for (var s in i.displays) {
                o = i.getDisplays(s), n[s] = o;
              }

              for (var l = 0, h = e.armature.sortedSlots; l < h.length; l++) {
                var u = h[l],
                    _ = u.name in n ? n[u.name] : null,
                    f = this._buildSlot(e, u, a);

                if (f.rawDisplayDatas = _, null !== _) {
                  for (var c = new Array(), m = 0, p = t.DragonBones.webAssembly ? _.size() : _.length; m < p; ++m) {
                    var d = t.DragonBones.webAssembly ? _.get(m) : _[m];
                    null !== d ? c.push(this._getSlotDisplay(e, d, null, f)) : c.push(null);
                  }

                  f._setDisplayList(c);
                }

                f._setDisplayIndex(u.displayIndex, !0);
              }
            }
          }, e.prototype._buildConstraints = function (e, a) {
            var i = e.armature.constraints;

            for (var r in i) {
              var n = i[r];

              switch (n.type) {
                case 0:
                  var s = t.BaseObject.borrowObject(t.IKConstraint);
                  s.init(n, a), a._addConstraint(s);
                  break;

                case 1:
                  var o = t.BaseObject.borrowObject(t.PathConstraint);
                  o.init(n, a), a._addConstraint(o);
                  break;

                default:
                  var l = t.BaseObject.borrowObject(t.IKConstraint);
                  l.init(n, a), a._addConstraint(l);
              }
            }
          }, e.prototype._buildChildArmature = function (t, e, a) {
            return this.buildArmature(a.path, null !== t ? t.dataName : "", "", null !== t ? t.textureAtlasName : "");
          }, e.prototype._getSlotDisplay = function (e, a, i, r) {
            var n = null !== e ? e.dataName : a.parent.parent.parent.name,
                s = null;

            switch (a.type) {
              case 0:
                var o = a;
                null !== e && e.textureAtlasName.length > 0 && (o.texture = this._getTextureData(e.textureAtlasName, a.path)), null === o.texture && (o.texture = this._getTextureData(n, a.path)), s = null !== i && 2 === i.type && this._isSupportMesh() ? r.meshDisplay : r.rawDisplay;
                break;

              case 2:
                var l = a;
                null !== e && e.textureAtlasName.length > 0 && (l.texture = this._getTextureData(e.textureAtlasName, l.path)), null === l.texture && (l.texture = this._getTextureData(n, l.path)), s = this._isSupportMesh() ? r.meshDisplay : r.rawDisplay;
                break;

              case 1:
                var h = a,
                    u = this._buildChildArmature(e, r, a);

                if (null !== u) {
                  if (u.inheritAnimation = h.inheritAnimation, !u.inheritAnimation) {
                    var _ = h.actions.length > 0 ? h.actions : u.armatureData.defaultActions;

                    if (_.length > 0) for (var f = 0, c = _; f < c.length; f++) {
                      var m = c[f],
                          p = t.BaseObject.borrowObject(t.EventObject);
                      t.EventObject.actionDataToInstance(m, p, r.armature), p.slot = r, r.armature._bufferAction(p, !1);
                    } else u.animation.play();
                  }

                  h.armature = u.armatureData;
                }

                s = u;
            }

            return s;
          }, e.prototype.parseDragonBonesData = function (t, a, i) {
            void 0 === a && (a = null), void 0 === i && (i = 1);

            for (var r = t instanceof ArrayBuffer ? e._binaryParser : this._dataParser, n = r.parseDragonBonesData(t, i);;) {
              var s = this._buildTextureAtlasData(null, null);

              if (!r.parseTextureAtlasData(null, s, i)) {
                s.returnToPool();
                break;
              }

              this.addTextureAtlasData(s, a);
            }

            return null !== n && this.addDragonBonesData(n, a), n;
          }, e.prototype.parseTextureAtlasData = function (t, e, a, i) {
            void 0 === a && (a = null), void 0 === i && (i = 1);

            var r = this._buildTextureAtlasData(null, null);

            return this._dataParser.parseTextureAtlasData(t, r, i), this._buildTextureAtlasData(r, e || null), this.addTextureAtlasData(r, a), r;
          }, e.prototype.updateTextureAtlasData = function (t, e) {
            var a = this.getTextureAtlasData(t);
            if (null !== a) for (var i = 0, r = a.length; i < r; ++i) {
              i < e.length && this._buildTextureAtlasData(a[i], e[i]);
            }
          }, e.prototype.getDragonBonesData = function (t) {
            return t in this._dragonBonesDataMap ? this._dragonBonesDataMap[t] : null;
          }, e.prototype.addDragonBonesData = function (t, e) {
            if (void 0 === e && (e = null), (e = null !== e ? e : t.name) in this._dragonBonesDataMap) {
              if (this._dragonBonesDataMap[e] === t) return;
              console.warn("Can not add same name data: " + e);
            } else this._dragonBonesDataMap[e] = t;
          }, e.prototype.removeDragonBonesData = function (t, e) {
            void 0 === e && (e = !0), t in this._dragonBonesDataMap && (e && this._dragonBones.bufferObject(this._dragonBonesDataMap[t]), delete this._dragonBonesDataMap[t]);
          }, e.prototype.getTextureAtlasData = function (t) {
            return t in this._textureAtlasDataMap ? this._textureAtlasDataMap[t] : null;
          }, e.prototype.addTextureAtlasData = function (t, e) {
            void 0 === e && (e = null);
            var a = (e = null !== e ? e : t.name) in this._textureAtlasDataMap ? this._textureAtlasDataMap[e] : this._textureAtlasDataMap[e] = [];
            a.indexOf(t) < 0 && a.push(t);
          }, e.prototype.removeTextureAtlasData = function (t, e) {
            if (void 0 === e && (e = !0), t in this._textureAtlasDataMap) {
              var a = this._textureAtlasDataMap[t];
              if (e) for (var i = 0, r = a; i < r.length; i++) {
                var n = r[i];

                this._dragonBones.bufferObject(n);
              }
              delete this._textureAtlasDataMap[t];
            }
          }, e.prototype.getArmatureData = function (t, e) {
            void 0 === e && (e = "");
            var i = new a();
            return this._fillBuildArmaturePackage(i, e, t, "", "") ? i.armature : null;
          }, e.prototype.clear = function (t) {
            for (var e in void 0 === t && (t = !0), this._dragonBonesDataMap) {
              t && this._dragonBones.bufferObject(this._dragonBonesDataMap[e]), delete this._dragonBonesDataMap[e];
            }

            for (var e in this._textureAtlasDataMap) {
              if (t) for (var a = 0, i = this._textureAtlasDataMap[e]; a < i.length; a++) {
                var r = i[a];

                this._dragonBones.bufferObject(r);
              }
              delete this._textureAtlasDataMap[e];
            }
          }, e.prototype.buildArmature = function (t, e, i, r) {
            void 0 === e && (e = ""), void 0 === i && (i = ""), void 0 === r && (r = "");
            var n = new a();
            if (!this._fillBuildArmaturePackage(n, e || "", t, i || "", r || "")) return console.warn("No armature data: " + t + ", " + (null !== e ? e : "")), null;

            var s = this._buildArmature(n);

            return this._buildBones(n, s), this._buildSlots(n, s), this._buildConstraints(n, s), s.invalidUpdate(null, !0), s.advanceTime(0), s;
          }, e.prototype.replaceDisplay = function (e, a, i) {
            void 0 === i && (i = -1), i < 0 && (i = e.displayIndex), i < 0 && (i = 0), e.replaceDisplayData(a, i);
            var r = e.displayList;

            if (r.length <= i) {
              r.length = i + 1;

              for (var n = 0, s = r.length; n < s; ++n) {
                r[n] || (r[n] = null);
              }
            }

            if (null !== a) {
              var o = e.rawDisplayDatas,
                  l = null;
              o && (t.DragonBones.webAssembly ? i < o.size() && (l = o.get(i)) : i < o.length && (l = o[i])), r[i] = this._getSlotDisplay(null, a, l, e);
            } else r[i] = null;

            e.displayList = r;
          }, e.prototype.replaceSlotDisplay = function (t, e, a, i, r, n) {
            void 0 === n && (n = -1);
            var s = this.getArmatureData(e, t || "");
            if (!s || !s.defaultSkin) return !1;
            var o = s.defaultSkin.getDisplay(a, i);
            return !!o && (this.replaceDisplay(r, o, n), !0);
          }, e.prototype.replaceSlotDisplayList = function (e, a, i, r) {
            var n = this.getArmatureData(a, e || "");
            if (!n || !n.defaultSkin) return !1;
            var s = n.defaultSkin.getDisplays(i);
            if (!s) return !1;

            for (var o = 0, l = 0, h = t.DragonBones.webAssembly ? s.size() : s.length; l < h; ++l) {
              var u = t.DragonBones.webAssembly ? s.get(l) : s[l];
              this.replaceDisplay(r, u, o++);
            }

            return !0;
          }, e.prototype.replaceSkin = function (e, a, i, r) {
            void 0 === i && (i = !1), void 0 === r && (r = null);

            for (var n = !1, s = a.parent.defaultSkin, o = 0, l = e.getSlots(); o < l.length; o++) {
              var h = l[o];

              if (!(null !== r && r.indexOf(h.name) >= 0)) {
                var u = a.getDisplays(h.name);

                if (u || (null !== s && a !== s && (u = s.getDisplays(h.name)), u)) {
                  var _ = t.DragonBones.webAssembly ? u.size() : u.length,
                      f = h.displayList;

                  f.length = _;

                  for (var c = 0, m = _; c < m; ++c) {
                    var p = t.DragonBones.webAssembly ? u.get(c) : u[c];
                    f[c] = null !== p ? this._getSlotDisplay(null, p, null, h) : null;
                  }

                  n = !0, h.rawDisplayDatas = u, h.displayList = f;
                } else i && (h.rawDisplayDatas = null, h.displayList = []);
              }
            }

            return n;
          }, e.prototype.replaceAnimation = function (e, a, i) {
            void 0 === i && (i = !0);
            var r = a.defaultSkin;
            if (null === r) return !1;
            if (i) e.animation.animations = a.animations;else {
              var n = e.animation.animations,
                  s = {};

              for (var o in n) {
                s[o] = n[o];
              }

              for (var o in a.animations) {
                s[o] = a.animations[o];
              }

              e.animation.animations = s;
            }

            for (var l = 0, h = e.getSlots(); l < h.length; l++) {
              for (var u = h[l], _ = 0, f = 0, c = u.displayList; f < c.length; f++) {
                var m = c[f];

                if (m instanceof t.Armature) {
                  var p = r.getDisplays(u.name);

                  if (null !== p && _ < (t.DragonBones.webAssembly ? p.size() : p.length)) {
                    var d = t.DragonBones.webAssembly ? p.get(_) : p[_];

                    if (null !== d && 1 === d.type) {
                      var y = this.getArmatureData(d.path, d.parent.parent.parent.name);
                      y && this.replaceAnimation(m, y, i);
                    }
                  }
                }

                _++;
              }
            }

            return !0;
          }, e.prototype.getAllDragonBonesData = function () {
            return this._dragonBonesDataMap;
          }, e.prototype.getAllTextureAtlasData = function () {
            return this._textureAtlasDataMap;
          }, Object.defineProperty(e.prototype, "clock", {
            get: function get() {
              return this._dragonBones.clock;
            },
            enumerable: !0,
            configurable: !0
          }), Object.defineProperty(e.prototype, "dragonBones", {
            get: function get() {
              return this._dragonBones;
            },
            enumerable: !0,
            configurable: !0
          }), e.prototype.changeSkin = function (t, e, a) {
            return void 0 === a && (a = null), this.replaceSkin(t, e, !1, a);
          }, e.prototype.copyAnimationsToArmature = function (t, e, a, i, r) {
            void 0 === i && (i = ""), void 0 === r && (r = !0);
            var n = this.getArmatureData(e, i);
            return !!n && this.replaceAnimation(t, n, r);
          }, e._objectParser = null, e._binaryParser = null, e;
        }();

        t.BaseFactory = e;

        var a = function a() {
          this.dataName = "", this.textureAtlasName = "", this.skin = null;
        };

        t.BuildArmaturePackage = a;
      }(G || (G = {})), function (t) {
        t.BinaryOffset = {
          WeigthBoneCount: 0,
          WeigthFloatOffset: 1,
          WeigthBoneIndices: 2,
          MeshVertexCount: 0,
          MeshTriangleCount: 1,
          MeshFloatOffset: 2,
          MeshWeightOffset: 3,
          MeshVertexIndices: 4,
          TimelineScale: 0,
          TimelineOffset: 1,
          TimelineKeyFrameCount: 2,
          TimelineFrameValueCount: 3,
          TimelineFrameValueOffset: 4,
          TimelineFrameOffset: 5,
          FramePosition: 0,
          FrameTweenType: 1,
          FrameTweenEasingOrCurveSampleCount: 2,
          FrameCurveSamples: 3,
          DeformMeshOffset: 0,
          DeformCount: 1,
          DeformValueCount: 2,
          DeformValueOffset: 3,
          DeformFloatOffset: 4
        }, t.ArmatureType = {
          Armature: 0,
          MovieClip: 1,
          Stage: 2
        }, t.BoneType = {
          Bone: 0,
          Surface: 1
        }, t.DisplayType = {
          Image: 0,
          Armature: 1,
          Mesh: 2,
          BoundingBox: 3
        }, t.BoundingBoxType = {
          Rectangle: 0,
          Ellipse: 1,
          Polygon: 2
        }, t.ActionType = {
          Play: 0,
          Stop: 1,
          GotoAndPlay: 2,
          GotoAndStop: 3,
          FadeIn: 4,
          FadeOut: 5,
          Frame: 10,
          Sound: 11
        }, t.BlendMode = {
          Normal: 0,
          Add: 1,
          Alpha: 2,
          Darken: 3,
          Difference: 4,
          Erase: 5,
          HardLight: 6,
          Invert: 7,
          Layer: 8,
          Lighten: 9,
          Multiply: 10,
          Overlay: 11,
          Screen: 12,
          Subtract: 13
        }, t.TweenType = {
          None: 0,
          Line: 1,
          Curve: 2,
          QuadIn: 3,
          QuadOut: 4,
          QuadInOut: 5
        }, t.TimelineType = {
          Action: 0,
          ZOrder: 1,
          BoneAll: 10,
          BoneTranslate: 11,
          BoneRotate: 12,
          BoneScale: 13,
          Surface: 50,
          SlotDisplay: 20,
          SlotColor: 21,
          SlotFFD: 22,
          IKConstraint: 30,
          AnimationTime: 40,
          AnimationWeight: 41
        };
      }(G || (G = {}));

      var H,
          W,
          z,
          K,
          J,
          q,
          Z,
          Q,
          $,
          tt,
          et,
          at,
          it,
          rt = G.DragonBones,
          nt = G.BaseObject,
          st = G.Matrix,
          ot = G.Transform,
          lt = G.ColorTransform,
          ht = G.Point,
          ut = G.Rectangle,
          _t = G.UserData,
          ft = G.ActionData,
          ct = G.DragonBonesData,
          mt = G.ArmatureData,
          pt = G.BoneData,
          dt = G.SurfaceData,
          yt = G.SlotData,
          gt = G.ConstraintData,
          vt = G.IKConstraintData,
          Dt = G.PathConstraintData,
          At = G.CanvasData,
          bt = G.SkinData,
          Tt = G.VerticesData,
          St = G.DisplayData,
          Pt = G.ImageDisplayData,
          Ot = G.ArmatureDisplayData,
          xt = G.MeshDisplayData,
          Ct = G.BoundingBoxDisplayData,
          Mt = G.PathDisplayData,
          Bt = G.WeightData,
          Et = G.BoundingBoxData,
          It = G.RectangleBoundingBoxData,
          wt = G.EllipseBoundingBoxData,
          Ft = G.PolygonBoundingBoxData,
          Rt = G.AnimationData,
          Nt = G.TimelineData,
          kt = G.AnimationConfig,
          jt = G.TextureAtlasData,
          Lt = G.TextureData,
          Ut = G.DeformVertices,
          Vt = G.Armature,
          Yt = G.TransformObject,
          Xt = G.Bone,
          Gt = G.Surface,
          Ht = G.Slot,
          Wt = G.Constraint,
          zt = G.IKConstraint,
          Kt = G.PathConstraint,
          Jt = G.WorldClock,
          qt = G.Animation,
          Zt = G.AnimationState,
          Qt = G.BonePose,
          $t = G.BlendState,
          te = G.TimelineState,
          ee = G.TweenTimelineState,
          ae = G.BoneTimelineState,
          ie = G.SlotTimelineState,
          re = G.ConstraintTimelineState,
          ne = G.ActionTimelineState,
          se = G.ZOrderTimelineState,
          oe = G.BoneAllTimelineState,
          le = G.BoneTranslateTimelineState,
          he = G.BoneRotateTimelineState,
          ue = G.BoneScaleTimelineState,
          _e = G.SurfaceTimelineState,
          fe = G.SlotDislayTimelineState,
          ce = G.SlotColorTimelineState,
          me = G.DeformTimelineState,
          pe = G.IKConstraintTimelineState,
          de = G.AnimationTimelineState,
          ye = G.EventObject,
          ge = G.DataParser,
          ve = G.ObjectDataParser,
          De = G.ActionFrame,
          Ae = G.BinaryDataParser,
          be = G.BaseFactory,
          Te = G.BuildArmaturePackage,
          Se = G.BinaryOffset,
          Pe = G.ArmatureType,
          Oe = G.BoneType,
          xe = G.DisplayType,
          Ce = G.BoundingBoxType,
          Me = G.ActionType,
          Be = G.BlendMode,
          Ee = G.TweenType,
          Ie = G.TimelineType,
          we = e("dragonBones.CCTextureAtlasData")(H = function (t) {
        function e() {
          for (var e, a = arguments.length, i = new Array(a), r = 0; r < a; r++) {
            i[r] = arguments[r];
          }

          return (e = t.call.apply(t, [this].concat(i)) || this)._renderTexture = null, e;
        }

        a(e, t), e.toString = function () {
          return "[class dragonBones.CCTextureAtlasData]";
        };
        var n = e.prototype;
        return n.createTexture = function () {
          return nt.borrowObject(Fe);
        }, n._onClear = function () {
          t.prototype._onClear.call(this), this.renderTexture = null;
        }, i(e, [{
          key: "renderTexture",
          get: function get() {
            return this._renderTexture;
          },
          set: function set(t) {
            if (this._renderTexture = t, t) for (var e in this.textures) {
              var a = this.textures[e];

              if (!a.spriteFrame) {
                var i = null;
                a.rotated ? i = new r(a.region.x, a.region.y, a.region.height, a.region.width) : (i = new r(a.region.x, a.region.y, a.region.width, a.region.height), a.spriteFrame = new L(), a.spriteFrame.texture = t, a.spriteFrame.rect = i);
              }
            } else for (var n in this.textures) {
              this.textures[n].spriteFrame = null;
            }
          }
        }]), e;
      }(jt)) || H,
          Fe = e("dragonBones.CCTextureData")(W = function (t) {
        function e() {
          for (var e, a = arguments.length, i = new Array(a), r = 0; r < a; r++) {
            i[r] = arguments[r];
          }

          return (e = t.call.apply(t, [this].concat(i)) || this).spriteFrame = null, e;
        }

        return a(e, t), e.toString = function () {
          return "[class dragonBones.CCTextureData]";
        }, e.prototype._onClear = function () {
          t.prototype._onClear.call(this), this.spriteFrame = null;
        }, e;
      }(Lt)) || W,
          Re = e("dragonBones.CCSlot")(z = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._localVertices = void 0, e._indices = void 0, e._matrix = void 0, e._worldMatrix = void 0, e._worldMatrixDirty = void 0, e._color = void 0, e._localVertices = [], e._indices = [], e._matrix = new n(), e._worldMatrix = new n(), e._worldMatrixDirty = !0, e._visible = !1, e._color = new s(), e;
        }

        a(e, t), e.toString = function () {
          return "[class dragonBones.CCSlot]";
        };
        var i = e.prototype;
        return i.getTexture = function () {
          return this._textureData ? this._textureData.spriteFrame.texture : null;
        }, i.calculWorldMatrix = function () {
          var t = this._armature._parent;
          t ? this._mulMat(this._worldMatrix, t._worldMatrix, this._matrix) : n.copy(this._worldMatrix, this._matrix), this._worldMatrixDirty = !1;
        }, i._onClear = function () {
          t.prototype._onClear.call(this), this._localVertices.length = 0, this._indices.length = 0, n.identity(this._matrix), n.identity(this._worldMatrix), this._worldMatrixDirty = !0, this._color = new s(), this._visible = !1;
        }, i._onUpdateDisplay = function () {}, i._initDisplay = function () {}, i._addDisplay = function () {
          this._visible = !0;
        }, i._replaceDisplay = function () {}, i._removeDisplay = function () {
          this._visible = !1;
        }, i._disposeDisplay = function () {}, i._updateVisible = function () {
          this._visible = this.parent.visible;
        }, i._updateGlueMesh = function () {}, i._updateZOrder = function () {}, i._updateBlendMode = function () {
          if (this._childArmature) for (var t = this._childArmature.getSlots(), e = 0, a = t.length; e < a; e++) {
            var i = t[e];
            i._blendMode = this._blendMode, i._updateBlendMode();
          }
        }, i._updateColor = function () {
          var t = this._color;
          t.r = 255 * this._colorTransform.redMultiplier, t.g = 255 * this._colorTransform.greenMultiplier, t.b = 255 * this._colorTransform.blueMultiplier, t.a = 255 * this._colorTransform.alphaMultiplier;
        }, i._updateFrame = function () {
          this._indices.length = 0;
          var t = this._indices,
              e = this._localVertices,
              a = 0,
              i = 0,
              r = this._textureData;

          if (this._display && !(this._displayIndex < 0) && r && r.spriteFrame) {
            var n = r.spriteFrame.texture,
                s = n.width,
                o = n.height,
                l = r.region;

            if (0 !== s && 0 !== o) {
              var h = null !== this._deformVertices && this._display === this._meshDisplay ? this._deformVertices.verticesData : null;

              if (h) {
                var u = h.data,
                    _ = u.intArray,
                    f = u.floatArray,
                    c = _[h.offset + Se.MeshVertexCount],
                    m = _[h.offset + Se.MeshTriangleCount],
                    p = _[h.offset + Se.MeshFloatOffset];
                p < 0 && (p += 65536);

                for (var d = p + 2 * c, y = this._armature._armatureData.scale, g = 0, v = 2 * c; g < v; g += 2) {
                  e[i++] = f[p + g] * y, e[i++] = -f[p + g + 1] * y, h.rotated ? (e[i++] = (l.x + (1 - f[d + g]) * l.width) / s, e[i++] = (l.y + f[d + g + 1] * l.height) / o) : (e[i++] = (l.x + f[d + g] * l.width) / s, e[i++] = (l.y + f[d + g + 1] * l.height) / o);
                }

                for (var D = 0; D < 3 * m; ++D) {
                  t[a++] = _[h.offset + Se.MeshVertexIndices + D];
                }

                e.length = i, t.length = a, h.weight && this._identityTransform();
              } else {
                var A = l.x / s,
                    b = (l.y + l.height) / o,
                    T = (l.x + l.width) / s,
                    S = l.y / o;
                e[i++] = 0, e[i++] = 0, e[i++] = A, e[i++] = b, e[i++] = l.width, e[i++] = 0, e[i++] = T, e[i++] = b, e[i++] = 0, e[i++] = l.height, e[i++] = A, e[i++] = S, e[i++] = l.width, e[i++] = l.height, e[i++] = T, e[i++] = S, t[0] = 0, t[1] = 1, t[2] = 2, t[3] = 1, t[4] = 3, t[5] = 2, e.length = i, t.length = 6;
              }

              this._visibleDirty = !0, this._blendModeDirty = !0, this._colorDirty = !0;
            } else console.error("SpriteFrame " + r.spriteFrame.name + " incorrect size " + s + " x " + o);
          }
        }, i._updateMesh = function () {
          var t = this._armature._armatureData.scale,
              e = this._deformVertices.vertices,
              a = this._deformVertices.bones,
              i = this._deformVertices.verticesData,
              r = i.weight,
              n = e.length > 0 && i.inheritDeform,
              s = this._localVertices;

          if (r) {
            var o = i.data,
                l = o.intArray,
                h = o.floatArray,
                u = l[i.offset + Se.MeshVertexCount],
                _ = l[r.offset + Se.WeigthFloatOffset];
            _ < 0 && (_ += 65536);

            for (var f = 0, c = r.offset + Se.WeigthBoneIndices + a.length, m = _, p = 0, d = 0; f < u; f++, d += 4) {
              for (var y = l[c++], g = 0, v = 0, D = 0; D < y; ++D) {
                var A = a[l[c++]];

                if (null !== A) {
                  var b = A.globalTransformMatrix,
                      T = h[m++],
                      S = h[m++] * t,
                      P = h[m++] * t;
                  n && (S += e[p++], P += e[p++]), g += (b.a * S + b.c * P + b.tx) * T, v += (b.b * S + b.d * P + b.ty) * T;
                }
              }

              s[d] = g, s[d + 1] = -v;
            }
          } else if (n) {
            var O = this._parent._boneData.type !== Oe.Bone,
                x = i.data,
                C = x.intArray,
                M = x.floatArray,
                B = C[i.offset + Se.MeshVertexCount],
                E = C[i.offset + Se.MeshFloatOffset];
            E < 0 && (E += 65536);

            for (var I = 0, w = B, F = 0; I < w; I++, F += 4) {
              var R = M[E + 2 * I] * t + e[2 * I],
                  N = M[E + 2 * I + 1] * t + e[2 * I + 1];

              if (O) {
                var k = this._parent._getGlobalTransformMatrix(R, N);

                s[F] = k.a * R + k.c * N + k.tx, s[F + 1] = -k.b * R + k.d * N + k.ty;
              } else s[F] = R, s[F + 1] = -N;
            }
          }

          r && this._identityTransform();
        }, i._identityTransform = function () {
          var t = this._matrix;
          t.m00 = 1, t.m01 = 0, t.m04 = -0, t.m05 = -1, t.m12 = 0, t.m13 = 0, this._worldMatrixDirty = !0;
        }, i._updateTransform = function () {
          var t = this._matrix;
          t.m00 = this.globalTransformMatrix.a, t.m01 = this.globalTransformMatrix.b, t.m04 = -this.globalTransformMatrix.c, t.m05 = -this.globalTransformMatrix.d, this._childArmature ? (t.m12 = this.globalTransformMatrix.tx, t.m13 = this.globalTransformMatrix.ty) : (t.m12 = this.globalTransformMatrix.tx - (this.globalTransformMatrix.a * this._pivotX - this.globalTransformMatrix.c * this._pivotY), t.m13 = this.globalTransformMatrix.ty - (this.globalTransformMatrix.b * this._pivotX - this.globalTransformMatrix.d * this._pivotY)), this._worldMatrixDirty = !0;
        }, i.updateWorldMatrix = function () {
          if (this._armature) {
            var t = this._armature._parent;

            if (t && t.updateWorldMatrix(), this._worldMatrixDirty) {
              this.calculWorldMatrix();
              var e = this.childArmature;
              if (!e) return;

              for (var a = e.getSlots(), i = 0, r = a.length; i < r; i++) {
                var n = a[i];
                n && (n._worldMatrixDirty = !0);
              }
            }
          }
        }, i._mulMat = function (t, e, a) {
          var i = e.m00,
              r = e.m01,
              n = e.m04,
              s = e.m05,
              o = e.m12,
              l = e.m13,
              h = a.m00,
              u = a.m01,
              _ = a.m04,
              f = a.m05,
              c = a.m12,
              m = a.m13;
          0 !== r || 0 !== n ? (t.m00 = h * i + u * n, t.m01 = h * r + u * s, t.m04 = _ * i + f * n, t.m05 = _ * r + f * s, t.m12 = i * c + n * m + o, t.m13 = r * c + s * m + l) : (t.m00 = h * i, t.m01 = u * s, t.m04 = _ * i, t.m05 = f * s, t.m12 = i * c + o, t.m13 = s * m + l);
        }, e;
      }(Ht)) || z,
          Ne = e("dragonBones.CCArmatureDisplay")(K = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this).shouldAdvanced = !1, e._ccNode = null, e._ccComponent = null, e._eventTarget = void 0, e._armature = null, e._eventTarget = new l(), e;
        }

        a(e, t);
        var r = e.prototype;
        return r.hasEvent = function () {
          return console.warn("Method not implemented."), !1;
        }, r.addEvent = function () {
          console.warn("Method not implemented.");
        }, r.removeEvent = function () {
          console.warn("Method not implemented.");
        }, r.setEventTarget = function (t) {
          this._eventTarget = t;
        }, r.getRootDisplay = function () {
          var t,
              e = this._armature._parent;
          if (!e) return this;

          for (; e;) {
            t = e, e = e._armature._parent;
          }

          return t._armature.display;
        }, r.convertToRootSpace = function (t) {
          var e = this._armature._parent;
          if (!e) return t;
          e.updateWorldMatrix();
          var a = e._worldMatrix,
              i = new o(0, 0);
          return i.x = t.x * a.m00 + t.y * a.m04 + a.m12, i.y = t.x * a.m01 + t.y * a.m05 + a.m13, i;
        }, r.convertToWorldSpace = function (t) {
          var e,
              a = this.convertToRootSpace(t),
              i = this.getRootNode();
          return null == i || null === (e = i._uiProps.uiTransformComp) || void 0 === e ? void 0 : e.convertToWorldSpaceAR(a);
        }, r.getRootNode = function () {
          var t = this.getRootDisplay();
          return t && t._ccNode;
        }, r.dbInit = function (t) {
          this._armature = t;
        }, r.dbClear = function () {
          this._armature = null;
        }, r.dbUpdate = function () {
          this._ccComponent && this._ccComponent.markForUpdateRenderData();
        }, r.advanceTimeBySelf = function (t) {
          this.shouldAdvanced = !!t;
        }, r.hasDBEventListener = function (t) {
          return this._eventTarget.hasEventListener(t);
        }, r.addDBEventListener = function (t, e, a) {
          this._eventTarget.on(t, e, a);
        }, r.removeDBEventListener = function (t, e, a) {
          this._eventTarget.off(t, e, a);
        }, r.dispatchDBEvent = function (t, e) {
          this._eventTarget.emit(t, e);
        }, i(e, [{
          key: "node",
          get: function get() {
            return this;
          }
        }]), e;
      }(St)) || K,
          ke = e("CCFactory")((Z = q = function (t) {
        function e() {
          var e;
          (e = t.call(this) || this).id = void 0, e.uuid = void 0, e._slots = void 0;
          var a = new Ne();
          return e._dragonBones = new rt(a), F.getScheduler() && (N.on(k.EVENT_RESTART, e.initUpdate, u(e)), e.initUpdate()), e.id = e.uuid = "CCFactory", e;
        }

        a(e, t), e.getInstance = function () {
          return e._factory || (e._factory = new e()), e._factory;
        };
        var i = e.prototype;
        return i.initUpdate = function () {
          w.enableForTarget(this), F.getScheduler().scheduleUpdate(this, R.Priority.HIGH, !1);
        }, i.update = function (t) {
          this._dragonBones.advanceTime(t);
        }, i.getDragonBonesDataByRawData = function (t) {
          return (t instanceof ArrayBuffer ? be._binaryParser : this._dataParser).parseDragonBonesData(t, 1);
        }, i.buildArmatureDisplay = function (t, e, a, i) {
          var r = this.buildArmature(t, e, a, i);
          return r ? r._display : null;
        }, i.createArmatureNode = function (t, e, a) {
          var i = (a = a || new h()).getComponent("dragonBones.ArmatureDisplay");
          return i || (i = a.addComponent("dragonBones.ArmatureDisplay")), a.name = e, i._armatureName = e, i._dragonAsset = t.dragonAsset, i._dragonAtlasAsset = t.dragonAtlasAsset, i._init(), i;
        }, i._buildTextureAtlasData = function (t, e) {
          return t ? t.renderTexture = e : t = nt.borrowObject(we), t;
        }, i._sortSlots = function () {
          for (var t = this._slots, e = [], a = 0, i = t.length; a < i; a++) {
            for (var r = t[a], n = r._zOrder, s = !1, o = e.length - 1; o >= 0; o--) {
              if (n >= e[o]._zOrder) {
                e.splice(o + 1, 0, r), s = !0;
                break;
              }
            }

            s || e.unshift(r);
          }

          this._slots = e;
        }, i._buildArmature = function (t) {
          var e = nt.borrowObject(Vt);
          e._skinData = t.skin, e._animation = nt.borrowObject(qt), e._animation._armature = e, e._animation.animations = t.armature.animations, e._isChildArmature = !1;
          var a = new Ne();
          return e.init(t.armature, a, a, this._dragonBones), e;
        }, i._buildSlot = function (t, e, a) {
          var i = nt.borrowObject(Re),
              r = i;
          return i.init(e, a, r, r), i;
        }, i.getDragonBonesDataByUUID = function (t) {
          for (var e in this._dragonBonesDataMap) {
            if (-1 !== e.indexOf(t)) return this._dragonBonesDataMap[e];
          }

          return null;
        }, i.removeDragonBonesDataByUUID = function (t, e) {
          for (var a in void 0 === e && (e = !0), this._dragonBonesDataMap) {
            -1 !== a.indexOf(t) && (e && this._dragonBones.bufferObject(this._dragonBonesDataMap[a]), delete this._dragonBonesDataMap[a]);
          }
        }, e;
      }(be), q._factory = null, J = Z)) || J,
          je = 1 / 60,
          Le = [],
          Ue = [],
          Ve = 0,
          Ye = 0,
          Xe = 0,
          Ge = null,
          He = null,
          We = 0,
          ze = 0,
          Ke = 0,
          Je = 0,
          qe = 0,
          Ze = function () {
        function t() {
          this._privateMode = !1, this._inited = !1, this._invalid = !0, this._enableCacheAttachedInfo = !1, this.frames = [], this.totalTime = 0, this.isCompleted = !1, this._frameIdx = -1, this._armatureInfo = null, this._animationName = null, this._tempSegments = null, this._tempColors = null, this._tempBoneInfos = null;
        }

        var e = t.prototype;
        return e.init = function (t, e) {
          this._inited = !0, this._armatureInfo = t, this._animationName = e;
        }, e.clear = function () {
          this._inited = !1;

          for (var t = 0, e = this.frames.length; t < e; t++) {
            this.frames[t].segments.length = 0;
          }

          this.invalidAllFrame();
        }, e.begin = function () {
          if (this._invalid) {
            var t = this._armatureInfo,
                e = t.curAnimationCache;
            e && e !== this && (this._privateMode ? e.invalidAllFrame() : e.updateToFrame()), t.armature.animation.play(this._animationName, 1), t.curAnimationCache = this, this._invalid = !1, this._frameIdx = -1, this.totalTime = 0, this.isCompleted = !1;
          }
        }, e.end = function () {
          this._needToUpdate() || (this._armatureInfo.curAnimationCache = null, this.frames.length = this._frameIdx + 1, this.isCompleted = !0);
        }, e._needToUpdate = function (t) {
          return !this._armatureInfo.armature.animation.isCompleted && this.totalTime < 30 && (void 0 === t || this._frameIdx < t);
        }, e.updateToFrame = function (t) {
          if (this._inited && (this.begin(), this._needToUpdate(t))) {
            var e = this._armatureInfo.armature;

            do {
              e.advanceTime(je), this._frameIdx++, this._updateFrame(e, this._frameIdx), this.totalTime += je;
            } while (this._needToUpdate(t));

            this.end();
          }
        }, e.isInited = function () {
          return this._inited;
        }, e.isInvalid = function () {
          return this._invalid;
        }, e.invalidAllFrame = function () {
          this.isCompleted = !1, this._invalid = !0;
        }, e.updateAllFrame = function () {
          this.invalidAllFrame(), this.updateToFrame();
        }, e.enableCacheAttachedInfo = function () {
          this._enableCacheAttachedInfo || (this._enableCacheAttachedInfo = !0, this.invalidAllFrame());
        }, e._updateFrame = function (t, e) {
          Xe = 0, Ve = 0, Ye = 0, Ge = null, He = null, We = 0, ze = 0, Ke = 0, Je = 0, qe = 0, this.frames[e] = this.frames[e] || {
            segments: [],
            colors: [],
            boneInfos: [],
            vertices: null,
            uintVert: null,
            indices: null
          };
          var a = this.frames[e],
              i = this._tempSegments = a.segments,
              r = this._tempColors = a.colors,
              n = this._tempBoneInfos = a.boneInfos;
          this._traverseArmature(t, 1), Je > 0 && (r[Je - 1].vfOffset = Xe), r.length = Je, n.length = Ve;
          var s = Ke - 1;
          if (s >= 0) if (ze > 0) {
            var o = i[s];
            o.indexCount = ze, o.vfCount = 5 * We, o.vertexCount = We, i.length = Ke;
          } else i.length = Ke - 1;

          if (0 !== i.length) {
            var l = a.vertices,
                h = a.uintVert;
            (!l || l.length < Xe) && (l = a.vertices = new Float32Array(Xe), h = a.uintVert = new Uint32Array(l.buffer));

            for (var u = 0, _ = 0; u < Xe;) {
              l[u++] = Le[_++], l[u++] = Le[_++], l[u++] = Le[_++], l[u++] = Le[_++], h[u++] = Le[_++];
            }

            var f = a.indices;
            (!f || f.length < Ye) && (f = a.indices = new Uint16Array(Ye));

            for (var c = 0; c < Ye; c++) {
              f[c] = Ue[c];
            }

            a.vertices = l, a.uintVert = h, a.indices = f;
          }
        }, e._traverseArmature = function (t, e) {
          var a,
              i,
              r,
              n,
              s,
              o,
              l,
              h,
              u,
              _ = this._tempColors,
              f = this._tempSegments,
              c = this._tempBoneInfos,
              m = Le,
              p = Ue,
              d = t._slots,
              y = t._bones;
          if (this._enableCacheAttachedInfo) for (var g = 0, v = y.length; g < v; g++, Ve++) {
            var D = y[g],
                A = c[Ve];
            A || (A = c[Ve] = {
              globalTransformMatrix: new st()
            });
            var b = D.globalTransformMatrix;
            A.globalTransformMatrix.copyFrom(b);
          }

          for (var T = 0, S = d.length; T < S; T++) {
            if ((r = d[T])._visible && r._displayData) if (r.updateWorldMatrix(), s = r._color, r.childArmature) this._traverseArmature(r.childArmature, e * s.a / 255);else if (l = r.getTexture()) {
              Ge === l.nativeUrl && He === r._blendMode || (Ge = l.nativeUrl, He = r._blendMode, (h = Ke - 1) >= 0 && (ze > 0 ? ((u = f[h]).indexCount = ze, u.vertexCount = We, u.vfCount = 5 * We) : Ke--), f[Ke] = {
                tex: l,
                blendMode: r._blendMode,
                indexCount: 0,
                vertexCount: 0,
                vfCount: 0
              }, Ke++, ze = 0, We = 0), o = (s.a * e << 24 >>> 0) + (s.b << 16) + (s.g << 8) + s.r, qe !== o && (qe = o, Je > 0 && (_[Je - 1].vfOffset = Xe), _[Je++] = {
                r: s.r,
                g: s.g,
                b: s.b,
                a: s.a * e,
                vfOffset: 0
              }), a = r._localVertices, i = r._indices, n = r._worldMatrix;

              for (var P = 0, O = a.length; P < O;) {
                Q = a[P++], $ = a[P++], m[Xe++] = Q * n.m00 + $ * n.m04 + n.m12, m[Xe++] = Q * n.m01 + $ * n.m05 + n.m13, m[Xe++] = a[P++], m[Xe++] = a[P++], m[Xe++] = o;
              }

              for (var x = 0, C = i.length; x < C; x++) {
                p[Ye++] = We + i[x];
              }

              ze += i.length, We += a.length / 4;
            }
          }
        }, t;
      }(),
          Qe = function () {
        function t() {
          this._privateMode = !1, this._animationPool = {}, this._armatureCache = {};
        }

        var e = t.prototype;
        return e.enablePrivateMode = function () {
          this._privateMode = !0;
        }, e.dispose = function () {
          for (var t in this._armatureCache) {
            var e = this._armatureCache[t];

            if (e) {
              var a = e.armature;
              a && a.dispose();
            }
          }

          this._armatureCache = {}, this._animationPool = {};
        }, e._removeArmature = function (t) {
          var e = this._armatureCache[t],
              a = e.animationsCache;

          for (var i in a) {
            var r = a[i];
            r && (this._animationPool[t + "#" + i] = r, r.clear());
          }

          var n = e.armature;
          n && n.dispose(), delete this._armatureCache[t];
        }, e.resetArmature = function (t) {
          for (var e in this._armatureCache) {
            -1 !== e.indexOf(t) && this._removeArmature(e);
          }
        }, e.getArmatureCache = function (e, a, i) {
          var r,
              n = this._armatureCache[a];
          if (n) r = n.armature;else {
            var s = ke.getInstance().buildArmatureDisplay(e, a, "", i);
            if (!s || !s._armature) return null;
            if (r = s._armature, !t.canCache(r)) return r.dispose(), null;
            this._armatureCache[a] = {
              armature: r,
              animationsCache: {},
              curAnimationCache: null
            };
          }
          return r;
        }, e.getAnimationCache = function (t, e) {
          var a = this._armatureCache[t];
          return a ? a.animationsCache[e] : null;
        }, e.initAnimationCache = function (t, e) {
          if (!e) return null;
          var a = this._armatureCache[t],
              i = a && a.armature;
          if (!i) return null;
          if (!i.animation.hasAnimation(e)) return null;
          var r = a.animationsCache,
              n = r[e];

          if (!n) {
            var s = t + "#" + e;
            (n = this._animationPool[s]) ? delete this._animationPool[s] : (n = new Ze())._privateMode = this._privateMode, n.init(a, e), r[e] = n;
          }

          return n;
        }, e.invalidAnimationCache = function (t) {
          var e = this._armatureCache[t];

          if (e && e.armature) {
            var a = e.animationsCache;

            for (var i in a) {
              a[i].invalidAllFrame();
            }
          }
        }, e.updateAnimationCache = function (t, e) {
          if (e) {
            var a = this.initAnimationCache(t, e);
            if (!a) return;
            a.updateAllFrame();
          } else {
            var i = this._armatureCache[t];
            if (!i || !i.armature) return;
            var r = i.animationsCache;

            for (var n in r) {
              r[n].updateAllFrame();
            }
          }
        }, t.canCache = function (t) {
          for (var e = t._slots, a = 0, i = e.length; a < i; a++) {
            if (e[a].childArmature) return !1;
          }

          return !0;
        }, t;
      }();

      Qe.FrameTime = je, Qe.sharedCache = new Qe();
      var $e,
          ta,
          ea,
          aa,
          ia,
          ra,
          na,
          sa,
          oa,
          la = e("dragonBones.DragonBonesAsset")((it = function (t) {
        function e() {
          for (var e, a = arguments.length, i = new Array(a), r = 0; r < a; r++) {
            i[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(i)) || this, p(e, "_dragonBonesJson", at, u(e)), e._factory = null, e._dragonBonesJsonData = void 0, e._armaturesEnum = null, e;
        }

        a(e, t);
        var r = e.prototype;
        return r.constructctor = function () {
          this.reset();
        }, r.createNode = function (t) {
          var e = new h(this.name);
          return e.addComponent("dragonBones.ArmatureDisplay").dragonAsset = this, t(null, e);
        }, r.reset = function () {
          this._clear();
        }, r.init = function (t, e) {
          this._factory = t, !this._dragonBonesJsonData && this.dragonBonesJson && (this._dragonBonesJsonData = JSON.parse(this.dragonBonesJson));
          var a;

          if (a = this._dragonBonesJsonData ? this._dragonBonesJsonData : this._nativeAsset, !this._uuid) {
            var i = this._factory.getDragonBonesDataByRawData(a);

            i ? this._uuid = i.name : console.warn("dragonbones name is empty");
          }

          var r = this._uuid + "#" + e;
          return this._factory.getDragonBonesData(r) || this._factory.parseDragonBonesData(a instanceof ArrayBuffer ? a : a.buffer instanceof ArrayBuffer ? a.buffer : a, r), r;
        }, r.getArmatureEnum = function () {
          if (this._armaturesEnum) return this._armaturesEnum;
          this.init();

          var t = this._factory.getDragonBonesDataByUUID(this._uuid);

          if (t) {
            for (var e = t.armatureNames, a = {}, i = 0; i < e.length; i++) {
              a[e[i]] = i;
            }

            return this._armaturesEnum = _(a);
          }

          return null;
        }, r.getAnimsEnum = function (t) {
          this.init();

          var e = this._factory.getDragonBonesDataByUUID(this._uuid);

          if (e) {
            var a = e.getArmature(t);
            if (!a) return null;
            var i = {
              "<None>": 0
            },
                r = a.animations,
                n = 0;

            for (var s in r) {
              r.hasOwnProperty(s) && (i[s] = n + 1, n++);
            }

            return _(i);
          }

          return null;
        }, r.destroy = function () {
          return this._clear(), t.prototype.destroy.call(this);
        }, r._clear = function () {
          this._factory && (Qe.sharedCache.resetArmature(this._uuid), this._factory.removeDragonBonesDataByUUID(this._uuid, !0));
        }, i(e, [{
          key: "dragonBonesJson",
          get: function get() {
            return this._dragonBonesJson;
          },
          set: function set(t) {
            this._dragonBonesJson = t, this._dragonBonesJsonData = JSON.parse(t), this.reset();
          }
        }]), e;
      }(f), at = c((et = it).prototype, "_dragonBonesJson", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), tt = et)) || tt;
      m.internal.DragonBonesAsset = la;
      var ha,
          ua = ($e = e("dragonBones.DragonBonesAtlasAsset"), ta = y(g), $e((oa = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, p(e, "_atlasJson", ia, u(e)), p(e, "_texture", ra, u(e)), p(e, "_atlasJsonData", na, u(e)), e._factory = null, p(e, "_textureAtlasData", sa, u(e)), e._clear(), e;
        }

        a(e, t);
        var r = e.prototype;
        return r.createNode = function (t) {
          var e = new h(this.name);
          return e.addComponent("dragonBones.ArmatureDisplay").dragonAtlasAsset = this, t(null, e);
        }, r.init = function (t) {
          this._factory = t, this._atlasJsonData || (this._atlasJsonData = JSON.parse(this.atlasJson));
          var e = this._atlasJsonData;
          this._uuid = this._uuid || e.name, this._textureAtlasData ? t.addTextureAtlasData(this._textureAtlasData, this._uuid) : this._textureAtlasData = t.parseTextureAtlasData(e, this.texture, this._uuid);
        }, r.destroy = function () {
          return this._clear(), t.prototype.destroy.call(this);
        }, r._clear = function () {
          this._factory && (Qe.sharedCache.resetArmature(this._uuid), this._factory.removeTextureAtlasData(this._uuid, !0), this._factory.removeDragonBonesDataByUUID(this._uuid, !0)), this._textureAtlasData = null;
        }, i(e, [{
          key: "atlasJson",
          get: function get() {
            return this._atlasJson;
          },
          set: function set(t) {
            this._atlasJson = t, this._atlasJsonData = JSON.parse(this.atlasJson), this._clear();
          }
        }, {
          key: "texture",
          get: function get() {
            return this._texture;
          },
          set: function set(t) {
            this._texture = t, this._clear();
          }
        }]), e;
      }(f), ia = c((aa = oa).prototype, "_atlasJson", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), ra = c(aa.prototype, "_texture", [d, ta], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), na = c(aa.prototype, "_atlasJsonData", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return {};
        }
      }), sa = c(aa.prototype, "_textureAtlasData", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ea = aa)) || ea);
      m.internal.DragonBonesAtlasAsset = ua;

      var _a,
          fa,
          ca,
          ma,
          pa,
          da,
          ya,
          ga,
          va,
          Da,
          Aa,
          ba,
          Ta,
          Sa,
          Pa,
          Oa,
          xa,
          Ca,
          Ma,
          Ba,
          Ea,
          Ia,
          wa,
          Fa,
          Ra,
          Na,
          ka,
          ja,
          La,
          Ua,
          Va,
          Ya,
          Xa,
          Ga,
          Ha,
          Wa,
          za,
          Ka,
          Ja,
          qa,
          Za,
          Qa,
          $a,
          ti,
          ei,
          ai,
          ii,
          ri,
          ni,
          si,
          oi,
          li = new n(),
          hi = e("dragonBones.AttachUtil")(ha = function () {
        function t() {
          this._inited = !1, this._armature = null, this._armatureNode = null, this._armatureDisplay = null;
        }

        var e = t.prototype;
        return e.init = function (t) {
          this._inited = !0, this._armature = t._armature, this._armatureNode = t.node, this._armatureDisplay = t;
        }, e.reset = function () {
          this._inited = !1, this._armature = null, this._armatureNode = null, this._armatureDisplay = null;
        }, e._syncAttachedNode = function () {
          if (this._inited) {
            this._armatureNode.worldMatrix;

            var t = null,
                e = this._armatureDisplay.isAnimationCached();

            if (!e || !this._armatureDisplay || (t = this._armatureDisplay._curFrame && this._armatureDisplay._curFrame.boneInfos)) for (var a, i, r, n = this._armatureDisplay.sockets, s = this._armatureDisplay.socketNodes, l = new o(), h = this._armature.getBones(), u = n.length - 1; u >= 0; u--) {
              var _ = n[u],
                  f = _.target;
              if (f) if (f.isValid) {
                var c = e ? t[_.boneIndex] : h[_.boneIndex];
                c && (a = f, i = c.globalTransformMatrix, r = void 0, (r = li).m00 = i.a, r.m01 = i.b, r.m04 = -i.c, r.m05 = -i.d, r.m12 = i.tx, r.m13 = i.ty, a._oldScale || (a._oldScale = a.scale.clone()), l.set(a._oldScale), a.matrix = li, a.scale = l.multiply(this._armatureNode.scale));
              } else s.delete(_.path), n.splice(u, 1);
            }
          }
        }, t;
      }()) || ha,
          ui = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._armatures = new Set(), e;
        }

        a(e, t), e.getInstance = function () {
          return e._instance || (e._instance = new e(), F.registerSystem(e.ID, e._instance, R.Priority.HIGH)), e._instance;
        };
        var i = e.prototype;
        return i.add = function (t) {
          t && (this._armatures.has(t) || this._armatures.add(t));
        }, i.remove = function (t) {
          t && this._armatures.has(t) && this._armatures.delete(t);
        }, i.postUpdate = function (t) {
          this._armatures && this._armatures.forEach(function (e) {
            e.updateAnimation(t);
          });
        }, e;
      }(R);

      function _i(t, e, a) {
        P.Attr.setClassAttr(t, e, "type", "Enum"), P.Attr.setClassAttr(t, e, "enumList", _.getList(a));
      }

      ui.ID = "ARMATURE", ui._instance = void 0, m.internal.ArmatureSystem = ui, function (t) {
        t[t.default = -1] = "default";
      }(ri || (ri = {})), v(ri), function (t) {
        t[t["<None>"] = 0] = "<None>";
      }(ni || (ni = {})), v(ni), function (t) {
        t[t.REALTIME = 0] = "REALTIME";
      }(si || (si = {})), v(ni), function (t) {
        t[t.REALTIME = 0] = "REALTIME", t[t.SHARED_CACHE = 1] = "SHARED_CACHE", t[t.PRIVATE_CACHE = 2] = "PRIVATE_CACHE";
      }(oi || (oi = {})), v(oi);
      var fi = (_a = e("dragonBones.ArmatureDisplay.DragonBoneSocket"), fa = y(h), _a((pa = c((ma = function ma(t, e) {
        void 0 === t && (t = ""), void 0 === e && (e = null), p(this, "path", pa, this), p(this, "target", da, this), this.boneIndex = null, this.path = t, this.target = e;
      }).prototype, "path", [d, S], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), da = c(ma.prototype, "target", [fa, S, d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ca = ma)) || ca);
      D(fi, "dragonBones.ArmatureDisplay.DragonBoneSocket");
      var ci = (ya = e("dragonBones.ArmatureDisplay"), ga = O(), va = x(), Da = y(la), Aa = C(), ba = y(ua), Ta = C(), Sa = M(), Pa = M(), Oa = B(), xa = y(ri), Ca = C(), Ma = y(ni), Ba = B(), Ea = C(), Ia = B(), wa = C(), Fa = C(), Ra = C(), Na = C(), ka = C(), ja = y([fi]), La = C(), ya(Ua = ga(Ua = va(Ua = A((ii = ai = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, p(e, "playTimes", Ya, u(e)), p(e, "premultipliedAlpha", Xa, u(e)), e._armature = null, e.attachUtil = void 0, p(e, "_defaultArmatureIndexValue", Ga, u(e)), p(e, "_dragonAsset", Ha, u(e)), p(e, "_dragonAtlasAsset", Wa, u(e)), p(e, "_armatureName", za, u(e)), p(e, "_animationName", Ka, u(e)), p(e, "_animationIndexValue", Ja, u(e)), e._preCacheMode = -1, e._cacheMode = oi.REALTIME, p(e, "_defaultCacheModeValue", qa, u(e)), p(e, "_timeScale", Za, u(e)), p(e, "_playTimes", Qa, u(e)), p(e, "_debugBones", $a, u(e)), e._debugDraw = null, p(e, "_enableBatch", ti, u(e)), e._armatureKey = "", e._accTime = 0, e._playCount = 0, e._frameCache = null, e._curFrame = null, e._playing = !1, e._armatureCache = null, e._eventTarget = void 0, e._factory = null, e._displayProxy = null, e._meshRenderDataArray = [], e._materialCache = {}, e._enumArmatures = _({}), e._enumAnimations = _({}), e._socketNodes = new Map(), e._cachedSockets = new Map(), p(e, "_sockets", ei, u(e)), e._inited = void 0, e._meshRenderDataArrayIdx = 0, e._cacheModeEnum = void 0, e._eventTarget = new l(), e._inited = !1, e.attachUtil = new hi(), e.initFactory(), _i(u(e), "_animationIndex", e._enumAnimations), _i(u(e), "_defaultArmatureIndex", e._enumArmatures), e;
        }

        a(e, t);
        var r = e.prototype;
        return r.initFactory = function () {
          this._factory = ke.getInstance();
        }, r.onLoad = function () {
          for (var t = this.node.children, e = 0, a = t.length; e < a; e++) {
            var i = t[e];
            0 === (i.name && i.name.search("CHILD_ARMATURE-")) && i.destroy();
          }
        }, r.requestMeshRenderData = function () {
          var t = this._meshRenderDataArray;
          if (t.length > 0 && 0 === t[t.length - 1].renderData.vertexCount) return t[t.length - 1];
          var e = {
            renderData: new U(),
            texture: null
          };
          return t.push(e), e;
        }, r.destroyRenderData = function () {
          this._meshRenderDataArray && (this._meshRenderDataArray.forEach(function (t) {
            t.renderData.reset();
          }), this._meshRenderDataArray.length = 0);
        }, r.resetRenderData = function () {
          this._meshRenderDataArray && this._meshRenderDataArray.forEach(function (t) {
            t.renderData.reset();
          });
        }, r.getMaterialForBlend = function (t, e) {
          var a = t + "/" + e,
              i = this._materialCache[a];
          if (i) return i;
          var r = this.getMaterial(0);
          return (i = new j({
            parent: r,
            subModelIdx: 0,
            owner: this
          })).recompileShaders({
            USE_LOCAL: !1
          }, 0), this._materialCache[a] = i, i.overridePipelineStates({
            blendState: {
              targets: [{
                blendSrc: t,
                blendDst: e
              }]
            }
          }), i;
        }, r._render = function (t) {
          if (this._meshRenderDataArray) for (var e = 0; e < this._meshRenderDataArray.length; e++) {
            var a = this.material;
            this._meshRenderDataArrayIdx = e;
            var i = this._meshRenderDataArray[e];
            this.material = i.renderData.material, i.texture && t.commitComp(this, i.texture, this._assembler, null), this.material = a;
          }
        }, r._updateBatch = function () {
          this._materialCache = {}, this.destroyRenderData(), this.markForUpdateRenderData();
        }, r._updateMaterial = function () {
          this.markForUpdateRenderData();
        }, r.disableRender = function () {}, r._validateRender = function () {
          return !(!this.dragonAtlasAsset || !this.dragonAtlasAsset.texture) || (this.disableRender(), !1);
        }, r.__preload = function () {
          t.prototype.__preload.call(this), this._init();
        }, r._init = function () {
          if (this._cacheMode = this._defaultCacheMode, !this._inited) {
            this._inited = !0, this._parseDragonAtlasAsset(), this._refresh();

            for (var t = this.node.children, e = 0, a = t.length; e < a; e++) {
              var i = t[e];
              i && "DEBUG_DRAW_NODE" === i.name && i.destroy();
            }

            this._updateDebugDraw(), this._indexBoneSockets(), this._updateSocketBindings();
          }
        }, r.getArmatureKey = function () {
          return this._armatureKey;
        }, r.setAnimationCacheMode = function (t) {
          this._preCacheMode !== t && (this._cacheMode = t, this._buildArmature(), this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.add(this._armature), this._updateSocketBindings(), this.markForUpdateRenderData());
        }, r.isAnimationCached = function () {
          return this._cacheMode !== oi.REALTIME;
        }, r.onEnable = function () {
          t.prototype.onEnable.call(this), this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.add(this._armature), this._flushAssembler(), ui.getInstance().add(this);
        }, r.onDisable = function () {
          t.prototype.onDisable.call(this), this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.remove(this._armature), ui.getInstance().remove(this);
        }, r._emitCacheCompleteEvent = function () {
          this._eventTarget.emit(ye.LOOP_COMPLETE), this._eventTarget.emit(ye.COMPLETE);
        }, r.updateAnimation = function (t) {
          if (this.isAnimationCached() && this._frameCache) {
            this.markForUpdateRenderData();
            var e = this._frameCache;

            if (e.isInited()) {
              var a = e.frames;

              if (this._playing) {
                var i = Qe.FrameTime;
                0 === this._accTime && 0 === this._playCount && this._eventTarget.emit(ye.START), this._accTime += t * this.timeScale * 1;
                var r = Math.floor(this._accTime / i);

                if (e.isCompleted || e.updateToFrame(r), e.isCompleted && r >= a.length) {
                  if (this._playCount++, this.playTimes > 0 && this._playCount >= this.playTimes) return this._curFrame = a[a.length - 1], this._accTime = 0, this._playing = !1, this._playCount = 0, this._emitCacheCompleteEvent(), void this.attachUtil._syncAttachedNode();
                  this._accTime = 0, r = 0, this._emitCacheCompleteEvent();
                }

                this._curFrame = a[r], this.attachUtil._syncAttachedNode();
              } else e.isInvalid() && (e.updateToFrame(), this._curFrame = a[a.length - 1]);
            }
          }
        }, r.onDestroy = function () {
          this._materialInstances = this._materialInstances.filter(function (t) {
            return !!t;
          }), t.prototype.onDestroy.call(this), this._inited = !1, this._cacheMode === oi.PRIVATE_CACHE ? (this._armatureCache.dispose(), this._armatureCache = null, this._armature = null) : this._cacheMode === oi.SHARED_CACHE ? (this._armatureCache = null, this._armature = null) : this._armature && (this._armature.dispose(), this._armature = null), this.destroyRenderData();
        }, r._updateDebugDraw = function () {
          if (this.debugBones) {
            if (!this._debugDraw) {
              var t = new h("DEBUG_DRAW_NODE");
              t.hideFlags |= b.Flags.DontSave | b.Flags.HideInHierarchy;
              var e = t.addComponent(Y);
              e.lineWidth = 1, e.strokeColor = new s(255, 0, 0, 255), this._debugDraw = e;
            }

            this._debugDraw.node.parent = this.node;
          } else this._debugDraw && (this._debugDraw.node.parent = null);

          this.destroyRenderData(), this.markForUpdateRenderData();
        }, r._buildArmature = function () {
          if (this.dragonAsset && this.dragonAtlasAsset && this.armatureName) {
            this._armature && (this._preCacheMode === oi.PRIVATE_CACHE ? this._armatureCache.dispose() : this._preCacheMode === oi.REALTIME && this._armature.dispose(), this._armatureCache = null, this._armature = null, this._displayProxy = null, this._frameCache = null, this._curFrame = null, this._playing = !1, this._preCacheMode = -1), this._cacheMode === oi.SHARED_CACHE ? this._armatureCache = Qe.sharedCache : this._cacheMode === oi.PRIVATE_CACHE && (this._armatureCache = new Qe(), this._armatureCache.enablePrivateMode());
            var t = this.dragonAtlasAsset._uuid;

            if (this._armatureKey = this.dragonAsset.init(this._factory, t), this.isAnimationCached() && (this._armature = this._armatureCache.getArmatureCache(this.armatureName, this._armatureKey, t), this._armature || (this._cacheMode = oi.REALTIME)), this._preCacheMode = this._cacheMode, this._cacheMode === oi.REALTIME) {
              if (this._displayProxy = this._factory.buildArmatureDisplay(this.armatureName, this._armatureKey, "", t), !this._displayProxy) return;
              this._displayProxy._ccNode = this.node, this._displayProxy._ccComponent = this, this._displayProxy.setEventTarget(this._eventTarget), this._armature = this._displayProxy._armature, this._armature.animation.timeScale = this.timeScale;
            }

            if (this._cacheMode !== oi.REALTIME && this.debugBones && console.warn("Debug bones is invalid in cached mode"), this._armature) {
              var e = this._armature.armatureData.aabb;

              this.node._uiProps.uiTransformComp.setContentSize(e.width, e.height);
            }

            this._updateBatch(), this.attachUtil.init(this), this.animationName && this.playAnimation(this.animationName, this.playTimes), this.destroyRenderData(), this.markForUpdateRenderData();
          }
        }, r.querySockets = function () {
          return this._armature ? (0 === this._cachedSockets.size && this._indexBoneSockets(), Array.from(this._cachedSockets.keys()).sort()) : [];
        }, r.setBlendHash = function () {
          -1 !== this._blendHash && (this._blendHash = -1);
        }, r.querySocketPathByName = function (t) {
          for (var e, a = [], i = T(this._cachedSockets.keys()); !(e = i()).done;) {
            var r = e.value;
            r.endsWith(t) && a.push(r);
          }

          return a;
        }, r._parseDragonAtlasAsset = function () {
          this.dragonAtlasAsset && this.dragonAtlasAsset.init(this._factory);
        }, r._refresh = function () {
          this._buildArmature(), this._indexBoneSockets(), this.markForUpdateRenderData();
        }, r._updateCacheModeEnum = function () {
          this._cacheModeEnum = _({}), this._armature ? Object.assign(this._cacheModeEnum, oi) : Object.assign(this._cacheModeEnum, si), _i(this, "_defaultCacheMode", this._cacheModeEnum);
        }, r._updateAnimEnum = function () {
          var t;
          t = this.dragonAsset ? this.dragonAsset.getAnimsEnum(this.armatureName) : ni, this._enumAnimations = _({}), Object.assign(this._enumAnimations, t || ni), _.update(this._enumAnimations), _i(this, "_animationIndex", this._enumAnimations);
        }, r._updateArmatureEnum = function () {
          var t;
          t = this.dragonAsset ? this.dragonAsset.getArmatureEnum() : ri, this._enumArmatures = _({}), Object.assign(this._enumArmatures, t || ri), _.update(this._enumArmatures), _i(this, "_defaultArmatureIndex", this._enumArmatures);
        }, r._indexBoneSockets = function () {
          if (this._armature) {
            this._cachedSockets.clear();

            var t = this._cachedSockets,
                e = function t(e, a, i) {
              if (i.has(e)) return i.get(e);
              var r = a[e];
              if (!r.parent) return i.set(e, r.name), r.path = r.name, r.name;
              var n = t(r.parent._boneIndex, a, i) + "/" + r.name;
              return i.set(e, n), r.path = n, n;
            };

            !function a(i, r) {
              for (var n = r.getBones(), s = new Map(), o = 0; o < n.length; o++) {
                n[o]._boneIndex = o;
              }

              for (var l = 0; l < n.length; l++) {
                e(l, n, s);
              }

              for (var h, u = T(s.keys()); !(h = u()).done;) {
                var _ = h.value;
                t.set("" + i + s.get(_), _);
              }

              for (var f = r.getSlots(), c = 0; c < f.length; c++) {
                f[c].childArmature && a(f[c].name, f[c].childArmature);
              }
            }("", this._armature);
          }
        }, r.playAnimation = function (t, e) {
          if (this.playTimes = void 0 === e ? -1 : e, this.animationName = t, this.isAnimationCached()) {
            var a = this._armatureCache.getAnimationCache(this._armatureKey, t);

            a || (a = this._armatureCache.initAnimationCache(this._armatureKey, t)), a && (this._accTime = 0, this._playCount = 0, this._frameCache = a, this._sockets.length > 0 && this._frameCache.enableCacheAttachedInfo(), this._frameCache.updateToFrame(0), this._playing = !0, this._curFrame = this._frameCache.frames[0]);
          } else if (this._armature) return this._armature.animation.play(t, this.playTimes);

          return this.markForUpdateRenderData(), null;
        }, r.updateAnimationCache = function (t) {
          this.isAnimationCached() && this._armatureCache.updateAnimationCache(this._armatureKey, t);
        }, r.invalidAnimationCache = function () {
          this.isAnimationCached() && this._armatureCache.invalidAnimationCache(this._armatureKey);
        }, r.getArmatureNames = function () {
          var t = this._factory.getDragonBonesData(this._armatureKey);

          return t && t.armatureNames || [];
        }, r.getAnimationNames = function (t) {
          var e = [],
              a = this._factory.getDragonBonesData(this._armatureKey);

          if (a) {
            var i = a.getArmature(t);
            if (i) for (var r in i.animations) {
              i.animations.hasOwnProperty(r) && e.push(r);
            }
          }

          return e;
        }, r.on = function (t, e, a) {
          this.addEventListener(t, e, a);
        }, r.off = function (t, e, a) {
          this.removeEventListener(t, e, a);
        }, r.once = function (t, e, a) {
          this._eventTarget.once(t, e, a);
        }, r.addEventListener = function (t, e, a) {
          this._eventTarget.on(t, e, a);
        }, r.removeEventListener = function (t, e, a) {
          this._eventTarget.off(t, e, a);
        }, r.buildArmature = function (t, e) {
          return this._factory.createArmatureNode(this, t, e);
        }, r.armature = function () {
          return this._armature;
        }, r._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this._assembler = t), 0 === this._meshRenderDataArray.length && this._assembler && this._assembler.createData && (this._assembler.createData(this), this.markForUpdateRenderData(), this._colorDirty = !0, this._updateColor());
        }, r._updateSocketBindings = function () {
          if (this._armature) {
            this._socketNodes.clear();

            for (var t = 0, e = this._sockets.length; t < e; t++) {
              var a = this._sockets[t];

              if (a.path && a.target) {
                var i = this._cachedSockets.get(a.path);

                if (!i) {
                  console.error("Skeleton data does not contain path " + a.path);
                  continue;
                }

                a.boneIndex = i, this._socketNodes.set(a.path, a.target);
              }
            }
          }
        }, r._verifySockets = function (t) {
          for (var e = 0, a = t.length; e < a; e++) {
            var i = t[e].target;
            !i || i.parent && i.parent === this.node || console.error("Target node " + i.name + " is expected to be a direct child of " + this.node.name);
          }
        }, i(e, [{
          key: "dragonAsset",
          get: function get() {
            return this._dragonAsset;
          },
          set: function set(t) {
            this._dragonAsset = t, this._refresh();
          }
        }, {
          key: "dragonAtlasAsset",
          get: function get() {
            return this._dragonAtlasAsset;
          },
          set: function set(t) {
            this._dragonAtlasAsset = t, this._parseDragonAtlasAsset(), this._refresh();
          }
        }, {
          key: "armatureName",
          get: function get() {
            return this._armatureName;
          },
          set: function set(t) {
            this._armatureName = t;
            var e = this.getAnimationNames(this._armatureName);
            (!this.animationName || e.indexOf(this.animationName) < 0) && (this.animationName = ""), this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.remove(this._armature), this._refresh(), this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.add(this._armature);
          }
        }, {
          key: "animationName",
          get: function get() {
            return this._animationName;
          },
          set: function set(t) {
            this._animationName = t;
          }
        }, {
          key: "_defaultArmatureIndex",
          get: function get() {
            return this._defaultArmatureIndexValue;
          },
          set: function set(t) {
            this._defaultArmatureIndexValue = t;
            var e = "";

            if (this.dragonAsset) {
              var a;
              if (this.dragonAsset && (a = this.dragonAsset.getArmatureEnum()), !a) return void E(7400, this.name);
              e = a[this._defaultArmatureIndex];
            }

            void 0 !== e ? this.armatureName = e : E(7401, this.name), this.resetRenderData(), this.markForUpdateRenderData();
          }
        }, {
          key: "_animationIndex",
          get: function get() {
            return this._animationIndexValue;
          },
          set: function set(t) {
            var e;

            if (this._animationIndexValue = t, 0 !== this._animationIndex) {
              if (this.dragonAsset && (e = this.dragonAsset.getAnimsEnum(this.armatureName)), e) {
                var a = e[this._animationIndex];
                void 0 !== a ? this.playAnimation(a, this.playTimes) : E(7402, this.name);
              }
            } else this.animationName = "";
          }
        }, {
          key: "_defaultCacheMode",
          get: function get() {
            return this._defaultCacheModeValue;
          },
          set: function set(t) {
            if (this._defaultCacheModeValue = t, this._defaultCacheMode !== oi.REALTIME && this._armature && !Qe.canCache(this._armature)) return this._defaultCacheMode = oi.REALTIME, void console.warn("Animation cache mode doesn't support skeletal nesting");
            this.setAnimationCacheMode(this._defaultCacheMode);
          }
        }, {
          key: "timeScale",
          get: function get() {
            return this._timeScale;
          },
          set: function set(t) {
            this._timeScale = t, this._armature && !this.isAnimationCached() && (this._armature.animation.timeScale = this.timeScale);
          }
        }, {
          key: "debugBones",
          get: function get() {
            return this._debugBones;
          },
          set: function set(t) {
            this._debugBones = t, this._updateDebugDraw();
          }
        }, {
          key: "sockets",
          get: function get() {
            return this._sockets;
          },
          set: function set(t) {
            this._verifySockets(t), this._sockets = t, this._updateSocketBindings(), t.length > 0 && this._frameCache && this._frameCache.enableCacheAttachedInfo();
          }
        }, {
          key: "socketNodes",
          get: function get() {
            return this._socketNodes;
          }
        }, {
          key: "meshRenderDataArray",
          get: function get() {
            return this._meshRenderDataArray;
          }
        }]), e;
      }(V), ai.AnimationCacheMode = oi, c((Va = ii).prototype, "dragonAsset", [S, Da, Aa], Object.getOwnPropertyDescriptor(Va.prototype, "dragonAsset"), Va.prototype), c(Va.prototype, "dragonAtlasAsset", [S, ba, Ta], Object.getOwnPropertyDescriptor(Va.prototype, "dragonAtlasAsset"), Va.prototype), c(Va.prototype, "armatureName", [Sa], Object.getOwnPropertyDescriptor(Va.prototype, "armatureName"), Va.prototype), c(Va.prototype, "animationName", [Pa], Object.getOwnPropertyDescriptor(Va.prototype, "animationName"), Va.prototype), c(Va.prototype, "_defaultArmatureIndex", [Oa, S, xa, Ca], Object.getOwnPropertyDescriptor(Va.prototype, "_defaultArmatureIndex"), Va.prototype), c(Va.prototype, "_animationIndex", [S, Ma, Ba, Ea], Object.getOwnPropertyDescriptor(Va.prototype, "_animationIndex"), Va.prototype), c(Va.prototype, "_defaultCacheMode", [S, Ia, wa], Object.getOwnPropertyDescriptor(Va.prototype, "_defaultCacheMode"), Va.prototype), c(Va.prototype, "timeScale", [S, Fa, d], Object.getOwnPropertyDescriptor(Va.prototype, "timeScale"), Va.prototype), Ya = c(Va.prototype, "playTimes", [Ra, S, d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), Xa = c(Va.prototype, "premultipliedAlpha", [d, S, Na], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), c(Va.prototype, "debugBones", [ka, S], Object.getOwnPropertyDescriptor(Va.prototype, "debugBones"), Va.prototype), c(Va.prototype, "sockets", [ja, La], Object.getOwnPropertyDescriptor(Va.prototype, "sockets"), Va.prototype), Ga = c(Va.prototype, "_defaultArmatureIndexValue", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return ri.default;
        }
      }), Ha = c(Va.prototype, "_dragonAsset", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Wa = c(Va.prototype, "_dragonAtlasAsset", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), za = c(Va.prototype, "_armatureName", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Ka = c(Va.prototype, "_animationName", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Ja = c(Va.prototype, "_animationIndexValue", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), qa = c(Va.prototype, "_defaultCacheModeValue", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return oi.REALTIME;
        }
      }), Za = c(Va.prototype, "_timeScale", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Qa = c(Va.prototype, "_playTimes", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), $a = c(Va.prototype, "_debugBones", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), ti = c(Va.prototype, "_enableBatch", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), ei = c(Va.prototype, "_sockets", [d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ua = Va)) || Ua) || Ua) || Ua) || Ua);
      m.internal.ArmatureDisplay = ci;
      var mi,
          pi,
          di,
          yi,
          gi,
          vi,
          Di,
          Ai,
          bi,
          Ti,
          Si,
          Pi,
          Oi,
          xi,
          Ci,
          Mi,
          Bi,
          Ei,
          Ii,
          wi,
          Fi,
          Ri,
          Ni,
          ki = new s(255, 0, 0, 255),
          ji = new s(0, 0, 255, 255),
          Li = new s(0, 255, 0, 255),
          Ui = new Float32Array(4),
          Vi = new o();

      function Yi(t, e) {
        if (!t) return null;
        var a, i;

        switch (e) {
          case 1:
            a = gi ? I.ONE : I.SRC_ALPHA, i = I.ONE;
            break;

          case 10:
            a = I.DST_COLOR, i = I.ONE_MINUS_SRC_ALPHA;
            break;

          case 12:
            a = I.ONE, i = I.ONE_MINUS_SRC_COLOR;
            break;

          case 0:
          default:
            a = gi ? I.ONE : I.SRC_ALPHA, i = I.ONE_MINUS_SRC_ALPHA;
        }

        return bi.setBlendHash(), bi.getMaterialForBlend(a, i);
      }

      function Xi(t, e) {
        var a = t.a * e * yi,
            i = gi ? a / 255 : 1,
            r = t.r * mi * i / 255,
            n = t.g * pi * i / 255,
            s = t.b * di * i / 255;
        Ui[0] = r, Ui[1] = n, Ui[2] = s, Ui[3] = gi ? 1 : a / 255;
      }

      var Gi = {
        createData: function createData() {},
        updateRenderData: function updateRenderData(t) {
          bi = t, function (t) {
            var e = t._armature;

            if (e) {
              t.markForUpdateRenderData(), t.destroyRenderData(), vi = !0, gi = t.premultipliedAlpha, Ai = t.node, Di = t.requestMeshRenderData(), bi = t, Bi = 0;
              var a,
                  i = t.color;
              if (mi = i.r / 255, pi = i.g / 255, di = i.b / 255, yi = i.a / 255, 4294967295 !== i._val && (Bi |= 1), bi._enableBatch && (a = Ai.worldMatrix, vi = !1, Bi |= 16), t.isAnimationCached()) !function (t, e) {
                if (t) {
                  var a,
                      i,
                      r,
                      n = t.segments;

                  if (0 !== n.length) {
                    var s = t.vertices,
                        o = new Uint32Array(s.buffer),
                        l = t.indices,
                        h = 0,
                        u = 0,
                        _ = 0;
                    e && (Ei = e.m00, Fi = e.m01, Ii = e.m04, Ri = e.m05, wi = e.m12, Ni = e.m13);
                    var f,
                        c = 16 & Bi,
                        m = c && 1 === Ei && 0 === Fi && 0 === Ii && 1 === Ri,
                        p = 0,
                        d = t.colors,
                        y = d[p++],
                        g = y.vfOffset;
                    Xi(y, 1);

                    for (var v = 0, D = n.length; v < D; v++) {
                      var A = n[v];
                      r = Yi(A.tex, A.blendMode), Di.renderData.material || (Di.renderData.material = r), Di.texture || (Di.texture = A.tex), (vi || Di.renderData.material !== r || Di.texture !== A.tex) && (vi = !1, (Di = bi.requestMeshRenderData()).renderData.material = r, Di.texture = A.tex), Oi = A.vertexCount, xi = A.indexCount;
                      var b = Di.renderData;
                      b.reserve(Oi, xi), Si = b.indicesCount, Ti = b.vDataOffset, Pi = b.vertexCount, a = Di.renderData.vData, i = Di.renderData.iData;

                      for (var T = Si, S = Si + xi; T < S; T++) {
                        i[T] = Pi + l[u++];
                      }

                      _ = A.vfCount;

                      for (var P = h, O = Ti; P < h + _;) {
                        a[O] = s[P++], a[O + 1] = s[P++], a[O + 3] = s[P++], a[O + 4] = s[P++], f = o[P++], Ui[0] = (255 & f >>> 24) / 255, Ui[1] = (255 & f >>> 16) / 255, Ui[2] = (255 & f >>> 8) / 255, Ui[3] = (255 & f >>> 0) / 255, a.set(Ui, O + 5), O += 9;
                      }

                      if (h += _, m) for (var x = Ti, C = Ti + _; x < C; x += 9) {
                        a[x] += wi, a[x + 1] += Ni;
                      } else if (c) for (var M = Ti, B = Ti + _; M < B; M += 9) {
                        Ci = a[M], Mi = a[M + 1], a[M] = Ci * Ei + Mi * Ii + wi, a[M + 1] = Ci * Fi + Mi * Ri + Ni;
                      }
                      if (Di.renderData.advance(Oi, xi), 1 & Bi) for (var E = h - _, I = Ti + 5, w = Ti + 4 + _; I < w; I += 9, E += 9) {
                        E >= g && (Xi(y = d[p++], 1), g = y.vfOffset), a.set(Ui, I);
                      }
                    }
                  }
                }
              }(t._curFrame, a);else {
                Hi(e, a, 1);
                var r = t._debugDraw;

                if (t.debugBones && r) {
                  r.clear(), r.lineWidth = 5, r.strokeColor = ki, r.fillColor = ji;

                  for (var n = e.getBones(), s = 0, o = n.length; s < o; s++) {
                    var l = n[s],
                        h = Math.max(l.boneData.length, 5),
                        u = l.globalTransformMatrix.tx,
                        _ = l.globalTransformMatrix.ty,
                        f = u + l.globalTransformMatrix.a * h,
                        c = _ + l.globalTransformMatrix.b * h;
                    r.moveTo(u, _), r.lineTo(f, c), r.stroke(), r.circle(u, _, 2 * Math.PI), r.fill(), 0 === s && (r.fillColor = Li);
                  }
                }
              }
              t.attachUtil._syncAttachedNode(), Ai = void 0, Di = void 0, bi = void 0;
            }
          }(t);
        },
        updateColor: function updateColor(t) {
          t && (bi = t).markForUpdateRenderData();
        },
        fillBuffers: function fillBuffers(t, e) {
          if (t && 0 !== t.meshRenderDataArray.length) {
            var a = t.meshRenderDataArray,
                i = t.node,
                r = e.acquireBufferBatch(),
                n = r.byteOffset >> 2,
                s = r.indicesOffset,
                o = r.vertexOffset,
                l = a[t._meshRenderDataArrayIdx].renderData;
            r.request(l.vertexCount, l.indicesCount) || (r = e.currBufferBatch, n = 0, s = 0, o = 0);
            var h = r.vData,
                u = r.iData,
                _ = i.worldMatrix,
                f = l.vData,
                c = l.vertexStart,
                m = l.iData;
            if (h.set(f.slice(c, c + 9 * l.vertexCount), n), !t._enableBatch) for (var p = 0; p < l.vertexCount; p++) {
              var d = n + 9 * p;
              Vi.set(h[d], h[d + 1], h[d + 2]), Vi.transformMat4(_), h[d] = Vi.x, h[d + 1] = Vi.y, h[d + 2] = Vi.z;
            }

            for (var y = l.indicesStart, g = 0; g < l.indicesCount; g += 1) {
              u[g + s] = m[g + y] + o;
            }
          }
        }
      };

      function Hi(t, e, a) {
        for (var i, r, s, o, l, h, u, _ = t._slots, f = new n(), c = 0, m = _.length; c < m; c++) {
          if (h = (u = _[c])._color, u._visible && u._displayData) if (e ? u._mulMat(u._worldMatrix, e, u._matrix) : n.copy(u._worldMatrix, u._matrix), u.childArmature) Hi(u.childArmature, u._worldMatrix, a * h.a / 255);else if (s = Yi(u.getTexture(), u._blendMode)) {
            Di.renderData.material || (Di.renderData.material = s), Di.texture || (Di.texture = u.getTexture()), (vi || s !== Di.renderData.material || Di.texture !== u.getTexture()) && (vi = !1, (Di = bi.requestMeshRenderData()).renderData.material = s, Di.texture = u.getTexture()), Xi(h, a), f.set(u._worldMatrix), o = u._localVertices, Oi = o.length >> 2, l = u._indices, xi = l.length;
            var p = Di.renderData;
            p.reserve(Oi, xi), Si = p.indicesCount, Ti = p.vDataOffset, Pi = p.vertexCount, i = Di.renderData.vData, r = Di.renderData.iData, Ei = f.m00, Ii = f.m04, wi = f.m12, Fi = f.m01, Ri = f.m05, Ni = f.m13;

            for (var d = 0, y = o.length; d < y;) {
              Ci = o[d++], Mi = o[d++], i[Ti] = Ci * Ei + Mi * Ii + wi, i[Ti + 1] = Ci * Fi + Mi * Ri + Ni, i[Ti + 3] = o[d++], i[Ti + 4] = o[d++], i.set(Ui, Ti + 5), Ti += 9;
            }

            for (var g = 0, v = l.length; g < v; g++) {
              r[Si++] = Pi + l[g];
            }

            Di.renderData.advance(Oi, xi);
          }
        }
      }

      m.internal.DragonBonesAssembler = Gi;
      var Wi,
          zi,
          Ki,
          Ji = {
        getAssembler: function getAssembler() {
          return Gi;
        }
      };
      ci.Assembler = Ji, function (t) {
        t[t.FFD = 0] = "FFD", t[t.AdjustColor = 10] = "AdjustColor", t[t.BevelFilter = 11] = "BevelFilter", t[t.BlurFilter = 12] = "BlurFilter", t[t.DropShadowFilter = 13] = "DropShadowFilter", t[t.GlowFilter = 14] = "GlowFilter", t[t.GradientBevelFilter = 15] = "GradientBevelFilter", t[t.GradientGlowFilter = 16] = "GradientGlowFilter";
      }(Wi || (Wi = {})), function (t) {
        t[t.Frame = 0] = "Frame", t[t.Sound = 1] = "Sound";
      }(zi || (zi = {})), function (t) {
        t[t.None = 0] = "None", t[t.SameLayer = 1] = "SameLayer", t[t.SameGroup = 2] = "SameGroup", t[t.SameLayerAndGroup = 3] = "SameLayerAndGroup", t[t.All = 4] = "All";
      }(Ki || (Ki = {})), t("dragonBones", Object.freeze({
        __proto__: null,

        get ExtensionType() {
          return Wi;
        },

        get EventType() {
          return zi;
        },

        get AnimationFadeOutMode() {
          return Ki;
        },

        CCFactory: ke,
        CCSlot: Re,
        CCTextureAtlasData: we,
        CCTextureData: Fe,
        CCArmatureDisplay: Ne,
        AnimationCache: Ze,
        ArmatureCache: Qe,
        DragonBonesAsset: la,
        DragonBonesAtlasAsset: ua,
        timeScale: 1,

        get AnimationCacheMode() {
          return oi;
        },

        DragonBoneSocket: fi,
        ArmatureDisplay: ci,
        AttachUtil: hi,
        simpleDragonBoneAssembler: Ji,
        DragonBones: rt,
        BaseObject: nt,
        Matrix: st,
        Transform: ot,
        ColorTransform: lt,
        Point: ht,
        Rectangle: ut,
        UserData: _t,
        ActionData: ft,
        DragonBonesData: ct,
        ArmatureData: mt,
        BoneData: pt,
        SurfaceData: dt,
        SlotData: yt,
        ConstraintData: gt,
        IKConstraintData: vt,
        PathConstraintData: Dt,
        CanvasData: At,
        SkinData: bt,
        VerticesData: Tt,
        DisplayData: St,
        ImageDisplayData: Pt,
        ArmatureDisplayData: Ot,
        MeshDisplayData: xt,
        BoundingBoxDisplayData: Ct,
        PathDisplayData: Mt,
        WeightData: Bt,
        BoundingBoxData: Et,
        RectangleBoundingBoxData: It,
        EllipseBoundingBoxData: wt,
        PolygonBoundingBoxData: Ft,
        AnimationData: Rt,
        TimelineData: Nt,
        AnimationConfig: kt,
        TextureAtlasData: jt,
        TextureData: Lt,
        DeformVertices: Ut,
        Armature: Vt,
        TransformObject: Yt,
        Bone: Xt,
        Surface: Gt,
        Slot: Ht,
        Constraint: Wt,
        IKConstraint: zt,
        PathConstraint: Kt,
        WorldClock: Jt,
        Animation: qt,
        AnimationState: Zt,
        BonePose: Qt,
        BlendState: $t,
        TimelineState: te,
        TweenTimelineState: ee,
        BoneTimelineState: ae,
        SlotTimelineState: ie,
        ConstraintTimelineState: re,
        ActionTimelineState: ne,
        ZOrderTimelineState: se,
        BoneAllTimelineState: oe,
        BoneTranslateTimelineState: le,
        BoneRotateTimelineState: he,
        BoneScaleTimelineState: ue,
        SurfaceTimelineState: _e,
        SlotDislayTimelineState: fe,
        SlotColorTimelineState: ce,
        DeformTimelineState: me,
        IKConstraintTimelineState: pe,
        AnimationTimelineState: de,
        EventObject: ye,
        DataParser: ge,
        ObjectDataParser: ve,
        ActionFrame: De,
        BinaryDataParser: Ae,
        BaseFactory: be,
        BuildArmaturePackage: Te,
        BinaryOffset: Se,
        ArmatureType: Pe,
        BoneType: Oe,
        DisplayType: xe,
        BoundingBoxType: Ce,
        ActionType: Me,
        BlendMode: Be,
        TweenType: Ee,
        TimelineType: Ie
      }));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/gfx-webgl.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./webgl-define-47af0bf2.js"], function (e) {
  "use strict";

  var t, r, s, a, i, n, l, u, _, c, o, f, h, d, g, E, p, T, A, S, m, R, B, C, b, x, v, y, F, P, O, I, L, G, M, D, N, U, w, k, X, W, V, z, H, Y, K, j, q, Z, Q, J, $, ee, te, re, se, ae, ie, ne, le, ue, _e, ce, oe, fe, he, de, ge, Ee, pe;

  return {
    setters: [function (e) {
      t = e.ec, r = e.b5, s = e.b6, a = e.e2, i = e.D, n = e.x, l = e.ag, u = e.ac, _ = e.b0, c = e.as, o = e.G, f = e.z, h = e.H, d = e.f, g = e.b4, E = e.ba, p = e.dw, T = e.Z, A = e.X, S = e.a6, m = e.e, R = e.a7, B = e.J, C = e.T, b = e.Y, x = e.C, v = e.au, y = e.B, F = e.a8, P = e.ab, O = e.u, I = e.bf, L = e.bg, G = e.b7, M = e.bh, D = e.bi, N = e.bo, U = e.bp, w = e.bq, k = e.L, X = e.br, W = e.bs, V = e.an, z = e.bj, H = e.bk, Y = e.bm, K = e.b9, j = e.bb, q = e.bt, Z = e.dC, Q = e.A, J = e.t, $ = e.dB, ee = e.eW, te = e.eU, re = e.F, se = e.aY, ae = e.aa, ie = e.aX, ne = e.av, le = e.I, ue = e.bu, _e = e.bv, ce = e.bd, oe = e.d, fe = e.w, he = e.ap, de = e.am, ge = e.be, Ee = e.l;
    }, function () {}, function () {}, function (e) {
      pe = e.W;
    }],
    execute: function execute() {
      var Te = function (e) {
        function i() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuDescriptorSet = null, t;
        }

        t(i, e);
        var n = i.prototype;
        return n.initialize = function (e) {
          this._layout = e.layout;
          var t = e.layout.gpuDescriptorSetLayout,
              r = t.bindings,
              s = t.descriptorIndices,
              a = t.descriptorCount;
          this._buffers = Array(a).fill(null), this._textures = Array(a).fill(null), this._samplers = Array(a).fill(null);
          var i = [];
          this._gpuDescriptorSet = {
            gpuDescriptors: i,
            descriptorIndices: s
          };

          for (var n = 0; n < r.length; ++n) {
            for (var l = r[n], u = 0; u < l.count; u++) {
              i.push({
                type: l.descriptorType,
                gpuBuffer: null,
                gpuTexture: null,
                gpuSampler: null
              });
            }
          }

          return !0;
        }, n.destroy = function () {
          this._layout = null, this._gpuDescriptorSet = null;
        }, n.update = function () {
          if (this._isDirty && this._gpuDescriptorSet) {
            for (var e = this._gpuDescriptorSet.gpuDescriptors, t = 0; t < e.length; ++t) {
              if (e[t].type & r) {
                var a = this._buffers[t];
                a && (e[t].gpuBuffer = a.gpuBuffer || a.gpuBufferView);
              } else e[t].type & s && (this._textures[t] && (e[t].gpuTexture = this._textures[t].gpuTexture), this._samplers[t] && (e[t].gpuSampler = this._samplers[t].gpuSampler));
            }

            this._isDirty = !1;
          }
        }, a(i, [{
          key: "gpuDescriptorSet",
          get: function get() {
            return this._gpuDescriptorSet;
          }
        }]), i;
      }(i);

      function Ae(e, t) {
        switch (e) {
          case n.R8:
            return t.UNSIGNED_BYTE;

          case n.R8SN:
            return t.BYTE;

          case n.R8UI:
            return t.UNSIGNED_BYTE;

          case n.R8I:
            return t.BYTE;

          case n.R16F:
            return pe.HALF_FLOAT_OES;

          case n.R16UI:
            return t.UNSIGNED_SHORT;

          case n.R16I:
            return t.SHORT;

          case n.R32F:
            return t.FLOAT;

          case n.R32UI:
            return t.UNSIGNED_INT;

          case n.R32I:
            return t.INT;

          case n.RG8:
            return t.UNSIGNED_BYTE;

          case n.RG8SN:
            return t.BYTE;

          case n.RG8UI:
            return t.UNSIGNED_BYTE;

          case n.RG8I:
            return t.BYTE;

          case n.RG16F:
            return pe.HALF_FLOAT_OES;

          case n.RG16UI:
            return t.UNSIGNED_SHORT;

          case n.RG16I:
            return t.SHORT;

          case n.RG32F:
            return t.FLOAT;

          case n.RG32UI:
            return t.UNSIGNED_INT;

          case n.RG32I:
            return t.INT;

          case n.RGB8:
          case n.SRGB8:
            return t.UNSIGNED_BYTE;

          case n.RGB8SN:
            return t.BYTE;

          case n.RGB8UI:
            return t.UNSIGNED_BYTE;

          case n.RGB8I:
            return t.BYTE;

          case n.RGB16F:
            return pe.HALF_FLOAT_OES;

          case n.RGB16UI:
            return t.UNSIGNED_SHORT;

          case n.RGB16I:
            return t.SHORT;

          case n.RGB32F:
            return t.FLOAT;

          case n.RGB32UI:
            return t.UNSIGNED_INT;

          case n.RGB32I:
            return t.INT;

          case n.BGRA8:
          case n.RGBA8:
          case n.SRGB8_A8:
            return t.UNSIGNED_BYTE;

          case n.RGBA8SN:
            return t.BYTE;

          case n.RGBA8UI:
            return t.UNSIGNED_BYTE;

          case n.RGBA8I:
            return t.BYTE;

          case n.RGBA16F:
            return pe.HALF_FLOAT_OES;

          case n.RGBA16UI:
            return t.UNSIGNED_SHORT;

          case n.RGBA16I:
            return t.SHORT;

          case n.RGBA32F:
            return t.FLOAT;

          case n.RGBA32UI:
            return t.UNSIGNED_INT;

          case n.RGBA32I:
            return t.INT;

          case n.R5G6B5:
            return t.UNSIGNED_SHORT_5_6_5;

          case n.R11G11B10F:
            return t.FLOAT;

          case n.RGB5A1:
            return t.UNSIGNED_SHORT_5_5_5_1;

          case n.RGBA4:
            return t.UNSIGNED_SHORT_4_4_4_4;

          case n.RGB10A2:
            return t.UNSIGNED_BYTE;

          case n.RGB10A2UI:
            return t.UNSIGNED_INT;

          case n.RGB9E5:
            return t.UNSIGNED_BYTE;

          case n.D16:
            return t.UNSIGNED_SHORT;

          case n.D16S8:
            return pe.UNSIGNED_INT_24_8_WEBGL;

          case n.D24:
            return t.UNSIGNED_INT;

          case n.D24S8:
            return pe.UNSIGNED_INT_24_8_WEBGL;

          case n.D32F:
            return t.UNSIGNED_INT;

          case n.D32F_S8:
            return pe.UNSIGNED_INT_24_8_WEBGL;

          case n.BC1:
          case n.BC1_SRGB:
          case n.BC2:
          case n.BC2_SRGB:
          case n.BC3:
          case n.BC3_SRGB:
          case n.BC4:
            return t.UNSIGNED_BYTE;

          case n.BC4_SNORM:
            return t.BYTE;

          case n.BC5:
            return t.UNSIGNED_BYTE;

          case n.BC5_SNORM:
            return t.BYTE;

          case n.BC6H_SF16:
          case n.BC6H_UF16:
            return t.FLOAT;

          case n.BC7:
          case n.BC7_SRGB:
          case n.ETC_RGB8:
          case n.ETC2_RGB8:
          case n.ETC2_SRGB8:
          case n.ETC2_RGB8_A1:
          case n.ETC2_SRGB8_A1:
          case n.EAC_R11:
            return t.UNSIGNED_BYTE;

          case n.EAC_R11SN:
            return t.BYTE;

          case n.EAC_RG11:
            return t.UNSIGNED_BYTE;

          case n.EAC_RG11SN:
            return t.BYTE;

          case n.PVRTC_RGB2:
          case n.PVRTC_RGBA2:
          case n.PVRTC_RGB4:
          case n.PVRTC_RGBA4:
          case n.PVRTC2_2BPP:
          case n.PVRTC2_4BPP:
            return t.UNSIGNED_BYTE;

          case n.ASTC_RGBA_4X4:
          case n.ASTC_RGBA_5X4:
          case n.ASTC_RGBA_5X5:
          case n.ASTC_RGBA_6X5:
          case n.ASTC_RGBA_6X6:
          case n.ASTC_RGBA_8X5:
          case n.ASTC_RGBA_8X6:
          case n.ASTC_RGBA_8X8:
          case n.ASTC_RGBA_10X5:
          case n.ASTC_RGBA_10X6:
          case n.ASTC_RGBA_10X8:
          case n.ASTC_RGBA_10X10:
          case n.ASTC_RGBA_12X10:
          case n.ASTC_RGBA_12X12:
          case n.ASTC_SRGBA_4X4:
          case n.ASTC_SRGBA_5X4:
          case n.ASTC_SRGBA_5X5:
          case n.ASTC_SRGBA_6X5:
          case n.ASTC_SRGBA_6X6:
          case n.ASTC_SRGBA_8X5:
          case n.ASTC_SRGBA_8X6:
          case n.ASTC_SRGBA_8X8:
          case n.ASTC_SRGBA_10X5:
          case n.ASTC_SRGBA_10X6:
          case n.ASTC_SRGBA_10X8:
          case n.ASTC_SRGBA_10X10:
          case n.ASTC_SRGBA_12X10:
          case n.ASTC_SRGBA_12X12:
          default:
            return t.UNSIGNED_BYTE;
        }
      }

      function Se(e, t) {
        switch (e) {
          case n.A8:
            return t.ALPHA;

          case n.L8:
            return t.LUMINANCE;

          case n.LA8:
            return t.LUMINANCE_ALPHA;

          case n.RGB8:
          case n.RGB16F:
          case n.RGB32F:
            return t.RGB;

          case n.BGRA8:
          case n.RGBA8:
          case n.SRGB8_A8:
          case n.RGBA16F:
          case n.RGBA32F:
            return t.RGBA;

          case n.R5G6B5:
            return t.RGB;

          case n.RGB5A1:
          case n.RGBA4:
            return t.RGBA;

          case n.D16:
            return t.DEPTH_COMPONENT;

          case n.D16S8:
            return t.DEPTH_STENCIL;

          case n.D24:
            return t.DEPTH_COMPONENT;

          case n.D24S8:
            return t.DEPTH_STENCIL;

          case n.D32F:
            return t.DEPTH_COMPONENT;

          case n.D32F_S8:
            return t.DEPTH_STENCIL;

          case n.BC1:
            return pe.COMPRESSED_RGB_S3TC_DXT1_EXT;

          case n.BC1_ALPHA:
            return pe.COMPRESSED_RGBA_S3TC_DXT1_EXT;

          case n.BC1_SRGB:
            return pe.COMPRESSED_SRGB_S3TC_DXT1_EXT;

          case n.BC1_SRGB_ALPHA:
            return pe.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;

          case n.BC2:
            return pe.COMPRESSED_RGBA_S3TC_DXT3_EXT;

          case n.BC2_SRGB:
            return pe.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;

          case n.BC3:
            return pe.COMPRESSED_RGBA_S3TC_DXT5_EXT;

          case n.BC3_SRGB:
            return pe.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;

          case n.ETC_RGB8:
            return pe.COMPRESSED_RGB_ETC1_WEBGL;

          case n.ETC2_RGB8:
            return pe.COMPRESSED_RGB8_ETC2;

          case n.ETC2_SRGB8:
            return pe.COMPRESSED_SRGB8_ETC2;

          case n.ETC2_RGB8_A1:
            return pe.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;

          case n.ETC2_SRGB8_A1:
            return pe.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;

          case n.ETC2_RGBA8:
            return pe.COMPRESSED_RGBA8_ETC2_EAC;

          case n.ETC2_SRGB8_A8:
            return pe.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;

          case n.EAC_R11:
            return pe.COMPRESSED_R11_EAC;

          case n.EAC_R11SN:
            return pe.COMPRESSED_SIGNED_R11_EAC;

          case n.EAC_RG11:
            return pe.COMPRESSED_RG11_EAC;

          case n.EAC_RG11SN:
            return pe.COMPRESSED_SIGNED_RG11_EAC;

          case n.PVRTC_RGB2:
            return pe.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;

          case n.PVRTC_RGBA2:
            return pe.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;

          case n.PVRTC_RGB4:
            return pe.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;

          case n.PVRTC_RGBA4:
            return pe.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;

          case n.ASTC_RGBA_4X4:
            return pe.COMPRESSED_RGBA_ASTC_4x4_KHR;

          case n.ASTC_RGBA_5X4:
            return pe.COMPRESSED_RGBA_ASTC_5x4_KHR;

          case n.ASTC_RGBA_5X5:
            return pe.COMPRESSED_RGBA_ASTC_5x5_KHR;

          case n.ASTC_RGBA_6X5:
            return pe.COMPRESSED_RGBA_ASTC_6x5_KHR;

          case n.ASTC_RGBA_6X6:
            return pe.COMPRESSED_RGBA_ASTC_6x6_KHR;

          case n.ASTC_RGBA_8X5:
            return pe.COMPRESSED_RGBA_ASTC_8x5_KHR;

          case n.ASTC_RGBA_8X6:
            return pe.COMPRESSED_RGBA_ASTC_8x6_KHR;

          case n.ASTC_RGBA_8X8:
            return pe.COMPRESSED_RGBA_ASTC_8x8_KHR;

          case n.ASTC_RGBA_10X5:
            return pe.COMPRESSED_RGBA_ASTC_10x5_KHR;

          case n.ASTC_RGBA_10X6:
            return pe.COMPRESSED_RGBA_ASTC_10x6_KHR;

          case n.ASTC_RGBA_10X8:
            return pe.COMPRESSED_RGBA_ASTC_10x8_KHR;

          case n.ASTC_RGBA_10X10:
            return pe.COMPRESSED_RGBA_ASTC_10x10_KHR;

          case n.ASTC_RGBA_12X10:
            return pe.COMPRESSED_RGBA_ASTC_12x10_KHR;

          case n.ASTC_RGBA_12X12:
            return pe.COMPRESSED_RGBA_ASTC_12x12_KHR;

          case n.ASTC_SRGBA_4X4:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;

          case n.ASTC_SRGBA_5X4:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;

          case n.ASTC_SRGBA_5X5:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;

          case n.ASTC_SRGBA_6X5:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;

          case n.ASTC_SRGBA_6X6:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;

          case n.ASTC_SRGBA_8X5:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;

          case n.ASTC_SRGBA_8X6:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;

          case n.ASTC_SRGBA_8X8:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;

          case n.ASTC_SRGBA_10X5:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;

          case n.ASTC_SRGBA_10X6:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;

          case n.ASTC_SRGBA_10X8:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;

          case n.ASTC_SRGBA_10X10:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;

          case n.ASTC_SRGBA_12X10:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;

          case n.ASTC_SRGBA_12X12:
            return pe.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;

          default:
            return console.error("Unsupported Format, convert to WebGL format failed."), t.RGBA;
        }
      }

      function me(e, t) {
        switch (e) {
          case C.BOOL:
            return t.BOOL;

          case C.BOOL2:
            return t.BOOL_VEC2;

          case C.BOOL3:
            return t.BOOL_VEC3;

          case C.BOOL4:
            return t.BOOL_VEC4;

          case C.INT:
            return t.INT;

          case C.INT2:
            return t.INT_VEC2;

          case C.INT3:
            return t.INT_VEC3;

          case C.INT4:
            return t.INT_VEC4;

          case C.UINT:
            return t.UNSIGNED_INT;

          case C.FLOAT:
            return t.FLOAT;

          case C.FLOAT2:
            return t.FLOAT_VEC2;

          case C.FLOAT3:
            return t.FLOAT_VEC3;

          case C.FLOAT4:
            return t.FLOAT_VEC4;

          case C.MAT2:
            return t.FLOAT_MAT2;

          case C.MAT3:
            return t.FLOAT_MAT3;

          case C.MAT4:
            return t.FLOAT_MAT4;

          case C.SAMPLER2D:
            return t.SAMPLER_2D;

          case C.SAMPLER_CUBE:
            return t.SAMPLER_CUBE;

          default:
            return console.error("Unsupported GLType, convert to GL type failed."), C.UNKNOWN;
        }
      }

      function Re(e) {
        switch (e) {
          case C.BOOL:
          case C.BOOL2:
          case C.BOOL3:
          case C.BOOL4:
          case C.INT:
          case C.INT2:
          case C.INT3:
          case C.INT4:
          case C.UINT:
            return Int32Array;

          case C.FLOAT:
          case C.FLOAT2:
          case C.FLOAT3:
          case C.FLOAT4:
          case C.MAT2:
          case C.MAT3:
          case C.MAT4:
            return Float32Array;

          default:
            return console.error("Unsupported GLType, convert to TypedArrayConstructor failed."), Float32Array;
        }
      }

      function Be(e, t) {
        switch (e) {
          case t.BOOL:
            return C.BOOL;

          case t.BOOL_VEC2:
            return C.BOOL2;

          case t.BOOL_VEC3:
            return C.BOOL3;

          case t.BOOL_VEC4:
            return C.BOOL4;

          case t.INT:
            return C.INT;

          case t.INT_VEC2:
            return C.INT2;

          case t.INT_VEC3:
            return C.INT3;

          case t.INT_VEC4:
            return C.INT4;

          case t.UNSIGNED_INT:
            return C.UINT;

          case t.FLOAT:
            return C.FLOAT;

          case t.FLOAT_VEC2:
            return C.FLOAT2;

          case t.FLOAT_VEC3:
            return C.FLOAT3;

          case t.FLOAT_VEC4:
            return C.FLOAT4;

          case t.FLOAT_MAT2:
            return C.MAT2;

          case t.FLOAT_MAT3:
            return C.MAT3;

          case t.FLOAT_MAT4:
            return C.MAT4;

          case t.SAMPLER_2D:
            return C.SAMPLER2D;

          case t.SAMPLER_CUBE:
            return C.SAMPLER_CUBE;

          default:
            return console.error("Unsupported GLType, convert to Type failed."), C.UNKNOWN;
        }
      }

      function Ce(e, t) {
        switch (e) {
          case t.BOOL:
            return 4;

          case t.BOOL_VEC2:
            return 8;

          case t.BOOL_VEC3:
            return 12;

          case t.BOOL_VEC4:
            return 16;

          case t.INT:
            return 4;

          case t.INT_VEC2:
            return 8;

          case t.INT_VEC3:
            return 12;

          case t.INT_VEC4:
            return 16;

          case t.UNSIGNED_INT:
          case t.FLOAT:
            return 4;

          case t.FLOAT_VEC2:
            return 8;

          case t.FLOAT_VEC3:
            return 12;

          case t.FLOAT_VEC4:
          case t.FLOAT_MAT2:
            return 16;

          case t.FLOAT_MAT3:
            return 36;

          case t.FLOAT_MAT4:
            return 64;

          case t.SAMPLER_2D:
          case t.SAMPLER_CUBE:
            return 4;

          default:
            return console.error("Unsupported GLType, get type failed."), 0;
        }
      }

      function be(e, t) {
        switch (e) {
          case t.FLOAT_MAT2:
            return 2;

          case t.FLOAT_MAT3:
            return 3;

          case t.FLOAT_MAT4:
            return 4;

          default:
            return 1;
        }
      }

      var xe,
          ve = [512, 513, 514, 515, 516, 517, 518, 519],
          ye = [0, 7680, 7681, 7682, 7683, 5386, 34055, 34056],
          Fe = [32774, 32778, 32779, 32775, 32776],
          Pe = [0, 1, 770, 772, 771, 773, 768, 774, 769, 775, 776, 32769, 32770, 32771, 32772];
      !function (e) {
        e[e.BEGIN_RENDER_PASS = 0] = "BEGIN_RENDER_PASS", e[e.END_RENDER_PASS = 1] = "END_RENDER_PASS", e[e.BIND_STATES = 2] = "BIND_STATES", e[e.DRAW = 3] = "DRAW", e[e.UPDATE_BUFFER = 4] = "UPDATE_BUFFER", e[e.COPY_BUFFER_TO_TEXTURE = 5] = "COPY_BUFFER_TO_TEXTURE", e[e.COUNT = 6] = "COUNT";
      }(xe || (xe = {}));

      var Oe = function Oe(e) {
        this.cmdType = void 0, this.refCount = 0, this.cmdType = e;
      },
          Ie = function (e) {
        function r() {
          var t;
          return (t = e.call(this, xe.BEGIN_RENDER_PASS) || this).gpuRenderPass = null, t.gpuFramebuffer = null, t.renderArea = new l(), t.clearFlag = u.NONE, t.clearColors = [], t.clearDepth = 1, t.clearStencil = 0, t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuFramebuffer = null, this.clearColors.length = 0;
        }, r;
      }(Oe),
          Le = function (e) {
        function r() {
          var t;
          return (t = e.call(this, xe.BIND_STATES) || this).gpuPipelineState = null, t.gpuInputAssembler = null, t.gpuDescriptorSets = [], t.dynamicOffsets = [], t.dynamicStates = new _(), t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuPipelineState = null, this.gpuDescriptorSets.length = 0, this.gpuInputAssembler = null, this.dynamicOffsets.length = 0;
        }, r;
      }(Oe),
          Ge = function (e) {
        function r() {
          var t;
          return (t = e.call(this, xe.DRAW) || this).drawInfo = new c(), t;
        }

        return t(r, e), r.prototype.clear = function () {}, r;
      }(Oe),
          Me = function (e) {
        function r() {
          var t;
          return (t = e.call(this, xe.UPDATE_BUFFER) || this).gpuBuffer = null, t.buffer = null, t.offset = 0, t.size = 0, t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuBuffer = null, this.buffer = null;
        }, r;
      }(Oe),
          De = function (e) {
        function r() {
          var t;
          return (t = e.call(this, xe.COPY_BUFFER_TO_TEXTURE) || this).gpuTexture = null, t.buffers = [], t.regions = [], t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuTexture = null, this.buffers.length = 0, this.regions.length = 0;
        }, r;
      }(Oe),
          Ne = function () {
        function e() {
          this.cmds = new x(1), this.beginRenderPassCmds = new x(1), this.bindStatesCmds = new x(1), this.drawCmds = new x(1), this.updateBufferCmds = new x(1), this.copyBufferToTextureCmds = new x(1);
        }

        return e.prototype.clearCmds = function (e) {
          this.beginRenderPassCmds.length && (e.beginRenderPassCmdPool.freeCmds(this.beginRenderPassCmds), this.beginRenderPassCmds.clear()), this.bindStatesCmds.length && (e.bindStatesCmdPool.freeCmds(this.bindStatesCmds), this.bindStatesCmds.clear()), this.drawCmds.length && (e.drawCmdPool.freeCmds(this.drawCmds), this.drawCmds.clear()), this.updateBufferCmds.length && (e.updateBufferCmdPool.freeCmds(this.updateBufferCmds), this.updateBufferCmds.clear()), this.copyBufferToTextureCmds.length && (e.copyBufferToTextureCmdPool.freeCmds(this.copyBufferToTextureCmds), this.copyBufferToTextureCmds.clear()), this.cmds.clear();
        }, e;
      }();

      function Ue(e, t, r, s, a) {
        if (t.usage & f.UNIFORM) ArrayBuffer.isView(r) ? t.vf32.set(r, s / Float32Array.BYTES_PER_ELEMENT) : t.vf32.set(new Float32Array(r), s / Float32Array.BYTES_PER_ELEMENT);else if (t.usage & f.INDIRECT) t.indirects.length = s, Array.prototype.push.apply(t.indirects, r.drawInfos);else {
          var i = r,
              n = e.gl,
              l = e.stateCache;

          switch (t.glTarget) {
            case n.ARRAY_BUFFER:
              e.useVAO && l.glVAO && (e.OES_vertex_array_object.bindVertexArrayOES(null), l.glVAO = we.gpuInputAssembler = null), e.stateCache.glArrayBuffer !== t.glBuffer && (n.bindBuffer(n.ARRAY_BUFFER, t.glBuffer), e.stateCache.glArrayBuffer = t.glBuffer);
              break;

            case n.ELEMENT_ARRAY_BUFFER:
              e.useVAO && l.glVAO && (e.OES_vertex_array_object.bindVertexArrayOES(null), l.glVAO = we.gpuInputAssembler = null), e.stateCache.glElementArrayBuffer !== t.glBuffer && (n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, t.glBuffer), e.stateCache.glElementArrayBuffer = t.glBuffer);
              break;

            default:
              return void console.error("Unsupported BufferType, update buffer failed.");
          }

          a === i.byteLength ? n.bufferSubData(t.glTarget, s, i) : n.bufferSubData(t.glTarget, s, i.slice(0, a));
        }
      }

      var we = {
        gpuPipelineState: null,
        gpuInputAssembler: null,
        glPrimitive: 0
      };

      function ke(e, t, r, s, a, i, l) {
        var u = e.gl,
            _ = e.stateCache,
            c = 0;

        if (r && t) {
          _.glFramebuffer !== r.glFramebuffer && (u.bindFramebuffer(u.FRAMEBUFFER, r.glFramebuffer), _.glFramebuffer = r.glFramebuffer), _.viewport.left === s.x && _.viewport.top === s.y && _.viewport.width === s.width && _.viewport.height === s.height || (u.viewport(s.x, s.y, s.width, s.height), _.viewport.left = s.x, _.viewport.top = s.y, _.viewport.width = s.width, _.viewport.height = s.height), _.scissorRect.x === s.x && _.scissorRect.y === s.y && _.scissorRect.width === s.width && _.scissorRect.height === s.height || (u.scissor(s.x, s.y, s.width, s.height), _.scissorRect.x = s.x, _.scissorRect.y = s.y, _.scissorRect.width = s.width, _.scissorRect.height = s.height);
          var o = a.length;
          e.WEBGL_draw_buffers || (o = 1);

          for (var f = 0; f < o; ++f) {
            var h = t.colorAttachments[f];
            if (h.format !== n.UNKNOWN) switch (h.loadOp) {
              case T.LOAD:
                break;

              case T.CLEAR:
                _.bs.targets[0].blendColorMask !== A.ALL && u.colorMask(!0, !0, !0, !0);
                var d = a[0];
                u.clearColor(d.x, d.y, d.z, d.w), c |= u.COLOR_BUFFER_BIT;
                break;

              case T.DISCARD:
            }
          }

          if (t.depthStencilAttachment && t.depthStencilAttachment.format !== n.UNKNOWN) {
            switch (t.depthStencilAttachment.depthLoadOp) {
              case T.LOAD:
                break;

              case T.CLEAR:
                _.dss.depthWrite || u.depthMask(!0), u.clearDepth(i), c |= u.DEPTH_BUFFER_BIT;
                break;

              case T.DISCARD:
            }

            if (g[t.depthStencilAttachment.format].hasStencil) switch (t.depthStencilAttachment.stencilLoadOp) {
              case T.LOAD:
                break;

              case T.CLEAR:
                _.dss.stencilWriteMaskFront || u.stencilMaskSeparate(u.FRONT, 65535), _.dss.stencilWriteMaskBack || u.stencilMaskSeparate(u.BACK, 65535), u.clearStencil(l), c |= u.STENCIL_BUFFER_BIT;
                break;

              case T.DISCARD:
            }
          }

          if (c && u.clear(c), c & u.COLOR_BUFFER_BIT) {
            var E = _.bs.targets[0].blendColorMask;

            if (E !== A.ALL) {
              var p = (E & A.R) !== A.NONE,
                  S = (E & A.G) !== A.NONE,
                  m = (E & A.B) !== A.NONE,
                  R = (E & A.A) !== A.NONE;
              u.colorMask(p, S, m, R);
            }
          }

          c & u.DEPTH_BUFFER_BIT && !_.dss.depthWrite && u.depthMask(!1), c & u.STENCIL_BUFFER_BIT && (_.dss.stencilWriteMaskFront || u.stencilMaskSeparate(u.FRONT, 0), _.dss.stencilWriteMaskBack || u.stencilMaskSeparate(u.BACK, 0));
        }
      }

      function Xe(e, t, r, s, a, i) {
        var n,
            l,
            u,
            _ = e.gl,
            c = e.stateCache,
            o = t && t.gpuShader,
            f = !1;

        if (t && we.gpuPipelineState !== t) {
          if (we.gpuPipelineState = t, we.glPrimitive = t.glPrimitive, t.gpuShader) {
            var h = t.gpuShader.glProgram;
            c.glProgram !== h && (_.useProgram(h), c.glProgram = h, f = !0);
          }

          var d = t.rs;

          if (d) {
            if (c.rs.cullMode !== d.cullMode) {
              switch (d.cullMode) {
                case S.NONE:
                  _.disable(_.CULL_FACE);

                  break;

                case S.FRONT:
                  _.enable(_.CULL_FACE), _.cullFace(_.FRONT);
                  break;

                case S.BACK:
                  _.enable(_.CULL_FACE), _.cullFace(_.BACK);
              }

              c.rs.cullMode = d.cullMode;
            }

            var g = d.isFrontFaceCCW;
            c.rs.isFrontFaceCCW !== g && (_.frontFace(g ? _.CCW : _.CW), c.rs.isFrontFaceCCW = g), c.rs.depthBias === d.depthBias && c.rs.depthBiasSlop === d.depthBiasSlop || (_.polygonOffset(d.depthBias, d.depthBiasSlop), c.rs.depthBias = d.depthBias, c.rs.depthBiasSlop = d.depthBiasSlop), c.rs.lineWidth !== d.lineWidth && (_.lineWidth(d.lineWidth), c.rs.lineWidth = d.lineWidth);
          }

          var E = t.dss;
          E && (c.dss.depthTest !== E.depthTest && (E.depthTest ? _.enable(_.DEPTH_TEST) : _.disable(_.DEPTH_TEST), c.dss.depthTest = E.depthTest), c.dss.depthWrite !== E.depthWrite && (_.depthMask(E.depthWrite), c.dss.depthWrite = E.depthWrite), c.dss.depthFunc !== E.depthFunc && (_.depthFunc(ve[E.depthFunc]), c.dss.depthFunc = E.depthFunc), c.dss.stencilTestFront === E.stencilTestFront && c.dss.stencilTestBack === E.stencilTestBack || (E.stencilTestFront || E.stencilTestBack ? _.enable(_.STENCIL_TEST) : _.disable(_.STENCIL_TEST), c.dss.stencilTestFront = E.stencilTestFront, c.dss.stencilTestBack = E.stencilTestBack), c.dss.stencilFuncFront === E.stencilFuncFront && c.dss.stencilRefFront === E.stencilRefFront && c.dss.stencilReadMaskFront === E.stencilReadMaskFront || (_.stencilFuncSeparate(_.FRONT, ve[E.stencilFuncFront], E.stencilRefFront, E.stencilReadMaskFront), c.dss.stencilFuncFront = E.stencilFuncFront, c.dss.stencilRefFront = E.stencilRefFront, c.dss.stencilReadMaskFront = E.stencilReadMaskFront), c.dss.stencilFailOpFront === E.stencilFailOpFront && c.dss.stencilZFailOpFront === E.stencilZFailOpFront && c.dss.stencilPassOpFront === E.stencilPassOpFront || (_.stencilOpSeparate(_.FRONT, ye[E.stencilFailOpFront], ye[E.stencilZFailOpFront], ye[E.stencilPassOpFront]), c.dss.stencilFailOpFront = E.stencilFailOpFront, c.dss.stencilZFailOpFront = E.stencilZFailOpFront, c.dss.stencilPassOpFront = E.stencilPassOpFront), c.dss.stencilWriteMaskFront !== E.stencilWriteMaskFront && (_.stencilMaskSeparate(_.FRONT, E.stencilWriteMaskFront), c.dss.stencilWriteMaskFront = E.stencilWriteMaskFront), c.dss.stencilFuncBack === E.stencilFuncBack && c.dss.stencilRefBack === E.stencilRefBack && c.dss.stencilReadMaskBack === E.stencilReadMaskBack || (_.stencilFuncSeparate(_.BACK, ve[E.stencilFuncBack], E.stencilRefBack, E.stencilReadMaskBack), c.dss.stencilFuncBack = E.stencilFuncBack, c.dss.stencilRefBack = E.stencilRefBack, c.dss.stencilReadMaskBack = E.stencilReadMaskBack), c.dss.stencilFailOpBack === E.stencilFailOpBack && c.dss.stencilZFailOpBack === E.stencilZFailOpBack && c.dss.stencilPassOpBack === E.stencilPassOpBack || (_.stencilOpSeparate(_.BACK, ye[E.stencilFailOpBack], ye[E.stencilZFailOpBack], ye[E.stencilPassOpBack]), c.dss.stencilFailOpBack = E.stencilFailOpBack, c.dss.stencilZFailOpBack = E.stencilZFailOpBack, c.dss.stencilPassOpBack = E.stencilPassOpBack), c.dss.stencilWriteMaskBack !== E.stencilWriteMaskBack && (_.stencilMaskSeparate(_.BACK, E.stencilWriteMaskBack), c.dss.stencilWriteMaskBack = E.stencilWriteMaskBack));
          var p = t.bs;

          if (p) {
            c.bs.isA2C !== p.isA2C && (p.isA2C ? _.enable(_.SAMPLE_ALPHA_TO_COVERAGE) : _.disable(_.SAMPLE_ALPHA_TO_COVERAGE), c.bs.isA2C = p.isA2C), c.bs.blendColor.x === p.blendColor.x && c.bs.blendColor.y === p.blendColor.y && c.bs.blendColor.z === p.blendColor.z && c.bs.blendColor.w === p.blendColor.w || (_.blendColor(p.blendColor.x, p.blendColor.y, p.blendColor.z, p.blendColor.w), c.bs.blendColor.x = p.blendColor.x, c.bs.blendColor.y = p.blendColor.y, c.bs.blendColor.z = p.blendColor.z, c.bs.blendColor.w = p.blendColor.w);
            var T = p.targets[0],
                B = c.bs.targets[0];
            B.blend !== T.blend && (T.blend ? _.enable(_.BLEND) : _.disable(_.BLEND), B.blend = T.blend), B.blendEq === T.blendEq && B.blendAlphaEq === T.blendAlphaEq || (_.blendEquationSeparate(Fe[T.blendEq], Fe[T.blendAlphaEq]), B.blendEq = T.blendEq, B.blendAlphaEq = T.blendAlphaEq), B.blendSrc === T.blendSrc && B.blendDst === T.blendDst && B.blendSrcAlpha === T.blendSrcAlpha && B.blendDstAlpha === T.blendDstAlpha || (_.blendFuncSeparate(Pe[T.blendSrc], Pe[T.blendDst], Pe[T.blendSrcAlpha], Pe[T.blendDstAlpha]), B.blendSrc = T.blendSrc, B.blendDst = T.blendDst, B.blendSrcAlpha = T.blendSrcAlpha, B.blendDstAlpha = T.blendDstAlpha), B.blendColorMask !== T.blendColorMask && (_.colorMask((T.blendColorMask & A.R) !== A.NONE, (T.blendColorMask & A.G) !== A.NONE, (T.blendColorMask & A.B) !== A.NONE, (T.blendColorMask & A.A) !== A.NONE), B.blendColorMask = T.blendColorMask);
          }
        }

        if (t && t.gpuPipelineLayout && o) {
          for (var C = o.glBlocks.length, b = t.gpuPipelineLayout.dynamicOffsetIndices, x = 0; x < C; x++) {
            var v = o.glBlocks[x],
                y = s[v.set],
                F = y && y.descriptorIndices[v.binding],
                P = F >= 0 && y.gpuDescriptors[F],
                O = null,
                I = 0;

            if (P && P.gpuBuffer) {
              var L = P.gpuBuffer,
                  G = b[v.set],
                  M = G && G[v.binding];
              M >= 0 && (I = a[M]), "vf32" in L ? O = L.vf32 : (I += L.offset, O = L.gpuBuffer.vf32), I >>= 2;
            }

            if (O) for (var D = v.glActiveUniforms.length, N = 0; N < D; N++) {
              var U = v.glActiveUniforms[N];

              switch (U.glType) {
                case _.BOOL:
                case _.INT:
                  for (var w = 0; w < U.array.length; ++w) {
                    var k = U.offset + I + w;

                    if (O[k] !== U.array[w]) {
                      for (var X = w, W = k; X < U.array.length; ++X, ++W) {
                        U.array[X] = O[W];
                      }

                      _.uniform1iv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.BOOL_VEC2:
                case _.INT_VEC2:
                  for (var V = 0; V < U.array.length; ++V) {
                    var z = U.offset + I + V;

                    if (O[z] !== U.array[V]) {
                      for (var H = V, Y = z; H < U.array.length; ++H, ++Y) {
                        U.array[H] = O[Y];
                      }

                      _.uniform2iv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.BOOL_VEC3:
                case _.INT_VEC3:
                  for (var K = 0; K < U.array.length; ++K) {
                    var j = U.offset + I + K;

                    if (O[j] !== U.array[K]) {
                      for (var q = K, Z = j; q < U.array.length; ++q, ++Z) {
                        U.array[q] = O[Z];
                      }

                      _.uniform3iv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.BOOL_VEC4:
                case _.INT_VEC4:
                  for (var Q = 0; Q < U.array.length; ++Q) {
                    var J = U.offset + I + Q;

                    if (O[J] !== U.array[Q]) {
                      for (var $ = Q, ee = J; $ < U.array.length; ++$, ++ee) {
                        U.array[$] = O[ee];
                      }

                      _.uniform4iv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.FLOAT:
                  for (var te = 0; te < U.array.length; ++te) {
                    var re = U.offset + I + te;

                    if (O[re] !== U.array[te]) {
                      for (var se = te, ae = re; se < U.array.length; ++se, ++ae) {
                        U.array[se] = O[ae];
                      }

                      _.uniform1fv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.FLOAT_VEC2:
                  for (var ie = 0; ie < U.array.length; ++ie) {
                    var ne = U.offset + I + ie;

                    if (O[ne] !== U.array[ie]) {
                      for (var le = ie, ue = ne; le < U.array.length; ++le, ++ue) {
                        U.array[le] = O[ue];
                      }

                      _.uniform2fv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.FLOAT_VEC3:
                  for (var _e = 0; _e < U.array.length; ++_e) {
                    var ce = U.offset + I + _e;

                    if (O[ce] !== U.array[_e]) {
                      for (var oe = _e, fe = ce; oe < U.array.length; ++oe, ++fe) {
                        U.array[oe] = O[fe];
                      }

                      _.uniform3fv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.FLOAT_VEC4:
                  for (var he = 0; he < U.array.length; ++he) {
                    var de = U.offset + I + he;

                    if (O[de] !== U.array[he]) {
                      for (var ge = he, Ee = de; ge < U.array.length; ++ge, ++Ee) {
                        U.array[ge] = O[Ee];
                      }

                      _.uniform4fv(U.glLoc, U.array);

                      break;
                    }
                  }

                  break;

                case _.FLOAT_MAT2:
                  for (var pe = 0; pe < U.array.length; ++pe) {
                    var Te = U.offset + I + pe;

                    if (O[Te] !== U.array[pe]) {
                      for (var Ae = pe, Se = Te; Ae < U.array.length; ++Ae, ++Se) {
                        U.array[Ae] = O[Se];
                      }

                      _.uniformMatrix2fv(U.glLoc, !1, U.array);

                      break;
                    }
                  }

                  break;

                case _.FLOAT_MAT3:
                  for (var me = 0; me < U.array.length; ++me) {
                    var Re = U.offset + I + me;

                    if (O[Re] !== U.array[me]) {
                      for (var Be = me, Ce = Re; Be < U.array.length; ++Be, ++Ce) {
                        U.array[Be] = O[Ce];
                      }

                      _.uniformMatrix3fv(U.glLoc, !1, U.array);

                      break;
                    }
                  }

                  break;

                case _.FLOAT_MAT4:
                  for (var be = 0; be < U.array.length; ++be) {
                    var xe = U.offset + I + be;

                    if (O[xe] !== U.array[be]) {
                      for (var Oe = be, Ie = xe; Oe < U.array.length; ++Oe, ++Ie) {
                        U.array[Oe] = O[Ie];
                      }

                      _.uniformMatrix4fv(U.glLoc, !1, U.array);

                      break;
                    }
                  }

              }
            } else m("Buffer binding '" + v.name + "' at set " + v.set + " binding " + v.binding + " is not bounded");
          }

          for (var Le = o.glSamplerTextures.length, Ge = 0; Ge < Le; Ge++) {
            for (var Me = o.glSamplerTextures[Ge], De = s[Me.set], Ne = De && De.descriptorIndices[Me.binding], Ue = Ne >= 0 && De.gpuDescriptors[Ne], ke = Me.units.length, Xe = 0; Xe < ke; Xe++) {
              var We = Me.units[Xe];

              if (Ue && Ue.gpuSampler) {
                if (Ue.gpuTexture && Ue.gpuTexture.size > 0) {
                  var Ve = Ue.gpuTexture,
                      ze = c.glTexUnits[We];
                  ze.glTexture !== Ve.glTexture && (c.texUnit !== We && (_.activeTexture(_.TEXTURE0 + We), c.texUnit = We), Ve.glTexture ? _.bindTexture(Ve.glTarget, Ve.glTexture) : _.bindTexture(Ve.glTarget, e.nullTex2D.gpuTexture.glTexture), ze.glTexture = Ve.glTexture);
                  var He = Ue.gpuSampler;
                  Ve.isPowerOf2 ? (n = He.glWrapS, l = He.glWrapT) : (n = _.CLAMP_TO_EDGE, l = _.CLAMP_TO_EDGE), u = Ve.isPowerOf2 ? Ve.mipLevel <= 1 && (He.glMinFilter === _.LINEAR_MIPMAP_NEAREST || He.glMinFilter === _.LINEAR_MIPMAP_LINEAR) ? _.LINEAR : He.glMinFilter : He.glMinFilter === _.LINEAR || He.glMinFilter === _.LINEAR_MIPMAP_NEAREST || He.glMinFilter === _.LINEAR_MIPMAP_LINEAR ? _.LINEAR : _.NEAREST, Ve.glWrapS !== n && (c.texUnit !== We && (_.activeTexture(_.TEXTURE0 + We), c.texUnit = We), _.texParameteri(Ve.glTarget, _.TEXTURE_WRAP_S, n), Ve.glWrapS = n), Ve.glWrapT !== l && (c.texUnit !== We && (_.activeTexture(_.TEXTURE0 + We), c.texUnit = We), _.texParameteri(Ve.glTarget, _.TEXTURE_WRAP_T, l), Ve.glWrapT = l), Ve.glMinFilter !== u && (c.texUnit !== We && (_.activeTexture(_.TEXTURE0 + We), c.texUnit = We), _.texParameteri(Ve.glTarget, _.TEXTURE_MIN_FILTER, u), Ve.glMinFilter = u), Ve.glMagFilter !== He.glMagFilter && (c.texUnit !== We && (_.activeTexture(_.TEXTURE0 + We), c.texUnit = We), _.texParameteri(Ve.glTarget, _.TEXTURE_MAG_FILTER, He.glMagFilter), Ve.glMagFilter = He.glMagFilter);
                }

                Ue = De.gpuDescriptors[++Ne];
              } else m("Sampler binding '" + Me.name + "' at set " + Me.set + " binding " + Me.binding + " index " + Xe + " is not bounded");
            }
          }
        }

        if (r && o && (f || we.gpuInputAssembler !== r)) {
          we.gpuInputAssembler = r;
          var Ye = e.ANGLE_instanced_arrays;

          if (e.useVAO) {
            var Ke = e.OES_vertex_array_object,
                je = r.glVAOs.get(o.glProgram);

            if (!je) {
              var qe;
              je = Ke.createVertexArrayOES(), r.glVAOs.set(o.glProgram, je), Ke.bindVertexArrayOES(je), _.bindBuffer(_.ARRAY_BUFFER, null), _.bindBuffer(_.ELEMENT_ARRAY_BUFFER, null), c.glArrayBuffer = null, c.glElementArrayBuffer = null;

              for (var Ze = o.glInputs.length, Qe = 0; Qe < Ze; Qe++) {
                var Je = o.glInputs[Qe];
                qe = null;

                for (var $e = r.glAttribs.length, et = 0; et < $e; et++) {
                  var tt = r.glAttribs[et];

                  if (tt.name === Je.name) {
                    qe = tt;
                    break;
                  }
                }

                if (qe) {
                  c.glArrayBuffer !== qe.glBuffer && (_.bindBuffer(_.ARRAY_BUFFER, qe.glBuffer), c.glArrayBuffer = qe.glBuffer);

                  for (var rt = 0; rt < qe.componentCount; ++rt) {
                    var st = Je.glLoc + rt,
                        at = qe.offset + qe.size * rt;
                    _.enableVertexAttribArray(st), c.glCurrentAttribLocs[st] = !0, _.vertexAttribPointer(st, qe.count, qe.glType, qe.isNormalized, qe.stride, at), Ye && Ye.vertexAttribDivisorANGLE(st, qe.isInstanced ? 1 : 0);
                  }
                }
              }

              var it = r.gpuIndexBuffer;
              it && _.bindBuffer(_.ELEMENT_ARRAY_BUFFER, it.glBuffer), Ke.bindVertexArrayOES(null), _.bindBuffer(_.ARRAY_BUFFER, null), _.bindBuffer(_.ELEMENT_ARRAY_BUFFER, null), c.glArrayBuffer = null, c.glElementArrayBuffer = null;
            }

            c.glVAO !== je && (Ke.bindVertexArrayOES(je), c.glVAO = je);
          } else {
            for (var nt = 0; nt < e.capabilities.maxVertexAttributes; ++nt) {
              c.glCurrentAttribLocs[nt] = !1;
            }

            for (var lt = o.glInputs.length, ut = 0; ut < lt; ut++) {
              for (var _t = o.glInputs[ut], ct = null, ot = r.glAttribs.length, ft = 0; ft < ot; ft++) {
                var ht = r.glAttribs[ft];

                if (ht.name === _t.name) {
                  ct = ht;
                  break;
                }
              }

              if (ct) {
                c.glArrayBuffer !== ct.glBuffer && (_.bindBuffer(_.ARRAY_BUFFER, ct.glBuffer), c.glArrayBuffer = ct.glBuffer);

                for (var dt = 0; dt < ct.componentCount; ++dt) {
                  var gt = _t.glLoc + dt,
                      Et = ct.offset + ct.size * dt;
                  !c.glEnabledAttribLocs[gt] && gt >= 0 && (_.enableVertexAttribArray(gt), c.glEnabledAttribLocs[gt] = !0), c.glCurrentAttribLocs[gt] = !0, _.vertexAttribPointer(gt, ct.count, ct.glType, ct.isNormalized, ct.stride, Et), Ye && Ye.vertexAttribDivisorANGLE(gt, ct.isInstanced ? 1 : 0);
                }
              }
            }

            var pt = r.gpuIndexBuffer;
            pt && c.glElementArrayBuffer !== pt.glBuffer && (_.bindBuffer(_.ELEMENT_ARRAY_BUFFER, pt.glBuffer), c.glElementArrayBuffer = pt.glBuffer);

            for (var Tt = 0; Tt < e.capabilities.maxVertexAttributes; ++Tt) {
              c.glEnabledAttribLocs[Tt] !== c.glCurrentAttribLocs[Tt] && (_.disableVertexAttribArray(Tt), c.glEnabledAttribLocs[Tt] = !1);
            }
          }
        }

        if (t && t.dynamicStates.length) for (var At = t.dynamicStates.length, St = 0; St < At; St++) {
          switch (t.dynamicStates[St]) {
            case R.VIEWPORT:
              var mt = i.viewport;
              c.viewport.left === mt.left && c.viewport.top === mt.top && c.viewport.width === mt.width && c.viewport.height === mt.height || (_.viewport(mt.left, mt.top, mt.width, mt.height), c.viewport.left = mt.left, c.viewport.top = mt.top, c.viewport.width = mt.width, c.viewport.height = mt.height);
              break;

            case R.SCISSOR:
              var Rt = i.scissor;
              c.scissorRect.x === Rt.x && c.scissorRect.y === Rt.y && c.scissorRect.width === Rt.width && c.scissorRect.height === Rt.height || (_.scissor(Rt.x, Rt.y, Rt.width, Rt.height), c.scissorRect.x = Rt.x, c.scissorRect.y = Rt.y, c.scissorRect.width = Rt.width, c.scissorRect.height = Rt.height);
              break;

            case R.LINE_WIDTH:
              c.rs.lineWidth !== i.lineWidth && (_.lineWidth(i.lineWidth), c.rs.lineWidth = i.lineWidth);
              break;

            case R.DEPTH_BIAS:
              c.rs.depthBias === i.depthBiasConstant && c.rs.depthBiasSlop === i.depthBiasSlope || (_.polygonOffset(i.depthBiasConstant, i.depthBiasSlope), c.rs.depthBias = i.depthBiasConstant, c.rs.depthBiasSlop = i.depthBiasSlope);
              break;

            case R.BLEND_CONSTANTS:
              var Bt = i.blendConstant;
              c.bs.blendColor.x === Bt.x && c.bs.blendColor.y === Bt.y && c.bs.blendColor.z === Bt.z && c.bs.blendColor.w === Bt.w || (_.blendColor(Bt.x, Bt.y, Bt.z, Bt.w), c.bs.blendColor.copy(Bt));
              break;

            case R.STENCIL_WRITE_MASK:
              var Ct = i.stencilStatesFront,
                  bt = i.stencilStatesBack;
              c.dss.stencilWriteMaskFront !== Ct.writeMask && (_.stencilMaskSeparate(_.FRONT, Ct.writeMask), c.dss.stencilWriteMaskFront = Ct.writeMask), c.dss.stencilWriteMaskBack !== bt.writeMask && (_.stencilMaskSeparate(_.BACK, bt.writeMask), c.dss.stencilWriteMaskBack = bt.writeMask);
              break;

            case R.STENCIL_COMPARE_MASK:
              var xt = i.stencilStatesFront,
                  vt = i.stencilStatesBack;
              c.dss.stencilRefFront === xt.reference && c.dss.stencilReadMaskFront === xt.compareMask || (_.stencilFuncSeparate(_.FRONT, ve[c.dss.stencilFuncFront], xt.reference, xt.compareMask), c.dss.stencilRefFront = xt.reference, c.dss.stencilReadMaskFront = xt.compareMask), c.dss.stencilRefBack === vt.reference && c.dss.stencilReadMaskBack === vt.compareMask || (_.stencilFuncSeparate(_.BACK, ve[c.dss.stencilFuncBack], vt.reference, vt.compareMask), c.dss.stencilRefBack = vt.reference, c.dss.stencilReadMaskBack = vt.compareMask);
          }
        }
      }

      function We(e, t) {
        var r = e.gl,
            s = e.ANGLE_instanced_arrays,
            a = we.gpuInputAssembler,
            i = we.glPrimitive;
        if (a) if (a.gpuIndirectBuffer) for (var n = a.gpuIndirectBuffer.indirects.length, l = 0; l < n; l++) {
          var u = a.gpuIndirectBuffer.indirects[l],
              _ = a.gpuIndexBuffer;
          if (u.instanceCount && s) {
            if (_) {
              if (u.indexCount > 0) {
                var c = u.firstIndex * _.stride;
                s.drawElementsInstancedANGLE(i, u.indexCount, a.glIndexType, c, u.instanceCount);
              }
            } else u.vertexCount > 0 && s.drawArraysInstancedANGLE(i, u.firstVertex, u.vertexCount, u.instanceCount);
          } else if (_) {
            if (u.indexCount > 0) {
              var o = u.firstIndex * _.stride;
              r.drawElements(i, u.indexCount, a.glIndexType, o);
            }
          } else u.vertexCount > 0 && r.drawArrays(i, u.firstVertex, u.vertexCount);
        } else {
          var f = a.gpuIndexBuffer;
          if (t.instanceCount && s) {
            if (f) {
              if (t.indexCount > 0) {
                var h = t.firstIndex * f.stride;
                s.drawElementsInstancedANGLE(i, t.indexCount, a.glIndexType, h, t.instanceCount);
              }
            } else t.vertexCount > 0 && s.drawArraysInstancedANGLE(i, t.firstVertex, t.vertexCount, t.instanceCount);
          } else if (f) {
            if (t.indexCount > 0) {
              var d = t.firstIndex * f.stride;
              r.drawElements(i, t.indexCount, a.glIndexType, d);
            }
          } else t.vertexCount > 0 && r.drawArrays(i, t.firstVertex, t.vertexCount);
        }
      }

      var Ve = new Array(xe.COUNT);

      function ze(e, t) {
        Ve.fill(0);

        for (var r = 0; r < t.cmds.length; ++r) {
          var s = t.cmds.array[r],
              a = Ve[s]++;

          switch (s) {
            case xe.BEGIN_RENDER_PASS:
              var i = t.beginRenderPassCmds.array[a];
              ke(e, i.gpuRenderPass, i.gpuFramebuffer, i.renderArea, i.clearColors, i.clearDepth, i.clearStencil);
              break;

            case xe.BIND_STATES:
              var n = t.bindStatesCmds.array[a];
              Xe(e, n.gpuPipelineState, n.gpuInputAssembler, n.gpuDescriptorSets, n.dynamicOffsets, n.dynamicStates);
              break;

            case xe.DRAW:
              We(e, t.drawCmds.array[a].drawInfo);
              break;

            case xe.UPDATE_BUFFER:
              var l = t.updateBufferCmds.array[a];
              Ue(e, l.gpuBuffer, l.buffer, l.offset, l.size);
              break;

            case xe.COPY_BUFFER_TO_TEXTURE:
              var u = t.copyBufferToTextureCmds.array[a];
              He(e, u.buffers, u.gpuTexture, u.regions);
          }
        }
      }

      function He(e, t, r, s) {
        var a = e.gl,
            i = e.stateCache.glTexUnits[e.stateCache.texUnit];
        i.glTexture !== r.glTexture && (a.bindTexture(r.glTarget, r.glTexture), i.glTexture = r.glTexture);
        var n = 0,
            l = 1,
            u = 1,
            _ = 0,
            c = g[r.format].isCompressed;

        switch (r.glTarget) {
          case a.TEXTURE_2D:
            for (var o = 0; o < s.length; o++) {
              var f = s[o];
              l = f.texExtent.width, u = f.texExtent.height;
              var h = t[n++];
              c ? r.glInternalFmt === pe.COMPRESSED_RGB_ETC1_WEBGL || e.noCompressedTexSubImage2D ? a.compressedTexImage2D(a.TEXTURE_2D, f.texSubres.mipLevel, r.glInternalFmt, l, u, 0, h) : a.compressedTexSubImage2D(a.TEXTURE_2D, f.texSubres.mipLevel, f.texOffset.x, f.texOffset.y, l, u, r.glFormat, h) : a.texSubImage2D(a.TEXTURE_2D, f.texSubres.mipLevel, f.texOffset.x, f.texOffset.y, l, u, r.glFormat, r.glType, h);
            }

            break;

          case a.TEXTURE_CUBE_MAP:
            for (var d = 0; d < s.length; d++) {
              var E = s[d],
                  p = E.texSubres.baseArrayLayer + E.texSubres.layerCount;

              for (_ = E.texSubres.baseArrayLayer; _ < p; ++_) {
                l = E.texExtent.width, u = E.texExtent.height;
                var T = t[n++];
                c ? r.glInternalFmt === pe.COMPRESSED_RGB_ETC1_WEBGL || e.noCompressedTexSubImage2D ? a.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + _, E.texSubres.mipLevel, r.glInternalFmt, l, u, 0, T) : a.compressedTexSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + _, E.texSubres.mipLevel, E.texOffset.x, E.texOffset.y, l, u, r.glFormat, T) : a.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + _, E.texSubres.mipLevel, E.texOffset.x, E.texOffset.y, l, u, r.glFormat, r.glType, T);
              }
            }

            break;

          default:
            console.error("Unsupported GL texture type, copy buffer to texture failed.");
        }

        r.flags & B.GEN_MIPMAP && a.generateMipmap(r.glTarget);
      }

      var Ye = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuBuffer = null, t._gpuBufferView = null, t._uniformBuffer = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          if ("buffer" in e) {
            this._isBufferView = !0;
            var t = e.buffer;
            this._usage = t.usage, this._memUsage = t.memUsage, this._size = this._stride = e.range, this._count = 1, this._flags = t.flags, this._gpuBufferView = {
              gpuBuffer: t.gpuBuffer,
              offset: e.offset,
              range: e.range
            };
          } else this._usage = e.usage, this._memUsage = e.memUsage, this._size = e.size, this._stride = Math.max(e.stride || this._size, 1), this._count = this._size / this._stride, this._flags = e.flags, this._usage & f.INDIRECT && (this._indirectBuffer = new v()), this._usage & f.UNIFORM && this._size > 0 && (this._uniformBuffer = new Uint8Array(this._size)), this._gpuBuffer = {
            usage: this._usage,
            memUsage: this._memUsage,
            size: this._size,
            stride: this._stride,
            buffer: null,
            vf32: null,
            indirects: [],
            glTarget: 0,
            glBuffer: null
          }, e.usage & f.INDIRECT && (this._gpuBuffer.indirects = this._indirectBuffer.drawInfos), this._usage & f.UNIFORM && (this._gpuBuffer.buffer = this._uniformBuffer), function (e, t) {
            var r = e.gl,
                s = e.stateCache,
                a = t.memUsage & o.HOST ? r.DYNAMIC_DRAW : r.STATIC_DRAW;

            if (t.usage & f.VERTEX) {
              t.glTarget = r.ARRAY_BUFFER;
              var i = r.createBuffer();
              i && (t.glBuffer = i, t.size > 0 && (e.useVAO && s.glVAO && (e.OES_vertex_array_object.bindVertexArrayOES(null), s.glVAO = we.gpuInputAssembler = null), e.stateCache.glArrayBuffer !== t.glBuffer && (r.bindBuffer(r.ARRAY_BUFFER, t.glBuffer), e.stateCache.glArrayBuffer = t.glBuffer), r.bufferData(r.ARRAY_BUFFER, t.size, a), r.bindBuffer(r.ARRAY_BUFFER, null), e.stateCache.glArrayBuffer = null));
            } else if (t.usage & f.INDEX) {
              t.glTarget = r.ELEMENT_ARRAY_BUFFER;
              var n = r.createBuffer();
              n && (t.glBuffer = n, t.size > 0 && (e.useVAO && s.glVAO && (e.OES_vertex_array_object.bindVertexArrayOES(null), s.glVAO = we.gpuInputAssembler = null), e.stateCache.glElementArrayBuffer !== t.glBuffer && (r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, t.glBuffer), e.stateCache.glElementArrayBuffer = t.glBuffer), r.bufferData(r.ELEMENT_ARRAY_BUFFER, t.size, a), r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, null), e.stateCache.glElementArrayBuffer = null));
            } else t.usage & f.UNIFORM ? (t.glTarget = r.NONE, t.buffer && (t.vf32 = new Float32Array(t.buffer.buffer))) : (t.usage & f.INDIRECT || t.usage & f.TRANSFER_DST || t.usage & f.TRANSFER_SRC || console.error("Unsupported BufferType, create buffer failed."), t.glTarget = r.NONE);
          }(this._device, this._gpuBuffer), this._device.memoryStatus.bufferSize += this._size;

          return !0;
        }, s.destroy = function () {
          var e, t;
          this._gpuBuffer && (e = this._device, (t = this._gpuBuffer).glBuffer && (e.gl.deleteBuffer(t.glBuffer), t.glBuffer = null), this._device.memoryStatus.bufferSize -= this._size, this._gpuBuffer = null), this._gpuBufferView && (this._gpuBufferView = null);
        }, s.resize = function (e) {
          if (this._isBufferView) console.warn("cannot resize buffer views!");else {
            var t,
                r,
                s,
                a,
                i,
                n = this._size;
            n !== e && (this._size = e, this._count = this._size / this._stride, this._uniformBuffer && (this._uniformBuffer = new Uint8Array(e)), this._gpuBuffer && (this._uniformBuffer && (this._gpuBuffer.buffer = this._uniformBuffer), this._gpuBuffer.size = e, e > 0 && (t = this._device, r = this._gpuBuffer, s = t.gl, a = t.stateCache, i = r.memUsage & o.HOST ? s.DYNAMIC_DRAW : s.STATIC_DRAW, r.usage & f.VERTEX ? (t.useVAO && a.glVAO && (t.OES_vertex_array_object.bindVertexArrayOES(null), a.glVAO = we.gpuInputAssembler = null), t.stateCache.glArrayBuffer !== r.glBuffer && s.bindBuffer(s.ARRAY_BUFFER, r.glBuffer), r.buffer ? s.bufferData(s.ARRAY_BUFFER, r.buffer, i) : s.bufferData(s.ARRAY_BUFFER, r.size, i), s.bindBuffer(s.ARRAY_BUFFER, null), t.stateCache.glArrayBuffer = null) : r.usage & f.INDEX ? (t.useVAO && a.glVAO && (t.OES_vertex_array_object.bindVertexArrayOES(null), a.glVAO = we.gpuInputAssembler = null), t.stateCache.glElementArrayBuffer !== r.glBuffer && s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, r.glBuffer), r.buffer ? s.bufferData(s.ELEMENT_ARRAY_BUFFER, r.buffer, i) : s.bufferData(s.ELEMENT_ARRAY_BUFFER, r.size, i), s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, null), t.stateCache.glElementArrayBuffer = null) : r.usage & f.UNIFORM ? r.buffer && (r.vf32 = new Float32Array(r.buffer.buffer)) : (r.usage & f.INDIRECT || r.usage & f.TRANSFER_DST || r.usage & f.TRANSFER_SRC || console.error("Unsupported BufferType, create buffer failed."), r.glTarget = s.NONE), this._device.memoryStatus.bufferSize -= n, this._device.memoryStatus.bufferSize += e)));
          }
        }, s.update = function (e, t) {
          var r;
          this._isBufferView ? console.warn("cannot update through buffer views!") : (r = void 0 !== t ? t : this._usage & f.INDIRECT ? 0 : e.byteLength, Ue(this._device, this._gpuBuffer, e, 0, r));
        }, a(r, [{
          key: "gpuBuffer",
          get: function get() {
            return this._gpuBuffer;
          }
        }, {
          key: "gpuBufferView",
          get: function get() {
            return this._gpuBufferView;
          }
        }]), r;
      }(y),
          Ke = function () {
        function e(e, t) {
          this._frees = void 0, this._freeIdx = 0, this._freeCmds = void 0, this._frees = new Array(t), this._freeCmds = new x(t);

          for (var r = 0; r < t; ++r) {
            this._frees[r] = new e();
          }

          this._freeIdx = t - 1;
        }

        var t = e.prototype;
        return t.alloc = function (e) {
          if (this._freeIdx < 0) {
            var t = 2 * this._frees.length,
                r = this._frees;
            this._frees = new Array(t);

            for (var s = t - r.length, a = 0; a < s; ++a) {
              this._frees[a] = new e();
            }

            for (var i = s, n = 0; i < t; ++i, ++n) {
              this._frees[i] = r[n];
            }

            this._freeIdx += s;
          }

          var l = this._frees[this._freeIdx];
          return this._frees[this._freeIdx--] = null, ++l.refCount, l;
        }, t.free = function (e) {
          0 == --e.refCount && this._freeCmds.push(e);
        }, t.freeCmds = function (e) {
          for (var t = 0; t < e.length; ++t) {
            0 == --e.array[t].refCount && this._freeCmds.push(e.array[t]);
          }
        }, t.release = function () {
          for (var e = 0; e < this._freeCmds.length; ++e) {
            var t = this._freeCmds.array[e];
            t.clear(), this._frees[++this._freeIdx] = t;
          }

          this._freeCmds.clear();
        }, e;
      }(),
          je = function () {
        function e() {
          this.beginRenderPassCmdPool = void 0, this.bindStatesCmdPool = void 0, this.drawCmdPool = void 0, this.updateBufferCmdPool = void 0, this.copyBufferToTextureCmdPool = void 0, this.beginRenderPassCmdPool = new Ke(Ie, 1), this.bindStatesCmdPool = new Ke(Le, 1), this.drawCmdPool = new Ke(Ge, 1), this.updateBufferCmdPool = new Ke(Me, 1), this.copyBufferToTextureCmdPool = new Ke(De, 1);
        }

        var t = e.prototype;
        return t.clearCmds = function (e) {
          e.beginRenderPassCmds.length && (this.beginRenderPassCmdPool.freeCmds(e.beginRenderPassCmds), e.beginRenderPassCmds.clear()), e.bindStatesCmds.length && (this.bindStatesCmdPool.freeCmds(e.bindStatesCmds), e.bindStatesCmds.clear()), e.drawCmds.length && (this.drawCmdPool.freeCmds(e.drawCmds), e.drawCmds.clear()), e.updateBufferCmds.length && (this.updateBufferCmdPool.freeCmds(e.updateBufferCmds), e.updateBufferCmds.clear()), e.copyBufferToTextureCmds.length && (this.copyBufferToTextureCmdPool.freeCmds(e.copyBufferToTextureCmds), e.copyBufferToTextureCmds.clear()), e.cmds.clear();
        }, t.releaseCmds = function () {
          this.beginRenderPassCmdPool.release(), this.bindStatesCmdPool.release(), this.drawCmdPool.release(), this.updateBufferCmdPool.release(), this.copyBufferToTextureCmdPool.release();
        }, e;
      }(),
          qe = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this).cmdPackage = new Ne(), t._webGLAllocator = null, t._isInRenderPass = !1, t._curGPUPipelineState = null, t._curGPUInputAssembler = null, t._curGPUDescriptorSets = [], t._curDynamicOffsets = Array(8).fill(0), t._curDynamicStates = new _(), t._isStateInvalied = !1, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._type = e.type, this._queue = e.queue, this._webGLAllocator = this._device.cmdAllocator;

          for (var t = this._device.bindingMappingInfo.bufferOffsets.length, r = 0; r < t; r++) {
            this._curGPUDescriptorSets.push(null);
          }

          return !0;
        }, s.destroy = function () {
          this._webGLAllocator && (this._webGLAllocator.clearCmds(this.cmdPackage), this._webGLAllocator = null);
        }, s.begin = function () {
          this._webGLAllocator.clearCmds(this.cmdPackage), this._curGPUPipelineState = null, this._curGPUInputAssembler = null, this._curGPUDescriptorSets.length = 0, this._numDrawCalls = 0, this._numInstances = 0, this._numTris = 0;
        }, s.end = function () {
          this._isStateInvalied && this.bindStates(), this._isInRenderPass = !1;
        }, s.beginRenderPass = function (e, t, r, s, a, i) {
          var n = this._webGLAllocator.beginRenderPassCmdPool.alloc(Ie);

          n.gpuRenderPass = e.gpuRenderPass, n.gpuFramebuffer = t.gpuFramebuffer, n.renderArea = r, n.clearColors.length = s.length;

          for (var l = 0; l < s.length; ++l) {
            n.clearColors[l] = s[l];
          }

          n.clearDepth = a, n.clearStencil = i, this.cmdPackage.beginRenderPassCmds.push(n), this.cmdPackage.cmds.push(xe.BEGIN_RENDER_PASS), this._isInRenderPass = !0;
        }, s.endRenderPass = function () {
          this._isInRenderPass = !1;
        }, s.bindPipelineState = function (e) {
          var t = e.gpuPipelineState;
          t !== this._curGPUPipelineState && (this._curGPUPipelineState = t, this._isStateInvalied = !0);
        }, s.bindDescriptorSet = function (e, t, r) {
          var s = t.gpuDescriptorSet;

          if (s !== this._curGPUDescriptorSets[e] && (this._curGPUDescriptorSets[e] = s, this._isStateInvalied = !0), r) {
            var a,
                i = null === (a = this._curGPUPipelineState) || void 0 === a ? void 0 : a.gpuPipelineLayout;

            if (i) {
              for (var n = this._curDynamicOffsets, l = i.dynamicOffsetOffsets[e], u = 0; u < r.length; u++) {
                n[l + u] = r[u];
              }

              this._isStateInvalied = !0;
            }
          }
        }, s.bindInputAssembler = function (e) {
          var t = e.gpuInputAssembler;
          this._curGPUInputAssembler = t, this._isStateInvalied = !0;
        }, s.setViewport = function (e) {
          var t = this._curDynamicStates.viewport;
          t.left === e.left && t.top === e.top && t.width === e.width && t.height === e.height && t.minDepth === e.minDepth && t.maxDepth === e.maxDepth || (t.left = e.left, t.top = e.top, t.width = e.width, t.height = e.height, t.minDepth = e.minDepth, t.maxDepth = e.maxDepth, this._isStateInvalied = !0);
        }, s.setScissor = function (e) {
          var t = this._curDynamicStates.scissor;
          t.x === e.x && t.y === e.y && t.width === e.width && t.height === e.height || (t.x = e.x, t.y = e.y, t.width = e.width, t.height = e.height, this._isStateInvalied = !0);
        }, s.setLineWidth = function (e) {
          this._curDynamicStates.lineWidth !== e && (this._curDynamicStates.lineWidth = e, this._isStateInvalied = !0);
        }, s.setDepthBias = function (e, t, r) {
          var s = this._curDynamicStates;
          s.depthBiasConstant === e && s.depthBiasClamp === t && s.depthBiasSlope === r || (s.depthBiasConstant = e, s.depthBiasClamp = t, s.depthBiasSlope = r, this._isStateInvalied = !0);
        }, s.setBlendConstants = function (e) {
          var t = this._curDynamicStates.blendConstant;
          t.x === e.x && t.y === e.y && t.z === e.z && t.w === e.w || (t.copy(e), this._isStateInvalied = !0);
        }, s.setDepthBound = function (e, t) {
          var r = this._curDynamicStates;
          r.depthMinBounds === e && r.depthMaxBounds === t || (r.depthMinBounds = e, r.depthMaxBounds = t, this._isStateInvalied = !0);
        }, s.setStencilWriteMask = function (e, t) {
          var r = this._curDynamicStates.stencilStatesFront,
              s = this._curDynamicStates.stencilStatesBack;
          e & F.FRONT && r.writeMask !== t && (r.writeMask = t, this._isStateInvalied = !0), e & F.BACK && s.writeMask !== t && (s.writeMask = t, this._isStateInvalied = !0);
        }, s.setStencilCompareMask = function (e, t, r) {
          var s = this._curDynamicStates.stencilStatesFront,
              a = this._curDynamicStates.stencilStatesBack;
          e & F.FRONT && (s.compareMask === r && s.reference === t || (s.reference = t, s.compareMask = r, this._isStateInvalied = !0)), e & F.BACK && (a.compareMask === r && a.reference === t || (a.reference = t, a.compareMask = r, this._isStateInvalied = !0));
        }, s.draw = function (e) {
          if (this._type === P.PRIMARY && this._isInRenderPass || this._type === P.SECONDARY) {
            this._isStateInvalied && this.bindStates();

            var t = this._webGLAllocator.drawCmdPool.alloc(Ge);

            t.drawInfo.vertexCount = e.vertexCount, t.drawInfo.firstVertex = e.firstVertex, t.drawInfo.indexCount = e.indexCount, t.drawInfo.firstIndex = e.firstIndex, t.drawInfo.vertexOffset = e.vertexOffset, t.drawInfo.instanceCount = e.instanceCount, t.drawInfo.firstInstance = e.firstInstance, this.cmdPackage.drawCmds.push(t), this.cmdPackage.cmds.push(xe.DRAW), ++this._numDrawCalls, this._numInstances += e.instanceCount;
            var r = e.indexCount || e.vertexCount;
            if (this._curGPUPipelineState) switch (this._curGPUPipelineState.glPrimitive) {
              case 4:
                this._numTris += r / 3 * Math.max(e.instanceCount, 1);
                break;

              case 5:
              case 6:
                this._numTris += (r - 2) * Math.max(e.instanceCount, 1);
            }
          } else console.error("Command 'draw' must be recorded inside a render pass.");
        }, s.updateBuffer = function (e, t, r) {
          if (this._type === P.PRIMARY && !this._isInRenderPass || this._type === P.SECONDARY) {
            var s = e.gpuBuffer;

            if (s) {
              var a,
                  i = this._webGLAllocator.updateBufferCmdPool.alloc(Me),
                  n = 0;

              e.usage & f.INDIRECT || (n = void 0 !== r ? r : t.byteLength), a = t, i.gpuBuffer = s, i.buffer = a, i.offset = 0, i.size = n, this.cmdPackage.updateBufferCmds.push(i), this.cmdPackage.cmds.push(xe.UPDATE_BUFFER);
            }
          } else console.error("Command 'updateBuffer' must be recorded outside a render pass.");
        }, s.copyBuffersToTexture = function (e, t, r) {
          if (this._type === P.PRIMARY && !this._isInRenderPass || this._type === P.SECONDARY) {
            var s = t.gpuTexture;

            if (s) {
              var a = this._webGLAllocator.copyBufferToTextureCmdPool.alloc(De);

              a && (a.gpuTexture = s, a.regions = r, a.buffers = e, this.cmdPackage.copyBufferToTextureCmds.push(a), this.cmdPackage.cmds.push(xe.COPY_BUFFER_TO_TEXTURE));
            }
          } else console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");
        }, s.execute = function (e, t) {
          for (var r = 0; r < t; ++r) {
            for (var s = e[r], a = 0; a < s.cmdPackage.beginRenderPassCmds.length; ++a) {
              var i = s.cmdPackage.beginRenderPassCmds.array[a];
              ++i.refCount, this.cmdPackage.beginRenderPassCmds.push(i);
            }

            for (var n = 0; n < s.cmdPackage.bindStatesCmds.length; ++n) {
              var l = s.cmdPackage.bindStatesCmds.array[n];
              ++l.refCount, this.cmdPackage.bindStatesCmds.push(l);
            }

            for (var u = 0; u < s.cmdPackage.drawCmds.length; ++u) {
              var _ = s.cmdPackage.drawCmds.array[u];
              ++_.refCount, this.cmdPackage.drawCmds.push(_);
            }

            for (var c = 0; c < s.cmdPackage.updateBufferCmds.length; ++c) {
              var o = s.cmdPackage.updateBufferCmds.array[c];
              ++o.refCount, this.cmdPackage.updateBufferCmds.push(o);
            }

            for (var f = 0; f < s.cmdPackage.copyBufferToTextureCmds.length; ++f) {
              var h = s.cmdPackage.copyBufferToTextureCmds.array[f];
              ++h.refCount, this.cmdPackage.copyBufferToTextureCmds.push(h);
            }

            this.cmdPackage.cmds.concat(s.cmdPackage.cmds.array), this._numDrawCalls += s._numDrawCalls, this._numInstances += s._numInstances, this._numTris += s._numTris;
          }
        }, s.pipelineBarrier = function () {}, s.bindStates = function () {
          var e = this._webGLAllocator.bindStatesCmdPool.alloc(Le);

          e && (e.gpuPipelineState = this._curGPUPipelineState, Array.prototype.push.apply(e.gpuDescriptorSets, this._curGPUDescriptorSets), Array.prototype.push.apply(e.dynamicOffsets, this._curDynamicOffsets), e.gpuInputAssembler = this._curGPUInputAssembler, e.dynamicStates.copy(this._curDynamicStates), this.cmdPackage.bindStatesCmds.push(e), this.cmdPackage.cmds.push(xe.BIND_STATES), this._isStateInvalied = !1);
        }, a(r, [{
          key: "webGLDevice",
          get: function get() {
            return this._device;
          }
        }]), r;
      }(O),
          Ze = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuFramebuffer = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._renderPass = e.renderPass, this._colorTextures = e.colorTextures || [], this._depthStencilTexture = e.depthStencilTexture || null;

          for (var t = [], r = 0; r < e.colorTextures.length; ++r) {
            var s = e.colorTextures[r];
            s && t.push(s.gpuTexture);
          }

          var a = null;
          return e.depthStencilTexture && (a = e.depthStencilTexture.gpuTexture), this._gpuFramebuffer = {
            gpuRenderPass: e.renderPass.gpuRenderPass,
            gpuColorTextures: t,
            gpuDepthStencilTexture: a,
            glFramebuffer: null
          }, function (e, t) {
            if (t.gpuColorTextures.length || t.gpuDepthStencilTexture) {
              var r = e.gl,
                  s = [],
                  a = r.createFramebuffer();

              if (a) {
                t.glFramebuffer = a, e.stateCache.glFramebuffer !== t.glFramebuffer && r.bindFramebuffer(r.FRAMEBUFFER, t.glFramebuffer);

                for (var i = 0; i < t.gpuColorTextures.length; ++i) {
                  var n = t.gpuColorTextures[i];
                  n && (n.glTexture ? r.framebufferTexture2D(r.FRAMEBUFFER, r.COLOR_ATTACHMENT0 + i, n.glTarget, n.glTexture, 0) : r.framebufferRenderbuffer(r.FRAMEBUFFER, r.COLOR_ATTACHMENT0 + i, r.RENDERBUFFER, n.glRenderbuffer), s.push(r.COLOR_ATTACHMENT0 + i));
                }

                var l = t.gpuDepthStencilTexture;

                if (l) {
                  var u = g[l.format].hasStencil ? r.DEPTH_STENCIL_ATTACHMENT : r.DEPTH_ATTACHMENT;
                  l.glTexture ? r.framebufferTexture2D(r.FRAMEBUFFER, u, l.glTarget, l.glTexture, 0) : r.framebufferRenderbuffer(r.FRAMEBUFFER, u, r.RENDERBUFFER, l.glRenderbuffer);
                }

                e.WEBGL_draw_buffers && e.WEBGL_draw_buffers.drawBuffersWEBGL(s);

                var _ = r.checkFramebufferStatus(r.FRAMEBUFFER);

                if (_ !== r.FRAMEBUFFER_COMPLETE) switch (_) {
                  case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
                    break;

                  case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
                    break;

                  case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
                    break;

                  case r.FRAMEBUFFER_UNSUPPORTED:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_UNSUPPORTED");
                }
                e.stateCache.glFramebuffer !== t.glFramebuffer && r.bindFramebuffer(r.FRAMEBUFFER, e.stateCache.glFramebuffer);
              }
            }
          }(this._device, this._gpuFramebuffer), !0;
        }, s.destroy = function () {
          var e, t;
          this._gpuFramebuffer && (e = this._device, (t = this._gpuFramebuffer).glFramebuffer && (e.gl.deleteFramebuffer(t.glFramebuffer), t.glFramebuffer = null), this._gpuFramebuffer = null);
        }, a(r, [{
          key: "gpuFramebuffer",
          get: function get() {
            return this._gpuFramebuffer;
          }
        }]), r;
      }(I),
          Qe = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuInputAssembler = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          if (0 === e.vertexBuffers.length) return console.error("InputAssemblerInfo.vertexBuffers is null."), !1;
          if (this._attributes = e.attributes, this._attributesHash = this.computeAttributesHash(), this._vertexBuffers = e.vertexBuffers, e.indexBuffer) this._indexBuffer = e.indexBuffer, this._indexCount = this._indexBuffer.size / this._indexBuffer.stride, this._firstIndex = 0;else {
            var t = this._vertexBuffers[0];
            this._vertexCount = t.size / t.stride, this._firstVertex = 0, this._vertexOffset = 0;
          }
          this._instanceCount = 0, this._firstInstance = 0, this._indirectBuffer = e.indirectBuffer || null;

          for (var r = new Array(e.vertexBuffers.length), s = 0; s < e.vertexBuffers.length; ++s) {
            var a = e.vertexBuffers[s];
            a.gpuBuffer && (r[s] = a.gpuBuffer);
          }

          var i = null,
              n = 0;
          if (e.indexBuffer && (i = e.indexBuffer.gpuBuffer)) switch (i.stride) {
            case 1:
              n = 5121;
              break;

            case 2:
              n = 5123;
              break;

            case 4:
              n = 5125;
              break;

            default:
              console.error("Error index buffer stride.");
          }
          var l = null;
          return e.indirectBuffer && (l = e.indirectBuffer.gpuBuffer), this._gpuInputAssembler = {
            attributes: e.attributes,
            gpuVertexBuffers: r,
            gpuIndexBuffer: i,
            gpuIndirectBuffer: l,
            glAttribs: [],
            glIndexType: n,
            glVAOs: new Map()
          }, function (e, t) {
            var r = e.gl;
            t.glAttribs = new Array(t.attributes.length);

            for (var s = [0, 0, 0, 0, 0, 0, 0, 0], a = 0; a < t.attributes.length; ++a) {
              var i = t.attributes[a],
                  n = void 0 !== i.stream ? i.stream : 0,
                  l = t.gpuVertexBuffers[n],
                  u = Ae(i.format, r),
                  _ = g[i.format].size;
              t.glAttribs[a] = {
                name: i.name,
                glBuffer: l.glBuffer,
                glType: u,
                size: _,
                count: g[i.format].count,
                stride: l.stride,
                componentCount: be(u, r),
                isNormalized: void 0 !== i.isNormalized && i.isNormalized,
                isInstanced: void 0 !== i.isInstanced && i.isInstanced,
                offset: s[n]
              }, s[n] += _;
            }
          }(this._device, this._gpuInputAssembler), !0;
        }, s.destroy = function () {
          var e = this._device;
          this._gpuInputAssembler && e.useVAO && function (e, t) {
            for (var r = t.glVAOs.values(), s = r.next(); !s.done;) {
              e.OES_vertex_array_object.deleteVertexArrayOES(s.value), s = r.next();
            }

            t.glVAOs.clear();
          }(e, this._gpuInputAssembler), this._gpuInputAssembler = null;
        }, a(r, [{
          key: "gpuInputAssembler",
          get: function get() {
            return this._gpuInputAssembler;
          }
        }]), r;
      }(L),
          Je = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuDescriptorSetLayout = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          Array.prototype.push.apply(this._bindings, e.bindings);

          for (var t = 0, r = -1, s = [], a = 0; a < this._bindings.length; a++) {
            var i = this._bindings[a];
            s.push(t), t += i.count, i.binding > r && (r = i.binding);
          }

          this._bindingIndices = Array(r + 1).fill(-1);

          for (var n = this._descriptorIndices = Array(r + 1).fill(-1), l = 0; l < this._bindings.length; l++) {
            var u = this._bindings[l];
            this._bindingIndices[u.binding] = l, n[u.binding] = s[l];
          }

          for (var _ = [], c = 0; c < this._bindings.length; c++) {
            var o = this._bindings[c];
            if (o.descriptorType & G) for (var f = 0; f < o.count; f++) {
              _.push(o.binding);
            }
          }

          return this._gpuDescriptorSetLayout = {
            bindings: this._bindings,
            dynamicBindings: _,
            descriptorIndices: n,
            descriptorCount: t
          }, !0;
        }, s.destroy = function () {
          this._bindings.length = 0;
        }, a(r, [{
          key: "gpuDescriptorSetLayout",
          get: function get() {
            return this._gpuDescriptorSetLayout;
          }
        }]), r;
      }(M),
          $e = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuPipelineLayout = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          Array.prototype.push.apply(this._setLayouts, e.setLayouts);

          for (var t = [], r = [], s = 0, a = [], i = 0; i < this._setLayouts.length; i++) {
            for (var n = this._setLayouts[i], l = n.gpuDescriptorSetLayout.dynamicBindings, u = Array(n.bindingIndices.length).fill(-1), _ = 0; _ < l.length; _++) {
              var c = l[_];
              u[c] < 0 && (u[c] = s + _);
            }

            r.push(n.gpuDescriptorSetLayout), t.push(u), a.push(s), s += l.length;
          }

          return this._gpuPipelineLayout = {
            gpuSetLayouts: r,
            dynamicOffsetIndices: t,
            dynamicOffsetCount: s,
            dynamicOffsetOffsets: a
          }, !0;
        }, s.destroy = function () {
          this._setLayouts.length = 0;
        }, a(r, [{
          key: "gpuPipelineLayout",
          get: function get() {
            return this._gpuPipelineLayout;
          }
        }]), r;
      }(D),
          et = [0, 1, 3, 2, 0, 0, 0, 4, 5, 6, 0, 0, 0, 0],
          tt = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuPipelineState = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._primitive = e.primitive, this._shader = e.shader, this._pipelineLayout = e.pipelineLayout;
          var t = this._bs;

          if (e.blendState) {
            var r = e.blendState,
                s = r.targets;
            s && s.forEach(function (e, r) {
              t.setTarget(r, e);
            }), void 0 !== r.isA2C && (t.isA2C = r.isA2C), void 0 !== r.isIndepend && (t.isIndepend = r.isIndepend), void 0 !== r.blendColor && (t.blendColor = r.blendColor);
          }

          Object.assign(this._rs, e.rasterizerState), Object.assign(this._dss, e.depthStencilState), this._is = e.inputState, this._renderPass = e.renderPass, this._dynamicStates = e.dynamicStates;

          for (var a = [], i = 0; i < 31; i++) {
            this._dynamicStates & 1 << i && a.push(1 << i);
          }

          return this._gpuPipelineState = {
            glPrimitive: et[e.primitive],
            gpuShader: e.shader.gpuShader,
            gpuPipelineLayout: e.pipelineLayout.gpuPipelineLayout,
            rs: e.rasterizerState,
            dss: e.depthStencilState,
            bs: e.blendState,
            gpuRenderPass: e.renderPass.gpuRenderPass,
            dynamicStates: a
          }, !0;
        }, s.destroy = function () {
          this._gpuPipelineState = null;
        }, a(r, [{
          key: "gpuPipelineState",
          get: function get() {
            return this._gpuPipelineState;
          }
        }]), r;
      }(N),
          rt = function (e) {
        function r() {
          return e.apply(this, arguments) || this;
        }

        t(r, e);
        var s = r.prototype;
        return s.beginRenderPass = function (e, t, r, s, a, i) {
          ke(this._device, e.gpuRenderPass, t.gpuFramebuffer, r, s, a, i), this._isInRenderPass = !0;
        }, s.draw = function (e) {
          if (this._isInRenderPass) {
            this._isStateInvalied && this.bindStates(), We(this._device, e), ++this._numDrawCalls, this._numInstances += e.instanceCount;
            var t = e.indexCount || e.vertexCount;
            if (this._curGPUPipelineState) switch (this._curGPUPipelineState.glPrimitive) {
              case 4:
                this._numTris += t / 3 * Math.max(e.instanceCount, 1);
                break;

              case 5:
              case 6:
                this._numTris += (t - 2) * Math.max(e.instanceCount, 1);
            }
          } else console.error("Command 'draw' must be recorded inside a render pass.");
        }, s.updateBuffer = function (e, t, r) {
          if (this._isInRenderPass) console.error("Command 'updateBuffer' must be recorded outside a render pass.");else {
            var s,
                a = e.gpuBuffer;
            a && (s = void 0 !== r ? r : e.usage & f.INDIRECT ? 0 : t.byteLength, Ue(this._device, a, t, 0, s));
          }
        }, s.copyBuffersToTexture = function (e, t, r) {
          if (this._isInRenderPass) console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");else {
            var s = t.gpuTexture;
            s && He(this._device, e, s, r);
          }
        }, s.execute = function (e, t) {
          for (var r = 0; r < t; ++r) {
            var s = e[r];
            ze(this._device, s.cmdPackage), this._numDrawCalls += s._numDrawCalls, this._numInstances += s._numInstances, this._numTris += s._numTris;
          }
        }, s.bindStates = function () {
          Xe(this._device, this._curGPUPipelineState, this._curGPUInputAssembler, this._curGPUDescriptorSets, this._curDynamicOffsets, this._curDynamicStates), this._isStateInvalied = !1;
        }, r;
      }(qe),
          st = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this).numDrawCalls = 0, t.numInstances = 0, t.numTris = 0, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          return this._type = e.type, !0;
        }, s.destroy = function () {}, s.submit = function (e) {
          if (!this._isAsync) for (var t = e.length, r = 0; r < t; r++) {
            var s = e[r];
            this.numDrawCalls += s.numDrawCalls, this.numInstances += s.numInstances, this.numTris += s.numTris;
          }
        }, s.clear = function () {
          this.numDrawCalls = 0, this.numInstances = 0, this.numTris = 0;
        }, r;
      }(U),
          at = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuRenderPass = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          return this._colorInfos = e.colorAttachments, this._depthStencilInfo = e.depthStencilAttachment, e.subpasses && (this._subpasses = e.subpasses), this._gpuRenderPass = {
            colorAttachments: this._colorInfos,
            depthStencilAttachment: this._depthStencilInfo
          }, this._hash = this.computeHash(), !0;
        }, s.destroy = function () {
          this._gpuRenderPass = null;
        }, a(r, [{
          key: "gpuRenderPass",
          get: function get() {
            return this._gpuRenderPass;
          }
        }]), r;
      }(w),
          it = [10497, 33648, 33071, 33071],
          nt = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuSampler = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._minFilter = e.minFilter, this._magFilter = e.magFilter, this._mipFilter = e.mipFilter, this._addressU = e.addressU, this._addressV = e.addressV, this._addressW = e.addressW, this._maxAnisotropy = e.maxAnisotropy, this._cmpFunc = e.cmpFunc, this._borderColor = e.borderColor, this._mipLODBias = e.mipLODBias;
          var t,
              r,
              s = this._minFilter,
              a = this._magFilter,
              i = this._mipFilter;
          t = s === k.LINEAR || s === k.ANISOTROPIC ? i === k.LINEAR || i === k.ANISOTROPIC ? 9987 : i === k.POINT ? 9985 : 9729 : i === k.LINEAR || i === k.ANISOTROPIC ? 9986 : i === k.POINT ? 9984 : 9728, r = a === k.LINEAR || a === k.ANISOTROPIC ? 9729 : 9728;
          var n = it[this._addressU],
              l = it[this._addressV],
              u = it[this._addressW];
          return this._gpuSampler = {
            glMinFilter: t,
            glMagFilter: r,
            glWrapS: n,
            glWrapT: l,
            glWrapR: u
          }, !0;
        }, s.destroy = function () {
          this._gpuSampler = null;
        }, a(r, [{
          key: "gpuSampler",
          get: function get() {
            return this._gpuSampler;
          }
        }]), r;
      }(X),
          lt = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuShader = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._name = e.name, this._stages = e.stages, this._attributes = e.attributes, this._blocks = e.blocks, this._samplers = e.samplers, this._gpuShader = {
            name: e.name,
            blocks: e.blocks,
            samplerTextures: e.samplerTextures,
            gpuStages: new Array(e.stages.length),
            glProgram: null,
            glInputs: [],
            glUniforms: [],
            glBlocks: [],
            glSamplerTextures: []
          };

          for (var t = 0; t < e.stages.length; ++t) {
            var r = e.stages[t];
            this._gpuShader.gpuStages[t] = {
              type: r.stage,
              source: r.source,
              glShader: null
            };
          }

          return function (e, t) {
            for (var r = e.gl, s = function s(e) {
              var s = t.gpuStages[e],
                  a = 0,
                  i = "",
                  n = 1;

              switch (s.type) {
                case b.VERTEX:
                  i = "VertexShader", a = r.VERTEX_SHADER;
                  break;

                case b.FRAGMENT:
                  i = "FragmentShader", a = r.FRAGMENT_SHADER;
                  break;

                default:
                  return console.error("Unsupported ShaderType."), {
                    v: void 0
                  };
              }

              var l = r.createShader(a);

              if (l && (s.glShader = l, r.shaderSource(s.glShader, s.source), r.compileShader(s.glShader), !r.getShaderParameter(s.glShader, r.COMPILE_STATUS))) {
                console.error(i + " in '" + t.name + "' compilation failed."), console.error("Shader source dump:", s.source.replace(/^|\n/g, function () {
                  return "\n" + n++ + " ";
                })), console.error(r.getShaderInfoLog(s.glShader));

                for (var u = 0; u < t.gpuStages.length; u++) {
                  var _ = t.gpuStages[e];
                  _.glShader && (r.deleteShader(_.glShader), _.glShader = null);
                }

                return {
                  v: void 0
                };
              }
            }, a = 0; a < t.gpuStages.length; a++) {
              var i = s(a);
              if ("object" == (0, _typeof2.default)(i)) return i.v;
            }

            var n = r.createProgram();

            if (n) {
              t.glProgram = n;

              for (var l = 0; l < t.gpuStages.length; l++) {
                var u = t.gpuStages[l];
                r.attachShader(t.glProgram, u.glShader);
              }

              if (r.linkProgram(t.glProgram), e.destroyShadersImmediately) for (var _ = 0; _ < t.gpuStages.length; _++) {
                var c = t.gpuStages[_];
                c.glShader && (r.detachShader(t.glProgram, c.glShader), r.deleteShader(c.glShader), c.glShader = null);
              }
              if (!r.getProgramParameter(t.glProgram, r.LINK_STATUS)) return console.error("Failed to link shader '" + t.name + "'."), void console.error(r.getProgramInfoLog(t.glProgram));
              p("Shader '" + t.name + "' compilation succeeded.");
              var o = r.getProgramParameter(t.glProgram, r.ACTIVE_ATTRIBUTES);
              t.glInputs = new Array(o);

              for (var f = 0; f < o; ++f) {
                var h = r.getActiveAttrib(t.glProgram, f);

                if (h) {
                  var d,
                      g = h.name.indexOf("[");
                  d = -1 !== g ? h.name.substr(0, g) : h.name;
                  var E = r.getAttribLocation(t.glProgram, d),
                      T = Be(h.type, r),
                      A = Ce(h.type, r);
                  t.glInputs[f] = {
                    binding: E,
                    name: d,
                    type: T,
                    stride: A,
                    count: h.size,
                    size: A * h.size,
                    glType: h.type,
                    glLoc: E
                  };
                }
              }

              if (t.blocks.length > 0) {
                t.glBlocks = new Array(t.blocks.length);

                for (var S = 0; S < t.blocks.length; ++S) {
                  var m = t.blocks[S],
                      R = {
                    set: m.set,
                    binding: m.binding,
                    name: m.name,
                    size: 0,
                    glUniforms: new Array(m.members.length),
                    glActiveUniforms: []
                  };
                  t.glBlocks[S] = R;

                  for (var B = 0; B < m.members.length; ++B) {
                    var C = m.members[B],
                        x = me(C.type, r),
                        v = Ce(x, r),
                        y = v * C.count;
                    R.glUniforms[B] = {
                      binding: -1,
                      name: C.name,
                      type: C.type,
                      stride: v,
                      count: C.count,
                      size: y,
                      offset: 0,
                      glType: x,
                      glLoc: -1,
                      array: null
                    };
                  }
                }
              }

              if (t.samplerTextures.length > 0) {
                t.glSamplerTextures = new Array(t.samplerTextures.length);

                for (var F = 0; F < t.samplerTextures.length; ++F) {
                  var P = t.samplerTextures[F];
                  t.glSamplerTextures[F] = {
                    set: P.set,
                    binding: P.binding,
                    name: P.name,
                    type: P.type,
                    count: P.count,
                    units: [],
                    glUnits: null,
                    glType: me(P.type, r),
                    glLoc: null
                  };
                }
              }

              for (var O = r.getProgramParameter(t.glProgram, r.ACTIVE_UNIFORMS), I = 0; I < O; ++I) {
                var L = r.getActiveUniform(t.glProgram, I);

                if (L && L.type !== r.SAMPLER_2D && L.type !== r.SAMPLER_CUBE) {
                  var G = r.getUniformLocation(t.glProgram, L.name);

                  if (null !== G && ("number" == typeof G || -1 !== G.id)) {
                    var M,
                        D = L.name.indexOf("[");
                    M = -1 !== D ? L.name.substr(0, D) : L.name;

                    for (var N = 0; N < t.glBlocks.length; N++) {
                      for (var U = t.glBlocks[N], w = 0; w < U.glUniforms.length; w++) {
                        var k = U.glUniforms[w];

                        if (k.name === M) {
                          k.glLoc = G, k.count = L.size, k.size = k.stride * k.count, k.array = new (Re(k.type))(k.size / 4), U.glActiveUniforms.push(k);
                          break;
                        }
                      }
                    }
                  }
                }
              }

              for (var X = 0; X < t.glBlocks.length; X++) {
                for (var W = t.glBlocks[X], V = 0; V < W.glUniforms.length; V++) {
                  var z = W.glUniforms[V];
                  z.offset = W.size / 4, W.size += z.size;
                }
              }

              for (var H = [], Y = [], K = e.bindingMappingInfo, j = e.stateCache.texUnitCacheMap, q = 0, Z = 0; Z < t.blocks.length; ++Z) {
                t.blocks[Z].set === K.flexibleSet && q++;
              }

              for (var Q = 0, J = 0; J < t.samplerTextures.length; ++J) {
                var $ = t.samplerTextures[J],
                    ee = r.getUniformLocation(t.glProgram, $.name);

                if (null === ee || "number" != typeof ee && -1 === ee.id || (H.push(t.glSamplerTextures[J]), Y.push(ee)), void 0 === j[$.name]) {
                  var te = $.binding + K.samplerOffsets[$.set] + Q;
                  $.set === K.flexibleSet && (te -= q), j[$.name] = te % e.capabilities.maxTextureUnits, Q += $.count - 1;
                }
              }

              if (H.length) {
                for (var re = [], se = 0; se < H.length; ++se) {
                  var ae = H[se],
                      ie = j[ae.name];

                  if (void 0 !== ie) {
                    ae.glLoc = Y[se];

                    for (var ne = 0; ne < ae.count; ++ne) {
                      for (; re[ie];) {
                        ie = (ie + 1) % e.capabilities.maxTextureUnits;
                      }

                      ae.units.push(ie), re[ie] = !0;
                    }
                  }
                }

                for (var le = 0, ue = 0; ue < H.length; ++ue) {
                  var _e = H[ue];

                  if (!_e.glLoc) {
                    _e.glLoc = Y[ue];

                    for (var ce = 0; ce < _e.count; ++ce) {
                      for (; re[le];) {
                        le = (le + 1) % e.capabilities.maxTextureUnits;
                      }

                      void 0 === j[_e.name] && (j[_e.name] = le), _e.units.push(le), re[le] = !0;
                    }
                  }
                }

                e.stateCache.glProgram !== t.glProgram && r.useProgram(t.glProgram);

                for (var oe = 0; oe < H.length; oe++) {
                  var fe = H[oe];
                  fe.glUnits = new Int32Array(fe.units), r.uniform1iv(fe.glLoc, fe.glUnits);
                }

                e.stateCache.glProgram !== t.glProgram && r.useProgram(e.stateCache.glProgram);
              }

              for (var he = 0; he < t.glBlocks.length;) {
                t.glBlocks[he].glActiveUniforms.length ? he++ : (t.glBlocks[he] = t.glBlocks[t.glBlocks.length - 1], t.glBlocks.length--);
              }

              t.glSamplerTextures = H;
            }
          }(this._device, this._gpuShader), !0;
        }, s.destroy = function () {
          this._gpuShader && (function (e, t) {
            if (t.glProgram) {
              var r = e.gl;
              if (!e.destroyShadersImmediately) for (var s = 0; s < t.gpuStages.length; s++) {
                var a = t.gpuStages[s];
                a.glShader && (r.detachShader(t.glProgram, a.glShader), r.deleteShader(a.glShader), a.glShader = null);
              }
              r.deleteProgram(t.glProgram), t.glProgram = null;
            }
          }(this._device, this._gpuShader), this._gpuShader = null);
        }, a(r, [{
          key: "gpuShader",
          get: function get() {
            return this._gpuShader;
          }
        }]), r;
      }(W),
          ut = function () {
        function e() {
          this.glArrayBuffer = null, this.glElementArrayBuffer = null, this.glVAO = null, this.texUnit = 0, this.glTexUnits = [], this.glRenderbuffer = null, this.glFramebuffer = null, this.viewport = new V(), this.scissorRect = new l(0, 0, 0, 0), this.rs = new z(), this.dss = new H(), this.bs = new Y(), this.glProgram = null, this.glEnabledAttribLocs = [], this.glCurrentAttribLocs = [], this.texUnitCacheMap = {};
        }

        return e.prototype.initialize = function (e, t) {
          for (var r = 0; r < e; ++r) {
            this.glTexUnits.push({
              glTexture: null
            });
          }

          this.glEnabledAttribLocs.length = t, this.glEnabledAttribLocs.fill(!1), this.glCurrentAttribLocs.length = t, this.glCurrentAttribLocs.fill(!1);
        }, e;
      }(),
          _t = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuTexture = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          return "texture" in e ? (console.log("WebGL does not support texture view."), !1) : (this._type = e.type, this._usage = e.usage, this._format = e.format, this._width = e.width, this._height = e.height, this._depth = e.depth, this._layerCount = e.layerCount, this._levelCount = e.levelCount, this._samples = e.samples, this._flags = e.flags, this._isPowerOf2 = K(this._width) && K(this._height), this._size = j(this._format, this.width, this.height, this.depth, this._levelCount) * this._layerCount, this._gpuTexture = {
            type: this._type,
            format: this._format,
            usage: this._usage,
            width: this._width,
            height: this._height,
            depth: this._depth,
            size: this._size,
            arrayLayer: this._layerCount,
            mipLevel: this._levelCount,
            samples: this._samples,
            flags: this._flags,
            isPowerOf2: this._isPowerOf2,
            glTarget: 0,
            glInternalFmt: 0,
            glFormat: 0,
            glType: 0,
            glUsage: 0,
            glTexture: null,
            glRenderbuffer: null,
            glWrapS: 0,
            glWrapT: 0,
            glMinFilter: 0,
            glMagFilter: 0
          }, function (e, t) {
            var r = e.gl;
            t.glFormat = t.glInternalFmt = Se(t.format, r), t.glType = Ae(t.format, r);
            var s = t.width,
                a = t.height;

            switch (t.type) {
              case h.TEX2D:
                t.glTarget = r.TEXTURE_2D;
                var i = Math.max(s, a);

                if (i > e.capabilities.maxTextureSize && d(9100, i, e.capabilities.maxTextureSize), !e.WEBGL_depth_texture && g[t.format].hasDepth) {
                  t.glInternalFmt = function (e, t) {
                    switch (e) {
                      case n.R5G6B5:
                        return t.RGB565;

                      case n.RGB5A1:
                        return t.RGB5_A1;

                      case n.RGBA4:
                        return t.RGBA4;

                      case n.RGBA16F:
                        return pe.RGBA16F_EXT;

                      case n.RGBA32F:
                        return pe.RGBA32F_EXT;

                      case n.SRGB8_A8:
                        return pe.SRGB8_ALPHA8_EXT;

                      case n.D16:
                        return t.DEPTH_COMPONENT16;

                      case n.D16S8:
                        return t.DEPTH_STENCIL;

                      case n.D24:
                        return t.DEPTH_COMPONENT16;

                      case n.D24S8:
                        return t.DEPTH_STENCIL;

                      case n.D32F:
                        return t.DEPTH_COMPONENT16;

                      case n.D32F_S8:
                        return t.DEPTH_STENCIL;

                      default:
                        return console.error("Unsupported Format, convert to WebGL internal format failed."), t.RGBA;
                    }
                  }(t.format, r);

                  var l = r.createRenderbuffer();
                  l && t.size > 0 && (t.glRenderbuffer = l, e.stateCache.glRenderbuffer !== t.glRenderbuffer && (r.bindRenderbuffer(r.RENDERBUFFER, t.glRenderbuffer), e.stateCache.glRenderbuffer = t.glRenderbuffer), r.renderbufferStorage(r.RENDERBUFFER, t.glInternalFmt, s, a));
                } else {
                  var u = r.createTexture();

                  if (u && t.size > 0) {
                    t.glTexture = u;
                    var _ = e.stateCache.glTexUnits[e.stateCache.texUnit];
                    if (_.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_2D, t.glTexture), _.glTexture = t.glTexture), g[t.format].isCompressed) {
                      if (t.glInternalFmt !== pe.COMPRESSED_RGB_ETC1_WEBGL) for (var c = 0; c < t.mipLevel; ++c) {
                        var o = E(t.format, s, a, 1),
                            f = new Uint8Array(o);
                        r.compressedTexImage2D(r.TEXTURE_2D, c, t.glInternalFmt, s, a, 0, f), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                      } else {
                        var p = E(t.format, 2, 2, 1),
                            T = new Uint8Array(p);
                        r.compressedTexImage2D(r.TEXTURE_2D, 0, t.glInternalFmt, 2, 2, 0, T);
                      }
                    } else for (var A = 0; A < t.mipLevel; ++A) {
                      r.texImage2D(r.TEXTURE_2D, A, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    }
                    t.isPowerOf2 ? (t.glWrapS = r.REPEAT, t.glWrapT = r.REPEAT) : (t.glWrapS = r.CLAMP_TO_EDGE, t.glWrapT = r.CLAMP_TO_EDGE), t.glMinFilter = r.LINEAR, t.glMagFilter = r.LINEAR, r.texParameteri(t.glTarget, r.TEXTURE_WRAP_S, t.glWrapS), r.texParameteri(t.glTarget, r.TEXTURE_WRAP_T, t.glWrapT), r.texParameteri(t.glTarget, r.TEXTURE_MIN_FILTER, t.glMinFilter), r.texParameteri(t.glTarget, r.TEXTURE_MAG_FILTER, t.glMagFilter);
                  } else r.deleteTexture(u);
                }

                break;

              case h.CUBE:
                t.glTarget = r.TEXTURE_CUBE_MAP;
                var S = Math.max(s, a);
                S > e.capabilities.maxCubeMapTextureSize && d(9100, S, e.capabilities.maxTextureSize);
                var m = r.createTexture();

                if (m && t.size > 0) {
                  t.glTexture = m;
                  var R = e.stateCache.glTexUnits[e.stateCache.texUnit];
                  if (R.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture), R.glTexture = t.glTexture), g[t.format].isCompressed) {
                    if (t.glInternalFmt !== pe.COMPRESSED_RGB_ETC1_WEBGL) for (var B = 0; B < 6; ++B) {
                      s = t.width, a = t.height;

                      for (var C = 0; C < t.mipLevel; ++C) {
                        var b = E(t.format, s, a, 1),
                            x = new Uint8Array(b);
                        r.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + B, C, t.glInternalFmt, s, a, 0, x), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                      }
                    } else for (var v = 0; v < 6; ++v) {
                      var y = E(t.format, 2, 2, 1),
                          F = new Uint8Array(y);
                      r.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + v, 0, t.glInternalFmt, 2, 2, 0, F);
                    }
                  } else for (var P = 0; P < 6; ++P) {
                    s = t.width, a = t.height;

                    for (var O = 0; O < t.mipLevel; ++O) {
                      r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + P, O, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    }
                  }
                  t.isPowerOf2 ? (t.glWrapS = r.REPEAT, t.glWrapT = r.REPEAT) : (t.glWrapS = r.CLAMP_TO_EDGE, t.glWrapT = r.CLAMP_TO_EDGE), t.glMinFilter = r.LINEAR, t.glMagFilter = r.LINEAR, r.texParameteri(t.glTarget, r.TEXTURE_WRAP_S, t.glWrapS), r.texParameteri(t.glTarget, r.TEXTURE_WRAP_T, t.glWrapT), r.texParameteri(t.glTarget, r.TEXTURE_MIN_FILTER, t.glMinFilter), r.texParameteri(t.glTarget, r.TEXTURE_MAG_FILTER, t.glMagFilter);
                }

                break;

              default:
                console.error("Unsupported TextureType, create texture failed."), t.type = h.TEX2D, t.glTarget = r.TEXTURE_2D;
            }
          }(this._device, this._gpuTexture), this._device.memoryStatus.textureSize += this._size, !0);
        }, s.destroy = function () {
          var e, t;
          this._gpuTexture && (e = this._device, (t = this._gpuTexture).glTexture && (e.gl.deleteTexture(t.glTexture), t.glTexture = null), t.glRenderbuffer && (e.gl.deleteRenderbuffer(t.glRenderbuffer), t.glRenderbuffer = null), this._device.memoryStatus.textureSize -= this._size, this._gpuTexture = null);
        }, s.resize = function (e, t) {
          var r = this._size;
          this._width = e, this._height = t, this._size = j(this._format, this.width, this.height, this.depth, this._levelCount) * this._layerCount, this._gpuTexture && (this._gpuTexture.width = e, this._gpuTexture.height = t, this._gpuTexture.size = this._size, function (e, t) {
            var r = e.gl,
                s = t.width,
                a = t.height;

            switch (t.type) {
              case h.TEX2D:
                t.glTarget = r.TEXTURE_2D;
                var i = Math.max(s, a);
                if (i > e.capabilities.maxTextureSize && d(9100, i, e.capabilities.maxTextureSize), t.glRenderbuffer) e.stateCache.glRenderbuffer !== t.glRenderbuffer && (r.bindRenderbuffer(r.RENDERBUFFER, t.glRenderbuffer), e.stateCache.glRenderbuffer = t.glRenderbuffer), r.renderbufferStorage(r.RENDERBUFFER, t.glInternalFmt, s, a);else if (t.glTexture) {
                  var n = e.stateCache.glTexUnits[e.stateCache.texUnit];

                  if (n.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_2D, t.glTexture), n.glTexture = t.glTexture), g[t.format].isCompressed) {
                    if (t.glInternalFmt !== pe.COMPRESSED_RGB_ETC1_WEBGL) for (var l = 0; l < t.mipLevel; ++l) {
                      var u = E(t.format, s, a, 1),
                          _ = new Uint8Array(u);

                      r.compressedTexImage2D(r.TEXTURE_2D, l, t.glInternalFmt, s, a, 0, _), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    }
                  } else for (var c = 0; c < t.mipLevel; ++c) {
                    r.texImage2D(r.TEXTURE_2D, c, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                  }
                }
                break;

              case h.CUBE:
                t.glTarget = r.TEXTURE_CUBE_MAP;
                var o = Math.max(s, a);
                o > e.capabilities.maxCubeMapTextureSize && d(9100, o, e.capabilities.maxTextureSize);
                var f = e.stateCache.glTexUnits[e.stateCache.texUnit];

                if (f.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture), f.glTexture = t.glTexture), g[t.format].isCompressed) {
                  if (t.glInternalFmt !== pe.COMPRESSED_RGB_ETC1_WEBGL) for (var p = 0; p < 6; ++p) {
                    s = t.width, a = t.height;

                    for (var T = 0; T < t.mipLevel; ++T) {
                      var A = E(t.format, s, a, 1),
                          S = new Uint8Array(A);
                      r.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + p, T, t.glInternalFmt, s, a, 0, S), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    }
                  }
                } else for (var m = 0; m < 6; ++m) {
                  s = t.width, a = t.height;

                  for (var R = 0; R < t.mipLevel; ++R) {
                    r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + m, R, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                  }
                }

                break;

              default:
                console.error("Unsupported TextureType, create texture failed."), t.type = h.TEX2D, t.glTarget = r.TEXTURE_2D;
            }
          }(this._device, this._gpuTexture), this._device.memoryStatus.textureSize -= r, this._device.memoryStatus.textureSize += this._size);
        }, a(r, [{
          key: "gpuTexture",
          get: function get() {
            return this._gpuTexture;
          }
        }]), r;
      }(q),
          ct = "webglcontextlost",
          ot = e("WebGLDevice", function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this).stateCache = new ut(), t.cmdAllocator = new je(), t.nullTex2D = null, t.nullTexCube = null, t._webGLRC = null, t._isAntialias = !0, t._isPremultipliedAlpha = !0, t._useVAO = !1, t._destroyShadersImmediately = !0, t._noCompressedTexSubImage2D = !1, t._bindingMappingInfo = new he(), t._webGLContextLostHandler = null, t._extensions = null, t._EXT_texture_filter_anisotropic = null, t._EXT_blend_minmax = null, t._EXT_frag_depth = null, t._EXT_shader_texture_lod = null, t._EXT_sRGB = null, t._OES_vertex_array_object = null, t._EXT_color_buffer_half_float = null, t._WEBGL_color_buffer_float = null, t._WEBGL_compressed_texture_etc1 = null, t._WEBGL_compressed_texture_etc = null, t._WEBGL_compressed_texture_pvrtc = null, t._WEBGL_compressed_texture_astc = null, t._WEBGL_compressed_texture_s3tc = null, t._WEBGL_compressed_texture_s3tc_srgb = null, t._WEBGL_debug_shaders = null, t._WEBGL_draw_buffers = null, t._WEBGL_lose_context = null, t._WEBGL_depth_texture = null, t._WEBGL_debug_renderer_info = null, t._OES_texture_half_float = null, t._OES_texture_half_float_linear = null, t._OES_texture_float = null, t._OES_texture_float_linear = null, t._OES_standard_derivatives = null, t._OES_element_index_uint = null, t._ANGLE_instanced_arrays = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._canvas = e.canvasElm, this._isAntialias = e.isAntialias, this._isPremultipliedAlpha = e.isPremultipliedAlpha, this._bindingMappingInfo = e.bindingMappingInfo, this._bindingMappingInfo.bufferOffsets.length || this._bindingMappingInfo.bufferOffsets.push(0), this._bindingMappingInfo.samplerOffsets.length || this._bindingMappingInfo.samplerOffsets.push(0);

          try {
            var t = {
              alpha: Z.ENABLE_TRANSPARENT_CANVAS,
              antialias: this._isAntialias,
              depth: !0,
              stencil: !0,
              premultipliedAlpha: this._isPremultipliedAlpha,
              preserveDrawingBuffer: !1,
              powerPreference: "default",
              failIfMajorPerformanceCaveat: !1
            };
            this._webGLRC = this._canvas.getContext("webgl", t);
          } catch (e) {
            return console.error(e), !1;
          }

          if (!this._webGLRC) return console.error("This device does not support WebGL."), !1;
          this._webGLContextLostHandler = this._onWebGLContextLost.bind(this), this._canvas.addEventListener(ct, this._onWebGLContextLost), this._canvas2D = document.createElement("canvas"), console.info("WebGL device initialized."), this._gfxAPI = Q.WEBGL, this._deviceName = "WebGL";
          var r = this._webGLRC;
          this._WEBGL_debug_renderer_info = this.getExtension("WEBGL_debug_renderer_info"), this._WEBGL_debug_renderer_info ? (this._renderer = r.getParameter(this._WEBGL_debug_renderer_info.UNMASKED_RENDERER_WEBGL), this._vendor = r.getParameter(this._WEBGL_debug_renderer_info.UNMASKED_VENDOR_WEBGL)) : (this._renderer = r.getParameter(r.RENDERER), this._vendor = r.getParameter(r.VENDOR)), this._version = r.getParameter(r.VERSION), this._caps.maxVertexAttributes = r.getParameter(r.MAX_VERTEX_ATTRIBS), this._caps.maxVertexUniformVectors = r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS), this._caps.maxFragmentUniformVectors = r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS), this._caps.maxTextureUnits = r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS), this._caps.maxVertexTextureUnits = r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS), this._caps.maxTextureSize = r.getParameter(r.MAX_TEXTURE_SIZE), this._caps.maxCubeMapTextureSize = r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE), this._caps.depthBits = r.getParameter(r.DEPTH_BITS), this._caps.stencilBits = r.getParameter(r.STENCIL_BITS), this.stateCache.initialize(this._caps.maxTextureUnits, this._caps.maxVertexAttributes), this._devicePixelRatio = e.devicePixelRatio || 1, this._width = e.width, this._height = e.height, this._colorFmt = n.RGBA8, 24 === this._caps.depthBits ? 8 === this._caps.stencilBits ? this._depthStencilFmt = n.D24S8 : this._depthStencilFmt = n.D24 : 8 === this._caps.stencilBits ? this._depthStencilFmt = n.D16S8 : this._depthStencilFmt = n.D16, this._extensions = r.getSupportedExtensions();
          var s = "";

          if (this._extensions) {
            for (var a, i = J(this._extensions); !(a = i()).done;) {
              s += a.value + " ";
            }

            p("EXTENSIONS: " + s);
          }

          this._EXT_texture_filter_anisotropic = this.getExtension("EXT_texture_filter_anisotropic"), this._EXT_blend_minmax = this.getExtension("EXT_blend_minmax"), this._EXT_frag_depth = this.getExtension("EXT_frag_depth"), this._EXT_shader_texture_lod = this.getExtension("EXT_shader_texture_lod"), this._EXT_sRGB = this.getExtension("EXT_sRGB"), this._OES_vertex_array_object = this.getExtension("OES_vertex_array_object"), this._EXT_color_buffer_half_float = this.getExtension("EXT_color_buffer_half_float"), this._WEBGL_color_buffer_float = this.getExtension("WEBGL_color_buffer_float"), this._WEBGL_compressed_texture_etc1 = this.getExtension("WEBGL_compressed_texture_etc1"), this._WEBGL_compressed_texture_etc = this.getExtension("WEBGL_compressed_texture_etc"), this._WEBGL_compressed_texture_pvrtc = this.getExtension("WEBGL_compressed_texture_pvrtc"), this._WEBGL_compressed_texture_s3tc = this.getExtension("WEBGL_compressed_texture_s3tc"), this._WEBGL_compressed_texture_s3tc_srgb = this.getExtension("WEBGL_compressed_texture_s3tc_srgb"), this._WEBGL_debug_shaders = this.getExtension("WEBGL_debug_shaders"), this._WEBGL_draw_buffers = this.getExtension("WEBGL_draw_buffers"), this._WEBGL_lose_context = this.getExtension("WEBGL_lose_context"), this._WEBGL_depth_texture = this.getExtension("WEBGL_depth_texture"), this._OES_texture_half_float = this.getExtension("OES_texture_half_float"), this._OES_texture_half_float_linear = this.getExtension("OES_texture_half_float_linear"), this._OES_texture_float = this.getExtension("OES_texture_float"), this._OES_texture_float_linear = this.getExtension("OES_texture_float_linear"), this._OES_standard_derivatives = this.getExtension("OES_standard_derivatives"), this._OES_element_index_uint = this.getExtension("OES_element_index_uint"), this._ANGLE_instanced_arrays = this.getExtension("ANGLE_instanced_arrays"), $.os === ee.IOS && 14 === $.osMainVersion && $.isBrowser || (this._WEBGL_compressed_texture_astc = this.getExtension("WEBGL_compressed_texture_astc")), $.browserType === te.UC && (this._ANGLE_instanced_arrays = null), ($.os === ee.IOS && $.osMainVersion <= 10 || $.os === ee.ANDROID) && (this._destroyShadersImmediately = !1), this._noCompressedTexSubImage2D = !0, this._features.fill(!1), this._EXT_sRGB && (this._features[re.FORMAT_SRGB] = !0), this._EXT_blend_minmax && (this._features[re.BLEND_MINMAX] = !0), this._WEBGL_color_buffer_float && (this._features[re.COLOR_FLOAT] = !0), this._EXT_color_buffer_half_float && (this._features[re.COLOR_HALF_FLOAT] = !0), this._OES_texture_float && (this._features[re.TEXTURE_FLOAT] = !0), this._OES_texture_half_float && (this._features[re.TEXTURE_HALF_FLOAT] = !0), this._OES_texture_float_linear && (this._features[re.TEXTURE_FLOAT_LINEAR] = !0), this._OES_texture_half_float_linear && (this._features[re.TEXTURE_HALF_FLOAT_LINEAR] = !0), this._features[re.FORMAT_RGB8] = !0, this._OES_element_index_uint && (this._features[re.ELEMENT_INDEX_UINT] = !0), this._ANGLE_instanced_arrays && (this._features[re.INSTANCED_ARRAYS] = !0), this._WEBGL_draw_buffers && (this._features[re.MULTIPLE_RENDER_TARGETS] = !0);
          var l = "";
          this._WEBGL_compressed_texture_etc1 && (this._features[re.FORMAT_ETC1] = !0, l += "etc1 "), this._WEBGL_compressed_texture_etc && (this._features[re.FORMAT_ETC2] = !0, l += "etc2 "), this._WEBGL_compressed_texture_s3tc && (this._features[re.FORMAT_DXT] = !0, l += "dxt "), this._WEBGL_compressed_texture_pvrtc && (this._features[re.FORMAT_PVRTC] = !0, l += "pvrtc "), this._WEBGL_compressed_texture_astc && (this._features[re.FORMAT_ASTC] = !0, l += "astc "), this._OES_vertex_array_object && (this._useVAO = !0), p("RENDERER: " + this._renderer), p("VENDOR: " + this._vendor), p("VERSION: " + this._version), p("DPR: " + this._devicePixelRatio), p("SCREEN_SIZE: " + this._width + " x " + this._height), p("MAX_VERTEX_UNIFORM_VECTORS: " + this._caps.maxVertexUniformVectors), p("DEPTH_BITS: " + this._caps.depthBits), p("STENCIL_BITS: " + this._caps.stencilBits), this._EXT_texture_filter_anisotropic && p("MAX_TEXTURE_MAX_ANISOTROPY_EXT: " + this._EXT_texture_filter_anisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT), p("USE_VAO: " + this._useVAO), p("COMPRESSED_FORMAT: " + l), this.initStates(r), this._queue = this.createQueue(new se(ae.GRAPHICS)), this._cmdBuff = this.createCommandBuffer(new ie(this._queue)), this.nullTex2D = this.createTexture(new ne(h.TEX2D, le.SAMPLED, n.RGBA8, 2, 2, B.GEN_MIPMAP)), this.nullTexCube = this.createTexture(new ne(h.CUBE, le.SAMPLED, n.RGBA8, 2, 2, B.GEN_MIPMAP, 6));
          var u = new de();
          u.texExtent.width = 2, u.texExtent.height = 2;

          var _ = new Uint8Array(this.nullTex2D.size);

          return _.fill(0), this.copyBuffersToTexture([_], this.nullTex2D, [u]), u.texSubres.layerCount = 6, this.copyBuffersToTexture([_, _, _, _, _, _], this.nullTexCube, [u]), !0;
        }, s.destroy = function () {
          this._canvas && this._webGLContextLostHandler && (this._canvas.removeEventListener(ct, this._webGLContextLostHandler), this._webGLContextLostHandler = null), this.nullTex2D && (this.nullTex2D.destroy(), this.nullTex2D = null), this.nullTexCube && (this.nullTexCube.destroy(), this.nullTexCube = null), this._queue && (this._queue.destroy(), this._queue = null), this._cmdBuff && (this._cmdBuff.destroy(), this._cmdBuff = null), this._extensions = null, this._webGLRC = null;
        }, s.resize = function (e, t) {
          this._width === e && this._height === t || (p("Resizing device: " + e + "x" + t), this._canvas.width = e, this._canvas.height = t, this._width = e, this._height = t);
        }, s.flushCommands = function () {}, s.acquire = function () {
          this.cmdAllocator.releaseCmds();
        }, s.present = function () {
          var e = this._queue;
          this._numDrawCalls = e.numDrawCalls, this._numInstances = e.numInstances, this._numTris = e.numTris, e.clear();
        }, s.createCommandBuffer = function (e) {
          var t = new (e.type === P.PRIMARY ? rt : qe)(this);
          return t.initialize(e) ? t : null;
        }, s.createBuffer = function (e) {
          var t = new Ye(this);
          return t.initialize(e) ? t : null;
        }, s.createTexture = function (e) {
          var t = new _t(this);
          return t.initialize(e) ? t : null;
        }, s.createSampler = function (e) {
          var t = new nt(this);
          return t.initialize(e) ? t : null;
        }, s.createDescriptorSet = function (e) {
          var t = new Te(this);
          return t.initialize(e) ? t : null;
        }, s.createShader = function (e) {
          var t = new lt(this);
          return t.initialize(e) ? t : null;
        }, s.createInputAssembler = function (e) {
          var t = new Qe(this);
          return t.initialize(e) ? t : null;
        }, s.createRenderPass = function (e) {
          var t = new at(this);
          return t.initialize(e) ? t : null;
        }, s.createFramebuffer = function (e) {
          var t = new Ze(this);
          return t.initialize(e) ? t : null;
        }, s.createDescriptorSetLayout = function (e) {
          var t = new Je(this);
          return t.initialize(e) ? t : null;
        }, s.createPipelineLayout = function (e) {
          var t = new $e(this);
          return t.initialize(e) ? t : null;
        }, s.createPipelineState = function (e) {
          var t = new tt(this);
          return t.initialize(e) ? t : null;
        }, s.createQueue = function (e) {
          var t = new st(this);
          return t.initialize(e) ? t : null;
        }, s.createGlobalBarrier = function (e) {
          var t = new ue(this);
          return t.initialize(e) ? t : null;
        }, s.createTextureBarrier = function (e) {
          var t = new _e(this);
          return t.initialize(e) ? t : null;
        }, s.copyBuffersToTexture = function (e, t, r) {
          He(this, e, t.gpuTexture, r);
        }, s.copyTextureToBuffers = function (e, t, r) {
          !function (e, t, r, s) {
            var a = e.gl,
                i = e.stateCache,
                n = a.createFramebuffer();
            a.bindFramebuffer(a.FRAMEBUFFER, n);
            var l = 0,
                u = 0,
                _ = 1,
                c = 1;

            switch (t.glTarget) {
              case a.TEXTURE_2D:
                for (var o = 0; o < s.length; o++) {
                  var f = s[o];
                  a.framebufferTexture2D(a.FRAMEBUFFER, a.COLOR_ATTACHMENT0, t.glTarget, t.glTexture, f.texSubres.mipLevel), l = f.texOffset.x, u = f.texOffset.y, _ = f.texExtent.width, c = f.texExtent.height, a.readPixels(l, u, _, c, t.glFormat, t.glType, r[o]);
                }

                break;

              default:
                console.error("Unsupported GL texture type, copy texture to buffers failed.");
            }

            a.bindFramebuffer(a.FRAMEBUFFER, null), i.glFramebuffer = null, a.deleteFramebuffer(n);
          }(this, e.gpuTexture, t, r);
        }, s.copyTexImagesToTexture = function (e, t, r) {
          !function (e, t, r, s) {
            var a = e.gl,
                i = e.stateCache.glTexUnits[e.stateCache.texUnit];
            i.glTexture !== r.glTexture && (a.bindTexture(r.glTarget, r.glTexture), i.glTexture = r.glTexture);
            var n = 0,
                l = 0;

            switch (r.glTarget) {
              case a.TEXTURE_2D:
                for (var u = 0; u < s.length; u++) {
                  var _ = s[u];
                  a.texSubImage2D(a.TEXTURE_2D, _.texSubres.mipLevel, _.texOffset.x, _.texOffset.y, r.glFormat, r.glType, t[n++]);
                }

                break;

              case a.TEXTURE_CUBE_MAP:
                for (var c = 0; c < s.length; c++) {
                  var o = s[c],
                      f = o.texSubres.baseArrayLayer + o.texSubres.layerCount;

                  for (l = o.texSubres.baseArrayLayer; l < f; ++l) {
                    a.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + l, o.texSubres.mipLevel, o.texOffset.x, o.texOffset.y, r.glFormat, r.glType, t[n++]);
                  }
                }

                break;

              default:
                console.error("Unsupported GL texture type, copy buffer to texture failed.");
            }

            r.flags & B.GEN_MIPMAP && r.isPowerOf2 && a.generateMipmap(r.glTarget);
          }(this, e, t.gpuTexture, r);
        }, s.copyFramebufferToBuffer = function (e, t, r) {
          var s = this._webGLRC,
              a = e.gpuFramebuffer,
              i = a.gpuColorTextures[0].format,
              n = Se(i, s),
              l = Ae(i, s),
              u = ce(g[i]),
              _ = this.stateCache.glFramebuffer;
          this.stateCache.glFramebuffer !== a.glFramebuffer && (s.bindFramebuffer(s.FRAMEBUFFER, a.glFramebuffer), this.stateCache.glFramebuffer = a.glFramebuffer);

          for (var c, o = new u(t), f = J(r); !(c = f()).done;) {
            var h = c.value,
                d = h.texExtent.width,
                E = h.texExtent.height;
            s.readPixels(h.texOffset.x, h.texOffset.y, d, E, n, l, o);
          }

          this.stateCache.glFramebuffer !== _ && (s.bindFramebuffer(s.FRAMEBUFFER, _), this.stateCache.glFramebuffer = _);
        }, s.blitFramebuffer = function () {}, s.getExtension = function (e) {
          for (var t = ["", "WEBKIT_", "MOZ_"], r = 0; r < t.length; ++r) {
            var s = this.gl.getExtension(t[r] + e);
            if (s) return s;
          }

          return null;
        }, s.initStates = function (e) {
          e.activeTexture(e.TEXTURE0), e.pixelStorei(e.PACK_ALIGNMENT, 1), e.pixelStorei(e.UNPACK_ALIGNMENT, 1), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, !1), e.bindFramebuffer(e.FRAMEBUFFER, null), e.enable(e.SCISSOR_TEST), e.enable(e.CULL_FACE), e.cullFace(e.BACK), e.frontFace(e.CCW), e.disable(e.POLYGON_OFFSET_FILL), e.polygonOffset(0, 0), e.enable(e.DEPTH_TEST), e.depthMask(!0), e.depthFunc(e.LESS), e.depthRange(0, 1), e.stencilFuncSeparate(e.FRONT, e.ALWAYS, 1, 65535), e.stencilOpSeparate(e.FRONT, e.KEEP, e.KEEP, e.KEEP), e.stencilMaskSeparate(e.FRONT, 65535), e.stencilFuncSeparate(e.BACK, e.ALWAYS, 1, 65535), e.stencilOpSeparate(e.BACK, e.KEEP, e.KEEP, e.KEEP), e.stencilMaskSeparate(e.BACK, 65535), e.disable(e.STENCIL_TEST), e.disable(e.SAMPLE_ALPHA_TO_COVERAGE), e.disable(e.BLEND), e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ZERO, e.ONE, e.ZERO), e.colorMask(!0, !0, !0, !0), e.blendColor(0, 0, 0, 0);
        }, s._onWebGLContextLost = function (e) {
          oe(11e3), fe(e);
        }, a(r, [{
          key: "gl",
          get: function get() {
            return this._webGLRC;
          }
        }, {
          key: "webGLQueue",
          get: function get() {
            return this._queue;
          }
        }, {
          key: "isAntialias",
          get: function get() {
            return this._isAntialias;
          }
        }, {
          key: "isPremultipliedAlpha",
          get: function get() {
            return this._isPremultipliedAlpha;
          }
        }, {
          key: "useVAO",
          get: function get() {
            return this._useVAO;
          }
        }, {
          key: "destroyShadersImmediately",
          get: function get() {
            return this._destroyShadersImmediately;
          }
        }, {
          key: "noCompressedTexSubImage2D",
          get: function get() {
            return this._noCompressedTexSubImage2D;
          }
        }, {
          key: "bindingMappingInfo",
          get: function get() {
            return this._bindingMappingInfo;
          }
        }, {
          key: "EXT_texture_filter_anisotropic",
          get: function get() {
            return this._EXT_texture_filter_anisotropic;
          }
        }, {
          key: "EXT_blend_minmax",
          get: function get() {
            return this._EXT_blend_minmax;
          }
        }, {
          key: "EXT_frag_depth",
          get: function get() {
            return this._EXT_frag_depth;
          }
        }, {
          key: "EXT_shader_texture_lod",
          get: function get() {
            return this._EXT_shader_texture_lod;
          }
        }, {
          key: "EXT_sRGB",
          get: function get() {
            return this._EXT_sRGB;
          }
        }, {
          key: "OES_vertex_array_object",
          get: function get() {
            return this._OES_vertex_array_object;
          }
        }, {
          key: "WEBGL_color_buffer_float",
          get: function get() {
            return this._WEBGL_color_buffer_float;
          }
        }, {
          key: "WEBGL_compressed_texture_etc1",
          get: function get() {
            return this._WEBGL_compressed_texture_etc1;
          }
        }, {
          key: "WEBGL_compressed_texture_pvrtc",
          get: function get() {
            return this._WEBGL_compressed_texture_pvrtc;
          }
        }, {
          key: "WEBGL_compressed_texture_astc",
          get: function get() {
            return this._WEBGL_compressed_texture_astc;
          }
        }, {
          key: "WEBGL_compressed_texture_s3tc",
          get: function get() {
            return this._WEBGL_compressed_texture_s3tc;
          }
        }, {
          key: "WEBGL_compressed_texture_s3tc_srgb",
          get: function get() {
            return this._WEBGL_compressed_texture_s3tc_srgb;
          }
        }, {
          key: "WEBGL_debug_shaders",
          get: function get() {
            return this._WEBGL_debug_shaders;
          }
        }, {
          key: "WEBGL_draw_buffers",
          get: function get() {
            return this._WEBGL_draw_buffers;
          }
        }, {
          key: "WEBGL_lose_context",
          get: function get() {
            return this._WEBGL_lose_context;
          }
        }, {
          key: "WEBGL_depth_texture",
          get: function get() {
            return this._WEBGL_depth_texture;
          }
        }, {
          key: "WEBGL_debug_renderer_info",
          get: function get() {
            return this._WEBGL_debug_renderer_info;
          }
        }, {
          key: "OES_texture_half_float",
          get: function get() {
            return this._OES_texture_half_float;
          }
        }, {
          key: "OES_texture_half_float_linear",
          get: function get() {
            return this._OES_texture_half_float_linear;
          }
        }, {
          key: "OES_texture_float",
          get: function get() {
            return this._OES_texture_float;
          }
        }, {
          key: "OES_standard_derivatives",
          get: function get() {
            return this._OES_standard_derivatives;
          }
        }, {
          key: "OES_element_index_uint",
          get: function get() {
            return this._OES_element_index_uint;
          }
        }, {
          key: "ANGLE_instanced_arrays",
          get: function get() {
            return this._ANGLE_instanced_arrays;
          }
        }]), r;
      }(ge));

      Ee.WebGLDevice = ot;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/gfx-webgl2.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./webgl-define-47af0bf2.js"], function (e) {
  "use strict";

  var t, r, s, a, i, n, u, l, _, c, f, o, h, d, g, R, A, E, T, p, S, B, C, m, b, x, F, I, P, G, O, M, v, D, L, U, N, y, w, k, X, H, V, W, z, K, Y, q, Z, j, Q, J, $, ee, te, re, se, ae, ie, ne, ue, le, _e, ce, fe, oe, he, de;

  return {
    setters: [function (e) {
      t = e.ec, r = e.b5, s = e.b6, a = e.e2, i = e.D, n = e.x, u = e.ag, l = e.b0, _ = e.as, c = e.G, f = e.z, o = e.H, h = e.f, d = e.ba, g = e.J, R = e.b4, A = e.K, E = e.L, T = e.dw, p = e.e, S = e.Z, B = e.X, C = e.a6, m = e.a7, b = e.T, x = e.Y, F = e.C, I = e.au, P = e.B, G = e.a8, O = e.ab, M = e.u, v = e.bf, D = e.bg, L = e.b7, U = e.bh, N = e.bi, y = e.bo, w = e.bp, k = e.bq, X = e.br, H = e.bs, V = e.an, W = e.bj, z = e.bk, K = e.bm, Y = e.b9, q = e.bb, Z = e.bt, j = e.dC, Q = e.A, J = e.t, $ = e.F, ee = e.aY, te = e.aa, re = e.aX, se = e.av, ae = e.I, ie = e.bu, ne = e.bv, ue = e.bd, le = e.d, _e = e.w, ce = e.ap, fe = e.am, oe = e.be, he = e.l;
    }, function () {}, function () {}, function (e) {
      de = e.W;
    }],
    execute: function execute() {
      var ge = function (e) {
        function i() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuDescriptorSet = null, t;
        }

        t(i, e);
        var n = i.prototype;
        return n.initialize = function (e) {
          this._layout = e.layout;
          var t = e.layout.gpuDescriptorSetLayout,
              r = t.bindings,
              s = t.descriptorIndices,
              a = t.descriptorCount;
          this._buffers = Array(a).fill(null), this._textures = Array(a).fill(null), this._samplers = Array(a).fill(null);
          var i = [];
          this._gpuDescriptorSet = {
            gpuDescriptors: i,
            descriptorIndices: s
          };

          for (var n = 0; n < r.length; ++n) {
            for (var u = r[n], l = 0; l < u.count; l++) {
              i.push({
                type: u.descriptorType,
                gpuBuffer: null,
                gpuTexture: null,
                gpuSampler: null
              });
            }
          }

          return !0;
        }, n.destroy = function () {
          this._layout = null, this._gpuDescriptorSet = null;
        }, n.update = function () {
          if (this._isDirty && this._gpuDescriptorSet) {
            for (var e = this._gpuDescriptorSet.gpuDescriptors, t = 0; t < e.length; ++t) {
              e[t].type & r ? this._buffers[t] && (e[t].gpuBuffer = this._buffers[t].gpuBuffer) : e[t].type & s && (this._textures[t] && (e[t].gpuTexture = this._textures[t].gpuTexture), this._samplers[t] && (e[t].gpuSampler = this._samplers[t].gpuSampler));
            }

            this._isDirty = !1;
          }
        }, a(i, [{
          key: "gpuDescriptorSet",
          get: function get() {
            return this._gpuDescriptorSet;
          }
        }]), i;
      }(i),
          Re = [10497, 33648, 33071, 33071],
          Ae = new Float32Array(4);

      function Ee(e, t) {
        switch (e) {
          case n.R8:
            return t.UNSIGNED_BYTE;

          case n.R8SN:
            return t.BYTE;

          case n.R8UI:
            return t.UNSIGNED_BYTE;

          case n.R8I:
            return t.BYTE;

          case n.R16F:
            return t.HALF_FLOAT;

          case n.R16UI:
            return t.UNSIGNED_SHORT;

          case n.R16I:
            return t.SHORT;

          case n.R32F:
            return t.FLOAT;

          case n.R32UI:
            return t.UNSIGNED_INT;

          case n.R32I:
            return t.INT;

          case n.RG8:
            return t.UNSIGNED_BYTE;

          case n.RG8SN:
            return t.BYTE;

          case n.RG8UI:
            return t.UNSIGNED_BYTE;

          case n.RG8I:
            return t.BYTE;

          case n.RG16F:
            return t.HALF_FLOAT;

          case n.RG16UI:
            return t.UNSIGNED_SHORT;

          case n.RG16I:
            return t.SHORT;

          case n.RG32F:
            return t.FLOAT;

          case n.RG32UI:
            return t.UNSIGNED_INT;

          case n.RG32I:
            return t.INT;

          case n.RGB8:
          case n.SRGB8:
            return t.UNSIGNED_BYTE;

          case n.RGB8SN:
            return t.BYTE;

          case n.RGB8UI:
            return t.UNSIGNED_BYTE;

          case n.RGB8I:
            return t.BYTE;

          case n.RGB16F:
            return t.HALF_FLOAT;

          case n.RGB16UI:
            return t.UNSIGNED_SHORT;

          case n.RGB16I:
            return t.SHORT;

          case n.RGB32F:
            return t.FLOAT;

          case n.RGB32UI:
            return t.UNSIGNED_INT;

          case n.RGB32I:
            return t.INT;

          case n.BGRA8:
          case n.RGBA8:
          case n.SRGB8_A8:
            return t.UNSIGNED_BYTE;

          case n.RGBA8SN:
            return t.BYTE;

          case n.RGBA8UI:
            return t.UNSIGNED_BYTE;

          case n.RGBA8I:
            return t.BYTE;

          case n.RGBA16F:
            return t.HALF_FLOAT;

          case n.RGBA16UI:
            return t.UNSIGNED_SHORT;

          case n.RGBA16I:
            return t.SHORT;

          case n.RGBA32F:
            return t.FLOAT;

          case n.RGBA32UI:
            return t.UNSIGNED_INT;

          case n.RGBA32I:
            return t.INT;

          case n.R5G6B5:
            return t.UNSIGNED_SHORT_5_6_5;

          case n.R11G11B10F:
            return t.UNSIGNED_INT_10F_11F_11F_REV;

          case n.RGB5A1:
            return t.UNSIGNED_SHORT_5_5_5_1;

          case n.RGBA4:
            return t.UNSIGNED_SHORT_4_4_4_4;

          case n.RGB10A2:
          case n.RGB10A2UI:
            return t.UNSIGNED_INT_2_10_10_10_REV;

          case n.RGB9E5:
            return t.FLOAT;

          case n.D16:
            return t.UNSIGNED_SHORT;

          case n.D16S8:
            return t.UNSIGNED_INT_24_8;

          case n.D24:
            return t.UNSIGNED_INT;

          case n.D24S8:
            return t.UNSIGNED_INT_24_8;

          case n.D32F:
            return t.FLOAT;

          case n.D32F_S8:
            return t.FLOAT_32_UNSIGNED_INT_24_8_REV;

          case n.BC1:
          case n.BC1_SRGB:
          case n.BC2:
          case n.BC2_SRGB:
          case n.BC3:
          case n.BC3_SRGB:
          case n.BC4:
            return t.UNSIGNED_BYTE;

          case n.BC4_SNORM:
            return t.BYTE;

          case n.BC5:
            return t.UNSIGNED_BYTE;

          case n.BC5_SNORM:
            return t.BYTE;

          case n.BC6H_SF16:
          case n.BC6H_UF16:
            return t.FLOAT;

          case n.BC7:
          case n.BC7_SRGB:
          case n.ETC_RGB8:
          case n.ETC2_RGB8:
          case n.ETC2_SRGB8:
          case n.ETC2_RGB8_A1:
          case n.ETC2_SRGB8_A1:
          case n.EAC_R11:
            return t.UNSIGNED_BYTE;

          case n.EAC_R11SN:
            return t.BYTE;

          case n.EAC_RG11:
            return t.UNSIGNED_BYTE;

          case n.EAC_RG11SN:
            return t.BYTE;

          case n.PVRTC_RGB2:
          case n.PVRTC_RGBA2:
          case n.PVRTC_RGB4:
          case n.PVRTC_RGBA4:
          case n.PVRTC2_2BPP:
          case n.PVRTC2_4BPP:
            return t.UNSIGNED_BYTE;

          case n.ASTC_RGBA_4X4:
          case n.ASTC_RGBA_5X4:
          case n.ASTC_RGBA_5X5:
          case n.ASTC_RGBA_6X5:
          case n.ASTC_RGBA_6X6:
          case n.ASTC_RGBA_8X5:
          case n.ASTC_RGBA_8X6:
          case n.ASTC_RGBA_8X8:
          case n.ASTC_RGBA_10X5:
          case n.ASTC_RGBA_10X6:
          case n.ASTC_RGBA_10X8:
          case n.ASTC_RGBA_10X10:
          case n.ASTC_RGBA_12X10:
          case n.ASTC_RGBA_12X12:
          case n.ASTC_SRGBA_4X4:
          case n.ASTC_SRGBA_5X4:
          case n.ASTC_SRGBA_5X5:
          case n.ASTC_SRGBA_6X5:
          case n.ASTC_SRGBA_6X6:
          case n.ASTC_SRGBA_8X5:
          case n.ASTC_SRGBA_8X6:
          case n.ASTC_SRGBA_8X8:
          case n.ASTC_SRGBA_10X5:
          case n.ASTC_SRGBA_10X6:
          case n.ASTC_SRGBA_10X8:
          case n.ASTC_SRGBA_10X10:
          case n.ASTC_SRGBA_12X10:
          case n.ASTC_SRGBA_12X12:
          default:
            return t.UNSIGNED_BYTE;
        }
      }

      function Te(e, t) {
        switch (e) {
          case n.A8:
            return t.ALPHA;

          case n.L8:
            return t.LUMINANCE;

          case n.LA8:
            return t.LUMINANCE_ALPHA;

          case n.R8:
          case n.R8SN:
            return t.RED;

          case n.R8UI:
          case n.R8I:
            return t.RED;

          case n.RG8:
          case n.RG8SN:
          case n.RG8UI:
          case n.RG8I:
            return t.RG;

          case n.RGB8:
          case n.RGB8SN:
          case n.RGB8UI:
          case n.RGB8I:
            return t.RGB;

          case n.BGRA8:
          case n.RGBA8:
          case n.RGBA8SN:
          case n.RGBA8UI:
          case n.RGBA8I:
            return t.RGBA;

          case n.R16UI:
          case n.R16I:
          case n.R16F:
            return t.RED;

          case n.RG16UI:
          case n.RG16I:
          case n.RG16F:
            return t.RG;

          case n.RGB16UI:
          case n.RGB16I:
          case n.RGB16F:
            return t.RGB;

          case n.RGBA16UI:
          case n.RGBA16I:
          case n.RGBA16F:
            return t.RGBA;

          case n.R32UI:
          case n.R32I:
          case n.R32F:
            return t.RED;

          case n.RG32UI:
          case n.RG32I:
          case n.RG32F:
            return t.RG;

          case n.RGB32UI:
          case n.RGB32I:
          case n.RGB32F:
            return t.RGB;

          case n.RGBA32UI:
          case n.RGBA32I:
          case n.RGBA32F:
          case n.RGB10A2:
            return t.RGBA;

          case n.R11G11B10F:
          case n.R5G6B5:
            return t.RGB;

          case n.RGB5A1:
          case n.RGBA4:
            return t.RGBA;

          case n.SRGB8:
            return t.RGB;

          case n.SRGB8_A8:
            return t.RGBA;

          case n.D16:
            return t.DEPTH_COMPONENT;

          case n.D16S8:
            return t.DEPTH_STENCIL;

          case n.D24:
            return t.DEPTH_COMPONENT;

          case n.D24S8:
            return t.DEPTH_STENCIL;

          case n.D32F:
            return t.DEPTH_COMPONENT;

          case n.D32F_S8:
            return t.DEPTH_STENCIL;

          case n.BC1:
            return de.COMPRESSED_RGB_S3TC_DXT1_EXT;

          case n.BC1_ALPHA:
            return de.COMPRESSED_RGBA_S3TC_DXT1_EXT;

          case n.BC1_SRGB:
            return de.COMPRESSED_SRGB_S3TC_DXT1_EXT;

          case n.BC1_SRGB_ALPHA:
            return de.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;

          case n.BC2:
            return de.COMPRESSED_RGBA_S3TC_DXT3_EXT;

          case n.BC2_SRGB:
            return de.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;

          case n.BC3:
            return de.COMPRESSED_RGBA_S3TC_DXT5_EXT;

          case n.BC3_SRGB:
            return de.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;

          case n.ETC_RGB8:
            return de.COMPRESSED_RGB_ETC1_WEBGL;

          case n.ETC2_RGB8:
            return de.COMPRESSED_RGB8_ETC2;

          case n.ETC2_SRGB8:
            return de.COMPRESSED_SRGB8_ETC2;

          case n.ETC2_RGB8_A1:
            return de.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;

          case n.ETC2_SRGB8_A1:
            return de.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;

          case n.ETC2_RGBA8:
            return de.COMPRESSED_RGBA8_ETC2_EAC;

          case n.ETC2_SRGB8_A8:
            return de.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;

          case n.EAC_R11:
            return de.COMPRESSED_R11_EAC;

          case n.EAC_R11SN:
            return de.COMPRESSED_SIGNED_R11_EAC;

          case n.EAC_RG11:
            return de.COMPRESSED_RG11_EAC;

          case n.EAC_RG11SN:
            return de.COMPRESSED_SIGNED_RG11_EAC;

          case n.PVRTC_RGB2:
            return de.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;

          case n.PVRTC_RGBA2:
            return de.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;

          case n.PVRTC_RGB4:
            return de.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;

          case n.PVRTC_RGBA4:
            return de.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;

          case n.ASTC_RGBA_4X4:
            return de.COMPRESSED_RGBA_ASTC_4x4_KHR;

          case n.ASTC_RGBA_5X4:
            return de.COMPRESSED_RGBA_ASTC_5x4_KHR;

          case n.ASTC_RGBA_5X5:
            return de.COMPRESSED_RGBA_ASTC_5x5_KHR;

          case n.ASTC_RGBA_6X5:
            return de.COMPRESSED_RGBA_ASTC_6x5_KHR;

          case n.ASTC_RGBA_6X6:
            return de.COMPRESSED_RGBA_ASTC_6x6_KHR;

          case n.ASTC_RGBA_8X5:
            return de.COMPRESSED_RGBA_ASTC_8x5_KHR;

          case n.ASTC_RGBA_8X6:
            return de.COMPRESSED_RGBA_ASTC_8x6_KHR;

          case n.ASTC_RGBA_8X8:
            return de.COMPRESSED_RGBA_ASTC_8x8_KHR;

          case n.ASTC_RGBA_10X5:
            return de.COMPRESSED_RGBA_ASTC_10x5_KHR;

          case n.ASTC_RGBA_10X6:
            return de.COMPRESSED_RGBA_ASTC_10x6_KHR;

          case n.ASTC_RGBA_10X8:
            return de.COMPRESSED_RGBA_ASTC_10x8_KHR;

          case n.ASTC_RGBA_10X10:
            return de.COMPRESSED_RGBA_ASTC_10x10_KHR;

          case n.ASTC_RGBA_12X10:
            return de.COMPRESSED_RGBA_ASTC_12x10_KHR;

          case n.ASTC_RGBA_12X12:
            return de.COMPRESSED_RGBA_ASTC_12x12_KHR;

          case n.ASTC_SRGBA_4X4:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;

          case n.ASTC_SRGBA_5X4:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;

          case n.ASTC_SRGBA_5X5:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;

          case n.ASTC_SRGBA_6X5:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;

          case n.ASTC_SRGBA_6X6:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;

          case n.ASTC_SRGBA_8X5:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;

          case n.ASTC_SRGBA_8X6:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;

          case n.ASTC_SRGBA_8X8:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;

          case n.ASTC_SRGBA_10X5:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;

          case n.ASTC_SRGBA_10X6:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;

          case n.ASTC_SRGBA_10X8:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;

          case n.ASTC_SRGBA_10X10:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;

          case n.ASTC_SRGBA_12X10:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;

          case n.ASTC_SRGBA_12X12:
            return de.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;

          default:
            return console.error("Unsupported Format, convert to WebGL format failed."), t.RGBA;
        }
      }

      function pe(e, t) {
        switch (e) {
          case b.BOOL:
            return t.BOOL;

          case b.BOOL2:
            return t.BOOL_VEC2;

          case b.BOOL3:
            return t.BOOL_VEC3;

          case b.BOOL4:
            return t.BOOL_VEC4;

          case b.INT:
            return t.INT;

          case b.INT2:
            return t.INT_VEC2;

          case b.INT3:
            return t.INT_VEC3;

          case b.INT4:
            return t.INT_VEC4;

          case b.UINT:
            return t.UNSIGNED_INT;

          case b.FLOAT:
            return t.FLOAT;

          case b.FLOAT2:
            return t.FLOAT_VEC2;

          case b.FLOAT3:
            return t.FLOAT_VEC3;

          case b.FLOAT4:
            return t.FLOAT_VEC4;

          case b.MAT2:
            return t.FLOAT_MAT2;

          case b.MAT2X3:
            return t.FLOAT_MAT2x3;

          case b.MAT2X4:
            return t.FLOAT_MAT2x4;

          case b.MAT3X2:
            return t.FLOAT_MAT3x2;

          case b.MAT3:
            return t.FLOAT_MAT3;

          case b.MAT3X4:
            return t.FLOAT_MAT3x4;

          case b.MAT4X2:
            return t.FLOAT_MAT4x2;

          case b.MAT4X3:
            return t.FLOAT_MAT4x3;

          case b.MAT4:
            return t.FLOAT_MAT4;

          case b.SAMPLER2D:
            return t.SAMPLER_2D;

          case b.SAMPLER2D_ARRAY:
            return t.SAMPLER_2D_ARRAY;

          case b.SAMPLER3D:
            return t.SAMPLER_3D;

          case b.SAMPLER_CUBE:
            return t.SAMPLER_CUBE;

          default:
            return console.error("Unsupported GLType, convert to GL type failed."), b.UNKNOWN;
        }
      }

      function Se(e, t) {
        switch (e) {
          case t.BOOL:
            return b.BOOL;

          case t.BOOL_VEC2:
            return b.BOOL2;

          case t.BOOL_VEC3:
            return b.BOOL3;

          case t.BOOL_VEC4:
            return b.BOOL4;

          case t.INT:
            return b.INT;

          case t.INT_VEC2:
            return b.INT2;

          case t.INT_VEC3:
            return b.INT3;

          case t.INT_VEC4:
            return b.INT4;

          case t.UNSIGNED_INT:
            return b.UINT;

          case t.UNSIGNED_INT_VEC2:
            return b.UINT2;

          case t.UNSIGNED_INT_VEC3:
            return b.UINT3;

          case t.UNSIGNED_INT_VEC4:
            return b.UINT4;

          case t.FLOAT:
            return b.FLOAT;

          case t.FLOAT_VEC2:
            return b.FLOAT2;

          case t.FLOAT_VEC3:
            return b.FLOAT3;

          case t.FLOAT_VEC4:
            return b.FLOAT4;

          case t.FLOAT_MAT2:
            return b.MAT2;

          case t.FLOAT_MAT2x3:
            return b.MAT2X3;

          case t.FLOAT_MAT2x4:
            return b.MAT2X4;

          case t.FLOAT_MAT3x2:
            return b.MAT3X2;

          case t.FLOAT_MAT3:
            return b.MAT3;

          case t.FLOAT_MAT3x4:
            return b.MAT3X4;

          case t.FLOAT_MAT4x2:
            return b.MAT4X2;

          case t.FLOAT_MAT4x3:
            return b.MAT4X3;

          case t.FLOAT_MAT4:
            return b.MAT4;

          case t.SAMPLER_2D:
            return b.SAMPLER2D;

          case t.SAMPLER_2D_ARRAY:
            return b.SAMPLER2D_ARRAY;

          case t.SAMPLER_3D:
            return b.SAMPLER3D;

          case t.SAMPLER_CUBE:
            return b.SAMPLER_CUBE;

          default:
            return console.error("Unsupported GLType, convert to Type failed."), b.UNKNOWN;
        }
      }

      function Be(e, t) {
        switch (e) {
          case t.BOOL:
            return 4;

          case t.BOOL_VEC2:
            return 8;

          case t.BOOL_VEC3:
            return 12;

          case t.BOOL_VEC4:
            return 16;

          case t.INT:
            return 4;

          case t.INT_VEC2:
            return 8;

          case t.INT_VEC3:
            return 12;

          case t.INT_VEC4:
            return 16;

          case t.UNSIGNED_INT:
            return 4;

          case t.UNSIGNED_INT_VEC2:
            return 8;

          case t.UNSIGNED_INT_VEC3:
            return 12;

          case t.UNSIGNED_INT_VEC4:
            return 16;

          case t.FLOAT:
            return 4;

          case t.FLOAT_VEC2:
            return 8;

          case t.FLOAT_VEC3:
            return 12;

          case t.FLOAT_VEC4:
          case t.FLOAT_MAT2:
            return 16;

          case t.FLOAT_MAT2x3:
            return 24;

          case t.FLOAT_MAT2x4:
            return 32;

          case t.FLOAT_MAT3x2:
            return 24;

          case t.FLOAT_MAT3:
            return 36;

          case t.FLOAT_MAT3x4:
            return 48;

          case t.FLOAT_MAT4x2:
            return 32;

          case t.FLOAT_MAT4x3:
            return 48;

          case t.FLOAT_MAT4:
            return 64;

          case t.SAMPLER_2D:
          case t.SAMPLER_2D_ARRAY:
          case t.SAMPLER_2D_ARRAY_SHADOW:
          case t.SAMPLER_3D:
          case t.SAMPLER_CUBE:
          case t.INT_SAMPLER_2D:
          case t.INT_SAMPLER_2D_ARRAY:
          case t.INT_SAMPLER_3D:
          case t.INT_SAMPLER_CUBE:
          case t.UNSIGNED_INT_SAMPLER_2D:
          case t.UNSIGNED_INT_SAMPLER_2D_ARRAY:
          case t.UNSIGNED_INT_SAMPLER_3D:
          case t.UNSIGNED_INT_SAMPLER_CUBE:
            return 4;

          default:
            return console.error("Unsupported GLType, get type failed."), 0;
        }
      }

      function Ce(e, t) {
        switch (e) {
          case t.FLOAT_MAT2:
          case t.FLOAT_MAT2x3:
          case t.FLOAT_MAT2x4:
            return 2;

          case t.FLOAT_MAT3x2:
          case t.FLOAT_MAT3:
          case t.FLOAT_MAT3x4:
            return 3;

          case t.FLOAT_MAT4x2:
          case t.FLOAT_MAT4x3:
          case t.FLOAT_MAT4:
            return 4;

          default:
            return 1;
        }
      }

      var me,
          be = [512, 513, 514, 515, 516, 517, 518, 519],
          xe = [0, 7680, 7681, 7682, 7683, 5386, 34055, 34056],
          Fe = [32774, 32778, 32779, 32775, 32776],
          Ie = [0, 1, 770, 772, 771, 773, 768, 774, 769, 775, 776, 32769, 32770, 32771, 32772];
      !function (e) {
        e[e.BEGIN_RENDER_PASS = 0] = "BEGIN_RENDER_PASS", e[e.END_RENDER_PASS = 1] = "END_RENDER_PASS", e[e.BIND_STATES = 2] = "BIND_STATES", e[e.DRAW = 3] = "DRAW", e[e.UPDATE_BUFFER = 4] = "UPDATE_BUFFER", e[e.COPY_BUFFER_TO_TEXTURE = 5] = "COPY_BUFFER_TO_TEXTURE", e[e.COUNT = 6] = "COUNT";
      }(me || (me = {}));

      var Pe = function Pe(e) {
        this.cmdType = void 0, this.refCount = 0, this.cmdType = e;
      },
          Ge = function (e) {
        function r() {
          var t;
          return (t = e.call(this, me.BEGIN_RENDER_PASS) || this).gpuRenderPass = null, t.gpuFramebuffer = null, t.renderArea = new u(), t.clearColors = [], t.clearDepth = 1, t.clearStencil = 0, t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuFramebuffer = null, this.clearColors.length = 0;
        }, r;
      }(Pe),
          Oe = function (e) {
        function r() {
          var t;
          return (t = e.call(this, me.BIND_STATES) || this).gpuPipelineState = null, t.gpuInputAssembler = null, t.gpuDescriptorSets = [], t.dynamicOffsets = [], t.dynamicStates = new l(), t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuPipelineState = null, this.gpuInputAssembler = null, this.gpuDescriptorSets.length = 0, this.dynamicOffsets.length = 0;
        }, r;
      }(Pe),
          Me = function (e) {
        function r() {
          var t;
          return (t = e.call(this, me.DRAW) || this).drawInfo = new _(), t;
        }

        return t(r, e), r.prototype.clear = function () {}, r;
      }(Pe),
          ve = function (e) {
        function r() {
          var t;
          return (t = e.call(this, me.UPDATE_BUFFER) || this).gpuBuffer = null, t.buffer = null, t.offset = 0, t.size = 0, t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuBuffer = null, this.buffer = null;
        }, r;
      }(Pe),
          De = function (e) {
        function r() {
          var t;
          return (t = e.call(this, me.COPY_BUFFER_TO_TEXTURE) || this).gpuTexture = null, t.buffers = [], t.regions = [], t;
        }

        return t(r, e), r.prototype.clear = function () {
          this.gpuTexture = null, this.buffers.length = 0, this.regions.length = 0;
        }, r;
      }(Pe),
          Le = function () {
        function e() {
          this.cmds = new F(1), this.beginRenderPassCmds = new F(1), this.bindStatesCmds = new F(1), this.drawCmds = new F(1), this.updateBufferCmds = new F(1), this.copyBufferToTextureCmds = new F(1);
        }

        return e.prototype.clearCmds = function (e) {
          this.beginRenderPassCmds.length && (e.beginRenderPassCmdPool.freeCmds(this.beginRenderPassCmds), this.beginRenderPassCmds.clear()), this.bindStatesCmds.length && (e.bindStatesCmdPool.freeCmds(this.bindStatesCmds), this.bindStatesCmds.clear()), this.drawCmds.length && (e.drawCmdPool.freeCmds(this.drawCmds), this.drawCmds.clear()), this.updateBufferCmds.length && (e.updateBufferCmdPool.freeCmds(this.updateBufferCmds), this.updateBufferCmds.clear()), this.copyBufferToTextureCmds.length && (e.copyBufferToTextureCmdPool.freeCmds(this.copyBufferToTextureCmds), this.copyBufferToTextureCmds.clear()), this.cmds.clear();
        }, e;
      }();

      function Ue(e, t, r, s, a) {
        if (t.usage & f.INDIRECT) t.indirects.length = s, Array.prototype.push.apply(t.indirects, r.drawInfos);else {
          var i = r,
              n = e.gl,
              u = e.stateCache;

          switch (t.glTarget) {
            case n.ARRAY_BUFFER:
              u.glVAO && (n.bindVertexArray(null), u.glVAO = Ne.gpuInputAssembler = null), u.glArrayBuffer !== t.glBuffer && (n.bindBuffer(n.ARRAY_BUFFER, t.glBuffer), u.glArrayBuffer = t.glBuffer), a === i.byteLength ? n.bufferSubData(t.glTarget, s, i) : n.bufferSubData(t.glTarget, s, i.slice(0, a));
              break;

            case n.ELEMENT_ARRAY_BUFFER:
              u.glVAO && (n.bindVertexArray(null), u.glVAO = Ne.gpuInputAssembler = null), u.glElementArrayBuffer !== t.glBuffer && (n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, t.glBuffer), u.glElementArrayBuffer = t.glBuffer), a === i.byteLength ? n.bufferSubData(t.glTarget, s, i) : n.bufferSubData(t.glTarget, s, i.slice(0, a));
              break;

            case n.UNIFORM_BUFFER:
              u.glUniformBuffer !== t.glBuffer && (n.bindBuffer(n.UNIFORM_BUFFER, t.glBuffer), u.glUniformBuffer = t.glBuffer), a === i.byteLength ? n.bufferSubData(t.glTarget, s, i) : n.bufferSubData(t.glTarget, s, new Float32Array(i, 0, a / 4));
              break;

            default:
              console.error("Unsupported BufferType, update buffer failed.");
          }
        }
      }

      var Ne = {
        gpuPipelineState: null,
        gpuInputAssembler: null,
        glPrimitive: 0,
        invalidateAttachments: []
      };

      function ye(e, t, r, s, a, i, u) {
        var l = e.gl,
            _ = e.stateCache,
            c = 0;

        if (r && t) {
          _.glFramebuffer !== r.glFramebuffer && (l.bindFramebuffer(l.FRAMEBUFFER, r.glFramebuffer), _.glFramebuffer = r.glFramebuffer), _.viewport.left === s.x && _.viewport.top === s.y && _.viewport.width === s.width && _.viewport.height === s.height || (l.viewport(s.x, s.y, s.width, s.height), _.viewport.left = s.x, _.viewport.top = s.y, _.viewport.width = s.width, _.viewport.height = s.height), _.scissorRect.x === s.x && _.scissorRect.y === s.y && _.scissorRect.width === s.width && _.scissorRect.height === s.height || (l.scissor(s.x, s.y, s.width, s.height), _.scissorRect.x = s.x, _.scissorRect.y = s.y, _.scissorRect.width = s.width, _.scissorRect.height = s.height), Ne.invalidateAttachments.length = 0;

          for (var f = 0; f < a.length; ++f) {
            var o = t.colorAttachments[f];
            if (o.format !== n.UNKNOWN) switch (o.loadOp) {
              case S.LOAD:
                break;

              case S.CLEAR:
                if (_.bs.targets[0].blendColorMask !== B.ALL && l.colorMask(!0, !0, !0, !0), r.isOffscreen) Ae[0] = a[f].x, Ae[1] = a[f].y, Ae[2] = a[f].z, Ae[3] = a[f].w, l.clearBufferfv(l.COLOR, f, Ae);else {
                  var h = a[0];
                  l.clearColor(h.x, h.y, h.z, h.w), c |= l.COLOR_BUFFER_BIT;
                }
                break;

              case S.DISCARD:
                Ne.invalidateAttachments.push(l.COLOR_ATTACHMENT0 + f);
            }
          }

          if (t.depthStencilAttachment && t.depthStencilAttachment.format !== n.UNKNOWN) {
            switch (t.depthStencilAttachment.depthLoadOp) {
              case S.LOAD:
                break;

              case S.CLEAR:
                _.dss.depthWrite || l.depthMask(!0), l.clearDepth(i), c |= l.DEPTH_BUFFER_BIT;
                break;

              case S.DISCARD:
                Ne.invalidateAttachments.push(l.DEPTH_ATTACHMENT);
            }

            if (R[t.depthStencilAttachment.format].hasStencil) switch (t.depthStencilAttachment.stencilLoadOp) {
              case S.LOAD:
                break;

              case S.CLEAR:
                _.dss.stencilWriteMaskFront || l.stencilMaskSeparate(l.FRONT, 65535), _.dss.stencilWriteMaskBack || l.stencilMaskSeparate(l.BACK, 65535), l.clearStencil(u), c |= l.STENCIL_BUFFER_BIT;
                break;

              case S.DISCARD:
                Ne.invalidateAttachments.push(l.STENCIL_ATTACHMENT);
            }
          }

          if (r.glFramebuffer && Ne.invalidateAttachments.length && l.invalidateFramebuffer(l.FRAMEBUFFER, Ne.invalidateAttachments), c && l.clear(c), c & l.COLOR_BUFFER_BIT) {
            var d = _.bs.targets[0].blendColorMask;

            if (d !== B.ALL) {
              var g = (d & B.R) !== B.NONE,
                  A = (d & B.G) !== B.NONE,
                  E = (d & B.B) !== B.NONE,
                  T = (d & B.A) !== B.NONE;
              l.colorMask(g, A, E, T);
            }
          }

          c & l.DEPTH_BUFFER_BIT && !_.dss.depthWrite && l.depthMask(!1), c & l.STENCIL_BUFFER_BIT && (_.dss.stencilWriteMaskFront || l.stencilMaskSeparate(l.FRONT, 0), _.dss.stencilWriteMaskBack || l.stencilMaskSeparate(l.BACK, 0));
        }
      }

      function we(e, t, r, s, a, i) {
        var n = e.gl,
            u = e.stateCache,
            l = t && t.gpuShader,
            _ = !1;

        if (t && Ne.gpuPipelineState !== t) {
          if (Ne.gpuPipelineState = t, Ne.glPrimitive = t.glPrimitive, l) {
            var c = l.glProgram;
            u.glProgram !== c && (n.useProgram(c), u.glProgram = c, _ = !0);
          }

          var f = t.rs;

          if (f) {
            if (u.rs.cullMode !== f.cullMode) {
              switch (f.cullMode) {
                case C.NONE:
                  n.disable(n.CULL_FACE);
                  break;

                case C.FRONT:
                  n.enable(n.CULL_FACE), n.cullFace(n.FRONT);
                  break;

                case C.BACK:
                  n.enable(n.CULL_FACE), n.cullFace(n.BACK);
              }

              e.stateCache.rs.cullMode = f.cullMode;
            }

            var o = f.isFrontFaceCCW;
            e.stateCache.rs.isFrontFaceCCW !== o && (n.frontFace(o ? n.CCW : n.CW), e.stateCache.rs.isFrontFaceCCW = o), e.stateCache.rs.depthBias === f.depthBias && e.stateCache.rs.depthBiasSlop === f.depthBiasSlop || (n.polygonOffset(f.depthBias, f.depthBiasSlop), e.stateCache.rs.depthBias = f.depthBias, e.stateCache.rs.depthBiasSlop = f.depthBiasSlop), e.stateCache.rs.lineWidth !== f.lineWidth && (n.lineWidth(f.lineWidth), e.stateCache.rs.lineWidth = f.lineWidth);
          }

          var h = t.dss;
          h && (u.dss.depthTest !== h.depthTest && (h.depthTest ? n.enable(n.DEPTH_TEST) : n.disable(n.DEPTH_TEST), u.dss.depthTest = h.depthTest), u.dss.depthWrite !== h.depthWrite && (n.depthMask(h.depthWrite), u.dss.depthWrite = h.depthWrite), u.dss.depthFunc !== h.depthFunc && (n.depthFunc(be[h.depthFunc]), u.dss.depthFunc = h.depthFunc), u.dss.stencilTestFront === h.stencilTestFront && u.dss.stencilTestBack === h.stencilTestBack || (h.stencilTestFront || h.stencilTestBack ? n.enable(n.STENCIL_TEST) : n.disable(n.STENCIL_TEST), u.dss.stencilTestFront = h.stencilTestFront, u.dss.stencilTestBack = h.stencilTestBack), u.dss.stencilFuncFront === h.stencilFuncFront && u.dss.stencilRefFront === h.stencilRefFront && u.dss.stencilReadMaskFront === h.stencilReadMaskFront || (n.stencilFuncSeparate(n.FRONT, be[h.stencilFuncFront], h.stencilRefFront, h.stencilReadMaskFront), u.dss.stencilFuncFront = h.stencilFuncFront, u.dss.stencilRefFront = h.stencilRefFront, u.dss.stencilReadMaskFront = h.stencilReadMaskFront), u.dss.stencilFailOpFront === h.stencilFailOpFront && u.dss.stencilZFailOpFront === h.stencilZFailOpFront && u.dss.stencilPassOpFront === h.stencilPassOpFront || (n.stencilOpSeparate(n.FRONT, xe[h.stencilFailOpFront], xe[h.stencilZFailOpFront], xe[h.stencilPassOpFront]), u.dss.stencilFailOpFront = h.stencilFailOpFront, u.dss.stencilZFailOpFront = h.stencilZFailOpFront, u.dss.stencilPassOpFront = h.stencilPassOpFront), u.dss.stencilWriteMaskFront !== h.stencilWriteMaskFront && (n.stencilMaskSeparate(n.FRONT, h.stencilWriteMaskFront), u.dss.stencilWriteMaskFront = h.stencilWriteMaskFront), u.dss.stencilFuncBack === h.stencilFuncBack && u.dss.stencilRefBack === h.stencilRefBack && u.dss.stencilReadMaskBack === h.stencilReadMaskBack || (n.stencilFuncSeparate(n.BACK, be[h.stencilFuncBack], h.stencilRefBack, h.stencilReadMaskBack), u.dss.stencilFuncBack = h.stencilFuncBack, u.dss.stencilRefBack = h.stencilRefBack, u.dss.stencilReadMaskBack = h.stencilReadMaskBack), u.dss.stencilFailOpBack === h.stencilFailOpBack && u.dss.stencilZFailOpBack === h.stencilZFailOpBack && u.dss.stencilPassOpBack === h.stencilPassOpBack || (n.stencilOpSeparate(n.BACK, xe[h.stencilFailOpBack], xe[h.stencilZFailOpBack], xe[h.stencilPassOpBack]), u.dss.stencilFailOpBack = h.stencilFailOpBack, u.dss.stencilZFailOpBack = h.stencilZFailOpBack, u.dss.stencilPassOpBack = h.stencilPassOpBack), u.dss.stencilWriteMaskBack !== h.stencilWriteMaskBack && (n.stencilMaskSeparate(n.BACK, h.stencilWriteMaskBack), u.dss.stencilWriteMaskBack = h.stencilWriteMaskBack));
          var d = t.bs;

          if (d) {
            u.bs.isA2C !== d.isA2C && (d.isA2C ? n.enable(n.SAMPLE_ALPHA_TO_COVERAGE) : n.disable(n.SAMPLE_ALPHA_TO_COVERAGE), u.bs.isA2C = d.isA2C), u.bs.blendColor.x === d.blendColor.x && u.bs.blendColor.y === d.blendColor.y && u.bs.blendColor.z === d.blendColor.z && u.bs.blendColor.w === d.blendColor.w || (n.blendColor(d.blendColor.x, d.blendColor.y, d.blendColor.z, d.blendColor.w), u.bs.blendColor.x = d.blendColor.x, u.bs.blendColor.y = d.blendColor.y, u.bs.blendColor.z = d.blendColor.z, u.bs.blendColor.w = d.blendColor.w);
            var g = d.targets[0],
                R = u.bs.targets[0];
            R.blend !== g.blend && (g.blend ? n.enable(n.BLEND) : n.disable(n.BLEND), R.blend = g.blend), R.blendEq === g.blendEq && R.blendAlphaEq === g.blendAlphaEq || (n.blendEquationSeparate(Fe[g.blendEq], Fe[g.blendAlphaEq]), R.blendEq = g.blendEq, R.blendAlphaEq = g.blendAlphaEq), R.blendSrc === g.blendSrc && R.blendDst === g.blendDst && R.blendSrcAlpha === g.blendSrcAlpha && R.blendDstAlpha === g.blendDstAlpha || (n.blendFuncSeparate(Ie[g.blendSrc], Ie[g.blendDst], Ie[g.blendSrcAlpha], Ie[g.blendDstAlpha]), R.blendSrc = g.blendSrc, R.blendDst = g.blendDst, R.blendSrcAlpha = g.blendSrcAlpha, R.blendDstAlpha = g.blendDstAlpha), R.blendColorMask !== g.blendColorMask && (n.colorMask((g.blendColorMask & B.R) !== B.NONE, (g.blendColorMask & B.G) !== B.NONE, (g.blendColorMask & B.B) !== B.NONE, (g.blendColorMask & B.A) !== B.NONE), R.blendColorMask = g.blendColorMask);
          }
        }

        if (t && t.gpuPipelineLayout && l) {
          for (var A = l.glBlocks.length, E = t.gpuPipelineLayout.dynamicOffsetIndices, T = 0; T < A; T++) {
            var S = l.glBlocks[T],
                b = s[S.set],
                x = b && b.descriptorIndices[S.binding],
                F = x >= 0 && b.gpuDescriptors[x];

            if (F && F.gpuBuffer) {
              var I = E[S.set],
                  P = I && I[S.binding],
                  G = F.gpuBuffer.glOffset;
              P >= 0 && (G += a[P]), u.glBindUBOs[S.glBinding] === F.gpuBuffer.glBuffer && u.glBindUBOOffsets[S.glBinding] === G || (G ? n.bindBufferRange(n.UNIFORM_BUFFER, S.glBinding, F.gpuBuffer.glBuffer, G, F.gpuBuffer.size) : n.bindBufferBase(n.UNIFORM_BUFFER, S.glBinding, F.gpuBuffer.glBuffer), u.glUniformBuffer = u.glBindUBOs[S.glBinding] = F.gpuBuffer.glBuffer, u.glBindUBOOffsets[S.glBinding] = G);
            } else p("Buffer binding '" + S.name + "' at set " + S.set + " binding " + S.binding + " is not bounded");
          }

          for (var O = l.glSamplerTextures.length, M = 0; M < O; M++) {
            for (var v = l.glSamplerTextures[M], D = s[v.set], L = D && D.descriptorIndices[v.binding], U = L >= 0 && D.gpuDescriptors[L], N = 0; N < v.units.length; N++) {
              var y = v.units[N],
                  w = u.glTexUnits[y];

              if (U && U.gpuTexture && U.gpuSampler) {
                if (U.gpuTexture && U.gpuTexture.size > 0) {
                  var k = U.gpuTexture;
                  w.glTexture !== k.glTexture && (u.texUnit !== y && (n.activeTexture(n.TEXTURE0 + y), u.texUnit = y), k.glTexture ? n.bindTexture(k.glTarget, k.glTexture) : n.bindTexture(k.glTarget, e.nullTex2D.gpuTexture.glTexture), w.glTexture = k.glTexture);
                  var X = U.gpuSampler;
                  u.glSamplerUnits[y] !== X.glSampler && (n.bindSampler(y, X.glSampler), u.glSamplerUnits[y] = X.glSampler);
                }

                U = D.gpuDescriptors[++L];
              } else p("Sampler binding '" + v.name + "' at set " + v.set + " binding " + v.binding + " index " + N + " is not bounded");
            }
          }
        }

        if (r && l && (_ || Ne.gpuInputAssembler !== r)) if (Ne.gpuInputAssembler = r, e.useVAO) {
          var H = r.glVAOs.get(l.glProgram);

          if (!H) {
            var V;
            H = n.createVertexArray(), r.glVAOs.set(l.glProgram, H), n.bindVertexArray(H), n.bindBuffer(n.ARRAY_BUFFER, null), n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, null), u.glArrayBuffer = null, u.glElementArrayBuffer = null;

            for (var W = 0; W < l.glInputs.length; W++) {
              var z = l.glInputs[W];
              V = null;

              for (var K = 0; K < r.glAttribs.length; K++) {
                var Y = r.glAttribs[K];

                if (Y.name === z.name) {
                  V = Y;
                  break;
                }
              }

              if (V) {
                u.glArrayBuffer !== V.glBuffer && (n.bindBuffer(n.ARRAY_BUFFER, V.glBuffer), u.glArrayBuffer = V.glBuffer);

                for (var q = 0; q < V.componentCount; ++q) {
                  var Z = z.glLoc + q,
                      j = V.offset + V.size * q;
                  n.enableVertexAttribArray(Z), u.glCurrentAttribLocs[Z] = !0, n.vertexAttribPointer(Z, V.count, V.glType, V.isNormalized, V.stride, j), n.vertexAttribDivisor(Z, V.isInstanced ? 1 : 0);
                }
              }
            }

            var Q = r.gpuIndexBuffer;
            Q && n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, Q.glBuffer), n.bindVertexArray(null), n.bindBuffer(n.ARRAY_BUFFER, null), n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, null), u.glArrayBuffer = null, u.glElementArrayBuffer = null;
          }

          u.glVAO !== H && (n.bindVertexArray(H), u.glVAO = H);
        } else {
          for (var J = 0; J < e.capabilities.maxVertexAttributes; ++J) {
            u.glCurrentAttribLocs[J] = !1;
          }

          for (var $ = 0; $ < l.glInputs.length; $++) {
            for (var ee = l.glInputs[$], te = null, re = 0; re < r.glAttribs.length; re++) {
              var se = r.glAttribs[re];

              if (se.name === ee.name) {
                te = se;
                break;
              }
            }

            if (te) {
              u.glArrayBuffer !== te.glBuffer && (n.bindBuffer(n.ARRAY_BUFFER, te.glBuffer), u.glArrayBuffer = te.glBuffer);

              for (var ae = 0; ae < te.componentCount; ++ae) {
                var ie = ee.glLoc + ae,
                    ne = te.offset + te.size * ae;
                !u.glEnabledAttribLocs[ie] && ie >= 0 && (n.enableVertexAttribArray(ie), u.glEnabledAttribLocs[ie] = !0), u.glCurrentAttribLocs[ie] = !0, n.vertexAttribPointer(ie, te.count, te.glType, te.isNormalized, te.stride, ne), n.vertexAttribDivisor(ie, te.isInstanced ? 1 : 0);
              }
            }
          }

          var ue = r.gpuIndexBuffer;
          ue && u.glElementArrayBuffer !== ue.glBuffer && (n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, ue.glBuffer), u.glElementArrayBuffer = ue.glBuffer);

          for (var le = 0; le < e.capabilities.maxVertexAttributes; ++le) {
            u.glEnabledAttribLocs[le] !== u.glCurrentAttribLocs[le] && (n.disableVertexAttribArray(le), u.glEnabledAttribLocs[le] = !1);
          }
        }
        if (t && t.dynamicStates.length) for (var _e = t.dynamicStates.length, ce = 0; ce < _e; ce++) {
          switch (t.dynamicStates[ce]) {
            case m.VIEWPORT:
              var fe = i.viewport;
              u.viewport.left === fe.left && u.viewport.top === fe.top && u.viewport.width === fe.width && u.viewport.height === fe.height || (n.viewport(fe.left, fe.top, fe.width, fe.height), u.viewport.left = fe.left, u.viewport.top = fe.top, u.viewport.width = fe.width, u.viewport.height = fe.height);
              break;

            case m.SCISSOR:
              var oe = i.scissor;
              u.scissorRect.x === oe.x && u.scissorRect.y === oe.y && u.scissorRect.width === oe.width && u.scissorRect.height === oe.height || (n.scissor(oe.x, oe.y, oe.width, oe.height), u.scissorRect.x = oe.x, u.scissorRect.y = oe.y, u.scissorRect.width = oe.width, u.scissorRect.height = oe.height);
              break;

            case m.LINE_WIDTH:
              u.rs.lineWidth !== i.lineWidth && (n.lineWidth(i.lineWidth), u.rs.lineWidth = i.lineWidth);
              break;

            case m.DEPTH_BIAS:
              u.rs.depthBias === i.depthBiasConstant && u.rs.depthBiasSlop === i.depthBiasSlope || (n.polygonOffset(i.depthBiasConstant, i.depthBiasSlope), u.rs.depthBias = i.depthBiasConstant, u.rs.depthBiasSlop = i.depthBiasSlope);
              break;

            case m.BLEND_CONSTANTS:
              var he = i.blendConstant;
              u.bs.blendColor.x === he.x && u.bs.blendColor.y === he.y && u.bs.blendColor.z === he.z && u.bs.blendColor.w === he.w || (n.blendColor(he.x, he.y, he.z, he.w), u.bs.blendColor.copy(he));
              break;

            case m.STENCIL_WRITE_MASK:
              var de = i.stencilStatesFront,
                  ge = i.stencilStatesBack;
              u.dss.stencilWriteMaskFront !== de.writeMask && (n.stencilMaskSeparate(n.FRONT, de.writeMask), u.dss.stencilWriteMaskFront = de.writeMask), u.dss.stencilWriteMaskBack !== ge.writeMask && (n.stencilMaskSeparate(n.BACK, ge.writeMask), u.dss.stencilWriteMaskBack = ge.writeMask);
              break;

            case m.STENCIL_COMPARE_MASK:
              var Re = i.stencilStatesFront,
                  Ae = i.stencilStatesBack;
              u.dss.stencilRefFront === Re.reference && u.dss.stencilReadMaskFront === Re.compareMask || (n.stencilFuncSeparate(n.FRONT, be[u.dss.stencilFuncFront], Re.reference, Re.compareMask), u.dss.stencilRefFront = Re.reference, u.dss.stencilReadMaskFront = Re.compareMask), u.dss.stencilRefBack === Ae.reference && u.dss.stencilReadMaskBack === Ae.compareMask || (n.stencilFuncSeparate(n.BACK, be[u.dss.stencilFuncBack], Ae.reference, Ae.compareMask), u.dss.stencilRefBack = Ae.reference, u.dss.stencilReadMaskBack = Ae.compareMask);
          }
        }
      }

      function ke(e, t) {
        var r = e.gl,
            s = Ne.gpuInputAssembler,
            a = Ne.glPrimitive;
        if (s) if (s.gpuIndirectBuffer) for (var i = s.gpuIndirectBuffer.indirects, n = 0; n < i.length; n++) {
          var u = i[n],
              l = s.gpuIndexBuffer;
          if (u.instanceCount) {
            if (l) {
              if (u.indexCount > 0) {
                var _ = u.firstIndex * l.stride;

                r.drawElementsInstanced(a, u.indexCount, s.glIndexType, _, u.instanceCount);
              }
            } else u.vertexCount > 0 && r.drawArraysInstanced(a, u.firstVertex, u.vertexCount, u.instanceCount);
          } else if (l) {
            if (u.indexCount > 0) {
              var c = u.firstIndex * l.stride;
              r.drawElements(a, u.indexCount, s.glIndexType, c);
            }
          } else u.vertexCount > 0 && r.drawArrays(a, u.firstVertex, u.vertexCount);
        } else if (t.instanceCount) {
          if (s.gpuIndexBuffer) {
            if (t.indexCount > 0) {
              var f = t.firstIndex * s.gpuIndexBuffer.stride;
              r.drawElementsInstanced(a, t.indexCount, s.glIndexType, f, t.instanceCount);
            }
          } else t.vertexCount > 0 && r.drawArraysInstanced(a, t.firstVertex, t.vertexCount, t.instanceCount);
        } else if (s.gpuIndexBuffer) {
          if (t.indexCount > 0) {
            var o = t.firstIndex * s.gpuIndexBuffer.stride;
            r.drawElements(a, t.indexCount, s.glIndexType, o);
          }
        } else t.vertexCount > 0 && r.drawArrays(a, t.firstVertex, t.vertexCount);
      }

      var Xe = new Array(me.COUNT);

      function He(e, t) {
        Xe.fill(0);

        for (var r = 0; r < t.cmds.length; ++r) {
          var s = t.cmds.array[r],
              a = Xe[s]++;

          switch (s) {
            case me.BEGIN_RENDER_PASS:
              var i = t.beginRenderPassCmds.array[a];
              ye(e, i.gpuRenderPass, i.gpuFramebuffer, i.renderArea, i.clearColors, i.clearDepth, i.clearStencil);
              break;

            case me.BIND_STATES:
              var n = t.bindStatesCmds.array[a];
              we(e, n.gpuPipelineState, n.gpuInputAssembler, n.gpuDescriptorSets, n.dynamicOffsets, n.dynamicStates);
              break;

            case me.DRAW:
              ke(e, t.drawCmds.array[a].drawInfo);
              break;

            case me.UPDATE_BUFFER:
              var u = t.updateBufferCmds.array[a];
              Ue(e, u.gpuBuffer, u.buffer, u.offset, u.size);
              break;

            case me.COPY_BUFFER_TO_TEXTURE:
              var l = t.copyBufferToTextureCmds.array[a];
              Ve(e, l.buffers, l.gpuTexture, l.regions);
          }
        }
      }

      function Ve(e, t, r, s) {
        var a = e.gl,
            i = e.stateCache.glTexUnits[e.stateCache.texUnit];
        i.glTexture !== r.glTexture && (a.bindTexture(r.glTarget, r.glTexture), i.glTexture = r.glTexture);
        var n = 0,
            u = 1,
            l = 1,
            _ = 0,
            c = R[r.format].isCompressed;

        switch (r.glTarget) {
          case a.TEXTURE_2D:
            for (var f = 0; f < s.length; f++) {
              var o = s[f];
              u = o.texExtent.width, l = o.texExtent.height;
              var h = t[n++];
              c ? r.glInternalFmt !== de.COMPRESSED_RGB_ETC1_WEBGL ? a.compressedTexSubImage2D(a.TEXTURE_2D, o.texSubres.mipLevel, o.texOffset.x, o.texOffset.y, u, l, r.glFormat, h) : a.compressedTexImage2D(a.TEXTURE_2D, o.texSubres.mipLevel, r.glInternalFmt, u, l, 0, h) : a.texSubImage2D(a.TEXTURE_2D, o.texSubres.mipLevel, o.texOffset.x, o.texOffset.y, u, l, r.glFormat, r.glType, h);
            }

            break;

          case a.TEXTURE_CUBE_MAP:
            for (var d = 0; d < s.length; d++) {
              var A = s[d],
                  E = A.texSubres.baseArrayLayer + A.texSubres.layerCount;

              for (_ = A.texSubres.baseArrayLayer; _ < E; ++_) {
                u = A.texExtent.width, l = A.texExtent.height;
                var T = t[n++];
                c ? r.glInternalFmt !== de.COMPRESSED_RGB_ETC1_WEBGL ? a.compressedTexSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + _, A.texSubres.mipLevel, A.texOffset.x, A.texOffset.y, u, l, r.glFormat, T) : a.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + _, A.texSubres.mipLevel, r.glInternalFmt, u, l, 0, T) : a.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + _, A.texSubres.mipLevel, A.texOffset.x, A.texOffset.y, u, l, r.glFormat, r.glType, T);
              }
            }

            break;

          default:
            console.error("Unsupported GL texture type, copy buffer to texture failed.");
        }

        r.flags & g.GEN_MIPMAP && a.generateMipmap(r.glTarget);
      }

      var We = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuBuffer = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          if ("buffer" in e) {
            this._isBufferView = !0;
            var t = e.buffer;
            this._usage = t.usage, this._memUsage = t.memUsage, this._size = this._stride = e.range, this._count = 1, this._flags = t.flags, this._gpuBuffer = {
              usage: this._usage,
              memUsage: this._memUsage,
              size: this._size,
              stride: this._stride,
              buffer: null,
              indirects: t.gpuBuffer.indirects,
              glTarget: t.gpuBuffer.glTarget,
              glBuffer: t.gpuBuffer.glBuffer,
              glOffset: e.offset
            };
          } else this._usage = e.usage, this._memUsage = e.memUsage, this._size = e.size, this._stride = Math.max(e.stride || this._size, 1), this._count = this._size / this._stride, this._flags = e.flags, this._usage & f.INDIRECT && (this._indirectBuffer = new I()), this._gpuBuffer = {
            usage: this._usage,
            memUsage: this._memUsage,
            size: this._size,
            stride: this._stride,
            buffer: null,
            indirects: [],
            glTarget: 0,
            glBuffer: null,
            glOffset: 0
          }, e.usage & f.INDIRECT && (this._gpuBuffer.indirects = this._indirectBuffer.drawInfos), function (e, t) {
            var r = e.gl,
                s = e.stateCache,
                a = t.memUsage & c.HOST ? r.DYNAMIC_DRAW : r.STATIC_DRAW;

            if (t.usage & f.VERTEX) {
              t.glTarget = r.ARRAY_BUFFER;
              var i = r.createBuffer();
              i && (t.glBuffer = i, t.size > 0 && (e.useVAO && s.glVAO && (r.bindVertexArray(null), s.glVAO = Ne.gpuInputAssembler = null), e.stateCache.glArrayBuffer !== t.glBuffer && (r.bindBuffer(r.ARRAY_BUFFER, t.glBuffer), e.stateCache.glArrayBuffer = t.glBuffer), r.bufferData(r.ARRAY_BUFFER, t.size, a), r.bindBuffer(r.ARRAY_BUFFER, null), e.stateCache.glArrayBuffer = null));
            } else if (t.usage & f.INDEX) {
              t.glTarget = r.ELEMENT_ARRAY_BUFFER;
              var n = r.createBuffer();
              n && (t.glBuffer = n, t.size > 0 && (e.useVAO && s.glVAO && (r.bindVertexArray(null), s.glVAO = Ne.gpuInputAssembler = null), e.stateCache.glElementArrayBuffer !== t.glBuffer && (r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, t.glBuffer), e.stateCache.glElementArrayBuffer = t.glBuffer), r.bufferData(r.ELEMENT_ARRAY_BUFFER, t.size, a), r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, null), e.stateCache.glElementArrayBuffer = null));
            } else if (t.usage & f.UNIFORM) {
              t.glTarget = r.UNIFORM_BUFFER;
              var u = r.createBuffer();
              u && t.size > 0 && (t.glBuffer = u, e.stateCache.glUniformBuffer !== t.glBuffer && (r.bindBuffer(r.UNIFORM_BUFFER, t.glBuffer), e.stateCache.glUniformBuffer = t.glBuffer), r.bufferData(r.UNIFORM_BUFFER, t.size, a), r.bindBuffer(r.UNIFORM_BUFFER, null), e.stateCache.glUniformBuffer = null);
            } else t.usage & f.INDIRECT || t.usage & f.TRANSFER_DST || t.usage & f.TRANSFER_SRC || console.error("Unsupported BufferType, create buffer failed."), t.glTarget = r.NONE;
          }(this._device, this._gpuBuffer), this._device.memoryStatus.bufferSize += this._size;

          return !0;
        }, s.destroy = function () {
          this._gpuBuffer && (this._isBufferView || (function (e, t) {
            var r = e.gl;

            if (t.glBuffer) {
              switch (t.glTarget) {
                case r.ARRAY_BUFFER:
                  e.useVAO && e.stateCache.glVAO && (r.bindVertexArray(null), e.stateCache.glVAO = Ne.gpuInputAssembler = null), r.bindBuffer(r.ARRAY_BUFFER, null), e.stateCache.glArrayBuffer = null;
                  break;

                case r.ELEMENT_ARRAY_BUFFER:
                  e.useVAO && e.stateCache.glVAO && (r.bindVertexArray(null), e.stateCache.glVAO = Ne.gpuInputAssembler = null), r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, null), e.stateCache.glElementArrayBuffer = null;
                  break;

                case r.UNIFORM_BUFFER:
                  r.bindBuffer(r.UNIFORM_BUFFER, null), e.stateCache.glUniformBuffer = null;
              }

              r.deleteBuffer(t.glBuffer), t.glBuffer = null;
            }
          }(this._device, this._gpuBuffer), this._device.memoryStatus.bufferSize -= this._size), this._gpuBuffer = null);
        }, s.resize = function (e) {
          if (this._isBufferView) console.warn("cannot resize buffer views!");else {
            var t,
                r,
                s,
                a,
                i,
                n = this._size;
            n !== e && (this._size = e, this._count = this._size / this._stride, this._gpuBuffer && (this._gpuBuffer.size = e, e > 0 && (t = this._device, r = this._gpuBuffer, s = t.gl, a = t.stateCache, i = r.memUsage & c.HOST ? s.DYNAMIC_DRAW : s.STATIC_DRAW, r.usage & f.VERTEX ? (t.useVAO && a.glVAO && (s.bindVertexArray(null), a.glVAO = Ne.gpuInputAssembler = null), a.glArrayBuffer !== r.glBuffer && s.bindBuffer(s.ARRAY_BUFFER, r.glBuffer), r.buffer ? s.bufferData(s.ARRAY_BUFFER, r.buffer, i) : s.bufferData(s.ARRAY_BUFFER, r.size, i), s.bindBuffer(s.ARRAY_BUFFER, null), a.glArrayBuffer = null) : r.usage & f.INDEX ? (t.useVAO && a.glVAO && (s.bindVertexArray(null), a.glVAO = Ne.gpuInputAssembler = null), t.stateCache.glElementArrayBuffer !== r.glBuffer && s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, r.glBuffer), r.buffer ? s.bufferData(s.ELEMENT_ARRAY_BUFFER, r.buffer, i) : s.bufferData(s.ELEMENT_ARRAY_BUFFER, r.size, i), s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, null), t.stateCache.glElementArrayBuffer = null) : r.usage & f.UNIFORM ? (t.stateCache.glUniformBuffer !== r.glBuffer && s.bindBuffer(s.UNIFORM_BUFFER, r.glBuffer), s.bufferData(s.UNIFORM_BUFFER, r.size, i), s.bindBuffer(s.UNIFORM_BUFFER, null), t.stateCache.glUniformBuffer = null) : (r.usage & f.INDIRECT || r.usage & f.TRANSFER_DST || r.usage & f.TRANSFER_SRC || console.error("Unsupported BufferType, create buffer failed."), r.glTarget = s.NONE), this._device.memoryStatus.bufferSize -= n, this._device.memoryStatus.bufferSize += e)));
          }
        }, s.update = function (e, t) {
          var r;
          this._isBufferView ? console.warn("cannot update through buffer views!") : (r = void 0 !== t ? t : this._usage & f.INDIRECT ? 0 : e.byteLength, Ue(this._device, this._gpuBuffer, e, 0, r));
        }, a(r, [{
          key: "gpuBuffer",
          get: function get() {
            return this._gpuBuffer;
          }
        }]), r;
      }(P),
          ze = function () {
        function e(e, t) {
          this._frees = void 0, this._freeIdx = 0, this._freeCmds = void 0, this._frees = new Array(t), this._freeCmds = new F(t);

          for (var r = 0; r < t; ++r) {
            this._frees[r] = new e();
          }

          this._freeIdx = t - 1;
        }

        var t = e.prototype;
        return t.alloc = function (e) {
          if (this._freeIdx < 0) {
            var t = 2 * this._frees.length,
                r = this._frees;
            this._frees = new Array(t);

            for (var s = t - r.length, a = 0; a < s; ++a) {
              this._frees[a] = new e();
            }

            for (var i = s, n = 0; i < t; ++i, ++n) {
              this._frees[i] = r[n];
            }

            this._freeIdx += s;
          }

          var u = this._frees[this._freeIdx];
          return this._frees[this._freeIdx--] = null, ++u.refCount, u;
        }, t.free = function (e) {
          0 == --e.refCount && this._freeCmds.push(e);
        }, t.freeCmds = function (e) {
          for (var t = 0; t < e.length; ++t) {
            0 == --e.array[t].refCount && this._freeCmds.push(e.array[t]);
          }
        }, t.release = function () {
          for (var e = 0; e < this._freeCmds.length; ++e) {
            var t = this._freeCmds.array[e];
            t.clear(), this._frees[++this._freeIdx] = t;
          }

          this._freeCmds.clear();
        }, e;
      }(),
          Ke = function () {
        function e() {
          this.beginRenderPassCmdPool = void 0, this.bindStatesCmdPool = void 0, this.drawCmdPool = void 0, this.updateBufferCmdPool = void 0, this.copyBufferToTextureCmdPool = void 0, this.beginRenderPassCmdPool = new ze(Ge, 1), this.bindStatesCmdPool = new ze(Oe, 1), this.drawCmdPool = new ze(Me, 1), this.updateBufferCmdPool = new ze(ve, 1), this.copyBufferToTextureCmdPool = new ze(De, 1);
        }

        var t = e.prototype;
        return t.clearCmds = function (e) {
          e.beginRenderPassCmds.length && (this.beginRenderPassCmdPool.freeCmds(e.beginRenderPassCmds), e.beginRenderPassCmds.clear()), e.bindStatesCmds.length && (this.bindStatesCmdPool.freeCmds(e.bindStatesCmds), e.bindStatesCmds.clear()), e.drawCmds.length && (this.drawCmdPool.freeCmds(e.drawCmds), e.drawCmds.clear()), e.updateBufferCmds.length && (this.updateBufferCmdPool.freeCmds(e.updateBufferCmds), e.updateBufferCmds.clear()), e.copyBufferToTextureCmds.length && (this.copyBufferToTextureCmdPool.freeCmds(e.copyBufferToTextureCmds), e.copyBufferToTextureCmds.clear()), e.cmds.clear();
        }, t.releaseCmds = function () {
          this.beginRenderPassCmdPool.release(), this.bindStatesCmdPool.release(), this.drawCmdPool.release(), this.updateBufferCmdPool.release(), this.copyBufferToTextureCmdPool.release();
        }, e;
      }(),
          Ye = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this).cmdPackage = new Le(), t._webGLAllocator = null, t._isInRenderPass = !1, t._curGPUPipelineState = null, t._curGPUDescriptorSets = [], t._curGPUInputAssembler = null, t._curDynamicOffsets = Array(8).fill(0), t._curDynamicStates = new l(), t._isStateInvalied = !1, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._type = e.type, this._queue = e.queue, this._webGLAllocator = this._device.cmdAllocator;

          for (var t = this._device.bindingMappingInfo.bufferOffsets.length, r = 0; r < t; r++) {
            this._curGPUDescriptorSets.push(null);
          }

          return !0;
        }, s.destroy = function () {
          this._webGLAllocator && (this._webGLAllocator.clearCmds(this.cmdPackage), this._webGLAllocator = null);
        }, s.begin = function () {
          this._webGLAllocator.clearCmds(this.cmdPackage), this._curGPUPipelineState = null, this._curGPUInputAssembler = null, this._curGPUDescriptorSets.length = 0, this._numDrawCalls = 0, this._numInstances = 0, this._numTris = 0;
        }, s.end = function () {
          this._isStateInvalied && this.bindStates(), this._isInRenderPass = !1;
        }, s.beginRenderPass = function (e, t, r, s, a, i) {
          var n = this._webGLAllocator.beginRenderPassCmdPool.alloc(Ge);

          n.gpuRenderPass = e.gpuRenderPass, n.gpuFramebuffer = t.gpuFramebuffer, n.renderArea = r;

          for (var u = 0; u < s.length; ++u) {
            n.clearColors[u] = s[u];
          }

          n.clearDepth = a, n.clearStencil = i, this.cmdPackage.beginRenderPassCmds.push(n), this.cmdPackage.cmds.push(me.BEGIN_RENDER_PASS), this._isInRenderPass = !0;
        }, s.endRenderPass = function () {
          this._isInRenderPass = !1;
        }, s.bindPipelineState = function (e) {
          var t = e.gpuPipelineState;
          t !== this._curGPUPipelineState && (this._curGPUPipelineState = t, this._isStateInvalied = !0);
        }, s.bindDescriptorSet = function (e, t, r) {
          var s = t.gpuDescriptorSet;

          if (s !== this._curGPUDescriptorSets[e] && (this._curGPUDescriptorSets[e] = s, this._isStateInvalied = !0), r) {
            var a,
                i = null === (a = this._curGPUPipelineState) || void 0 === a ? void 0 : a.gpuPipelineLayout;

            if (i) {
              for (var n = this._curDynamicOffsets, u = i.dynamicOffsetOffsets[e], l = 0; l < r.length; l++) {
                n[u + l] = r[l];
              }

              this._isStateInvalied = !0;
            }
          }
        }, s.bindInputAssembler = function (e) {
          var t = e.gpuInputAssembler;
          this._curGPUInputAssembler = t, this._isStateInvalied = !0;
        }, s.setViewport = function (e) {
          var t = this._curDynamicStates.viewport;
          t.left === e.left && t.top === e.top && t.width === e.width && t.height === e.height && t.minDepth === e.minDepth && t.maxDepth === e.maxDepth || (t.left = e.left, t.top = e.top, t.width = e.width, t.height = e.height, t.minDepth = e.minDepth, t.maxDepth = e.maxDepth, this._isStateInvalied = !0);
        }, s.setScissor = function (e) {
          var t = this._curDynamicStates.scissor;
          t.x === e.x && t.y === e.y && t.width === e.width && t.height === e.height || (t.x = e.x, t.y = e.y, t.width = e.width, t.height = e.height, this._isStateInvalied = !0);
        }, s.setLineWidth = function (e) {
          this._curDynamicStates.lineWidth !== e && (this._curDynamicStates.lineWidth = e, this._isStateInvalied = !0);
        }, s.setDepthBias = function (e, t, r) {
          var s = this._curDynamicStates;
          s.depthBiasConstant === e && s.depthBiasClamp === t && s.depthBiasSlope === r || (s.depthBiasConstant = e, s.depthBiasClamp = t, s.depthBiasSlope = r, this._isStateInvalied = !0);
        }, s.setBlendConstants = function (e) {
          var t = this._curDynamicStates.blendConstant;
          t.x === e.x && t.y === e.y && t.z === e.z && t.w === e.w || (t.copy(e), this._isStateInvalied = !0);
        }, s.setDepthBound = function (e, t) {
          var r = this._curDynamicStates;
          r.depthMinBounds === e && r.depthMaxBounds === t || (r.depthMinBounds = e, r.depthMaxBounds = t, this._isStateInvalied = !0);
        }, s.setStencilWriteMask = function (e, t) {
          var r = this._curDynamicStates.stencilStatesFront,
              s = this._curDynamicStates.stencilStatesBack;
          e & G.FRONT && r.writeMask !== t && (r.writeMask = t, this._isStateInvalied = !0), e & G.BACK && s.writeMask !== t && (s.writeMask = t, this._isStateInvalied = !0);
        }, s.setStencilCompareMask = function (e, t, r) {
          var s = this._curDynamicStates.stencilStatesFront,
              a = this._curDynamicStates.stencilStatesBack;
          e & G.FRONT && (s.compareMask === r && s.reference === t || (s.reference = t, s.compareMask = r, this._isStateInvalied = !0)), e & G.BACK && (a.compareMask === r && a.reference === t || (a.reference = t, a.compareMask = r, this._isStateInvalied = !0));
        }, s.draw = function (e) {
          if (this._type === O.PRIMARY && this._isInRenderPass || this._type === O.SECONDARY) {
            this._isStateInvalied && this.bindStates();

            var t = this._webGLAllocator.drawCmdPool.alloc(Me);

            t.drawInfo.vertexCount = e.vertexCount, t.drawInfo.firstVertex = e.firstVertex, t.drawInfo.indexCount = e.indexCount, t.drawInfo.firstIndex = e.firstIndex, t.drawInfo.vertexOffset = e.vertexOffset, t.drawInfo.instanceCount = e.instanceCount, t.drawInfo.firstInstance = e.firstInstance, this.cmdPackage.drawCmds.push(t), this.cmdPackage.cmds.push(me.DRAW), ++this._numDrawCalls, this._numInstances += e.instanceCount;
            var r = e.indexCount || e.vertexCount;
            if (this._curGPUPipelineState) switch (this._curGPUPipelineState.glPrimitive) {
              case 4:
                this._numTris += r / 3 * Math.max(e.instanceCount, 1);
                break;

              case 5:
              case 6:
                this._numTris += (r - 2) * Math.max(e.instanceCount, 1);
            }
          } else console.error("Command 'draw' must be recorded inside a render pass.");
        }, s.updateBuffer = function (e, t, r) {
          if (this._type === O.PRIMARY && !this._isInRenderPass || this._type === O.SECONDARY) {
            var s = e.gpuBuffer;

            if (s) {
              var a,
                  i = this._webGLAllocator.updateBufferCmdPool.alloc(ve),
                  n = 0;

              e.usage & f.INDIRECT || (n = void 0 !== r ? r : t.byteLength), a = t, i.gpuBuffer = s, i.buffer = a, i.offset = 0, i.size = n, this.cmdPackage.updateBufferCmds.push(i), this.cmdPackage.cmds.push(me.UPDATE_BUFFER);
            }
          } else console.error("Command 'updateBuffer' must be recorded outside a render pass.");
        }, s.copyBuffersToTexture = function (e, t, r) {
          if (this._type === O.PRIMARY && !this._isInRenderPass || this._type === O.SECONDARY) {
            var s = t.gpuTexture;

            if (s) {
              var a = this._webGLAllocator.copyBufferToTextureCmdPool.alloc(De);

              a.gpuTexture = s, a.regions = r, a.buffers = e, this.cmdPackage.copyBufferToTextureCmds.push(a), this.cmdPackage.cmds.push(me.COPY_BUFFER_TO_TEXTURE);
            }
          } else console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");
        }, s.execute = function (e, t) {
          for (var r = 0; r < t; ++r) {
            for (var s = e[r], a = 0; a < s.cmdPackage.beginRenderPassCmds.length; ++a) {
              var i = s.cmdPackage.beginRenderPassCmds.array[a];
              ++i.refCount, this.cmdPackage.beginRenderPassCmds.push(i);
            }

            for (var n = 0; n < s.cmdPackage.bindStatesCmds.length; ++n) {
              var u = s.cmdPackage.bindStatesCmds.array[n];
              ++u.refCount, this.cmdPackage.bindStatesCmds.push(u);
            }

            for (var l = 0; l < s.cmdPackage.drawCmds.length; ++l) {
              var _ = s.cmdPackage.drawCmds.array[l];
              ++_.refCount, this.cmdPackage.drawCmds.push(_);
            }

            for (var c = 0; c < s.cmdPackage.updateBufferCmds.length; ++c) {
              var f = s.cmdPackage.updateBufferCmds.array[c];
              ++f.refCount, this.cmdPackage.updateBufferCmds.push(f);
            }

            for (var o = 0; o < s.cmdPackage.copyBufferToTextureCmds.length; ++o) {
              var h = s.cmdPackage.copyBufferToTextureCmds.array[o];
              ++h.refCount, this.cmdPackage.copyBufferToTextureCmds.push(h);
            }

            this.cmdPackage.cmds.concat(s.cmdPackage.cmds.array), this._numDrawCalls += s._numDrawCalls, this._numInstances += s._numInstances, this._numTris += s._numTris;
          }
        }, s.pipelineBarrier = function () {}, s.bindStates = function () {
          var e = this._webGLAllocator.bindStatesCmdPool.alloc(Oe);

          e.gpuPipelineState = this._curGPUPipelineState, Array.prototype.push.apply(e.gpuDescriptorSets, this._curGPUDescriptorSets), Array.prototype.push.apply(e.dynamicOffsets, this._curDynamicOffsets), e.gpuInputAssembler = this._curGPUInputAssembler, e.dynamicStates = this._curDynamicStates, this.cmdPackage.bindStatesCmds.push(e), this.cmdPackage.cmds.push(me.BIND_STATES), this._isStateInvalied = !1;
        }, a(r, [{
          key: "webGLDevice",
          get: function get() {
            return this._device;
          }
        }]), r;
      }(M),
          qe = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuFramebuffer = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._renderPass = e.renderPass, this._colorTextures = e.colorTextures || [], this._depthStencilTexture = e.depthStencilTexture || null;

          for (var t = [], r = 0; r < e.colorTextures.length; r++) {
            var s = e.colorTextures[r];
            s && t.push(s.gpuTexture);
          }

          var a = null;
          return e.depthStencilTexture && (a = e.depthStencilTexture.gpuTexture), this._gpuFramebuffer = {
            gpuRenderPass: e.renderPass.gpuRenderPass,
            gpuColorTextures: t,
            gpuDepthStencilTexture: a,
            glFramebuffer: null
          }, function (e, t) {
            if (t.gpuColorTextures.length || t.gpuDepthStencilTexture) {
              var r = e.gl,
                  s = [],
                  a = r.createFramebuffer();

              if (a) {
                t.glFramebuffer = a, e.stateCache.glFramebuffer !== t.glFramebuffer && r.bindFramebuffer(r.FRAMEBUFFER, t.glFramebuffer);

                for (var i = 0; i < t.gpuColorTextures.length; ++i) {
                  var n = t.gpuColorTextures[i];
                  n && (n.glTexture ? r.framebufferTexture2D(r.FRAMEBUFFER, r.COLOR_ATTACHMENT0 + i, n.glTarget, n.glTexture, 0) : r.framebufferRenderbuffer(r.FRAMEBUFFER, r.COLOR_ATTACHMENT0 + i, r.RENDERBUFFER, n.glRenderbuffer), s.push(r.COLOR_ATTACHMENT0 + i));
                }

                var u = t.gpuDepthStencilTexture;

                if (u) {
                  var l = R[u.format].hasStencil ? r.DEPTH_STENCIL_ATTACHMENT : r.DEPTH_ATTACHMENT;
                  u.glTexture ? r.framebufferTexture2D(r.FRAMEBUFFER, l, u.glTarget, u.glTexture, 0) : r.framebufferRenderbuffer(r.FRAMEBUFFER, l, r.RENDERBUFFER, u.glRenderbuffer);
                }

                r.drawBuffers(s);

                var _ = r.checkFramebufferStatus(r.FRAMEBUFFER);

                if (_ !== r.FRAMEBUFFER_COMPLETE) switch (_) {
                  case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
                    break;

                  case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
                    break;

                  case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
                    break;

                  case r.FRAMEBUFFER_UNSUPPORTED:
                    console.error("glCheckFramebufferStatus() - FRAMEBUFFER_UNSUPPORTED");
                }
                e.stateCache.glFramebuffer !== t.glFramebuffer && r.bindFramebuffer(r.FRAMEBUFFER, e.stateCache.glFramebuffer);
              }
            }
          }(this._device, this._gpuFramebuffer), !0;
        }, s.destroy = function () {
          var e, t;
          this._gpuFramebuffer && (e = this._device, (t = this._gpuFramebuffer).glFramebuffer && (e.gl.deleteFramebuffer(t.glFramebuffer), t.glFramebuffer = null), this._gpuFramebuffer = null);
        }, a(r, [{
          key: "gpuFramebuffer",
          get: function get() {
            return this._gpuFramebuffer;
          }
        }]), r;
      }(v),
          Ze = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuInputAssembler = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          if (0 === e.vertexBuffers.length) return console.error("InputAssemblerInfo.vertexBuffers is null."), !1;
          if (this._attributes = e.attributes, this._attributesHash = this.computeAttributesHash(), this._vertexBuffers = e.vertexBuffers, e.indexBuffer) this._indexBuffer = e.indexBuffer, this._indexCount = this._indexBuffer.size / this._indexBuffer.stride, this._firstIndex = 0;else {
            var t = this._vertexBuffers[0];
            this._vertexCount = t.size / t.stride, this._firstVertex = 0, this._vertexOffset = 0;
          }
          this._instanceCount = 0, this._firstInstance = 0, this._indirectBuffer = e.indirectBuffer || null;

          for (var r = new Array(e.vertexBuffers.length), s = 0; s < e.vertexBuffers.length; ++s) {
            var a = e.vertexBuffers[s];
            a.gpuBuffer && (r[s] = a.gpuBuffer);
          }

          var i = null,
              n = 0;
          if (e.indexBuffer && (i = e.indexBuffer.gpuBuffer)) switch (i.stride) {
            case 1:
              n = 5121;
              break;

            case 2:
              n = 5123;
              break;

            case 4:
              n = 5125;
              break;

            default:
              console.error("Illegal index buffer stride.");
          }
          var u = null;
          return e.indirectBuffer && (u = e.indirectBuffer.gpuBuffer), this._gpuInputAssembler = {
            attributes: e.attributes,
            gpuVertexBuffers: r,
            gpuIndexBuffer: i,
            gpuIndirectBuffer: u,
            glAttribs: [],
            glIndexType: n,
            glVAOs: new Map()
          }, function (e, t) {
            var r = e.gl;
            t.glAttribs = new Array(t.attributes.length);

            for (var s = [0, 0, 0, 0, 0, 0, 0, 0], a = 0; a < t.attributes.length; ++a) {
              var i = t.attributes[a],
                  n = void 0 !== i.stream ? i.stream : 0,
                  u = t.gpuVertexBuffers[n],
                  l = Ee(i.format, r),
                  _ = R[i.format].size;
              t.glAttribs[a] = {
                name: i.name,
                glBuffer: u.glBuffer,
                glType: l,
                size: _,
                count: R[i.format].count,
                stride: u.stride,
                componentCount: Ce(l, r),
                isNormalized: void 0 !== i.isNormalized && i.isNormalized,
                isInstanced: void 0 !== i.isInstanced && i.isInstanced,
                offset: s[n]
              }, s[n] += _;
            }
          }(this._device, this._gpuInputAssembler), !0;
        }, s.destroy = function () {
          var e = this._device;
          this._gpuInputAssembler && e.useVAO && function (e, t) {
            for (var r = t.glVAOs.values(), s = r.next(); !s.done;) {
              e.gl.deleteVertexArray(s.value), s = r.next();
            }

            t.glVAOs.clear();
          }(e, this._gpuInputAssembler), this._gpuInputAssembler = null;
        }, a(r, [{
          key: "gpuInputAssembler",
          get: function get() {
            return this._gpuInputAssembler;
          }
        }]), r;
      }(D),
          je = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuDescriptorSetLayout = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          Array.prototype.push.apply(this._bindings, e.bindings);

          for (var t = 0, r = -1, s = [], a = 0; a < this._bindings.length; a++) {
            var i = this._bindings[a];
            s.push(t), t += i.count, i.binding > r && (r = i.binding);
          }

          this._bindingIndices = Array(r + 1).fill(-1);

          for (var n = this._descriptorIndices = Array(r + 1).fill(-1), u = 0; u < this._bindings.length; u++) {
            var l = this._bindings[u];
            this._bindingIndices[l.binding] = u, n[l.binding] = s[u];
          }

          for (var _ = [], c = 0; c < this._bindings.length; c++) {
            var f = this._bindings[c];
            if (f.descriptorType & L) for (var o = 0; o < f.count; o++) {
              _.push(f.binding);
            }
          }

          return this._gpuDescriptorSetLayout = {
            bindings: this._bindings,
            dynamicBindings: _,
            descriptorIndices: n,
            descriptorCount: t
          }, !0;
        }, s.destroy = function () {
          this._bindings.length = 0;
        }, a(r, [{
          key: "gpuDescriptorSetLayout",
          get: function get() {
            return this._gpuDescriptorSetLayout;
          }
        }]), r;
      }(U),
          Qe = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuPipelineLayout = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          Array.prototype.push.apply(this._setLayouts, e.setLayouts);

          for (var t = [], r = [], s = 0, a = [], i = 0; i < this._setLayouts.length; i++) {
            for (var n = this._setLayouts[i], u = n.gpuDescriptorSetLayout.dynamicBindings, l = Array(n.bindingIndices.length).fill(-1), _ = 0; _ < u.length; _++) {
              var c = u[_];
              l[c] < 0 && (l[c] = s + _);
            }

            r.push(n.gpuDescriptorSetLayout), t.push(l), a.push(s), s += u.length;
          }

          return this._gpuPipelineLayout = {
            gpuSetLayouts: r,
            dynamicOffsetIndices: t,
            dynamicOffsetCount: s,
            dynamicOffsetOffsets: a
          }, !0;
        }, s.destroy = function () {
          this._setLayouts.length = 0;
        }, a(r, [{
          key: "gpuPipelineLayout",
          get: function get() {
            return this._gpuPipelineLayout;
          }
        }]), r;
      }(N),
          Je = [0, 1, 3, 2, 0, 0, 0, 4, 5, 6, 0, 0, 0, 0],
          $e = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuPipelineState = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._primitive = e.primitive, this._shader = e.shader, this._pipelineLayout = e.pipelineLayout;
          var t = this._bs;

          if (e.blendState) {
            var r = e.blendState,
                s = r.targets;
            s && s.forEach(function (e, r) {
              t.setTarget(r, e);
            }), void 0 !== r.isA2C && (t.isA2C = r.isA2C), void 0 !== r.isIndepend && (t.isIndepend = r.isIndepend), void 0 !== r.blendColor && (t.blendColor = r.blendColor);
          }

          Object.assign(this._rs, e.rasterizerState), Object.assign(this._dss, e.depthStencilState), this._is = e.inputState, this._renderPass = e.renderPass, this._dynamicStates = e.dynamicStates;

          for (var a = [], i = 0; i < 31; i++) {
            this._dynamicStates & 1 << i && a.push(1 << i);
          }

          return this._gpuPipelineState = {
            glPrimitive: Je[e.primitive],
            gpuShader: e.shader.gpuShader,
            gpuPipelineLayout: e.pipelineLayout.gpuPipelineLayout,
            rs: e.rasterizerState,
            dss: e.depthStencilState,
            bs: e.blendState,
            gpuRenderPass: e.renderPass.gpuRenderPass,
            dynamicStates: a
          }, !0;
        }, s.destroy = function () {
          this._gpuPipelineState = null;
        }, a(r, [{
          key: "gpuPipelineState",
          get: function get() {
            return this._gpuPipelineState;
          }
        }]), r;
      }(y),
          et = function (e) {
        function r() {
          return e.apply(this, arguments) || this;
        }

        t(r, e);
        var s = r.prototype;
        return s.beginRenderPass = function (e, t, r, s, a, i) {
          ye(this._device, e.gpuRenderPass, t.gpuFramebuffer, r, s, a, i), this._isInRenderPass = !0;
        }, s.draw = function (e) {
          if (this._isInRenderPass) {
            this._isStateInvalied && this.bindStates(), ke(this._device, e), ++this._numDrawCalls, this._numInstances += e.instanceCount;
            var t = e.indexCount || e.vertexCount;
            if (this._curGPUPipelineState) switch (this._curGPUPipelineState.glPrimitive) {
              case 4:
                this._numTris += t / 3 * Math.max(e.instanceCount, 1);
                break;

              case 5:
              case 6:
                this._numTris += (t - 2) * Math.max(e.instanceCount, 1);
            }
          } else console.error("Command 'draw' must be recorded inside a render pass.");
        }, s.updateBuffer = function (e, t, r) {
          if (this._isInRenderPass) console.error("Command 'updateBuffer' must be recorded outside a render pass.");else {
            var s,
                a = e.gpuBuffer;
            a && (s = void 0 !== r ? r : e.usage & f.INDIRECT ? 0 : t.byteLength, Ue(this._device, a, t, 0, s));
          }
        }, s.copyBuffersToTexture = function (e, t, r) {
          if (this._isInRenderPass) console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");else {
            var s = t.gpuTexture;
            s && Ve(this._device, e, s, r);
          }
        }, s.execute = function (e, t) {
          for (var r = 0; r < t; ++r) {
            var s = e[r];
            He(this._device, s.cmdPackage), this._numDrawCalls += s._numDrawCalls, this._numInstances += s._numInstances, this._numTris += s._numTris;
          }
        }, s.bindStates = function () {
          we(this._device, this._curGPUPipelineState, this._curGPUInputAssembler, this._curGPUDescriptorSets, this._curDynamicOffsets, this._curDynamicStates), this._isStateInvalied = !1;
        }, r;
      }(Ye),
          tt = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this).numDrawCalls = 0, t.numInstances = 0, t.numTris = 0, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          return this._type = e.type, !0;
        }, s.destroy = function () {}, s.submit = function (e) {
          if (!this._isAsync) for (var t = 0; t < e.length; t++) {
            var r = e[t];
            this.numDrawCalls += r.numDrawCalls, this.numInstances += r.numInstances, this.numTris += r.numTris;
          }
        }, s.clear = function () {
          this.numDrawCalls = 0, this.numInstances = 0, this.numTris = 0;
        }, r;
      }(w),
          rt = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuRenderPass = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          return this._colorInfos = e.colorAttachments, this._depthStencilInfo = e.depthStencilAttachment, e.subpasses && (this._subpasses = e.subpasses), this._gpuRenderPass = {
            colorAttachments: this._colorInfos,
            depthStencilAttachment: this._depthStencilInfo
          }, this._hash = this.computeHash(), !0;
        }, s.destroy = function () {
          this._gpuRenderPass = null;
        }, a(r, [{
          key: "gpuRenderPass",
          get: function get() {
            return this._gpuRenderPass;
          }
        }]), r;
      }(k),
          st = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuSampler = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          var t, r, s, a;
          return this._minFilter = e.minFilter, this._magFilter = e.magFilter, this._mipFilter = e.mipFilter, this._addressU = e.addressU, this._addressV = e.addressV, this._addressW = e.addressW, this._maxAnisotropy = e.maxAnisotropy, this._cmpFunc = e.cmpFunc, this._borderColor = e.borderColor, this._mipLODBias = e.mipLODBias, this._gpuSampler = {
            glSampler: null,
            minFilter: this._minFilter,
            magFilter: this._magFilter,
            mipFilter: this._mipFilter,
            addressU: this._addressU,
            addressV: this._addressV,
            addressW: this._addressW,
            glMinFilter: 0,
            glMagFilter: 0,
            glWrapS: 0,
            glWrapT: 0,
            glWrapR: 0
          }, t = this._device, r = this._gpuSampler, (a = (s = t.gl).createSampler()) && (r.minFilter === E.LINEAR || r.minFilter === E.ANISOTROPIC ? r.mipFilter === E.LINEAR || r.mipFilter === E.ANISOTROPIC ? r.glMinFilter = s.LINEAR_MIPMAP_LINEAR : r.mipFilter === E.POINT ? r.glMinFilter = s.LINEAR_MIPMAP_NEAREST : r.glMinFilter = s.LINEAR : r.mipFilter === E.LINEAR || r.mipFilter === E.ANISOTROPIC ? r.glMinFilter = s.NEAREST_MIPMAP_LINEAR : r.mipFilter === E.POINT ? r.glMinFilter = s.NEAREST_MIPMAP_NEAREST : r.glMinFilter = s.NEAREST, r.magFilter === E.LINEAR || r.magFilter === E.ANISOTROPIC ? r.glMagFilter = s.LINEAR : r.glMagFilter = s.NEAREST, r.glWrapS = Re[r.addressU], r.glWrapT = Re[r.addressV], r.glWrapR = Re[r.addressW], r.glSampler = a, s.samplerParameteri(a, s.TEXTURE_MIN_FILTER, r.glMinFilter), s.samplerParameteri(a, s.TEXTURE_MAG_FILTER, r.glMagFilter), s.samplerParameteri(a, s.TEXTURE_WRAP_S, r.glWrapS), s.samplerParameteri(a, s.TEXTURE_WRAP_T, r.glWrapT), s.samplerParameteri(a, s.TEXTURE_WRAP_R, r.glWrapR), s.samplerParameterf(a, s.TEXTURE_MIN_LOD, 0), s.samplerParameterf(a, s.TEXTURE_MAX_LOD, 1e3)), !0;
        }, s.destroy = function () {
          var e, t;
          this._gpuSampler && (e = this._device, (t = this._gpuSampler).glSampler && (e.gl.deleteSampler(t.glSampler), t.glSampler = null), this._gpuSampler = null);
        }, a(r, [{
          key: "gpuSampler",
          get: function get() {
            return this._gpuSampler;
          }
        }]), r;
      }(X),
          at = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuShader = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._name = e.name, this._stages = e.stages, this._attributes = e.attributes, this._blocks = e.blocks, this._samplers = e.samplers, this._gpuShader = {
            name: e.name,
            blocks: e.blocks,
            samplerTextures: e.samplerTextures,
            gpuStages: new Array(e.stages.length),
            glProgram: null,
            glInputs: [],
            glUniforms: [],
            glBlocks: [],
            glSamplerTextures: []
          };

          for (var t = 0; t < e.stages.length; ++t) {
            var r = e.stages[t];
            this._gpuShader.gpuStages[t] = {
              type: r.stage,
              source: r.source,
              glShader: null
            };
          }

          return function (e, t) {
            for (var r = e.gl, s = function s(e) {
              var s = t.gpuStages[e],
                  a = 0,
                  i = "",
                  n = 1;

              switch (s.type) {
                case x.VERTEX:
                  i = "VertexShader", a = r.VERTEX_SHADER;
                  break;

                case x.FRAGMENT:
                  i = "FragmentShader", a = r.FRAGMENT_SHADER;
                  break;

                default:
                  return console.error("Unsupported ShaderType."), {
                    v: void 0
                  };
              }

              var u = r.createShader(a);

              if (u && (s.glShader = u, r.shaderSource(s.glShader, "#version 300 es\n" + s.source), r.compileShader(s.glShader), !r.getShaderParameter(s.glShader, r.COMPILE_STATUS))) {
                console.error(i + " in '" + t.name + "' compilation failed."), console.error("Shader source dump:", s.source.replace(/^|\n/g, function () {
                  return "\n" + n++ + " ";
                })), console.error(r.getShaderInfoLog(s.glShader));

                for (var l = 0; l < t.gpuStages.length; l++) {
                  var _ = t.gpuStages[e];
                  _.glShader && (r.deleteShader(_.glShader), _.glShader = null);
                }

                return {
                  v: void 0
                };
              }
            }, a = 0; a < t.gpuStages.length; a++) {
              var i = s(a);
              if ("object" == (0, _typeof2.default)(i)) return i.v;
            }

            var n = r.createProgram();

            if (n) {
              t.glProgram = n;

              for (var u = 0; u < t.gpuStages.length; u++) {
                var l = t.gpuStages[u];
                r.attachShader(t.glProgram, l.glShader);
              }

              r.linkProgram(t.glProgram);

              for (var _ = 0; _ < t.gpuStages.length; _++) {
                var c = t.gpuStages[_];
                c.glShader && (r.detachShader(t.glProgram, c.glShader), r.deleteShader(c.glShader), c.glShader = null);
              }

              if (!r.getProgramParameter(t.glProgram, r.LINK_STATUS)) return console.error("Failed to link shader '" + t.name + "'."), void console.error(r.getProgramInfoLog(t.glProgram));
              T("Shader '" + t.name + "' compilation succeeded.");
              var f = r.getProgramParameter(t.glProgram, r.ACTIVE_ATTRIBUTES);
              t.glInputs = new Array(f);

              for (var o = 0; o < f; ++o) {
                var h = r.getActiveAttrib(t.glProgram, o);

                if (h) {
                  var d,
                      g = h.name.indexOf("[");
                  d = -1 !== g ? h.name.substr(0, g) : h.name;
                  var R = r.getAttribLocation(t.glProgram, d),
                      A = Se(h.type, r),
                      E = Be(h.type, r);
                  t.glInputs[o] = {
                    name: d,
                    type: A,
                    stride: E,
                    count: h.size,
                    size: E * h.size,
                    glType: h.type,
                    glLoc: R
                  };
                }
              }

              var S,
                  B,
                  C,
                  m,
                  b = r.getProgramParameter(t.glProgram, r.ACTIVE_UNIFORM_BLOCKS);

              if (b) {
                t.glBlocks = new Array(b);

                for (var F = 0; F < b; ++F) {
                  var I = (S = r.getActiveUniformBlockName(t.glProgram, F)).indexOf("[");
                  -1 !== I && (S = S.substr(0, I)), m = null;

                  for (var P = 0; P < t.blocks.length; P++) {
                    if (t.blocks[P].name === S) {
                      m = t.blocks[P];
                      break;
                    }
                  }

                  if (m) {
                    B = F, C = r.getActiveUniformBlockParameter(t.glProgram, B, r.UNIFORM_BLOCK_DATA_SIZE);
                    var G = m.binding + (e.bindingMappingInfo.bufferOffsets[m.set] || 0);
                    r.uniformBlockBinding(t.glProgram, B, G), t.glBlocks[F] = {
                      set: m.set,
                      binding: m.binding,
                      idx: B,
                      name: S,
                      size: C,
                      glBinding: G
                    };
                  } else p("Block '" + S + "' does not bound");
                }
              }

              if (t.samplerTextures.length > 0) {
                t.glSamplerTextures = new Array(t.samplerTextures.length);

                for (var O = 0; O < t.samplerTextures.length; ++O) {
                  var M = t.samplerTextures[O];
                  t.glSamplerTextures[O] = {
                    set: M.set,
                    binding: M.binding,
                    name: M.name,
                    type: M.type,
                    count: M.count,
                    units: [],
                    glUnits: null,
                    glType: pe(M.type, r),
                    glLoc: null
                  };
                }
              }

              for (var v = [], D = [], L = e.stateCache.texUnitCacheMap, U = 0, N = 0; N < t.blocks.length; ++N) {
                t.blocks[N].set === e.bindingMappingInfo.flexibleSet && U++;
              }

              for (var y = 0, w = 0; w < t.samplerTextures.length; ++w) {
                var k = t.samplerTextures[w],
                    X = r.getUniformLocation(t.glProgram, k.name);

                if (null === X || "number" != typeof X && -1 === X.id || (v.push(t.glSamplerTextures[w]), D.push(X)), void 0 === L[k.name]) {
                  var H = k.binding + e.bindingMappingInfo.samplerOffsets[k.set] + y;
                  k.set === e.bindingMappingInfo.flexibleSet && (H -= U), L[k.name] = H % e.capabilities.maxTextureUnits, y += k.count - 1;
                }
              }

              if (v.length) {
                for (var V = [], W = 0; W < v.length; ++W) {
                  var z = v[W],
                      K = L[z.name];

                  if (void 0 !== K) {
                    z.glLoc = D[W];

                    for (var Y = 0; Y < z.count; ++Y) {
                      for (; V[K];) {
                        K = (K + 1) % e.capabilities.maxTextureUnits;
                      }

                      z.units.push(K), V[K] = !0;
                    }
                  }
                }

                for (var q = 0, Z = 0; Z < v.length; ++Z) {
                  var j = v[Z];

                  if (!j.glLoc) {
                    for (j.glLoc = D[Z]; V[q];) {
                      q++;
                    }

                    for (var Q = 0; Q < j.count; ++Q) {
                      for (; V[q];) {
                        q = (q + 1) % e.capabilities.maxTextureUnits;
                      }

                      void 0 === L[j.name] && (L[j.name] = q), j.units.push(q), V[q] = !0;
                    }
                  }
                }

                e.stateCache.glProgram !== t.glProgram && r.useProgram(t.glProgram);

                for (var J = 0; J < v.length; J++) {
                  var $ = v[J];
                  $.glUnits = new Int32Array($.units), r.uniform1iv($.glLoc, $.glUnits);
                }

                e.stateCache.glProgram !== t.glProgram && r.useProgram(e.stateCache.glProgram);
              }

              t.glSamplerTextures = v;
            }
          }(this._device, this._gpuShader), !0;
        }, s.destroy = function () {
          var e, t;
          this._gpuShader && (e = this._device, (t = this._gpuShader).glProgram && (e.gl.deleteProgram(t.glProgram), t.glProgram = null), this._gpuShader = null);
        }, a(r, [{
          key: "gpuShader",
          get: function get() {
            return this._gpuShader;
          }
        }]), r;
      }(H),
          it = function () {
        function e() {
          this.glArrayBuffer = null, this.glElementArrayBuffer = null, this.glUniformBuffer = null, this.glBindUBOs = [], this.glBindUBOOffsets = [], this.glVAO = null, this.texUnit = 0, this.glTexUnits = [], this.glSamplerUnits = [], this.glRenderbuffer = null, this.glFramebuffer = null, this.glReadFramebuffer = null, this.viewport = new V(), this.scissorRect = new u(0, 0, 0, 0), this.rs = new W(), this.dss = new z(), this.bs = new K(), this.glProgram = null, this.glEnabledAttribLocs = [], this.glCurrentAttribLocs = [], this.texUnitCacheMap = {};
        }

        return e.prototype.initialize = function (e, t, r) {
          for (var s = 0; s < e; ++s) {
            this.glTexUnits.push({
              glTexture: null
            });
          }

          this.glSamplerUnits.length = e, this.glSamplerUnits.fill(null), this.glBindUBOs.length = t, this.glBindUBOs.fill(null), this.glBindUBOOffsets.length = t, this.glBindUBOOffsets.fill(0), this.glEnabledAttribLocs.length = r, this.glEnabledAttribLocs.fill(!1), this.glCurrentAttribLocs.length = r, this.glCurrentAttribLocs.fill(!1);
        }, e;
      }(),
          nt = function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._gpuTexture = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          return "texture" in e ? (console.log("WebGL2 does not support texture view."), !1) : (this._type = e.type, this._usage = e.usage, this._format = e.format, this._width = e.width, this._height = e.height, this._depth = e.depth, this._layerCount = e.layerCount, this._levelCount = e.levelCount, this._samples = e.samples, this._flags = e.flags, this._isPowerOf2 = Y(this._width) && Y(this._height), this._size = q(this._format, this.width, this.height, this.depth, this._levelCount) * this._layerCount, this._gpuTexture = {
            type: this._type,
            format: this._format,
            usage: this._usage,
            width: this._width,
            height: this._height,
            depth: this._depth,
            size: this._size,
            arrayLayer: this._layerCount,
            mipLevel: this._levelCount,
            samples: this._samples,
            flags: this._flags,
            isPowerOf2: this._isPowerOf2,
            glTarget: 0,
            glInternalFmt: 0,
            glFormat: 0,
            glType: 0,
            glUsage: 0,
            glTexture: null,
            glRenderbuffer: null,
            glWrapS: 0,
            glWrapT: 0,
            glMinFilter: 0,
            glMagFilter: 0
          }, function (e, t) {
            var r = e.gl;
            t.glInternalFmt = function (e, t) {
              switch (e) {
                case n.A8:
                  return t.ALPHA;

                case n.L8:
                  return t.LUMINANCE;

                case n.LA8:
                  return t.LUMINANCE_ALPHA;

                case n.R8:
                  return t.R8;

                case n.R8SN:
                  return t.R8_SNORM;

                case n.R8UI:
                  return t.R8UI;

                case n.R8I:
                  return t.R8I;

                case n.RG8:
                  return t.RG8;

                case n.RG8SN:
                  return t.RG8_SNORM;

                case n.RG8UI:
                  return t.RG8UI;

                case n.RG8I:
                  return t.RG8I;

                case n.RGB8:
                  return t.RGB8;

                case n.RGB8SN:
                  return t.RGB8_SNORM;

                case n.RGB8UI:
                  return t.RGB8UI;

                case n.RGB8I:
                  return t.RGB8I;

                case n.BGRA8:
                case n.RGBA8:
                  return t.RGBA8;

                case n.RGBA8SN:
                  return t.RGBA8_SNORM;

                case n.RGBA8UI:
                  return t.RGBA8UI;

                case n.RGBA8I:
                  return t.RGBA8I;

                case n.R16I:
                  return t.R16I;

                case n.R16UI:
                  return t.R16UI;

                case n.R16F:
                  return t.R16F;

                case n.RG16I:
                  return t.RG16I;

                case n.RG16UI:
                  return t.RG16UI;

                case n.RG16F:
                  return t.RG16F;

                case n.RGB16I:
                  return t.RGB16I;

                case n.RGB16UI:
                  return t.RGB16UI;

                case n.RGB16F:
                  return t.RGB16F;

                case n.RGBA16I:
                  return t.RGBA16I;

                case n.RGBA16UI:
                  return t.RGBA16UI;

                case n.RGBA16F:
                  return t.RGBA16F;

                case n.R32I:
                  return t.R32I;

                case n.R32UI:
                  return t.R32UI;

                case n.R32F:
                  return t.R32F;

                case n.RG32I:
                  return t.RG32I;

                case n.RG32UI:
                  return t.RG32UI;

                case n.RG32F:
                  return t.RG32F;

                case n.RGB32I:
                  return t.RGB32I;

                case n.RGB32UI:
                  return t.RGB32UI;

                case n.RGB32F:
                  return t.RGB32F;

                case n.RGBA32I:
                  return t.RGBA32I;

                case n.RGBA32UI:
                  return t.RGBA32UI;

                case n.RGBA32F:
                  return t.RGBA32F;

                case n.R5G6B5:
                  return t.RGB565;

                case n.RGB5A1:
                  return t.RGB5_A1;

                case n.RGBA4:
                  return t.RGBA4;

                case n.SRGB8:
                  return t.SRGB8;

                case n.SRGB8_A8:
                  return t.SRGB8_ALPHA8;

                case n.RGB10A2:
                  return t.RGB10_A2;

                case n.RGB10A2UI:
                  return t.RGB10_A2UI;

                case n.R11G11B10F:
                  return t.R11F_G11F_B10F;

                case n.D16:
                  return t.DEPTH_COMPONENT16;

                case n.D16S8:
                  return t.DEPTH24_STENCIL8;

                case n.D24:
                  return t.DEPTH_COMPONENT24;

                case n.D24S8:
                  return t.DEPTH24_STENCIL8;

                case n.D32F:
                  return t.DEPTH_COMPONENT32F;

                case n.D32F_S8:
                  return t.DEPTH32F_STENCIL8;

                case n.BC1:
                  return de.COMPRESSED_RGB_S3TC_DXT1_EXT;

                case n.BC1_ALPHA:
                  return de.COMPRESSED_RGBA_S3TC_DXT1_EXT;

                case n.BC1_SRGB:
                  return de.COMPRESSED_SRGB_S3TC_DXT1_EXT;

                case n.BC1_SRGB_ALPHA:
                  return de.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;

                case n.BC2:
                  return de.COMPRESSED_RGBA_S3TC_DXT3_EXT;

                case n.BC2_SRGB:
                  return de.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;

                case n.BC3:
                  return de.COMPRESSED_RGBA_S3TC_DXT5_EXT;

                case n.BC3_SRGB:
                  return de.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;

                case n.ETC_RGB8:
                  return de.COMPRESSED_RGB_ETC1_WEBGL;

                case n.ETC2_RGB8:
                  return de.COMPRESSED_RGB8_ETC2;

                case n.ETC2_SRGB8:
                  return de.COMPRESSED_SRGB8_ETC2;

                case n.ETC2_RGB8_A1:
                  return de.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;

                case n.ETC2_SRGB8_A1:
                  return de.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;

                case n.ETC2_RGBA8:
                  return de.COMPRESSED_RGBA8_ETC2_EAC;

                case n.ETC2_SRGB8_A8:
                  return de.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;

                case n.EAC_R11:
                  return de.COMPRESSED_R11_EAC;

                case n.EAC_R11SN:
                  return de.COMPRESSED_SIGNED_R11_EAC;

                case n.EAC_RG11:
                  return de.COMPRESSED_RG11_EAC;

                case n.EAC_RG11SN:
                  return de.COMPRESSED_SIGNED_RG11_EAC;

                case n.PVRTC_RGB2:
                  return de.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;

                case n.PVRTC_RGBA2:
                  return de.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;

                case n.PVRTC_RGB4:
                  return de.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;

                case n.PVRTC_RGBA4:
                  return de.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;

                case n.ASTC_RGBA_4X4:
                  return de.COMPRESSED_RGBA_ASTC_4x4_KHR;

                case n.ASTC_RGBA_5X4:
                  return de.COMPRESSED_RGBA_ASTC_5x4_KHR;

                case n.ASTC_RGBA_5X5:
                  return de.COMPRESSED_RGBA_ASTC_5x5_KHR;

                case n.ASTC_RGBA_6X5:
                  return de.COMPRESSED_RGBA_ASTC_6x5_KHR;

                case n.ASTC_RGBA_6X6:
                  return de.COMPRESSED_RGBA_ASTC_6x6_KHR;

                case n.ASTC_RGBA_8X5:
                  return de.COMPRESSED_RGBA_ASTC_8x5_KHR;

                case n.ASTC_RGBA_8X6:
                  return de.COMPRESSED_RGBA_ASTC_8x6_KHR;

                case n.ASTC_RGBA_8X8:
                  return de.COMPRESSED_RGBA_ASTC_8x8_KHR;

                case n.ASTC_RGBA_10X5:
                  return de.COMPRESSED_RGBA_ASTC_10x5_KHR;

                case n.ASTC_RGBA_10X6:
                  return de.COMPRESSED_RGBA_ASTC_10x6_KHR;

                case n.ASTC_RGBA_10X8:
                  return de.COMPRESSED_RGBA_ASTC_10x8_KHR;

                case n.ASTC_RGBA_10X10:
                  return de.COMPRESSED_RGBA_ASTC_10x10_KHR;

                case n.ASTC_RGBA_12X10:
                  return de.COMPRESSED_RGBA_ASTC_12x10_KHR;

                case n.ASTC_RGBA_12X12:
                  return de.COMPRESSED_RGBA_ASTC_12x12_KHR;

                case n.ASTC_SRGBA_4X4:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;

                case n.ASTC_SRGBA_5X4:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;

                case n.ASTC_SRGBA_5X5:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;

                case n.ASTC_SRGBA_6X5:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;

                case n.ASTC_SRGBA_6X6:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;

                case n.ASTC_SRGBA_8X5:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;

                case n.ASTC_SRGBA_8X6:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;

                case n.ASTC_SRGBA_8X8:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;

                case n.ASTC_SRGBA_10X5:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;

                case n.ASTC_SRGBA_10X6:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;

                case n.ASTC_SRGBA_10X8:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;

                case n.ASTC_SRGBA_10X10:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;

                case n.ASTC_SRGBA_12X10:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;

                case n.ASTC_SRGBA_12X12:
                  return de.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;

                default:
                  return console.error("Unsupported Format, convert to WebGL internal format failed."), t.RGBA;
              }
            }(t.format, r), t.glFormat = Te(t.format, r), t.glType = Ee(t.format, r);
            var s = t.width,
                a = t.height;

            switch (t.type) {
              case o.TEX2D:
                t.glTarget = r.TEXTURE_2D;
                var i = Math.max(s, a);

                if (i > e.capabilities.maxTextureSize && h(9100, i, e.capabilities.maxTextureSize), t.samples === A.X1) {
                  var u = r.createTexture();

                  if (u && t.size > 0) {
                    t.glTexture = u;
                    var l = e.stateCache.glTexUnits[e.stateCache.texUnit];

                    if (l.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_2D, t.glTexture), l.glTexture = t.glTexture), t.glInternalFmt === de.COMPRESSED_RGB_ETC1_WEBGL) {
                      var _ = d(t.format, 2, 2, 1),
                          c = new Uint8Array(_);

                      r.compressedTexImage2D(r.TEXTURE_2D, 0, t.glInternalFmt, 2, 2, 0, c);
                    } else if (t.flags & g.IMMUTABLE) r.texStorage2D(r.TEXTURE_2D, t.mipLevel, t.glInternalFmt, s, a);else if (R[t.format].isCompressed) for (var f = 0; f < t.mipLevel; ++f) {
                      var E = d(t.format, s, a, 1),
                          T = new Uint8Array(E);
                      r.compressedTexImage2D(r.TEXTURE_2D, f, t.glInternalFmt, s, a, 0, T), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    } else for (var p = 0; p < t.mipLevel; ++p) {
                      r.texImage2D(r.TEXTURE_2D, p, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    }
                  } else r.deleteTexture(u);
                } else {
                  var S = r.createRenderbuffer();
                  S && t.size > 0 && (t.glRenderbuffer = S, e.stateCache.glRenderbuffer !== t.glRenderbuffer && (r.bindRenderbuffer(r.RENDERBUFFER, t.glRenderbuffer), e.stateCache.glRenderbuffer = t.glRenderbuffer), r.renderbufferStorageMultisample(r.RENDERBUFFER, t.samples, t.glInternalFmt, t.width, t.height));
                }

                break;

              case o.CUBE:
                t.glTarget = r.TEXTURE_CUBE_MAP;
                var B = Math.max(s, a);
                B > e.capabilities.maxCubeMapTextureSize && h(9100, B, e.capabilities.maxTextureSize);
                var C = r.createTexture();

                if (C && t.size > 0) {
                  t.glTexture = C;
                  var m = e.stateCache.glTexUnits[e.stateCache.texUnit];
                  if (m.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture), m.glTexture = t.glTexture), t.glInternalFmt === de.COMPRESSED_RGB_ETC1_WEBGL) for (var b = 0; b < 6; ++b) {
                    var x = d(t.format, 2, 2, 1),
                        F = new Uint8Array(x);
                    r.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + b, 0, t.glInternalFmt, 2, 2, 0, F);
                  } else if (t.flags & g.IMMUTABLE) r.texStorage2D(r.TEXTURE_CUBE_MAP, t.mipLevel, t.glInternalFmt, s, a);else if (R[t.format].isCompressed) for (var I = 0; I < t.mipLevel; ++I) {
                    for (var P = d(t.format, s, a, 1), G = new Uint8Array(P), O = 0; O < 6; ++O) {
                      r.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + O, I, t.glInternalFmt, s, a, 0, G);
                    }

                    s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                  } else for (var M = 0; M < t.mipLevel; ++M) {
                    for (var v = 0; v < 6; ++v) {
                      r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + v, M, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null);
                    }

                    s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                  }
                }

                break;

              default:
                console.error("Unsupported TextureType, create texture failed."), t.type = o.TEX2D, t.glTarget = r.TEXTURE_2D;
            }
          }(this._device, this._gpuTexture), this._device.memoryStatus.textureSize += this._size, !0);
        }, s.destroy = function () {
          var e, t;
          this._gpuTexture && (e = this._device, (t = this._gpuTexture).glTexture && (e.gl.deleteTexture(t.glTexture), t.glTexture = null), t.glRenderbuffer && (e.gl.deleteRenderbuffer(t.glRenderbuffer), t.glRenderbuffer = null), this._device.memoryStatus.textureSize -= this._size, this._gpuTexture = null);
        }, s.resize = function (e, t) {
          var r = this._size;
          this._width = e, this._height = t, this._size = q(this._format, this.width, this.height, this.depth, this._levelCount) * this._layerCount, this._gpuTexture && (this._gpuTexture.width = e, this._gpuTexture.height = t, this._gpuTexture.size = this._size, function (e, t) {
            var r = e.gl,
                s = t.width,
                a = t.height;

            switch (t.type) {
              case o.TEX2D:
                t.glTarget = r.TEXTURE_2D;
                var i = Math.max(s, a);

                if (i > e.capabilities.maxTextureSize && h(9100, i, e.capabilities.maxTextureSize), t.samples === A.X1) {
                  var n = e.stateCache.glTexUnits[e.stateCache.texUnit];

                  if (n.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_2D, t.glTexture), n.glTexture = t.glTexture), R[t.format].isCompressed) {
                    if (t.glInternalFmt !== de.COMPRESSED_RGB_ETC1_WEBGL) for (var u = 0; u < t.mipLevel; ++u) {
                      var l = d(t.format, s, a, 1),
                          _ = new Uint8Array(l);

                      r.compressedTexImage2D(r.TEXTURE_2D, u, t.glInternalFmt, s, a, 0, _), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    }
                  } else for (var c = 0; c < t.mipLevel; ++c) {
                    r.texImage2D(r.TEXTURE_2D, c, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                  }
                } else t.glRenderbuffer && t.size > 0 && (e.stateCache.glRenderbuffer !== t.glRenderbuffer && (r.bindRenderbuffer(r.RENDERBUFFER, t.glRenderbuffer), e.stateCache.glRenderbuffer = t.glRenderbuffer), r.renderbufferStorageMultisample(r.RENDERBUFFER, t.samples, t.glInternalFmt, t.width, t.height));

                break;

              case o.CUBE:
                t.type = o.CUBE, t.glTarget = r.TEXTURE_CUBE_MAP;
                var f = Math.max(s, a);
                f > e.capabilities.maxCubeMapTextureSize && h(9100, f, e.capabilities.maxTextureSize);
                var g = e.stateCache.glTexUnits[e.stateCache.texUnit];

                if (g.glTexture !== t.glTexture && (r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture), g.glTexture = t.glTexture), R[t.format].isCompressed) {
                  if (t.glInternalFmt !== de.COMPRESSED_RGB_ETC1_WEBGL) for (var E = 0; E < 6; ++E) {
                    s = t.width, a = t.height;

                    for (var T = 0; T < t.mipLevel; ++T) {
                      var p = d(t.format, s, a, 1),
                          S = new Uint8Array(p);
                      r.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + E, T, t.glInternalFmt, s, a, 0, S), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                    }
                  }
                } else for (var B = 0; B < 6; ++B) {
                  s = t.width, a = t.height;

                  for (var C = 0; C < t.mipLevel; ++C) {
                    r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + B, C, t.glInternalFmt, s, a, 0, t.glFormat, t.glType, null), s = Math.max(1, s >> 1), a = Math.max(1, a >> 1);
                  }
                }

                break;

              default:
                console.error("Unsupported TextureType, create texture failed."), t.type = o.TEX2D, t.glTarget = r.TEXTURE_2D;
            }
          }(this._device, this._gpuTexture), this._device.memoryStatus.textureSize -= r, this._device.memoryStatus.textureSize += this._size);
        }, a(r, [{
          key: "gpuTexture",
          get: function get() {
            return this._gpuTexture;
          }
        }]), r;
      }(Z),
          ut = "webglcontextlost",
          lt = e("WebGL2Device", function (e) {
        function r() {
          for (var t, r = arguments.length, s = new Array(r), a = 0; a < r; a++) {
            s[a] = arguments[a];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this).stateCache = new it(), t.cmdAllocator = new Ke(), t.nullTex2D = null, t.nullTexCube = null, t._webGL2RC = null, t._isAntialias = !0, t._isPremultipliedAlpha = !0, t._useVAO = !0, t._bindingMappingInfo = new ce(), t._webGLContextLostHandler = null, t._extensions = null, t._EXT_texture_filter_anisotropic = null, t._OES_texture_float_linear = null, t._OES_texture_half_float_linear = null, t._EXT_color_buffer_float = null, t._EXT_disjoint_timer_query_webgl2 = null, t._WEBGL_compressed_texture_etc1 = null, t._WEBGL_compressed_texture_etc = null, t._WEBGL_compressed_texture_pvrtc = null, t._WEBGL_compressed_texture_astc = null, t._WEBGL_compressed_texture_s3tc = null, t._WEBGL_compressed_texture_s3tc_srgb = null, t._WEBGL_debug_renderer_info = null, t._WEBGL_texture_storage_multisample = null, t._WEBGL_debug_shaders = null, t._WEBGL_lose_context = null, t;
        }

        t(r, e);
        var s = r.prototype;
        return s.initialize = function (e) {
          this._canvas = e.canvasElm, this._isAntialias = e.isAntialias, this._isPremultipliedAlpha = e.isPremultipliedAlpha, this._bindingMappingInfo = e.bindingMappingInfo, this._bindingMappingInfo.bufferOffsets.length || this._bindingMappingInfo.bufferOffsets.push(0), this._bindingMappingInfo.samplerOffsets.length || this._bindingMappingInfo.samplerOffsets.push(0);

          try {
            var t = {
              alpha: j.ENABLE_TRANSPARENT_CANVAS,
              antialias: this._isAntialias,
              depth: !0,
              stencil: !0,
              premultipliedAlpha: this._isPremultipliedAlpha,
              preserveDrawingBuffer: !1,
              powerPreference: "default",
              failIfMajorPerformanceCaveat: !1
            };
            this._webGL2RC = this._canvas.getContext("webgl2", t);
          } catch (e) {
            return console.warn(e), !1;
          }

          if (!this._webGL2RC) return console.warn("This device does not support WebGL2."), !1;
          this._webGLContextLostHandler = this._onWebGLContextLost.bind(this), this._canvas.addEventListener(ut, this._onWebGLContextLost), this._canvas2D = document.createElement("canvas"), console.info("WebGL2 device initialized."), this._gfxAPI = Q.WEBGL2, this._deviceName = "WebGL2";
          var r = this._webGL2RC;
          this._WEBGL_debug_renderer_info = this.getExtension("WEBGL_debug_renderer_info"), this._WEBGL_debug_renderer_info ? (this._renderer = r.getParameter(this._WEBGL_debug_renderer_info.UNMASKED_RENDERER_WEBGL), this._vendor = r.getParameter(this._WEBGL_debug_renderer_info.UNMASKED_VENDOR_WEBGL)) : (this._renderer = r.getParameter(r.RENDERER), this._vendor = r.getParameter(r.VENDOR)), this._version = r.getParameter(r.VERSION), this._caps.maxVertexAttributes = r.getParameter(r.MAX_VERTEX_ATTRIBS), this._caps.maxVertexUniformVectors = r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS), this._caps.maxFragmentUniformVectors = r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS), this._caps.maxTextureUnits = r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS), this._caps.maxVertexTextureUnits = r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS), this._caps.maxUniformBufferBindings = r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS), this._caps.maxUniformBlockSize = r.getParameter(r.MAX_UNIFORM_BLOCK_SIZE), this._caps.maxTextureSize = r.getParameter(r.MAX_TEXTURE_SIZE), this._caps.maxCubeMapTextureSize = r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE), this._caps.uboOffsetAlignment = r.getParameter(r.UNIFORM_BUFFER_OFFSET_ALIGNMENT), this._caps.depthBits = r.getParameter(r.DEPTH_BITS), this._caps.stencilBits = r.getParameter(r.STENCIL_BITS), this.stateCache.initialize(this._caps.maxTextureUnits, this._caps.maxUniformBufferBindings, this._caps.maxVertexAttributes), this._devicePixelRatio = e.devicePixelRatio || 1, this._width = e.width, this._height = e.height, this._colorFmt = n.RGBA8, 32 === this._caps.depthBits ? 8 === this._caps.stencilBits ? this._depthStencilFmt = n.D32F_S8 : this._depthStencilFmt = n.D32F : 24 === this._caps.depthBits ? 8 === this._caps.stencilBits ? this._depthStencilFmt = n.D24S8 : this._depthStencilFmt = n.D24 : 8 === this._caps.stencilBits ? this._depthStencilFmt = n.D16S8 : this._depthStencilFmt = n.D16, this._extensions = r.getSupportedExtensions();
          var s = "";

          if (this._extensions) {
            for (var a, i = J(this._extensions); !(a = i()).done;) {
              s += a.value + " ";
            }

            T("EXTENSIONS: " + s);
          }

          this._EXT_texture_filter_anisotropic = this.getExtension("EXT_texture_filter_anisotropic"), this._EXT_color_buffer_float = this.getExtension("EXT_color_buffer_float"), this._EXT_disjoint_timer_query_webgl2 = this.getExtension("EXT_disjoint_timer_query_webgl2"), this._OES_texture_float_linear = this.getExtension("OES_texture_float_linear"), this._OES_texture_half_float_linear = this.getExtension("OES_texture_half_float_linear"), this._WEBGL_compressed_texture_etc1 = this.getExtension("WEBGL_compressed_texture_etc1"), this._WEBGL_compressed_texture_etc = this.getExtension("WEBGL_compressed_texture_etc"), this._WEBGL_compressed_texture_pvrtc = this.getExtension("WEBGL_compressed_texture_pvrtc"), this._WEBGL_compressed_texture_astc = this.getExtension("WEBGL_compressed_texture_astc"), this._WEBGL_compressed_texture_s3tc = this.getExtension("WEBGL_compressed_texture_s3tc"), this._WEBGL_compressed_texture_s3tc_srgb = this.getExtension("WEBGL_compressed_texture_s3tc_srgb"), this._WEBGL_texture_storage_multisample = this.getExtension("WEBGL_texture_storage_multisample"), this._WEBGL_debug_shaders = this.getExtension("WEBGL_debug_shaders"), this._WEBGL_lose_context = this.getExtension("WEBGL_lose_context"), this._features.fill(!1), this._features[$.TEXTURE_FLOAT] = !0, this._features[$.TEXTURE_HALF_FLOAT] = !0, this._features[$.FORMAT_R11G11B10F] = !0, this._features[$.FORMAT_SRGB] = !0, this._features[$.FORMAT_RGB8] = !0, this._features[$.ELEMENT_INDEX_UINT] = !0, this._features[$.INSTANCED_ARRAYS] = !0, this._features[$.MULTIPLE_RENDER_TARGETS] = !0, this._features[$.BLEND_MINMAX] = !0, this._EXT_color_buffer_float && (this._features[$.COLOR_FLOAT] = !0, this._features[$.COLOR_HALF_FLOAT] = !0), this._OES_texture_float_linear && (this._features[$.TEXTURE_FLOAT_LINEAR] = !0), this._OES_texture_half_float_linear && (this._features[$.TEXTURE_HALF_FLOAT_LINEAR] = !0);
          var u = "";
          this._WEBGL_compressed_texture_etc1 && (this._features[$.FORMAT_ETC1] = !0, u += "etc1 "), this._WEBGL_compressed_texture_etc && (this._features[$.FORMAT_ETC2] = !0, u += "etc2 "), this._WEBGL_compressed_texture_s3tc && (this._features[$.FORMAT_DXT] = !0, u += "dxt "), this._WEBGL_compressed_texture_pvrtc && (this._features[$.FORMAT_PVRTC] = !0, u += "pvrtc "), this._WEBGL_compressed_texture_astc && (this._features[$.FORMAT_ASTC] = !0, u += "astc "), T("RENDERER: " + this._renderer), T("VENDOR: " + this._vendor), T("VERSION: " + this._version), T("DPR: " + this._devicePixelRatio), T("SCREEN_SIZE: " + this._width + " x " + this._height), T("MAX_VERTEX_ATTRIBS: " + this._caps.maxVertexAttributes), T("MAX_VERTEX_UNIFORM_VECTORS: " + this._caps.maxVertexUniformVectors), T("MAX_FRAGMENT_UNIFORM_VECTORS: " + this._caps.maxFragmentUniformVectors), T("MAX_TEXTURE_IMAGE_UNITS: " + this._caps.maxTextureUnits), T("MAX_VERTEX_TEXTURE_IMAGE_UNITS: " + this._caps.maxVertexTextureUnits), T("MAX_UNIFORM_BUFFER_BINDINGS: " + this._caps.maxUniformBufferBindings), T("MAX_UNIFORM_BLOCK_SIZE: " + this._caps.maxUniformBlockSize), T("DEPTH_BITS: " + this._caps.depthBits), T("STENCIL_BITS: " + this._caps.stencilBits), T("UNIFORM_BUFFER_OFFSET_ALIGNMENT: " + this._caps.uboOffsetAlignment), this._EXT_texture_filter_anisotropic && T("MAX_TEXTURE_MAX_ANISOTROPY_EXT: " + this._EXT_texture_filter_anisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT), T("USE_VAO: " + this._useVAO), T("COMPRESSED_FORMAT: " + u), this.initStates(r), this._queue = this.createQueue(new ee(te.GRAPHICS)), this._cmdBuff = this.createCommandBuffer(new re(this._queue)), this.nullTex2D = this.createTexture(new se(o.TEX2D, ae.SAMPLED, n.RGBA8, 2, 2, g.GEN_MIPMAP)), this.nullTexCube = new nt(this), this.nullTexCube.initialize(new se(o.CUBE, ae.SAMPLED, n.RGBA8, 2, 2, g.GEN_MIPMAP, 6));
          var l = new fe();
          l.texExtent.width = 2, l.texExtent.height = 2;

          var _ = new Uint8Array(this.nullTex2D.size);

          return _.fill(0), this.copyBuffersToTexture([_], this.nullTex2D, [l]), l.texSubres.layerCount = 6, this.copyBuffersToTexture([_, _, _, _, _, _], this.nullTexCube, [l]), !0;
        }, s.destroy = function () {
          this._canvas && this._webGLContextLostHandler && (this._canvas.removeEventListener(ut, this._webGLContextLostHandler), this._webGLContextLostHandler = null), this.nullTex2D && (this.nullTex2D.destroy(), this.nullTex2D = null), this.nullTexCube && (this.nullTexCube.destroy(), this.nullTexCube = null), this._queue && (this._queue.destroy(), this._queue = null), this._cmdBuff && (this._cmdBuff.destroy(), this._cmdBuff = null), this._extensions = null, this._webGL2RC = null;
        }, s.resize = function (e, t) {
          this._width === e && this._height === t || (T("Resizing device: " + e + "x" + t), this._canvas.width = e, this._canvas.height = t, this._width = e, this._height = t);
        }, s.flushCommands = function () {}, s.acquire = function () {
          this.cmdAllocator.releaseCmds();
        }, s.present = function () {
          var e = this._queue;
          this._numDrawCalls = e.numDrawCalls, this._numInstances = e.numInstances, this._numTris = e.numTris, e.clear();
        }, s.createCommandBuffer = function (e) {
          var t = new (e.type === O.PRIMARY ? et : Ye)(this);
          return t.initialize(e) ? t : null;
        }, s.createBuffer = function (e) {
          var t = new We(this);
          return t.initialize(e) ? t : null;
        }, s.createTexture = function (e) {
          var t = new nt(this);
          return t.initialize(e) ? t : null;
        }, s.createSampler = function (e) {
          var t = new st(this);
          return t.initialize(e) ? t : null;
        }, s.createDescriptorSet = function (e) {
          var t = new ge(this);
          return t.initialize(e) ? t : null;
        }, s.createShader = function (e) {
          var t = new at(this);
          return t.initialize(e) ? t : null;
        }, s.createInputAssembler = function (e) {
          var t = new Ze(this);
          return t.initialize(e) ? t : null;
        }, s.createRenderPass = function (e) {
          var t = new rt(this);
          return t.initialize(e) ? t : null;
        }, s.createFramebuffer = function (e) {
          var t = new qe(this);
          return t.initialize(e) ? t : null;
        }, s.createDescriptorSetLayout = function (e) {
          var t = new je(this);
          return t.initialize(e) ? t : null;
        }, s.createPipelineLayout = function (e) {
          var t = new Qe(this);
          return t.initialize(e) ? t : null;
        }, s.createPipelineState = function (e) {
          var t = new $e(this);
          return t.initialize(e) ? t : null;
        }, s.createQueue = function (e) {
          var t = new tt(this);
          return t.initialize(e) ? t : null;
        }, s.createGlobalBarrier = function (e) {
          var t = new ie(this);
          return t.initialize(e) ? t : null;
        }, s.createTextureBarrier = function (e) {
          var t = new ne(this);
          return t.initialize(e) ? t : null;
        }, s.copyBuffersToTexture = function (e, t, r) {
          Ve(this, e, t.gpuTexture, r);
        }, s.copyTextureToBuffers = function (e, t, r) {
          !function (e, t, r, s) {
            var a = e.gl,
                i = e.stateCache,
                n = a.createFramebuffer();
            a.bindFramebuffer(a.FRAMEBUFFER, n);
            var u = 0,
                l = 0,
                _ = 1,
                c = 1;

            switch (t.glTarget) {
              case a.TEXTURE_2D:
                for (var f = 0; f < s.length; f++) {
                  var o = s[f];
                  a.framebufferTexture2D(a.FRAMEBUFFER, a.COLOR_ATTACHMENT0, t.glTarget, t.glTexture, o.texSubres.mipLevel), u = o.texOffset.x, l = o.texOffset.y, _ = o.texExtent.width, c = o.texExtent.height, a.readPixels(u, l, _, c, t.glFormat, t.glType, r[f]);
                }

                break;

              default:
                console.error("Unsupported GL texture type, copy texture to buffers failed.");
            }

            a.bindFramebuffer(a.FRAMEBUFFER, null), i.glFramebuffer = null, a.deleteFramebuffer(n);
          }(this, e.gpuTexture, t, r);
        }, s.copyTexImagesToTexture = function (e, t, r) {
          !function (e, t, r, s) {
            var a = e.gl,
                i = e.stateCache.glTexUnits[e.stateCache.texUnit];
            i.glTexture !== r.glTexture && (a.bindTexture(r.glTarget, r.glTexture), i.glTexture = r.glTexture);
            var n = 0,
                u = 0;

            switch (r.glTarget) {
              case a.TEXTURE_2D:
                for (var l = 0; l < s.length; l++) {
                  var _ = s[l];
                  a.texSubImage2D(a.TEXTURE_2D, _.texSubres.mipLevel, _.texOffset.x, _.texOffset.y, r.glFormat, r.glType, t[n++]);
                }

                break;

              case a.TEXTURE_CUBE_MAP:
                for (var c = 0; c < s.length; c++) {
                  var f = s[c],
                      o = f.texSubres.baseArrayLayer + f.texSubres.layerCount;

                  for (u = f.texSubres.baseArrayLayer; u < o; ++u) {
                    a.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + u, f.texSubres.mipLevel, f.texOffset.x, f.texOffset.y, r.glFormat, r.glType, t[n++]);
                  }
                }

                break;

              default:
                console.error("Unsupported GL texture type, copy buffer to texture failed.");
            }

            r.flags & g.GEN_MIPMAP && a.generateMipmap(r.glTarget);
          }(this, e, t.gpuTexture, r);
        }, s.copyFramebufferToBuffer = function (e, t, r) {
          var s = this._webGL2RC,
              a = e.gpuFramebuffer,
              i = a.gpuColorTextures[0].format,
              n = Te(i, s),
              u = Ee(i, s),
              l = ue(R[i]),
              _ = this.stateCache.glFramebuffer;
          this.stateCache.glFramebuffer !== a.glFramebuffer && (s.bindFramebuffer(s.FRAMEBUFFER, a.glFramebuffer), this.stateCache.glFramebuffer = a.glFramebuffer);

          for (var c, f = new l(t), o = J(r); !(c = o()).done;) {
            var h = c.value,
                d = h.texExtent.width,
                g = h.texExtent.height;
            s.readPixels(h.texOffset.x, h.texOffset.y, d, g, n, u, f);
          }

          this.stateCache.glFramebuffer !== _ && (s.bindFramebuffer(s.FRAMEBUFFER, _), this.stateCache.glFramebuffer = _);
        }, s.blitFramebuffer = function (e, t, r, s, a) {
          !function (e, t, r, s, a, i) {
            var n = e.gl;
            e.stateCache.glReadFramebuffer !== t.glFramebuffer && (n.bindFramebuffer(n.READ_FRAMEBUFFER, t.glFramebuffer), e.stateCache.glReadFramebuffer = t.glFramebuffer);
            var u = r.glFramebuffer !== e.stateCache.glFramebuffer;
            u && n.bindFramebuffer(n.DRAW_FRAMEBUFFER, r.glFramebuffer);
            var l = 0;
            t.gpuColorTextures.length > 0 && (l |= n.COLOR_BUFFER_BIT), t.gpuDepthStencilTexture && (l |= n.DEPTH_BUFFER_BIT, R[t.gpuDepthStencilTexture.format].hasStencil && (l |= n.STENCIL_BUFFER_BIT));

            var _ = i === E.LINEAR || i === E.ANISOTROPIC ? n.LINEAR : n.NEAREST;

            n.blitFramebuffer(s.x, s.y, s.x + s.width, s.y + s.height, a.x, a.y, a.x + a.width, a.y + a.height, l, _), u && n.bindFramebuffer(n.FRAMEBUFFER, e.stateCache.glFramebuffer);
          }(this, e.gpuFramebuffer, t.gpuFramebuffer, r, s, a);
        }, s.getExtension = function (e) {
          for (var t = ["", "WEBKIT_", "MOZ_"], r = 0; r < t.length; ++r) {
            var s = this.gl.getExtension(t[r] + e);
            if (s) return s;
          }

          return null;
        }, s.initStates = function (e) {
          e.activeTexture(e.TEXTURE0), e.pixelStorei(e.PACK_ALIGNMENT, 1), e.pixelStorei(e.UNPACK_ALIGNMENT, 1), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, !1), e.bindFramebuffer(e.FRAMEBUFFER, null), e.enable(e.SCISSOR_TEST), e.enable(e.CULL_FACE), e.cullFace(e.BACK), e.frontFace(e.CCW), e.polygonOffset(0, 0), e.enable(e.DEPTH_TEST), e.depthMask(!0), e.depthFunc(e.LESS), e.stencilFuncSeparate(e.FRONT, e.ALWAYS, 1, 65535), e.stencilOpSeparate(e.FRONT, e.KEEP, e.KEEP, e.KEEP), e.stencilMaskSeparate(e.FRONT, 65535), e.stencilFuncSeparate(e.BACK, e.ALWAYS, 1, 65535), e.stencilOpSeparate(e.BACK, e.KEEP, e.KEEP, e.KEEP), e.stencilMaskSeparate(e.BACK, 65535), e.disable(e.STENCIL_TEST), e.disable(e.SAMPLE_ALPHA_TO_COVERAGE), e.disable(e.BLEND), e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ZERO, e.ONE, e.ZERO), e.colorMask(!0, !0, !0, !0), e.blendColor(0, 0, 0, 0);
        }, s._onWebGLContextLost = function (e) {
          le(11e3), _e(e);
        }, a(r, [{
          key: "gl",
          get: function get() {
            return this._webGL2RC;
          }
        }, {
          key: "isAntialias",
          get: function get() {
            return this._isAntialias;
          }
        }, {
          key: "isPremultipliedAlpha",
          get: function get() {
            return this._isPremultipliedAlpha;
          }
        }, {
          key: "useVAO",
          get: function get() {
            return this._useVAO;
          }
        }, {
          key: "bindingMappingInfo",
          get: function get() {
            return this._bindingMappingInfo;
          }
        }, {
          key: "EXT_texture_filter_anisotropic",
          get: function get() {
            return this._EXT_texture_filter_anisotropic;
          }
        }, {
          key: "OES_texture_float_linear",
          get: function get() {
            return this._OES_texture_float_linear;
          }
        }, {
          key: "EXT_color_buffer_float",
          get: function get() {
            return this._EXT_color_buffer_float;
          }
        }, {
          key: "EXT_disjoint_timer_query_webgl2",
          get: function get() {
            return this._EXT_disjoint_timer_query_webgl2;
          }
        }, {
          key: "WEBGL_compressed_texture_etc1",
          get: function get() {
            return this._WEBGL_compressed_texture_etc1;
          }
        }, {
          key: "WEBGL_compressed_texture_etc",
          get: function get() {
            return this._WEBGL_compressed_texture_etc;
          }
        }, {
          key: "WEBGL_compressed_texture_pvrtc",
          get: function get() {
            return this._WEBGL_compressed_texture_pvrtc;
          }
        }, {
          key: "WEBGL_compressed_texture_s3tc",
          get: function get() {
            return this._WEBGL_compressed_texture_s3tc;
          }
        }, {
          key: "WEBGL_compressed_texture_s3tc_srgb",
          get: function get() {
            return this._WEBGL_compressed_texture_s3tc_srgb;
          }
        }, {
          key: "WEBGL_texture_storage_multisample",
          get: function get() {
            return this._WEBGL_texture_storage_multisample;
          }
        }, {
          key: "WEBGL_debug_shaders",
          get: function get() {
            return this._WEBGL_debug_shaders;
          }
        }, {
          key: "WEBGL_lose_context",
          get: function get() {
            return this._WEBGL_lose_context;
          }
        }]), r;
      }(oe));

      he.WebGL2Device = lt;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/graphics-f8140643.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./renderable-2d-f6cb180f.js", "./vertex-format-bf491aa3.js"], function (t) {
  "use strict";

  var e, i, s, o, n, r, l, h, a, c, u, p, f, d, m, _, b, T, v, g, y, C, E, D, R, L, P, M, O, x, w, U, S, B, N, k;

  return {
    setters: [function (t) {
      e = t.cK, i = t.ec, s = t.c3, o = t.cj, n = t.aH, r = t.x, l = t.ef, h = t.ek, a = t.dQ, c = t.d, u = t.l, p = t.aq, f = t.z, d = t.G, m = t.di, _ = t.a3, b = t.e2, T = t.eg, v = t.eu, g = t.gn, y = t.fZ, C = t.ga, E = t.f_, D = t.fU, R = t.go, L = t.eh, P = t.ed, M = t.ei;
    }, function (t) {
      O = t.d;
    }, function (t) {
      x = t.i;
    }, function () {}, function (t) {
      w = t.M, U = t.R, S = t.I;
    }, function (t) {
      B = t.d, N = t.b, k = t.g;
    }],
    execute: function execute() {
      var A, I, z;
      t({
        L: void 0,
        a: void 0,
        b: void 0
      }), function (t) {
        t[t.BUTT = 0] = "BUTT", t[t.ROUND = 1] = "ROUND", t[t.SQUARE = 2] = "SQUARE";
      }(A || (A = t("a", {}))), e(A), function (t) {
        t[t.BEVEL = 0] = "BEVEL", t[t.ROUND = 1] = "ROUND", t[t.MITER = 2] = "MITER";
      }(I || (I = t("L", {}))), e(I), function (t) {
        t[t.PT_CORNER = 1] = "PT_CORNER", t[t.PT_LEFT = 2] = "PT_LEFT", t[t.PT_BEVEL = 4] = "PT_BEVEL", t[t.PT_INNERBEVEL = 8] = "PT_INNERBEVEL";
      }(z || (z = t("b", {}))), e(z);
      var F = Math.PI,
          j = Math.min,
          V = Math.max,
          W = Math.cos,
          J = Math.sin,
          G = Math.abs,
          X = Math.sign,
          Y = .5522847493;

      function q(t, e, i, s, o) {
        t.moveTo(e - s, i), t.bezierCurveTo(e - s, i + o * Y, e - s * Y, i + o, e, i + o), t.bezierCurveTo(e + s * Y, i + o, e + s, i + o * Y, e + s, i), t.bezierCurveTo(e + s, i - o * Y, e + s * Y, i - o, e, i - o), t.bezierCurveTo(e - s * Y, i - o, e - s, i - o * Y, e - s, i), t.close();
      }

      function H(t, e, i, s, o, n, r, l, h, a, c) {
        var u, p, f, d, m, _, b, T, v, g, y, C, E, D, R, L;

        a > 10 || (m = .5 * (n + l), _ = .5 * (r + h), b = .5 * ((u = .5 * (e + s)) + (f = .5 * (s + n))), T = .5 * ((p = .5 * (i + o)) + (d = .5 * (o + r))), ((R = G((s - l) * (D = h - i) - (o - h) * (E = l - e))) + (L = G((n - l) * D - (r - h) * E))) * (R + L) < t.tessTol * (E * E + D * D) ? t.addPoint(l, h, 0 === c ? c | z.PT_BEVEL : c) : (H(t, e, i, u, p, b, T, y = .5 * (b + (v = .5 * (f + m))), C = .5 * (T + (g = .5 * (d + _))), a + 1, 0), H(t, y, C, v, g, m, _, l, h, a + 1, c)));
      }

      var K,
          Q,
          Z,
          $,
          tt,
          et,
          it,
          st,
          ot,
          nt,
          rt,
          lt,
          ht,
          at,
          ct,
          ut,
          pt,
          ft,
          dt,
          mt,
          _t,
          bt,
          Tt = t("P", function (t) {
        function e(e, i) {
          var s;
          return (s = t.call(this, e, i) || this).dx = 0, s.dy = 0, s.dmx = 0, s.dmy = 0, s.flags = 0, s.len = 0, s.reset(), s;
        }

        return i(e, t), e.prototype.reset = function () {
          this.dx = 0, this.dy = 0, this.dmx = 0, this.dmy = 0, this.flags = 0, this.len = 0;
        }, e;
      }(s)),
          vt = function () {
        function t() {
          this.closed = !1, this.bevel = 0, this.complex = !0, this.points = [], this.reset();
        }

        return t.prototype.reset = function () {
          this.closed = !1, this.bevel = 0, this.complex = !0, this.points ? this.points.length = 0 : this.points = [];
        }, t;
      }(),
          gt = function () {
        function t() {
          this.dataOffset = 0, this.updatePathOffset = !1, this.pathLength = 0, this.pathOffset = 0, this.paths = [], this.tessTol = .25, this.distTol = .01, this.fillColor = o.WHITE.clone(), this.lineCap = A.BUTT, this.strokeColor = o.BLACK.clone(), this.lineJoin = I.MITER, this.lineWidth = 0, this.pointsOffset = 0, this._commandX = 0, this._commandY = 0, this._points = [], this._renderDataList = [], this._curPath = null;
        }

        var e = t.prototype;
        return e.moveTo = function (t, e) {
          this.updatePathOffset && (this.pathOffset = this.pathLength, this.updatePathOffset = !1), this._addPath(), this.addPoint(t, e, z.PT_CORNER), this._commandX = t, this._commandY = e;
        }, e.lineTo = function (t, e) {
          this.addPoint(t, e, z.PT_CORNER), this._commandX = t, this._commandY = e;
        }, e.bezierCurveTo = function (t, e, i, s, o, n) {
          var r = this._curPath,
              l = r.points[r.points.length - 1];
          l && (l.x !== t || l.y !== e || i !== o || s !== n ? (H(this, l.x, l.y, t, e, i, s, o, n, 0, z.PT_CORNER), this._commandX = o, this._commandY = n) : this.lineTo(o, n));
        }, e.quadraticCurveTo = function (t, e, i, s) {
          var o = this._commandX,
              n = this._commandY;
          this.bezierCurveTo(o + 2 / 3 * (t - o), n + 2 / 3 * (e - n), i + 2 / 3 * (t - i), s + 2 / 3 * (e - s), i, s);
        }, e.arc = function (t, e, i, s, o, n) {
          !function (t, e, i, s, o, n, r) {
            var l,
                h,
                a = 0,
                c = 0,
                u = 0,
                p = 0,
                f = 0,
                d = 0,
                m = 0,
                _ = 0,
                b = 0,
                T = 0,
                v = 0,
                g = 0,
                y = 0,
                C = 0;
            if (c = n - o, r = r || !1) {
              if (G(c) >= 2 * F) c = 2 * F;else for (; c < 0;) {
                c += 2 * F;
              }
            } else if (G(c) >= 2 * F) c = 2 * -F;else for (; c > 0;) {
              c -= 2 * F;
            }

            for (h = 0 | V(1, j(G(c) / (.5 * F) + .5, 5)), u = G(4 / 3 * (1 - W(l = c / h / 2)) / J(l)), r || (u = -u), C = 0; C <= h; C++) {
              d = e + (p = W(a = o + c * (C / h))) * s, m = i + (f = J(a)) * s, _ = -f * s * u, b = p * s * u, 0 === C ? t.moveTo(d, m) : t.bezierCurveTo(T + g, v + y, d - _, m - b, d, m), T = d, v = m, g = _, y = b;
            }
          }(this, t, e, i, s, o, n);
        }, e.ellipse = function (t, e, i, s) {
          q(this, t, e, i, s), this._curPath.complex = !1;
        }, e.circle = function (t, e, i) {
          q(this, t, e, i, i), this._curPath.complex = !1;
        }, e.rect = function (t, e, i, s) {
          this.moveTo(t, e), this.lineTo(t + i, e), this.lineTo(t + i, e + s), this.lineTo(t, e + s), this.close(), this._curPath.complex = !1;
        }, e.roundRect = function (t, e, i, s, o) {
          !function (t, e, i, s, o, n) {
            if (n < .1) t.rect(e, i, s, o);else {
              var r = j(n, .5 * G(s)) * X(s),
                  l = j(n, .5 * G(o)) * X(o);
              t.moveTo(e, i + l), t.lineTo(e, i + o - l), t.bezierCurveTo(e, i + o - l * (1 - Y), e + r * (1 - Y), i + o, e + r, i + o), t.lineTo(e + s - r, i + o), t.bezierCurveTo(e + s - r * (1 - Y), i + o, e + s, i + o - l * (1 - Y), e + s, i + o - l), t.lineTo(e + s, i + l), t.bezierCurveTo(e + s, i + l * (1 - Y), e + s - r * (1 - Y), i, e + s - r, i), t.lineTo(e + r, i), t.bezierCurveTo(e + r * (1 - Y), i, e, i + l * (1 - Y), e, i + l), t.close();
            }
          }(this, t, e, i, s, o), this._curPath.complex = !1;
        }, e.clear = function () {
          this.pathLength = 0, this.pathOffset = 0, this.pointsOffset = 0, this.dataOffset = 0, this._curPath = null, this.paths.length = 0, this._points.length = 0;

          for (var t = this._renderDataList, e = 0, i = t.length; e < i; e++) {
            var s = t[e];
            s && w.remove(s);
          }

          this._renderDataList.length = 0;
        }, e.close = function () {
          this._curPath.closed = !0;
        }, e.requestRenderData = function () {
          var t = w.add();
          return this._renderDataList.push(t), t;
        }, e.getRenderDataList = function () {
          return 0 === this._renderDataList.length && this.requestRenderData(), this._renderDataList;
        }, e.addPoint = function (t, e, i) {
          var s = this._curPath;

          if (s) {
            var o = this._points,
                n = s.points,
                r = o[this.pointsOffset++];
            r ? (r.x = t, r.y = e) : (r = new Tt(t, e), o.push(r)), r.flags = i, n.push(r);
          }
        }, e._addPath = function () {
          var t = this.pathLength,
              e = this.paths[t];
          return e ? e.reset() : (e = new vt(), this.paths.push(e)), this.pathLength++, this._curPath = e, e;
        }, t;
      }(),
          yt = B.concat([new n("a_dist", r.R32F)]),
          Ct = N(yt),
          Et = k(yt);

      t("G", (K = l("cc.Graphics"), Q = y(), Z = C(110), $ = E(), tt = h(I), et = D(), it = h(A), st = D(), ot = D(), nt = D(), rt = D(), lt = R(), K(ht = Q(ht = Z(ht = $((bt = _t = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this).impl = null, e.model = null, L(e, "_lineWidth", ct, P(e)), L(e, "_strokeColor", ut, P(e)), L(e, "_lineJoin", pt, P(e)), L(e, "_lineCap", ft, P(e)), L(e, "_fillColor", dt, P(e)), L(e, "_miterLimit", mt, P(e)), e._isDrawing = !1, e._isNeedUploadData = !0, e._graphicsUseSubMeshes = [], e._instanceMaterialType = S.ADD_COLOR, e.impl = new gt(), e;
        }

        i(e, t);
        var s = e.prototype;
        return s.onRestore = function () {
          this.impl || this._flushAssembler();
        }, s.onLoad = function () {
          this.model = O.root.createModel(x), this.model.node = this.model.transform = this.node, this._flushAssembler();
        }, s.onEnable = function () {
          t.prototype.onEnable.call(this), this._updateMtlForGraphics();
        }, s.onDisable = function () {
          t.prototype.onDisable.call(this);
        }, s.onDestroy = function () {
          t.prototype.onDestroy.call(this), this._sceneGetter = null, this.model && (O.root.destroyModel(this.model), this.model = null);
          var e = this._graphicsUseSubMeshes.length;

          if (e > 0) {
            for (var i = 0; i < e; ++i) {
              this._graphicsUseSubMeshes[i].destroy();
            }

            this._graphicsUseSubMeshes.length = 0;
          }

          this.impl && (this._isDrawing = !1, this.impl.clear(), this.impl = null);
        }, s.moveTo = function (t, e) {
          this.impl && this.impl.moveTo(t, e);
        }, s.lineTo = function (t, e) {
          this.impl && this.impl.lineTo(t, e);
        }, s.bezierCurveTo = function (t, e, i, s, o, n) {
          this.impl && this.impl.bezierCurveTo(t, e, i, s, o, n);
        }, s.quadraticCurveTo = function (t, e, i, s) {
          this.impl && this.impl.quadraticCurveTo(t, e, i, s);
        }, s.arc = function (t, e, i, s, o, n) {
          this.impl && this.impl.arc(t, e, i, s, o, n);
        }, s.ellipse = function (t, e, i, s) {
          this.impl && this.impl.ellipse(t, e, i, s);
        }, s.circle = function (t, e, i) {
          this.impl && this.impl.circle(t, e, i);
        }, s.rect = function (t, e, i, s) {
          this.impl && this.impl.rect(t, e, i, s);
        }, s.roundRect = function (t, e, i, s, o) {
          this.impl && this.impl.roundRect(t, e, i, s, o);
        }, s.fillRect = function (t, e, i, s) {
          this.rect(t, e, i, s), this.fill();
        }, s.clear = function () {
          if (this.impl) {
            if (this.impl.clear(), this._isDrawing = !1, this.model) for (var t = 0; t < this.model.subModels.length; t++) {
              this.model.subModels[t].inputAssembler.indexCount = 0;
            }
            this.markForUpdateRenderData();
          }
        }, s.close = function () {
          this.impl && this.impl.close();
        }, s.stroke = function () {
          this._assembler || this._flushAssembler(), this._isDrawing = !0, this._isNeedUploadData = !0, this._assembler.stroke(this);
        }, s.fill = function () {
          this._assembler || this._flushAssembler(), this._isDrawing = !0, this._isNeedUploadData = !0, this._assembler.fill(this);
        }, s._updateMtlForGraphics = function () {
          var t;
          this._customMaterial ? t = this.getMaterialInstance(0) : (t = a.get("ui-graphics-material"), this.setMaterial(t, 0), (t = this.getMaterialInstance(0)).recompileShaders({
            USE_LOCAL: !0
          }));
        }, s.activeSubModel = function (t) {
          if (this.model) {
            if (this.model.subModels.length <= t) {
              var e = u.director.root.device,
                  i = e.createBuffer(new p(f.VERTEX | f.TRANSFER_DST, d.DEVICE, 65535 * Et, Et)),
                  s = e.createBuffer(new p(f.INDEX | f.TRANSFER_DST, d.DEVICE, 131070 * Uint16Array.BYTES_PER_ELEMENT, Uint16Array.BYTES_PER_ELEMENT)),
                  o = new m([i], yt, _.TRIANGLE_LIST, s);
              o.subMeshIdx = 0, this.model.initSubModel(t, o, this.getMaterialInstance(0)), this._graphicsUseSubMeshes.push(o);
            }
          } else c(4500, this.node.name);
        }, s._uploadData = function (t) {
          var e = this.impl;

          if (e) {
            var i = e && e.getRenderDataList();

            if (!(i.length <= 0) && this.model) {
              for (var s = this.model.subModels, o = 0; o < i.length; o++) {
                var n = i[o],
                    r = s[o].inputAssembler;

                if (n.lastFilledVertex !== n.vertexStart) {
                  var l = new Float32Array(n.vData.buffer, 0, n.vertexStart * Ct);
                  r.vertexBuffers[0].update(l), r.vertexCount = n.vertexStart;
                  var h = new Uint16Array(n.iData.buffer, 0, n.indicesStart);
                  r.indexBuffer.update(h), r.indexCount = n.indicesStart, n.lastFilledVertex = n.vertexStart, n.lastFilledIndices = n.indicesStart;
                }
              }

              t.removeUploadBuffersFunc(this), this._isNeedUploadData = !1;
            }
          }
        }, s._render = function (t) {
          if (this._isNeedUploadData) {
            if (this.impl) {
              var e = this.impl.getRenderDataList(),
                  i = this.model.subModels.length;
              if (e.length > i) for (var s = i; s < e.length; s++) {
                this.activeSubModel(s);
              }
            }

            t.addUploadBuffersFunc(this, this._uploadData);
          }

          t.commitModel(this, this.model, this.getMaterialInstance(0));
        }, s._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this._assembler = t);
        }, s._canRender = function () {
          return !!t.prototype._canRender.call(this) && !!this.model && this._isDrawing;
        }, b(e, [{
          key: "lineWidth",
          get: function get() {
            return this._lineWidth;
          },
          set: function set(t) {
            this._lineWidth = t, this.impl && (this.impl.lineWidth = t);
          }
        }, {
          key: "lineJoin",
          get: function get() {
            return this._lineJoin;
          },
          set: function set(t) {
            this._lineJoin = t, this.impl && (this.impl.lineJoin = t);
          }
        }, {
          key: "lineCap",
          get: function get() {
            return this._lineCap;
          },
          set: function set(t) {
            this._lineCap = t, this.impl && (this.impl.lineCap = t);
          }
        }, {
          key: "strokeColor",
          get: function get() {
            return this._strokeColor;
          },
          set: function set(t) {
            this.impl && (this._strokeColor.set(t), this.impl.strokeColor = this._strokeColor);
          }
        }, {
          key: "fillColor",
          get: function get() {
            return this._fillColor;
          },
          set: function set(t) {
            this.impl && (this._fillColor.set(t), this.impl.fillColor = this._fillColor);
          }
        }, {
          key: "miterLimit",
          get: function get() {
            return this._miterLimit;
          },
          set: function set(t) {
            this._miterLimit = t;
          }
        }, {
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color !== t && this._color.set(t);
          }
        }, {
          key: "srcBlendFactor",
          get: function get() {
            return this._srcBlendFactor;
          },
          set: function set() {}
        }, {
          key: "dstBlendFactor",
          get: function get() {
            return this._dstBlendFactor;
          },
          set: function set() {}
        }]), e;
      }(U), _t.LineJoin = I, _t.LineCap = A, T((at = bt).prototype, "lineWidth", [v], Object.getOwnPropertyDescriptor(at.prototype, "lineWidth"), at.prototype), T(at.prototype, "lineJoin", [tt, et], Object.getOwnPropertyDescriptor(at.prototype, "lineJoin"), at.prototype), T(at.prototype, "lineCap", [it, st], Object.getOwnPropertyDescriptor(at.prototype, "lineCap"), at.prototype), T(at.prototype, "strokeColor", [ot], Object.getOwnPropertyDescriptor(at.prototype, "strokeColor"), at.prototype), T(at.prototype, "fillColor", [nt], Object.getOwnPropertyDescriptor(at.prototype, "fillColor"), at.prototype), T(at.prototype, "miterLimit", [rt], Object.getOwnPropertyDescriptor(at.prototype, "miterLimit"), at.prototype), T(at.prototype, "color", [g, lt], Object.getOwnPropertyDescriptor(at.prototype, "color"), at.prototype), ct = T(at.prototype, "_lineWidth", [M], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), ut = T(at.prototype, "_strokeColor", [M], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return o.BLACK.clone();
        }
      }), pt = T(at.prototype, "_lineJoin", [M], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return I.MITER;
        }
      }), ft = T(at.prototype, "_lineCap", [M], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return A.BUTT;
        }
      }), dt = T(at.prototype, "_fillColor", [M], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return o.WHITE.clone();
        }
      }), mt = T(at.prototype, "_miterLimit", [M], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 10;
        }
      }), ht = at)) || ht) || ht) || ht) || ht));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/index-31f38084.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./sprite-frame-1c023836.js", "./sprite-723e419c.js", "./renderable-2d-f6cb180f.js", "./graphics-f8140643.js", "./vertex-format-bf491aa3.js", "./deprecated-81ea4bff.js", "./deprecated-ddee6a28.js"], function (t) {
  "use strict";

  var e, r, a, i, n, s, o, h, u, c, l, f, d, v, p, _, x, g, y, m, S, D, w, B, C, b, M, T, F, L, A, R, E, P, O, H, I, N, k, z, V, U, W, Z, q, G, X, j, K, Q, J, Y, $, tt, et, rt, at, it, nt, st, ot;

  return {
    setters: [function (t) {
      e = t.c5, r = t.cc, a = t.cj, i = t.ch, n = t.cf, s = t.c3, o = t.fO, h = t.fw, u = t.V, c = t.l, l = t.t, f = t.c, d = t.f, v = t.dB, p = t.e2, _ = t.e8, x = t.gG, g = t.aU, y = t.R, m = t.dr, S = t.C, D = t.P, w = t.aq, B = t.z, C = t.G, b = t.d;
    }, function (t) {
      M = t.s, T = t.t;
    }, function (t) {
      F = t.d, L = t.S;
    }, function (t) {
      A = t.h, R = t.O, E = t.e, P = t.i, O = t.H, H = t.V, I = t.j, N = t.k, k = t.c, z = t.s, V = t.f, U = t.d, W = t.g, Z = t.B, q = t.a, G = t.T;
    }, function (t) {
      X = t.S, j = t.a;
    }, function (t) {
      K = t.L, Q = t.a, J = t.P, Y = t.b, $ = t.G;
    }, function (t) {
      tt = t.c, et = t.g;
    }, function (t) {
      rt = t.L, at = t.c, it = t.a, nt = t.e, st = t.M, ot = t.D;
    }, function () {}],
    execute: function execute() {
      t("e", Rt);
      var ht = new e(),
          ut = new r();

      function ct(t, r, i, n) {
        var s = i.data,
            o = r.acquireBufferBatch(),
            h = o.byteOffset >> 2,
            u = i.vertexCount,
            c = o.indicesOffset,
            l = o.vertexOffset;
        o.request(u, i.indicesCount) || (o = r.currBufferBatch, h = 0, c = 0, l = 0);
        var f = o.vData,
            d = o.iData;
        t.getWorldMatrix(ut);

        for (var v = 0; v < u; v++) {
          var p = s[v];
          e.set(ht, p.x, p.y, 0), e.transformMat4(ht, ht, ut), f[h++] = ht.x, f[h++] = ht.y, f[h++] = ht.z, f[h++] = p.u, f[h++] = p.v, a.toArray(f, n, h), h += 4;
        }

        for (var _ = 0, x = u / 4; _ < x; _++) {
          var g = l + 4 * _;
          d[c++] = g, d[c++] = g + 1, d[c++] = g + 2, d[c++] = g + 1, d[c++] = g + 3, d[c++] = g + 2;
        }
      }

      var lt = function lt(t, e, r) {
        this.i = void 0, this.x = void 0, this.y = void 0, this.prev = null, this.next = null, this.z = 0, this.prevZ = null, this.nextZ = null, this.steiner = !1, this.i = t, this.x = e, this.y = r;
      };

      function ft(t, e, r, a, i) {
        var n = 0,
            s = null;
        if (i === function (t, e, r, a) {
          for (var i = 0, n = e, s = r - a; n < r; n += a) {
            i += (t[s] - t[n]) * (t[n + 1] + t[s + 1]), s = n;
          }

          return i;
        }(t, e, r, a) > 0) for (n = e; n < r; n += a) {
          s = Lt(n, t[n], t[n + 1], s);
        } else for (n = r - a; n >= e; n -= a) {
          s = Lt(n, t[n], t[n + 1], s);
        }
        return s && bt(s, s.next) && (At(s), s = s.next), s;
      }

      function dt(t, e) {
        if (void 0 === e && (e = null), !t) return t;
        e || (e = t);
        var r = t,
            a = !1;

        do {
          if (a = !1, r.steiner || !bt(r, r.next) && 0 !== Ct(r.prev, r, r.next)) r = r.next;else {
            if (At(r), (r = e = r.prev) === r.next) return null;
            a = !0;
          }
        } while (a || r !== e);

        return e;
      }

      function vt(t, e, r, a, i, n, s) {
        if (void 0 === s && (s = 0), t) {
          !s && n && function (t, e, r, a) {
            var i = t;

            do {
              null === i.z && (i.z = St(i.x, i.y, e, r, a)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
            } while (i !== t);

            i.prevZ.nextZ = null, i.prevZ = null, function (t) {
              var e = 0,
                  r = null,
                  a = null,
                  i = null,
                  n = null,
                  s = 0,
                  o = 0,
                  h = 0,
                  u = 1;

              do {
                for (r = t, t = null, n = null, s = 0; r;) {
                  for (s++, a = r, o = 0, e = 0; e < u && (o++, a = a.nextZ); e++) {
                    ;
                  }

                  for (h = u; o > 0 || h > 0 && a;) {
                    0 === o ? (i = a, a = a.nextZ, h--) : 0 !== h && a ? r.z <= a.z ? (i = r, r = r.nextZ, o--) : (i = a, a = a.nextZ, h--) : (i = r, r = r.nextZ, o--), n ? n.nextZ = i : t = i, i.prevZ = n, n = i;
                  }

                  r = a;
                }

                n.nextZ = null, u *= 2;
              } while (s > 1);
            }(i);
          }(t, a, i, n);

          for (var o = t, h = null, u = null; t.prev !== t.next;) {
            if (h = t.prev, u = t.next, n ? _t(t, a, i, n) : pt(t)) e.push(h.i / r), e.push(t.i / r), e.push(u.i / r), At(t), t = u.next, o = u.next;else if ((t = u) === o) {
              s ? 1 === s ? vt(t = xt(t, e, r), e, r, a, i, n, 2) : 2 === s && gt(t, e, r, a, i, n) : vt(dt(t), e, r, a, i, n, 1);
              break;
            }
          }
        }
      }

      function pt(t) {
        var e = t.prev,
            r = t,
            a = t.next;
        if (Ct(e, r, a) >= 0) return !1;

        for (var i = t.next.next; i !== t.prev;) {
          if (wt(e.x, e.y, r.x, r.y, a.x, a.y, i.x, i.y) && Ct(i.prev, i, i.next) >= 0) return !1;
          i = i.next;
        }

        return !0;
      }

      function _t(t, e, r, a) {
        var i = t.prev,
            n = t,
            s = t.next;
        if (Ct(i, n, s) >= 0) return !1;

        for (var o = i.x < n.x ? i.x < s.x ? i.x : s.x : n.x < s.x ? n.x : s.x, h = i.y < n.y ? i.y < s.y ? i.y : s.y : n.y < s.y ? n.y : s.y, u = i.x > n.x ? i.x > s.x ? i.x : s.x : n.x > s.x ? n.x : s.x, c = i.y > n.y ? i.y > s.y ? i.y : s.y : n.y > s.y ? n.y : s.y, l = St(o, h, e, r, a), f = St(u, c, e, r, a), d = t.nextZ; d && d.z <= f;) {
          if (d !== t.prev && d !== t.next && wt(i.x, i.y, n.x, n.y, s.x, s.y, d.x, d.y) && Ct(d.prev, d, d.next) >= 0) return !1;
          d = d.nextZ;
        }

        for (d = t.prevZ; d && d.z >= l;) {
          if (d !== t.prev && d !== t.next && wt(i.x, i.y, n.x, n.y, s.x, s.y, d.x, d.y) && Ct(d.prev, d, d.next) >= 0) return !1;
          d = d.prevZ;
        }

        return !0;
      }

      function xt(t, e, r) {
        var a = t;

        do {
          var i = a.prev,
              n = a.next.next;
          !bt(i, n) && Mt(i, a, a.next, n) && Tt(i, n) && Tt(n, i) && (e.push(i.i / r), e.push(a.i / r), e.push(n.i / r), At(a), At(a.next), a = t = n), a = a.next;
        } while (a !== t);

        return a;
      }

      function gt(t, e, r, a, i, n) {
        var s = t;

        do {
          for (var o = s.next.next; o !== s.prev;) {
            if (s.i !== o.i && Bt(s, o)) {
              var h = Ft(s, o);
              return s = dt(s, s.next), h = dt(h, h.next), vt(s, e, r, a, i, n), void vt(h, e, r, a, i, n);
            }

            o = o.next;
          }

          s = s.next;
        } while (s !== t);
      }

      function yt(t, e) {
        return t.x - e.x;
      }

      function mt(t, e) {
        if (e = function (t, e) {
          var r = e,
              a = t.x,
              i = t.y,
              n = -1 / 0,
              s = null;

          do {
            if (i <= r.y && i >= r.next.y) {
              var o = r.x + (i - r.y) * (r.next.x - r.x) / (r.next.y - r.y);

              if (o <= a && o > n) {
                if (n = o, o === a) {
                  if (i === r.y) return r;
                  if (i === r.next.y) return r.next;
                }

                s = r.x < r.next.x ? r : r.next;
              }
            }

            r = r.next;
          } while (r !== e);

          if (!s) return null;
          if (a === n) return s.prev;
          var h,
              u = s,
              c = s.x,
              l = s.y,
              f = 1 / 0;

          for (r = s.next; r !== u;) {
            a >= r.x && r.x >= c && wt(i < l ? a : n, i, c, l, i < l ? n : a, i, r.x, r.y) && ((h = Math.abs(i - r.y) / (a - r.x)) < f || h === f && r.x > s.x) && Tt(r, t) && (s = r, f = h), r = r.next;
          }

          return s;
        }(t, e)) {
          var r = Ft(e, t);
          dt(r, r.next);
        }
      }

      function St(t, e, r, a, i) {
        return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - r) / i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - a) / i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1;
      }

      function Dt(t) {
        var e = t,
            r = t;

        do {
          e.x < r.x && (r = e), e = e.next;
        } while (e !== t);

        return r;
      }

      function wt(t, e, r, a, i, n, s, o) {
        return (i - s) * (e - o) - (t - s) * (n - o) >= 0 && (t - s) * (a - o) - (r - s) * (e - o) >= 0 && (r - s) * (n - o) - (i - s) * (a - o) >= 0;
      }

      function Bt(t, e) {
        return t.next.i !== e.i && t.prev.i !== e.i && !function (t, e) {
          var r = t;

          do {
            if (r.i !== t.i && r.next.i !== t.i && r.i !== e.i && r.next.i !== e.i && Mt(r, r.next, t, e)) return !0;
            r = r.next;
          } while (r !== t);

          return !1;
        }(t, e) && Tt(t, e) && Tt(e, t) && function (t, e) {
          var r = t,
              a = !1,
              i = (t.x + e.x) / 2,
              n = (t.y + e.y) / 2;

          do {
            r.y > n != r.next.y > n && i < (r.next.x - r.x) * (n - r.y) / (r.next.y - r.y) + r.x && (a = !a), r = r.next;
          } while (r !== t);

          return a;
        }(t, e);
      }

      function Ct(t, e, r) {
        return (e.y - t.y) * (r.x - e.x) - (e.x - t.x) * (r.y - e.y);
      }

      function bt(t, e) {
        return t.x === e.x && t.y === e.y;
      }

      function Mt(t, e, r, a) {
        return !!(bt(t, e) && bt(r, a) || bt(t, a) && bt(r, e)) || Ct(t, e, r) > 0 != Ct(t, e, a) > 0 && Ct(r, a, t) > 0 != Ct(r, a, e) > 0;
      }

      function Tt(t, e) {
        return Ct(t.prev, t, t.next) < 0 ? Ct(t, e, t.next) >= 0 && Ct(t, t.prev, e) >= 0 : Ct(t, e, t.prev) < 0 || Ct(t, t.next, e) < 0;
      }

      function Ft(t, e) {
        var r = new lt(t.i, t.x, t.y),
            a = new lt(e.i, e.x, e.y),
            i = t.next,
            n = e.prev;
        return t.next = e, e.prev = t, r.next = i, i.prev = r, a.next = r, r.prev = a, n.next = a, a.prev = n, a;
      }

      function Lt(t, e, r, a) {
        var i = new lt(t, e, r);
        return a ? (i.next = a.next, i.prev = a, a.next.prev = i, a.next = i) : (i.prev = i, i.next = i), i;
      }

      function At(t) {
        t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);
      }

      function Rt(t, e, r) {
        r = r || 3;
        var a = e ? e.length : 0,
            i = a ? e[0] * r : t.length,
            n = ft(t, 0, i, r, !0),
            s = [];
        if (!n) return s;
        var o = 0,
            h = 0,
            u = 0,
            c = 0,
            l = 0,
            f = 0,
            d = 0;

        if (a && (n = function (t, e, r, a) {
          var i,
              n = [],
              s = 0,
              o = null;

          for (s = 0, i = e.length; s < i; s++) {
            (o = ft(t, e[s] * a, s < i - 1 ? e[s + 1] * a : t.length, a, !1)) && (o === o.next && (o.steiner = !0), n.push(Dt(o)));
          }

          if (n.sort(yt), !r) return r;

          for (s = 0; s < n.length; s++) {
            mt(n[s], r), r = dt(r, r.next);
          }

          return r;
        }(t, e, n, r)), t.length > 80 * r) {
          o = u = t[0], h = c = t[1];

          for (var v = r; v < i; v += r) {
            (l = t[v]) < o && (o = l), (f = t[v + 1]) < h && (h = f), l > u && (u = l), f > c && (c = f);
          }

          d = Math.max(u - o, c - h);
        }

        return vt(n, s, r, o, h, d), s;
      }

      for (var Et = Math.PI, Pt = Math.min, Ot = Math.max, Ht = Math.ceil, It = Math.acos, Nt = Math.cos, kt = Math.sin, zt = Math.atan2, Vt = null, Ut = null, Wt = new a(), Zt = [], qt = 0; qt < 4; qt++) {
        Zt.push(new e());
      }

      function Gt(t, e, r) {
        return t < e ? e : t > r ? r : t;
      }

      var Xt = {
        useModel: !0,
        updateRenderData: function updateRenderData() {},
        fillBuffers: function fillBuffers() {},
        renderIA: function renderIA() {},
        getRenderData: function getRenderData(t, e) {
          if (!Ut) return null;
          var r = Ut.getRenderDataList(),
              a = r[Ut.dataOffset];
          if (!a) return null;
          var i = a,
              n = i ? i.vertexStart + e : 0;
          return (n > 65535 || 3 * n > 131070) && (++Ut.dataOffset, Ut.dataOffset < r.length ? a = r[Ut.dataOffset] : (a = Ut.requestRenderData(), r[Ut.dataOffset] = a), i = a), i && i.vertexCount < n && i.request(e, 3 * e), a;
        },
        stroke: function stroke(t) {
          a.copy(Wt, t.strokeColor), t.impl && (this._flattenPaths(t.impl), this._expandStroke(t), t.impl.updatePathOffset = !0, this.end(t));
        },
        fill: function fill(t) {
          a.copy(Wt, t.fillColor), this._expandFill(t), t.impl && (t.impl.updatePathOffset = !0), this.end(t);
        },
        end: function end(t) {
          t.markForUpdateRenderData();
        },
        _expandStroke: function _expandStroke(t) {
          var e = .5 * t.lineWidth,
              r = t.lineCap,
              a = t.lineJoin,
              i = t.miterLimit;

          if (Ut = t.impl) {
            var n,
                s,
                o,
                h,
                u = (n = e, s = Et, o = Ut.tessTol, h = 2 * It(n / (n + o)), Ot(2, Ht(s / h)));

            this._calculateJoins(Ut, e, a, i);

            for (var c = Ut.paths, l = 0, f = Ut.pathOffset, d = Ut.pathLength; f < d; f++) {
              var v = c[f],
                  p = v.points.length;
              a === K.ROUND ? l += 2 * (p + v.bevel * (u + 2) + 1) : l += 2 * (p + 5 * v.bevel + 1), v.closed || (r === Q.ROUND ? l += 2 * (2 * u + 2) : l += 12);
            }

            var _ = Vt = this.getRenderData(t, l);

            if (_) {
              for (var x = _.vData, g = _.iData, y = Ut.pathOffset, m = Ut.pathLength; y < m; y++) {
                var S = c[y],
                    D = S.points,
                    w = D.length,
                    B = _.vertexStart,
                    C = void 0,
                    b = void 0,
                    M = 0,
                    T = 0,
                    F = S.closed;

                if (F ? (C = D[w - 1], b = D[0], M = 0, T = w) : (C = D[0], b = D[1], M = 1, T = w - 1), b = b || C, !F) {
                  var L = new J(b.x, b.y);
                  L.subtract(C), L.normalize();
                  var A = L.x,
                      R = L.y;
                  r === Q.BUTT ? this._buttCapStart(C, A, R, e, 0) : r === Q.SQUARE ? this._buttCapStart(C, A, R, e, e) : r === Q.ROUND && this._roundCapStart(C, A, R, e, u);
                }

                for (var E = M; E < T; ++E) {
                  a === K.ROUND ? this._roundJoin(C, b, e, e, u) : 0 != (b.flags & (Y.PT_BEVEL | Y.PT_INNERBEVEL)) ? this._bevelJoin(C, b, e, e) : (this._vSet(b.x + b.dmx * e, b.y + b.dmy * e, 1), this._vSet(b.x - b.dmx * e, b.y - b.dmy * e, -1)), C = b, b = D[E + 1];
                }

                if (F) {
                  var P = 8 * B;
                  this._vSet(x[P], x[P + 1], 1), this._vSet(x[P + 8], x[P + 8 + 1], -1);
                } else {
                  var O = new J(b.x, b.y);
                  O.subtract(C), O.normalize();
                  var H = O.x,
                      I = O.y;
                  r === Q.BUTT ? this._buttCapEnd(b, H, I, e, 0) : r === Q.SQUARE ? this._buttCapEnd(b, H, I, e, e) : r === Q.ROUND && this._roundCapEnd(b, H, I, e, u);
                }

                for (var N = _.indicesStart, k = B + 2, z = _.vertexStart; k < z; k++) {
                  g[N++] = k - 2, g[N++] = k - 1, g[N++] = k;
                }

                _.indicesStart = N;
              }

              Vt = null, Ut = null;
            }
          }
        },
        _expandFill: function _expandFill(t) {
          if (Ut = t.impl) {
            for (var e = Ut.paths, r = 0, a = Ut.pathOffset, i = Ut.pathLength; a < i; a++) {
              r += e[a].points.length;
            }

            var n = Vt = this.getRenderData(t, r);

            if (n) {
              for (var s = n, o = s.vData, h = s.iData, u = Ut.pathOffset, c = Ut.pathLength; u < c; u++) {
                var l = e[u],
                    f = l.points,
                    d = f.length;

                if (0 !== d) {
                  for (var v = n.vertexStart, p = 0; p < d; ++p) {
                    this._vSet(f[p].x, f[p].y);
                  }

                  var _ = n.indicesStart;

                  if (l.complex) {
                    for (var x = [], g = v, y = n.vertexStart; g < y; g++) {
                      var m = 8 * g;
                      x.push(o[m++]), x.push(o[m++]), x.push(o[m++]);
                    }

                    var S = Rt(x, null, 3);
                    if (!S || 0 === S.length) continue;

                    for (var D = 0, w = S.length; D < w; D++) {
                      h[_++] = S[D] + v;
                    }
                  } else for (var B = v, C = v + 2, b = s.vertexStart; C < b; C++) {
                    h[_++] = B, h[_++] = C - 1, h[_++] = C;
                  }

                  s.indicesStart = _;
                }
              }

              Vt = null, Ut = null;
            }
          }
        },
        _calculateJoins: function _calculateJoins(t, e, r, a) {
          var i = 0;
          e > 0 && (i = 1 / e);

          for (var n = t.paths, s = t.pathOffset, o = t.pathLength; s < o; s++) {
            var h = n[s],
                u = h.points,
                c = u.length,
                l = u[c - 1],
                f = u[0];
            h.bevel = 0;

            for (var d = 0; d < c; d++) {
              var v,
                  p,
                  _ = l.dy,
                  x = -l.dx,
                  g = f.dy,
                  y = -f.dx;

              if (f.dmx = .5 * (_ + g), f.dmy = .5 * (x + y), (v = f.dmx * f.dmx + f.dmy * f.dmy) > 1e-6) {
                var m = 1 / v;
                m > 600 && (m = 600), f.dmx *= m, f.dmy *= m;
              }

              f.dx * l.dy - l.dx * f.dy > 0 && (f.flags |= Y.PT_LEFT), v * (p = Ot(11, Pt(l.len, f.len) * i)) * p < 1 && (f.flags |= Y.PT_INNERBEVEL), f.flags & Y.PT_CORNER && (v * a * a < 1 || r === K.BEVEL || r === K.ROUND) && (f.flags |= Y.PT_BEVEL), 0 != (f.flags & (Y.PT_BEVEL | Y.PT_INNERBEVEL)) && h.bevel++, l = f, f = u[d + 1];
            }
          }
        },
        _flattenPaths: function _flattenPaths(t) {
          for (var e = t.paths, r = t.pathOffset, a = t.pathLength; r < a; r++) {
            var i = e[r],
                n = i.points,
                s = n[n.length - 1],
                o = n[0];
            n.length > 2 && s.equals(o) && (i.closed = !0, n.pop(), s = n[n.length - 1]);

            for (var h = 0, u = n.length; h < u; h++) {
              var c = new J(o.x, o.y);
              c.subtract(s), s.len = c.length(), (c.x || c.y) && c.normalize(), s.dx = c.x, s.dy = c.y, s = o, o = n[h + 1];
            }
          }
        },
        _chooseBevel: function _chooseBevel(t, e, r, a) {
          var i = r.x,
              n = r.y,
              s = 0,
              o = 0,
              h = 0,
              u = 0;
          return 0 !== t ? (s = i + e.dy * a, o = n - e.dx * a, h = i + r.dy * a, u = n - r.dx * a) : (s = h = i + r.dmx * a, o = u = n + r.dmy * a), [s, o, h, u];
        },
        _buttCapStart: function _buttCapStart(t, e, r, a, i) {
          var n = t.x - e * i,
              s = t.y - r * i,
              o = r,
              h = -e;
          this._vSet(n + o * a, s + h * a, 1), this._vSet(n - o * a, s - h * a, -1);
        },
        _buttCapEnd: function _buttCapEnd(t, e, r, a, i) {
          var n = t.x + e * i,
              s = t.y + r * i,
              o = r,
              h = -e;
          this._vSet(n + o * a, s + h * a, 1), this._vSet(n - o * a, s - h * a, -1);
        },
        _roundCapStart: function _roundCapStart(t, e, r, a, i) {
          for (var n = t.x, s = t.y, o = r, h = -e, u = 0; u < i; u++) {
            var c = u / (i - 1) * Et,
                l = Nt(c) * a,
                f = kt(c) * a;
            this._vSet(n - o * l - e * f, s - h * l - r * f, 1), this._vSet(n, s, 0);
          }

          this._vSet(n + o * a, s + h * a, 1), this._vSet(n - o * a, s - h * a, -1);
        },
        _roundCapEnd: function _roundCapEnd(t, e, r, a, i) {
          var n = t.x,
              s = t.y,
              o = r,
              h = -e;
          this._vSet(n + o * a, s + h * a, 1), this._vSet(n - o * a, s - h * a, -1);

          for (var u = 0; u < i; u++) {
            var c = u / (i - 1) * Et,
                l = Nt(c) * a,
                f = kt(c) * a;
            this._vSet(n, s, 0), this._vSet(n - o * l + e * f, s - h * l + r * f, 1);
          }
        },
        _roundJoin: function _roundJoin(t, e, r, a, i) {
          var n = t.dy,
              s = -t.dx,
              o = e.dy,
              h = -e.dx,
              u = e.x,
              c = e.y;

          if (0 != (e.flags & Y.PT_LEFT)) {
            var l = this._chooseBevel(e.flags & Y.PT_INNERBEVEL, t, e, r),
                f = l[0],
                d = l[1],
                v = l[2],
                p = l[3],
                _ = zt(-s, -n),
                x = zt(-h, -o);

            x > _ && (x -= 2 * Et), this._vSet(f, d, 1), this._vSet(u - n * a, e.y - s * a, -1);

            for (var g = Gt(Ht((_ - x) / Et) * i, 2, i), y = 0; y < g; y++) {
              var m = _ + y / (g - 1) * (x - _),
                  S = u + Nt(m) * a,
                  D = c + kt(m) * a;
              this._vSet(u, c, 0), this._vSet(S, D, -1);
            }

            this._vSet(v, p, 1), this._vSet(u - o * a, c - h * a, -1);
          } else {
            var w = this._chooseBevel(e.flags & Y.PT_INNERBEVEL, t, e, -a),
                B = w[0],
                C = w[1],
                b = w[2],
                M = w[3],
                T = zt(s, n),
                F = zt(h, o);

            F < T && (F += 2 * Et), this._vSet(u + n * a, c + s * a, 1), this._vSet(B, C, -1);

            for (var L = Gt(Ht((F - T) / Et) * i, 2, i), A = 0; A < L; A++) {
              var R = T + A / (L - 1) * (F - T),
                  E = u + Nt(R) * r,
                  P = c + kt(R) * r;
              this._vSet(E, P, 1), this._vSet(u, c, 0);
            }

            this._vSet(u + o * a, c + h * a, 1), this._vSet(b, M, -1);
          }
        },
        _bevelJoin: function _bevelJoin(t, e, r, a) {
          var i = 0,
              n = 0,
              s = 0,
              o = 0,
              h = 0,
              u = 0,
              c = 0,
              l = 0,
              f = t.dy,
              d = -t.dx,
              v = e.dy,
              p = -e.dx;

          if (e.flags & Y.PT_LEFT) {
            var _ = this._chooseBevel(e.flags & Y.PT_INNERBEVEL, t, e, r);

            h = _[0], u = _[1], c = _[2], l = _[3], this._vSet(h, u, 1), this._vSet(e.x - f * a, e.y - d * a, -1), this._vSet(c, l, 1), this._vSet(e.x - v * a, e.y - p * a, -1);
          } else {
            var x = this._chooseBevel(e.flags & Y.PT_INNERBEVEL, t, e, -a);

            i = x[0], n = x[1], s = x[2], o = x[3], this._vSet(e.x + f * r, e.y + d * r, 1), this._vSet(i, n, -1), this._vSet(e.x + v * r, e.y + p * r, 1), this._vSet(s, o, -1);
          }
        },
        _vSet: function _vSet(t, e, r) {
          if (void 0 === r && (r = 0), Vt) {
            var i = Vt,
                n = 8 * i.vertexStart,
                s = i.vData;
            s[n++] = t, s[n++] = e, s[n++] = 0, a.toArray(s, Wt, n), n += 4, s[n++] = r, i.vertexStart++;
          }
        }
      },
          jt = t("g", {
        getAssembler: function getAssembler() {
          return Xt;
        }
      });
      $.Assembler = jt;

      var Kt = function Kt() {
        this.char = "", this.valid = !0, this.x = 0, this.y = 0, this.line = 0, this.hash = "";
      },
          Qt = new i(),
          Jt = null,
          Yt = null,
          $t = [],
          te = [],
          ee = [],
          re = [],
          ae = new n(),
          ie = new n(),
          ne = new s(),
          se = null,
          oe = 0,
          he = 0,
          ue = 0,
          ce = 0,
          le = 0,
          fe = 1,
          de = null,
          ve = "",
          pe = 0,
          _e = 0,
          xe = 0,
          ge = 0,
          ye = 0,
          me = 0,
          Se = 0,
          De = !1,
          we = 0,
          Be = 0,
          Ce = 0,
          be = {
        updateRenderData: function updateRenderData(t) {
          t.renderData && t.renderData.vertDirty && Jt !== t && (Yt = (Jt = t).node._uiProps.uiTransformComp, this._updateFontFamily(t), this._updateProperties(t), this._updateLabelInfo(t), this._updateContent(), Jt.actualFontSize = pe, Yt.setContentSize(ie), Jt.renderData.vertDirty = Jt.renderData.uvDirty = !1, Jt.markForUpdateRenderData(!1), Jt = null, this._resetProperties());
        },
        _updateFontScale: function _updateFontScale() {
          fe = pe / _e;
        },
        _updateFontFamily: function _updateFontFamily(t) {
          var e = t.font;
          de = e.spriteFrame, se = e.fntConfig, A.fontAtlas = e.fontDefDictionary, F.packToDynamicAtlas(t, de);
        },
        _updateLabelInfo: function _updateLabelInfo() {
          A.hash = "", A.margin = 0;
        },
        _updateProperties: function _updateProperties(t) {
          ve = t.string.toString(), pe = t.fontSize, _e = se ? se.fontSize : t.fontSize, xe = t.horizontalAlign, ge = t.verticalAlign, ye = t.spacingX, Se = t.overflow, me = t._lineHeight;
          var e = Yt.contentSize;
          ie.width = e.width, ie.height = e.height, Se === R.NONE ? (De = !1, ie.width += 2 * A.margin, ie.height += 2 * A.margin) : Se === R.RESIZE_HEIGHT ? (De = !0, ie.height += 2 * A.margin) : De = t.enableWrapText, A.lineHeight = me, A.fontSize = pe, this._setupBMFontOverflowMetrics();
        },
        _resetProperties: function _resetProperties() {
          se = null, de = null, A.hash = "", A.margin = 0;
        },
        _updateContent: function _updateContent() {
          this._updateFontScale(), this._computeHorizontalKerningForText(), this._alignText();
        },
        _computeHorizontalKerningForText: function _computeHorizontalKerningForText() {
          for (var t = ve, e = t.length, r = se.kerningDict, a = $t, i = -1, n = 0; n < e; ++n) {
            var s = t.charCodeAt(n),
                o = r[i << 16 | 65535 & s] || 0;
            a[n] = n < e - 1 ? o : 0, i = s;
          }
        },
        _multilineTextWrap: function _multilineTextWrap(t) {
          for (var e = ve.length, r = 0, a = 0, i = 0, n = 0, s = 0, o = 0, h = 0, u = null, c = 0; c < e;) {
            var l = ve.charAt(c);

            if ("\n" !== l) {
              for (var f = t(ve, c, e), d = o, v = h, p = s, _ = a, x = !1, g = 0; g < f; ++g) {
                var y = c + g;
                if ("\r" !== (l = ve.charAt(y))) {
                  if (u = A.fontAtlas.getLetterDefinitionForChar(l, A)) {
                    var m = _ + u.offsetX * fe - A.margin;

                    if (De && Ce > 0 && a > 0 && m + u.w * fe > Ce && !E(l)) {
                      ee.push(s), s = 0, r++, a = 0, i -= me * this._getFontScale() + 0, x = !0;
                      break;
                    }

                    ne.x = m, ne.y = i - u.offsetY * fe, this._recordLetterInfo(ne, l, y, r), y + 1 < $t.length && y < e - 1 && (_ += $t[y + 1]), _ += u.xAdvance * fe + ye, p = ne.x + u.w * fe, d < ne.y && (d = ne.y), v > ne.y - u.h * fe && (v = ne.y - u.h * fe);
                  } else this._recordPlaceholderInfo(y, l), console.log("Can't find letter definition in texture atlas " + se.atlasName + " for letter:" + l);
                } else this._recordPlaceholderInfo(y, l);
              }

              x || (a = _, o < d && (o = d), h > v && (h = v), n < (s = p) && (n = s), c += f);
            } else ee.push(s), s = 0, r++, a = 0, i -= me * this._getFontScale() + 0, this._recordPlaceholderInfo(c, l), c++;
          }

          return ee.push(s), he = (oe = r + 1) * me * this._getFontScale(), oe > 1 && (he += 0 * (oe - 1)), ie.width = we, ie.height = Be, we <= 0 && (ie.width = parseFloat(n.toFixed(2)) + 2 * A.margin), Be <= 0 && (ie.height = parseFloat(he.toFixed(2)) + 2 * A.margin), ce = ie.height, le = 0, o > 0 && (ce = ie.height + o), h < -he && (le = he + h), !0;
        },
        _getFirstCharLen: function _getFirstCharLen() {
          return 1;
        },
        _getFontScale: function _getFontScale() {
          return Se === R.SHRINK ? fe : 1;
        },
        _getFirstWordLen: function _getFirstWordLen(t, e, r) {
          var a = t.charAt(e);
          if (P(a) || "\n" === a || E(a)) return 1;
          var i = 1,
              n = A.fontAtlas.getLetterDefinitionForChar(a, A);
          if (!n) return i;

          for (var s = n.xAdvance * fe + ye, o = e + 1; o < r && (a = t.charAt(o), n = A.fontAtlas.getLetterDefinitionForChar(a, A)); ++o) {
            if (s + n.offsetX * fe + n.w * fe > Ce && !E(a) && Ce > 0) return i;
            if (s += n.xAdvance * fe + ye, "\n" === a || E(a) || P(a)) break;
            i++;
          }

          return i;
        },
        _multilineTextWrapByWord: function _multilineTextWrapByWord() {
          return this._multilineTextWrap(this._getFirstWordLen);
        },
        _multilineTextWrapByChar: function _multilineTextWrapByChar() {
          return this._multilineTextWrap(this._getFirstCharLen);
        },
        _recordPlaceholderInfo: function _recordPlaceholderInfo(t, e) {
          if (t >= te.length) {
            var r = new Kt();
            te.push(r);
          }

          te[t].char = e, te[t].hash = e.charCodeAt(0) + A.hash, te[t].valid = !1;
        },
        _recordLetterInfo: function _recordLetterInfo(t, e, r, a) {
          if (r >= te.length) {
            var i = new Kt();
            te.push(i);
          }

          var n = e.charCodeAt(0) + A.hash;
          te[r].line = a, te[r].char = e, te[r].hash = n, te[r].valid = A.fontAtlas.getLetter(n).valid, te[r].x = t.x, te[r].y = t.y;
        },
        _alignText: function _alignText() {
          he = 0, ee.length = 0, this._multilineTextWrapByWord(), this._computeAlignmentOffset(), Se === R.SHRINK && pe > 0 && this._isVerticalClamp() && this._shrinkLabelToContentSize(this._isVerticalClamp), this._updateQuads() || Se === R.SHRINK && this._shrinkLabelToContentSize(this._isHorizontalClamp);
        },
        _scaleFontSizeDown: function _scaleFontSizeDown(t) {
          var e = !0;
          t || (t = .1, e = !1), pe = t, e && this._updateContent();
        },
        _shrinkLabelToContentSize: function _shrinkLabelToContentSize(t) {
          for (var e = 0, r = 0 | pe, a = 0; e < r;) {
            var i = a = e + r + 1 >> 1;
            if (i <= 0) break;
            fe = i / _e, this._multilineTextWrapByWord(), this._computeAlignmentOffset(), t() ? r = a - 1 : e = a;
          }

          e >= 0 && this._scaleFontSizeDown(e);
        },
        _isVerticalClamp: function _isVerticalClamp() {
          return he > ie.height;
        },
        _isHorizontalClamp: function _isHorizontalClamp() {
          for (var t = !1, e = 0, r = ve.length; e < r; ++e) {
            var a = te[e];

            if (a.valid) {
              var i = A.fontAtlas.getLetterDefinitionForChar(a.char, A);
              if (!i) continue;
              var n = a.x + i.w / 2 * fe,
                  s = a.line;
              if (we > 0) if (De) {
                if (ee[s] > ie.width && (n > ie.width || n < 0)) {
                  t = !0;
                  break;
                }
              } else if (n > ie.width) {
                t = !0;
                break;
              }
            }
          }

          return t;
        },
        _isHorizontalClamped: function _isHorizontalClamped(t, e) {
          var r = ee[e],
              a = t > ie.width || t < 0;
          return De ? r > ie.width && a : a;
        },
        _updateQuads: function _updateQuads() {
          if (!Jt) return !1;
          var t = de ? de.texture : A.fontAtlas.getTexture(),
              e = Jt.renderData;
          e.dataLength = e.vertexCount = e.indicesCount = 0;

          for (var r = Yt.anchorPoint, a = ie, i = r.x * a.width, n = r.y * a.height, s = !0, o = 0, h = ve.length; o < h; ++o) {
            var u = te[o];

            if (u.valid) {
              var c = A.fontAtlas.getLetter(u.hash);

              if (c) {
                Qt.height = c.h, Qt.width = c.w, Qt.x = c.u, Qt.y = c.v;
                var l = u.y + ue;

                if (Be > 0) {
                  if (l > ce) {
                    var f = l - ce;
                    Qt.y += f, Qt.height -= f, l -= f;
                  }

                  l - c.h * fe < le && Se === R.CLAMP && (Qt.height = l < le ? 0 : (l - le) / fe);
                }

                var d = u.line,
                    v = u.x + c.w / 2 * fe + re[d];
                if (we > 0 && this._isHorizontalClamped(v, d)) if (Se === R.CLAMP) Qt.width = 0;else if (Se === R.SHRINK) {
                  if (ie.width > c.w) {
                    s = !1;
                    break;
                  }

                  Qt.width = 0;
                }

                if (Qt.height > 0 && Qt.width > 0) {
                  var p = this._determineRect(),
                      _ = u.x + re[u.line];

                  this.appendQuad(Jt, t, Qt, p, _ - i, l - n, fe);
                }
              } else console.warn("Can't find letter in this bitmap-font");
            }
          }

          return s;
        },
        appendQuad: function appendQuad() {},
        _determineRect: function _determineRect() {
          var t = de.isRotated(),
              e = de.getOriginalSize(),
              r = de.getRect(),
              a = de.getOffset(),
              i = a.x + (e.width - r.width) / 2,
              n = a.y - (e.height - r.height) / 2;

          if (t) {
            var s = Qt.x;
            Qt.x = r.x + r.height - Qt.y - Qt.height - n, Qt.y = s + r.y - i, Qt.y < 0 && (Qt.height += n);
          } else Qt.x += r.x - i, Qt.y += r.y + n;

          return t;
        },
        _computeAlignmentOffset: function _computeAlignmentOffset() {
          switch (re.length = 0, xe) {
            case O.LEFT:
              for (var t = 0; t < oe; ++t) {
                re.push(0);
              }

              break;

            case O.CENTER:
              for (var e = 0, r = ee.length; e < r; e++) {
                re.push((ie.width - ee[e]) / 2);
              }

              break;

            case O.RIGHT:
              for (var a = 0, i = ee.length; a < i; a++) {
                re.push(ie.width - ee[a]);
              }

          }

          if (ue = ie.height, ge !== H.TOP) {
            var n = ie.height - he + me * this._getFontScale() - _e * fe;

            ge === H.BOTTOM ? ue -= n : ue -= n / 2;
          }
        },
        _setupBMFontOverflowMetrics: function _setupBMFontOverflowMetrics() {
          var t = ie.width,
              e = ie.height;
          Se === R.RESIZE_HEIGHT && (e = 0), Se === R.NONE && (t = 0, e = 0), we = t, Be = e, ae.width = t, ae.height = e, Ce = t;
        }
      },
          Me = new a(255, 255, 255, 255),
          Te = {
        createData: function createData(t) {
          return t.requestRenderData();
        },
        fillBuffers: function fillBuffers(t, e) {
          var r = t.node;
          t._setCacheAlpha(r._uiProps.opacity), Me.set(t.color), Me.a = 255 * r._uiProps.opacity, ct(r, e, t.renderData, Me);
        },
        appendQuad: function appendQuad(t, e, r, a, i, n, s) {
          var o = t.renderData;

          if (o) {
            var h = o.dataLength;
            o.dataLength += 4, o.vertexCount = o.dataLength, o.indicesCount = o.dataLength / 2 * 3;
            var u = o.data,
                c = e.width,
                l = e.height,
                f = r.width,
                d = r.height,
                v = 0,
                p = 0,
                _ = 0,
                x = 0;
            a ? (v = r.x / c, x = (r.x + d) / c, p = (r.y + f) / l, _ = r.y / l, u[h].u = v, u[h].v = _, u[h + 1].u = v, u[h + 1].v = p, u[h + 2].u = x, u[h + 2].v = _, u[h + 3].u = x, u[h + 3].v = p) : (v = r.x / c, x = (r.x + f) / c, p = (r.y + d) / l, _ = r.y / l, u[h].u = v, u[h].v = p, u[h + 1].u = x, u[h + 1].v = p, u[h + 2].u = v, u[h + 2].v = _, u[h + 3].u = x, u[h + 3].v = _), u[h].x = i, u[h].y = n - d * s, u[h + 1].x = i + f * s, u[h + 1].y = n - d * s, u[h + 2].x = i, u[h + 2].y = n, u[h + 3].x = i + f * s, u[h + 3].y = n;
          }
        }
      };

      o(Te, be);
      var Fe = null,
          Le = h(be, {
        getAssemblerData: function getAssemblerData() {
          return Fe || (Fe = new I(1024, 1024)), Fe.getTexture();
        },
        _updateFontFamily: function _updateFontFamily(t) {
          A.fontAtlas = Fe, A.fontFamily = this._getFontFamily(t);
          var e = t.getComponent(rt);
          e && e.enabled ? (A.isOutlined = !0, A.margin = e.width, A.out = e.color.clone(), A.out.a = e.color.a * t.color.a / 255) : (A.isOutlined = !1, A.margin = 0);
        },
        _getFontFamily: function _getFontFamily(t) {
          var e = "Arial";
          return t.useSystemFont ? e = t.fontFamily || "Arial" : t.font && (e = t.font._nativeAsset || "Arial"), e;
        },
        _updateLabelInfo: function _updateLabelInfo(t) {
          A.fontDesc = this._getFontDesc(), A.color = t.color, A.hash = N(A);
        },
        _getFontDesc: function _getFontDesc() {
          return A.fontSize.toString() + "px " + A.fontFamily;
        },
        _computeHorizontalKerningForText: function _computeHorizontalKerningForText() {},
        _determineRect: function _determineRect() {
          return !1;
        }
      }),
          Ae = new a(255, 255, 255, 255),
          Re = {
        createData: function createData(t) {
          return t.requestRenderData();
        },
        fillBuffers: function fillBuffers(t, e) {
          if (t.renderData) {
            var r = t.node;
            t._setCacheAlpha(r._uiProps.opacity), Ae.a = 255 * r._uiProps.opacity, ct(r, e, t.renderData, Ae);
          }
        },
        appendQuad: Te.appendQuad
      };
      o(Re, Le);
      var Ee = k.Overflow,
          Pe = W(),
          Oe = (1 / 255).toFixed(3),
          He = null,
          Ie = null,
          Ne = null,
          ke = "",
          ze = "",
          Ve = 0,
          Ue = 0,
          We = [],
          Ze = new n(),
          qe = 0,
          Ge = 0,
          Xe = 0,
          je = new a(),
          Ke = 1,
          Qe = "",
          Je = Ee.NONE,
          Ye = !1,
          $e = null,
          tr = a.BLACK.clone(),
          er = null,
          rr = a.BLACK.clone(),
          ar = new i(),
          ir = n.ZERO.clone(),
          nr = n.ZERO.clone(),
          sr = s.ZERO.clone(),
          or = s.ZERO.clone(),
          hr = 0,
          ur = 0,
          cr = !1,
          lr = !1,
          fr = !1,
          dr = ["left", "center", "right"],
          vr = {
        getAssemblerData: function getAssemblerData() {
          return k._canvasPool.get();
        },
        resetAssemblerData: function resetAssemblerData(t) {
          t && k._canvasPool.put(t);
        },
        updateRenderData: function updateRenderData(t) {
          if (t.renderData && t.renderData.vertDirty) {
            var e = t.node._uiProps.uiTransformComp;
            this._updateFontFamily(t), this._updateProperties(t, e), this._calculateLabelFont(), this._updateLabelDimensions(), this._resetDynamicAtlas(t), this._updateTexture(t), this.updateOpacity(t), t._setCacheAlpha(Ke), this._calDynamicAtlas(t), t.actualFontSize = Ve, e.setContentSize(Ze), this.updateVertexData(t), this.updateUvs(t), t.markForUpdateRenderData(!1), He = null, Ie = null, Ne = null;
          }
        },
        updateVertexData: function updateVertexData() {},
        updateUvs: function updateUvs() {},
        updateOpacity: function updateOpacity(t) {
          for (var e = t.renderData.vData, r = 5, a = t.node._uiProps.opacity, i = 0; i < 4; i++) {
            e[r + 3] = a, r += 9;
          }
        },
        _updateFontFamily: function _updateFontFamily(t) {
          Qe = t.useSystemFont ? t.fontFamily || "Arial" : t.font && t.font._nativeAsset || "Arial";
        },
        _updateProperties: function _updateProperties(t, e) {
          var r = t.assemblerData;
          r && (He = r.context, Ie = r.canvas, Ne = t.spriteFrame, ze = t.string.toString(), Ve = t.fontSize, Ue = Ve, Je = t.overflow, nr.width = Ze.width = e.width, nr.height = Ze.height = e.height, ur = t.underlineHeight, qe = t.lineHeight, Ge = t.horizontalAlign, Xe = t.verticalAlign, je = t.color, Ke = t.node._uiProps.opacity, cr = t.isBold, lr = t.isItalic, fr = t.isUnderline, Ye = Je !== Ee.NONE && (Je === Ee.RESIZE_HEIGHT || t.enableWrapText), ($e = ($e = rt && t.getComponent(rt)) && $e.enabled && $e.width > 0 ? $e : null) && tr.set($e.color), (er = (er = at && t.getComponent(at)) && er.enabled ? er : null) && rr.set(er.color), this._updatePaddingRect());
        },
        _updatePaddingRect: function _updatePaddingRect() {
          var t = 0,
              e = 0,
              r = 0,
              a = 0,
              i = 0;

          if (ir.width = ir.height = 0, $e && (t = e = r = a = i = $e.width, ir.width = ir.height = 2 * i), er) {
            var n = er.blur + i,
                s = er.offset.x,
                o = er.offset.y;
            r = Math.max(r, -s + n), a = Math.max(a, s + n), t = Math.max(t, o + n), e = Math.max(e, -o + n);
          }

          if (lr) {
            var h = Ue * Math.tan(.20943951);
            a += h, ir.width += h;
          }

          ar.x = r, ar.y = t, ar.width = r + a, ar.height = t + e;
        },
        _calculateFillTextStartPosition: function _calculateFillTextStartPosition() {
          var t = 0;
          Ge === O.RIGHT ? t = Ze.width - ar.width : Ge === O.CENTER && (t = (Ze.width - ar.width) / 2);
          var e = this._getLineHeight() * (We.length - 1),
              r = Ve * (1 - U / 2);

          if (Xe !== H.TOP) {
            var a = e + ar.height + Ve - Ze.height;
            Xe === H.BOTTOM ? r -= a += U / 2 * Ve : r -= a / 2;
          }

          r += Pe * Ve, sr.set(t + ar.x, r + ar.y);
        },
        _updateTexture: function _updateTexture(t) {
          if (He && Ie) {
            He.clearRect(0, 0, Ie.width, Ie.height), He.font = ke, this._calculateFillTextStartPosition();

            var e = this._getLineHeight();

            He.lineJoin = "round", $e ? (He.fillStyle = "rgba(" + tr.r + ", " + tr.g + ", " + tr.b + ", " + Oe + ")", He.fillRect(0, 0, Ie.width, Ie.height)) : t._srcBlendFactor === u.SRC_ALPHA && (He.fillStyle = "rgba(" + je.r + ", " + je.g + ", " + je.b + ", " + Oe + ")", He.fillRect(0, 0, Ie.width, Ie.height)), He.fillStyle = "rgb(" + je.r + ", " + je.g + ", " + je.b + ")";
            var r,
                a = sr.x,
                n = 0;

            this._drawTextEffect(sr, e);

            for (var s = 0; s < We.length; ++s) {
              n = sr.y + s * e, $e && He.strokeText(We[s], a, n), He.fillText(We[s], a, n);
            }

            er && (He.shadowColor = "transparent"), Ne && (r = Ne instanceof L ? Ne.texture : Ne, 0 !== Ie.width && 0 !== Ie.height && (r.reset({
              width: Ie.width,
              height: Ie.height,
              mipmapLevel: 1
            }), r.uploadData(Ie), Ne instanceof L && (Ne.rect = new i(0, 0, Ie.width, Ie.height), Ne._calculateUV()), c.director.root && c.director.root.batcher2D && c.director.root.batcher2D._releaseDescriptorSetCache(r.getHash())));
          }
        },
        _resetDynamicAtlas: function _resetDynamicAtlas(t) {
          if (t.cacheMode === k.CacheMode.BITMAP) {
            var e = t.ttfSpriteFrame;
            F.deleteAtlasSpriteFrame(e), e._resetDynamicAtlasFrame();
          }
        },
        _calDynamicAtlas: function _calDynamicAtlas(t) {
          if (t.cacheMode === k.CacheMode.BITMAP) {
            var e = t.ttfSpriteFrame;
            F.packToDynamicAtlas(t, e), t.renderData.uvDirty = !0;
          }
        },
        _setupOutline: function _setupOutline() {
          He.strokeStyle = "rgba(" + tr.r + ", " + tr.g + ", " + tr.b + ", " + tr.a / 255 + ")", He.lineWidth = 2 * $e.width;
        },
        _setupShadow: function _setupShadow() {
          He.shadowColor = "rgba(" + rr.r + ", " + rr.g + ", " + rr.b + ", " + rr.a / 255 + ")", He.shadowBlur = er.blur, He.shadowOffsetX = er.offset.x, He.shadowOffsetY = -er.offset.y;
        },
        _drawTextEffect: function _drawTextEffect(t, e) {
          if (er || $e || fr) {
            var r = We.length > 1 && er,
                a = this._measureText(He, ke),
                i = 0,
                n = 0;

            er && this._setupShadow(), $e && this._setupOutline();

            for (var s = 0; s < We.length; ++s) {
              i = t.x, n = t.y + s * e, r && ($e && He.strokeText(We[s], i, n), He.fillText(We[s], i, n)), fr && (hr = a(We[s]), Ge === O.RIGHT ? or.x = t.x - hr : Ge === O.CENTER ? or.x = t.x - hr / 2 : or.x = t.x, or.y = n + Ue / 8, He.fillRect(or.x, or.y, hr, ur));
            }

            r && (He.shadowColor = "transparent");
          }
        },
        _updateLabelDimensions: function _updateLabelDimensions() {
          Ze.width = Math.min(Ze.width, 2048), Ze.height = Math.min(Ze.height, 2048);
          var t = !1;
          Ie.width !== Ze.width && (Ie.width = Ze.width, t = !0), Ie.height !== Ze.height && (Ie.height = Ze.height, t = !0), t && (He.font = ke), He.textAlign = dr[Ge], He.textBaseline = "alphabetic";
        },
        _getFontDesc: function _getFontDesc() {
          var t = Ve.toString() + "px ";
          return t += Qe, cr && (t = "bold " + t), lr && (t = "italic " + t), t;
        },
        _getLineHeight: function _getLineHeight() {
          return 0 | (0 === qe ? Ve : qe * Ve / Ue);
        },
        _calculateParagraphLength: function _calculateParagraphLength(t, e) {
          for (var r, a = [], i = l(t); !(r = i()).done;) {
            var n = r.value,
                s = z(e, n, ke);
            a.push(s);
          }

          return a;
        },
        _measureText: function _measureText(t, e) {
          return function (r) {
            return z(t, r, e);
          };
        },
        _calculateShrinkFont: function _calculateShrinkFont(t) {
          if (He) {
            var e = this._calculateParagraphLength(t, He),
                r = 0,
                a = 0,
                i = 0;

            if (Ye) {
              var n = nr.width,
                  s = nr.height;
              if (n < 0 || s < 0) return;
              a = s + 1;

              for (var o = 0, h = 0 | Ve + 1, u = 0; o < h;) {
                if ((u = o + h + 1 >> 1) <= 0) {
                  f(4003);
                  break;
                }

                Ve = u, ke = this._getFontDesc(), He.font = ke;

                var c = this._getLineHeight();

                for (a = 0, r = 0; r < t.length; ++r) {
                  var l = z(He, t[r], ke);
                  a += V(t[r], l, n, this._measureText(He, ke)).length * c;
                }

                a > s ? h = u - 1 : o = u;
              }

              0 === o ? f(4003) : (Ve = o, ke = this._getFontDesc(), He.font = ke);
            } else {
              for (a = t.length * this._getLineHeight(), r = 0; r < t.length; ++r) {
                i < e[r] && (i = e[r]);
              }

              var d = (Ze.width - ar.width) / i,
                  v = Ze.height / a;
              Ve = Ue * Math.min(1, d, v) | 0, ke = this._getFontDesc(), He.font = ke;
            }
          }
        },
        _calculateWrapText: function _calculateWrapText(t) {
          if (Ye && He) {
            We = [];

            for (var e = nr.width, r = 0; r < t.length; ++r) {
              var a = z(He, t[r], ke),
                  i = V(t[r], a, e, this._measureText(He, ke));
              We = We.concat(i);
            }
          }
        },
        _calculateLabelFont: function _calculateLabelFont() {
          if (He) {
            var t = ze.split("\n");

            switch (We = t, ke = this._getFontDesc(), He.font = ke, Je) {
              case Ee.NONE:
                for (var e = 0, r = 0, a = 0; a < t.length; ++a) {
                  var i = z(He, t[a], ke);
                  e = e > i ? e : i;
                }

                r = (We.length + U) * this._getLineHeight();
                var n = parseFloat(e.toFixed(2)),
                    s = parseFloat(r.toFixed(2));
                Ze.width = n + ar.width, Ze.height = s + ar.height, nr.width = n + ir.width, nr.height = s + ir.height;
                break;

              case Ee.SHRINK:
                this._calculateShrinkFont(t), this._calculateWrapText(t);
                break;

              case Ee.CLAMP:
                this._calculateWrapText(t);

                break;

              case Ee.RESIZE_HEIGHT:
                this._calculateWrapText(t);

                var o = (We.length + U) * this._getLineHeight();

                Ze.height = o + ar.height, nr.height = o + ir.height;
            }
          }
        }
      },
          pr = a.WHITE.clone(),
          _r = {
        createData: function createData(t) {
          var e = t.requestRenderData();
          e.dataLength = 4, e.vertexCount = 4, e.indicesCount = 6;
          var r = e.vData = new Float32Array(36);
          r[3] = r[21] = r[22] = r[31] = 0, r[4] = r[12] = r[13] = r[30] = 1;

          for (var i = 5, n = 0; n < 4; n++) {
            a.toArray(r, pr, i), i += 9;
          }

          return e;
        },
        fillBuffers: function fillBuffers(t, e) {
          var r = t.renderData,
              a = r.data,
              i = t.node,
              n = e.acquireBufferBatch(),
              s = n.byteOffset >> 2,
              o = n.indicesOffset,
              h = n.vertexOffset;
          n.request() || (n = e.currBufferBatch, o = 0, h = 0, s = 0);
          var u = n.vData,
              c = n.iData,
              l = r.vData,
              f = a[0],
              d = a[3];
          i.updateWorldTransform();
          var v = i._pos,
              p = i._rot,
              _ = i._scale,
              x = f.x * _.x,
              g = d.x * _.x,
              y = f.y * _.y,
              m = d.y * _.y,
              S = p.x,
              D = p.y,
              w = p.z,
              B = p.w,
              C = S * D,
              b = w * B,
              M = S * S - D * D,
              T = B * B - w * w,
              F = T + M,
              L = 2 * (C - b),
              A = T - M,
              R = 2 * (C + b),
              E = v.x,
              P = v.y;
          l[0] = F * x + L * y + E, l[1] = A * y + R * x + P, l[9] = F * g + L * y + E, l[10] = A * y + R * g + P, l[18] = F * x + L * m + E, l[19] = A * m + R * x + P, l[27] = F * g + L * m + E, l[28] = A * m + R * g + P, u.set(l, s), c[o++] = h, c[o++] = h + 1, c[o++] = h + 2, c[o++] = h + 2, c[o++] = h + 1, c[o++] = h + 3;
        },
        updateVertexData: function updateVertexData(t) {
          var e = t.renderData;

          if (e) {
            var r = t.node._uiProps.uiTransformComp,
                a = r.width,
                i = r.height,
                n = r.anchorX * a,
                s = r.anchorY * i,
                o = e.data;
            o[0].x = -n, o[0].y = -s, o[3].x = a - n, o[3].y = i - s;
          }
        },
        updateUvs: function updateUvs(t) {
          var e = t.renderData;

          if (e) {
            var r = e.vData;

            if (r && e.uvDirty) {
              var a = t.ttfSpriteFrame.uv;
              r[3] = a[0], r[4] = a[1], r[12] = a[2], r[13] = a[3], r[21] = a[4], r[22] = a[5], r[30] = a[6], r[31] = a[7], e.uvDirty = !1;
            }
          }
        }
      };
      o(_r, vr);
      var xr = t("l", {
        getAssembler: function getAssembler(t) {
          var e = _r;
          return t.font instanceof Z ? e = Te : t.cacheMode === k.CacheMode.CHAR && (e = Re), e;
        }
      });
      k.Assembler = xr;
      var gr = q.FillType,
          yr = new r(),
          mr = new a(255, 255, 255, 255),
          Sr = {
        useModel: !1,
        updateRenderData: function updateRenderData(t) {
          var e = t.spriteFrame;
          F.packToDynamicAtlas(t, e);
          var r = t.renderData;

          if (r && e) {
            var a = r.uvDirty,
                i = r.vertDirty;
            if (!a && !i) return;
            var n = t.fillStart,
                s = t.fillRange;
            s < 0 && (n += s, s = -s), s = (s = (s = n + s) > 1 ? 1 : s) < 0 ? 0 : s;
            var o = (n = (n = n > 1 ? 1 : n) < 0 ? 0 : n) + (s = (s -= n) < 0 ? 0 : s);
            o = o > 1 ? 1 : o, a && this.updateUVs(t, n, o), i && (this.updateVertexData && this.updateVertexData(t, n, o), this.updateWorldVertexData(t));
          }
        },
        updateUVs: function updateUVs(t, e, r) {
          var a = t.spriteFrame,
              i = t.renderData,
              n = i.data,
              s = a.width,
              o = a.height,
              h = a.getRect(),
              u = 0,
              c = 0,
              l = 0,
              f = 0,
              v = 0,
              p = 0,
              _ = 0,
              x = 0,
              g = 0,
              y = 0;

          switch (a.isRotated() ? (u = h.x / s, c = (h.y + h.width) / o, l = v = u, _ = g = (h.x + h.height) / s, p = y = c, f = x = h.y / o) : (u = h.x / s, c = (h.y + h.height) / o, l = _ = u, v = g = (h.x + h.width) / s, f = p = c, x = y = h.y / o), t.fillType) {
            case gr.HORIZONTAL:
              n[0].u = l + (v - l) * e, n[0].v = f + (p - f) * e, n[1].u = l + (v - l) * r, n[1].v = f + (p - f) * r, n[2].u = _ + (g - _) * e, n[2].v = x + (y - x) * e, n[3].u = _ + (g - _) * r, n[3].v = x + (y - x) * r;
              break;

            case gr.VERTICAL:
              n[0].u = l + (_ - l) * e, n[0].v = f + (x - f) * e, n[1].u = v + (g - v) * e, n[1].v = p + (y - p) * e, n[2].u = l + (_ - l) * r, n[2].v = f + (x - f) * r, n[3].u = v + (g - v) * r, n[3].v = p + (y - p) * r;
              break;

            default:
              d(2626);
          }

          i.uvDirty = !1;
        },
        updateVertexData: function updateVertexData(t, e, r) {
          var a = t.renderData,
              i = a.data,
              n = t.node._uiProps.uiTransformComp,
              s = n.width,
              o = n.height,
              h = n.anchorX * s,
              u = n.anchorY * o,
              c = -h,
              l = -u,
              f = s - h,
              v = o - u,
              p = 0;

          switch (t.fillType) {
            case gr.HORIZONTAL:
              p = c + (f - c) * r, c += (f - c) * e, f = p;
              break;

            case gr.VERTICAL:
              p = l + (v - l) * r, l += (v - l) * e, v = p;
              break;

            default:
              d(2626);
          }

          i[4].x = c, i[4].y = l, i[5].x = f, i[5].y = l, i[6].x = c, i[6].y = v, i[7].x = f, i[7].y = v, a.vertDirty = !1;
        },
        createData: function createData(t) {
          var e = t.requestRenderData();
          e.dataLength = 8, e.vertexCount = 4, e.indicesCount = 6;

          for (var r, a = e.data, i = l(a); !(r = i()).done;) {
            r.value.z = 0;
          }

          return e;
        },
        updateWorldVertexData: function updateWorldVertexData(t) {
          var r = t.node,
              a = t.renderData.data;
          r.getWorldMatrix(yr);

          for (var i = 0; i < 4; i++) {
            var n = a[i + 4],
                s = a[i];
            e.transformMat4(s, n, yr);
          }
        },
        fillBuffers: function fillBuffers(t, e) {
          t.node.hasChangedFlags && this.updateWorldVertexData(t);
          var r = t.node;
          mr.set(t.color), mr.a = 255 * r._uiProps.opacity, function (t, e, r, i) {
            var n = r.data,
                s = e.acquireBufferBatch(),
                o = s.byteOffset >> 2,
                h = r.vertexCount,
                u = s.indicesOffset,
                c = s.vertexOffset;
            s.request(h, r.indicesCount) || (s = e.currBufferBatch, o = 0, u = 0, c = 0);

            for (var l = s.vData, f = 0; f < h; f++) {
              var d = n[f];
              l[o++] = d.x, l[o++] = d.y, l[o++] = d.z, l[o++] = d.u, l[o++] = d.v, a.toArray(l, i, o), o += 4;
            }

            var v = s.iData;
            v[u++] = c, v[u++] = c + 1, v[u++] = c + 2, v[u++] = c + 1, v[u++] = c + 3, v[u++] = c + 2;
          }(0, e, t.renderData, mr);
        },
        updateColor: function updateColor() {}
      },
          Dr = 2 * Math.PI,
          wr = 1e-6,
          Br = new a(255, 255, 255, 255),
          Cr = [new s(), new s(), new s(), new s()],
          br = new Array(4),
          Mr = new Array(8),
          Tr = [new s(), new s(), new s(), new s()],
          Fr = [new s(), new s(), new s(), new s()],
          Lr = new s(),
          Ar = [new s(), new s(), new s(), new s()];

      function Rr(t, e, r, a, i, n, s) {
        var o = Math.sin(n);
        o = Math.abs(o) > wr ? o : 0;
        var h = Math.cos(n),
            u = 0,
            c = 0;

        if (0 !== (h = Math.abs(h) > wr ? h : 0)) {
          if (u = o / h, (t - i.x) * h > 0) {
            var l = i.y + u * (t - i.x);
            s[0].x = t, s[0].y = l;
          }

          if ((e - i.x) * h > 0) {
            var f = i.y + u * (e - i.x);
            s[2].x = e, s[2].y = f;
          }
        }

        if (0 !== o) {
          if (c = h / o, (a - i.y) * o > 0) {
            var d = i.x + c * (a - i.y);
            s[3].x = d, s[3].y = a;
          }

          if ((r - i.y) * o > 0) {
            var v = i.x + c * (r - i.y);
            s[1].x = v, s[1].y = r;
          }
        }
      }

      function Er(t, e) {
        var r = e.x - t.x,
            a = e.y - t.y;
        if (0 === r && 0 === a) return 0;
        if (0 === r) return a > 0 ? .5 * Math.PI : 1.5 * Math.PI;
        var i = Math.atan(a / r);
        return r < 0 && (i += Math.PI), i;
      }

      function Pr(t, e, r, a, i) {
        var n = br,
            s = n[0],
            o = n[1],
            h = n[2],
            u = n[3];
        t[e].x = r.x, t[e].y = r.y, t[e + 1].x = a.x, t[e + 1].y = a.y, t[e + 2].x = i.x, t[e + 2].y = i.y, Or((r.x - s) / (h - s), (r.y - o) / (u - o), t, e), Or((a.x - s) / (h - s), (a.y - o) / (u - o), t, e + 1), Or((i.x - s) / (h - s), (i.y - o) / (u - o), t, e + 2);
      }

      function Or(t, e, r, a) {
        var i = Mr,
            n = i[0] + (i[2] - i[0]) * t,
            s = i[4] + (i[6] - i[4]) * t,
            o = i[1] + (i[3] - i[1]) * t,
            h = i[5] + (i[7] - i[5]) * t,
            u = r[a];
        u.u = n + (s - n) * e, u.v = o + (h - o) * e;
      }

      for (var Hr = {
        useModel: !1,
        createData: function createData(t) {
          return t.requestRenderData();
        },
        updateRenderData: function updateRenderData(t) {
          var e = t.spriteFrame;
          F.packToDynamicAtlas(t, e);
          var r,
              a,
              i,
              n,
              o,
              h,
              u,
              c,
              f,
              d = t.renderData;

          if (d && e && (d.vertDirty || d.uvDirty)) {
            var v = d.data,
                p = t.fillStart,
                _ = t.fillRange;

            for (_ < 0 && (p += _, _ = -_); p >= 1;) {
              p -= 1;
            }

            for (; p < 0;) {
              p += 1;
            }

            var x = (p *= Dr) + (_ *= Dr);
            !function (t) {
              var e = t.node._uiProps.uiTransformComp,
                  r = e.width,
                  a = e.height,
                  i = e.anchorX * r,
                  n = e.anchorY * a,
                  o = -i,
                  h = -n,
                  u = r - i,
                  c = a - n,
                  f = br;
              f[0] = o, f[1] = h, f[2] = u, f[3] = c;
              var d = t.fillCenter,
                  v = Lr.x = Math.min(Math.max(0, d.x), 1) * (u - o) + o,
                  p = Lr.y = Math.min(Math.max(0, d.y), 1) * (c - h) + h;
              Cr[0].x = Cr[3].x = o, Cr[1].x = Cr[2].x = u, Cr[0].y = Cr[1].y = h, Cr[2].y = Cr[3].y = c;

              for (var _, x = l(Ar); !(_ = x()).done;) {
                var g = _.value;
                s.set(g, 0, 0);
              }

              v !== f[0] && s.set(Ar[0], 3, 0), v !== f[2] && s.set(Ar[2], 1, 2), p !== f[1] && s.set(Ar[1], 0, 1), p !== f[3] && s.set(Ar[3], 2, 3);
            }(t), a = (r = e).width, i = r.height, n = r.getRect(), o = 0, h = 0, u = 0, c = 0, f = Mr, r.isRotated() ? (o = n.x / a, h = (n.x + n.height) / a, u = n.y / i, c = (n.y + n.width) / i, f[0] = f[2] = o, f[4] = f[6] = h, f[3] = f[7] = c, f[1] = f[5] = u) : (o = n.x / a, h = (n.x + n.width) / a, u = n.y / i, c = (n.y + n.height) / i, f[0] = f[4] = o, f[2] = f[6] = h, f[1] = f[3] = c, f[5] = f[7] = u), Rr(br[0], br[2], br[1], br[3], Lr, p, Tr), Rr(br[0], br[2], br[1], br[3], Lr, p + _, Fr);

            for (var g = 0, y = 0; y < 4; ++y) {
              var m = Ar[y];
              if (m) if (_ >= Dr) d.dataLength = g + 3, Pr(v, g, Lr, Cr[m.x], Cr[m.y]), g += 3;else {
                var S = Er(Lr, Cr[m.x]),
                    D = Er(Lr, Cr[m.y]);
                D < S && (D += Dr), S -= Dr, D -= Dr;

                for (var w = 0; w < 3; ++w) {
                  S >= x || (S >= p ? (d.dataLength = g + 3, Pr(v, g, Lr, Cr[m.x], D >= x ? Fr[y] : Cr[m.y]), g += 3) : D > p && (D <= x ? (d.dataLength = g + 3, Pr(v, g, Lr, Tr[y], Cr[m.y]), g += 3) : (d.dataLength = g + 3, Pr(v, g, Lr, Tr[y], Fr[y]), g += 3))), S += Dr, D += Dr;
                }
              }
            }

            d.indicesCount = d.vertexCount = g, d.vertDirty = d.uvDirty = !1;
          }
        },
        fillBuffers: function fillBuffers(t, r) {
          var i = t.node,
              n = t.renderData;
          Br.set(t.color), Br.a = 255 * i._uiProps.opacity, function (t, r, i, n) {
            var s = i.data,
                o = r.acquireBufferBatch(),
                h = o.byteOffset >> 2,
                u = i.vertexCount,
                c = o.indicesOffset,
                l = o.vertexOffset;
            o.request(u, i.indicesCount) || (o = r.currBufferBatch, h = 0, c = 0, l = 0);
            var f = o.vData;
            t.getWorldMatrix(ut);

            for (var d = 0; d < u; d++) {
              var v = s[d];
              e.set(ht, v.x, v.y, 0), e.transformMat4(ht, ht, ut), f[h++] = ht.x, f[h++] = ht.y, f[h++] = ht.z, f[h++] = v.u, f[h++] = v.v, a.toArray(f, n, h), h += 4;
            }

            for (var p = o.iData, _ = 0; _ < i.dataLength; _++) {
              p[c + _] = l + _;
            }
          }(i, r, n, Br);
        },
        updateColor: function updateColor() {}
      }, Ir = [], Nr = 0; Nr < 4; Nr++) {
        Ir.push(new e());
      }

      for (var kr = {
        createData: function createData(t) {
          var e = t.requestRenderData();
          return e.dataLength = 4, e.vertexCount = 4, e.indicesCount = 6, e.vData = new Float32Array(36), e;
        },
        updateRenderData: function updateRenderData(t) {
          var e = t.spriteFrame;
          F.packToDynamicAtlas(t, e);
          var r = t.renderData;
          r && e && (r.vertDirty && this.updateVertexData(t), r.uvDirty && this.updateUvs(t));
        },
        updateWorldVerts: function updateWorldVerts(t, e) {
          var r = t.renderData.data,
              a = t.node,
              i = r[0],
              n = r[3],
              s = a.worldMatrix,
              o = s.m00,
              h = s.m01,
              u = s.m04,
              c = s.m05,
              l = 1 === o && 0 === h && 0 === u && 1 === c,
              f = s.m12,
              d = s.m13,
              v = i.x,
              p = n.x,
              _ = i.y,
              x = n.y;

          if (l) {
            var g = v + f,
                y = p + f,
                m = _ + d,
                S = x + d;
            e[0] = g, e[1] = m, e[9] = y, e[10] = m, e[18] = g, e[19] = S, e[27] = y, e[28] = S;
          } else {
            var D = o * v,
                w = o * p,
                B = h * v,
                C = h * p,
                b = u * _ + f,
                M = u * x + f,
                T = c * _ + d,
                F = c * x + d;
            e[0] = D + b, e[1] = B + T, e[9] = w + b, e[10] = C + T, e[18] = D + M, e[19] = B + F, e[27] = w + M, e[28] = C + F;
          }

          a._uiProps.uiTransformDirty = !1;
        },
        fillBuffers: function fillBuffers(t, e) {
          if (null !== t) {
            var r = t.renderData.vData;
            t.node._uiProps.uiTransformDirty && this.updateWorldVerts(t, r);
            var a = e.acquireBufferBatch(),
                i = a.byteOffset >> 2,
                n = a.indicesOffset,
                s = a.vertexOffset;
            a.request() || (a = e.currBufferBatch, i = 0, n = 0, s = 0);
            var o = a.vData,
                h = a.iData;
            o.set(r, i);
            var u = s,
                c = s + 1,
                l = s + 2,
                f = s + 3;
            h[n++] = u, h[n++] = c, h[n++] = l, h[n++] = l, h[n++] = c, h[n++] = f;
          }
        },
        updateVertexData: function updateVertexData(t) {
          var e = t.renderData;

          if (e) {
            var r = t.node._uiProps.uiTransformComp,
                a = e.data,
                i = r.width,
                n = r.height,
                s = r.anchorX * i,
                o = r.anchorY * n,
                h = 0,
                u = 0,
                c = 0,
                l = 0;
            if (t.trim) h = -s, u = -o, c = i - s, l = n - o;else {
              var f = t.spriteFrame,
                  d = f.getOriginalSize(),
                  v = f.getRect(),
                  p = d.width,
                  _ = d.height,
                  x = v.width,
                  g = v.height,
                  y = f.getOffset(),
                  m = i / p,
                  S = n / _,
                  D = y.x + (p - x) / 2,
                  w = y.x - (p - x) / 2;
              h = D * m - s, u = (y.y + (_ - g) / 2) * S - o, c = i + w * m - s, l = n + (y.y - (_ - g) / 2) * S - o;
            }
            a[0].x = h, a[0].y = u, a[3].x = c, a[3].y = l, e.vertDirty = !1, this.updateWorldVerts(t, e.vData);
          }
        },
        updateUvs: function updateUvs(t) {
          var e = t.renderData,
              r = e.vData,
              a = t.spriteFrame.uv;
          r[3] = a[0], r[4] = a[1], r[12] = a[2], r[13] = a[3], r[21] = a[4], r[22] = a[5], r[30] = a[6], r[31] = a[7], e.uvDirty = !1;
        },
        updateColor: function updateColor(t) {
          for (var e = t.renderData.vData, r = 5, a = t.color, i = a.r / 255, n = a.g / 255, s = a.b / 255, o = t.node._uiProps.opacity, h = 0; h < 4; h++) {
            e[r] = i, e[r + 1] = n, e[r + 2] = s, e[r + 3] = o, r += 9;
          }
        }
      }, zr = new e(), Vr = new r(), Ur = {
        useModel: !1,
        createData: function createData(t) {
          var e = t.requestRenderData();
          return e.dataLength = 20, e.vertexCount = 16, e.indicesCount = 54, e;
        },
        updateRenderData: function updateRenderData(t) {
          var e = t.spriteFrame;
          F.packToDynamicAtlas(t, e);
          var r = t.renderData;
          r && e && r.vertDirty && (this.updateVertexData(t), this.updateWorldVertexData(t));
        },
        updateVertexData: function updateVertexData(t) {
          var e = t.renderData,
              r = e.data,
              a = t.node._uiProps.uiTransformComp,
              i = a.width,
              n = a.height,
              s = a.anchorX * i,
              o = a.anchorY * n,
              h = t.spriteFrame,
              u = h.insetLeft,
              c = h.insetRight,
              l = h.insetTop,
              f = h.insetBottom,
              d = i - u - c,
              v = n - l - f,
              p = i / (u + c),
              _ = n / (l + f);

          p = Number.isNaN(p) || p > 1 ? 1 : p, _ = Number.isNaN(_) || _ > 1 ? 1 : _, d = d < 0 ? 0 : d, v = v < 0 ? 0 : v, r[0].x = -s, r[0].y = -o, r[1].x = u * p - s, r[1].y = f * _ - o, r[2].x = r[1].x + d, r[2].y = r[1].y + v, r[3].x = i - s, r[3].y = n - o, e.vertDirty = !1;
        },
        fillBuffers: function fillBuffers(t, e) {
          t.node.hasChangedFlags && this.updateWorldVertexData(t);
          var r = e.acquireBufferBatch(),
              i = t.renderData,
              n = i.data,
              s = r.byteOffset >> 2,
              o = i.vertexCount,
              h = r.indicesOffset,
              u = r.vertexOffset,
              c = t.spriteFrame.uvSliced;
          r.request(o, i.indicesCount) || (r = e.currBufferBatch, s = 0, h = 0, u = 0);

          for (var l = r.vData, f = r.iData, d = 4; d < 20; ++d) {
            var v = n[d],
                p = c[d - 4];
            l[s++] = v.x, l[s++] = v.y, l[s++] = v.z, l[s++] = p.u, l[s++] = p.v, a.toArray(l, n[d].color, s), s += 4;
          }

          for (var _ = 0; _ < 3; ++_) {
            for (var x = 0; x < 3; ++x) {
              var g = u + 4 * _ + x;
              f[h++] = g, f[h++] = g + 1, f[h++] = g + 4, f[h++] = g + 1, f[h++] = g + 5, f[h++] = g + 4;
            }
          }
        },
        updateWorldVertexData: function updateWorldVertexData(t) {
          var r = t.node,
              a = t.renderData.data;
          r.getWorldMatrix(Vr);

          for (var i = 0; i < 4; ++i) {
            for (var n = a[i], s = 0; s < 4; ++s) {
              var o = a[s],
                  h = a[4 + 4 * i + s];
              e.set(zr, o.x, n.y, 0), e.transformMat4(h, zr, Vr);
            }
          }
        },
        updateColor: function updateColor(t) {
          for (var e = t.renderData.data, r = t.color, a = r.r, i = r.g, n = r.b, s = 255 * t.node._uiProps.opacity, o = 4; o < 20; o++) {
            e[o].color.r = a, e[o].color.g = i, e[o].color.b = n, e[o].color.a = s;
          }
        }
      }, Wr = [], Zr = 0; Zr < 4; Zr++) {
        Wr.push(new e());
      }

      var qr = {
        createData: function createData(t) {
          return t.requestRenderData();
        },
        updateRenderData: function updateRenderData(t) {
          var e = t.renderData,
              r = t.spriteFrame;

          if (r && e && (e.uvDirty || e.vertDirty)) {
            var a = t.node._uiProps.uiTransformComp,
                i = Math.abs(a.width),
                n = Math.abs(a.height),
                s = r.getRect(),
                o = r.insetLeft,
                h = r.insetRight,
                u = s.width - o - h,
                c = r.insetTop,
                l = r.insetBottom,
                f = s.height - c - l,
                d = i - o - h,
                v = n - c - l;
            d = d > 0 ? d : 0, v = v > 0 ? v : 0;

            var p = 0 === u ? d : d / u,
                _ = 0 === f ? v : v / f,
                x = Math.ceil(_ + 2),
                g = Math.ceil(p + 2);

            e.dataLength = Math.max(8, x + 1, g + 1), this.updateVerts(t, d, v, x, g), e.vertexCount = x * g * 4, e.indicesCount = x * g * 6, e.uvDirty = !1, e.vertDirty = !1, this.updateColor(t);
          }
        },
        fillBuffers: function fillBuffers(t, e) {
          var r = t.node,
              i = t.node._uiProps.uiTransformComp,
              n = Math.abs(i.width),
              s = Math.abs(i.height),
              o = t.renderData,
              h = e.acquireBufferBatch(),
              u = h.indicesOffset,
              c = h.byteOffset >> 2,
              l = h.vertexOffset,
              f = o.vertexCount,
              d = o.indicesCount,
              v = h.vData,
              p = h.iData;
          h.request(f, d) || (h = e.currBufferBatch, c = 0, u = 0, l = 0);

          var _ = t.spriteFrame,
              x = _.isRotated(),
              g = _.uv,
              y = t.spriteFrame.uvSliced,
              m = _.getRect(),
              S = _.insetLeft,
              D = _.insetRight,
              w = m.width - S - D,
              B = _.insetTop,
              C = _.insetBottom,
              b = m.height - B - C,
              M = n - S - D,
              T = s - B - C;

          M = M > 0 ? M : 0, T = T > 0 ? T : 0;
          var F = 0 === w ? M : M / w,
              L = 0 === b ? T : T / b,
              A = Math.ceil(L + 2),
              R = Math.ceil(F + 2),
              E = r.worldMatrix,
              P = o.data;
          this.fillVertices(v, c, E, A, R, P);

          for (var O = 0, H = 0, I = [], N = [], k = 0, z = A; k < z; ++k) {
            H = T > b ? T >= k * b ? 1 : L % 1 : L;

            for (var V = 0, U = R; V < U; ++V) {
              O = M > w ? M >= V * w ? 1 : F % 1 : F;
              var W = c + 3,
                  Z = W + 1;
              x ? (0 === k ? (I[0] = y[0].u, I[1] = y[0].u, I[2] = y[4].u + (y[8].u - y[4].u) * H) : k < A - 1 ? (I[0] = y[4].u, I[1] = y[4].u, I[2] = y[4].u + (y[8].u - y[4].u) * H) : k === A - 1 && (I[0] = y[8].u, I[1] = y[8].u, I[2] = y[12].u), 0 === V ? (N[0] = y[0].v, N[1] = y[1].v + (y[2].v - y[1].v) * O, N[2] = y[0].v) : V < R - 1 ? (N[0] = y[1].v, N[1] = y[1].v + (y[2].v - y[1].v) * O, N[2] = y[1].v) : V === R - 1 && (N[0] = y[2].v, N[1] = y[3].v, N[2] = y[2].v), I[3] = I[2], N[3] = N[1]) : (0 === V ? (I[0] = y[0].u, I[1] = y[1].u + (y[2].u - y[1].u) * O, I[2] = g[0]) : V < R - 1 ? (I[0] = y[1].u, I[1] = y[1].u + (y[2].u - y[1].u) * O, I[2] = y[1].u) : V === R - 1 && (I[0] = y[2].u, I[1] = y[3].u, I[2] = y[2].u), 0 === k ? (N[0] = y[0].v, N[1] = y[0].v, N[2] = y[4].v + (y[8].v - y[4].v) * H) : k < A - 1 ? (N[0] = y[4].v, N[1] = y[4].v, N[2] = y[4].v + (y[8].v - y[4].v) * H) : k === A - 1 && (N[0] = y[8].v, N[1] = y[8].v, N[2] = y[12].v), I[3] = I[1], N[3] = N[2]), v[W] = I[0], v[Z] = N[0], v[W + 9] = I[1], v[Z + 9] = N[1], v[W + 18] = I[2], v[Z + 18] = N[2], v[W + 27] = I[3], v[Z + 27] = N[3], a.toArray(v, P[0].color, Z + 1), a.toArray(v, P[0].color, Z + 9 + 1), a.toArray(v, P[0].color, Z + 18 + 1), a.toArray(v, P[0].color, Z + 27 + 1), c += 36;
            }
          }

          for (var q = 0; q < d; q += 6) {
            p[u++] = l, p[u++] = l + 1, p[u++] = l + 2, p[u++] = l + 1, p[u++] = l + 3, p[u++] = l + 2, l += 4;
          }
        },
        fillVertices: function fillVertices(t, r, a, i, n, s) {
          for (var o = 0, h = 0, u = 0, c = 0, l = 0, f = i; l < f; ++l) {
            u = s[l].y, c = s[l + 1].y;

            for (var d = 0, v = n; d < v; ++d) {
              o = s[d].x, h = s[d + 1].x, e.set(Wr[0], o, u, 0), e.set(Wr[1], h, u, 0), e.set(Wr[2], o, c, 0), e.set(Wr[3], h, c, 0);

              for (var p = 0; p < 4; p++) {
                var _ = Wr[p];
                e.transformMat4(_, _, a);
                var x = 9 * p;
                t[r + x] = _.x, t[r + x + 1] = _.y, t[r + x + 2] = _.z;
              }

              r += 36;
            }
          }
        },
        updateVerts: function updateVerts(t, e, r, a, i) {
          var n,
              s,
              o = t.node._uiProps.uiTransformComp,
              h = t.renderData.data,
              u = t.spriteFrame,
              c = u.getRect(),
              l = Math.abs(o.width),
              f = Math.abs(o.height),
              d = o.anchorX * l,
              v = o.anchorY * f,
              p = u.insetLeft,
              _ = u.insetRight,
              x = c.width - p - _,
              g = u.insetTop,
              y = u.insetBottom,
              m = c.height - g - y,
              S = o.width / (p + _) > 1 ? 1 : o.width / (p + _),
              D = o.height / (g + y) > 1 ? 1 : o.height / (g + y);
          n = x > 0 ? Math.floor(1e3 * e) / 1e3 % x == 0 ? x : e % x : e, s = m > 0 ? Math.floor(1e3 * r) / 1e3 % m == 0 ? m : r % m : r;

          for (var w = 0; w <= i; w++) {
            0 === w ? h[w].x = -d : w > 0 && w < i ? h[w].x = 1 === w ? p * S + Math.min(x, e) - d : x > 0 ? w === i - 1 ? p + n + x * (w - 2) - d : p + Math.min(x, e) + x * (w - 2) - d : p + e - d : w === i && (h[w].x = Math.min(p + e + _, l) - d);
          }

          for (var B = 0; B <= a; B++) {
            0 === B ? h[B].y = -v : B > 0 && B < a ? h[B].y = 1 === B ? y * D + Math.min(m, r) - v : m > 0 ? B === a - 1 ? y + s + (B - 2) * m - v : y + Math.min(m, r) + (B - 2) * m - v : y + r - v : B === a && (h[B].y = Math.min(y + r + g, f) - v);
          }
        },
        updateColor: function updateColor(t) {
          var e = t.renderData.data,
              r = e.length;
          if (0 !== r) for (var a = t.color, i = a.r, n = a.g, s = a.b, o = 255 * t.node._uiProps.opacity, h = 0; h < r; h++) {
            e[h].color.r = i, e[h].color.g = n, e[h].color.b = s, e[h].color.a = o;
          }
        }
      },
          Gr = q.Type,
          Xr = q.FillType,
          jr = t("s", {
        getAssembler: function getAssembler(t) {
          var e = kr,
              r = t;

          switch (r.type) {
            case Gr.SLICED:
              e = Ur;
              break;

            case Gr.TILED:
              e = qr;
              break;

            case Gr.FILLED:
              e = r.fillType === Xr.RADIAL ? Hr : Sr;
          }

          return e;
        }
      });
      q.Assembler = jr;
      var Kr = X.sharedManager,
          Qr = {
        createData: function createData(t) {
          var e = t.requestRenderData();
          return e.dataLength = 4, e.vertexCount = 4, e.indicesCount = 6, e.vData = new Float32Array(36), e;
        },
        updateRenderData: function updateRenderData(t) {
          t.type === nt.IMAGE_STENCIL && (kr.updateRenderData(t), kr.updateColor(t));
        },
        fillBuffers: function fillBuffers(t, e) {
          (t.type !== nt.IMAGE_STENCIL || t.spriteFrame) && (Kr.pushMask(t), e.finishMergeBatches(), function (t, e) {
            Kr.clear(t), e.commitModel(t, t._clearModel, t._clearStencilMtl);
          }(t, e), function (t, e) {
            if (Kr.enterLevel(t), t.type === nt.IMAGE_STENCIL) {
              kr.fillBuffers(t, e);
              var r = t.graphics.getMaterialInstance(0);
              e.forceMergeBatches(r, t.spriteFrame, t.graphics);
            } else t.graphics.updateAssembler(e);
          }(t, e), Kr.enableMask());
        }
      },
          Jr = {
        fillBuffers: function fillBuffers() {
          Kr.exitMask();
        }
      },
          Yr = {
        getAssembler: function getAssembler() {
          return Qr;
        }
      },
          $r = {
        getAssembler: function getAssembler() {
          return Jr;
        }
      };
      it.Assembler = Yr, it.PostAssembler = $r;

      var ta = new g(null),
          ea = new r(),
          ra = t("B", function () {
        var t = e.prototype;

        function e(t) {
          var e = this;
          this.device = void 0, this._screens = [], this._bufferBatchPool = new y(function () {
            return new st(e);
          }, 128), this._drawBatchPool = void 0, this._meshBuffers = new Map(), this._customMeshBuffers = new Map(), this._meshBufferUseCount = new Map(), this._batches = void 0, this._doUploadBuffersCall = new Map(), this._emptyMaterial = new m(), this._currScene = null, this._currMaterial = this._emptyMaterial, this._currTexture = null, this._currSampler = null, this._currMeshBuffer = null, this._currStaticRoot = null, this._currComponent = null, this._currTransform = null, this._currTextureHash = 0, this._currSamplerHash = 0, this._currBlendTargetHash = 0, this._currLayer = 0, this._currDepthStencilStateStage = null, this._currIsStatic = !1, this._currOpacity = 1, this._descriptorSetCache = new ia(), this._root = t, this.device = t.device, this._batches = new S(64), this._drawBatchPool = new D(function () {
            return new ot();
          }, 128);
        }

        return t.acquireBufferBatch = function (t) {
          void 0 === t && (t = tt);
          var e = t === tt ? 36 : et(t);
          return this._currMeshBuffer && this._currMeshBuffer.vertexFormatBytes === e || this._requireBufferBatch(t), this._currMeshBuffer;
        }, t.registerCustomBuffer = function (t, e) {
          var r;
          t instanceof st ? r = t : (r = this._bufferBatchPool.add()).initialize(t, e || this._recreateMeshBuffer.bind(this, t));

          var a = r.vertexFormatBytes,
              i = this._customMeshBuffers.get(a);

          return i || (i = [], this._customMeshBuffers.set(a, i)), i.push(r), r;
        }, t.unRegisterCustomBuffer = function (t) {
          var e = this._customMeshBuffers.get(t.vertexFormatBytes);

          if (e) for (var r = 0; r < e.length; r++) {
            if (e[r] === t) {
              e.splice(r, 1);
              break;
            }
          }

          var a = this._bufferBatchPool.data.indexOf(t);

          -1 !== a && (t.reset(), this._bufferBatchPool.removeAt(a));
        }, t.initialize = function () {
          return !0;
        }, t.destroy = function () {
          for (var t = this, e = 0; e < this._batches.length; e++) {
            this._batches.array[e] && this._batches.array[e].destroy(this);
          }

          this._batches.destroy();

          for (var r, a = l(this._meshBuffers.keys()); !(r = a()).done;) {
            var i = r.value,
                n = this._meshBuffers.get(i);

            n && n.forEach(function (t) {
              return t.destroy();
            });
          }

          this._drawBatchPool && this._drawBatchPool.destroy(function (e) {
            e.destroy(t);
          }), this._descriptorSetCache.destroy(), this._meshBuffers.clear(), X.sharedManager.destroy();
        }, t.addScreen = function (t) {
          this._screens.push(t), this._screens.sort(this._screenSort);
        }, t.getFirstRenderCamera = function (t) {
          if (t.scene && t.scene.renderScene) for (var e = t.scene.renderScene.cameras, r = 0; r < e.length; r++) {
            var a = e[r];
            if (a.visibility & t.layer) return a;
          }
          return null;
        }, t.removeScreen = function (t) {
          var e = this._screens.indexOf(t);

          -1 !== e && this._screens.splice(e, 1);
        }, t.sortScreens = function () {
          this._screens.sort(this._screenSort);
        }, t.addUploadBuffersFunc = function (t, e) {
          this._doUploadBuffersCall.set(t, e);
        }, t.removeUploadBuffersFunc = function (t) {
          this._doUploadBuffersCall.delete(t);
        }, t.update = function () {
          for (var t = this._screens, e = 0; e < t.length; ++e) {
            var r = t[e];
            r.enabledInHierarchy && (this._currOpacity = 1, this._recursiveScreenNode(r.node));
          }

          var a = 0;
          if (this._batches.length) for (var i = 0; i < this._batches.length; ++i) {
            var n = this._batches.array[i];

            if (n.renderScene) {
              if (n.model) for (var s = n.model.subModels, o = 0; o < s.length; o++) {
                s[o].priority = a++;
              } else n.descriptorSet = this._descriptorSetCache.getDescriptorSet(n);
              n.renderScene.addBatch(n);
            }
          }
        }, t.uploadBuffers = function () {
          var t = this;
          this._batches.length > 0 && (this._doUploadBuffersCall.forEach(function (e, r) {
            e.call(r, t);
          }), this._meshBuffers.forEach(function (t) {
            t.forEach(function (t) {
              t.uploadBuffers(), t.reset();
            });
          }), this._customMeshBuffers.forEach(function (t) {
            t.forEach(function (t) {
              t.uploadBuffers(), t.reset();
            });
          }), this._descriptorSetCache.update());
        }, t.reset = function () {
          for (var t = 0; t < this._batches.length; ++t) {
            var e = this._batches.array[t];
            e.isStatic || (e.clear(), this._drawBatchPool.free(e));
          }

          this._currLayer = 0, this._currMaterial = this._emptyMaterial, this._currTexture = null, this._currSampler = null, this._currComponent = null, this._currTransform = null, this._currScene = null, this._currMeshBuffer = null, this._currOpacity = 1, this._meshBufferUseCount.clear(), this._batches.clear(), X.sharedManager.reset(), this._descriptorSetCache.reset();
        }, t.commitComp = function (t, e, r, a) {
          var i,
              n,
              s = t,
              o = 0,
              h = 0;
          e ? (i = e.getGFXTexture(), n = e.getGFXSampler(), o = e.getHash(), h = e.getSamplerHash()) : (i = null, n = null);

          var u = s._getRenderScene(),
              c = s.getRenderMaterial(0);

          s.stencilStage = X.sharedManager.stage;
          var l = s.blendHash,
              f = s.stencilStage;
          this._currScene === u && this._currLayer === t.node.layer && this._currMaterial === c && this._currBlendTargetHash === l && this._currDepthStencilStateStage === f && this._currTextureHash === o && this._currSamplerHash === h && this._currTransform === a || (this.autoMergeBatches(this._currComponent), this._currScene = u, this._currComponent = s, this._currTransform = a, this._currMaterial = c, this._currTexture = i, this._currSampler = n, this._currTextureHash = o, this._currSamplerHash = h, this._currBlendTargetHash = l, this._currDepthStencilStateStage = f, this._currLayer = t.node.layer), r && r.fillBuffers(s, this);
        }, t.commitModel = function (t, e, r) {
          var a;
          this._currMaterial !== this._emptyMaterial && this.autoMergeBatches(this._currComponent);
          var i = 0;
          r && (t.stencilStage !== j.ENABLED && t.stencilStage !== j.DISABLED || (t.stencilStage = X.sharedManager.stage), a = X.sharedManager.getStencilStage(t.stencilStage, r), i = X.sharedManager.getStencilHash(t.stencilStage));
          var n = c.director.getTotalFrames();
          e && (e.updateTransform(n), e.updateUBOs(n));

          for (var s = 0; s < e.subModels.length; s++) {
            var o = this._drawBatchPool.alloc(),
                h = e.subModels[s];

            o.renderScene = t._getRenderScene(), o.visFlags = t.node.layer, o.model = e, o.bufferBatch = null, o.texture = null, o.sampler = null, o.useLocalData = null, a || (a = null), o.fillPasses(r, a, i, null, 0, h.patches), o.descriptorSet = h.descriptorSet, o.inputAssembler = h.inputAssembler, o.model.visFlags = o.visFlags, this._batches.push(o);
          }

          this._currMaterial = this._emptyMaterial, this._currScene = null, this._currComponent = null, this._currTransform = null, this._currTexture = null, this._currSampler = null, this._currTextureHash = 0, this._currSamplerHash = 0, this._currLayer = 0;
        }, t.commitStaticBatch = function (t) {
          this._batches.concat(t.drawBatchList), this.finishMergeBatches();
        }, t.autoMergeBatches = function (t) {
          var e = this.currBufferBatch,
              r = null == e ? void 0 : e.recordBatch(),
              a = this._currMaterial;

          if (r && a && e) {
            var i,
                n,
                s = 0,
                o = 0;
            t && (i = -1 === t.blendHash ? null : t.getBlendState(), o = t.blendHash, n = null !== t.customMaterial ? X.sharedManager.getStencilStage(t.stencilStage, a) : X.sharedManager.getStencilStage(t.stencilStage), s = X.sharedManager.getStencilHash(t.stencilStage));
            var h = this._currStaticRoot ? this._currStaticRoot._requireDrawBatch() : this._drawBatchPool.alloc();
            h.renderScene = this._currScene, h.visFlags = this._currLayer, h.bufferBatch = e, h.texture = this._currTexture, h.sampler = this._currSampler, h.inputAssembler = r, h.useLocalData = this._currTransform, h.textureHash = this._currTextureHash, h.samplerHash = this._currSamplerHash, h.fillPasses(a, n, s, i, o, null), this._batches.push(h), e.vertexStart = e.vertexOffset, e.indicesStart = e.indicesOffset, e.byteStart = e.byteOffset, v.__isWebIOS14OrIPadOS14Env && !this._currIsStatic && (this._currMeshBuffer = null);
          }
        }, t.forceMergeBatches = function (t, e, r) {
          this._currMaterial = t, e ? (this._currTexture = e.getGFXTexture(), this._currSampler = e.getGFXSampler(), this._currTextureHash = e.getHash(), this._currSamplerHash = e.getSamplerHash()) : (this._currTexture = this._currSampler = null, this._currTextureHash = this._currSamplerHash = 0), this._currLayer = r.node.layer, this._currScene = r._getRenderScene(), this.autoMergeBatches(r);
        }, t.finishMergeBatches = function () {
          this.autoMergeBatches(), this._currMaterial = this._emptyMaterial, this._currTexture = null, this._currComponent = null, this._currTransform = null, this._currTextureHash = 0, this._currSamplerHash = 0, this._currLayer = 0;
        }, t.flushMaterial = function (t) {
          this._currMaterial = t;
        }, t.walk = function (t, e) {
          void 0 === e && (e = 0);
          var r = t.children.length;
          if (this._preProcess(t), r > 0 && !t._static) for (var a = t.children, i = 0; i < a.length; ++i) {
            this._currOpacity = t._uiProps.opacity;
            var n = a[i];
            this.walk(n, e);
          }
          this._postProcess(t), e += 1;
        }, t._preProcess = function (t) {
          var e = t._uiProps.uiComp,
              r = t._uiProps.localOpacity;
          t._uiProps.opacity = this._currOpacity * r, t._uiProps.uiTransformComp && e && e.enabledInHierarchy && e.updateAssembler(this);
        }, t._postProcess = function (t) {
          var e = t._uiProps.uiComp;
          e && e.enabledInHierarchy && e.postUpdateAssembler(this);
        }, t._recursiveScreenNode = function (t) {
          this.walk(t), this.autoMergeBatches(this._currComponent);
        }, t._createMeshBuffer = function (t) {
          var e = this._bufferBatchPool.add();

          e.initialize(t, this._recreateMeshBuffer.bind(this, t));

          var r = et(t),
              a = this._meshBuffers.get(r);

          return a || (a = [], this._meshBuffers.set(r, a)), a.push(e), e;
        }, t._recreateMeshBuffer = function (t, e, r) {
          this.autoMergeBatches(), this._requireBufferBatch(t, e, r);
        }, t._requireBufferBatch = function (t, e, r) {
          var a = et(t),
              i = this._meshBuffers.get(a);

          i || (i = [], this._meshBuffers.set(a, i));
          var n = this._meshBufferUseCount.get(a) || 0;
          (e && r || v.__isWebIOS14OrIPadOS14Env) && n++, this._currMeshBuffer = i[n], this._currMeshBuffer || (this._currMeshBuffer = this._createMeshBuffer(t)), this._meshBufferUseCount.set(a, n), e && r && this._currMeshBuffer.request(e, r);
        }, t._screenSort = function (t, e) {
          return t.node.getSiblingIndex() - e.node.getSiblingIndex();
        }, t._releaseDescriptorSetCache = function (t) {
          this._descriptorSetCache.releaseDescriptorSetCache(t);
        }, p(e, [{
          key: "currBufferBatch",
          get: function get() {
            return this._currMeshBuffer || (this._currMeshBuffer = this.acquireBufferBatch()), this._currMeshBuffer;
          },
          set: function set(t) {
            t && (this._currMeshBuffer = t);
          }
        }, {
          key: "batches",
          get: function get() {
            return this._batches;
          }
        }, {
          key: "currStaticRoot",
          set: function set(t) {
            this._currStaticRoot = t;
          }
        }, {
          key: "currIsStatic",
          set: function set(t) {
            this._currIsStatic = t;
          }
        }]), e;
      }()),
          aa = function () {
        function t() {
          this._descriptorSet = null, this._transform = null, this._textureHash = 0, this._samplerHash = 0, this._localBuffer = null, this._transformUpdate = !0;
          var t = c.director.root.device;
          this._localData = new Float32Array(_.COUNT), this._localBuffer = t.createBuffer(new w(B.UNIFORM | B.TRANSFER_DST, C.HOST | C.DEVICE, _.SIZE, _.SIZE));
        }

        var e = t.prototype;
        return e.initialize = function (t) {
          var e = c.director.root.device;
          this._transform = t.useLocalData, this._textureHash = t.textureHash, this._samplerHash = t.samplerHash, ta.layout = t.passes[0].localSetLayout, this._descriptorSet = e.createDescriptorSet(ta), this._descriptorSet.bindBuffer(_.BINDING, this._localBuffer);
          var r = x.SAMPLER_SPRITE;
          this._descriptorSet.bindTexture(r, t.texture), this._descriptorSet.bindSampler(r, t.sampler), this._descriptorSet.update(), this._transformUpdate = !0;
        }, e.updateTransform = function (t) {
          t !== this._transform && (this._transform = t, this._transformUpdate = !0, this.uploadLocalData());
        }, e.updateLocal = function () {
          this._transform && this.uploadLocalData();
        }, e.equals = function (t, e, r) {
          return this._transform === t && this._textureHash === e && this._samplerHash === r;
        }, e.reset = function () {
          this._transform = null, this._textureHash = 0, this._samplerHash = 0;
        }, e.destroy = function () {
          this._localBuffer && (this._localBuffer.destroy(), this._localBuffer = null), this._descriptorSet && (this._descriptorSet.destroy(), this._descriptorSet = null), this._localData = null;
        }, e.uploadLocalData = function () {
          var t = this._transform;

          if ((t.hasChangedFlags || t._dirtyFlags) && t.updateWorldTransform(), this._transformUpdate) {
            var e = t._mat;
            r.toArray(this._localData, e, _.MAT_WORLD_OFFSET), r.inverseTranspose(ea, e);
            var a = r.determinant(ea),
                i = 1 / Math.sqrt(a);
            r.multiplyScalar(ea, ea, i), r.toArray(this._localData, ea, _.MAT_WORLD_IT_OFFSET), this._localBuffer.update(this._localData), this._transformUpdate = !1;
          }
        }, p(t, [{
          key: "descriptorSet",
          get: function get() {
            return this._descriptorSet;
          }
        }]), t;
      }(),
          ia = function () {
        function t() {
          this._descriptorSetCache = new Map(), this._localDescriptorSetCache = [], this._localCachePool = void 0, this._localCachePool = new D(function () {
            return new aa();
          }, 16);
        }

        var e = t.prototype;
        return e.getDescriptorSet = function (t) {
          var e = c.director.root;

          if (t.useLocalData) {
            for (var r = this._localDescriptorSetCache, a = 0, i = r.length; a < i; a++) {
              var n = r[a];
              if (n.equals(t.useLocalData, t.textureHash, t.samplerHash)) return n.descriptorSet;
            }

            var s = this._localCachePool.alloc();

            return s.initialize(t), this._localDescriptorSetCache.push(s), s.descriptorSet;
          }

          var o = this._descriptorSetCache.get(t.textureHash);

          if (o && o.has(t.samplerHash)) return o.get(t.samplerHash);
          c.director.root.device, ta.layout = t.passes[0].localSetLayout;
          var h = e.device.createDescriptorSet(ta),
              u = x.SAMPLER_SPRITE;
          return h.bindTexture(u, t.texture), h.bindSampler(u, t.sampler), h.update(), o ? this._descriptorSetCache.get(t.textureHash).set(t.samplerHash, h) : this._descriptorSetCache.set(t.textureHash, new Map([[t.samplerHash, h]])), h;
        }, e.update = function () {
          this._localDescriptorSetCache.forEach(function (t) {
            t.updateLocal();
          });
        }, e.reset = function () {
          var t = this;
          this._localDescriptorSetCache.forEach(function (e) {
            t._localCachePool.free(e);
          }), this._localDescriptorSetCache.length = 0;
        }, e.releaseDescriptorSetCache = function (t) {
          this._descriptorSetCache.has(t) && (this._descriptorSetCache.get(t).forEach(function (t) {
            t.destroy();
          }), this._descriptorSetCache.delete(t));
        }, e.destroy = function () {
          this._descriptorSetCache.forEach(function (t) {
            t.forEach(function (t) {
              t.destroy();
            });
          }), this._descriptorSetCache.clear(), this._localDescriptorSetCache.length = 0, this._localCachePool.destroy(function (t) {
            t.destroy();
          });
        }, t;
      }();

      c.internal.Batcher2D = ra;
      var na,
          sa = null,
          oa = -1,
          ha = "BES bswy:->@123丁ぁᄁ",
          ua = Object.create(null),
          ca = [],
          la = 3e3;

      function fa() {
        for (var t = !0, e = Date.now(), r = ca.length - 1; r >= 0; r--) {
          var a = ca[r],
              i = a.fontFamilyName;
          if (e - a.startTime > la) b(4933, i), a.onComplete(null, i), ca.splice(r, 1);else {
            var n = a.refWidth,
                s = "40px " + i;
            sa.font = s, n !== z(sa, ha, s) ? (ca.splice(r, 1), a.onComplete(null, i)) : t = !1;
          }
        }

        t && (clearInterval(oa), oa = -1);
      }

      function da(t, e, r) {
        var a = function (t) {
          var e = t.lastIndexOf(".ttf");
          if (-1 === e) return t;
          var r,
              a = t.lastIndexOf("/");
          return -1 !== (r = -1 === a ? t.substring(0, e) + "_LABEL" : t.substring(a + 1, e) + "_LABEL").indexOf(" ") && (r = '"' + r + '"'), r;
        }(t);

        if (ua[a]) r(null, a);else {
          if (!sa) {
            var i = document.createElement("canvas");
            i.width = 100, i.height = 100, sa = i.getContext("2d");
          }

          var n = z(sa, ha, "40px " + a),
              s = document.createElement("style");
          s.type = "text/css";
          var o = "";
          Number.isNaN(a) ? o += "@font-face { font-family:" + a + "; src:" : o += '@font-face { font-family:"' + a + '"; src:', o += 'url("' + t + '");', s.textContent = o + "}", document.body.appendChild(s);
          var h,
              u,
              c,
              l,
              f,
              d,
              v = document.createElement("div"),
              p = v.style;
          if (p.fontFamily = a, v.innerHTML = ".", p.position = "absolute", p.left = "-100px", p.top = "-100px", document.body.appendChild(v), function () {
            if (void 0 === na) if ("FontFace" in window) {
              var t = /Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),
                  e = /OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent) && /Apple/.exec(window.navigator.vendor);
              na = t ? parseInt(t[1], 10) > 42 : !e;
            } else na = !1;
            return na;
          }()) h = Date.now(), u = a, c = r, l = new Promise(function (t, e) {
            !function r() {
              Date.now() - h >= la ? e() : document.fonts.load("40px " + u).then(function (e) {
                e.length >= 1 ? t() : setTimeout(r, 100);
              }, function () {
                e();
              });
            }();
          }), f = null, d = new Promise(function (t, e) {
            f = setTimeout(e, la);
          }), Promise.race([d, l]).then(function () {
            f && (clearTimeout(f), f = null), c(null, u);
          }, function () {
            b(4933, u), c(null, u);
          });else {
            var _ = {
              fontFamilyName: a,
              refWidth: n,
              onComplete: r,
              startTime: Date.now()
            };
            ca.push(_), -1 === oa && (oa = setInterval(fa, 100));
          }
          ua[a] = s;
        }
      }

      function va(t, e, r, a) {
        var i = new G();
        i._nativeUrl = t, i._nativeAsset = e, a(null, i);
      }

      M.register({
        ".font": da,
        ".eot": da,
        ".ttf": da,
        ".woff": da,
        ".svg": da,
        ".ttc": da
      }), T.register({
        ".font": va,
        ".eot": va,
        ".ttf": va,
        ".woff": va,
        ".svg": va,
        ".ttc": va
      }), c.UI = {
        MeshBuffer: st,
        spriteAssembler: jr,
        graphicsAssembler: jt,
        labelAssembler: xr
      };
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/index-60bf8166.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("@babel/runtime/helpers/Arrayincludes");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js"], function (e, t) {
  "use strict";

  var i, n, r, s, a, o, u, c, h, l, d, f, p, m, _, g, v, y, w, T, b, A, E, S, N, x, R, I, P, k, C, D, M, F, B, L, O, U, W, V, j, H, z, q, G, X, Y, Q, J, K, Z, $, ee, te, ie, ne, re, se, ae, oe, ue, ce, he, le, de, fe, pe, me, _e, ge, ve, ye, we, Te, be, Ae, Ee, Se, Ne, xe, Re, Ie, Pe, ke, Ce, De, Me, Fe, Be, Le, Oe, Ue, We, Ve, je, He, ze, qe, Ge, Xe, Ye, Qe, Je, Ke, Ze, $e, et, tt, it, nt, rt, st, at, ot, ut, ct, ht, lt, dt, ft, pt, mt, _t, gt, vt, yt, wt, Tt, bt, At, Et, St, Nt, xt, Rt, It, Pt, kt, Ct, Dt, Mt, Ft, Bt, Lt, Ot, Ut, Wt, Vt, jt, Ht, zt, qt, Gt, Xt, Yt, Qt, Jt, Kt, Zt, $t, ei, ti, ii, ni, ri, si, ai, oi, ui, ci, hi, li, di, fi, pi, mi, _i, gi, vi, yi, wi, Ti, bi, Ai, Ei, Si, Ni, xi, Ri, Ii, Pi, ki, Ci, Di, Mi, Fi, Bi, Li, Oi, Ui, Wi, Vi, ji, Hi;

  return {
    setters: [function (e) {
      i = e.c2, n = e.c3, r = e.c4, s = e.c5, a = e.c6, o = e.c7, u = e.c8, c = e.c9, h = e.ca, l = e.cb, d = e.cc, f = e.cd, p = e.ce, m = e.cf, _ = e.cg, g = e.ch, v = e.ci, y = e.cj, w = e.ck, T = e.cl, b = e.cm, A = e.cn, E = e.co, S = e.cp, N = e.cq, x = e.cr, R = e.cs, I = e.ct, P = e.cu, k = e.cv, C = e.cw, D = e.cx, M = e.cy, F = e.cz, B = e.cA, L = e.cB, O = e.cC, U = e.cD, W = e.cE, V = e.cF, j = e.cG, H = e.cH, z = e.eY, q = e.eZ, G = e.em, X = e.e_, Y = e.e$, Q = e.e1, J = e.f0, K = e.el, Z = e.e9, $ = e.f1, ee = e.f2, te = e.e3, ie = e.f3, ne = e.f4, re = e.f5, se = e.f6, ae = e.f7, oe = e.f8, ue = e.f9, ce = e.fa, he = e.fb, le = e.fc, de = e.fd, fe = e.fe, pe = e.e, me = e.ao, _e = e.l, ge = e.ag, ve = e.aq, ye = e.z, we = e.G, Te = e.aH, be = e.x, Ae = e.aJ, Ee = e.dr, Se = e.ax, Ne = e.N, xe = e.av, Re = e.H, Ie = e.I, Pe = e.ev, ke = e.e2, Ce = e.ff, De = e.v, Me = e.am, Fe = e.cJ, Be = e.ec, Le = e.g, Oe = e.f, Ue = e.d, We = e.c, Ve = e.fg, je = e.fh, He = e.aR, ze = e.t, qe = e.aK, Ge = e.aL, Xe = e.$, Ye = e.aO, Qe = e.dQ, Je = e.P, Ke = e.eN, Ze = e.dj, $e = e.dI, et = e.c_, tt = e.fi, it = e.dH, nt = e.fj, rt = e.dL, st = e.ed, at = e.dd, ot = e.cR, ut = e.cS, ct = e.cT, ht = e.fk, lt = e.fl, dt = e.eM, ft = e.fm, pt = e.fn, mt = e.fo, _t = e.df, gt = e.fp, vt = e.c$, yt = e.fq, wt = e.fr, Tt = e.fs, bt = e.ft, At = e.fu, Et = e.fv, St = e.dz, Nt = e.fw, xt = e.fx, Rt = e.eR, It = e.dB, Pt = e.fy, kt = e.m, Ct = e.fz, Dt = e.k, Mt = e.fA, Ft = e.dm, Bt = e.dl, Lt = e.dk, Ot = e.dg, Ut = e.fB, Wt = e.fC, Vt = e.dn, jt = e.fD, Ht = e.fE, zt = e.fF, qt = e.fG, Gt = e.fH, Xt = e.fI, Yt = e.fJ, Qt = e.fK, Jt = e.fL, Kt = e.fM, Zt = e.fN, $t = e.fO, ei = e.fP, ti = e.i, ii = e.fQ, ni = e.fR, ri = e.fS, si = e.o, ai = e.dC, oi = e.fT, ui = e.n, ci = e.ef, hi = e.ek, li = e.eg, di = e.eh, fi = e.ei, pi = e.eu, mi = e.fU, _i = e.bO, gi = e.bB, vi = e.T, yi = e.bL, wi = e.w, Ti = e.fV, bi = e.bU, Ai = e.fW, Ei = e.fX, Si = e.dR;
    }, function (e) {
      Ni = e.F, xi = e.Y, Ri = e.H, Ii = e.L, Pi = e.R, ki = e.e, Ci = e.w, Di = e.Z, Mi = e.G, Fi = e.r, Bi = e.m;
    }, function () {}, function (e) {
      Li = e.C;
    }, function () {}, function (e) {
      Oi = e.k, Ui = e.q, Wi = e.r, Vi = e.t, ji = e.H, Hi = e.c;
    }],
    execute: function execute() {
      e({
        c: Gi,
        n: gs,
        o: vs,
        p: ys
      });
      var zi = Object.freeze({
        __proto__: null,
        bits: i,
        Vec2: n,
        v2: r,
        Vec3: s,
        v3: a,
        Vec4: o,
        v4: u,
        Quat: c,
        quat: h,
        Mat3: l,
        Mat4: d,
        mat4: f,
        AffineTransform: p,
        Size: m,
        size: _,
        Rect: g,
        rect: v,
        Color: y,
        color: w,
        EPSILON: T,
        equals: b,
        approx: A,
        clamp: E,
        clamp01: S,
        lerp: N,
        toRadian: x,
        toDegree: R,
        random: I,
        randomRange: P,
        randomRangeInt: k,
        pseudoRandom: C,
        pseudoRandomRange: D,
        pseudoRandomRangeInt: M,
        nextPow2: F,
        repeat: B,
        pingPong: L,
        inverseLerp: O,
        absMaxComponent: U,
        absMax: W,
        enumerableProps: V,
        MATH_FLOAT_ARRAY: j,
        MathBase: H
      });
      e("m", zi);
      var qi = Object.freeze({
        __proto__: null,
        distance: z,
        enums: q,
        intersect: G,
        Line: X,
        Plane: Y,
        Ray: Q,
        Triangle: J,
        Sphere: K,
        AABB: Z,
        OBB: $,
        Capsule: ee,
        Frustum: te,
        Keyframe: ie,
        AnimationCurve: ne,

        get ERaycastMode() {
          return re;
        },

        line: se,
        plane: ae,
        ray: oe,
        triangle: ue,
        sphere: ce,
        aabb: he,
        obb: le,
        capsule: de,
        frustum: fe
      });

      function Gi() {
        var e = new Ni();
        return e.initialize({
          flows: []
        }), e;
      }

      e("g", qi);

      var Xi = new n(),
          Yi = function () {
        var e = t.prototype;

        function t() {
          this.handle = 0, this.callBack = null, this.cancelAnimate = !1, this.startTime = -1, this._splashFinish = !1, this._loadFinish = !1, this._directCall = !1;
        }

        return e.main = function (e) {
          if (null != e) {
            if (window._CCSettings && window._CCSettings.splashScreen) {
              var t = this.settings = window._CCSettings.splashScreen;
              t.totalTime = null != this.settings.totalTime ? this.settings.totalTime : 3e3, t.base64src = this.settings.base64src || "", t.effect = this.settings.effect || "FADE-INOUT", t.clearColor = this.settings.clearColor || new me(.88, .88, .88, 1), t.displayRatio = null != this.settings.displayRatio ? this.settings.displayRatio : .4, t.displayWatermark = null == this.settings.displayWatermark || this.settings.displayWatermark;
            } else this.settings = {
              totalTime: 3e3,
              base64src: "",
              effect: "FADE-INOUT",
              clearColor: new me(.88, .88, .88, 1),
              displayRatio: .4,
              displayWatermark: !0
            };

            if ("" === this.settings.base64src || this.settings.totalTime <= 0) this.callBack && this.callBack(), this.callBack = null, this.settings = null, this._directCall = !0;else {
              _e.view.enableRetina(!0), _e.view.resizeWithBrowserSize(!0);
              var i = window._CCSettings.designResolution;
              i ? _e.view.setDesignResolutionSize(i.width, i.height, i.policy) : _e.view.setDesignResolutionSize(960, 640, 4), this.root = e, this.device = e.device, _e.game.once(_e.Game.EVENT_GAME_INITED, function () {
                _e.director._lateUpdate = performance.now();
              }, _e.director), this.callBack = null, this.cancelAnimate = !1, this.startTime = -1, this.preInit(), this.logoImage = new Image(), this.logoImage.onload = this.init.bind(this), this.logoImage.src = this.settings.base64src;
            }
          } else pe("RENDER ROOT IS NULL.");
        }, e.setOnFinish = function (e) {
          if (this._directCall && e) return t._ins = void 0, void e();
          this.callBack = e;
        }, e._tryToStart = function () {
          this._splashFinish && this._loadFinish && this.callBack && (this.callBack(), this.hide(), _e.game.resume());
        }, e.preInit = function () {
          var e = this.settings.clearColor;
          this.clearColors = [new me(e.x, e.y, e.z, e.w)];
          var t = this.device;
          this.renderArea = new ge(0, 0, t.width, t.height), this.framebuffer = this.root.mainWindow.framebuffer, this.cmdBuff = t.commandBuffer;
          var i = new Float32Array([.5, .5, 1, 0, -.5, .5, 0, 0, .5, -.5, 1, 1, -.5, -.5, 0, 1]),
              n = 4 * Float32Array.BYTES_PER_ELEMENT,
              r = 4 * n;
          this.vertexBuffers = t.createBuffer(new ve(ye.VERTEX | ye.TRANSFER_DST, we.HOST | we.DEVICE, r, n)), this.vertexBuffers.update(i);
          var s = new Uint16Array([0, 1, 2, 1, 3, 2]),
              a = Uint16Array.BYTES_PER_ELEMENT,
              o = 6 * a;
          this.indicesBuffers = t.createBuffer(new ve(ye.INDEX | ye.TRANSFER_DST, we.HOST | we.DEVICE, o, a)), this.indicesBuffers.update(s);
          var u = [new Te("a_position", be.RG32F), new Te("a_texCoord", be.RG32F)],
              c = new Ae(u, [this.vertexBuffers], this.indicesBuffers);
          this.quadAssmebler = t.createInputAssembler(c), this.projection = new d(), d.ortho(this.projection, -1, 1, -1, 1, -1, 1, t.capabilities.clipSpaceMinZ, t.capabilities.clipSpaceSignY, t.surfaceTransform);
        }, e.init = function () {
          var e = this;
          this.initLogo(), this.settings.displayWatermark && this.initWarterMark(), _e.game.pause(), this.handle = requestAnimationFrame(function t(i) {
            if (!e.cancelAnimate) {
              var n = e.settings,
                  r = e.device;
              d.ortho(e.projection, -1, 1, -1, 1, -1, 1, r.capabilities.clipSpaceMinZ, r.capabilities.clipSpaceSignY, r.surfaceTransform);
              var s = r.width,
                  a = r.height,
                  o = s < a ? s : a;
              e.startTime < 0 && (e.startTime = i);
              var u = i - e.startTime,
                  c = S(u / n.totalTime),
                  h = Ce(c);
              "NONE" === n.effect && (h = 1);
              var l = e.logoTexture.width,
                  f = e.logoTexture.height,
                  p = o * n.displayRatio,
                  m = p * l / f,
                  _ = p;

              if (r.surfaceTransform !== De.ROTATE_90 && r.surfaceTransform !== De.ROTATE_270 || (m = p * s / a, _ = p * f / l * a / s), e.logoMat.setProperty("resolution", Xi.set(s, a), 0), e.logoMat.setProperty("scale", Xi.set(m, _), 0), e.logoMat.setProperty("translate", Xi.set(.5 * s, .5 * a), 0), e.logoMat.setProperty("precent", h), e.logoMat.setProperty("u_projection", e.projection), e.logoMat.passes[0].update(), n.displayWatermark && e.watermarkMat) {
                var g = .5 * o,
                    v = e.watermarkTexture.width,
                    y = g,
                    w = g * e.watermarkTexture.height / v;
                r.surfaceTransform !== De.ROTATE_90 && r.surfaceTransform !== De.ROTATE_270 || (y = .5 * g, w = g * s / a * .5), e.watermarkMat.setProperty("resolution", Xi.set(s, a), 0), e.watermarkMat.setProperty("scale", Xi.set(y, w), 0), e.watermarkMat.setProperty("translate", Xi.set(.5 * s, .1 * a), 0), e.watermarkMat.setProperty("precent", h), e.watermarkMat.setProperty("u_projection", e.projection), e.watermarkMat.passes[0].update();
              }

              e.frame(), u > n.totalTime && (e.splashFinish = !0), requestAnimationFrame(t);
            }
          });
        }, e.hide = function () {
          cancelAnimationFrame(this.handle), this.cancelAnimate = !0, setTimeout(this.destroy.bind(this));
        }, e.initLogo = function () {
          var e = this.device;
          this.logoMat = new Ee(), this.logoMat.initialize({
            effectName: "splash-screen"
          });
          var t = new Se();
          t.addressU = Ne.CLAMP, t.addressV = Ne.CLAMP, t.addressW = Ne.CLAMP, this.sampler = e.createSampler(t), this.logoTexture = e.createTexture(new xe(Re.TEX2D, Ie.SAMPLED | Ie.TRANSFER_DST, be.RGBA8, this.logoImage.width, this.logoImage.height));
          var i = this.logoMat.passes[0],
              n = i.getBinding("mainTexture");
          i.bindTexture(n, this.logoTexture), this.shader = i.getShaderVariant();
          var r = i.descriptorSet;
          r.bindSampler(n, this.sampler), r.update();
          var s = new Me();
          s.texExtent.width = this.logoImage.width, s.texExtent.height = this.logoImage.height, s.texExtent.depth = 1, e.copyTexImagesToTexture([this.logoImage], this.logoTexture, [s]);
        }, e.initWarterMark = function () {
          var e = document.createElement("canvas");
          e.width = 330, e.height = 30, e.style.width = "" + e.width, e.style.height = "" + e.height;
          var t = e.getContext("2d");
          t.font = "18px Arial", t.textBaseline = "top", t.textAlign = "left", t.fillStyle = "`#424242`";
          var i = "Powered by Cocos Creator",
              n = t.measureText(i);
          t.fillText(i, (330 - n.width) / 2, 6);
          var r = new Me();
          r.texExtent.width = e.width, r.texExtent.height = e.height, r.texExtent.depth = 1, this.watermarkTexture = this.device.createTexture(new xe(Re.TEX2D, Ie.SAMPLED | Ie.TRANSFER_DST, be.RGBA8, e.width, e.height)), this.device.copyTexImagesToTexture([e], this.watermarkTexture, [r]), this.watermarkMat = new Ee(), this.watermarkMat.initialize({
            effectName: "splash-screen"
          });
          var s = this.watermarkMat.passes[0],
              a = s.getBinding("mainTexture");
          s.bindTexture(a, this.watermarkTexture), s.descriptorSet.update();
        }, e.frame = function () {
          var e = this.device;
          e.acquire();
          var t = this.cmdBuff,
              i = this.framebuffer,
              n = this.renderArea;
          n.width = e.width, n.height = e.height, t.begin(), t.beginRenderPass(i.renderPass, i, n, this.clearColors, 1, 0);
          var r = this.logoMat.passes[0],
              s = xi.getOrCreatePipelineState(e, r, this.shader, i.renderPass, this.quadAssmebler);

          if (t.bindPipelineState(s), t.bindDescriptorSet(Pe.MATERIAL, r.descriptorSet), t.bindInputAssembler(this.quadAssmebler), t.draw(this.quadAssmebler), this.settings.displayWatermark && this.watermarkMat) {
            var a = this.watermarkMat.passes[0],
                o = xi.getOrCreatePipelineState(e, a, this.shader, i.renderPass, this.quadAssmebler);
            t.bindPipelineState(o), t.bindDescriptorSet(Pe.MATERIAL, a.descriptorSet), t.bindInputAssembler(this.quadAssmebler), t.draw(this.quadAssmebler);
          }

          t.endRenderPass(), t.end(), e.flushCommands([t]), e.queue.submit([t]), e.present();
        }, e.destroy = function () {
          this.callBack = null, this.root = null, this.device = null, this.clearColors = null, this.logoImage.destroy && this.logoImage.destroy(), this.logoImage = null, this.framebuffer = null, this.renderArea = null, this.cmdBuff = null, this.shader = null, this.logoMat.destroy(), this.logoMat = null, this.logoTexture.destroy(), this.logoTexture = null, this.quadAssmebler.destroy(), this.quadAssmebler = null, this.vertexBuffers.destroy(), this.vertexBuffers = null, this.indicesBuffers.destroy(), this.indicesBuffers = null, this.sampler.destroy(), this.sampler = null, this.watermarkTexture && (this.watermarkMat.destroy(), this.watermarkMat = null, this.watermarkTexture.destroy(), this.watermarkTexture = null), this.settings = null, t._ins = void 0;
        }, ke(t, [{
          key: "splashFinish",
          set: function set(e) {
            this._splashFinish = e, this._tryToStart();
          }
        }, {
          key: "loadFinish",
          set: function set(e) {
            this._loadFinish = e, this._tryToStart();
          }
        }], [{
          key: "instance",
          get: function get() {
            return t._ins || (t._ins = new t()), t._ins;
          }
        }]), t;
      }();

      Yi._ins = void 0, _e.internal.SplashScreen = Yi;
      var Qi = e("h", function () {
        function e() {
          this._id = "", this._priority = 0, this._executeInEditMode = !1;
        }

        e.sortByPriority = function (e, t) {
          return e._priority < t._priority ? 1 : e._priority > t.priority ? -1 : 0;
        };

        var t = e.prototype;
        return t.init = function () {}, t.update = function () {}, t.postUpdate = function () {}, ke(e, [{
          key: "priority",
          get: function get() {
            return this._priority;
          },
          set: function set(e) {
            this._priority = e;
          }
        }, {
          key: "id",
          get: function get() {
            return this._id;
          },
          set: function set(e) {
            this._id = e;
          }
        }]), e;
      }());
      Qi.Priority = Fe({
        LOW: 0,
        MEDIUM: 100,
        HIGH: 200,
        SCHEDULER: 1 << 31 >>> 0
      });

      var Ji = new je("Scheduler"),
          Ki = function Ki(e, t, i, n) {
        this.target = void 0, this.priority = void 0, this.paused = void 0, this.markedForDeletion = void 0, this.target = e, this.priority = t, this.paused = i, this.markedForDeletion = n;
      };

      Ki.get = function (e, t, i, n) {
        var r = Ki._listEntries.pop();

        return r ? (r.target = e, r.priority = t, r.paused = i, r.markedForDeletion = n) : r = new Ki(e, t, i, n), r;
      }, Ki.put = function (e) {
        Ki._listEntries.length < 20 && (e.target = null, Ki._listEntries.push(e));
      }, Ki._listEntries = [];

      var Zi = function Zi(e, t, i, n) {
        this.list = void 0, this.entry = void 0, this.target = void 0, this.callback = void 0, this.list = e, this.entry = t, this.target = i, this.callback = n;
      };

      Zi.get = function (e, t, i, n) {
        var r = Zi._hashUpdateEntries.pop();

        return r ? (r.list = e, r.entry = t, r.target = i, r.callback = n) : r = new Zi(e, t, i, n), r;
      }, Zi.put = function (e) {
        Zi._hashUpdateEntries.length < 20 && (e.list = e.entry = e.target = e.callback = null, Zi._hashUpdateEntries.push(e));
      }, Zi._hashUpdateEntries = [];

      var $i = function $i(e, t, i, n, r, s) {
        this.timers = void 0, this.target = void 0, this.timerIndex = void 0, this.currentTimer = void 0, this.currentTimerSalvaged = void 0, this.paused = void 0, this.timers = e, this.target = t, this.timerIndex = i, this.currentTimer = n, this.currentTimerSalvaged = r, this.paused = s;
      };

      $i.get = function (e, t, i, n, r, s) {
        var a = $i._hashTimerEntries.pop();

        return a ? (a.timers = e, a.target = t, a.timerIndex = i, a.currentTimer = n, a.currentTimerSalvaged = r, a.paused = s) : a = new $i(e, t, i, n, r, s), a;
      }, $i.put = function (e) {
        $i._hashTimerEntries.length < 20 && (e.timers = e.target = e.currentTimer = null, $i._hashTimerEntries.push(e));
      }, $i._hashTimerEntries = [];

      var en = function () {
        function e() {
          this._lock = void 0, this._scheduler = void 0, this._elapsed = void 0, this._runForever = void 0, this._useDelay = void 0, this._timesExecuted = void 0, this._repeat = void 0, this._delay = void 0, this._interval = void 0, this._target = void 0, this._callback = void 0, this._lock = !1, this._scheduler = null, this._elapsed = -1, this._runForever = !1, this._useDelay = !1, this._timesExecuted = 0, this._repeat = 0, this._delay = 0, this._interval = 0, this._target = null, this._callback = null;
        }

        var t = e.prototype;
        return t.initWithCallback = function (e, t, i, n, r, s) {
          return this._lock = !1, this._scheduler = e, this._target = i, this._callback = t, this._elapsed = -1, this._interval = n, this._delay = s, this._useDelay = this._delay > 0, this._repeat = r, this._runForever = this._repeat === _e.macro.REPEAT_FOREVER, !0;
        }, t.getInterval = function () {
          return this._interval;
        }, t.setInterval = function (e) {
          this._interval = e;
        }, t.update = function (e) {
          -1 === this._elapsed ? (this._elapsed = 0, this._timesExecuted = 0) : (this._elapsed += e, this._runForever && !this._useDelay ? this._elapsed >= this._interval && (this.trigger(), this._elapsed = 0) : (this._useDelay ? this._elapsed >= this._delay && (this.trigger(), this._elapsed -= this._delay, this._timesExecuted += 1, this._useDelay = !1) : this._elapsed >= this._interval && (this.trigger(), this._elapsed = 0, this._timesExecuted += 1), this._callback && !this._runForever && this._timesExecuted > this._repeat && this.cancel()));
        }, t.getCallback = function () {
          return this._callback;
        }, t.trigger = function () {
          this._target && this._callback && (this._lock = !0, this._callback.call(this._target, this._elapsed), this._lock = !1);
        }, t.cancel = function () {
          this._scheduler.unschedule(this._callback, this._target);
        }, e;
      }();

      en._timers = [], en.get = function () {
        return en._timers.pop() || new en();
      }, en.put = function (e) {
        en._timers.length < 20 && !e._lock && (e._scheduler = e._target = e._callback = null, en._timers.push(e));
      };
      var tn = e("S", function (e) {
        function t() {
          var t;
          return (t = e.call(this) || this)._timeScale = void 0, t._updatesNegList = void 0, t._updates0List = void 0, t._updatesPosList = void 0, t._hashForUpdates = void 0, t._hashForTimers = void 0, t._currentTarget = void 0, t._currentTargetSalvaged = void 0, t._updateHashLocked = void 0, t._arrayForTimers = void 0, t._timeScale = 1, t._updatesNegList = [], t._updates0List = [], t._updatesPosList = [], t._hashForUpdates = Ve(!0), t._hashForTimers = Ve(!0), t._currentTarget = null, t._currentTargetSalvaged = !1, t._updateHashLocked = !1, t._arrayForTimers = [], t;
        }

        Be(t, e), t.enableForTarget = function (e) {
          var t = !1;
          (e.uuid || e.id) && (t = !0), t || (e.__instanceId ? Ue(1513) : e.id = Ji.getNewId());
        };
        var i = t.prototype;
        return i.setTimeScale = function (e) {
          this._timeScale = e;
        }, i.getTimeScale = function () {
          return this._timeScale;
        }, i.update = function (e) {
          var t, i, n, r, s;

          for (this._updateHashLocked = !0, 1 !== this._timeScale && (e *= this._timeScale), t = 0, n = (i = this._updatesNegList).length; t < n; t++) {
            (r = i[t]).paused || r.markedForDeletion || r.target.update(e);
          }

          for (t = 0, n = (i = this._updates0List).length; t < n; t++) {
            (r = i[t]).paused || r.markedForDeletion || r.target.update(e);
          }

          for (t = 0, n = (i = this._updatesPosList).length; t < n; t++) {
            (r = i[t]).paused || r.markedForDeletion || r.target.update(e);
          }

          var a = this._arrayForTimers;

          for (t = 0; t < a.length; t++) {
            if (s = a[t], this._currentTarget = s, this._currentTargetSalvaged = !1, !s.paused) for (s.timerIndex = 0; s.timerIndex < s.timers.length; ++s.timerIndex) {
              s.currentTimer = s.timers[s.timerIndex], s.currentTimerSalvaged = !1, s.currentTimer.update(e), s.currentTimer = null;
            }
            this._currentTargetSalvaged && 0 === this._currentTarget.timers.length && (this._removeHashElement(this._currentTarget), --t);
          }

          for (t = 0, i = this._updatesNegList; t < i.length;) {
            (r = i[t]).markedForDeletion ? this._removeUpdateFromHash(r) : t++;
          }

          for (t = 0, i = this._updates0List; t < i.length;) {
            (r = i[t]).markedForDeletion ? this._removeUpdateFromHash(r) : t++;
          }

          for (t = 0, i = this._updatesPosList; t < i.length;) {
            (r = i[t]).markedForDeletion ? this._removeUpdateFromHash(r) : t++;
          }

          this._updateHashLocked = !1, this._currentTarget = null;
        }, i.schedule = function (e, t, i, n, r, s) {
          if ("function" != typeof e) {
            var a = e;
            e = t, t = a;
          }

          3 !== arguments.length && 4 !== arguments.length && 5 !== arguments.length || (s = !!n, n = _e.macro.REPEAT_FOREVER, r = 0), Le(t, 1502);
          var o = t.uuid || t.id;

          if (o) {
            var u,
                c,
                h = this._hashForTimers[o];
            if (h ? h.paused !== s && Ue(1511) : (h = $i.get(null, t, 0, null, null, s), this._arrayForTimers.push(h), this._hashForTimers[o] = h), null == h.timers) h.timers = [];else for (c = 0; c < h.timers.length; ++c) {
              if ((u = h.timers[c]) && e === u._callback) return We(1507, u.getInterval(), i), void (u._interval = i);
            }
            (u = en.get()).initWithCallback(this, e, t, i, n, r), h.timers.push(u), this._currentTarget === h && this._currentTargetSalvaged && (this._currentTargetSalvaged = !1);
          } else Oe(1510);
        }, i.scheduleUpdate = function (e, t, i) {
          var n = e.uuid || e.id;

          if (n) {
            var r = this._hashForUpdates[n];

            if (r && r.entry) {
              if (r.entry.priority === t) return r.entry.markedForDeletion = !1, void (r.entry.paused = i);
              if (this._updateHashLocked) return We(1506), r.entry.markedForDeletion = !1, void (r.entry.paused = i);
              this.unscheduleUpdate(e);
            }

            var s,
                a = Ki.get(e, t, i, !1);
            0 === t ? (s = this._updates0List, this._appendIn(s, a)) : (s = t < 0 ? this._updatesNegList : this._updatesPosList, this._priorityIn(s, a, t)), this._hashForUpdates[n] = Zi.get(s, a, e, null);
          } else Oe(1510);
        }, i.unschedule = function (e, t) {
          if (t && e) {
            var i = t.uuid || t.id;

            if (i) {
              var n = this._hashForTimers[i];
              if (n) for (var r = n.timers, s = 0, a = r.length; s < a; s++) {
                var o = r[s];
                if (e === o._callback) return o !== n.currentTimer || n.currentTimerSalvaged || (n.currentTimerSalvaged = !0), r.splice(s, 1), en.put(o), n.timerIndex >= s && n.timerIndex--, void (0 === r.length && (this._currentTarget === n ? this._currentTargetSalvaged = !0 : this._removeHashElement(n)));
              }
            } else Oe(1510);
          }
        }, i.unscheduleUpdate = function (e) {
          if (e) {
            var t = e.uuid || e.id;

            if (t) {
              var i = this._hashForUpdates[t];
              i && (this._updateHashLocked ? i.entry.markedForDeletion = !0 : this._removeUpdateFromHash(i.entry));
            } else Oe(1510);
          }
        }, i.unscheduleAllForTarget = function (e) {
          if (e) {
            var t = e.uuid || e.id;

            if (t) {
              var i = this._hashForTimers[t];

              if (i) {
                var n = i.timers;
                n.indexOf(i.currentTimer) > -1 && !i.currentTimerSalvaged && (i.currentTimerSalvaged = !0);

                for (var r = 0, s = n.length; r < s; r++) {
                  en.put(n[r]);
                }

                n.length = 0, this._currentTarget === i ? this._currentTargetSalvaged = !0 : this._removeHashElement(i);
              }

              this.unscheduleUpdate(e);
            } else Oe(1510);
          }
        }, i.unscheduleAll = function () {
          this.unscheduleAllWithMinPriority(Qi.Priority.SCHEDULER);
        }, i.unscheduleAllWithMinPriority = function (e) {
          var t,
              i,
              n,
              r = this._arrayForTimers;

          for (t = r.length - 1; t >= 0; t--) {
            i = r[t], this.unscheduleAllForTarget(i.target);
          }

          var s = 0;
          if (e < 0) for (t = 0; t < this._updatesNegList.length;) {
            s = this._updatesNegList.length, (n = this._updatesNegList[t]) && n.priority >= e && this.unscheduleUpdate(n.target), s === this._updatesNegList.length && t++;
          }
          if (e <= 0) for (t = 0; t < this._updates0List.length;) {
            s = this._updates0List.length, (n = this._updates0List[t]) && this.unscheduleUpdate(n.target), s === this._updates0List.length && t++;
          }

          for (t = 0; t < this._updatesPosList.length;) {
            s = this._updatesPosList.length, (n = this._updatesPosList[t]) && n.priority >= e && this.unscheduleUpdate(n.target), s === this._updatesPosList.length && t++;
          }
        }, i.isScheduled = function (e, t) {
          Le(e, 1508), Le(t, 1509);
          var i = t.uuid || t.id;
          if (!i) return Oe(1510), !1;
          var n = this._hashForTimers[i];
          if (!n) return !1;
          if (null == n.timers) return !1;

          for (var r = n.timers, s = 0; s < r.length; ++s) {
            if (e === r[s]._callback) return !0;
          }

          return !1;
        }, i.pauseAllTargets = function () {
          return this.pauseAllTargetsWithMinPriority(Qi.Priority.SCHEDULER);
        }, i.pauseAllTargetsWithMinPriority = function (e) {
          var t,
              i,
              n,
              r,
              s = [],
              a = this._arrayForTimers;

          for (i = 0, n = a.length; i < n; i++) {
            (t = a[i]) && (t.paused = !0, s.push(t.target));
          }

          if (e < 0) for (i = 0; i < this._updatesNegList.length; i++) {
            (r = this._updatesNegList[i]) && r.priority >= e && (r.paused = !0, s.push(r.target));
          }
          if (e <= 0) for (i = 0; i < this._updates0List.length; i++) {
            (r = this._updates0List[i]) && (r.paused = !0, s.push(r.target));
          }

          for (i = 0; i < this._updatesPosList.length; i++) {
            (r = this._updatesPosList[i]) && r.priority >= e && (r.paused = !0, s.push(r.target));
          }

          return s;
        }, i.resumeTargets = function (e) {
          if (e) for (var t = 0; t < e.length; t++) {
            this.resumeTarget(e[t]);
          }
        }, i.pauseTarget = function (e) {
          Le(e, 1503);
          var t = e.uuid || e.id;

          if (t) {
            var i = this._hashForTimers[t];
            i && (i.paused = !0);
            var n = this._hashForUpdates[t];
            n && (n.entry.paused = !0);
          } else Oe(1510);
        }, i.resumeTarget = function (e) {
          Le(e, 1504);
          var t = e.uuid || e.id;

          if (t) {
            var i = this._hashForTimers[t];
            i && (i.paused = !1);
            var n = this._hashForUpdates[t];
            n && (n.entry.paused = !1);
          } else Oe(1510);
        }, i.isTargetPaused = function (e) {
          Le(e, 1505);
          var t = e.uuid || e.id;
          if (!t) return Oe(1510), !1;
          var i = this._hashForTimers[t];
          if (i) return i.paused;
          var n = this._hashForUpdates[t];
          return !!n && n.entry.paused;
        }, i._removeHashElement = function (e) {
          var t = e.target.uuid || e.target.id;
          delete this._hashForTimers[t];

          for (var i = this._arrayForTimers, n = 0, r = i.length; n < r; n++) {
            if (i[n] === e) {
              i.splice(n, 1);
              break;
            }
          }

          $i.put(e);
        }, i._removeUpdateFromHash = function (e) {
          var t = e.target.uuid || e.target.id,
              i = this._hashForUpdates[t];

          if (i) {
            for (var n = i.list, r = i.entry, s = 0, a = n.length; s < a; s++) {
              if (n[s] === r) {
                n.splice(s, 1);
                break;
              }
            }

            delete this._hashForUpdates[t], Ki.put(r), Zi.put(i);
          }
        }, i._priorityIn = function (e, t, i) {
          for (var n = 0; n < e.length; n++) {
            if (i < e[n].priority) return void e.splice(n, 0, t);
          }

          e.push(t);
        }, i._appendIn = function (e, t) {
          e.push(t);
        }, t;
      }(Qi));
      tn.ID = "scheduler", _e.Scheduler = tn;

      var nn = function () {
        function e() {
          this._title = "", this._width = 1, this._height = 1, this._renderPass = null, this._colorTextures = [], this._depthStencilTexture = null, this._swapchainBufferIndices = 0, this._shouldSyncSizeWithSwapchain = !1, this._cameras = [], this._hasOnScreenAttachments = !1, this._hasOffScreenAttachments = !1, this._framebuffer = null;
        }

        e.registerCreateFunc = function (t) {
          t._createWindowFun = function (t) {
            return new e(t);
          };
        };

        var t = e.prototype;
        return t._setHasOffScreenAttachments = function (e) {
          this._hasOffScreenAttachments = e;
        }, t._setHasOnScreenAttachments = function (e) {
          this._hasOnScreenAttachments = e;
        }, t._createFrameBuffer = function (e, t) {
          this._framebuffer = e.createFramebuffer(new He(t, this._colorTextures, this._depthStencilTexture));
        }, t._init = function () {}, t.initialize = function (e, t) {
          this._init(), void 0 !== t.title && (this._title = t.title), void 0 !== t.swapchainBufferIndices && (this._swapchainBufferIndices = t.swapchainBufferIndices), void 0 !== t.shouldSyncSizeWithSwapchain && (this._shouldSyncSizeWithSwapchain = t.shouldSyncSizeWithSwapchain), this._width = t.width, this._height = t.height;

          for (var i = t.renderPassInfo, n = i.colorAttachments, r = i.depthStencilAttachment, s = 0; s < n.length; s++) {
            n[s].format === be.UNKNOWN && (n[s].format = e.colorFormat);
          }

          r && r.format === be.UNKNOWN && (r.format = e.depthStencilFormat), this._renderPass = e.createRenderPass(t.renderPassInfo);

          for (var a = 0; a < n.length; a++) {
            var o = null;
            this._swapchainBufferIndices & 1 << a ? this._setHasOnScreenAttachments(!0) : (o = e.createTexture(new xe(Re.TEX2D, Ie.COLOR_ATTACHMENT | Ie.SAMPLED, n[a].format, this._width, this._height)), this._setHasOffScreenAttachments(!0)), this._colorTextures.push(o);
          }

          return r ? this._swapchainBufferIndices >= 0 && (this._depthStencilTexture = e.createTexture(new xe(Re.TEX2D, Ie.DEPTH_STENCIL_ATTACHMENT | Ie.SAMPLED, r.format, this._width, this._height)), this._setHasOffScreenAttachments(!0)) : this._setHasOnScreenAttachments(!0), this._createFrameBuffer(e, this._renderPass), !0;
        }, t._destroy = function () {
          this.framebuffer.destroy();
        }, t.destroy = function () {
          this.clearCameras(), this._depthStencilTexture && (this._depthStencilTexture.destroy(), this._depthStencilTexture = null);

          for (var e = 0; e < this._colorTextures.length; e++) {
            var t = this._colorTextures[e];
            t && t.destroy();
          }

          this._colorTextures.length = 0, this._destroy();
        }, t.resize = function (e, t) {
          this._width = e, this._height = t;
          var i = !1;
          this._depthStencilTexture && (this._depthStencilTexture.resize(e, t), i = !0);

          for (var n = 0; n < this._colorTextures.length; n++) {
            var r = this._colorTextures[n];
            r && (r.resize(e, t), i = !0);
          }

          var s = this.framebuffer;
          i && s && (s.destroy(), s.initialize(new He(this._renderPass, this._colorTextures, this._depthStencilTexture)));

          for (var a, o = ze(this._cameras); !(a = o()).done;) {
            var u = a.value;
            u.isWindowSize && u.resize(e, t);
          }
        }, t.extractRenderCameras = function (e) {
          for (var t = 0; t < this._cameras.length; t++) {
            var i = this._cameras[t];
            i.enabled && (i.update(), e.push(i));
          }
        }, t.attachCamera = function (e) {
          for (var t = 0; t < this._cameras.length; t++) {
            if (this._cameras[t] === e) return;
          }

          this._cameras.push(e), this.sortCameras();
        }, t.detachCamera = function (e) {
          for (var t = 0; t < this._cameras.length; ++t) {
            if (this._cameras[t] === e) return void this._cameras.splice(t, 1);
          }
        }, t.clearCameras = function () {
          this._cameras.length = 0;
        }, t.sortCameras = function () {
          this._cameras.sort(function (e, t) {
            return e.priority - t.priority;
          });
        }, ke(e, [{
          key: "width",
          get: function get() {
            return this._width;
          }
        }, {
          key: "height",
          get: function get() {
            return this._height;
          }
        }, {
          key: "framebuffer",
          get: function get() {
            return this._framebuffer;
          }
        }, {
          key: "shouldSyncSizeWithSwapchain",
          get: function get() {
            return this._shouldSyncSizeWithSwapchain;
          }
        }, {
          key: "hasOnScreenAttachments",
          get: function get() {
            return this._hasOnScreenAttachments;
          }
        }, {
          key: "hasOffScreenAttachments",
          get: function get() {
            return this._hasOffScreenAttachments;
          }
        }, {
          key: "cameras",
          get: function get() {
            return this._cameras;
          }
        }, {
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }]), e;
      }(),
          rn = function () {
        var e = t.prototype;

        function t(e) {
          var t = this;
          this._createSceneFun = null, this._createWindowFun = null, this._device = void 0, this._windows = [], this._mainWindow = null, this._curWindow = null, this._tempWindow = null, this._pipeline = null, this._batcher = null, this._dataPoolMgr = void 0, this._scenes = [], this._modelPools = new Map(), this._cameraPool = null, this._lightPools = new Map(), this._fpsTime = 0, this._frameCount = 0, this._fps = 0, this._fixedFPS = 0, this._useDeferredPipeline = !1, this._fixedFPSFrameTime = 0, this._cumulativeTime = 0, this._frameTime = 0, this._device = e, this._dataPoolMgr = _e.internal.DataPoolManager && new _e.internal.DataPoolManager(e), Pi.registerCreateFunc(this), nn.registerCreateFunc(this), this._cameraPool = new Je(function () {
            return new ki(t._device);
          }, 4);
        }

        return e._init = function () {}, e._destroy = function () {}, e._setCumulativeTime = function (e) {
          this._cumulativeTime += e;
        }, e._setFrameTime = function (e) {
          this._frameTime = e;
        }, e.initialize = function () {
          var e = this;

          this._init();

          var t = new qe(),
              i = new Ge();
          i.depthStoreOp = Xe.DISCARD, i.stencilStoreOp = Xe.DISCARD;
          var n = new Ye([t], i);
          return this._mainWindow = this.createWindow({
            title: "rootMainWindow",
            width: this._device.width,
            height: this._device.height,
            renderPassInfo: n,
            swapchainBufferIndices: -1
          }), this._curWindow = this._mainWindow, Promise.resolve(Qe.initBuiltinRes(this._device)).then(function () {
            _e.view.on("design-resolution-changed", function () {
              var t = _e.game.canvas.width,
                  i = _e.game.canvas.height;
              e.resize(t, i);
            }, e);
          });
        }, e.destroy = function () {
          this.destroyScenes(), this._pipeline && (this._pipeline.destroy(), this._pipeline = null), this._batcher && (this._batcher.destroy(), this._batcher = null), this._curWindow = null, this._mainWindow = null, this.dataPoolManager.clear(), this._destroy();
        }, e.resize = function (e, t) {
          this._device.resize(e, t), this._mainWindow.resize(e, t);

          for (var i, n = ze(this._windows); !(i = n()).done;) {
            var r = i.value;
            r.shouldSyncSizeWithSwapchain && r.resize(e, t);
          }

          this._pipeline && this._pipeline.resize(e, t);
        }, e.setRenderPipeline = function (e) {
          if (e instanceof Ri && (this._useDeferredPipeline = !0), e || (e = Gi()), this._pipeline = e, !this._pipeline.activate()) return !1;

          var t = _e.director.getScene();

          return t && t.globals.activate(), this.onGlobalPipelineStateChanged(), !(!this._batcher && _e.internal.Batcher2D && (this._batcher = new _e.internal.Batcher2D(this), !this._batcher.initialize()) && (this.destroy(), 1));
        }, e.onGlobalPipelineStateChanged = function () {
          for (var e = 0; e < this._scenes.length; e++) {
            this._scenes[e].onGlobalPipelineStateChanged();
          }

          this._pipeline.pipelineSceneData.onGlobalPipelineStateChanged();
        }, e.activeWindow = function (e) {
          this._curWindow = e;
        }, e.resetCumulativeTime = function () {
          this._setCumulativeTime(0);
        }, e.frameMove = function (e) {
          this._setFrameTime(e), ++this._frameCount, this._setCumulativeTime(e), this._fpsTime += e, this._fpsTime > 1 && (this._fps = this._frameCount, this._frameCount = 0, this._fpsTime = 0);

          for (var t = 0; t < this._scenes.length; ++t) {
            this._scenes[t].removeBatches();
          }

          this._batcher && this._batcher.update();

          for (var i = this._windows, n = [], r = 0; r < i.length; r++) {
            i[r].extractRenderCameras(n);
          }

          if (this._pipeline && n.length > 0) {
            this._device.acquire();

            var s = this._scenes,
                a = _e.director.getTotalFrames();

            this._batcher && this._batcher.uploadBuffers();

            for (var o = 0; o < s.length; o++) {
              s[o].update(a);
            }

            _e.director.emit(_e.Director.EVENT_BEFORE_COMMIT), n.sort(function (e, t) {
              return e.priority - t.priority;
            }), this._pipeline.render(n), this._device.present();
          }

          this._batcher && this._batcher.reset();
        }, e.createWindow = function (e) {
          var t = this._createWindowFun(this);

          return t.initialize(this.device, e), this._windows.push(t), t;
        }, e.destroyWindow = function (e) {
          for (var t = 0; t < this._windows.length; ++t) {
            if (this._windows[t] === e) return e.destroy(), void this._windows.splice(t, 1);
          }
        }, e.destroyWindows = function () {
          for (var e, t = ze(this._windows); !(e = t()).done;) {
            e.value.destroy();
          }

          this._windows = [];
        }, e.createScene = function (e) {
          var t = this._createSceneFun(this);

          return t.initialize(e), this._scenes.push(t), t;
        }, e.destroyScene = function (e) {
          for (var t = 0; t < this._scenes.length; ++t) {
            if (this._scenes[t] === e) return e.destroy(), void this._scenes.splice(t, 1);
          }
        }, e.destroyScenes = function () {
          for (var e, t = ze(this._scenes); !(e = t()).done;) {
            e.value.destroy();
          }

          this._scenes = [];
        }, e.createModel = function (e) {
          var t = this._modelPools.get(e);

          t || (this._modelPools.set(e, new Je(function () {
            return new e();
          }, 10)), t = this._modelPools.get(e));
          var i = t.alloc();
          return i.initialize(), i;
        }, e.destroyModel = function (e) {
          var t = this._modelPools.get(e.constructor);

          t ? (t.free(e), e.destroy(), e.scene && e.scene.removeModel(e)) : Ue(1300, e.constructor.name);
        }, e.createCamera = function () {
          return this._cameraPool.alloc();
        }, e.createLight = function (e) {
          var t = this._lightPools.get(e);

          t || (this._lightPools.set(e, new Je(function () {
            return new e();
          }, 4)), t = this._lightPools.get(e));
          var i = t.alloc();
          return i.initialize(), i;
        }, e.destroyLight = function (e) {
          var t = this._lightPools.get(e.constructor);

          if (e.destroy(), t && (t.free(e), e.scene)) switch (e.type) {
            case Ii.SPHERE:
              e.scene.removeSphereLight(e);
              break;

            case Ii.SPOT:
              e.scene.removeSpotLight(e);
          }
        }, ke(t, [{
          key: "device",
          get: function get() {
            return this._device;
          }
        }, {
          key: "mainWindow",
          get: function get() {
            return this._mainWindow;
          }
        }, {
          key: "curWindow",
          get: function get() {
            return this._curWindow;
          },
          set: function set(e) {
            this._curWindow = e;
          }
        }, {
          key: "tempWindow",
          get: function get() {
            return this._tempWindow;
          },
          set: function set(e) {
            this._tempWindow = e;
          }
        }, {
          key: "windows",
          get: function get() {
            return this._windows;
          }
        }, {
          key: "pipeline",
          get: function get() {
            return this._pipeline;
          }
        }, {
          key: "batcher2D",
          get: function get() {
            return this._batcher;
          }
        }, {
          key: "scenes",
          get: function get() {
            return this._scenes;
          }
        }, {
          key: "cumulativeTime",
          get: function get() {
            return this._cumulativeTime;
          }
        }, {
          key: "frameTime",
          get: function get() {
            return this._frameTime;
          }
        }, {
          key: "frameCount",
          get: function get() {
            return this._frameCount;
          }
        }, {
          key: "fps",
          get: function get() {
            return this._fps;
          }
        }, {
          key: "fixedFPS",
          get: function get() {
            return this._fixedFPS;
          },
          set: function set(e) {
            e > 0 ? (this._fixedFPS = e, this._fixedFPSFrameTime = 1e3 / e) : this._fixedFPSFrameTime = 0;
          }
        }, {
          key: "dataPoolManager",
          get: function get() {
            return this._dataPoolMgr;
          }
        }, {
          key: "useDeferredPipeline",
          get: function get() {
            return this._useDeferredPipeline;
          }
        }]), t;
      }();

      _e.Root = rn;
      var sn = e("D", function (e) {
        function t() {
          var t;
          return (t = e.call(this) || this)._compScheduler = void 0, t._nodeActivator = void 0, t._invalid = void 0, t._paused = void 0, t._root = void 0, t._loadingScene = void 0, t._scene = void 0, t._totalFrames = void 0, t._scheduler = void 0, t._systems = void 0, t._invalid = !1, t._paused = !1, t._root = null, t._loadingScene = "", t._scene = null, t._totalFrames = 0, t._scheduler = new tn(), t._compScheduler = new nt(), t._nodeActivator = new rt(), t._systems = [], Ci.once(Mi.EVENT_RENDERER_INITED, t._initOnRendererInitialized, st(t)), t;
        }

        Be(t, e);
        var i = t.prototype;
        return i.calculateDeltaTime = function () {}, i.convertToGL = function (e) {
          var t = Ci.container,
              i = _e.view,
              n = t.getBoundingClientRect(),
              s = n.left + window.pageXOffset - t.clientLeft,
              a = n.top + window.pageYOffset - t.clientTop,
              o = i._devicePixelRatio * (e.x - s),
              u = i._devicePixelRatio * (a + n.height - e.y);
          return i._isRotated ? r(i._viewportRect.width - u, o) : r(o, u);
        }, i.convertToUI = function (e) {
          var t = Ci.container,
              i = _e.view,
              n = t.getBoundingClientRect(),
              s = n.left + window.pageXOffset - t.clientLeft,
              a = n.top + window.pageYOffset - t.clientTop,
              o = r(0, 0);
          return i._isRotated ? (o.x = s + e.y / i._devicePixelRatio, o.y = a + n.height - (i._viewportRect.width - e.x) / i._devicePixelRatio) : (o.x = s + e.x * i._devicePixelRatio, o.y = a + n.height - e.y * i._devicePixelRatio), o;
        }, i.end = function () {
          var e = this;
          this.once(t.EVENT_END_FRAME, function () {
            e.purgeDirector();
          });
        }, i.pause = function () {
          this._paused || (this._paused = !0);
        }, i.purgeDirector = function () {
          this._scheduler.unscheduleAll(), this._compScheduler.unscheduleAll(), this._nodeActivator.reset(), Ke && Ke.setEnabled(!1), _e.isValid(this._scene) && this._scene.destroy(), this._scene = null, this.stopAnimation(), _e.assetManager.releaseAll();
        }, i.reset = function () {
          this.purgeDirector(), this.emit(t.EVENT_RESET), Ke && Ke.setEnabled(!0), this.startAnimation();
        }, i.runSceneImmediate = function (e, t, i) {
          e instanceof Ze && (e = e.scene), Le(e instanceof $e, 1216), e._load();

          for (var n = Object.keys(Ci._persistRootNodes).map(function (e) {
            return Ci._persistRootNodes[e];
          }), r = 0; r < n.length; r++) {
            var s = n[r];
            s.emit(_e.Node.SCENE_CHANGED_FOR_PERSISTS, e.renderScene);
            var a = e.uuid === s._originalSceneId && e.getChildByUuid(s.uuid);

            if (a) {
              var o = a.getSiblingIndex();
              a._destroyImmediate(), e.insertChild(s, o);
            } else s.parent = e;
          }

          var u = this._scene;
          _e.isValid(u) && u.destroy(), _e.assetManager._releaseManager._autoRelease(u, e, Ci._persistRootNodes), this._scene = null, et._deferredDestroy(), t && t(), this.emit(_e.Director.EVENT_BEFORE_SCENE_LAUNCH, e), this._scene = e, e._activate(), this._root && this._root.resetCumulativeTime(), this.startAnimation(), i && i(null, e), this.emit(_e.Director.EVENT_AFTER_SCENE_LAUNCH, e);
        }, i.runScene = function (e, t, i) {
          var n = this;
          e instanceof Ze && (e = e.scene), Le(e, 1205), Le(e instanceof $e, 1216), e._load(), this.once(_e.Director.EVENT_END_FRAME, function () {
            n.runSceneImmediate(e, t, i);
          });
        }, i.loadScene = function (e, t, i) {
          var n = this;
          if (this._loadingScene) return Ue(1208, e, this._loadingScene), !1;

          var r = _e.assetManager.bundles.find(function (t) {
            return !!t.getSceneInfo(e);
          });

          return r ? (this.emit(_e.Director.EVENT_BEFORE_SCENE_LOADING, e), this._loadingScene = e, console.time("LoadScene " + e), r.loadScene(e, function (r, s) {
            console.timeEnd("LoadScene " + e), n._loadingScene = "", r ? (pe(r), t && t(r)) : n.runSceneImmediate(s, i, t);
          }), !0) : (Oe(1209, e), !1);
        }, i.preloadScene = function (e, t, i) {
          var n = _e.assetManager.bundles.find(function (t) {
            return !!t.getSceneInfo(e);
          });

          if (n) n.preloadScene(e, null, t, i);else {
            var r = 'Can not preload the scene "' + e + '" because it is not in the build settings.';
            i && i(new Error(r)), pe("preloadScene: " + r);
          }
        }, i.resume = function () {
          this._paused && (this._paused = !1);
        }, i.getScene = function () {
          return this._scene;
        }, i.getDeltaTime = function () {
          return Ci.deltaTime;
        }, i.getTotalTime = function () {
          return Ci.totalTime;
        }, i.getCurrentTime = function () {
          return Ci.frameStartTime;
        }, i.getTotalFrames = function () {
          return this._totalFrames;
        }, i.isPaused = function () {
          return this._paused;
        }, i.getScheduler = function () {
          return this._scheduler;
        }, i.setScheduler = function (e) {
          this._scheduler !== e && (this.unregisterSystem(this._scheduler), this._scheduler = e, this.registerSystem(tn.ID, e, 200));
        }, i.registerSystem = function (e, t, i) {
          t.id = e, t.priority = i, t.init(), this._systems.push(t), this._systems.sort(Qi.sortByPriority);
        }, i.unregisterSystem = function (e) {
          tt.fastRemove(this._systems, e), this._systems.sort(Qi.sortByPriority);
        }, i.getSystem = function (e) {
          return this._systems.find(function (t) {
            return t.id === e;
          });
        }, i.getAnimationManager = function () {
          return this.getSystem(_e.AnimationManager.ID);
        }, i.startAnimation = function () {
          this._invalid = !1;
        }, i.stopAnimation = function () {
          this._invalid = !0;
        }, i.mainLoop = function (e) {
          var t;
          t = Ci._calculateDT(e), this.tick(t);
        }, i.tick = function (e) {
          if (!this._invalid) {
            if (this.emit(t.EVENT_BEGIN_FRAME), Di.frameDispatchEvents(), !this._paused) {
              this.emit(t.EVENT_BEFORE_UPDATE), this._compScheduler.startPhase(), this._compScheduler.updatePhase(e);

              for (var i = 0; i < this._systems.length; ++i) {
                this._systems[i].update(e);
              }

              this._compScheduler.lateUpdatePhase(e), this.emit(t.EVENT_AFTER_UPDATE), et._deferredDestroy();

              for (var n = 0; n < this._systems.length; ++n) {
                this._systems[n].postUpdate(e);
              }
            }

            this.emit(t.EVENT_BEFORE_DRAW), this._root.frameMove(e), this.emit(t.EVENT_AFTER_DRAW), Ke.frameUpdateListeners(), it.resetHasChangedFlags(), it.clearNodeArray(), this.emit(t.EVENT_END_FRAME), this._totalFrames++;
          }
        }, i._initOnRendererInitialized = function () {
          this._totalFrames = 0, this._paused = !1, Ke && Ke.setEnabled(!0), this.registerSystem(tn.ID, this._scheduler, 200), this.emit(t.EVENT_INIT);
        }, i._init = function () {
          return this._root = new rn(Ci._gfxDevice), this._root.initialize({}).catch(function (e) {
            return Oe(1217), Promise.reject(e);
          });
        }, ke(t, [{
          key: "root",
          get: function get() {
            return this._root;
          }
        }]), t;
      }(at));
      sn.EVENT_INIT = "director_init", sn.EVENT_RESET = "director_reset", sn.EVENT_BEFORE_SCENE_LOADING = "director_before_scene_loading", sn.EVENT_BEFORE_SCENE_LAUNCH = "director_before_scene_launch", sn.EVENT_AFTER_SCENE_LAUNCH = "director_after_scene_launch", sn.EVENT_BEFORE_UPDATE = "director_before_update", sn.EVENT_AFTER_UPDATE = "director_after_update", sn.EVENT_BEFORE_DRAW = "director_before_draw", sn.EVENT_AFTER_DRAW = "director_after_draw", sn.EVENT_BEFORE_COMMIT = "director_before_commit", sn.EVENT_BEFORE_PHYSICS = "director_before_physics", sn.EVENT_AFTER_PHYSICS = "director_after_physics", sn.EVENT_BEGIN_FRAME = "director_begin_frame", sn.EVENT_END_FRAME = "director_end_frame", sn.instance = void 0, _e.Director = sn;
      var an = e("d", sn.instance = _e.director = new sn()),
          on = {};
      ot(on, "vmath", [{
        name: "vec2",
        newName: "Vec2",
        target: zi,
        targetName: "math"
      }, {
        name: "vec3",
        newName: "Vec3",
        target: zi,
        targetName: "math"
      }, {
        name: "vec4",
        newName: "Vec4",
        target: zi,
        targetName: "math"
      }, {
        name: "quat",
        newName: "Quat",
        target: zi,
        targetName: "math"
      }, {
        name: "mat3",
        newName: "Mat3",
        target: zi,
        targetName: "math"
      }, {
        name: "mat4",
        newName: "Mat4",
        target: zi,
        targetName: "math"
      }, {
        name: "color4",
        newName: "Color",
        target: zi,
        targetName: "math"
      }, {
        name: "rect",
        newName: "Rect",
        target: zi,
        targetName: "math"
      }, {
        name: "approx",
        newName: "approx",
        target: zi,
        targetName: "math"
      }, {
        name: "EPSILON",
        newName: "EPSILON",
        target: zi,
        targetName: "math"
      }, {
        name: "equals",
        newName: "equals",
        target: zi,
        targetName: "math"
      }, {
        name: "clamp",
        newName: "clamp",
        target: zi,
        targetName: "math"
      }, {
        name: "clamp01",
        newName: "clamp01",
        target: zi,
        targetName: "math"
      }, {
        name: "lerp",
        newName: "lerp",
        target: zi,
        targetName: "math"
      }, {
        name: "toRadian",
        newName: "toRadian",
        target: zi,
        targetName: "math"
      }, {
        name: "toDegree",
        newName: "toDegree",
        target: zi,
        targetName: "math"
      }, {
        name: "random",
        newName: "random",
        target: zi,
        targetName: "math"
      }, {
        name: "randomRange",
        newName: "randomRange",
        target: zi,
        targetName: "math"
      }, {
        name: "randomRangeInt",
        newName: "randomRangeInt",
        target: zi,
        targetName: "math"
      }, {
        name: "pseudoRandom",
        newName: "pseudoRandom",
        target: zi,
        targetName: "math"
      }, {
        name: "pseudoRandomRangeInt",
        newName: "pseudoRandomRangeInt",
        target: zi,
        targetName: "math"
      }, {
        name: "nextPow2",
        newName: "nextPow2",
        target: zi,
        targetName: "math"
      }, {
        name: "repeat",
        newName: "repeat",
        target: zi,
        targetName: "math"
      }, {
        name: "pingPong",
        newName: "pingPong",
        target: zi,
        targetName: "math"
      }, {
        name: "inverseLerp",
        newName: "inverseLerp",
        target: zi,
        targetName: "math"
      }]), _e.vmath = on, ot(tn.prototype, "Scheduler.prototype", [{
        name: "enableForTarget",
        newName: "enableForTarget",
        target: tn,
        targetName: "Scheduler"
      }]), ot(tn, "Scheduler", [{
        name: "PRIORITY_SYSTEM",
        newName: "System.Priority.SCHEDULER",
        customGetter: function customGetter() {
          return Qi.Priority.SCHEDULER;
        }
      }]), ut(tn, "Scheduler", [{
        name: "PRIORITY_NON_SYSTEM",
        suggest: "Use enum` System.Priority` instead"
      }]), ot(Fi.prototype, "EventTouch.prototype", [{
        name: "getUILocationInView",
        newName: "getLocationInView",
        target: Fi,
        targetName: "EventTouch"
      }]), ot(Bi.prototype, "SubModel.prototype", [{
        name: "subMeshData",
        newName: "subMesh"
      }]), ut(Bi.prototype, "SubModel.prototype", [{
        name: "getSubModel",
        suggest: "Use `subModels[i]` instead"
      }, {
        name: "subModelNum",
        suggest: "Use `subModels.length` instead"
      }]), ot(rn.prototype, "Root.prototype", [{
        name: "ui",
        newName: "batcher2D"
      }]), ct(Ci, "game", [{
        name: "collisionMatrix"
      }, {
        name: "groupList"
      }]), ct(sn.prototype, "director", [{
        name: "calculateDeltaTime"
      }, {
        name: "getDeltaTime",
        suggest: "Use game.deltaTime instead"
      }, {
        name: "getTotalTime",
        suggest: "Use game.totalTime instead"
      }, {
        name: "getCurrentTime",
        suggest: "Use game.frameStartTime instead"
      }]), ut(sn.prototype, "director", [{
        name: "setAnimationInterval",
        suggest: "please use game.frameRate instead"
      }, {
        name: "getAnimationInterval",
        suggest: "please use game.frameRate instead"
      }, {
        name: "getRunningScene",
        suggest: "please use getScene instead"
      }, {
        name: "setDepthTest",
        suggest: "please use camera API instead"
      }, {
        name: "setClearColor",
        suggest: "please use camera API instead"
      }, {
        name: "getWinSize",
        suggest: "please use view.getVisibleSize instead"
      }, {
        name: "getWinSizeInPixels"
      }, {
        name: "purgeCachedData",
        suggest: "please use assetManager.releaseAll instead"
      }]);

      var un = function () {
        function e() {
          this.name = "", this.base = "", this.importBase = "", this.nativeBase = "", this.deps = null, this.assetInfos = new ht(), this.scenes = new ht(), this.paths = new ht();
        }

        var t = e.prototype;
        return t.init = function (e) {
          var t = this;
          !function (e) {
            var t = e.uuids,
                i = e.paths,
                n = e.types,
                r = e.deps,
                s = e.paths = Object.create(null);

            if (!1 === e.debug) {
              for (var a = 0, o = t.length; a < o; a++) {
                t[a] = ft(t[a]);
              }

              for (var u in i) {
                var c = i[u],
                    h = c[1];
                c[1] = n[h];
              }
            } else {
              for (var l = Object.create(null), d = 0, f = t.length; d < f; d++) {
                var p = t[d];
                t[d] = l[p] = ft(p);
              }

              t = l;
            }

            for (var m in i) {
              var _ = i[m];
              s[t[m]] = _;
            }

            var g = e.scenes;

            for (var v in g) {
              var y = g[v];
              g[v] = t[y];
            }

            var w = e.packs;

            for (var T in w) {
              for (var b = w[T], A = 0; A < b.length; ++A) {
                b[A] = t[b[A]];
              }
            }

            var E = e.versions;
            if (E) for (var S in E) {
              for (var N = E[S], x = 0; x < N.length; x += 2) {
                var R = N[x];
                N[x] = t[R] || R;
              }
            }
            var I = e.redirect;
            if (I) for (var P = 0; P < I.length; P += 2) {
              I[P] = t[I[P]], I[P + 1] = r[I[P + 1]];
            }

            if (e.extensionMap) {
              var k = function k(i) {
                if (!Object.prototype.hasOwnProperty.call(e.extensionMap, i)) return "continue";
                e.extensionMap[i].forEach(function (n, r) {
                  e.extensionMap[i][r] = t[n] || n;
                });
              };

              for (var C in e.extensionMap) {
                k(C);
              }
            }
          }(e), this.importBase = e.importBase || "", this.nativeBase = e.nativeBase || "", this.base = e.base || "", this.name = e.name || "", this.deps = e.deps || [], this._initUuid(e.uuids), this._initPath(e.paths), this._initScene(e.scenes), this._initPackage(e.packs), this._initVersion(e.versions), this._initRedirect(e.redirect);

          var i = function i(_i2) {
            if (!Object.prototype.hasOwnProperty.call(e.extensionMap, _i2)) return "continue";

            e.extensionMap[_i2].forEach(function (e) {
              var n = t.assetInfos.get(e);
              n && (n.extension = _i2);
            });
          };

          for (var n in e.extensionMap) {
            i(n);
          }
        }, t.getInfoWithPath = function (e, t) {
          if (!e) return null;
          e = lt(e);
          var i = this.paths.get(e);

          if (i) {
            if (!t) return i[0];

            for (var n = 0, r = i.length; n < r; n++) {
              var s = i[n];
              if (dt.isChildClassOf(s.ctor, t)) return s;
            }
          }

          return null;
        }, t.getDirWithPath = function (e, t, i) {
          "/" === (e = lt(e))[e.length - 1] && (e = e.slice(0, -1));
          var n = i || [];
          return this.paths.forEach(function (i, r) {
            if (r.startsWith(e) && function (e, t) {
              return !(e.length > t.length) || 47 === e.charCodeAt(t.length);
            }(r, e) || !e) for (var s = 0, a = i.length; s < a; s++) {
              var o = i[s];
              t && !dt.isChildClassOf(o.ctor, t) || n.push(o);
            }
          }), n;
        }, t.getAssetInfo = function (e) {
          return this.assetInfos.get(e) || null;
        }, t.getSceneInfo = function (e) {
          return e.endsWith(".scene") || (e += ".scene"), "/" === e[0] || e.startsWith("db://") || (e = "/" + e), this.scenes.find(function (t, i) {
            return i.endsWith(e);
          });
        }, t.destroy = function () {
          this.paths.destroy(), this.scenes.destroy(), this.assetInfos.destroy();
        }, t._initUuid = function (e) {
          if (e) {
            this.assetInfos.clear();

            for (var t = 0, i = e.length; t < i; t++) {
              var n = e[t];
              this.assetInfos.add(n, {
                uuid: n
              });
            }
          }
        }, t._initPath = function (e) {
          if (e) {
            var t = this.paths;

            for (var i in t.clear(), e) {
              var n = e[i],
                  r = n[0],
                  s = n[1],
                  a = 3 === n.length,
                  o = this.assetInfos.get(i);
              o.path = r, o.ctor = dt._getClassById(s), t.has(r) ? a ? t.get(r).push(o) : t.get(r).unshift(o) : t.add(r, [o]);
            }
          }
        }, t._initScene = function (e) {
          if (e) {
            var t = this.scenes;
            t.clear();
            var i = this.assetInfos;

            for (var n in e) {
              var r = e[n],
                  s = i.get(r);
              s.url = n, t.add(n, s);
            }
          }
        }, t._initPackage = function (e) {
          if (e) {
            var t = this.assetInfos;

            for (var i in e) {
              var n = e[i],
                  r = {
                uuid: i,
                packedUuids: n,
                ext: ".json"
              };
              t.add(i, r);

              for (var s = 0, a = n.length; s < a; s++) {
                var o = n[s],
                    u = t.get(o),
                    c = u.packs;
                c ? 1 === a ? c.unshift(r) : c.push(r) : u.packs = [r];
              }
            }
          }
        }, t._initVersion = function (e) {
          if (e) {
            var t = this.assetInfos,
                i = e.import;
            if (i) for (var n = 0, r = i.length; n < r; n += 2) {
              var s = i[n];
              t.get(s).ver = i[n + 1];
            }
            if (i = e.native) for (var a = 0, o = i.length; a < o; a += 2) {
              var u = i[a];
              t.get(u).nativeVer = i[a + 1];
            }
          }
        }, t._initRedirect = function (e) {
          if (e) for (var t = this.assetInfos, i = 0, n = e.length; i < n; i += 2) {
            var r = e[i];
            t.get(r).redirect = e[i + 1];
          }
        }, e;
      }();

      function cn(e, t) {
        e._uuid && t.push(e._uuid);
      }

      function hn(e, t) {
        for (var i = Object.getOwnPropertyNames(e), n = 0; n < i.length; n++) {
          var r = i[n];

          if ("node" !== r && "__eventTargets" !== r) {
            var s = e[r];
            if ("object" == (0, _typeof2.default)(s) && s) if (Array.isArray(s)) for (var a = 0; a < s.length; a++) {
              var o = s[a];
              o instanceof _t && cn(o, t);
            } else if (s.constructor && s.constructor !== Object) s instanceof _t && cn(s, t);else for (var u = Object.getOwnPropertyNames(s), c = 0; c < u.length; c++) {
              var h = s[u[c]];
              h instanceof _t && cn(h, t);
            }
          }
        }
      }

      function ln(e, t) {
        for (var i = 0; i < e._components.length; i++) {
          hn(e._components[i], t);
        }

        for (var n = 0; n < e._children.length; n++) {
          ln(e._children[n], t);
        }
      }

      function dn(e, t, i, n) {
        i.push(e._uuid);

        for (var r = mt.getDeps(e._uuid), s = 0, a = r.length; s < a; s++) {
          var o = pt.get(r[s]);

          if (o) {
            var u = o._uuid;
            u in t ? t[u] += n : t[u] = o.refCount + n, i.includes(u) || dn(o, t, i, n);
          }
        }
      }

      var fn = [],
          pn = new (function () {
        function e() {
          this._persistNodeDeps = new ht(), this._toDelete = new ht(), this._eventListener = !1;
        }

        var t = e.prototype;
        return t.init = function () {
          this._persistNodeDeps.clear(), this._toDelete.clear();
        }, t._addPersistNodeRef = function (e) {
          var t = [];
          ln(e, t);

          for (var i = 0, n = t.length; i < n; i++) {
            var r = pt.get(t[i]);
            r && r.addRef();
          }

          this._persistNodeDeps.add(e.uuid, t);
        }, t._removePersistNodeRef = function (e) {
          if (this._persistNodeDeps.has(e.uuid)) {
            for (var t = this._persistNodeDeps.get(e.uuid), i = 0, n = t.length; i < n; i++) {
              var r = pt.get(t[i]);
              r && r.decRef();
            }

            this._persistNodeDeps.remove(e.uuid);
          }
        }, t._autoRelease = function (e, t, i) {
          if (e) {
            for (var n = mt.getDeps(e.uuid), r = 0, s = n.length; r < s; r++) {
              var a = pt.get(n[r]);
              a && a.decRef(e.autoReleaseAssets);
            }

            var o = mt._depends.get(e.uuid);

            if (o && o.persistDeps) for (var u = o.persistDeps, c = 0, h = u.length; c < h; c++) {
              var l = pt.get(u[c]);
              l && l.decRef(e.autoReleaseAssets);
            }
            e.uuid !== t.uuid && mt.remove(e.uuid);
          }

          var d = mt._depends.get(t.uuid);

          for (var f in d && (d.persistDeps = []), i) {
            for (var p, m, _ = i[f], g = this._persistNodeDeps.get(_.uuid), v = ze(g); !(m = v()).done;) {
              var y = m.value,
                  w = pt.get(y);
              w && w.addRef();
            }

            d && (p = d.persistDeps).push.apply(p, g);
          }
        }, t.tryRelease = function (e, t) {
          void 0 === t && (t = !1), e instanceof _t && (t ? this._free(e, t) : (this._toDelete.add(e._uuid, e), this._eventListener || (this._eventListener = !0, gt(this._freeAssets.bind(this)))));
        }, t._freeAssets = function () {
          var e = this;
          this._eventListener = !1, this._toDelete.forEach(function (t) {
            e._free(t);
          }), this._toDelete.clear();
        }, t._free = function (e, t) {
          void 0 === t && (t = !1);
          var i = e._uuid;

          if (this._toDelete.remove(i), vt(e, !0) && !(!t && e.refCount > 0 && function (e) {
            var t = Object.create(null);
            if (t[e._uuid] = e.refCount, dn(e, t, fn, -1), fn.length = 0, 0 !== t[e._uuid]) return t[e._uuid];

            for (var i in t) {
              0 !== t[i] && dn(pt.get(i), t, fn, 1);
            }

            return fn.length = 0, t[e._uuid];
          }(e) > 0)) {
            pt.remove(i);

            for (var n = mt.getDeps(i), r = 0, s = n.length; r < s; r++) {
              var a = pt.get(n[r]);
              a && (a.decRef(!1), this._free(a, !1));
            }

            e.destroy(), mt.remove(i);
          }
        }, e;
      }())(),
          mn = null;

      function _n(e, t) {
        for (var i = 0, n = e.input.length; i < n; i++) {
          var r = e.input[i];
          t && !r.isNative && r.content instanceof _t && r.content.decRef(!1), r.recycle();
        }

        e.input = null;
      }

      function gn(e, t) {
        return t ? /\?/.test(e) ? e + "&_t=" + Date.now() : e + "?_t=" + Date.now() : e;
      }

      function vn(e, t, i, n, r) {
        void 0 === r && (r = 0), e(r, function (s, a) {
          r++, !s || r > t ? n && n(s, a) : setTimeout(function () {
            vn(e, t, i, n, r);
          }, i);
        });
      }

      function yn(e, t, i, n, r) {
        try {
          for (var s = mt.parse(e, t), a = 0, o = s.deps.length; a < o; a++) {
            var u = s.deps[a];
            u in i || (i[u] = !0, n.push({
              uuid: u,
              bundle: r && r.name
            }));
          }

          s.nativeDep && (r && (s.nativeDep.bundle = r.name), n.push(yt({}, s.nativeDep)));
        } catch (e) {
          pe(e.message, e.stack);
        }
      }

      function wn(e, t, i) {
        t && (i = void 0 !== i ? i : _e.assetManager.cacheAsset, wt(t) || !i || t.isDefault || pt.add(e, t));
      }

      function Tn(e, t, i) {
        var n = 0,
            r = [],
            s = e.length;
        0 === s && i && i(r);

        for (var a = function a(e) {
          e && r.push(e), ++n === s && i && i(r);
        }, o = 0; o < s; o++) {
          t(e[o], a);
        }
      }

      function bn(e, t, i) {
        var n = e,
            r = t,
            s = i;

        if (void 0 === i) {
          var a = "function" == typeof e;
          t ? (s = t, a || (r = null)) : void 0 === t && a && (s = e, n = null, r = null), void 0 !== t && a && (r = e, n = null);
        }

        return {
          options: n || Object.create(null),
          onProgress: r,
          onComplete: s
        };
      }

      function An(e, t, i) {
        var n = e,
            r = t,
            s = i;

        if (void 0 === i) {
          var a = dt.isChildClassOf(e, _t);
          t ? (s = t, a && (r = null)) : void 0 !== t || a || (s = e, r = null, n = null), void 0 === t || a || (r = e, n = null);
        }

        return {
          type: n,
          onProgress: r || mn,
          onComplete: s
        };
      }

      function En(e, t, i, n) {
        if (void 0 === n && (n = {}), !i[t] || n[t]) return !1;
        n[t] = !0;
        var r = !1,
            s = mt.getDeps(t);
        if (s) for (var a = 0, o = s.length; a < o; a++) {
          var u = s[a];

          if (u === e || En(e, u, i, n)) {
            r = !0;
            break;
          }
        }
        return r;
      }

      function Sn(e) {
        return function (t, i) {
          if (e) {
            var n = [];
            Array.isArray(i) ? i.forEach(function (e) {
              return e instanceof _t && n.push(e.addRef());
            }) : i instanceof _t && n.push(i.addRef()), gt(function () {
              n.forEach(function (e) {
                return e.decRef(!1);
              }), e(t, i);
            });
          }
        };
      }

      var Nn = function () {
        function e() {
          this._config = new un();
        }

        var t = e.prototype;
        return t.getInfoWithPath = function (e, t) {
          return this._config.getInfoWithPath(e, t);
        }, t.getDirWithPath = function (e, t, i) {
          return this._config.getDirWithPath(e, t, i);
        }, t.getAssetInfo = function (e) {
          return this._config.getAssetInfo(e);
        }, t.getSceneInfo = function (e) {
          return this._config.getSceneInfo(e);
        }, t.init = function (e) {
          this._config.init(e), At.add(e.name, this);
        }, t.load = function (e, t, i, n) {
          var r = An(t, i, n),
              s = r.type,
              a = r.onProgress,
              o = r.onComplete,
              u = {
            __requestType__: Et.PATH,
            type: s,
            bundle: this.name,
            __outputAsArray__: Array.isArray(e)
          };

          _e.assetManager.loadAny(e, u, a, o);
        }, t.preload = function (e, t, i, n) {
          var r = An(t, i, n),
              s = r.type,
              a = r.onProgress,
              o = r.onComplete;

          _e.assetManager.preloadAny(e, {
            __requestType__: Et.PATH,
            type: s,
            bundle: this.name
          }, a, o);
        }, t.loadDir = function (e, t, i, n) {
          var r = An(t, i, n),
              s = r.type,
              a = r.onProgress,
              o = r.onComplete;

          _e.assetManager.loadAny(e, {
            __requestType__: Et.DIR,
            type: s,
            bundle: this.name,
            __outputAsArray__: !0
          }, a, o);
        }, t.preloadDir = function (e, t, i, n) {
          var r = An(t, i, n),
              s = r.type,
              a = r.onProgress,
              o = r.onComplete;

          _e.assetManager.preloadAny(e, {
            __requestType__: Et.DIR,
            type: s,
            bundle: this.name
          }, a, o);
        }, t.loadScene = function (e, t, i, n) {
          var r = bn(t, i, n),
              s = r.options,
              a = r.onProgress,
              o = r.onComplete;
          s.preset = s.preset || "scene", s.bundle = this.name, _e.assetManager.loadAny({
            scene: e
          }, s, a, function (e, t) {
            if (e) pe(e.message, e.stack);else if (t instanceof Ze && t.scene) {
              var i = t.scene;
              i._id = t._uuid, i.name = t.name;
            } else e = new Error("The asset " + t._uuid + " is not a scene");
            o && o(e, t);
          });
        }, t.preloadScene = function (e, t, i, n) {
          var r = bn(t, i, n),
              s = r.options,
              a = r.onProgress,
              o = r.onComplete;
          s.bundle = this.name, _e.assetManager.preloadAny({
            scene: e
          }, s, a, function (t) {
            t && Oe(1210, e, t.message), o && o(t);
          });
        }, t.get = function (e, t) {
          var i = this.getInfoWithPath(e, t);
          return i && pt.get(i.uuid) || null;
        }, t.release = function (e, t) {
          var i = this.get(e, t);
          i && pn.tryRelease(i, !0);
        }, t.releaseUnusedAssets = function () {
          var e = this;
          pt.forEach(function (t) {
            var i = e.getAssetInfo(t._uuid);
            i && !i.redirect && pn.tryRelease(t);
          });
        }, t.releaseAll = function () {
          var e = this;
          pt.forEach(function (t) {
            var i = e.getAssetInfo(t._uuid);
            i && !i.redirect && pn.tryRelease(t, !0);
          });
        }, t._destroy = function () {
          this._config.destroy();
        }, ke(e, [{
          key: "config",
          get: function get() {
            return this._config;
          }
        }, {
          key: "name",
          get: function get() {
            return this._config.name;
          }
        }, {
          key: "deps",
          get: function get() {
            return this._config.deps;
          }
        }, {
          key: "base",
          get: function get() {
            return this._config.base;
          }
        }]), e;
      }(),
          xn = e("r", new Nn());

      function Rn(e, t, i) {
        var n = new Image();

        function r() {
          n.removeEventListener("load", r), n.removeEventListener("error", s), i && i(null, n);
        }

        function s() {
          n.removeEventListener("load", r), n.removeEventListener("error", s), i && i(new Error(St(4930, e)));
        }

        return "file:" !== window.location.protocol && (n.crossOrigin = "anonymous"), n.addEventListener("load", r), n.addEventListener("error", s), n.src = e, n;
      }

      function In(e, t, i, n) {
        var r = new XMLHttpRequest(),
            s = "download failed: " + e + ", status: ";
        if (r.open("GET", e, !0), void 0 !== t.xhrResponseType && (r.responseType = t.xhrResponseType), void 0 !== t.xhrWithCredentials && (r.withCredentials = t.xhrWithCredentials), void 0 !== t.xhrMimeType && r.overrideMimeType && r.overrideMimeType(t.xhrMimeType), void 0 !== t.xhrTimeout && (r.timeout = t.xhrTimeout), t.xhrHeader) for (var a in t.xhrHeader) {
          r.setRequestHeader(a, t.xhrHeader[a]);
        }
        return r.onload = function () {
          200 === r.status || 0 === r.status ? n && n(null, r.response) : n && n(new Error("" + s + r.status + "(no response)"));
        }, i && (r.onprogress = function (e) {
          e.lengthComputable && i(e.loaded, e.total);
        }), r.onerror = function () {
          n && n(new Error("" + s + r.status + "(error)"));
        }, r.ontimeout = function () {
          n && n(new Error("" + s + r.status + "(time out)"));
        }, r.onabort = function () {
          n && n(new Error("" + s + r.status + "(abort)"));
        }, r.send(null), r;
      }

      _e.resources = xn;
      var Pn = {};

      function kn(e, t, i) {
        if (Pn[e]) return i && i(null), null;
        var n = document.createElement("script");

        function r() {
          n.parentNode.removeChild(n), n.removeEventListener("load", r, !1), n.removeEventListener("error", s, !1), Pn[e] = !0, i && i(null);
        }

        function s() {
          n.parentNode.removeChild(n), n.removeEventListener("load", r, !1), n.removeEventListener("error", s, !1), i && i(new Error(St(4928, e)));
        }

        return "file:" !== window.location.protocol && (n.crossOrigin = "anonymous"), n.async = t.scriptAsyncLoading || !1, n.src = e, n.addEventListener("load", r, !1), n.addEventListener("error", s, !1), document.body.appendChild(n), n;
      }

      var Cn = /^(?:\w+:\/\/|\.+\/).+/,
          Dn = function Dn(e, t, i) {
        (It.capabilities.imageBitmap && _e.assetManager.allowImageBitmap ? Mn : Rn)(e, t, i);
      },
          Mn = function Mn(e, t, i) {
        t.xhrResponseType = "blob", In(e, t, t.onFileProgress, i);
      },
          Fn = function Fn(e, t, i) {
        t.xhrResponseType = "json", In(e, t, t.onFileProgress, i);
      },
          Bn = function Bn(e, t, i) {
        t.xhrResponseType = "arraybuffer", In(e, t, t.onFileProgress, i);
      },
          Ln = function Ln(e, t, i) {
        Fn(e, t, function (t, n) {
          if (t) i(t);else {
            var r = Pt(n);
            Promise.all(r.chunks.map(function (i) {
              return new Promise(function (n, r) {
                Bn("" + kt(e) + i, {}, function (e, i) {
                  t ? r(t) : n(new Uint8Array(i));
                });
              });
            })).then(function (e) {
              var t = new Mt(r.document, e);
              i(null, t);
            }).catch(function (e) {
              i(e);
            });
          }
        });
      },
          On = function On(e, t, i) {
        Bn(e, t, function (e, t) {
          if (e) i(e);else try {
            var n = Ct(new Uint8Array(t));
            i(null, n);
          } catch (e) {
            i(e);
          }
        });
      },
          Un = function Un(e, t, i) {
        t.xhrResponseType = "text", In(e, t, t.onFileProgress, i);
      },
          Wn = function Wn(e, t, i) {
        var n = Dt(e),
            r = e;
        Cn.test(r) || (r = -1 !== jn.remoteBundles.indexOf(n) ? jn.remoteServerAddress + "remote/" + n : "assets/" + n);
        var s = t.version || jn.bundleVers[n],
            a = 0,
            o = null,
            u = null;
        Fn(r + "/config." + (s ? s + "." : "") + "json", t, function (e, t) {
          u = e, (o = t) && (o.base = r + "/"), 2 == ++a && i(u, o);
        }), kn(r + "/index." + (s ? s + "." : "") + "js", t, function (e) {
          u = e, 2 == ++a && i(e, o);
        });
      },
          Vn = function () {
        function e() {
          this.maxConcurrency = 6, this.maxRequestsPerFrame = 6, this.maxRetryCount = 3, this.appendTimeStamp = !!Rt, this.limited = !Rt, this.retryInterval = 2e3, this.bundleVers = null, this.remoteBundles = [], this.downloadDomImage = Rn, this.downloadDomAudio = null, this.downloadFile = In, this.downloadScript = kn, this._downloaders = {
            ".png": Dn,
            ".jpg": Dn,
            ".bmp": Dn,
            ".jpeg": Dn,
            ".gif": Dn,
            ".ico": Dn,
            ".tiff": Dn,
            ".webp": Dn,
            ".image": Dn,
            ".pvr": Bn,
            ".pkm": Bn,
            ".astc": Bn,
            ".txt": Un,
            ".xml": Un,
            ".vsh": Un,
            ".fsh": Un,
            ".atlas": Un,
            ".tmx": Un,
            ".tsx": Un,
            ".json": Fn,
            ".ExportJson": Fn,
            ".plist": Un,
            ".ccon": Ln,
            ".cconb": On,
            ".fnt": Un,
            ".binary": Bn,
            ".bin": Bn,
            ".dbbin": Bn,
            ".skel": Bn,
            ".js": kn,
            bundle: Wn,
            default: Un
          }, this._downloading = new ht(), this._queue = [], this._queueDirty = !1, this._totalNum = 0, this._totalNumThisPeriod = 0, this._lastDate = -1, this._checkNextPeriod = !1, this._remoteServerAddress = "", this._maxInterval = 1 / 30;
        }

        var t = e.prototype;
        return t.init = function (e, t, i) {
          void 0 === e && (e = ""), void 0 === t && (t = {}), void 0 === i && (i = []), this._downloading.clear(), this._queue.length = 0, this._remoteServerAddress = e, this.bundleVers = t, this.remoteBundles = i;
        }, t.register = function (e, t) {
          "object" == (0, _typeof2.default)(e) ? Nt(this._downloaders, e) : this._downloaders[e] = t;
        }, t.download = function (e, t, i, n, r) {
          var s = this,
              a = xt.get(e);
          if (a) r(null, a);else {
            var o = this._downloading.get(e);

            if (o) {
              o.push(r);

              var u = this._queue.find(function (t) {
                return t.id === e;
              });

              if (!u) return;
              var c = n.priority || 0;
              u.priority < c && (u.priority = c, this._queueDirty = !0);
            } else {
              var h = void 0 !== n.maxRetryCount ? n.maxRetryCount : this.maxRetryCount,
                  l = void 0 !== n.maxConcurrency ? n.maxConcurrency : this.maxConcurrency,
                  d = void 0 !== n.maxRequestsPerFrame ? n.maxRequestsPerFrame : this.maxRequestsPerFrame,
                  f = this._downloaders[i] || this._downloaders.default;
              vn(function (i, a) {
                if (0 === i && s._downloading.add(e, [r]), s.limited) {
                  s._updateTime();

                  var o = function o(e, t) {
                    s._totalNum--, s._handleQueueInNextFrame(l, d), a(e, t);
                  };

                  s._totalNum < l && s._totalNumThisPeriod < d ? (f(gn(t, s.appendTimeStamp), n, o), s._totalNum++, s._totalNumThisPeriod++) : (s._queue.push({
                    id: e,
                    priority: n.priority || 0,
                    url: t,
                    options: n,
                    done: o,
                    handler: f
                  }), s._queueDirty = !0, s._totalNum < l && s._handleQueueInNextFrame(l, d));
                } else f(gn(t, s.appendTimeStamp), n, a);
              }, h, this.retryInterval, function (t, i) {
                t || xt.add(e, i);

                for (var n = s._downloading.remove(e), r = 0, a = n.length; r < a; r++) {
                  n[r](t, i);
                }
              });
            }
          }
        }, t.loadSubpackage = function (e, t) {
          _e.assetManager.loadBundle(e, null, t);
        }, t._updateTime = function () {
          var e = performance.now(),
              t = _e.game.deltaTime,
              i = t > this._maxInterval ? this._maxInterval : t;
          e - this._lastDate > 1e3 * i && (this._totalNumThisPeriod = 0, this._lastDate = e);
        }, t._handleQueue = function (e, t) {
          for (this._checkNextPeriod = !1, this._updateTime(); this._queue.length > 0 && this._totalNum < e && this._totalNumThisPeriod < t;) {
            this._queueDirty && (this._queue.sort(function (e, t) {
              return e.priority - t.priority;
            }), this._queueDirty = !1);

            var i = this._queue.pop();

            if (!i) break;
            this._totalNum++, this._totalNumThisPeriod++, i.handler(gn(i.url, this.appendTimeStamp), i.options, i.done);
          }

          this._handleQueueInNextFrame(e, t);
        }, t._handleQueueInNextFrame = function (e, t) {
          !this._checkNextPeriod && this._queue.length > 0 && (gt(this._handleQueue.bind(this), e, t), this._checkNextPeriod = !0);
        }, ke(e, [{
          key: "remoteServerAddress",
          get: function get() {
            return this._remoteServerAddress;
          }
        }]), e;
      }(),
          jn = e("s", new Vn());

      function Hn(e, t, i, n) {
        var r = null,
            s = null;

        try {
          (r = new Ft())._nativeUrl = e, r._nativeAsset = t;
        } catch (e) {
          s = e;
        }

        n(s, r);
      }

      function zn(e, t, i, n) {
        var r = new Bt();
        r.json = t, n(null, r);
      }

      function qn(e, t, i, n) {
        var r = new Lt();
        r.text = t, n(null, r);
      }

      function Gn(e, t, i, n) {
        var r = new Ot();
        r._nativeUrl = e, r._nativeAsset = t, n(null, r);
      }

      function Xn(e, t, i, n) {
        var r = new _t();
        r._nativeUrl = e, r._nativeAsset = t, n(null, r);
      }

      function Yn(e, i, n, r) {
        var s = At.get(i.name);
        s || (s = i.name === Ut.RESOURCES ? xn : new Nn(), i.base = i.base || e + "/", s.init(i)), t.import("virtual:///prerequisite-imports/" + s.name).then(function () {
          r(null, s);
        }).catch(r);
      }

      var Qn = function () {
        function e() {
          this._creating = new ht(), this._producers = {
            ".png": Hn,
            ".jpg": Hn,
            ".bmp": Hn,
            ".jpeg": Hn,
            ".gif": Hn,
            ".ico": Hn,
            ".tiff": Hn,
            ".webp": Hn,
            ".image": Hn,
            ".pvr": Hn,
            ".pkm": Hn,
            ".txt": qn,
            ".xml": qn,
            ".vsh": qn,
            ".fsh": qn,
            ".atlas": qn,
            ".tmx": qn,
            ".tsx": qn,
            ".fnt": qn,
            ".json": zn,
            ".ExportJson": zn,
            ".binary": Gn,
            ".bin": Gn,
            ".dbbin": Gn,
            ".skel": Gn,
            bundle: Yn,
            default: Xn
          };
        }

        var t = e.prototype;
        return t.register = function (e, t) {
          "object" == (0, _typeof2.default)(e) ? dt.mixin(this._producers, e) : this._producers[e] = t;
        }, t.create = function (e, t, i, n, r) {
          var s = this,
              a = this._producers[i] || this._producers.default,
              o = pt.get(e);

          if (n.reloadAsset || !o) {
            var u = this._creating.get(e);

            u ? u.push(r) : (this._creating.add(e, [r]), a(e, t, n, function (t, i) {
              !t && i instanceof _t && (i._uuid = e, wn(e, i, n.cacheAsset));

              for (var r = s._creating.remove(e), a = 0, o = r.length; a < o; a++) {
                r[a](t, i);
              }
            }));
          } else r(null, o);
        }, e;
      }(),
          Jn = e("t", new Qn()),
          Kn = new (function () {
        function e() {
          this._loading = new ht(), this._unpackers = {
            ".json": this.unpackJson
          };
        }

        var t = e.prototype;
        return t.unpackJson = function (e, t, i, n) {
          var r = dt.createMap(!0),
              s = null;

          if (Array.isArray(t)) {
            (t = Wt(t)).length !== e.length && Oe(4915);

            for (var a = 0; a < e.length; a++) {
              r[e[a] + "@import"] = t[a];
            }
          } else {
            var o = dt._getClassId(Vt),
                u = dt._getClassId(Ft);

            if (t.type === o && t.data) {
              var c = t.data;
              c.length !== e.length && Oe(4915);

              for (var h = 0; h < e.length; h++) {
                r[e[h] + "@import"] = jt(o, {
                  base: c[h][0],
                  mipmaps: c[h][1]
                });
              }
            } else if (t.type === u && t.data) {
              var l = t.data;
              l.length !== e.length && Oe(4915);

              for (var d = 0; d < e.length; d++) {
                r[e[d] + "@import"] = l[d];
              }
            } else s = new Error("unmatched type pack!"), r = null;
          }

          n(s, r);
        }, t.init = function () {
          this._loading.clear();
        }, t.register = function (e, t) {
          "object" == (0, _typeof2.default)(e) ? dt.mixin(this._unpackers, e) : this._unpackers[e] = t;
        }, t.unpack = function (e, t, i, n, r) {
          t ? (0, this._unpackers[i])(e, t, n, r) : r(new Error("package data is wrong!"));
        }, t.load = function (e, t, i) {
          var n = this;
          if (!e.isNative && e.info && e.info.packs) {
            if (xt.has(e.id)) i(null, xt.get(e.id));else {
              var r = e.info.packs,
                  s = r.find(function (e) {
                return n._loading.has(e.uuid);
              });
              if (s) this._loading.get(s.uuid).push({
                onComplete: i,
                id: e.id
              });else {
                s = r[0], this._loading.add(s.uuid, [{
                  onComplete: i,
                  id: e.id
                }]);
                var a = Ht(s.uuid, {
                  ext: s.ext,
                  bundle: e.config.name
                });
                jn.download(s.uuid, a, s.ext, e.options, function (t, i) {
                  xt.remove(s.uuid), t && pe(t.message, t.stack), n.unpack(s.packedUuids, i, s.ext, e.options, function (e, i) {
                    if (!e) for (var r in i) {
                      xt.add(r, i[r]);
                    }

                    for (var a = n._loading.remove(s.uuid), o = 0, u = a.length; o < u; o++) {
                      var c = a[o];
                      if (t || e) c.onComplete(t || e);else {
                        var h = i[c.id];
                        h ? c.onComplete(null, h) : c.onComplete(new Error("can not retrieve data from package"));
                      }
                    }
                  });
                });
              }
            }
          } else jn.download(e.id, e.url, e.ext, e.options, i);
        }, e;
      }())();

      function Zn(e, t) {
        var i = !1;
        e.progress || (e.progress = {
          finish: 0,
          total: e.input.length,
          canInvoke: !0
        }, i = !0);
        var n = e.options,
            r = e.progress,
            s = [],
            a = r.total,
            o = n.__exclude__ = n.__exclude__ || Object.create(null);
        e.output = [], Tn(e.input, function (n, u) {
          if (!n.isNative && pt.has(n.uuid)) {
            var c = pt.get(n.uuid);
            return n.content = c.addRef(), e.output.push(n), r.canInvoke && e.dispatch("progress", ++r.finish, r.total, n), void u();
          }

          Kn.load(n, e.options, function (c, h) {
            c ? e.isFinish || (!_e.assetManager.force || i ? (pe(c.message, c.stack), r.canInvoke = !1, t(c)) : (e.output.push(n), r.canInvoke && e.dispatch("progress", ++r.finish, r.total, n))) : e.isFinish || (n.file = h, e.output.push(n), n.isNative || (o[n.uuid] = !0, yn(n.uuid, h, o, s, n.config), r.total = a + s.length), r.canInvoke && e.dispatch("progress", ++r.finish, r.total, n)), u();
          });
        }, function () {
          if (e.isFinish) return _n(e, !0), void e.dispatch("error");

          if (s.length > 0) {
            var a = zt.create({
              input: s,
              progress: r,
              options: n,
              onProgress: e.onProgress,
              onError: zt.prototype.recycle,
              onComplete: function onComplete(n) {
                var r;
                n || ((r = e.output).push.apply(r, a.output), a.recycle()), i && $n(e), t(n);
              }
            });
            qt.async(a);
          } else i && $n(e), t();
        });
      }

      function $n(e) {
        for (var t = e.output, i = 0, n = t.length; i < n; i++) {
          t[i].content && t[i].content.decRef(!1);
        }
      }

      var er = new (function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        Be(t, e);
        var i = t.prototype;
        return i.parse = function (e) {
          var t = this._parseXML(e).documentElement;

          if ("plist" !== t.tagName) return Ue(5100), {};

          for (var i = null, n = 0, r = t.childNodes.length; n < r && 1 !== (i = t.childNodes[n]).nodeType; n++) {
            ;
          }

          return this._parseNode(i);
        }, i._parseNode = function (e) {
          var t = null,
              i = e.tagName;
          if ("dict" === i) t = this._parseDict(e);else if ("array" === i) t = this._parseArray(e);else if ("string" === i) {
            if (1 === e.childNodes.length) t = e.firstChild.nodeValue;else {
              t = "";

              for (var n = 0; n < e.childNodes.length; n++) {
                t += e.childNodes[n].nodeValue;
              }
            }
          } else "false" === i ? t = !1 : "true" === i ? t = !0 : "real" === i ? t = parseFloat(e.firstChild.nodeValue) : "integer" === i && (t = parseInt(e.firstChild.nodeValue, 10));
          return t;
        }, i._parseArray = function (e) {
          for (var t = [], i = 0, n = e.childNodes.length; i < n; i++) {
            var r = e.childNodes[i];
            1 === r.nodeType && t.push(this._parseNode(r));
          }

          return t;
        }, i._parseDict = function (e) {
          for (var t = {}, i = "", n = 0, r = e.childNodes.length; n < r; n++) {
            var s = e.childNodes[n];
            1 === s.nodeType && ("key" === s.tagName ? i = s.firstChild.nodeValue : t[i] = this._parseNode(s));
          }

          return t;
        }, t;
      }(e("v", function () {
        function e() {
          this._parser = null, window.DOMParser && (this._parser = new DOMParser());
        }

        var t = e.prototype;
        return t.parse = function (e) {
          return this._parseXML(e);
        }, t._parseXML = function (e) {
          if (this._parser) return this._parser.parseFromString(e, "text/xml");
          throw new Error("Dom parser is not supported in this platform!");
        }, e;
      }())))();

      function tr(e, t) {
        return e[t] << 8 | e[t + 1];
      }

      var ir = new (function () {
        function e() {
          this._parsing = new ht(), this._parsers = {
            ".png": this.parseImage,
            ".jpg": this.parseImage,
            ".bmp": this.parseImage,
            ".jpeg": this.parseImage,
            ".gif": this.parseImage,
            ".ico": this.parseImage,
            ".tiff": this.parseImage,
            ".webp": this.parseImage,
            ".image": this.parseImage,
            ".pvr": this.parsePVRTex,
            ".pkm": this.parsePKMTex,
            ".astc": this.parseASTCTex,
            ".plist": this.parsePlist,
            import: this.parseImport,
            ".ccon": this.parseImport,
            ".cconb": this.parseImport
          };
        }

        var t = e.prototype;
        return t.parseImage = function (e, t, i) {
          e instanceof HTMLImageElement ? i(null, e) : createImageBitmap(e, {
            premultiplyAlpha: "none"
          }).then(function (e) {
            i(null, e);
          }, function (e) {
            i(e, null);
          });
        }, t.parsePVRTex = function (e, t, i) {
          var n = null,
              r = null;

          try {
            var s = e instanceof ArrayBuffer ? e : e.buffer,
                a = new Int32Array(s, 0, 13);

            if (55727696 === a[0]) {
              var o = a[7],
                  u = a[6],
                  c = a[12] + 52;
              r = {
                _data: new Uint8Array(s, c),
                _compressed: !0,
                width: o,
                height: u,
                format: 0
              };
            } else {
              if (559044176 !== a[11]) throw new Error("Invalid magic number in PVR header");
              var h = a[0],
                  l = a[1],
                  d = a[2];
              r = {
                _data: new Uint8Array(s, h),
                _compressed: !0,
                width: d,
                height: l,
                format: 0
              };
            }
          } catch (e) {
            n = e;
          }

          i(n, r);
        }, t.parsePKMTex = function (e, t, i) {
          var n = null,
              r = null;

          try {
            var s = e instanceof ArrayBuffer ? e : e.buffer,
                a = new Uint8Array(s),
                o = tr(a, 6);
            if (0 !== o && 1 !== o && 3 !== o) throw new Error("Invalid magic number in ETC header");
            var u = tr(a, 12),
                c = tr(a, 14);
            tr(a, 8), tr(a, 10), r = {
              _data: new Uint8Array(s, 16),
              _compressed: !0,
              width: u,
              height: c,
              format: 0
            };
          } catch (e) {
            n = e;
          }

          i(n, r);
        }, t.parseASTCTex = function (e, t, i) {
          var n = null,
              r = null;

          try {
            var s = e instanceof ArrayBuffer ? e : e.buffer,
                a = new Uint8Array(s);
            if (1554098963 !== a[0] + (a[1] << 8) + (a[2] << 16) + (a[3] << 24)) throw new Error("Invalid magic number in ASTC header");
            var o = a[4],
                u = a[5],
                c = a[6];
            if ((o < 3 || o > 6 || u < 3 || u > 6 || c < 3 || c > 6) && (o < 4 || 7 === o || 9 === o || 11 === o || o > 12 || u < 4 || 7 === u || 9 === u || 11 === u || u > 12 || 1 !== c)) throw new Error("Invalid block number in ASTC header");

            var h = function (e, t) {
              return 4 === e ? Yt.RGBA_ASTC_4x4 : 5 === e ? 4 === t ? Yt.RGBA_ASTC_5x4 : Yt.RGBA_ASTC_5x5 : 6 === e ? 5 === t ? Yt.RGBA_ASTC_6x5 : Yt.RGBA_ASTC_6x6 : 8 === e ? 5 === t ? Yt.RGBA_ASTC_8x5 : 6 === t ? Yt.RGBA_ASTC_8x6 : Yt.RGBA_ASTC_8x8 : 10 === e ? 5 === t ? Yt.RGBA_ASTC_10x5 : 6 === t ? Yt.RGBA_ASTC_10x6 : 8 === t ? Yt.RGBA_ASTC_10x8 : Yt.RGBA_ASTC_10x10 : 10 === t ? Yt.RGBA_ASTC_12x10 : Yt.RGBA_ASTC_12x12;
            }(o, u),
                l = a[7] + (a[8] << 8) + (a[9] << 16),
                d = a[10] + (a[11] << 8) + (a[12] << 16);

            a[13], a[14], a[15], r = {
              _data: new Uint8Array(s, 16),
              _compressed: !0,
              width: l,
              height: d,
              format: h
            };
          } catch (e) {
            n = e;
          }

          i(n, r);
        }, t.parsePlist = function (e, t, i) {
          var n = null,
              r = er.parse(e);
          r || (n = new Error("parse failed")), i(n, r);
        }, t.parseImport = function (e, t, i) {
          if (e) {
            var n = null,
                r = null;

            try {
              n = Gt(e, t);
            } catch (e) {
              r = e;
            }

            i(r, n);
          } else i(new Error("The json file of asset " + t.__uuid__ + " is empty or missing"));
        }, t.init = function () {
          this._parsing.clear();
        }, t.register = function (e, t) {
          "object" == (0, _typeof2.default)(e) ? Nt(this._parsers, e) : this._parsers[e] = t;
        }, t.parse = function (e, t, i, n, r) {
          var s = this,
              a = Xt.get(e);
          if (a) r(null, a);else {
            var o = this._parsing.get(e);

            if (o) o.push(r);else {
              var u = this._parsers[i];
              u ? (this._parsing.add(e, [r]), u(t, n, function (t, i) {
                t ? xt.remove(e) : wt(i) || Xt.add(e, i);

                for (var n = s._parsing.remove(e), r = 0, a = n.length; r < a; r++) {
                  n[r](t, i);
                }
              })) : r(null, t);
            }
          }
        }, e;
      }())();

      function nr(e, t) {
        var i = !1;
        e.progress || (e.progress = {
          finish: 0,
          total: e.input.length,
          canInvoke: !0
        }, i = !0);
        var n = e.options,
            r = e.progress;
        n.__exclude__ = n.__exclude__ || Object.create(null), e.output = [], Tn(e.input, function (s, a) {
          var o = zt.create({
            input: s,
            onProgress: e.onProgress,
            options: n,
            progress: r,
            onComplete: function onComplete(n, u) {
              n && !e.isFinish && (!_e.assetManager.force || i ? (pe(n.message, n.stack), r.canInvoke = !1, t(n)) : r.canInvoke && e.dispatch("progress", ++r.finish, r.total, s)), e.output.push(u), o.recycle(), a(null);
            }
          });
          rr.async(o);
        }, function () {
          if (n.__exclude__ = null, e.isFinish) return _n(e, !0), void e.dispatch("error");
          !function (e) {
            var t = e.source;
            if (e.options.__outputAsArray__ || 1 !== t.length) for (var i = e.output = [], n = 0, r = t.length; n < r; n++) {
              i.push(t[n].content);
            } else e.output = t[0].content;
          }(e), _n(e, !0), t();
        });
      }

      var rr = new Qt("loadOneAsset", [function (e, t) {
        var i = e.output = e.input,
            n = i.options,
            r = i.isNative,
            s = i.uuid,
            a = i.file,
            o = n.reloadAsset;
        a || !o && !r && pt.has(s) ? t() : Kn.load(i, e.options, function (e, n) {
          i.file = n, t(e);
        });
      }, function (e, t) {
        var i = e.output = e.input,
            n = e.progress,
            r = e.options.__exclude__,
            s = i.id,
            a = i.file,
            o = i.options;
        if (i.isNative) ir.parse(s, a, i.ext, o, function (r, a) {
          r ? t(r) : (i.content = a, n.canInvoke && e.dispatch("progress", ++n.finish, n.total, i), xt.remove(s), Xt.remove(s), t());
        });else {
          var u = i.uuid;

          if (u in r) {
            var c = r[u],
                h = c.finish,
                l = c.content,
                d = c.err,
                f = c.callbacks;
            n.canInvoke && e.dispatch("progress", ++n.finish, n.total, i), h || En(u, u, r) ? (l && l.addRef(), i.content = l, t(d)) : f.push({
              done: t,
              item: i
            });
          } else if (!o.reloadAsset && pt.has(u)) {
            var p = pt.get(u);
            i.content = p.addRef(), n.canInvoke && e.dispatch("progress", ++n.finish, n.total, i), t();
          } else o.__uuid__ = u, ir.parse(s, a, "import", o, function (i, n) {
            i ? t(i) : function (e, t, i) {
              var n = e.input,
                  r = e.progress,
                  s = n,
                  a = s.uuid,
                  o = s.id,
                  u = s.options,
                  c = s.config,
                  h = u.cacheAsset,
                  l = [];
              t.addRef && t.addRef(), yn(a, t, Object.create(null), l, c), r.canInvoke && e.dispatch("progress", ++r.finish, r.total += l.length, n);
              var d = e.options.__exclude__[a] = {
                content: t,
                finish: !1,
                callbacks: [{
                  done: i,
                  item: n
                }]
              },
                  f = zt.create({
                input: l,
                options: e.options,
                onProgress: e.onProgress,
                onError: zt.prototype.recycle,
                progress: r,
                onComplete: function onComplete(e) {
                  if (t.decRef && t.decRef(!1), d.finish = !0, d.err = e, !e) {
                    for (var i, n = Array.isArray(f.output) ? f.output : [f.output], r = Object.create(null), s = ze(n); !(i = s()).done;) {
                      var u = i.value;
                      u && (r[u instanceof _t ? u._uuid + "@import" : a + "@native"] = u);
                    }

                    !function (e, t, i) {
                      var n = Tt.get(t);

                      if (n) {
                        for (var r = 0, s = n.length; r < s; r++) {
                          var a = n[r],
                              o = i[a.uuid + "@import"];
                          if (o) a.owner[a.prop] = o.addRef();else {
                            if (pe("The asset " + a.uuid + " is missing!"), a.type && a.type !== _t) {
                              var u = new a.type();
                              u.initDefault(a.uuid), a.owner[a.prop] = u;
                            }

                            !0;
                          }
                        }

                        Tt.delete(t);
                      }

                      bt.has(t) && (i[e + "@native"] ? t._nativeAsset = i[e + "@native"] : (!0, console.error("the native asset of " + e + " is missing!")), bt.delete(t));
                    }(a, t, r);

                    try {
                      "function" != typeof t.onLoaded || Jt.has(t) || bt.has(t) || (t.onLoaded(), Jt.add(t));
                    } catch (e) {
                      pe("The asset " + a + " is invalid for some reason, detail message: " + e.message + ", stack: " + e.stack);
                    }

                    xt.remove(o), Xt.remove(o), wn(a, t, h), f.recycle();
                  }

                  for (var c = d.callbacks, l = 0, p = c.length; l < p; l++) {
                    var m = c[l];
                    t.addRef && t.addRef(), m.item.content = t, m.done(e);
                  }

                  c.length = 0;
                }
              });
              Kt.async(f);
            }(e, n, t);
          });
        }
      }]);

      function sr(e, t) {
        var i = e.options,
            n = Object.create(null),
            r = Object.create(null);

        for (var s in i) {
          switch (s) {
            case Et.PATH:
            case Et.UUID:
            case Et.DIR:
            case Et.SCENE:
            case Et.URL:
              break;

            case "__requestType__":
            case "__isNative__":
            case "ext":
            case "type":
            case "__nativeName__":
            case "audioLoadMode":
            case "bundle":
              n[s] = i[s];
              break;

            case "__exclude__":
            case "__outputAsArray__":
              r[s] = i[s];
              break;

            default:
              n[s] = i[s], r[s] = i[s];
          }
        }

        e.options = r;
        var a = zt.create({
          input: e.input,
          options: n
        }),
            o = null;

        try {
          e.output = e.source = Zt.sync(a);
        } catch (e) {
          o = e;

          for (var u = 0, c = a.output.length; u < c; u++) {
            a.output[u].recycle();
          }
        }

        a.recycle(), t(o);
      }

      var ar = function () {
        function e() {
          this.uuid = "", this.url = "", this.ext = ".json", this.content = null, this.file = null, this.info = null, this.config = null, this.isNative = !1, this.options = Object.create(null), this._id = "";
        }

        return e.create = function () {
          return 0 !== e._deadPool.length ? e._deadPool.pop() : new e();
        }, e.prototype.recycle = function () {
          e._deadPool.length !== e.MAX_DEAD_NUM && (this._id = "", this.uuid = "", this.url = "", this.ext = ".json", this.content = null, this.file = null, this.info = null, this.config = null, this.isNative = !1, this.options = Object.create(null), e._deadPool.push(this));
        }, ke(e, [{
          key: "id",
          get: function get() {
            return this._id || (this._id = this.uuid + "@" + (this.isNative ? "native" : "import")), this._id;
          }
        }]), e;
      }();

      ar.MAX_DEAD_NUM = 500, ar._deadPool = [];
      var or = [];

      function ur(e) {
        var t = e.options,
            i = Array.isArray(e.input) ? e.input : [e.input];
        e.output = [];

        for (var n = function n(_n2) {
          var r,
              s = i[_n2],
              a = ar.create(),
              o = null,
              u = null;
          if ("string" == typeof s && ((s = Object.create(null))[t.__requestType__ || Et.UUID] = i[_n2]), "object" == (0, _typeof2.default)(s)) for (var c in $t(s, t), s.preset && $t(s, ei[s.preset]), s) {
            switch (c) {
              case Et.UUID:
                if ("break" === function () {
                  var e,
                      t = a.uuid = ft(s.uuid);

                  if (!s.bundle) {
                    var i = At.find(function (e) {
                      return !!e.getAssetInfo(t);
                    });
                    s.bundle = i && i.name;
                  }

                  if (At.has(s.bundle)) {
                    if (o = At.get(s.bundle).config, (u = o.getAssetInfo(t)) && u.redirect) {
                      if (!At.has(u.redirect)) throw new Error("Please load bundle " + u.redirect + " first");
                      o = At.get(u.redirect).config, u = o.getAssetInfo(t);
                    }

                    a.config = o, a.info = u;
                  }

                  return a.ext = s.ext || (null === (e = u) || void 0 === e ? void 0 : e.extension) || ".json", "break";
                }()) break;

              case "__requestType__":
              case "ext":
              case "bundle":
              case "preset":
              case "type":
                break;

              case Et.DIR:
                if (At.has(s.bundle)) {
                  At.get(s.bundle).config.getDirWithPath(s.dir, s.type, or);

                  for (var h, l = ze(or); !(h = l()).done;) {
                    var d = h.value;
                    i.push({
                      uuid: d.uuid,
                      __isNative__: !1,
                      ext: d.extension || ".json",
                      bundle: s.bundle
                    });
                  }

                  or.length = 0;
                }

                a.recycle(), a = null;
                break;

              case Et.PATH:
                if (At.has(s.bundle)) {
                  if (o = At.get(s.bundle).config, (u = o.getInfoWithPath(s.path, s.type)) && u.redirect) {
                    if (!At.has(u.redirect)) throw new Error("you need to load bundle " + u.redirect + " first");
                    o = At.get(u.redirect).config, u = o.getAssetInfo(u.uuid);
                  }

                  if (!u) throw a.recycle(), new Error("Bundle " + s.bundle + " doesn't contain " + s.path);
                  a.config = o, a.uuid = u.uuid, a.info = u;
                }

                a.ext = s.ext || (null === (r = u) || void 0 === r ? void 0 : r.extension) || ".json";
                break;

              case Et.SCENE:
                if (!s.bundle) {
                  var f = At.find(function (e) {
                    return !!e.getSceneInfo(s.scene);
                  });
                  s.bundle = f && f.name;
                }

                if (At.has(s.bundle)) {
                  if (o = At.get(s.bundle).config, (u = o.getSceneInfo(s.scene)) && u.redirect) {
                    if (!At.has(u.redirect)) throw new Error("you need to load bundle " + u.redirect + " first");
                    o = At.get(u.redirect).config, u = o.getAssetInfo(u.uuid);
                  }

                  if (!u) throw a.recycle(), new Error("Bundle " + o.name + " doesn't contain scene " + s.scene);
                  a.config = o, a.uuid = u.uuid, a.info = u;
                }

                break;

              case "__isNative__":
                a.isNative = s.__isNative__;
                break;

              case Et.URL:
                a.url = s.url, a.uuid = s.uuid || s.url, a.ext = s.ext || ti(s.url), a.isNative = void 0 === s.__isNative__ || s.__isNative__;
                break;

              default:
                a.options[c] = s[c];
            }

            if (!a) break;
          }
          if (!a) return "continue";
          if (e.output.push(a), !a.uuid && !a.url) throw new Error("Can not parse this input:" + JSON.stringify(s));
        }, r = 0; r < i.length; r++) {
          n(r);
        }

        return null;
      }

      function cr(e) {
        for (var t = e.output = e.input, i = 0; i < t.length; i++) {
          var n = t[i];

          if (!n.url) {
            var r,
                s,
                a = n.config;
            s = n.isNative ? a && a.nativeBase ? a.base + a.nativeBase : _e.assetManager.generalNativeBase : a && a.importBase ? a.base + a.importBase : _e.assetManager.generalImportBase;
            var o = n.uuid,
                u = "";
            n.info && (u = n.isNative ? n.info.nativeVer ? "." + n.info.nativeVer : "" : n.info.ver ? "." + n.info.ver : ""), r = ".ttf" === n.ext ? s + "/" + o.slice(0, 2) + "/" + o + u + "/" + n.options.__nativeName__ : s + "/" + o.slice(0, 2) + "/" + o + u + n.ext, n.url = r;
          }
        }

        return null;
      }

      var hr = e("A", function () {
        function e() {
          this.pipeline = Kt.append(sr).append(nr), this.fetchPipeline = qt.append(sr).append(Zn), this.transformPipeline = Zt.append(ur).append(cr), this.bundles = At, this.assets = pt, this.generalImportBase = "", this.generalNativeBase = "", this.dependUtil = mt, this.force = ii, this.allowImageBitmap = !It.isMobile, this.utils = ni, this.downloader = jn, this.parser = ir, this.packManager = Kn, this.cacheAsset = !0, this.cacheManager = null, this.presets = ei, this.factory = Jn, this.preprocessPipe = sr, this.fetchPipe = Zn, this.loadPipe = nr, this.references = ri, this._releaseManager = pn, this._files = xt, this._parsed = Xt, this._parsePipeline = null;
        }

        var t = e.prototype;
        return t.init = function (e) {
          void 0 === e && (e = {}), this._files.clear(), this._parsed.clear(), this._releaseManager.init(), this.assets.clear(), this.bundles.clear(), this.packManager.init(), this.downloader.init(e.server, e.bundleVers, e.remoteBundles), this.parser.init(), this.dependUtil.init();
          var t = e.importBase || "";
          t && t.endsWith("/") && (t = t.substr(0, t.length - 1));
          var i = e.nativeBase || "";
          i && i.endsWith("/") && (i = i.substr(0, i.length - 1)), this.generalImportBase = t, this.generalNativeBase = i;
        }, t.getBundle = function (e) {
          return At.get(e) || null;
        }, t.removeBundle = function (e) {
          e._destroy(), At.remove(e.name);
        }, t.loadAny = function (e, t, i, n) {
          var r = bn(t, i, n),
              s = r.options,
              a = r.onProgress,
              o = r.onComplete;
          s.preset = s.preset || "default", e = Array.isArray(e) ? e.slice() : e;
          var u = zt.create({
            input: e,
            onProgress: a,
            onComplete: Sn(o),
            options: s
          });
          Kt.async(u);
        }, t.preloadAny = function (e, t, i, n) {
          var r = bn(t, i, n),
              s = r.options,
              a = r.onProgress,
              o = r.onComplete;
          s.preset = s.preset || "preload", e = Array.isArray(e) ? e.slice() : e;
          var u = zt.create({
            input: e,
            onProgress: a,
            onComplete: Sn(o),
            options: s
          });
          qt.async(u);
        }, t.loadRemote = function (e, t, i) {
          var n = bn(t, void 0, i),
              r = n.options,
              s = n.onComplete;
          r.reloadAsset || !this.assets.has(e) ? (r.__isNative__ = !0, r.preset = r.preset || "remote", this.loadAny({
            url: e
          }, r, null, function (t, i) {
            t ? (pe(t.message, t.stack), s && s(t, i)) : Jn.create(e, i, r.ext || ti(e), r, function (e, t) {
              s && s(e, t);
            });
          })) : Sn(s)(null, this.assets.get(e));
        }, t.loadBundle = function (e, t, i) {
          var n = bn(t, void 0, i),
              r = n.options,
              s = n.onComplete,
              a = Dt(e);
          this.bundles.has(a) ? Sn(s)(null, this.getBundle(a)) : (r.preset = r.preset || "bundle", r.ext = "bundle", r.__isNative__ = !0, this.loadAny({
            url: e
          }, r, null, function (t, i) {
            t ? (pe(t.message, t.stack), s && s(t, i)) : Jn.create(e, i, "bundle", r, function (e, t) {
              s && s(e, t);
            });
          }));
        }, t.releaseAsset = function (e) {
          pn.tryRelease(e, !0);
        }, t.releaseUnusedAssets = function () {
          pt.forEach(function (e) {
            pn.tryRelease(e);
          });
        }, t.releaseAll = function () {
          pt.forEach(function (e) {
            pn.tryRelease(e, !0);
          });
        }, t.loadWithJson = function () {
          throw new Error("Only valid in Editor");
        }, ke(e, [{
          key: "main",
          get: function get() {
            return At.get(Ut.MAIN) || null;
          }
        }, {
          key: "resources",
          get: function get() {
            return At.get(Ut.RESOURCES) || null;
          }
        }]), e;
      }());
      hr.Pipeline = Qt, hr.Task = zt, hr.Cache = ht, hr.RequestItem = ar, hr.Bundle = Nn, hr.BuiltinBundleName = Ut;
      var lr = e("e", _e.assetManager = new hr());
      _e.AssetManager = hr;
      var dr = [".png", ".jpg", ".bmp", ".jpeg", ".gif", ".ico", ".tiff", ".webp", ".image", ".pvr", ".pkm", ".astc"],
          fr = [".mp3", ".ogg", ".wav", ".m4a"];

      function pr() {
        return !0;
      }

      var mr = {
        transformURL: function transformURL(e) {
          var t = oi(e);
          if (!t) return e;
          var i = At.find(function (e) {
            return !!e.getAssetInfo(t);
          });
          if (!i) return e;
          var n,
              r = i.getAssetInfo(t);
          if (!(n = e.startsWith(i.base + i.config.nativeBase) ? r.nativeVer || "" : r.ver || "") || -1 !== e.indexOf(n)) return e;
          var s = !1;

          if (".ttf" === ti(e) && (s = !0), s) {
            var a = ui(e),
                o = Dt(e);
            e = a + "." + n + "/" + o;
          } else e = e.replace(/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,}).*/, function (e) {
            return e + "." + n;
          });

          return e;
        }
      },
          _r = e("C", function () {
        function e() {
          this._autoReleaseSetting = Object.create(null), this._parseLoadResArgs = An;
        }

        var t = e.prototype;
        return t.load = function (e, t, i) {
          void 0 === i && void 0 !== t && (i = t, t = null);

          for (var n = Array.isArray(e) ? e : [e], r = 0; r < n.length; r++) {
            var s = n[r];
            "string" == typeof s ? n[r] = {
              url: s,
              __isNative__: !0
            } : (s.type && (s.ext = "." + s.type, s.type = void 0), s.url && (s.__isNative__ = !0));
          }

          var a = [],
              o = [];
          lr.loadAny(n, null, function (e, i, n) {
            n.content && (dr.includes(n.ext) ? a.push(n.content) : fr.includes(n.ext) && o.push(n.content)), t && t(e, i, n);
          }, function (e, t) {
            var r = null;

            if (!e) {
              t = Array.isArray(t) ? t : [t];

              for (var s = function s(e) {
                var i = t[e];

                if (!(i instanceof _t)) {
                  var r = i,
                      s = n[e].url;
                  a.includes(r) ? Jn.create(s, i, ".png", {}, function (i, n) {
                    r = t[e] = n;
                  }) : o.includes(r) && Jn.create(s, i, ".mp3", {}, function (i, n) {
                    r = t[e] = n;
                  }), pt.add(s, r);
                }
              }, u = 0; u < t.length; u++) {
                s(u);
              }

              if (t.length > 1) {
                var c = Object.create(null);
                t.forEach(function (e) {
                  c[e._uuid] = e;
                }), r = {
                  isCompleted: pr,
                  _map: c
                };
              } else r = t[0];
            }

            i && i(e, r);
          });
        }, t.getXMLHttpRequest = function () {
          return new XMLHttpRequest();
        }, t.getItem = function (e) {
          return lr.assets.has(e) ? {
            content: lr.assets.get(e)
          } : null;
        }, t.loadRes = function (e, t, i, n) {
          var r = this._parseLoadResArgs(t, i, n),
              s = r.type,
              a = r.onProgress,
              o = r.onComplete,
              u = ti(e);

          u && !xn.getInfoWithPath(e, s) && (e = e.slice(0, -u.length)), xn.load(e, s, a, o);
        }, t.loadResArray = function (e, t, i, n) {
          var r = this._parseLoadResArgs(t, i, n),
              s = r.type,
              a = r.onProgress,
              o = r.onComplete;

          e.forEach(function (t, i) {
            var n = ti(t);
            n && !xn.getInfoWithPath(t, s) && (e[i] = t.slice(0, -n.length));
          }), xn.load(e, s, a, o);
        }, t.loadResDir = function (e, t, i, n) {
          var r = this._parseLoadResArgs(t, i, n),
              s = r.type,
              a = r.onProgress,
              o = r.onComplete;

          xn.loadDir(e, s, a, function (t, i) {
            var n = [];
            t || (n = xn.getDirWithPath(e, s).map(function (e) {
              return e.path;
            })), o && o(t, i, n);
          });
        }, t.getRes = function (e, t) {
          return pt.has(e) ? pt.get(e) : xn.get(e, t);
        }, t.getResCount = function () {
          return pt.count;
        }, t.getDependsRecursively = function (e) {
          if (!e) return [];
          var t = "string" == typeof e ? e : e._uuid;
          return mt.getDepsRecursively(t).concat([t]);
        }, t.addDownloadHandlers = function (e) {
          var t = Object.create(null),
              i = function i(_i3) {
            var n = e[_i3];

            t["." + _i3] = function (e, t, i) {
              n({
                url: e
              }, i);
            };
          };

          for (var n in e) {
            i(n);
          }

          jn.register(t);
        }, t.addLoadHandlers = function (e) {
          var t = Object.create(null),
              i = function i(_i4) {
            var n = e[_i4];

            t["." + _i4] = function (e, t, i) {
              n({
                content: e
              }, i);
            };
          };

          for (var n in e) {
            i(n);
          }

          ir.register(t);
        }, t.release = function (e) {
          if (Array.isArray(e)) for (var t = 0; t < e.length; t++) {
            var i = e[t];
            "string" == typeof i && (i = pt.get(i)), lr.releaseAsset(i);
          } else e && ("string" == typeof e && (e = pt.get(e)), lr.releaseAsset(e));
        }, t.releaseAsset = function (e) {
          lr.releaseAsset(e);
        }, t.releaseRes = function (e, t) {
          xn.release(e, t);
        }, t.releaseAll = function () {
          lr.releaseAll(), pt.clear();
        }, t.removeItem = function (e) {
          return !!pt.remove(e);
        }, t.setAutoRelease = function (e, t) {
          "object" == (0, _typeof2.default)(e) && (e = e._uuid), this._autoReleaseSetting[e] = !!t;
        }, t.setAutoReleaseRecursively = function (e, t) {
          "object" == (0, _typeof2.default)(e) && (e = e._uuid), t = !!t, this._autoReleaseSetting[e] = t;

          for (var i = mt.getDepsRecursively(e), n = 0; n < i.length; n++) {
            this._autoReleaseSetting[i[n]] = t;
          }
        }, t.isAutoRelease = function (e) {
          return "object" == (0, _typeof2.default)(e) && (e = e._uuid), !!this._autoReleaseSetting[e];
        }, ke(e, [{
          key: "onProgress",
          set: function set(e) {
            mn = e;
          }
        }, {
          key: "_cache",
          get: function get() {
            return pt._map;
          }
        }, {
          key: "md5Pipe",
          get: function get() {
            return mr;
          }
        }, {
          key: "downloader",
          get: function get() {
            return jn;
          }
        }, {
          key: "loader",
          get: function get() {
            return lr.parser;
          }
        }]), e;
      }()),
          gr = e("l", new _r()),
          vr = e("f", {
        init: function init(e) {
          e.importBase = e.libraryPath, e.nativeBase = e.rawAssetsBase, lr.init(e), e.rawAssets && xn.init({
            base: "",
            deps: [],
            scenes: {},
            redirect: [],
            debug: !0,
            packs: {},
            types: [],
            versions: {
              import: [],
              native: []
            },
            name: Ut.RESOURCES,
            importBase: e.importBase,
            nativeBase: e.nativeBase,
            paths: e.rawAssets.assets,
            uuids: Object.keys(e.rawAssets.assets),
            extensionMap: {}
          });
        },
        loadAsset: function loadAsset(e, t) {
          lr.loadAny(e, t);
        }
      }),
          yr = e("u", {});

      ot(yr, "url", [{
        name: "normalize",
        target: lr.utils,
        targetName: "assetManager.utils",
        newName: "normalize"
      }, {
        name: "raw",
        targetName: "Asset.prototype",
        newName: "nativeUrl",
        customFunction: function customFunction(e) {
          return e.startsWith("resources/") ? Ht({
            path: si(e.substr(10)),
            bundle: Ut.RESOURCES,
            __isNative__: !0,
            ext: ti(e)
          }) : "";
        }
      }]), ut(vr, "AssetLibrary", [{
        name: "getLibUrlNoExt",
        suggest: "AssetLibrary.getLibUrlNoExt was removed, if you want to transform url, please use cc.assetManager.utils.getUrlWithUuid instead"
      }, {
        name: "queryAssetInfo",
        suggest: "AssetLibrary.queryAssetInfo was removed"
      }]), ut(gr, "loader", [{
        name: "releaseResDir",
        suggest: "loader.releaseResDir was removed, please use assetManager.releaseAsset instead"
      }, {
        name: "flowInDeps",
        suggest: "loader.flowInDeps was removed"
      }, {
        name: "assetLoader",
        suggest: "cc.loader.assetLoader was removed, assetLoader and md5Pipe were merged into cc.assetManager.transformPipeline"
      }]), ot(_e, "cc", [{
        name: "loader",
        newName: "assetManager",
        logTimes: 1,
        customGetter: function customGetter() {
          return gr;
        }
      }, {
        name: "AssetLibrary",
        newName: "assetManager",
        logTimes: 1,
        customGetter: function customGetter() {
          return vr;
        }
      }, {
        name: "Pipeline",
        target: hr,
        targetName: "AssetManager",
        newName: "Pipeline",
        logTimes: 1
      }, {
        name: "url",
        targetName: "assetManager",
        newName: "utils",
        logTimes: 1,
        customGetter: function customGetter() {
          return yr;
        }
      }]), ut(_e, "cc", [{
        name: "LoadingItems",
        suggest: St(1400, "cc.LoadingItems", "cc.AssetManager.Task")
      }]), ot(ai, "macro", [{
        name: "DOWNLOAD_MAX_CONCURRENT",
        target: jn,
        targetName: "assetManager.downloader",
        newName: "maxConcurrency"
      }]), ot(an, "director", [{
        name: "_getSceneUuid",
        targetName: "assetManager.main",
        newName: "getSceneInfo",
        customFunction: function customFunction(e) {
          var t;
          return lr.main ? null === (t = lr.main.getSceneInfo(e)) || void 0 === t ? void 0 : t.uuid : "";
        }
      }]), ot(Ci, "game", [{
        name: "_sceneInfos",
        targetName: "assetManager.main",
        newName: "getSceneInfo",
        customGetter: function customGetter() {
          var e = [];
          return lr.main && lr.main.config.scenes.forEach(function (t) {
            e.push(t);
          }), e;
        }
      }]);
      var wr,
          Tr,
          br,
          Ar,
          Er,
          Sr,
          Nr,
          xr,
          Rr,
          Ir,
          Pr,
          kr,
          Cr,
          Dr,
          Mr = pn._autoRelease;

      pn._autoRelease = function (e, t, i) {
        Mr.call(pn, e, t, i);

        for (var n = gr._autoReleaseSetting, r = Object.keys(n), s = 0; s < r.length; s++) {
          var a = r[s];

          if (!0 === n[a]) {
            var o = pt.get(a);
            o && pn.tryRelease(o);
          }
        }
      };

      var Fr,
          Br,
          Lr,
          Or,
          Ur,
          Wr,
          Vr = e("E", (wr = ci("cc.ClickEvent"), Tr = hi(_e.Node), br = mi(), Ar = mi(), Er = mi(), Sr = mi(), wr((Dr = function () {
        function e() {
          di(this, "target", Rr, this), di(this, "component", Ir, this), di(this, "_componentId", Pr, this), di(this, "handler", kr, this), di(this, "customEventData", Cr, this);
        }

        e.emitEvents = function (t) {
          for (var i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), r = 1; r < i; r++) {
            n[r - 1] = arguments[r];
          }

          for (var s = 0, a = t.length; s < a; s++) {
            var o = t[s];
            o instanceof e && o.emit(n);
          }
        };

        var t = e.prototype;
        return t.emit = function (e) {
          var t = this.target;

          if (_e.isValid(t)) {
            this._genCompIdIfNeeded();

            var i = _e.js._getClassById(this._componentId),
                n = t.getComponent(i);

            if (_e.isValid(n)) {
              var r = n[this.handler];
              "function" == typeof r && (null != this.customEventData && "" !== this.customEventData && (e = e.slice()).push(this.customEventData), r.apply(n, e));
            }
          }
        }, t._compName2Id = function (e) {
          var t = _e.js.getClassByName(e);

          return _e.js._getClassId(t);
        }, t._compId2Name = function (e) {
          var t = _e.js._getClassById(e);

          return _e.js.getClassName(t);
        }, t._genCompIdIfNeeded = function () {
          this._componentId || (this._componentName = this.component, this.component = "");
        }, ke(e, [{
          key: "_componentName",
          get: function get() {
            return this._genCompIdIfNeeded(), this._compId2Name(this._componentId);
          },
          set: function set(e) {
            this._componentId = this._compName2Id(e);
          }
        }]), e;
      }(), Rr = li((xr = Dr).prototype, "target", [fi, Tr, br], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ir = li(xr.prototype, "component", [fi, pi, Ar], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Pr = li(xr.prototype, "_componentId", [fi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), kr = li(xr.prototype, "handler", [fi, pi, Er], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Cr = li(xr.prototype, "customEventData", [fi, pi, Sr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Nr = xr)) || Nr));
      _e.Component.EventHandler = Vr, ot(Li, "Camera", [{
        name: "CameraClearFlag",
        newName: "ClearFlag"
      }]), ot(Li.prototype, "Camera.prototype", [{
        name: "color",
        newName: "clearColor"
      }, {
        name: "depth",
        newName: "clearDepth"
      }, {
        name: "stencil",
        newName: "clearStencil"
      }]), _e.CameraComponent = Li, dt.setClassAlias(Li, "cc.CameraComponent");
      var jr,
          Hr,
          zr,
          qr,
          Gr,
          Xr,
          Yr,
          Qr,
          Jr,
          Kr,
          Zr = e("U", ci("cc.animation.UniformProxyFactory")((Wr = function () {
        function e(e, t) {
          di(this, "passIndex", Lr, this), di(this, "uniformName", Or, this), di(this, "channelIndex", Ur, this), this.passIndex = t || 0, this.uniformName = e || "";
        }

        return e.prototype.forTarget = function (e) {
          var t = e.passes[this.passIndex],
              i = t.getHandle(this.uniformName);
          if (!i) throw new Error('Material "' + e.name + '" has no uniform "' + this.uniformName + '"');

          var n = _i.getPropertyTypeFromHandle(i);

          if (n === gi.BUFFER) {
            var r = void 0 === this.channelIndex ? i : t.getHandle(this.uniformName, this.channelIndex, vi.FLOAT);
            if (!r) throw new Error('Uniform "' + this.uniformName + " (in material " + e.name + ") has no channel " + this.channelIndex + '"');
            return function (e, t) {
              for (var i, n = ze(e.shaderInfo.blocks); !(i = n()).done;) {
                for (var r, s = i.value, a = ze(s.members); !(r = a()).done;) {
                  var o = r.value;
                  if (o.name === t) return o.count > 1;
                }
              }

              return !1;
            }(t, this.uniformName) ? {
              set: function set(e) {
                t.setUniformArray(r, e);
              }
            } : {
              set: function set(e) {
                t.setUniform(r, e);
              }
            };
          }

          if (n === gi.TEXTURE) {
            var s = _i.getBindingFromHandle(i),
                a = t.properties[this.uniformName],
                o = a && a.value ? a.value + "-texture" : yi(a.type),
                u = Qe.get(o);

            return u || (wi("Illegal texture default value: " + o + "."), u = Qe.get("default-texture")), {
              set: function set(e) {
                e || (e = u);
                var i = e.getGFXTexture();
                i && i.width && i.height && (t.bindTexture(s, i), e instanceof Ti && t.bindSampler(s, bi.getSampler(_e.game._gfxDevice, e.getSamplerHash())));
              }
            };
          }

          throw new Error("Animations are not available for uniforms with property type " + n + ".");
        }, e;
      }(), Lr = li((Br = Wr).prototype, "passIndex", [fi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Or = li(Br.prototype, "uniformName", [fi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Ur = li(Br.prototype, "channelIndex", [Ai], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {}
      }), Fr = Br)) || Fr);
      e("M", ci("cc.animation.MorphWeightValueProxy")((Gr = function () {
        function e() {
          di(this, "subMeshIndex", zr, this), di(this, "shapeIndex", qr, this);
        }

        return e.prototype.forTarget = function (e) {
          var t = this;
          return {
            set: function set(i) {
              e.setWeight(i, t.subMeshIndex, t.shapeIndex);
            }
          };
        }, e;
      }(), zr = li((Hr = Gr).prototype, "subMeshIndex", [fi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), qr = li(Hr.prototype, "shapeIndex", [fi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), jr = Hr)) || jr), e("a", ci("cc.animation.MorphWeightsValueProxy")((Jr = function () {
        function e() {
          di(this, "subMeshIndex", Qr, this);
        }

        return e.prototype.forTarget = function (e) {
          var t = this;
          return {
            set: function set(i) {
              e.setWeights(i, t.subMeshIndex);
            }
          };
        }, e;
      }(), Qr = li((Yr = Jr).prototype, "subMeshIndex", [fi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Xr = Yr)) || Xr), e("b", ci("cc.animation.MorphWeightsAllValueProxy")(Kr = function () {
        function e() {}

        return e.prototype.forTarget = function (e) {
          return {
            set: function set(t) {
              for (var i, n, r = null !== (i = null === (n = e.mesh) || void 0 === n ? void 0 : n.struct.primitives.length) && void 0 !== i ? i : 0, s = 0; s < r; ++s) {
                e.setWeights(t, s);
              }
            }
          };
        }, e;
      }()) || Kr), ot(Oi.prototype, "Animation", [{
        name: "getAnimationState",
        newName: "getState"
      }, {
        name: "addClip",
        newName: "createState"
      }, {
        name: "removeClip",
        newName: "removeState",
        customFunction: function customFunction() {
          var e = arguments.length <= 0 ? void 0 : arguments[0];
          return Oi.prototype.removeState.call(this, e.name);
        }
      }]), _e.AnimationComponent = Oi, dt.setClassAlias(Oi, "cc.AnimationComponent");

      var $r,
          es,
          ts,
          is,
          ns,
          rs,
          ss,
          as = function () {
        function e() {
          this._nodeBlendStates = new Map();
        }

        var t = e.prototype;
        return t.createWriter = function (e, t, i, n) {
          var r = this.ref(e, t);
          return new os(e, t, r, i, n);
        }, t.destroyWriter = function (e) {
          var t = e;
          this.deRef(t.node, t.property);
        }, t.ref = function (e, t) {
          var i = this._nodeBlendStates.get(e);

          return i || (i = new ls(), this._nodeBlendStates.set(e, i)), i.refProperty(t);
        }, t.deRef = function (e, t) {
          var i = this._nodeBlendStates.get(e);

          i && (i.deRefProperty(t), i.empty && this._nodeBlendStates.delete(e));
        }, t.apply = function () {
          this._nodeBlendStates.forEach(function (e, t) {
            e.apply(t);
          });
        }, e;
      }(),
          os = function () {
        function e(e, t, i, n, r) {
          this._node = e, this._property = t, this._propertyBlendState = i, this._host = n, this._constants = r;
        }

        var t = e.prototype;
        return t.getValue = function () {
          return this._node[this._property];
        }, t.setValue = function (e) {
          var t = this._propertyBlendState,
              i = this._host.weight;
          t.blend(e, i);
        }, ke(e, [{
          key: "node",
          get: function get() {
            return this._node;
          }
        }, {
          key: "property",
          get: function get() {
            return this._property;
          }
        }]), e;
      }(),
          us = function us(e) {
        this.blendedWeight = 0, this.blendedValue = void 0, this.refCount = 0, this.blendedValue = e;
      },
          cs = function (e) {
        function t() {
          return e.call(this, new s()) || this;
        }

        Be(t, e);
        var i = t.prototype;
        return i.blend = function (e, t) {
          var i = this.blendedValue;
          1 === t ? s.copy(i, e) : s.scaleAndAdd(i, i, e, t), this.blendedWeight += t;
        }, i.reset = function () {
          this.blendedWeight = 0, s.zero(this.blendedValue);
        }, t;
      }(us),
          hs = function (e) {
        function t() {
          return e.call(this, new c()) || this;
        }

        Be(t, e);
        var i = t.prototype;
        return i.blend = function (e, t) {
          if (0 !== t) {
            var i = this.blendedValue,
                n = this.blendedWeight;
            if (1 === t) c.copy(i, e);else {
              var r = t / (n + t);
              c.slerp(i, i, e, r);
            }
            this.blendedWeight += t;
          }
        }, i.reset = function () {
          this.blendedWeight = 0, c.identity(this.blendedValue);
        }, t;
      }(us),
          ls = function () {
        function e() {
          this._properties = {};
        }

        var t = e.prototype;
        return t.refProperty = function (e) {
          var t,
              i,
              n,
              r = this._properties;

          switch (e) {
            default:
            case "position":
            case "scale":
            case "eulerAngles":
              n = null !== (t = r[e]) && void 0 !== t ? t : r[e] = new cs();
              break;

            case "rotation":
              n = null !== (i = r[e]) && void 0 !== i ? i : r[e] = new hs();
          }

          return ++n.refCount, n;
        }, t.deRefProperty = function (e) {
          var t = this._properties,
              i = t[e];
          i && (--i.refCount, i.refCount > 0 || delete t[e]);
        }, t.apply = function (e) {
          var t,
              i,
              n,
              r = this._properties,
              s = r.position,
              a = r.scale,
              o = r.rotation,
              u = r.eulerAngles,
              c = !1,
              h = !1,
              l = !1,
              d = !1;
          s && s.blendedWeight && (c = !0, s.blendedWeight < 1 && s.blend(e.position, 1 - s.blendedWeight), t = s.blendedValue), a && a.blendedWeight && (h = !0, a.blendedWeight < 1 && a.blend(e.scale, 1 - a.blendedWeight), i = a.blendedValue), u && u.blendedWeight && (d = !0, u.blendedWeight < 1 && u.blend(e.eulerAngles, 1 - u.blendedWeight), n = u.blendedValue), o && o.blendedWeight && (l = !0, o.blendedWeight < 1 && o.blend(e.rotation, 1 - o.blendedWeight), n = o.blendedValue), (n || t || i) && e.setRTS(n, t, i), c && s.reset(), h && a.reset(), l && o.reset(), d && u.reset();
        }, ke(e, [{
          key: "empty",
          get: function get() {
            var e = this._properties;
            return !(e.position || e.rotation || e.eulerAngles || e.scale);
          }
        }]), e;
      }(),
          ds = e("q", ci((ts = es = function (e) {
        function t() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (t = e.call.apply(e, [this].concat(n)) || this)._anims = new Ei([]), t._crossFades = new Ei([]), t._delayEvents = [], t._blendStateBuffer = new as(), t._sockets = [], t;
        }

        Be(t, e);
        var i = t.prototype;
        return i.addCrossFade = function (e) {
          -1 === this._crossFades.array.indexOf(e) && this._crossFades.push(e);
        }, i.removeCrossFade = function (e) {
          var t = this._crossFades.array.indexOf(e);

          t >= 0 ? this._crossFades.fastRemoveAt(t) : Oe(3907);
        }, i.update = function (e) {
          var t = this._delayEvents,
              i = this._crossFades,
              n = this._sockets,
              r = i.array;

          for (i.i = 0; i.i < r.length; ++i.i) {
            r[i.i].update(e);
          }

          var s = this._anims,
              a = s.array;

          for (s.i = 0; s.i < a.length; ++s.i) {
            var o = a[s.i];
            o.isMotionless || o.update(e);
          }

          this._blendStateBuffer.apply();

          for (var u = _e.director.getTotalFrames(), c = 0, h = n.length; c < h; c++) {
            var l = n[c],
                d = l.target,
                f = l.transform;
            d.matrix = Ui(f, u);
          }

          for (var p = 0, m = t.length; p < m; p++) {
            var _ = t[p];

            _.fn.apply(_.thisArg, _.args);
          }

          t.length = 0;
        }, i.destruct = function () {}, i.addAnimation = function (e) {
          -1 === this._anims.array.indexOf(e) && this._anims.push(e);
        }, i.removeAnimation = function (e) {
          var t = this._anims.array.indexOf(e);

          t >= 0 ? this._anims.fastRemoveAt(t) : Oe(3907);
        }, i.pushDelayEvent = function (e, t, i) {
          this._delayEvents.push({
            fn: e,
            thisArg: t,
            args: i
          });
        }, i.addSockets = function (e, t) {
          for (var i = this, n = function n(_n3) {
            var r = t[_n3];
            if (i._sockets.find(function (e) {
              return e.target === r.target;
            })) return "continue";
            var s = e.getChildByPath(r.path),
                a = r.target && s && Vi(s, e);
            a && i._sockets.push({
              target: r.target,
              transform: a
            });
          }, r = 0; r < t.length; ++r) {
            n(r);
          }
        }, i.removeSockets = function (e, t) {
          for (var i = 0; i < t.length; ++i) {
            for (var n = t[i], r = 0; r < this._sockets.length; ++r) {
              var s = this._sockets[r];

              if (s.target === n.target) {
                Wi(s.transform.node), this._sockets[r] = this._sockets[this._sockets.length - 1], this._sockets.length--;
                break;
              }
            }
          }
        }, ke(t, [{
          key: "blendState",
          get: function get() {
            return this._blendStateBuffer;
          }
        }]), t;
      }(Qi), es.ID = "animation", $r = ts)) || $r);

      an.on(sn.EVENT_INIT, function () {
        var e = new ds();
        an.registerSystem(ds.ID, e, Qi.Priority.HIGH);
      }), _e.AnimationManager = ds, _e.easing = Si;
      var fs = e("H", ci("cc.HierachyModifier")(is = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        return Be(t, e), t;
      }(ji)) || is);
      _e.HierachyModifier = fs;
      var ps = e("i", ci("cc.ComponentModifier")(ns = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        return Be(t, e), t;
      }(Hi)) || ns);
      _e.ComponentModifier = ps;
      var ms = e("j", ci("cc.CurveValueAdapter")(rs = function () {
        function e() {}

        return e.prototype.forTarget = function () {
          return {
            set: function set() {}
          };
        }, e;
      }()) || rs);
      _e.CurveValueAdapter = ms;

      var _s = e("k", ci("cc.UniformCurveValueAdapter")(ss = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        return Be(t, e), t;
      }(Zr)) || ss);

      function gs(e) {
        return "string" == typeof e;
      }

      function vs(e) {
        return "number" == typeof e;
      }

      function ys(e, t) {
        return e instanceof t;
      }

      _e.UniformCurveValueAdapter = _s, _e.isPropertyModifier = gs, _e.isElementModifier = vs, _e.isCustomTargetModifier = ys, _e.math = zi, _e.geometry = qi;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/index-da6f70c6.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./transform-utils-65bf8251.js", "./create-mesh-9aab53f1.js", "./mesh-c8768986.js", "./mesh-renderer-86d175c0.js", "./skeleton-314b4fa5.js"], function (t) {
  "use strict";

  var e, i, n, r, o, s, a, u, l, h, c, f, p, d, _, m, g, y, v, b, k, w, S, T, A, M, x, I, O, B, N, C, P, j, z, D, E, L, R, U, F, H, K, V, W, G, J, q, X, Y, Z, Q, $, tt, et, it, nt, rt, ot, st, at, ut, lt, ht, ct, ft, pt, dt, _t, mt, gt, yt, vt, bt, kt, wt, St, Tt, At, Mt, xt, It, Ot;

  return {
    setters: [function (t) {
      e = t.dK, i = t.gb, n = t.gc, r = t.gd, o = t.cc, s = t.cS, a = t.l, u = t.eM, l = t.cJ, h = t.c5, c = t.ef, f = t.e2, p = t.eg, d = t.eu, _ = t.ek, m = t.ec, g = t.ge, y = t.eh, v = t.ei, b = t.fU, k = t.gf, w = t.ed, S = t.dO, T = t.cj, A = t.fY, M = t.fZ, x = t.f_, I = t.gg, O = t.cr, B = t.cR, N = t.c9, C = t.bT, P = t.L, j = t.N, z = t.e9, D = t.b4, E = t.F, L = t.x, R = t.aq, U = t.z, F = t.G, H = t.gh, K = t.t, V = t.gi, W = t.gj, G = t.gk, J = t.bU, q = t.gl, X = t.dH, Y = t.ga, Z = t.aH, Q = t.b3, $ = t.dr, tt = t.d7, et = t.dn, it = t.gm, nt = t.fJ, rt = t.gn, ot = t.c3, st = t.go, at = t.am, ut = t.T;
    }, function (t) {
      lt = t.L, ht = t.h, ct = t.D, ft = t.k, pt = t.n, dt = t.l, _t = t.M;
    }, function (t) {
      mt = t.T;
    }, function (t) {
      gt = t.p, yt = t.u, vt = t.r, bt = t.t, kt = t.q, wt = t.j, St = t.k;
    }, function (t) {
      Tt = t.r, At = t.c;
    }, function (t) {
      Mt = t.M;
    }, function (t) {
      xt = t.M, It = t.a;
    }, function (t) {
      Ot = t.S;
    }],
    execute: function execute() {
      var Bt,
          Nt,
          Ct,
          Pt,
          jt,
          zt,
          Dt,
          Et,
          Lt,
          Rt,
          Ut,
          Ft,
          Ht,
          Kt,
          Vt,
          Wt,
          Gt,
          Jt,
          qt,
          Xt,
          Yt,
          Zt = Object.freeze({
        __proto__: null,
        find: e,
        toPPM: function toPPM(t, e, i) {
          return "P3 " + e + " " + i + " 255\n" + t.filter(function (t, e) {
            return e % 4 < 3;
          }).toString() + "\n";
        },
        readMesh: Tt,
        createMesh: At,
        readBuffer: i,
        writeBuffer: n,
        mapBuffer: r
      });

      function Qt(t, e) {
        var i = t.sharedMaterials.length;
        if (i !== e.sharedMaterials.length) return !1;

        for (var n = 0; n < i; n++) {
          if (t.getRenderMaterial(n) !== e.getRenderMaterial(n)) return !1;
        }

        return !0;
      }

      t("u", Zt), t("B", function () {
        function t() {}

        return t.batchStaticModel = function (t, e) {
          var i = t.getComponentsInChildren(xt);
          if (i.length < 2) return console.error("the number of static models to batch is less than 2,it needn't batch."), !1;

          for (var n = 1; n < i.length; n++) {
            if (!i[0].mesh.validateMergingMesh(i[n].mesh)) return console.error("the meshes of " + i[0].node.name + " and " + i[n].node.name + " can't be merged"), !1;
            if (!Qt(i[0], i[n])) return console.error("the materials of " + i[0].node.name + " and " + i[n].node.name + " can't be merged"), !1;
          }

          var r = new Mt(),
              s = new o(),
              a = new o();
          t.getWorldMatrix(a), o.invert(a, a);

          for (var u = 0; u < i.length; u++) {
            var l = i[u];
            l.node.getWorldMatrix(s), o.multiply(s, a, s), r.merge(i[u].mesh, s), l.enabled = !1;
          }

          var h = e.addComponent(xt);
          return h.mesh = r, h.sharedMaterials = i[0].sharedMaterials, !0;
        }, t.unbatchStaticModel = function (t, e) {
          for (var i = t.getComponentsInChildren(xt), n = 0; n < i.length; n++) {
            i[n].enabled = !0;
          }

          var r = e.getComponent(xt);
          return r && (r.mesh && r.mesh.destroyRenderingMesh(), r.destroy()), !0;
        }, t;
      }()), s(xt.prototype, "MeshRenderer.prototype", [{
        name: "enableDynamicBatching"
      }, {
        name: "recieveShadows"
      }]), a.ModelComponent = xt, u.setClassAlias(xt, "cc.ModelComponent");

      var $t,
          te,
          ee,
          ie,
          ne,
          re,
          oe,
          se,
          ae,
          ue,
          le,
          he,
          ce,
          fe,
          pe,
          de,
          _e,
          me,
          ge,
          ye,
          ve,
          be,
          ke,
          we,
          Se,
          Te,
          Ae,
          Me,
          xe,
          Ie,
          Oe,
          Be,
          Ne,
          Ce,
          Pe,
          je,
          ze,
          De,
          Ee,
          Le,
          Re,
          Ue,
          Fe,
          He,
          Ke,
          Ve,
          We,
          Ge,
          Je = l({
        LUMINOUS_FLUX: 0,
        LUMINANCE: 1
      }),
          qe = new h(),
          Xe = c("cc.StaticLightSettings")((Dt = function () {
        function t() {
          y(this, "_baked", Ct, this), y(this, "_editorOnly", Pt, this), y(this, "_bakeable", jt, this), y(this, "_castShadow", zt, this);
        }

        return f(t, [{
          key: "editorOnly",
          get: function get() {
            return this._editorOnly;
          },
          set: function set(t) {
            this._editorOnly = t;
          }
        }, {
          key: "baked",
          get: function get() {
            return this._baked;
          },
          set: function set(t) {
            this._baked = t;
          }
        }, {
          key: "bakeable",
          get: function get() {
            return this._bakeable;
          },
          set: function set(t) {
            this._bakeable = t;
          }
        }, {
          key: "castShadow",
          get: function get() {
            return this._castShadow;
          },
          set: function set(t) {
            this._castShadow = t;
          }
        }]), t;
      }(), Ct = p((Nt = Dt).prototype, "_baked", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Pt = p(Nt.prototype, "_editorOnly", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), jt = p(Nt.prototype, "_bakeable", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), zt = p(Nt.prototype, "_castShadow", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), p(Nt.prototype, "editorOnly", [d], Object.getOwnPropertyDescriptor(Nt.prototype, "editorOnly"), Nt.prototype), p(Nt.prototype, "bakeable", [d], Object.getOwnPropertyDescriptor(Nt.prototype, "bakeable"), Nt.prototype), p(Nt.prototype, "castShadow", [d], Object.getOwnPropertyDescriptor(Nt.prototype, "castShadow"), Nt.prototype), Bt = Nt)) || Bt,
          Ye = t("L", (Et = c("cc.Light"), Lt = b(), Rt = b(), Ut = k(), Ft = b(), Ht = _(Xe), Et((Yt = Xt = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, y(e, "_color", Wt, w(e)), y(e, "_useColorTemperature", Gt, w(e)), y(e, "_colorTemperature", Jt, w(e)), y(e, "_staticSettings", qt, w(e)), e._type = lt.UNKNOWN, e._lightType = void 0, e._light = null, e._lightType = ht, e;
        }

        m(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          this._createLight();
        }, i.onEnable = function () {
          this._attachToScene();
        }, i.onDisable = function () {
          this._detachFromScene();
        }, i.onDestroy = function () {
          this._destroyLight();
        }, i._createLight = function () {
          this._light || (this._light = a.director.root.createLight(this._lightType)), this.color = this._color, this.useColorTemperature = this._useColorTemperature, this.colorTemperature = this._colorTemperature, this._light.node = this.node, this._light.baked = this.baked;
        }, i._destroyLight = function () {
          this._light && (a.director.root.destroyLight(this), this._light = null);
        }, i._attachToScene = function () {
          if (this._detachFromScene(), this._light && !this._light.scene && this.node.scene) {
            var t = this._getRenderScene();

            switch (this._type) {
              case lt.DIRECTIONAL:
                t.addDirectionalLight(this._light), t.setMainLight(this._light);
                break;

              case lt.SPHERE:
                t.addSphereLight(this._light);
                break;

              case lt.SPOT:
                t.addSpotLight(this._light);
            }
          }
        }, i._detachFromScene = function () {
          if (this._light && this._light.scene) {
            var t = this._light.scene;

            switch (this._type) {
              case lt.DIRECTIONAL:
                t.removeDirectionalLight(this._light), t.unsetMainLight(this._light);
                break;

              case lt.SPHERE:
                t.removeSphereLight(this._light);
                break;

              case lt.SPOT:
                t.removeSpotLight(this._light);
            }
          }
        }, f(e, [{
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color = t, this._light && (qe.x = t.r / 255, qe.y = t.g / 255, qe.z = t.b / 255, this._light.color = qe);
          }
        }, {
          key: "useColorTemperature",
          get: function get() {
            return this._useColorTemperature;
          },
          set: function set(t) {
            this._useColorTemperature = t, this._light && (this._light.useColorTemperature = t);
          }
        }, {
          key: "colorTemperature",
          get: function get() {
            return this._colorTemperature;
          },
          set: function set(t) {
            this._colorTemperature = t, this._light && (this._light.colorTemperature = t);
          }
        }, {
          key: "staticSettings",
          get: function get() {
            return this._staticSettings;
          },
          set: function set(t) {
            this._staticSettings = t;
          }
        }, {
          key: "type",
          get: function get() {
            return this._type;
          }
        }, {
          key: "baked",
          get: function get() {
            return this.staticSettings.baked;
          },
          set: function set(t) {
            this.staticSettings.baked = t, null !== this._light && (this._light.baked = t);
          }
        }]), e;
      }(S), Xt.Type = lt, Xt.PhotometricTerm = Je, Wt = p((Vt = Yt).prototype, "_color", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return T.WHITE.clone();
        }
      }), Gt = p(Vt.prototype, "_useColorTemperature", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Jt = p(Vt.prototype, "_colorTemperature", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 6550;
        }
      }), qt = p(Vt.prototype, "_staticSettings", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Xe();
        }
      }), p(Vt.prototype, "color", [Lt], Object.getOwnPropertyDescriptor(Vt.prototype, "color"), Vt.prototype), p(Vt.prototype, "useColorTemperature", [Rt], Object.getOwnPropertyDescriptor(Vt.prototype, "useColorTemperature"), Vt.prototype), p(Vt.prototype, "colorTemperature", [g, Ut, Ft], Object.getOwnPropertyDescriptor(Vt.prototype, "colorTemperature"), Vt.prototype), p(Vt.prototype, "staticSettings", [Ht], Object.getOwnPropertyDescriptor(Vt.prototype, "staticSettings"), Vt.prototype), Kt = Vt)) || Kt)),
          Ze = t("D", ($t = c("cc.DirectionalLight"), te = M(), ee = x(), ie = I(), ne = b(), $t(re = te(re = ee(re = A((ae = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, y(e, "_illuminance", se, w(e)), e._type = lt.DIRECTIONAL, e._light = null, e._lightType = ct, e;
        }

        return m(e, t), e.prototype._createLight = function () {
          t.prototype._createLight.call(this), this._light && (this.illuminance = this._illuminance);
        }, f(e, [{
          key: "illuminance",
          get: function get() {
            return this._illuminance;
          },
          set: function set(t) {
            this._illuminance = t, this._light && (this._light.illuminance = this._illuminance);
          }
        }]), e;
      }(Ye), se = p((oe = ae).prototype, "_illuminance", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 65e3;
        }
      }), p(oe.prototype, "illuminance", [ie, ne], Object.getOwnPropertyDescriptor(oe.prototype, "illuminance"), oe.prototype), re = oe)) || re) || re) || re) || re)),
          Qe = t("S", (ue = c("cc.SphereLight"), le = M(), he = x(), ce = I(), fe = b(), pe = I(), de = b(), _e = _(Je), me = b(), ge = b(), ye = b(), ue(ve = le(ve = he(ve = A((Ae = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, y(e, "_size", ke, w(e)), y(e, "_luminance", we, w(e)), y(e, "_term", Se, w(e)), y(e, "_range", Te, w(e)), e._type = lt.SPHERE, e._light = null, e._lightType = ft, e;
        }

        return m(e, t), e.prototype._createLight = function () {
          t.prototype._createLight.call(this), this._light && (this.luminance = this._luminance, this.size = this._size, this.range = this._range);
        }, f(e, [{
          key: "luminousFlux",
          get: function get() {
            return this._luminance * pt(this._size);
          },
          set: function set(t) {
            this._luminance = t / pt(this._size), this._light && (this._light.luminance = this._luminance);
          }
        }, {
          key: "luminance",
          get: function get() {
            return this._luminance;
          },
          set: function set(t) {
            this._luminance = t, this._light && (this._light.luminance = t);
          }
        }, {
          key: "term",
          get: function get() {
            return this._term;
          },
          set: function set(t) {
            this._term = t;
          }
        }, {
          key: "size",
          get: function get() {
            return this._size;
          },
          set: function set(t) {
            this._size = t, this._light && (this._light.size = t);
          }
        }, {
          key: "range",
          get: function get() {
            return this._range;
          },
          set: function set(t) {
            this._range = t, this._light && (this._light.range = t);
          }
        }]), e;
      }(Ye), ke = p((be = Ae).prototype, "_size", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .15;
        }
      }), we = p(be.prototype, "_luminance", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1700 / pt(.15);
        }
      }), Se = p(be.prototype, "_term", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Je.LUMINOUS_FLUX;
        }
      }), Te = p(be.prototype, "_range", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), p(be.prototype, "luminousFlux", [ce, fe], Object.getOwnPropertyDescriptor(be.prototype, "luminousFlux"), be.prototype), p(be.prototype, "luminance", [pe, de], Object.getOwnPropertyDescriptor(be.prototype, "luminance"), be.prototype), p(be.prototype, "term", [_e, me], Object.getOwnPropertyDescriptor(be.prototype, "term"), be.prototype), p(be.prototype, "size", [ge], Object.getOwnPropertyDescriptor(be.prototype, "size"), be.prototype), p(be.prototype, "range", [ye], Object.getOwnPropertyDescriptor(be.prototype, "range"), be.prototype), ve = be)) || ve) || ve) || ve) || ve)),
          $e = t("a", (Me = c("cc.SpotLight"), xe = M(), Ie = x(), Oe = I(), Be = b(), Ne = I(), Ce = b(), Pe = _(Je), je = b(), ze = b(), De = b(), Ee = k(), Le = b(), Me(Re = xe(Re = Ie(Re = A((Ge = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, y(e, "_size", Fe, w(e)), y(e, "_luminance", He, w(e)), y(e, "_term", Ke, w(e)), y(e, "_range", Ve, w(e)), y(e, "_spotAngle", We, w(e)), e._type = lt.SPOT, e._light = null, e._lightType = dt, e;
        }

        return m(e, t), e.prototype._createLight = function () {
          t.prototype._createLight.call(this), this._light && (this.luminance = this._luminance, this.size = this._size, this.range = this._range, this.spotAngle = this._spotAngle);
        }, f(e, [{
          key: "luminousFlux",
          get: function get() {
            return this._luminance * pt(this._size);
          },
          set: function set(t) {
            this._luminance = t / pt(this._size), this._light && (this._light.luminance = this._luminance);
          }
        }, {
          key: "luminance",
          get: function get() {
            return this._luminance;
          },
          set: function set(t) {
            this._luminance = t, this._light && (this._light.luminance = t);
          }
        }, {
          key: "term",
          get: function get() {
            return this._term;
          },
          set: function set(t) {
            this._term = t;
          }
        }, {
          key: "size",
          get: function get() {
            return this._size;
          },
          set: function set(t) {
            this._size = t, this._light && (this._light.size = t);
          }
        }, {
          key: "range",
          get: function get() {
            return this._range;
          },
          set: function set(t) {
            this._range = t, this._light && (this._light.range = t);
          }
        }, {
          key: "spotAngle",
          get: function get() {
            return this._spotAngle;
          },
          set: function set(t) {
            this._spotAngle = t, this._light && (this._light.spotAngle = O(t));
          }
        }]), e;
      }(Ye), Fe = p((Ue = Ge).prototype, "_size", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .15;
        }
      }), He = p(Ue.prototype, "_luminance", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1700 / pt(.15);
        }
      }), Ke = p(Ue.prototype, "_term", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Je.LUMINOUS_FLUX;
        }
      }), Ve = p(Ue.prototype, "_range", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), We = p(Ue.prototype, "_spotAngle", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 60;
        }
      }), p(Ue.prototype, "luminousFlux", [Oe, Be], Object.getOwnPropertyDescriptor(Ue.prototype, "luminousFlux"), Ue.prototype), p(Ue.prototype, "luminance", [Ne, Ce], Object.getOwnPropertyDescriptor(Ue.prototype, "luminance"), Ue.prototype), p(Ue.prototype, "term", [Pe, je], Object.getOwnPropertyDescriptor(Ue.prototype, "term"), Ue.prototype), p(Ue.prototype, "size", [ze], Object.getOwnPropertyDescriptor(Ue.prototype, "size"), Ue.prototype), p(Ue.prototype, "range", [De], Object.getOwnPropertyDescriptor(Ue.prototype, "range"), Ue.prototype), p(Ue.prototype, "spotAngle", [g, Ee, Le], Object.getOwnPropertyDescriptor(Ue.prototype, "spotAngle"), Ue.prototype), Re = Ue)) || Re) || Re) || Re) || Re));

      a.LightComponent = Ye, u.setClassAlias(Ye, "cc.LightComponent"), a.DirectionalLightComponent = Ze, u.setClassAlias(Ze, "cc.DirectionalLightComponent"), a.SphereLightComponent = Qe, u.setClassAlias(Qe, "cc.SphereLightComponent"), a.SpotLightComponent = $e, u.setClassAlias($e, "cc.SpotLightComponent"), B($e.prototype, "SpotLight.prototype", [{
        name: "luminousPower",
        newName: "luminousFlux",
        customGetter: function customGetter() {
          return this.luminousFlux;
        },
        customSetter: function customSetter(t) {
          this.luminousFlux = t;
        }
      }]), B(Qe.prototype, "SphereLight.prototype", [{
        name: "luminousPower",
        newName: "luminousFlux",
        customGetter: function customGetter() {
          return this.luminousFlux;
        },
        customSetter: function customSetter(t) {
          this.luminousFlux = t;
        }
      }]), B(Ye.PhotometricTerm, "Light.PhotometricTerm", [{
        name: "LUMINOUS_POWER",
        newName: "LUMINOUS_FLUX"
      }]);

      var ti = function ti(t, e, i) {
        t[e + 0] = i.m00, t[e + 1] = i.m01, t[e + 2] = i.m02, t[e + 3] = i.m12, t[e + 4] = i.m04, t[e + 5] = i.m05, t[e + 6] = i.m06, t[e + 7] = i.m13, t[e + 8] = i.m08, t[e + 9] = i.m09, t[e + 10] = i.m10, t[e + 11] = i.m14;
      };

      function ei(t, e) {
        var i = 4 / Math.sqrt(e);
        return 12 * Math.ceil(Math.max(480 * i, t) / 12);
      }

      new N(), new N(), new h(), new N(), new h();

      var ii = C([P.POINT, P.POINT, P.NONE, j.CLAMP, j.CLAMP, j.CLAMP]),
          ni = new h(),
          ri = new h(),
          oi = new h(),
          si = new h(),
          ai = new o(),
          ui = new o(),
          li = new z(),
          hi = Number.MAX_SAFE_INTEGER,
          ci = function () {
        function t(t) {
          this._device = void 0, this._pool = void 0, this._textureBuffers = new Map(), this._formatSize = void 0, this._pixelsPerJoint = void 0, this._customPool = void 0, this._chunkIdxMap = new Map(), this._device = t;

          var e = function (t) {
            return t.hasFeature(E.TEXTURE_FLOAT) ? L.RGBA32F : L.RGBA8;
          }(this._device);

          this._formatSize = D[e].size, this._pixelsPerJoint = 48 / this._formatSize, this._pool = new mt(t), this._pool.initialize({
            format: e,
            roundUpFn: ei
          }), this._customPool = new mt(t), this._customPool.initialize({
            format: e,
            roundUpFn: ei
          });
        }

        var e = t.prototype;
        return e.clear = function () {
          this._pool.destroy(), this._textureBuffers.clear();
        }, e.registerCustomTextureLayouts = function (t) {
          for (var e = 0; e < t.length; e++) {
            for (var i = t[e], n = this._customPool.createChunk(i.textureLength), r = 0; r < i.contents.length; r++) {
              var o = i.contents[r],
                  s = o.skeleton;

              this._chunkIdxMap.set(s, n);

              for (var a = 0; a < o.clips.length; a++) {
                var u = o.clips[a];

                this._chunkIdxMap.set(s ^ u, n);
              }
            }
          }
        }, e.getDefaultPoseTexture = function (t, e, i) {
          var n = 0 ^ t.hash,
              r = this._textureBuffers.get(n) || null;
          if (r && r.bounds.has(e.hash)) return r.refCount++, r;
          var s = t.joints,
              a = t.bindposes,
              u = null,
              l = !1,
              c = s.length;
          if (r) r.refCount++;else {
            var f = 12 * c,
                p = this._chunkIdxMap.get(n),
                d = void 0 !== p ? this._customPool.alloc(f * Float32Array.BYTES_PER_ELEMENT, p) : this._pool.alloc(f * Float32Array.BYTES_PER_ELEMENT);

            if (!d) return r;
            r = {
              pixelOffset: d.start / this._formatSize,
              refCount: 1,
              bounds: new Map(),
              skeletonHash: t.hash,
              clipHash: 0,
              readyToBeDeleted: !1,
              handle: d
            }, u = new Float32Array(f), l = !0;
          }
          h.set(oi, hi, hi, hi), h.set(si, -hi, -hi, -hi);

          for (var _ = e.getBoneSpaceBounds(t), m = 0, g = 0; m < c; m++, g += 12) {
            var y = i.getChildByPath(s[m]),
                v = y ? gt(y, i, ai) : t.inverseBindposes[m],
                b = _[m];
            b && (z.transform(li, b, v), li.getBoundary(ni, ri), h.min(oi, oi, ni), h.max(si, si, ri)), l && (y && o.multiply(v, v, a[m]), ti(u, g, y ? v : o.IDENTITY));
          }

          var k = [new z()];
          return r.bounds.set(e.hash, k), z.fromPoints(k[0], oi, si), l && (this._pool.update(r.handle, u.buffer), this._textureBuffers.set(n, r)), r;
        }, e.getSequencePoseTexture = function (t, e, i, n) {
          var r = t.hash ^ e.hash,
              s = this._textureBuffers.get(r) || null;
          if (s && s.bounds.has(i.hash)) return s.refCount++, s;
          var a = t.joints,
              u = t.bindposes,
              l = yt.getOrExtract(e).frames,
              c = null,
              f = !1,
              p = a.length;
          if (s) s.refCount++;else {
            var d = 12 * p * l,
                _ = this._chunkIdxMap.get(r),
                m = void 0 !== _ ? this._customPool.alloc(d * Float32Array.BYTES_PER_ELEMENT, _) : this._pool.alloc(d * Float32Array.BYTES_PER_ELEMENT);

            if (!m) return null;

            var g = this._createAnimInfos(t, e, n);

            s = {
              pixelOffset: m.start / this._formatSize,
              refCount: 1,
              bounds: new Map(),
              skeletonHash: t.hash,
              clipHash: e.hash,
              readyToBeDeleted: !1,
              handle: m,
              animInfos: g
            }, c = new Float32Array(d), f = !0;
          }
          var y = i.getBoneSpaceBounds(t),
              v = [];
          s.bounds.set(i.hash, v);

          for (var b = 0; b < l; b++) {
            v.push(new z(hi, hi, hi, -hi, -hi, -hi));
          }

          for (var k = 0, w = 0; k < l; k++) {
            for (var S = v[k], T = 0; T < p; T++, w += 12) {
              var A = s.animInfos[T],
                  M = A.curveData,
                  x = A.downstream,
                  I = A.bindposeIdx,
                  O = A.bindposeCorrection,
                  B = void 0,
                  N = !0;
              M && x ? B = o.multiply(ai, M[k], x) : M ? B = M[k] : x ? B = x : (B = t.inverseBindposes[I], N = !1);
              var C = y[T];

              if (C) {
                var P = O ? o.multiply(ui, B, O) : B;
                z.transform(li, C, P), li.getBoundary(ni, ri), h.min(S.center, S.center, ni), h.max(S.halfExtents, S.halfExtents, ri);
              }

              f && (N && o.multiply(ai, B, u[I]), ti(c, w, N ? ai : o.IDENTITY));
            }

            z.fromPoints(S, S.center, S.halfExtents);
          }

          return f && (this._pool.update(s.handle, c.buffer), this._textureBuffers.set(r, s)), s;
        }, e.releaseHandle = function (t) {
          if (t.refCount > 0 && t.refCount--, !t.refCount && t.readyToBeDeleted) {
            var e = t.skeletonHash ^ t.clipHash;
            (void 0 !== this._chunkIdxMap.get(e) ? this._customPool : this._pool).free(t.handle), this._textureBuffers.get(e) === t && this._textureBuffers.delete(e);
          }
        }, e.releaseSkeleton = function (t) {
          for (var e = this._textureBuffers.values(), i = e.next(); !i.done;) {
            var n = i.value;
            n.skeletonHash === t.hash && (n.readyToBeDeleted = !0, n.refCount ? this._textureBuffers.delete(n.skeletonHash ^ n.clipHash) : this.releaseHandle(n)), i = e.next();
          }
        }, e.releaseAnimationClip = function (t) {
          for (var e = this._textureBuffers.values(), i = e.next(); !i.done;) {
            var n = i.value;
            n.clipHash === t.hash && (n.readyToBeDeleted = !0, n.refCount ? this._textureBuffers.delete(n.skeletonHash ^ n.clipHash) : this.releaseHandle(n)), i = e.next();
          }
        }, e._createAnimInfos = function (t, e, i) {
          for (var n = [], r = t.joints, s = t.bindposes, a = r.length, u = yt.getOrExtract(e), l = 0; l < a; l++) {
            for (var h = r[l], c = u.joints[h], f = i.getChildByPath(h), p = void 0, d = void 0; !c;) {
              var _ = h.lastIndexOf("/");

              if (h = h.substring(0, _), c = u.joints[h], f ? (p || (p = new o()), o.fromRTS(ai, f.rotation, f.position, f.scale), o.multiply(p, ai, p), f = f.parent) : d = h, _ < 0) break;
            }

            var m = l,
                g = void 0;

            if (void 0 !== d && c) {
              m = l - 1;

              for (var y = 0; y < a; y++) {
                if (r[y] === d) {
                  m = y, g = new o(), o.multiply(g, s[y], t.inverseBindposes[l]);
                  break;
                }
              }
            }

            n.push({
              curveData: c && c.transforms,
              downstream: p,
              bindposeIdx: m,
              bindposeCorrection: g
            });
          }

          return n;
        }, f(t, [{
          key: "pixelsPerJoint",
          get: function get() {
            return this._pixelsPerJoint;
          }
        }]), t;
      }(),
          fi = function () {
        function t(t) {
          this._pool = new Map(), this._device = void 0, this._device = t;
        }

        var e = t.prototype;
        return e.getData = function (t) {
          void 0 === t && (t = "-1");

          var e = this._pool.get(t);

          if (e) return e;

          var i = this._device.createBuffer(new R(U.UNIFORM | U.TRANSFER_DST, F.HOST | F.DEVICE, H.SIZE, H.SIZE)),
              n = new Float32Array([0, 0, 0, 0]);

          i.update(n);
          var r = {
            buffer: i,
            data: n,
            dirty: !1
          };
          return this._setAnimInfoDirty(r, !1), this._pool.set(t, r), r;
        }, e.destroy = function (t) {
          var e = this._pool.get(t);

          e && (e.buffer.destroy(), this._pool.delete(t));
        }, e._setAnimInfoDirty = function (t, e) {
          t.dirty = e;
        }, e.switchClip = function (t) {
          return t.data[0] = 0, t.buffer.update(t.data), this._setAnimInfoDirty(t, !1), t;
        }, e.clear = function () {
          for (var t, e = K(this._pool.values()); !(t = e()).done;) {
            t.value.buffer.destroy();
          }

          this._pool.clear();
        }, t;
      }(),
          pi = function () {
        function t(t) {
          this.jointTexturePool = void 0, this.jointAnimationInfo = void 0, this.jointTexturePool = new ci(t), this.jointAnimationInfo = new fi(t);
        }

        var e = t.prototype;
        return e.releaseSkeleton = function (t) {
          this.jointTexturePool.releaseSkeleton(t);
        }, e.releaseAnimationClip = function (t) {
          this.jointTexturePool.releaseAnimationClip(t);
        }, e.clear = function () {
          this.jointTexturePool.clear(), this.jointAnimationInfo.clear();
        }, t;
      }();

      a.internal.DataPoolManager = pi;
      var di = [{
        name: "CC_USE_SKINNING",
        value: !0
      }];

      function _i(t, e, i, n) {
        for (var r = 0; r < i.length; r++) {
          for (var o = i[r], s = -1, a = 0; a < o.length; a++) {
            if (o[a] === n) {
              s = a;
              break;
            }
          }

          s >= 0 && (e.push(r), t.push(s));
        }
      }

      var mi,
          gi,
          yi,
          vi,
          bi,
          ki,
          wi,
          Si,
          Ti,
          Ai,
          Mi,
          xi,
          Ii,
          Oi,
          Bi,
          Ni,
          Ci,
          Pi,
          ji,
          zi,
          Di,
          Ei,
          Li,
          Ri,
          Ui,
          Fi,
          Hi,
          Ki,
          Vi,
          Wi,
          Gi,
          Ji,
          qi,
          Xi,
          Yi,
          Zi,
          Qi,
          $i,
          tn,
          en,
          nn,
          rn,
          on,
          sn,
          an,
          un = new h(),
          ln = new h(),
          hn = new h(),
          cn = new h(),
          fn = new o(),
          pn = new z(),
          dn = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this).uploadAnimation = null, e._buffers = [], e._dataArray = [], e._joints = [], e._bufferIndices = null, e.type = _t.SKINNING, e;
        }

        m(e, t);
        var i = e.prototype;
        return i._init = function () {}, i.destroy = function () {
          if (this.bindSkeleton(), this._buffers.length) {
            for (var e = 0; e < this._buffers.length; e++) {
              this._buffers[e].destroy();
            }

            this._buffers.length = 0;
          }

          t.prototype.destroy.call(this);
        }, i.bindSkeleton = function (t, e, i) {
          void 0 === t && (t = null), void 0 === e && (e = null), void 0 === i && (i = null);

          for (var n = 0; n < this._joints.length; n++) {
            vt(this._joints[n].target);
          }

          if (this._bufferIndices = null, this._joints.length = 0, t && e && i) {
            this.transform = e;
            var r = i.getBoneSpaceBounds(t),
                o = i.struct.jointMaps;
            this._ensureEnoughBuffers(o && o.length || 1), this._bufferIndices = i.jointBufferIndices;

            for (var s = 0; s < t.joints.length; s++) {
              var a = r[s],
                  u = e.getChildByPath(t.joints[s]);

              if (a && u) {
                var l = bt(u, e),
                    h = t.bindposes[s],
                    c = [],
                    f = [];
                o ? _i(c, f, o, s) : (c.push(s), f.push(0)), this._joints.push({
                  indices: c,
                  buffers: f,
                  bound: a,
                  target: u,
                  bindpose: h,
                  transform: l
                });
              }
            }
          }
        }, i.updateTransform = function (t) {
          var e = this.transform;
          (e.hasChangedFlags || e._dirtyFlags) && (e.updateWorldTransform(), this._transformUpdated = !0), h.set(un, 1 / 0, 1 / 0, 1 / 0), h.set(ln, -1 / 0, -1 / 0, -1 / 0);

          for (var i = 0; i < this._joints.length; i++) {
            var n = this._joints[i],
                r = n.bound,
                o = n.transform,
                s = kt(o, t);
            z.transform(pn, r, s), pn.getBoundary(hn, cn), h.min(un, un, hn), h.max(ln, ln, cn);
          }

          var a = this._worldBounds;
          this._modelBounds && a && (z.fromPoints(this._modelBounds, un, ln), this._modelBounds.transform(e._mat, e._pos, e._rot, e._scale, this._worldBounds), this._updateNativeBounds());
        }, i.updateUBOs = function (e) {
          t.prototype.updateUBOs.call(this, e);

          for (var i = 0; i < this._joints.length; i++) {
            var n = this._joints[i],
                r = n.indices,
                s = n.buffers,
                a = n.transform,
                u = n.bindpose;
            o.multiply(fn, a.world, u);

            for (var l = 0; l < s.length; l++) {
              ti(this._dataArray[s[l]], 12 * r[l], fn);
            }
          }

          for (var h = 0; h < this._buffers.length; h++) {
            this._buffers[h].update(this._dataArray[h]);
          }

          return !0;
        }, i.initSubModel = function (e, i, n) {
          var r = i.vertexBuffers,
              o = i.iaInfo;
          o.vertexBuffers = i.jointMappedBuffers, t.prototype.initSubModel.call(this, e, i, n), o.vertexBuffers = r;
        }, i.getMacroPatches = function (e) {
          var i = t.prototype.getMacroPatches.call(this, e);
          return i ? di.concat(i) : di;
        }, i._updateLocalDescriptors = function (e, i) {
          t.prototype._updateLocalDescriptors.call(this, e, i);

          var n = this._buffers[this._bufferIndices[e]];
          n && i.bindBuffer(V.BINDING, n);
        }, i._ensureEnoughBuffers = function (t) {
          for (var e = 0; e < t; e++) {
            this._buffers[e] || (this._buffers[e] = this._device.createBuffer(new R(U.UNIFORM | U.TRANSFER_DST, F.HOST | F.DEVICE, V.SIZE, V.SIZE))), this._dataArray[e] || (this._dataArray[e] = new Float32Array(V.COUNT));
          }
        }, e;
      }(It),
          _n = [{
        name: "CC_USE_SKINNING",
        value: !0
      }, {
        name: "CC_USE_BAKED_ANIMATION",
        value: !0
      }],
          mn = function (t) {
        function e() {
          var e;
          (e = t.call(this) || this).uploadedAnim = void 0, e._jointsMedium = void 0, e._skeleton = null, e._mesh = null, e._dataPoolManager = void 0, e._instAnimInfoIdx = -1, e.type = _t.BAKED_SKINNING, e._dataPoolManager = a.director.root.dataPoolManager;

          var i = new Float32Array(4),
              n = e._dataPoolManager.jointAnimationInfo.getData();

          return e._jointsMedium = {
            buffer: null,
            jointTextureInfo: i,
            animInfo: n,
            texture: null,
            boundsInfo: null
          }, e;
        }

        m(e, t);
        var i = e.prototype;
        return i._init = function () {}, i.destroy = function () {
          this.uploadedAnim = void 0, this._jointsMedium.boundsInfo = null, this._jointsMedium.buffer && (this._jointsMedium.buffer.destroy(), this._jointsMedium.buffer = null), this._applyJointTexture(), this._applyNativeJointMedium(), t.prototype.destroy.call(this);
        }, i.bindSkeleton = function (t, e, i) {
          if (void 0 === t && (t = null), void 0 === e && (e = null), void 0 === i && (i = null), this._skeleton = t, this._mesh = i, t && e && i) {
            this.transform = e;
            var n = this._dataPoolManager;
            this._jointsMedium.animInfo = n.jointAnimationInfo.getData(e.uuid), this._jointsMedium.buffer || (this._jointsMedium.buffer = this._device.createBuffer(new R(U.UNIFORM | U.TRANSFER_DST, F.HOST | F.DEVICE, W.SIZE, W.SIZE)));
          }
        }, i.updateTransform = function (e) {
          if (t.prototype.updateTransform.call(this, e), this.uploadedAnim) {
            var i = this._jointsMedium,
                n = i.animInfo,
                r = i.boundsInfo[n.data[0]],
                o = this._worldBounds;

            if (o && r) {
              var s = this.transform;
              r.transform(s._mat, s._pos, s._rot, s._scale, o);
            }
          }
        }, i.updateUBOs = function (e) {
          t.prototype.updateUBOs.call(this, e);
          var i = this._jointsMedium.animInfo,
              n = this._instAnimInfoIdx;
          return n >= 0 ? this.instancedAttributes.views[n][0] = i.data[0] : i.dirty && (i.buffer.update(i.data), i.dirty = !1), !0;
        }, i._applyNativeJointMedium = function () {}, i._updateModelBounds = function (t) {
          this._modelBounds = t;
        }, i.uploadAnimation = function (t) {
          if (this._skeleton && this._mesh && this.uploadedAnim !== t) {
            this.uploadedAnim = t;
            var e = this._dataPoolManager,
                i = null;
            t ? (i = e.jointTexturePool.getSequencePoseTexture(this._skeleton, t, this._mesh, this.transform), this._jointsMedium.boundsInfo = i && i.bounds.get(this._mesh.hash), this._updateModelBounds(null)) : (i = e.jointTexturePool.getDefaultPoseTexture(this._skeleton, this._mesh, this.transform), this._jointsMedium.boundsInfo = null, this._updateModelBounds(i && i.bounds.get(this._mesh.hash)[0])), this._applyJointTexture(i), this._applyNativeJointMedium();
          }
        }, i._applyJointTexture = function (t) {
          void 0 === t && (t = null);
          var e = this._jointsMedium.texture;

          if (e && e !== t && this._dataPoolManager.jointTexturePool.releaseHandle(e), this._jointsMedium.texture = t, t) {
            var i = this._jointsMedium,
                n = i.buffer,
                r = i.jointTextureInfo;
            r[0] = t.handle.texture.width, r[1] = this._skeleton.joints.length, r[2] = t.pixelOffset + .1, r[3] = 1 / r[0], this.updateInstancedJointTextureInfo(), n && n.update(r);

            for (var o = t.handle.texture, s = 0; s < this._subModels.length; ++s) {
              this._subModels[s].descriptorSet.bindTexture(G, o);
            }
          }
        }, i.getMacroPatches = function (e) {
          var i = t.prototype.getMacroPatches.call(this, e);
          return i ? i.concat(_n) : _n;
        }, i._updateLocalDescriptors = function (e, i) {
          t.prototype._updateLocalDescriptors.call(this, e, i);

          var n = this._jointsMedium,
              r = n.buffer,
              o = n.texture,
              s = n.animInfo;

          if (i.bindBuffer(W.BINDING, r), i.bindBuffer(H.BINDING, s.buffer), o) {
            var a = J.getSampler(this._device, ii);
            i.bindTexture(G, o.handle.texture), i.bindSampler(G, a);
          }
        }, i._setInstAnimInfoIdx = function (t) {
          this._instAnimInfoIdx = t;
        }, i._updateInstancedAttributes = function (e, i) {
          t.prototype._updateInstancedAttributes.call(this, e, i), this._setInstAnimInfoIdx(this._getInstancedAttributeIndex(q)), this.updateInstancedJointTextureInfo();
        }, i.updateInstancedJointTextureInfo = function () {
          var t = this._jointsMedium,
              e = t.jointTextureInfo,
              i = t.animInfo,
              n = this._instAnimInfoIdx;

          if (n >= 0) {
            var r = this.instancedAttributes.views[n];
            r[0] = i.data[0], r[1] = e[1], r[2] = e[2];
          }
        }, e;
      }(It),
          gn = t("b", (mi = c("cc.SkinnedMeshRenderer"), gi = M(), yi = Y(100), vi = x(), bi = _(Ot), ki = _(X), wi = _(Ot), Si = _(X), Ti = b(), mi(Ai = gi(Ai = yi(Ai = A(Ai = vi((Oi = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, y(e, "_skeleton", xi, w(e)), y(e, "_skinningRoot", Ii, w(e)), e._clip = null, e._modelType = mn, e;
        }

        m(e, t);
        var i = e.prototype;
        return i.__preload = function () {
          this._updateModelType();
        }, i.uploadAnimation = function (t) {
          this._clip = t, this.model && this.model.uploadAnimation && this.model.uploadAnimation(t);
        }, i.setUseBakedAnimation = function (t, e) {
          void 0 === t && (t = !0), void 0 === e && (e = !1);
          var i = t ? mn : dn;
          (e || this._modelType !== i) && (this._modelType = i, this._model && (a.director.root.destroyModel(this._model), this._model = null, this._models.length = 0, this._updateModels(), this._updateCastShadow(), this.enabledInHierarchy && this._attachToScene()));
        }, i.setMaterial = function (e, i) {
          t.prototype.setMaterial.call(this, e, i), this._modelType === dn && this.getMaterialInstance(i);
        }, i._updateModelParams = function () {
          this._update(), t.prototype._updateModelParams.call(this);
        }, i._updateModelType = function () {
          if (this._skinningRoot) {
            var t = this._skinningRoot.getComponent("cc.SkeletalAnimation");

            t ? this.setUseBakedAnimation(t.useBakedAnimation) : this.setUseBakedAnimation(!1);
          }
        }, i._update = function () {
          this.model && (this.model.bindSkeleton(this._skeleton, this._skinningRoot, this._mesh), this.model.uploadAnimation && this.model.uploadAnimation(this._clip));
        }, f(e, [{
          key: "skeleton",
          get: function get() {
            return this._skeleton;
          },
          set: function set(t) {
            t !== this._skeleton && (this._skeleton = t, this._update());
          }
        }, {
          key: "skinningRoot",
          get: function get() {
            return this._skinningRoot;
          },
          set: function set(t) {
            t !== this._skinningRoot && (this._skinningRoot = t, this._updateModelType(), this._update());
          }
        }, {
          key: "model",
          get: function get() {
            return this._model;
          }
        }]), e;
      }(xt), xi = p((Mi = Oi).prototype, "_skeleton", [bi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ii = p(Mi.prototype, "_skinningRoot", [ki], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), p(Mi.prototype, "skeleton", [wi], Object.getOwnPropertyDescriptor(Mi.prototype, "skeleton"), Mi.prototype), p(Mi.prototype, "skinningRoot", [Si, Ti], Object.getOwnPropertyDescriptor(Mi.prototype, "skinningRoot"), Mi.prototype), Ai = Mi)) || Ai) || Ai) || Ai) || Ai) || Ai)),
          yn = new Z(Q.ATTR_BATCH_ID, L.R32F),
          vn = new Z(Q.ATTR_BATCH_UV, L.RG32F),
          bn = D[yn.format].size + D[vn.format].size,
          kn = t("d", (Bi = c("cc.SkinnedMeshUnit"), Ni = _(Mt), Ci = _(Ot), Pi = _($), ji = _(gn), Bi((Ki = function () {
        function t() {
          y(this, "mesh", Ei, this), y(this, "skeleton", Li, this), y(this, "material", Ri, this), y(this, "_localTransform", Ui, this), y(this, "_offset", Fi, this), y(this, "_size", Hi, this);
        }

        return f(t, [{
          key: "offset",
          get: function get() {
            return this._offset;
          },
          set: function set(t) {
            ot.copy(this._offset, t);
          }
        }, {
          key: "size",
          get: function get() {
            return this._size;
          },
          set: function set(t) {
            ot.copy(this._size, t);
          }
        }, {
          key: "copyFrom",
          get: function get() {
            return null;
          },
          set: function set(t) {
            t && (this.mesh = t.mesh, this.skeleton = t.skeleton, this.material = t.getMaterial(0), t.skinningRoot && gt(t.node, t.skinningRoot, this._localTransform));
          }
        }]), t;
      }(), Ei = p((Di = Ki).prototype, "mesh", [Ni], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Li = p(Di.prototype, "skeleton", [Ci], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ri = p(Di.prototype, "material", [Pi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ui = p(Di.prototype, "_localTransform", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new o();
        }
      }), Fi = p(Di.prototype, "_offset", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new ot(0, 0);
        }
      }), Hi = p(Di.prototype, "_size", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new ot(1, 1);
        }
      }), p(Di.prototype, "offset", [d], Object.getOwnPropertyDescriptor(Di.prototype, "offset"), Di.prototype), p(Di.prototype, "size", [d], Object.getOwnPropertyDescriptor(Di.prototype, "size"), Di.prototype), p(Di.prototype, "copyFrom", [ji], Object.getOwnPropertyDescriptor(Di.prototype, "copyFrom"), Di.prototype), zi = Di)) || zi)),
          wn = new o(),
          Sn = (new o(), new h()),
          Tn = t("c", (Vi = c("cc.SkinnedMeshBatchRenderer"), Wi = M(), Gi = Y(100), Ji = x(), qi = b(), Xi = _([tt]), Yi = b(), Zi = _([kn]), Qi = b(), $i = st(), tn = st(), Vi(en = Wi(en = Gi(en = A(en = Ji((an = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, y(e, "atlasSize", rn, w(e)), y(e, "batchableTextureNames", on, w(e)), y(e, "units", sn, w(e)), e._textures = {}, e._batchMaterial = null, e;
        }

        m(e, t);
        var s = e.prototype;
        return s.onLoad = function () {
          t.prototype.onLoad.call(this), this.cook();
        }, s.onDestroy = function () {
          for (var e in this._textures) {
            this._textures[e].destroy();
          }

          this._textures = {}, this._mesh && (this._mesh.destroy(), this._mesh = null), t.prototype.onDestroy.call(this);
        }, s._onMaterialModified = function (e) {
          this.cookMaterials(), t.prototype._onMaterialModified.call(this, e, this.getMaterialInstance(e));
        }, s.cook = function () {
          this.cookMaterials(), this.cookSkeletons(), this.cookMeshes();
        }, s.cookMaterials = function () {
          var t = this;
          this._batchMaterial || (this._batchMaterial = this.getMaterial(0));
          var e = this.getMaterialInstance(0);

          if (e && this._batchMaterial && this._batchMaterial.effectAsset) {
            e.copy(this._batchMaterial), this.resizeAtlases();

            for (var i = e.effectAsset.techniques[e.technique], n = function n(_n2) {
              var r = i.passes[_n2];
              if (!r.properties) return "continue";

              var o = function o(i) {
                if (r.properties[i].type >= ut.SAMPLER1D) {
                  var o = null;
                  t.batchableTextureNames.find(function (t) {
                    return t === i;
                  }) ? ((o = t._textures[i]) || (o = t.createTexture(i)), t.cookTextures(o, i, _n2)) : t.units.some(function (t) {
                    return o = t.material && t.material.getProperty(i, _n2);
                  }), o && e.setProperty(i, o, _n2);
                } else {
                  for (var s = [], a = 0; a < t.units.length; a++) {
                    var u = t.units[a];
                    u.material && s.push(u.material.getProperty(i.slice(0, -3), _n2));
                  }

                  e.setProperty(i, s, _n2);
                }
              };

              for (var s in r.properties) {
                o(s);
              }
            }, r = 0; r < i.passes.length; r++) {
              n(r);
            }
          } else console.warn("incomplete batch material!");
        }, s.cookSkeletons = function () {
          if (this._skinningRoot) {
            for (var t = [], e = [], i = 0; i < this.units.length; i++) {
              var n = this.units[i];

              if (n && n.skeleton) {
                var r = n.skeleton;
                o.invert(wn, n._localTransform);

                for (var s = function s(i) {
                  var n = r.joints[i];
                  if (t.findIndex(function (t) {
                    return t === n;
                  }) >= 0) return "continue";
                  t.push(n), e.push(o.multiply(new o(), r.bindposes[i] || o.IDENTITY, wn));
                }, a = 0; a < r.joints.length; a++) {
                  s(a);
                }
              }
            }

            var u = Array.from(Array(t.length).keys()).sort(function (e, i) {
              return t[e] > t[i] ? 1 : t[e] < t[i] ? -1 : 0;
            }),
                l = new Ot();
            l.joints = t.map(function (t, e, i) {
              return i[u[e]];
            }), l.bindposes = e.map(function (t, e, i) {
              return i[u[e]];
            }), this._skeleton && this._skeleton.destroy(), this.skeleton = l;
          } else console.warn("no skinning root specified!");
        }, s.cookMeshes = function () {
          for (var t = this, e = !1, s = 0; s < this.units.length; s++) {
            if (this.units[s].mesh) {
              e = !0;
              break;
            }
          }

          if (e && this._skinningRoot) {
            this._mesh ? this._mesh.destroyRenderingMesh() : this._mesh = new Mt();

            for (var a = 0, u = L.UNKNOWN, l = 0, c = L.UNKNOWN, f = 0, p = L.UNKNOWN, d = 0, _ = L.UNKNOWN, m = 0, g = L.UNKNOWN, y = new Array(this.units.length), v = this.units.length, b = 0; b < v; b++) {
              var k = this.units[b];
              k && k.skeleton && (y[b] = k.skeleton.joints.map(function (e) {
                return t._skeleton.joints.findIndex(function (t) {
                  return e === t;
                });
              }));
            }

            for (var w = function w(e) {
              var s = t.units[e];
              if (!s || !s.mesh || !s.mesh.data) return "continue";

              var v = t._createUnitMesh(e, s.mesh),
                  b = new DataView(v.data.buffer);

              o.inverseTranspose(wn, s._localTransform);

              for (var k = s.offset, w = s.size, S = function S(t) {
                var o = v.struct.vertexBundles[t];
                a = o.view.offset, u = L.UNKNOWN;

                for (var S = 0; S < o.attributes.length; S++) {
                  var T = o.attributes[S];

                  if (T.name === Q.ATTR_POSITION) {
                    u = T.format;
                    break;
                  }

                  a += D[T.format].size;
                }

                if (u) {
                  for (var A = i(b, u, a, o.view.length, o.view.stride), M = 0; M < A.length; M += 3) {
                    h.fromArray(Sn, A, M), h.transformMat4(Sn, Sn, s._localTransform), h.toArray(A, Sn, M);
                  }

                  n(b, A, u, a, o.view.stride);
                }

                l = o.view.offset, c = L.UNKNOWN;

                for (var x = 0; x < o.attributes.length; x++) {
                  var I = o.attributes[x];

                  if (I.name === Q.ATTR_NORMAL) {
                    c = I.format;
                    break;
                  }

                  l += D[I.format].size;
                }

                if (c) {
                  for (var O = i(b, c, l, o.view.length, o.view.stride), B = 0; B < O.length; B += 3) {
                    h.fromArray(Sn, O, B), h.transformMat4Normal(Sn, Sn, wn), h.toArray(O, Sn, B);
                  }

                  n(b, O, c, l, o.view.stride);
                }

                f = o.view.offset, p = L.UNKNOWN;

                for (var N = 0; N < o.attributes.length; N++) {
                  var C = o.attributes[N];

                  if (C.name === Q.ATTR_TANGENT) {
                    p = C.format;
                    break;
                  }

                  f += D[C.format].size;
                }

                if (p) {
                  for (var P = i(b, p, f, o.view.length, o.view.stride), j = 0; j < P.length; j += 3) {
                    h.fromArray(Sn, P, j), h.transformMat4Normal(Sn, Sn, wn), h.toArray(P, Sn, j);
                  }

                  n(b, P, p, f, o.view.stride);
                }

                d = o.view.offset, _ = L.UNKNOWN;

                for (var z = 0; z < o.attributes.length; z++) {
                  var E = o.attributes[z];

                  if (E.name === Q.ATTR_BATCH_UV) {
                    _ = E.format;
                    break;
                  }

                  d += D[E.format].size;
                }

                _ && r(b, function (t, e) {
                  var i,
                      n = 0 === e ? "x" : "y";
                  return (t = (i = t) - Math.floor(i)) * w[n] + k[n];
                }, _, d, o.view.length, o.view.stride, b);
                var R = y[e];
                if (!R) return "continue";
                m = o.view.offset, g = L.UNKNOWN;

                for (var U = 0; U < o.attributes.length; U++) {
                  var F = o.attributes[U];

                  if (F.name === Q.ATTR_JOINTS) {
                    g = F.format;
                    break;
                  }

                  m += D[F.format].size;
                }

                g && r(b, function (t) {
                  return R[t];
                }, g, m, o.view.length, o.view.stride, b);
              }, T = 0; T < v.struct.vertexBundles.length; T++) {
                S(T);
              }

              t._mesh.merge(v);
            }, S = 0; S < v; S++) {
              w(S);
            }

            this._onMeshChanged(this._mesh), this._updateModels();
          }
        }, s.cookTextures = function (t, e, i) {
          for (var n = [], r = [], o = [], s = [], u = 0; u < this.units.length; u++) {
            var l = this.units[u];

            if (l.material) {
              var h = l.material.getProperty(e, i);

              if (h && h.image && h.image.data) {
                var c = new at();
                c.texOffset.x = l.offset.x * this.atlasSize, c.texOffset.y = l.offset.y * this.atlasSize, c.texExtent.width = l.size.x * this.atlasSize, c.texExtent.height = l.size.y * this.atlasSize;
                var f = h.image.data;
                ArrayBuffer.isView(f) ? (o.push(f), s.push(c)) : (n.push(f), r.push(c));
              }
            }
          }

          var p = t.getGFXTexture(),
              d = a.director.root.device;
          o.length > 0 && d.copyBuffersToTexture(o, p, s), n.length > 0 && d.copyTexImagesToTexture(n, p, r);
        }, s.createTexture = function (t) {
          var e = new et();
          return e.setFilters(it.LINEAR, it.LINEAR), e.setMipFilter(it.NEAREST), e.reset({
            width: this.atlasSize,
            height: this.atlasSize,
            format: nt.RGBA8888
          }), this._textures[t] = e, e;
        }, s.resizeAtlases = function () {
          for (var t in this._textures) {
            this._textures[t].reset({
              width: this.atlasSize,
              height: this.atlasSize,
              format: nt.RGBA8888
            });
          }
        }, s._createUnitMesh = function (t, e) {
          for (var n = JSON.parse(JSON.stringify(e.struct)), r = {}, o = 0; o < e.struct.primitives.length; o++) {
            for (var s = e.struct.primitives[o], u = 0, l = L.UNKNOWN, h = 0; h < s.vertexBundelIndices.length; h++) {
              var c = e.struct.vertexBundles[s.vertexBundelIndices[h]];
              u = c.view.offset, l = L.UNKNOWN;

              for (var f = 0; f < c.attributes.length; f++) {
                var p = c.attributes[f];

                if (p.name === Q.ATTR_TEX_COORD) {
                  l = p.format;
                  break;
                }

                u += D[p.format].size;
              }

              if (l) break;
            }

            if (void 0 === r[h]) {
              r[h] = [l, u];
              var d = n.vertexBundles[h];
              d.attributes.push(yn), d.attributes.push(vn), d.view.offset = 0, d.view.length += d.view.count * bn, d.view.stride += bn;
            }
          }

          for (var _ = 0, m = 0; m < n.vertexBundles.length; m++) {
            _ += n.vertexBundles[m].view.length;
          }

          for (var g = 0; g < n.primitives.length; g++) {
            var y = n.primitives[g];
            y.indexView && (y.indexView.offset = _, _ += y.indexView.length);
          }

          var v = new Uint8Array(_),
              b = e.data,
              k = new DataView(v.buffer),
              w = new DataView(b.buffer),
              S = a.sys.isLittleEndian;

          for (var T in r) {
            for (var A = n.vertexBundles[T], M = e.struct.vertexBundles[T], x = r[T], I = x[0], O = x[1], B = i(w, I, O, M.view.length, M.view.stride), N = M.view, C = A.view, P = N.stride, j = C.stride, z = N.offset, E = C.offset, R = 0; R < C.count; R++) {
              var U = b.subarray(z, z + P);
              v.set(U, E), k.setFloat32(E + P, t), k.setFloat32(E + P + 4, B[2 * R], S), k.setFloat32(E + P + 8, B[2 * R + 1], S), E += j, z += P;
            }
          }

          for (var F = 0; F < n.primitives.length; F++) {
            var H = e.struct.primitives[F],
                K = n.primitives[F];
            if (H.indexView && K.indexView) for (var V = H.indexView.stride, W = K.indexView.stride, G = H.indexView.offset, J = K.indexView.offset, q = 0; q < K.indexView.count; q++) {
              var X = b.subarray(G, G + V);
              v.set(X, J), J += W, G += V;
            }
          }

          var Y = new Mt();
          return Y.reset({
            struct: n,
            data: v
          }), Y;
        }, f(e, [{
          key: "mesh",
          get: function get() {
            return t.prototype.mesh;
          },
          set: function set(t) {
            this.mesh = t;
          }
        }, {
          key: "skeleton",
          get: function get() {
            return t.prototype.skeleton;
          },
          set: function set(t) {
            this.skeleton = t;
          }
        }]), e;
      }(gn), rn = p((nn = an).prototype, "atlasSize", [v, qi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1024;
        }
      }), on = p(nn.prototype, "batchableTextureNames", [Xi, v, Yi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), sn = p(nn.prototype, "units", [Zi, v, Qi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), p(nn.prototype, "mesh", [rt, $i], Object.getOwnPropertyDescriptor(nn.prototype, "mesh"), nn.prototype), p(nn.prototype, "skeleton", [rt, tn], Object.getOwnPropertyDescriptor(nn.prototype, "skeleton"), nn.prototype), en = nn)) || en) || en) || en) || en) || en));

      a.SkinningModelComponent = gn, u.setClassAlias(gn, "cc.SkinningModelComponent"), a.SkinningModelUnit = kn, u.setClassAlias(kn, "cc.SkinningModelUnit"), a.BatchedSkinningModelComponent = Tn, u.setClassAlias(Tn, "cc.BatchedSkinningModelComponent");
      var An,
          Mn,
          xn,
          In,
          On,
          Bn,
          Nn,
          Cn,
          Pn,
          jn,
          zn,
          Dn,
          En,
          Ln,
          Rn,
          Un,
          Fn,
          Hn,
          Kn,
          Vn,
          Wn = new o(),
          Gn = new o(),
          Jn = t("e", function (t) {
        function e(e, i) {
          var n;
          return void 0 === i && (i = ""), (n = t.call(this, e, i) || this)._frames = 1, n._bakedDuration = 0, n._animInfo = null, n._sockets = [], n._animInfoMgr = void 0, n._comps = [], n._parent = null, n._curvesInited = !1, n._animInfoMgr = a.director.root.dataPoolManager.jointAnimationInfo, n;
        }

        m(e, t);
        var i = e.prototype;
        return i.initialize = function (e) {
          if (!this._curveLoaded) {
            this._comps.length = 0;

            for (var i = e.getComponentsInChildren(gn), n = 0; n < i.length; ++n) {
              var r = i[n];
              r.skinningRoot === e && this._comps.push(r);
            }

            this._parent = e.getComponent("cc.SkeletalAnimation");
            var o = this._parent.useBakedAnimation;
            this._doNotCreateEval = o, t.prototype.initialize.call(this, e), this._curvesInited = !o;
            var s = yt.getOrExtract(this.clip),
                a = s.frames,
                u = s.samples;
            this._frames = a - 1, this._animInfo = this._animInfoMgr.getData(e.uuid), this._bakedDuration = this._frames / u;
          }
        }, i.onPlay = function () {
          if (t.prototype.onPlay.call(this), this._parent.useBakedAnimation) {
            this._sampleCurves = this._sampleCurvesBaked, this.duration = this._bakedDuration, this._animInfoMgr.switchClip(this._animInfo, this.clip);

            for (var e = 0; e < this._comps.length; ++e) {
              this._comps[e].uploadAnimation(this.clip);
            }
          } else this._sampleCurves = t.prototype._sampleCurves, this.duration = this.clip.duration, this._curvesInited || (this._curveLoaded = !1, t.prototype.initialize.call(this, this._targetNode), this._curvesInited = !0);
        }, i.rebuildSocketCurves = function (t) {
          if (this._sockets.length = 0, this._targetNode) for (var e = this._targetNode, i = 0; i < t.length; ++i) {
            var n = t[i],
                r = e.getChildByPath(n.path);

            if (n.target) {
              for (var s = yt.getOrExtract(this.clip), a = n.path, u = s.joints[a], l = r, c = void 0; !u;) {
                var f = a.lastIndexOf("/");
                if (a = a.substring(0, f), u = s.joints[a], l && (c || (c = o.identity(Gn)), o.fromRTS(Wn, l.rotation, l.position, l.scale), o.multiply(c, Wn, c), l = l.parent), f < 0) break;
              }

              for (var p = u && u.transforms, d = s.frames, _ = [], m = 0; m < d; m++) {
                var g;
                g = p && c ? o.multiply(Wn, p[m], c) : p ? p[m] : c || new o();
                var y = {
                  pos: new h(),
                  rot: new N(),
                  scale: new h()
                };
                o.toRTS(g, y.rot, y.pos, y.scale), _.push(y);
              }

              this._sockets.push({
                target: n.target,
                frames: _
              });
            }
          }
        }, i._setAnimInfoDirty = function (t, e) {
          t.dirty = e;
        }, i._sampleCurvesBaked = function (t) {
          var e = t / this.duration,
              i = this._animInfo,
              n = e * this._frames + .5 | 0;

          if (n !== i.data[0]) {
            i.data[0] = n, this._setAnimInfoDirty(i, !0);

            for (var r = 0; r < this._sockets.length; ++r) {
              var o = this._sockets[r],
                  s = o.target,
                  a = o.frames[n],
                  u = a.pos,
                  l = a.rot,
                  h = a.scale;
              s.setRTS(l, u, h);
            }
          }
        }, e;
      }(wt)),
          qn = t("f", (An = c("cc.SkeletalAnimation.Socket"), Mn = _(X), An((On = p((In = function In(t, e) {
        void 0 === t && (t = ""), void 0 === e && (e = null), y(this, "path", On, this), y(this, "target", Bn, this), this.path = t, this.target = e;
      }).prototype, "path", [v, d], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Bn = p(In.prototype, "target", [Mn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), xn = In)) || xn));
      u.setClassAlias(qn, "cc.SkeletalAnimationComponent.Socket");
      var Xn = new o(),
          Yn = new o();

      function Zn(t, e, i) {
        void 0 === e && (e = ""), void 0 === i && (i = []);

        for (var n = 0; n < t.children.length; n++) {
          var r = t.children[n];

          if (r) {
            var o = e ? e + "/" + r.name : r.name;
            i.push(o), Zn(r, o, i);
          }
        }

        return i;
      }

      var Qn = t("g", (Nn = c("cc.SkeletalAnimation"), Cn = M(), Pn = Y(99), jn = x(), zn = _([qn]), Dn = b(), En = b(), Ln = _([qn]), Nn(Rn = Cn(Rn = Pn(Rn = A(Rn = jn((Vn = Kn = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, y(e, "_useBakedAnimation", Fn, w(e)), y(e, "_sockets", Hn, w(e)), e;
        }

        m(e, t);
        var i = e.prototype;
        return i.onDestroy = function () {
          t.prototype.onDestroy.call(this), a.director.root.dataPoolManager.jointAnimationInfo.destroy(this.node.uuid), a.director.getAnimationManager().removeSockets(this.node, this._sockets);
        }, i.start = function () {
          this.sockets = this._sockets, this.useBakedAnimation = this._useBakedAnimation, t.prototype.start.call(this);
        }, i.querySockets = function () {
          var t = this._defaultClip && Object.keys(yt.getOrExtract(this._defaultClip).joints).sort().reduce(function (t, e) {
            return e.startsWith(t[t.length - 1]) || t.push(e), t;
          }, []) || [];
          if (!t.length) return ["please specify a valid default animation clip first"];

          for (var e = [], i = 0; i < t.length; i++) {
            var n = t[i],
                r = this.node.getChildByPath(n);
            r && (e.push(n), Zn(r, n, e));
          }

          return e;
        }, i.rebuildSocketAnimations = function () {
          for (var t, e = K(this._sockets); !(t = e()).done;) {
            var i = t.value,
                n = this.node.getChildByPath(i.path),
                r = i.target;
            n && r && (r.name = i.path.substring(i.path.lastIndexOf("/") + 1) + " Socket", r.parent = this.node, gt(n, this.node, Xn), o.fromRTS(Yn, r.rotation, r.position, r.scale), o.equals(Yn, Xn) || (r.matrix = Xn));
          }

          for (var s = 0, a = Object.keys(this._nameToState); s < a.length; s++) {
            var u = a[s];

            this._nameToState[u].rebuildSocketCurves(this._sockets);
          }
        }, i.createSocket = function (t) {
          var e = this._sockets.find(function (e) {
            return e.path === t;
          });

          if (e) return e.target;
          if (!this.node.getChildByPath(t)) return console.warn("illegal socket path"), null;
          var i = new X();
          return i.parent = this.node, this._sockets.push(new qn(t, i)), this.rebuildSocketAnimations(), i;
        }, i._createState = function (t, e) {
          return new Jn(t, e);
        }, i._doCreateState = function (e, i) {
          var n = t.prototype._doCreateState.call(this, e, i);

          return n.rebuildSocketCurves(this._sockets), n;
        }, f(e, [{
          key: "sockets",
          get: function get() {
            return this._sockets;
          },
          set: function set(t) {
            if (!this._useBakedAnimation) {
              var e = a.director.getAnimationManager();
              e.removeSockets(this.node, this._sockets), e.addSockets(this.node, t);
            }

            this._sockets = t, this.rebuildSocketAnimations();
          }
        }, {
          key: "useBakedAnimation",
          get: function get() {
            return this._useBakedAnimation;
          },
          set: function set(t) {
            this._useBakedAnimation = t;

            for (var e = this.node.getComponentsInChildren(gn), i = 0; i < e.length; ++i) {
              var n = e[i];
              n.skinningRoot === this.node && n.setUseBakedAnimation(this._useBakedAnimation, !0);
            }

            this._useBakedAnimation ? a.director.getAnimationManager().removeSockets(this.node, this._sockets) : a.director.getAnimationManager().addSockets(this.node, this._sockets);
          }
        }]), e;
      }(St), Kn.Socket = qn, p((Un = Vn).prototype, "sockets", [zn, Dn], Object.getOwnPropertyDescriptor(Un.prototype, "sockets"), Un.prototype), p(Un.prototype, "useBakedAnimation", [En], Object.getOwnPropertyDescriptor(Un.prototype, "useBakedAnimation"), Un.prototype), Fn = p(Un.prototype, "_useBakedAnimation", [v], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Hn = p(Un.prototype, "_sockets", [Ln], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Rn = Un)) || Rn) || Rn) || Rn) || Rn) || Rn));
      a.SkeletalAnimationComponent = Qn, u.setClassAlias(Qn, "cc.SkeletalAnimationComponent"), a.utils = Zt;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/intersection-2d-5766c37d.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js"], function (n) {
  "use strict";

  var r;
  return {
    setters: [function (n) {
      r = n.c3;
    }, function () {}],
    execute: function execute() {
      function t(n, r, t, e) {
        var i = (e.x - t.x) * (n.y - t.y) - (e.y - t.y) * (n.x - t.x),
            x = (r.x - n.x) * (n.y - t.y) - (r.y - n.y) * (n.x - t.x),
            y = (e.y - t.y) * (r.x - n.x) - (e.x - t.x) * (r.y - n.y);

        if (0 !== y) {
          var u = i / y,
              o = x / y;
          if (u >= 0 && u <= 1 && o >= 0 && o <= 1) return !0;
        }

        return !1;
      }

      var e = new r(),
          i = new r(),
          x = new r(),
          y = new r();

      function u(n, r, e) {
        for (var i = e.length, x = 0; x < i; ++x) {
          if (t(n, r, e[x], e[(x + 1) % i])) return !0;
        }

        return !1;
      }

      function o(n, r) {
        for (var t = !1, e = n.x, i = n.y, x = r.length, y = 0, u = x - 1; y < x; u = y++) {
          var o = r[y].x,
              f = r[y].y,
              a = r[u].x,
              c = r[u].y;
          f > i != c > i && e < (a - o) * (i - f) / (c - f) + o && (t = !t);
        }

        return t;
      }

      function f(n, r, t, i) {
        var x,
            y = t.x - r.x,
            u = t.y - r.y,
            o = y * y + u * u,
            f = ((n.x - r.x) * y + (n.y - r.y) * u) / o;
        return x = i ? o ? f < 0 ? r : f > 1 ? t : e.set(r.x + f * y, r.y + f * u) : r : e.set(r.x + f * y, r.y + f * u), y = n.x - x.x, u = n.y - x.y, Math.sqrt(y * y + u * u);
      }

      var a = n("I", function () {});
      a.lineLine = t, a.lineRect = function (n, r, u) {
        var o = e.set(u.x, u.y),
            f = i.set(u.x, u.yMax),
            a = x.set(u.xMax, u.yMax),
            c = y.set(u.xMax, u.y);
        return !!(t(n, r, o, f) || t(n, r, f, a) || t(n, r, a, c) || t(n, r, c, o));
      }, a.linePolygon = u, a.rectRect = function (n, r) {
        var t = n.x,
            e = n.y,
            i = n.x + n.width,
            x = n.y + n.height,
            y = r.x,
            u = r.y,
            o = r.x + r.width,
            f = r.y + r.height;
        return t <= o && i >= y && e <= f && x >= u;
      }, a.rectPolygon = function (n, r) {
        var t = e.set(n.x, n.y),
            f = i.set(n.x, n.yMax),
            a = x.set(n.xMax, n.yMax),
            c = y.set(n.xMax, n.y);
        if (u(t, f, r)) return !0;
        if (u(f, a, r)) return !0;
        if (u(a, c, r)) return !0;
        if (u(c, t, r)) return !0;

        for (var s = 0, l = r.length; s < l; ++s) {
          if (n.contains(r[s])) return !0;
        }

        return !!(o(t, r) || o(f, r) || o(a, r) || o(c, r));
      }, a.rectCircle = function (n, r, t) {
        var e = r.x,
            i = r.y,
            x = n.x,
            y = n.y,
            u = n.width,
            o = n.height,
            f = e,
            a = i;
        e < x ? f = x : e > x + u && (f = x + u), i < y ? a = y : i > y + o && (a = y + o);
        var c = e - f,
            s = i - a;
        return Math.sqrt(c * c + s * s) <= t;
      }, a.polygonPolygon = function (n, r) {
        var t, e;

        for (t = 0, e = n.length; t < e; ++t) {
          if (u(n[t], n[(t + 1) % e], r)) return !0;
        }

        for (t = 0, e = r.length; t < e; ++t) {
          if (o(r[t], n)) return !0;
        }

        for (t = 0, e = n.length; t < e; ++t) {
          if (o(n[t], r)) return !0;
        }

        return !1;
      }, a.circleCircle = function (n, t, e, i) {
        return r.distance(n, e) < t + i;
      }, a.polygonCircle = function (n, r, t) {
        var e = r;
        if (o(e, n)) return !0;

        for (var i = 0, x = n.length; i < x; i++) {
          if (f(e, 0 === i ? n[n.length - 1] : n[i - 1], n[i], !0) < t) return !0;
        }

        return !1;
      }, a.pointInPolygon = o, a.pointLineDistance = f;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/intersection-2d.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./intersection-2d-5766c37d.js"], function (e) {
  "use strict";

  return {
    setters: [function () {}, function () {}, function () {}, function () {}, function () {}, function () {}, function () {}, function (n) {
      e("Intersection2D", n.I);
    }],
    execute: function execute() {}
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/json-asset-1a4fee7d.js", function(require, module, exports){ 			
System.register([],(function(e){"use strict";return{execute:function(){e({$:void 0,A:void 0,E:void 0,F:void 0,G:void 0,H:void 0,I:void 0,J:void 0,K:void 0,L:void 0,M:void 0,N:void 0,O:void 0,Q:void 0,S:void 0,T:void 0,U:void 0,V:void 0,W:void 0,X:void 0,Y:void 0,Z:void 0,_:T,a:v,a0:void 0,a1:void 0,a2:void 0,a3:void 0,a4:void 0,a5:void 0,a6:void 0,a7:void 0,a8:void 0,a9:void 0,aa:void 0,ab:void 0,ac:void 0,b:x,b$:void 0,b3:void 0,b9:Ca,bB:void 0,bL:cv,bM:function(e,t){for(var n=Object.entries(t),i=!1,o=0;o<n.length;o++)e[n[o][0]]!==n[o][1]&&(e[n[o][0]]=n[o][1],i=!0);return i},bN:void 0,bP:dv,bR:void 0,bT:id,bV:void 0,bX:void 0,bZ:void 0,ba:Ta,bb:Ea,bc:Aa,bd:Pa,c:A,c$:Cn,c4:Di,c6:hi,c8:Li,cA:ai,cB:si,cC:function(e,t,n){return(n-e)/(t-e)},cD:ci,cE:function(e,t){return Math.abs(e)>Math.abs(t)?e:t},cF:function(e,t){t.forEach((function(t){Object.defineProperty(e,t,{enumerable:!0})}))},cI:gt,cJ:yt,cK:Ct,cQ:function(e){e>0&&(Wn=e)},cR:void 0,cS:void 0,cT:void 0,cU:za,cV:MS,cW:OS,cZ:mn,ca:bi,cd:Ri,cg:Bi,ci:ki,ck:fi,cm:function(e,t){return Math.abs(e-t)<=Jn*Math.max(1,Math.abs(e),Math.abs(t))},cn:Zn,co:$n,cp:function(e){return e<0?0:e>1?1:e},cq:ei,cr:function(e){return e*Kn},cs:ti,cu:ii,cv:function(e,t){return Math.floor(ii(e,t))},cw:oi,cx:ri,cy:function(e,t,n){return Math.floor(ri(e,t,n))},cz:function(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},d:w,d0:Mf,d2:function(e){return e[fl]},d3:Yf,dA:void 0,dD:void 0,dK:LE,dS:Am,dT:Vm,dV:void 0,dW:void 0,dX:void 0,dZ:void 0,de:Rn,dw:S,dx:X,dy:Y,dz:W,e:y,e2:Q,e4:void 0,eP:Fn,eS:C,eU:void 0,eW:void 0,eb:void 0,ec:Z,ed:oe,eg:ce,eh:se,ek:Fl,er:kh,es:void 0,ev:void 0,f:R,f5:void 0,fB:void 0,fC:function(e,t,n){if(e[pf]<1)throw new Error(W(5304,e[pf]));Rf(e,!0,t,null!=n?n:Mf.reportMissingClass),Nf(e);for(var i=new Of(e[pf]),o=e[hf],r=e[df],a=e[vf],s=e[gf],c=e[yf],l=0;l<c.length;++l)c[l].unshift(i,o,r,a,s);return c},fD:function(e,t,n){return[1,0,0,[e],0,n?[t,-1]:[t],[0],0,[],[],[]]},fE:vu,fH:Cd,fJ:void 0,fO:Je,fT:mu,ff:c_,fg:ke,fl:du,fm:fu,fp:Dt,fq:J,fr:hu,fv:void 0,fw:Ze,fy:of,fz:rf,g:q,g0:function(){},g2:Jc,g3:function(e){return"function"==typeof e.lerp},g4:void 0,g5:void 0,g6:void 0,g8:Ae,g9:Pe,gD:void 0,gF:Lt,gG:void 0,gJ:Mt,gO:function(){var e=new cm;return e.assignSorted([[0,{interpolationMode:Vl.CUBIC,value:1}],[1,{interpolationMode:Vl.CUBIC,value:1}]]),e},gP:void 0,gQ:Ln,gT:Ft,gU:Ut,gX:be,gY:ul,gZ:ne,g_:ut,gb:function(e,t,n,i,o,r){void 0===t&&(t=Oo.R32F),void 0===n&&(n=0),void 0===i&&(i=e.byteLength-n),void 0===o&&(o=0),void 0===r&&(r=[]);var a=va[t];o||(o=a.size);for(var s="get"+GS(a),c=a.size/a.count,l=Math.floor(i/o),u=Xi.isLittleEndian,f=0;f<l;++f)for(var _=n+o*f,m=0;m<a.count;++m){var p=_+c*m;r[a.count*f+m]=e[s](p,u)}return r},gc:function(e,t,n,i,o){void 0===n&&(n=Oo.R32F),void 0===i&&(i=0),void 0===o&&(o=0);var r=va[n];o||(o=r.size);for(var a="set"+GS(r),s=r.size/r.count,c=Math.floor(t.length/r.count),l=Xi.isLittleEndian,u=0;u<c;++u)for(var f=i+o*u,_=0;_<r.count;++_){var m=f+s*_;e[a](m,t[r.count*u+_],l)}},gd:kS,gm:void 0,gq:Bn,gr:function(){},gv:function(e){return ul(pl({formerlySerializedAs:e}))},gx:pt,i:Zi,j:Ji,k:eo,m:$i,n:to,o:no,p:io,q:oo,r:ao,s:ro,t:ae,v:void 0,w:g,x:void 0,y:void 0,z:void 0});const t=e("eR",!1),n=e("fQ",!1),i=e("gM",!1),o=e("gK",!0),r=e("gL",!1);var a="undefined"==typeof window?global:window,s=e("l",{_global:a});s.internal={},a.CC_BUILD=!0,a.CC_TEST=!1,a.CC_EDITOR=t,a.CC_PREVIEW=n,a.CC_DEV=!1,a.CC_DEBUG=!1,a.CC_JSB=r,a.CC_BYTEDANCE=!1,a.CC_WECHAT=!0,a.CC_ALIPAY=!1,a.CC_XIAOMI=!1,a.CC_BAIDU=!1,a.CC_COCOSPLAY=!1,a.CC_HUAWEI=!1,a.CC_OPPO=!1,a.CC_VIVO=!1,a.CC_MINIGAME=o,a.CC_RUNTIME_BASED=i,a.CC_SUPPORT_JIT=!1;var c=e("c1","3.3.2");a.CocosEngine=s.ENGINE_VERSION=c,a.cc=s;var l="https://github.com/cocos-creator/engine/blob/3d/EngineErrorMap.md",u=null,f=console.log.bind(console),_=f,m=f,p=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];console.log("ASSERT: "+d.apply(void 0,[t].concat(i)))}},h=f;function d(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return s.js.formatStr.apply(null,[e].concat(n))}function v(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return f.apply(void 0,[e].concat(n))}function g(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return _.apply(void 0,[e].concat(n))}function y(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return m.apply(void 0,[e].concat(n))}function x(e,t){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];return p.apply(void 0,[e,t].concat(i))}function S(){return h.apply(void 0,arguments)}function C(e){if(f=_=m=p=h=function(){},e!==N.NONE){if(e>N.ERROR){var t=function(e){if(s.game.canvas){if(!u){var t=document.createElement("Div");t.setAttribute("id","logInfoDiv"),t.setAttribute("width","200"),t.setAttribute("height",s.game.canvas.height);var n=t.style;n.zIndex="99999",n.position="absolute",n.top=n.left="0",(u=document.createElement("textarea")).setAttribute("rows","20"),u.setAttribute("cols","30"),u.setAttribute("disabled","true");var i=u.style;i.backgroundColor="transparent",i.borderBottom="1px solid #cccccc",i.borderTopWidth=i.borderLeftWidth=i.borderRightWidth="0px",i.borderTopStyle=i.borderLeftStyle=i.borderRightStyle="none",i.padding="0px",i.margin="0px",t.appendChild(u),s.game.canvas.parentNode.appendChild(t)}u.value=u.value+e+"\r\n",u.scrollTop=u.scrollHeight}};m=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("ERROR :  "+d.apply(void 0,[e].concat(i)))},p=function(e,n){if(!e){for(var i=arguments.length,o=new Array(i>2?i-2:0),r=2;r<i;r++)o[r-2]=arguments[r];t("ASSERT: "+d.apply(void 0,[n].concat(o)))}},e!==N.ERROR_FOR_WEB_PAGE&&(_=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("WARN :  "+d.apply(void 0,[e].concat(i)))}),e===N.INFO_FOR_WEB_PAGE&&(f=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t(d.apply(void 0,[e].concat(i)))})}else console&&(console.error||(console.error=console.log),console.warn||(console.warn=console.log),m=console.error.bind?console.error.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.error.apply(console,[e].concat(n))},p=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];var r=d.apply(void 0,[t].concat(i));throw new Error(r)}});if(e!==N.ERROR&&(_=console.warn.bind?console.warn.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.warn.apply(console,[e].concat(n))}),e===N.INFO&&(f=console.log.bind?console.log.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.log.apply(console,[e].concat(n))}),e<=N.VERBOSE&&"function"==typeof console.debug){var n=console.debug.bind(console);h=function(){return n.apply(void 0,arguments)}}}}function T(e){y(e.stack||e)}function E(e){return function(t){for(var n=e+" "+t+", please go to "+l+"#"+t+" to see details.",i=arguments.length,o=new Array(i>1?i-1:0),r=1;r<i;r++)o[r-1]=arguments[r];return 0===o.length?n:n+" Arguments: "+o.join(", ")}}var b=E("Log");function A(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];v(b.apply(void 0,[e].concat(n)))}var P=E("Warning");function w(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];g(P.apply(void 0,[e].concat(n)))}var I=E("Error");function R(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];y(I.apply(void 0,[e].concat(n)))}var N,M,O,D,z,L,F,U,B,G,k,H,j,V=E("Assert");function q(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];x(!1,V.apply(void 0,[t].concat(i)))}}function W(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return I.apply(void 0,[e].concat(n))}function X(){return!!s.profiler&&s.profiler.isShowingStats()}function Y(e){s.profiler&&(e?s.profiler.showStats():s.profiler.hideStats(),s.game.config.showFPS=!!e)}function K(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function Q(e,t,n){return t&&K(e.prototype,t),n&&K(e,n),e}function J(){return(J=e("fq",Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e})).apply(this,arguments)}function Z(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ee(e,t)}function $(e){return($=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ee(e,t){return(ee=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function te(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function ne(t,n,i){return(ne=te()?e("gZ",Reflect.construct):e("gZ",(function(e,t,n){var i=[null];i.push.apply(i,t);var o=new(Function.bind.apply(e,i));return n&&ee(o,n.prototype),o}))).apply(null,arguments)}function ie(e){var t="function"==typeof Map?new Map:void 0;return(ie=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,i)}function i(){return ne(e,arguments,$(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),ee(i,e)})(e)}function oe(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function re(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function ae(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return re(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?re(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0;return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function se(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function ce(e,t,n,i,o){var r={};return Object.keys(i).forEach((function(e){r[e]=i[e]})),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),r),o&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(o):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(e,t,r),r=null),r}!function(e){e[e.NONE=0]="NONE",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.INFO_FOR_WEB_PAGE=5]="INFO_FOR_WEB_PAGE",e[e.WARN_FOR_WEB_PAGE=6]="WARN_FOR_WEB_PAGE",e[e.ERROR_FOR_WEB_PAGE=7]="ERROR_FOR_WEB_PAGE"}(N||(N=e("dA",{}))),e("h",Object.freeze({__proto__:null,log:v,warn:g,error:y,assert:x,debug:S,_resetDebugSetting:C,_throw:T,logID:A,warnID:w,errorID:R,assertID:q,get DebugMode(){return N},getError:W,isDisplayStats:X,setDisplayStats:Y})),function(e){e.UNKNOWN="unknown",e.WECHAT="wechat",e.ANDROID="androidbrowser",e.IE="ie",e.EDGE="edge",e.QQ="qqbrowser",e.MOBILE_QQ="mqqbrowser",e.UC="ucbrowser",e.UCBS="ucbs",e.BROWSER_360="360browser",e.BAIDU_APP="baiduboxapp",e.BAIDU="baidubrowser",e.MAXTHON="maxthon",e.OPERA="opera",e.OUPENG="oupeng",e.MIUI="miuibrowser",e.FIREFOX="firefox",e.SAFARI="safari",e.CHROME="chrome",e.LIEBAO="liebao",e.QZONE="qzone",e.SOUGOU="sogou",e.HUAWEI="huawei"}(M||(M=e("eU",{}))),function(e){e.UNKNOWN="unknown",e.ENGLISH="en",e.CHINESE="zh",e.FRENCH="fr",e.ITALIAN="it",e.GERMAN="de",e.SPANISH="es",e.DUTCH="du",e.RUSSIAN="ru",e.KOREAN="ko",e.JAPANESE="ja",e.HUNGARIAN="hu",e.PORTUGUESE="pt",e.ARABIC="ar",e.NORWEGIAN="no",e.POLISH="pl",e.TURKISH="tr",e.UKRAINIAN="uk",e.ROMANIAN="ro",e.BULGARIAN="bg"}(O||(O={})),function(e){e[e.NONE=0]="NONE",e[e.LAN=1]="LAN",e[e.WWAN=2]="WWAN"}(D||(D={})),function(e){e.UNKNOWN="Unknown",e.IOS="iOS",e.ANDROID="Android",e.WINDOWS="Windows",e.LINUX="Linux",e.OSX="OS X",e.OHOS="OHOS"}(z||(z=e("eW",{}))),function(e){e.UNKNOWN="UNKNOWN",e.EDITOR_PAGE="EDITOR_PAGE",e.EDITOR_CORE="EDITOR_CORE",e.MOBILE_BROWSER="MOBILE_BROWSER",e.DESKTOP_BROWSER="DESKTOP_BROWSER",e.WIN32="WIN32",e.ANDROID="ANDROID",e.IOS="IOS",e.MACOS="MACOS",e.OHOS="OHOS",e.WECHAT_GAME="WECHAT_GAME",e.BAIDU_MINI_GAME="BAIDU_MINI_GAME",e.XIAOMI_QUICK_GAME="XIAOMI_QUICK_GAME",e.ALIPAY_MINI_GAME="ALIPAY_MINI_GAME",e.BYTEDANCE_MINI_GAME="BYTEDANCE_MINI_GAME",e.OPPO_MINI_GAME="OPPO_MINI_GAME",e.VIVO_MINI_GAME="VIVO_MINI_GAME",e.HUAWEI_QUICK_GAME="HUAWEI_QUICK_GAME",e.COCOSPLAY="COCOSPLAY",e.LINKSURE_MINI_GAME="LINKSURE_MINI_GAME",e.QTT_MINI_GAME="QTT_MINI_GAME"}(L||(L={})),function(e){e[e.PORTRAIT=1]="PORTRAIT",e[e.PORTRAIT_UPSIDE_DOWN=2]="PORTRAIT_UPSIDE_DOWN",e[e.LANDSCAPE_LEFT=4]="LANDSCAPE_LEFT",e[e.LANDSCAPE_RIGHT=8]="LANDSCAPE_RIGHT",e[e.LANDSCAPE=12]="LANDSCAPE"}(F||(F={}));var le,ue,fe=e("eL",{});le=fe,ue=wx,Object.keys(ue).forEach((function(e){"function"!=typeof ue[e]?le[e]=ue[e]:le[e]=ue[e].bind(ue)})),fe.wx={},fe.wx.onKeyDown=null===(U=wx.onKeyDown)||void 0===U?void 0:U.bind(wx),fe.wx.onKeyUp=null===(B=wx.onKeyUp)||void 0===B?void 0:B.bind(wx),fe.wx.onMouseDown=null===(G=wx.onMouseDown)||void 0===G?void 0:G.bind(wx),fe.wx.onMouseMove=null===(k=wx.onMouseMove)||void 0===k?void 0:k.bind(wx),fe.wx.onMouseUp=null===(H=wx.onMouseUp)||void 0===H?void 0:H.bind(wx),fe.wx.onWheel=null===(j=wx.onWheel)||void 0===j?void 0:j.bind(wx);var _e=wx.getSystemInfoSync();fe.testAndUpdateSystemInfoCache=function(e,t){var n=0,i=null;i=setInterval((function(){var t=wx.getSystemInfoSync();_e.screenWidth===t.screenWidth&&_e.screenHeight===t.screenHeight?++n>=e&&null!==i&&(clearInterval(i),i=null):n=0,_e=t}),t)},fe.testAndUpdateSystemInfoCache(10,500),fe.getSystemInfoSync=function(){return _e};var me=fe.getSystemInfoSync();fe.isDevTool="devtools"===me.platform,Object.defineProperty(fe,"isLandscape",{get:function(){var e=wx.getSystemInfoSync();return"string"==typeof e.deviceOrientation?e.deviceOrientation.startsWith("landscape"):e.screenWidth>e.screenHeight}});var pe,he,de,ve,ge=F.LANDSCAPE_RIGHT;if("android"!==me.platform.toLocaleLowerCase()&&wx.onDeviceOrientationChange((function(e){"landscape"===e.value?ge=F.LANDSCAPE_RIGHT:"landscapeReverse"===e.value&&(ge=F.LANDSCAPE_LEFT)})),Object.defineProperty(fe,"orientation",{get:function(){return fe.isLandscape?ge:F.PORTRAIT}}),fe.onAccelerometerChange=function(e){fe.offAccelerometerChange(),pe=function(t){var n=t.x,i=t.y;if(fe.isLandscape){var o=ge===F.LANDSCAPE_RIGHT?1:-1,r=n;n=-i*o,i=r*o}var a={x:n,y:i,z:t.z};e(a)}},fe.offAccelerometerChange=function(){pe&&(wx.offAccelerometerChange(pe),pe=void 0)},fe.startAccelerometer=function(e){pe&&wx.onAccelerometerChange(pe),wx.startAccelerometer(e)},fe.createInnerAudioContext=(he=wx,de={onPlay:!0,onPause:!0,onStop:!0,onSeek:!1},void 0===(ve=!0)&&(ve=!1),function(){var e=he.createInnerAudioContext();if(de.onPlay){var t=e.play,n=null;Object.defineProperty(e,"onPlay",{configurable:!0,value:function(e){n=e}}),Object.defineProperty(e,"play",{configurable:!0,value:function(){t.call(e),n&&(ve?setTimeout(n,0):n())}})}if(de.onPause){var i=e.pause,o=null;Object.defineProperty(e,"onPause",{configurable:!0,value:function(e){o=e}}),Object.defineProperty(e,"pause",{configurable:!0,value:function(){i.call(e),o&&(ve?setTimeout(o,0):o())}})}if(de.onStop){var r=e.stop,a=null;Object.defineProperty(e,"onStop",{configurable:!0,value:function(e){a=e}}),Object.defineProperty(e,"stop",{configurable:!0,value:function(){r.call(e),a&&(ve?setTimeout(a,0):a())}})}if(de.onSeek){var s=e.seek,c=null;Object.defineProperty(e,"onSeeked",{configurable:!0,value:function(e){c=e}}),Object.defineProperty(e,"seek",{configurable:!0,value:function(t){s.call(e,t),c&&(ve?setTimeout(c,0):c())}})}return e}),fe.getSafeArea=function(){return wx.getSystemInfoSync().safeArea},"windows"===me.platform&&function(e,t){var n=/\d+\.\d+\.\d+/;if(!n.test(e)||!n.test(t))return console.warn("wrong format of version when compare version"),0;for(var i=e.split(".").map((function(e){return Number.parseInt(e)})),o=t.split(".").map((function(e){return Number.parseInt(e)})),r=0;r<3;++r){var a=i[r],s=o[r];if(a!==s)return a-s}return 0}(me.SDKVersion,"2.16.0")<0){var ye=canvas;if(ye){var xe=ye.getContext("webgl"),Se=xe.useProgram.bind(xe);xe.useProgram=function(e){e&&Se(e)}}}var Ce=e("P",function(){function e(e,t){this._ctor=void 0,this._elementsPerBatch=void 0,this._nextAvail=void 0,this._freepool=[],this._ctor=e,this._elementsPerBatch=Math.max(t,1),this._nextAvail=this._elementsPerBatch-1;for(var n=0;n<this._elementsPerBatch;++n)this._freepool.push(e())}var t=e.prototype;return t.alloc=function(){if(this._nextAvail<0){for(var e=this._elementsPerBatch,t=0;t<e;t++)this._freepool.push(this._ctor());this._nextAvail=e-1}var n=this._freepool[this._nextAvail--];return this._freepool.length--,n},t.free=function(e){this._freepool.push(e),this._nextAvail++},t.freeArray=function(e){Array.prototype.push.apply(this._freepool,e),this._nextAvail+=e.length},t.destroy=function(e){if(e)for(var t=0;t<=this._nextAvail;t++)e(this._freepool[t]);this._freepool.length=0,this._nextAvail=-1},e}()),Te=(e("R",function(){function e(e,t){this._fn=void 0,this._count=0,this._data=void 0,this._fn=e,this._data=new Array(t);for(var n=0;n<t;++n)this._data[n]=e()}var t=e.prototype;return t.reset=function(){this._count=0},t.resize=function(e){if(e>this._data.length)for(var t=this._data.length;t<e;++t)this._data[t]=this._fn()},t.add=function(){return this._count>=this._data.length&&this.resize(2*this._data.length),this._data[this._count++]},t.removeAt=function(e){if(!(e>=this._count)){var t=this._count-1,n=this._data[e];this._data[e]=this._data[t],this._data[t]=n,this._count-=1}},Q(e,[{key:"length",get:function(){return this._count}},{key:"data",get:function(){return this._data}}]),e}()),e("C",function(){function e(e,t){this.array=void 0,this.length=0,this._compareFn=void 0,this.array=new Array(e),this.length=0,this._compareFn=void 0!==t?t:function(e,t){return e-t}}var t=e.prototype;return t.push=function(e){this.array[this.length++]=e},t.pop=function(){return this.array[--this.length]},t.get=function(e){return this.array[e]},t.clear=function(){this.length=0},t.destroy=function(){this.length=0,this.array.length=0},t.sort=function(){this.array.length=this.length,this.array.sort(this._compareFn)},t.concat=function(e){for(var t=0;t<e.length;++t)this.array[this.length++]=e[t]},t.fastRemove=function(e){if(!(e>=this.length||e<0)){var t=--this.length;this.array[e]=this.array[t]}},t.indexOf=function(e){return this.array.indexOf(e)},e}()),e("fX",function(){function e(e){this.i=0,this.array=e}var t=e.prototype;return t.remove=function(e){var t=this.array.indexOf(e);t>=0&&this.removeAt(t)},t.removeAt=function(e){this.array.splice(e,1),e<=this.i&&--this.i},t.fastRemove=function(e){var t=this.array.indexOf(e);t>=0&&this.fastRemoveAt(t)},t.fastRemoveAt=function(e){var t=this.array;t[e]=t[t.length-1],--t.length,e<=this.i&&--this.i},t.push=function(e){this.array.push(e)},Q(e,[{key:"length",get:function(){return this.array.length},set:function(e){this.array.length=e,this.i>=e&&(this.i=e-1)}}]),e}()));function Ee(e,t){e.splice(t,1)}function be(e,t){var n=e.length;t<0||t>=n||(e[t]=e[n-1],e.length=n-1)}function Ae(e,t){var n=e.indexOf(t);return n>=0&&(Ee(e,n),!0)}function Pe(e,t){return e.indexOf(t)>=0}var we=Object.freeze({__proto__:null,removeAt:Ee,fastRemoveAt:be,remove:Ae,fastRemove:function(e,t){var n=e.indexOf(t);n>=0&&(e[n]=e[e.length-1],--e.length)},removeIf:function(e,t){var n=e.findIndex(t);if(n>=0){var i=e[n];return Ee(e,n),i}},verifyType:function(e,t){if(e&&e.length>0)for(var n,i=ae(e);!(n=i()).done;)if(!(n.value instanceof t))return A(1300),!1;return!0},removeArray:function(e,t){for(var n=0,i=t.length;n<i;n++)Ae(e,t[n])},appendObjectsAt:function(e,t,n){return e.splice.apply(e,[n,0].concat(t)),e},contains:Pe,copy:function(e){for(var t=e.length,n=new Array(t),i=0;i<t;i+=1)n[i]=e[i];return n},MutableForwardIterator:Te}),Ie=e("fh",function(){function e(e){this.id=void 0,this.prefix=void 0,this.id=0|998*Math.random(),this.prefix=e?e+".":""}return e.prototype.getNewId=function(){return this.prefix+ ++this.id},e}());Ie.global=new Ie("global");var Re=new Ie("TmpCId."),Ne="undefined"==typeof Symbol?"__aliases__":Symbol("[[Aliases]]"),Me="__cid__";function Oe(e){return"number"==typeof e||e instanceof Number}function De(e){return"string"==typeof e||e instanceof String}function ze(e){for(var t in e)return!1;return!0}var Le,Fe=(Le={value:void 0,enumerable:!1,writable:!1,configurable:!0},function(e,t,n,i,o){Le.value=n,Le.writable=i,Le.enumerable=o,Object.defineProperty(e,t,Le),Le.value=void 0}),Ue=function(){var e={get:void 0,set:void 0,enumerable:!1};return function(t,n,i,o,r,a){void 0===r&&(r=!1),void 0===a&&(a=!1),"boolean"==typeof o&&(r=o,o=void 0),e.get=i,e.set=o,e.enumerable=r,e.configurable=a,Object.defineProperty(t,n,e),e.get=void 0,e.set=void 0}}(),Be=function(){var e={get:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,r){e.get=i,e.enumerable=o,e.configurable=r,Object.defineProperty(t,n,e),e.get=void 0}}(),Ge=function(){var e={set:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,r){e.set=i,e.enumerable=o,e.configurable=r,Object.defineProperty(t,n,e),e.set=void 0}}();function ke(e){var t=Object.create(null);return e&&(t["."]=1,t["/"]=1,delete t["."],delete t["/"]),t}function He(e){if("function"==typeof e){var t=e.prototype;if(t&&t.hasOwnProperty("__classname__")&&t.__classname__)return t.__classname__;var n="";if(e.name&&(n=e.name),e.toString){var i,o=e.toString();(i="["===o.charAt(0)?o.match(/\[\w+\s*(\w+)\]/):o.match(/function\s*(\w+)/))&&2===i.length&&(n=i[1])}return"Object"!==n?n:""}return e&&e.constructor?He(e.constructor):""}function je(e,t,n,i){var o=/([^.]+)$/,r=o.exec(t)[0],a=o.exec(n)[0];function s(){return this[a]}i?Ue(e,r,s,(function(e){this[a]=e})):Be(e,r,s)}function Ve(e,t,n,i){for(var o in n)je(e,t+"."+o,n[o],i)}var qe=/(%d)|(%s)/,We=/%s/;function Xe(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];if(0===arguments.length)return"";if(0===n.length)return""+e;var o="string"==typeof e&&qe.test(e);if(o)for(var r,a=ae(n);!(r=a()).done;){var s=r.value,c="number"==typeof s?qe:We;if(c.test(e)){var l=""+s;e=e.replace(c,l)}else e+=" "+s}else for(var u,f=ae(n);!(u=f()).done;){var _=u.value;e+=" "+_}return e}function Ye(){for(var e=arguments.length-1,t=new Array(e),n=0;n<e;++n)t[n]=arguments[n+1];return t}function Ke(e,t){for(;e;){var n=Object.getOwnPropertyDescriptor(e,t);if(n)return n;e=Object.getPrototypeOf(e)}return null}function Qe(e,t,n){var i=Ke(t,e);i&&Object.defineProperty(n,e,i)}function Je(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,r=n;o<r.length;o++){var a=r[o];if(a){if("object"!=typeof a){R(5402,a);continue}for(var s in a)s in e||Qe(s,a,e)}}return e}function Ze(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,r=n;o<r.length;o++){var a=r[o];if(a){if("object"!=typeof a){R(5403,a);continue}for(var s in a)Qe(s,a,e)}}return e}function $e(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e.prototype=Object.create(t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),e}function et(e){var t=e.prototype,n=t&&Object.getPrototypeOf(t);return n&&n.constructor}function tt(e,t){if(e&&t){if("function"!=typeof e)return!1;if("function"!=typeof t)return!1;if(e===t)return!0;for(;;){if(!(e=et(e)))return!1;if(e===t)return!0}}return!1}function nt(e){for(var t=0,n=Object.keys(e);t<n.length;t++)delete e[n[t]]}function it(e){return"string"!=typeof e||e.startsWith(Re.prefix)}var ot=ke(!0),rt=ke(!0);function at(e,t){return function(n,i){if(i.prototype.hasOwnProperty(e)&&delete t[i.prototype[e]],Fe(i.prototype,e,n),n){var o=t[n];o&&o!==i?y("A Class already exists with the same "+e+' : "'+n+'".'):t[n]=i}}}var st=at("__cid__",ot),ct=at("__classname__",rt);function lt(e,t){if(ct(e,t),!t.prototype.hasOwnProperty(Me)){var n=e||Re.getNewId();n&&st(n,t)}}function ut(e,t){var n=rt[t],i=ot[t],o=!0;if(n&&n!==e&&(y('"'+t+'" has already been set as name or alias of another class.'),o=!1),i&&i!==e&&(y('"'+t+'" has already been set as id or alias of another class.'),o=!1),o){var r=e[Ne];r||(r=[],e[Ne]=r),r.push(t),rt[t]=e,ot[t]=e}}function ft(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var i=0,o=t;i<o.length;i++){var r=o[i],a=r.prototype,s=a.__cid__;s&&delete ot[s];var c=a.__classname__;c&&delete rt[c];var l=a[Ne];if(l)for(var u=0;u<l.length;++u){var f=l[u];delete rt[f],delete ot[f]}}}function _t(e){return ot[e]}function mt(e){return rt[e]}function pt(e,n){var i;if(n=void 0===n||n,"function"==typeof e&&e.prototype.hasOwnProperty(Me))return i=e.prototype.__cid__,!n&&t&&it(i)?"":i;if(e&&e.constructor){var o=e.constructor.prototype;if(o&&o.hasOwnProperty(Me))return i=e.__cid__,!n&&t&&it(i)?"":i}return""}var ht=e("gz",function(){var e=t.prototype;function t(e,t){this.count=void 0,this._pool=void 0,this._cleanup=void 0;var n=void 0===t?e:t,i=void 0===t?null:e;this.count=0,this._pool=new Array(n),this._cleanup=i}return e.get=function(){return this._get()},e._get=function(){if(this.count>0){--this.count;var e=this._pool[this.count];return this._pool[this.count]=null,e}return null},e.put=function(e){var t=this._pool;if(this.count<t.length){if(this._cleanup&&!1===this._cleanup(e))return;t[this.count]=e,++this.count}},e.resize=function(e){e>=0&&(this._pool.length=e,this.count>e&&(this.count=e))},t}()),dt=e("fi",we),vt=e("eM",{IDGenerator:Ie,Pool:ht,array:we,isNumber:Oe,isString:De,isEmptyObject:ze,getPropertyDescriptor:Ke,addon:Je,mixin:Ze,extend:$e,getSuper:et,isChildClassOf:tt,clear:nt,value:Fe,getset:Ue,get:Be,set:Ge,unregisterClass:ft,getClassName:He,setClassName:lt,setClassAlias:ut,getClassByName:mt,get _registeredClassNames(){return J({},rt)},set _registeredClassNames(e){nt(rt),Object.assign(rt,e)},get _registeredClassIds(){return J({},ot)},set _registeredClassIds(e){nt(ot),Object.assign(ot,e)},_getClassId:pt,_setClassId:st,_getClassById:_t,obsolete:je,obsoletes:Ve,formatStr:Xe,shiftArguments:Ye,createMap:ke});function gt(e){if("__bitmask__"in e)return e;Fe(e,"__bitmask__",null,!0);for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],r=e[o];if(-1===r)r=++t,e[o]=r;else if("number"==typeof r)t=r;else if("string"==typeof r&&Number.isInteger(parseFloat(o)))continue;var a=""+r;o!==a&&Fe(e,a,o)}return e}function yt(e){return"__enums__"in e?e:(Fe(e,"__enums__",null,!0),yt.update(e))}function xt(e){e.hasOwnProperty("__enums__")}function St(e){xt(e);var t=e.__enums__||[];for(var n in t.length=0,e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),e.__enums__=t,t}function Ct(e){"__enums__"in e||Fe(e,"__enums__",null,!0)}s.js=vt,e("cM",Object.freeze({__proto__:null,array:dt,js:vt,IDGenerator:Ie,Pool:ht,isNumber:Oe,isString:De,isEmptyObject:ze,value:Fe,getset:Ue,get:Be,set:Ge,createMap:ke,getClassName:He,obsolete:je,obsoletes:Ve,formatStr:Xe,shiftArguments:Ye,getPropertyDescriptor:Ke,addon:Je,mixin:Ze,extend:$e,getSuper:et,isChildClassOf:tt,clear:nt,_idToClass:ot,_nameToClass:rt,_setClassId:st,setClassName:lt,setClassAlias:ut,unregisterClass:ft,_getClassById:_t,getClassByName:mt,_getClassId:pt})),gt.isBitMask=function(e){return e&&e.hasOwnProperty("__bitmask__")},gt.getList=function(e){if(e.__bitmask__)return e.__bitmask__;var t=e.__bitmask__=[];for(var n in e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),t},s.BitMask=gt,yt.update=function(e){for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],r=e[o];if(-1===r)r=++t,e[o]=r;else if("number"==typeof r)t=r;else if("string"==typeof r&&Number.isInteger(parseFloat(o)))continue;var a=""+r;o!==a&&Fe(e,a,o)}return Array.isArray(e.__enums__)&&St(e),e},yt||(yt=e("cJ",{})),yt.isEnum=function(e){return e&&e.hasOwnProperty("__enums__")},yt.getList=function(e){return xt(e),e.__enums__?e.__enums__:St(e)},s.Enum=yt;var Tt=e("cL",function(){function e(){}var t=e.prototype;return t.clone=function(){return R(100,He(this)+".clone"),this},t.equals=function(){return!1},t.set=function(){R(100,He(this)+".set")},t.toString=function(){return""+{}},e}());lt("cc.ValueType",Tt),s.ValueType=Tt;var Et=e("dC",{SUPPORT_TEXTURE_FORMATS:[".astc",".pkm",".pvr",".webp",".jpg",".jpeg",".bmp",".png"],KEY:{none:0,back:6,menu:18,backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,select:41,insert:45,Delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,num0:96,num1:97,num2:98,num3:99,num4:100,num5:101,num6:102,num7:103,num8:104,num9:105,"*":106,"+":107,"-":109,numdel:110,"/":111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,";":186,semicolon:186,equal:187,"=":187,",":188,comma:188,dash:189,".":190,period:190,forwardslash:191,grave:192,"[":219,openbracket:219,backslash:220,"]":221,closebracket:221,quote:222,dpadLeft:1e3,dpadRight:1001,dpadUp:1003,dpadDown:1004,dpadCenter:1005},RAD:Math.PI/180,DEG:180/Math.PI,REPEAT_FOREVER:Number.MAX_VALUE-1,FLT_EPSILON:1.192092896e-7,ORIENTATION_PORTRAIT:1,ORIENTATION_LANDSCAPE:2,ORIENTATION_AUTO:3,ENABLE_TILEDMAP_CULLING:!0,TOUCH_TIMEOUT:5e3,ENABLE_TRANSPARENT_CANVAS:!1,ENABLE_WEBGL_ANTIALIAS:!0,CLEANUP_IMAGE_CACHE:!1,ENABLE_MULTI_TOUCH:!0,MAX_LABEL_CANVAS_POOL_SIZE:20});s.macro=Et;for(var bt=/^(?:cc|dragonBones|sp|ccsg)\..+/,At=new Array(123),Pt=0;Pt<123;++Pt)At[Pt]=64;for(var wt=0;wt<64;++wt)At["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(wt)]=wt;var It=At;function Rt(e,t,n){function i(e,t,n,i){var o=Object.getOwnPropertyDescriptor(e,t);if(o)o.get&&(e[n]=o.get),o.set&&i&&(e[i]=o.set);else{var r=e[n];Ue(e,t,r,e[i])}}for(var o,r=e.prototype,a=0;a<t.length;a++){var s=(o=t[a])[0].toUpperCase()+o.slice(1);i(r,o,"get"+s,"set"+s)}for(o in n){var c=n[o];i(r,o,c[0],c[1])}}function Nt(e,t,n,i){var o=e[t];o?Array.isArray(o)?i?(o.push(o[0]),o[0]=n):o.push(n):e[t]=i?[n,o]:[o,n]:e[t]=n}function Mt(e,t){if("function"==typeof e.contains)return e.contains(t);if("function"==typeof e.compareDocumentPosition)return!!(16&e.compareDocumentPosition(t));var n=t.parentNode;if(n)do{if(n===e)return!0;n=n.parentNode}while(null!==n);return!1}function Ot(e){return"object"==typeof window&&"function"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName}function Dt(e,t,n){e&&setTimeout((function(){e(t,n)}),0)}function zt(e){return!(!e||e.constructor!==Object)&&ze(e)}function Lt(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e<n?e:n}function Ft(e){return e*Et.RAD}function Ut(e){return e*Et.DEG}s.misc={BUILTIN_CLASSID_RE:bt,BASE64_VALUES:It,propertyDefine:Rt,pushToMap:Nt,contains:Mt,isDomNode:Ot,callInNextTick:Dt,isPlainEmptyObj_DEV:zt,clampf:Lt,degreesToRadians:Ft,radiansToDegrees:Ut},e("cN",Object.freeze({__proto__:null,BUILTIN_CLASSID_RE:bt,BASE64_VALUES:It,propertyDefine:Rt,pushToMap:Nt,contains:Mt,isDomNode:Ot,callInNextTick:Dt,tryCatchFunctor_EDITOR:function(e){return Function("target","try {\n  target."+e+"();\n}\ncatch (e) {\n  cc._throw(e);\n}")},isPlainEmptyObj_DEV:zt,clampf:Lt,degreesToRadians:Ft,radiansToDegrees:Ut}));var Bt="$_$";function Gt(e,t){var n=t?Object.create(t):{};return Fe(e,"__attrs__",n),n}function kt(e){if("function"!=typeof e)return Gt(e,jt(e.constructor));for(var t,n=s.Class.getInheritanceChain(e),i=n.length-1;i>=0;i--){var o=n[i];o.hasOwnProperty("__attrs__")&&o.__attrs__||Gt(o,(t=n[i+1])&&t.__attrs__)}return Gt(e,(t=n[0])&&t.__attrs__),e.__attrs__}function Ht(e,t){var n=jt(e),i=t+Bt,o={};for(var r in n)r.startsWith(i)&&(o[r.slice(i.length)]=n[r]);return o}function jt(e){return e.hasOwnProperty("__attrs__")&&e.__attrs__||kt(e)}function Vt(e,t,n,i){jt(e)[t+Bt+n]=i}var qt=function(){function e(e,t){this.name=void 0,this.default=void 0,this.name=e,this.default=t}return e.prototype.toString=function(){return this.name},e}(),Wt=e("d4",new qt("Integer",0));s.Integer=Wt,s.CCInteger=Wt;var Xt=e("d5",new qt("Float",0));s.Float=Xt,s.CCFloat=Xt;var Yt=e("d6",new qt("Boolean",!1));s.Boolean=Yt,s.CCBoolean=Yt;var Kt=e("d7",new qt("String",""));function Qt(e,t){return function(n,i){var o='"'+He(n)+"."+i+'"',r=Ht(n,i),a=r.type;if(a===Wt||a===Xt?a="Number":a!==Kt&&a!==Yt||(a=""+a),a===e){if(r.hasOwnProperty("default")){var s=r.default;if(void 0!==s&&!Array.isArray(s)&&!zt(s)){var c=typeof s,l=e.toLowerCase();if(c===l)if("object"===l){if(!s||s instanceof r.ctor)return;w(3605,o,He(r.ctor))}else"Number"!==e&&w(3606,t,o,e);else{if("function"===c)return;e===Kt.default&&null==s?w(3607,o):w(3611,t,o,c)}delete r.type}}}else w(3604,o)}}s.String=Kt,s.CCString=Kt;var Jt=Object.freeze({__proto__:null,DELIMETER:Bt,createAttrsSingle:Gt,createAttrs:kt,attr:Ht,getClassAttrs:jt,setClassAttr:Vt,PrimitiveType:qt,CCInteger:Wt,CCFloat:Xt,CCBoolean:Yt,CCString:Kt,getTypeChecker_ET:Qt,getObjTypeChecker_ET:function(e){return function(t,n){Qt("Object","type")(t,n);var i=jt(t)[n+Bt+"default"],o=s.Class.getDefault(i);if(!Array.isArray(o)&&tt(e,s.ValueType)){var r=He(e),a=Xe('No need to specify the "type" of "%s.%s" because %s is a child class of ValueType.',He(t),n,r);i?v(a):w(3612,a,r,He(t),n,r)}}}}),Zt={default:{},serializable:{},editorOnly:{},formerlySerializedAs:{}};function $t(e,t,n,i){if(!e.get&&!e.set&&e.hasOwnProperty("default")){var o="_N$"+t;e.get=function(){return this[o]},e.set=function(e){var t=this[o];this[o]=e,n.call(this,t)};var r={};for(var a in i[o]=r,Zt){var s=Zt[a];e.hasOwnProperty(a)&&(r[a]=e[a],s.canUsedInGet||delete e[a])}}}function en(e,t,n,i){if(Array.isArray(t)){if(!(t.length>0))return R(5508,n,i);e.type=t=t[0]}"function"==typeof t&&(t===String?e.type=s.String:t===Boolean?e.type=s.Boolean:t===Number&&(e.type=s.Float))}function tn(e,t,n){var i=e?{_short:!0}:{_short:!0,default:t};return n&&(i.type=n),i}function nn(e,t){if(!e||e.constructor!==Object){if(Array.isArray(e)&&e.length>0)return tn(t,[],e);if("function"==typeof e){var n=e;return tn(t,tt(n,s.ValueType)?new n:null,n)}return tn(t,e instanceof qt?e.default:e)}return null}var on=[];function rn(){return on[on.length-1]}s._RF={push:function(e,t,n,i){void 0===n&&(n=t,t=""),on.push({uuid:t,script:n,module:e,exports:e.exports,beh:null,importMeta:i})},pop:function(){var e=on.pop(),t=e.module,n=t.exports;if(n===e.exports){for(var i in n)return;t.exports=n=e.cls}},peek:rn};var an=Bt,sn={datas:null,push:function(e){if(this.datas)this.datas.push(e);else{this.datas=[e];var t=this;setTimeout((function(){t.init()}),0)}},init:function(){var e=this.datas;if(e){for(var t=0;t<e.length;++t){var n=e[t],i=n.cls,o=n.props;"function"==typeof o&&(o=o());var r=He(i);o?_n(i,r,o,i.$super,n.mixins):R(3633,r)}this.datas=null}}};function cn(e,t,n,i){!function(e,t){!function(e,t){e.indexOf(t)<0&&e.push(t)}(e.__props__,t)}(e,n),hn(e,i,t,n)}function ln(e,t,n,i){var o=i.get;i.set,o&&(hn(e,i,t,n),Vt(e,n,"serializable",!1))}function un(e){return"function"==typeof e?e():e}function fn(e,t,n){for(var i in t)e.hasOwnProperty(i)||n&&!n(i)||Object.defineProperty(e,i,Ke(t,i))}function _n(e,t,n,i,o){if(e.__props__=[],i&&i.__props__&&(e.__props__=i.__props__.slice()),o)for(var r=0;r<o.length;++r){var a=o[r];a.__props__&&(e.__props__=e.__props__.concat(a.__props__.filter((function(t){return e.__props__.indexOf(t)<0}))))}if(n)for(var s in function(e,t){for(var n in e){var i=e[n],o=nn(i,!1);if(o&&(i=e[n]=o),i){var r=i.notify;r&&$t(i,n,r,e),"type"in i&&en(i,i.type,t,n)}}}(n,t),n){var c=n[s];c.get||c.set?ln(e,t,s,c):cn(e,t,s,c)}var l=jt(e);e.__values__=e.__props__.filter((function(e){return!1!==l[e+an+"serializable"]}))}function mn(e){var t=e.name,n=e.extends,i=e.mixins,o=function(e,t,n,i){var o=s.Component,r=rn();if(r&&tt(t,o)){if(tt(r.cls,o))return R(3615),null;e=e||r.script}var a=function(e,t,n,i){var o=i.ctor,r=[o],a=o;Fe(a,"__ctors__",r.length>0?r:null,!0);var s=a.prototype;if(t&&(a.$super=t),n){for(var c=n.length-1;c>=0;c--){var l=n[c];fn(s,l.prototype),mn._isCCClass(l)&&fn(jt(a),jt(l))}s.constructor=a}return lt(e,a),a}(e,t,n,i);if(r)if(tt(t,o)){var c=r.uuid;c&&st(c,a),r.cls=a}else tt(r.cls,o)||(r.cls=a);return a}(t,n,i,e);t||(t=s.js.getClassName(o)),o._sealed=!0,n&&(n._sealed=!1);var r=e.properties;"function"==typeof r||n&&null===n.__props__||i&&i.some((function(e){return null===e.__props__}))?(sn.push({cls:o,props:r,mixins:i}),o.__props__=o.__values__=null):_n(o,t,r,n,e.mixins);var a=e.editor;return a&&tt(n,s.Component)&&s.Component._registerEditorProps(o,a),o}mn._isCCClass=function(e){var t;return null==e||null===(t=e.hasOwnProperty)||void 0===t?void 0:t.call(e,"__ctors__")},mn.fastDefine=function(e,t,n){lt(e,t);for(var i=t.__props__=t.__values__=Object.keys(n),o=jt(t),r=0;r<i.length;r++){var a=i[r];o[a+an+"visible"]=!1,o[a+an+"default"]=n[a]}},mn.Attr=Jt,mn.attr=Ht,mn.getInheritanceChain=function(e){for(var t=[];e=et(e);)e!==Object&&t.push(e);return t};var pn={Integer:"Number",Float:"Number",Boolean:"Boolean",String:"String"};function hn(e,t,n,i){var o=null,r="";function a(){return r=i+an,o=jt(e)}"type"in t&&void 0===t.type&&w(3660,i,n);var s=t.type;s&&(pn[s]?(o||a())[r+"type"]=s:"Object"===s||("object"==typeof s?yt.isEnum(s)?((o||a())[r+"type"]="Enum",o[r+"enumList"]=yt.getList(s)):gt.isBitMask(s)&&((o||a())[r+"type"]="BitMask",o[r+"bitmaskList"]=gt.getList(s)):"function"==typeof s&&((o||a())[r+"type"]="Object",o[r+"ctor"]=s))),"default"in t&&((o||a())[r+"default"]=t.default);var c,l=function(e,n){if(e in t){var i=t[e];typeof i===n&&((o||a())[r+e]=i)}};t.editorOnly&&((o||a())[r+"editorOnly"]=!0),t.__noImplicit?(o||a())[r+"serializable"]=null!==(c=t.serializable)&&void 0!==c&&c:!1===t.serializable&&((o||a())[r+"serializable"]=!1),l("formerlySerializedAs","string");var u=t.range;u&&Array.isArray(u)&&u.length>=2&&((o||a())[r+"min"]=u[0],o[r+"max"]=u[1],u.length>2&&(o[r+"step"]=u[2])),l("min","number"),l("max","number"),l("step","number")}mn.isArray=function(e){return e=un(e),Array.isArray(e)},mn.getDefault=un,mn.escapeForJS=function(e){return JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")},mn.IDENTIFIER_RE=/^[A-Za-z_$][0-9A-Za-z_$]*$/,mn.getNewValueTypeCode=!1,s.Class=mn;var dn,vn=e("d9","__editorExtras__"),gn=1<<22,yn=[],xn=e("c_",function(){function e(e){void 0===e&&(e=""),this._objFlags=void 0,this._name=void 0,this._name=e,this._objFlags=0}e._deferredDestroy=function(){for(var e=yn.length,t=0;t<e;++t){var n=yn[t];1&n._objFlags||n._destroyImmediate()}e===yn.length?yn.length=0:yn.splice(0,e)};var t=e.prototype;return t.destroy=function(){return 1&this._objFlags?(w(5e3),!1):!(4&this._objFlags||(this._objFlags|=4,yn.push(this),0))},t._destruct=function(){var e=this.constructor,t=e.__destruct__;t||(t=function(e,t){var n,i=e instanceof s._BaseNode||e instanceof s.Component,o=i?"_id":null,r={};for(n in e)if(e.hasOwnProperty(n)){if(n===o)continue;switch(typeof e[n]){case"string":r[n]="";break;case"object":case"function":r[n]=null}}if(mn._isCCClass(t))for(var a=s.Class.Attr.getClassAttrs(t),c=t.__props__,l=0;l<c.length;l++){var u=(n=c[l])+s.Class.Attr.DELIMETER+"default";if(u in a){if(i&&"_id"===n)continue;switch(typeof a[u]){case"string":r[n]="";break;case"object":case"function":r[n]=null;break;case"undefined":r[n]=void 0}}}return function(e){for(var t in r)e[t]=r[t]}}(this,e),Fe(e,"__destruct__",t,!0)),t(this)},t._destroyImmediate=function(){1&this._objFlags?R(5e3):(this._onPreDestroy&&this._onPreDestroy(),this._destruct(),this._objFlags|=1)},Q(e,[{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"hideFlags",get:function(){return this._objFlags&e.Flags.AllHideMasks},set:function(t){var n=t&e.Flags.AllHideMasks;this._objFlags=this._objFlags&~e.Flags.AllHideMasks|n}},{key:"replicated",get:function(){return!!(this._objFlags&gn)},set:function(e){e?this._objFlags|=gn:this._objFlags&=-4194305}},{key:"isValid",get:function(){return!(1&this._objFlags)}}]),e}()),Sn=xn.prototype;function Cn(e,t){return"object"==typeof e?!(!e||e._objFlags&(t?5:1)):void 0!==e}Sn._deserialize=null,Sn._onPreDestroy=null,mn.fastDefine("cc.Object",xn,((dn={_name:"",_objFlags:0})[vn]={},dn)),mn.Attr.setClassAttr(xn,vn,"editorOnly",!0),Fe(xn,"Flags",{Destroyed:1,DontSave:8,EditorOnly:16,Dirty:32,DontDestroy:64,PersistentMask:-4192741,Destroying:128,Deactivating:256,LockedInEditor:512,HideInHierarchy:1024,AllHideMasks:1560,IsPreloadStarted:8192,IsOnLoadStarted:32768,IsOnLoadCalled:16384,IsOnEnableCalled:2048,IsStartCalled:65536,IsEditorOnEnableCalled:4096,IsPositionLocked:1<<21,IsRotationLocked:1<<17,IsScaleLocked:1<<18,IsAnchorLocked:1<<19,IsSizeLocked:1<<20}),s.isValid=Cn,s.Object=xn;var Tn=dt.fastRemoveAt;function En(){}var bn=function(){function e(){this.callback=En,this.target=void 0,this.once=!1}var t=e.prototype;return t.set=function(e,t,n){this.callback=e||En,this.target=t,this.once=!!n},t.reset=function(){this.target=void 0,this.callback=En,this.once=!1},t.check=function(){return!(this.target instanceof xn&&!Cn(this.target,!0))},e}(),An=new Ce((function(){return new bn}),32),Pn=function(){function e(){this.callbackInfos=[],this.isInvoking=!1,this.containCanceled=!1}var t=e.prototype;return t.removeByCallback=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.callback===e&&(n.reset(),An.free(n),Tn(this.callbackInfos,t),--t)}},t.removeByTarget=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.target===e&&(n.reset(),An.free(n),Tn(this.callbackInfos,t),--t)}},t.cancel=function(e){var t=this.callbackInfos[e];t&&(t.reset(),this.isInvoking?this.callbackInfos[e]=null:Tn(this.callbackInfos,e),An.free(t)),this.containCanceled=!0},t.cancelAll=function(){for(var e=0;e<this.callbackInfos.length;e++){var t=this.callbackInfos[e];t&&(t.reset(),An.free(t),this.callbackInfos[e]=null)}this.containCanceled=!0},t.purgeCanceled=function(){for(var e=this.callbackInfos.length-1;e>=0;--e)this.callbackInfos[e]||Tn(this.callbackInfos,e);this.containCanceled=!1},t.clear=function(){this.cancelAll(),this.callbackInfos.length=0,this.isInvoking=!1,this.containCanceled=!1},e}(),wn=new Ce((function(){return new Pn}),16),In=function(){function e(){this._callbackTable=ke(!0)}var t=e.prototype;return t.on=function(e,t,n,i){if(!this.hasEventListener(e,t,n)){var o=this._callbackTable[e];o||(o=this._callbackTable[e]=wn.alloc());var r=An.alloc();r.set(t,n,i),o.callbackInfos.push(r)}return t},t.hasEventListener=function(e,t,n){var i=this._callbackTable&&this._callbackTable[e];if(!i)return!1;var o=i.callbackInfos;if(!t){if(i.isInvoking){for(var r=0;r<o.length;++r)if(o[r])return!0;return!1}return o.length>0}for(var a=0;a<o.length;++a){var s=o[a];if(s&&s.check()&&s.callback===t&&s.target===n)return!0}return!1},t.removeAll=function(e){var t=typeof e;if("string"===t||"number"===t){var n=this._callbackTable&&this._callbackTable[e];n&&(n.isInvoking?n.cancelAll():(n.clear(),wn.free(n),delete this._callbackTable[e]))}else if(e)for(var i in this._callbackTable){var o=this._callbackTable[i];if(o.isInvoking)for(var r=o.callbackInfos,a=0;a<r.length;++a){var s=r[a];s&&s.target===e&&o.cancel(a)}else o.removeByTarget(e)}},t.off=function(e,t,n){var i=this._callbackTable&&this._callbackTable[e];if(i){var o=i.callbackInfos;if(t)for(var r=0;r<o.length;++r){var a=o[r];if(a&&a.callback===t&&a.target===n){i.cancel(r);break}}else this.removeAll(e)}},t.emit=function(e,t,n,i,o,r){var a=this._callbackTable&&this._callbackTable[e];if(a){var s=!a.isInvoking;a.isInvoking=!0;for(var c=a.callbackInfos,l=0,u=c.length;l<u;++l){var f=c[l];if(f){var _=f.callback,m=f.target;f.once&&this.off(e,_,m),f.check()?m?_.call(m,t,n,i,o,r):_(t,n,i,o,r):this.off(e,_,m)}}s&&(a.isInvoking=!1,a.containCanceled&&a.purgeCanceled())}},t.clear=function(){for(var e in this._callbackTable){var t=this._callbackTable[e];t&&(t.clear(),wn.free(t),delete this._callbackTable[e])}},e}();function Rn(e){for(var t=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._callbackTable=ke(!0),t}Z(t,e);var n=t.prototype;return n.once=function(e,t,n){return this.on(e,t,n,!0)},n.targetOff=function(e){this.removeAll(e)},t}(e),n=In.prototype,i=Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n)),o=0;o<i.length;++o){var r=i[o];if(!(r in t.prototype)){var a=Object.getOwnPropertyDescriptor(n,r);a&&Object.defineProperty(t.prototype,r,a)}}return t}var Nn,Mn=e("dd",Rn((function(){})));s.EventTarget=Mn,Nn=L.WECHAT_GAME;var On=function(e){function t(){var t;(t=e.call(this)||this).networkType=void 0,t.isNative=void 0,t.isBrowser=void 0,t.isMobile=void 0,t.isLittleEndian=void 0,t.platform=void 0,t.language=void 0,t.nativeLanguage=void 0,t.os=void 0,t.osVersion=void 0,t.osMainVersion=void 0,t.browserType=void 0,t.browserVersion=void 0,t.pixelRatio=void 0,t.supportCapability=void 0;var n,i=fe.getSystemInfoSync();t.networkType=D.LAN,t.isNative=!1,t.isBrowser=!1,t.isLittleEndian=(n=new ArrayBuffer(2),new DataView(n).setInt16(0,256,!0),256===new Int16Array(n)[0]),t.nativeLanguage=i.language,t.language=i.language.substr(0,2);var o=i.platform.toLocaleLowerCase();t.os="android"===o?z.ANDROID:"ios"===o?z.IOS:"windows"===o?z.WINDOWS:z.UNKNOWN;var r=i.system.toLowerCase();"android p"===r&&(r="android p 9.0");var a=/[\d.]+/.exec(r);t.osVersion=a?a[0]:r,t.osMainVersion=parseInt(t.osVersion),t.platform=Nn,t.isMobile=t.os!==z.WINDOWS,t.browserType=M.UNKNOWN,t.browserVersion="",t.pixelRatio=i.pixelRatio;var s,c=document.createElement("canvas");try{s=c.toDataURL("image/webp").startsWith("data:image/webp")}catch(e){s=!1}return t.supportCapability={webp:s,gl:!0,canvas:!0,imageBitmap:!1},t._registerEvent(),t}Z(t,e);var n=t.prototype;return n._registerEvent=function(){var e=this;fe.onHide((function(){e.emit("hide")})),fe.onShow((function(){e.emit("show")}))},n.getBatteryLevel=function(){return fe.getBatteryInfoSync().level/100},n.triggerGC=function(){fe.triggerGC()},n.openURL=function(){},n.now=function(){return Date.now?Date.now():+new Date},n.restartJSVM=function(){},n.close=function(){},t}(Mn),Dn=e("eO",new On),zn=e("gS",2147483647);function Ln(e){return(e>0)-(e<0)}function Fn(e){var t,n;return t=(e>65535)<<4,t|=n=((e>>>=t)>255)<<3,t|=n=((e>>>=n)>15)<<2,(t|=n=((e>>>=n)>3)<<1)|(e>>>=n)>>1}function Un(e){var t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}function Bn(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)}var Gn=new Array(256);!function(e){for(var t=0;t<256;++t){var n=t,i=t,o=7;for(n>>>=1;n;n>>>=1)i<<=1,i|=1&n,--o;e[t]=i<<o&255}}(Gn),e("c2",Object.freeze({__proto__:null,INT_BITS:32,INT_MAX:zn,INT_MIN:-2147483648,sign:Ln,abs:function(e){var t=e>>31;return(e^t)-t},min:function(e,t){return t^(e^t)&-(e<t)},max:function(e,t){return e^(e^t)&-(e<t)},isPow2:function(e){return!(e&e-1||!e)},log2:Fn,log10:function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},popCount:function(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},countTrailingZeros:Un,nextPow2:Bn,prevPow2:function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},parity:function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1},reverse:function(e){return Gn[255&e]<<24|Gn[e>>>8&255]<<16|Gn[e>>>16&255]<<8|Gn[e>>>24&255]},interleave2:function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},deinterleave2:function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},interleave3:function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},deinterleave3:function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},nextCombination:function(e){var t=e|e-1;return t+1|(~t&-~t)-1>>>Un(e)+1}}));var kn,Hn,jn,Vn,qn,Wn=10,Xn=0,Yn=new Map;jn=function(e,t,n,i,o,r,a){var s=Yn.get(r);s&&s.logTimes>s.count&&(o("'%s' is deprecated, please use '%s' instead. "+a,e+"."+t,n+"."+i),s.count++)},kn=e("cR",(function(e,t,n){null!=e&&n.forEach((function(n){var i=Xn++;Yn.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:Wn});var o=null!=n.target?n.target:e,r=null!=n.newName?n.newName:n.name,a=null!=n.targetName?n.targetName:t,s=o===e,c=n.suggest?"("+n.suggest+")":"";if(null!=n.customFunction)e[n.name]=function(){var e;return jn(t,n.name,a,r,g,i,c),(e=n.customFunction).call.apply(e,[this].concat(Array.prototype.slice.call(arguments)))};else if(null!=n.customSetter||null!=n.customGetter){var l=null!=n.customSetter,u=null!=n.customGetter;l&&u?Object.defineProperty(e,n.name,{get:function(){return jn(t,n.name,a,r,g,i,c),n.customGetter.call(this)},set:function(e){jn(t,n.name,a,r,g,i,c),n.customSetter.call(this,e)},enumerable:!1}):l?Object.defineProperty(e,n.name,{set:function(e){jn(t,n.name,a,r,g,i,c),n.customSetter.call(this,e)},enumerable:!1}):u&&Object.defineProperty(e,n.name,{get:function(){return jn(t,n.name,a,r,g,i,c),n.customGetter.call(this)},enumerable:!1})}else Object.defineProperty(e,n.name,{get:function(){return jn(t,n.name,a,r,g,i,c),s?this[r]:o[r]},set:function(e){jn(t,n.name,a,r,g,i,c),s?this[r]=e:o[r]=e},enumerable:!1})}))})),qn=function(e,t,n,i,o){var r=Yn.get(i);r&&r.logTimes>r.count&&(n("'%s' has been removed. "+o,e+"."+t),r.count++)},Hn=e("cS",(function(e,t,n){null!=e&&n.forEach((function(n){var i=Xn++;Yn.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:Wn});var o=n.suggest?"("+n.suggest+")":"";Object.defineProperty(e,n.name,{get:function(){return qn(t,n.name,y,i,o)},set:function(){qn(t,n.name,y,i,o)},enumerable:!1})}))})),Vn=function(e,t,n,i,o){var r=Yn.get(i);r&&r.logTimes>r.count&&(n("'%s' is deprecated. "+o,e+"."+t),r.count++)},e("cT",(function(e,t,n){null!=e&&n.forEach((function(n){var i=n.name,o=Object.getOwnPropertyDescriptor(e,i);if(o&&o.configurable){var r=Xn++;Yn.set(r,{id:r,count:0,logTimes:void 0!==n.logTimes?n.logTimes:Wn});var a=n.suggest?"("+n.suggest+")":"";if(void 0!==o.value)if("function"==typeof o.value){var s=o.value;e[i]=function(){return Vn(t,i,g,r,a),s.call.apply(s,[this].concat(Array.prototype.slice.call(arguments)))}}else{var c=o.value;Object.defineProperty(e,i,{configurable:!0,get:function(){return Vn(t,i,g,r,a),c}}),o.writable&&Object.defineProperty(e,i,{set:function(e){Vn(t,i,g,r,a),c=e}})}else!function(t,n,i,o,r,a){if(t.get){var s=t.get;t.get=function(){return Vn(n,i,o,r,a),s.call(this)}}if(t.set){var c=t.set;t.set=function(e){Vn(n,i,o,r,a),c.call(this,e)}}Object.defineProperty(e,i,t)}(o,t,i,g,r,a);Object.defineProperty(e,i,{enumerable:!1})}}))}));var Kn=Math.PI/180,Qn=180/Math.PI,Jn=e("cl",1e-6);function Zn(e,t,n){return n=n||Jn,Math.abs(e-t)<=n}function $n(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e>n?n:e}function ei(e,t,n){return e+(t-e)*n}function ti(e){return e*Qn}var ni=e("ct",Math.random);function ii(e,t){return Math.random()*(t-e)+e}function oi(e){return(e=(9301*e+49297)%233280)/233280}function ri(e,t,n){return oi(e)*(n-t)+t}function ai(e,t){return e-Math.floor(e/t)*t}function si(e,t){return e=ai(e,2*t),t-Math.abs(e-t)}function ci(e){return Math.abs(e.x)>Math.abs(e.y)?Math.abs(e.x)>Math.abs(e.z)?e.x:e.z:Math.abs(e.y)>Math.abs(e.z)?e.y:e.z}var li=1/255,ui=e("cj",function(e){function t(t,n,i,o){var r;return(r=e.call(this)||this)._val=0,"string"==typeof t?r.fromHEX(t):void 0!==n?r.set(t,n,i,o):r.set(t),r}Z(t,e),t.clone=function(e){var n=new t;return e._val?n._val=e._val:n._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,n},t.copy=function(e,t){return e.r=t.r,e.g=t.g,e.b=t.b,e.a=t.a,e},t.set=function(e,t,n,i,o){return e.r=t,e.g=n,e.b=i,e.a=o,e},t.fromHEX=function(e,t){return t=0===t.indexOf("#")?t.substring(1):t,e.r=parseInt(t.substr(0,2),16)||0,e.g=parseInt(t.substr(2,2),16)||0,e.b=parseInt(t.substr(4,2),16)||0,e.a=parseInt(t.substr(6,2),16)||255,e._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,e},t.add=function(e,t,n){return e.r=t.r+n.r,e.g=t.g+n.g,e.b=t.b+n.b,e.a=t.a+n.a,e},t.subtract=function(e,t,n){return e.r=t.r-n.r,e.g=t.g-n.g,e.b=t.b-n.b,e.a=t.a-n.a,e},t.multiply=function(e,t,n){return e.r=t.r*n.r,e.g=t.g*n.g,e.b=t.b*n.b,e.a=t.a*n.a,e},t.divide=function(e,t,n){return e.r=t.r/n.r,e.g=t.g/n.g,e.b=t.b/n.b,e.a=t.a/n.a,e},t.scale=function(e,t,n){return e.r=t.r*n,e.g=t.g*n,e.b=t.b*n,e.a=t.a*n,e},t.lerp=function(e,t,n,i){var o=t.r,r=t.g,a=t.b,s=t.a;return o+=(n.r-o)*i,r+=(n.g-r)*i,a+=(n.b-a)*i,s+=(n.a-s)*i,e._val=Math.floor((s<<24>>>0)+(a<<16)+(r<<8)+o),e},t.toArray=function(e,n,i){void 0===i&&(i=0);var o=n instanceof t||n.a>1?1/255:1;return e[i+0]=n.r*o,e[i+1]=n.g*o,e[i+2]=n.b*o,e[i+3]=n.a*o,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),t.r=255*e[n+0],t.g=255*e[n+1],t.b=255*e[n+2],t.a=255*e[n+3],t},t.strictEquals=function(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a},t.equals=function(e,t,n){return void 0===n&&(n=Jn),Math.abs(e.r-t.r)<=n*Math.max(1,Math.abs(e.r),Math.abs(t.r))&&Math.abs(e.g-t.g)<=n*Math.max(1,Math.abs(e.g),Math.abs(t.g))&&Math.abs(e.b-t.b)<=n*Math.max(1,Math.abs(e.b),Math.abs(t.b))&&Math.abs(e.a-t.a)<=n*Math.max(1,Math.abs(e.a),Math.abs(t.a))},t.hex=function(e){return(255*e.r<<24|255*e.g<<16|255*e.b<<8|255*e.a)>>>0};var n=t.prototype;return n.clone=function(){var e=new t;return e._val=this._val,e},n.equals=function(e){return e&&this._val===e._val},n.lerp=function(e,t){var n=this.r,i=this.g,o=this.b,r=this.a;return n+=(e.r-n)*t,i+=(e.g-i)*t,o+=(e.b-o)*t,r+=(e.a-r)*t,this._val=Math.floor((r<<24>>>0)+(o<<16)+(i<<8)+n),this},n.toString=function(){return"rgba("+this.r.toFixed()+", "+this.g.toFixed()+", "+this.b.toFixed()+", "+this.a.toFixed()+")"},n.toCSS=function(e){return void 0===e&&(e="rgba"),"rgba"===e?"rgba("+this.r+","+this.g+","+this.b+","+(this.a*li).toFixed(2)+")":"rgb"===e?"rgb("+this.r+","+this.g+","+this.b+")":"#"+this.toHEX(e)},n.fromHEX=function(e){e=0===e.indexOf("#")?e.substring(1):e;var t=parseInt(e.substr(0,2),16)||0,n=parseInt(e.substr(2,2),16)||0,i=parseInt(e.substr(4,2),16)||0,o=parseInt(e.substr(6,2),16)||255;return this._val=(o<<24>>>0)+(i<<16)+(n<<8)+(0|t),this},n.toHEX=function(e){void 0===e&&(e="#rrggbb");var t="0",n=[(this.r<16?t:"")+this.r.toString(16),(this.g<16?t:"")+this.g.toString(16),(this.b<16?t:"")+this.b.toString(16)];return"#rgb"===e?(n[0]=n[0][0],n[1]=n[1][0],n[2]=n[2][0]):"#rrggbbaa"===e&&n.push((this.a<16?t:"")+this.a.toString(16)),n.join("")},n.toRGBValue=function(){return 16777215&this._val},n.fromHSV=function(e,t,n){var i=0,o=0,r=0;if(0===t)i=o=r=n;else if(0===n)i=o=r=0;else{1===e&&(e=0),e*=6;var a=Math.floor(e),s=e-a,c=n*(1-t),l=n*(1-t*s),u=n*(1-t*(1-s));switch(a){case 0:i=n,o=u,r=c;break;case 1:i=l,o=n,r=c;break;case 2:i=c,o=n,r=u;break;case 3:i=c,o=l,r=n;break;case 4:i=u,o=c,r=n;break;case 5:i=n,o=c,r=l}}return i*=255,o*=255,r*=255,this._val=(this.a<<24>>>0)+(r<<16)+(o<<8)+(0|i),this},n.toHSV=function(){var e=this.r*li,t=this.g*li,n=this.b*li,i={h:0,s:0,v:0},o=Math.max(e,t,n),r=Math.min(e,t,n),a=0;return i.v=o,i.s=o?(o-r)/o:0,i.s?(a=o-r,i.h=e===o?(t-n)/a:t===o?2+(n-e)/a:4+(e-t)/a,i.h/=6,i.h<0&&(i.h+=1)):i.h=0,i},n.set=function(e,t,n,i){return"object"==typeof e?null!=e._val?this._val=e._val:(t=e.g||0,n=e.b||0,i="number"==typeof e.a?e.a:255,e=e.r||0,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)):(e=e||0,t=t||0,n=n||0,i="number"==typeof i?i:255,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)),this},n.multiply=function(e){var t=(255&this._val)*e.r>>8,n=(65280&this._val)*e.g>>8,i=(16711680&this._val)*e.b>>8,o=((4278190080&this._val)>>>8)*e.a;return this._val=4278190080&o|16711680&i|65280&n|255&t,this},n._set_r_unsafe=function(e){return this._val=(4294967040&this._val|e)>>>0,this},n._set_g_unsafe=function(e){return this._val=(4294902015&this._val|e<<8)>>>0,this},n._set_b_unsafe=function(e){return this._val=(4278255615&this._val|e<<16)>>>0,this},n._set_a_unsafe=function(e){return this._val=(16777215&this._val|e<<24)>>>0,this},Q(t,[{key:"r",get:function(){return 255&this._val},set:function(e){e=~~$n(e,0,255),this._val=(4294967040&this._val|e)>>>0}},{key:"g",get:function(){return(65280&this._val)>>8},set:function(e){e=~~$n(e,0,255),this._val=(4294902015&this._val|e<<8)>>>0}},{key:"b",get:function(){return(16711680&this._val)>>16},set:function(e){e=~~$n(e,0,255),this._val=(4278255615&this._val|e<<16)>>>0}},{key:"a",get:function(){return(4278190080&this._val)>>>24},set:function(e){e=~~$n(e,0,255),this._val=(16777215&this._val|e<<24)>>>0}},{key:"x",get:function(){return this.r*li},set:function(e){this.r=255*e}},{key:"y",get:function(){return this.g*li},set:function(e){this.g=255*e}},{key:"z",get:function(){return this.b*li},set:function(e){this.b=255*e}},{key:"w",get:function(){return this.a*li},set:function(e){this.a=255*e}}]),t}(Tt));function fi(e,t,n,i){return new ui(e,t,n,i)}ui.WHITE=Object.freeze(new ui(255,255,255,255)),ui.GRAY=Object.freeze(new ui(127,127,127,255)),ui.BLACK=Object.freeze(new ui(0,0,0,255)),ui.TRANSPARENT=Object.freeze(new ui(0,0,0,0)),ui.RED=Object.freeze(new ui(255,0,0,255)),ui.GREEN=Object.freeze(new ui(0,255,0,255)),ui.BLUE=Object.freeze(new ui(0,0,255,255)),ui.CYAN=Object.freeze(new ui(0,255,255,255)),ui.MAGENTA=Object.freeze(new ui(255,0,255,255)),ui.YELLOW=Object.freeze(new ui(255,255,0,255)),mn.fastDefine("cc.Color",ui,{r:0,g:0,b:0,a:255}),s.Color=ui,s.color=fi;var _i=e("c5",function(e){function t(t,n,i){var o;return o=e.call(this)||this,t&&"object"==typeof t?(o.x=t.x,o.y=t.y,o.z=t.z):(o.x=t||0,o.y=n||0,o.z=i||0),o}Z(t,e),t.zero=function(e){return e.x=0,e.y=0,e.z=0,e},t.clone=function(e){return new t(e.x,e.y,e.z)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e},t.set=function(e,t,n,i){return e.x=t,e.y=n,e.z=i,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return Math.sqrt(n*n+i*i+o*o)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return n*n+i*i+o*o},t.len=function(e){var t=e.x,n=e.y,i=e.z;return Math.sqrt(t*t+n*n+i*i)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z;return t*t+n*n+i*i},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e},t.invert=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e},t.invertSafe=function(e,t){var n=t.x,i=t.y,o=t.z;return Math.abs(n)<Jn?e.x=0:e.x=1/n,Math.abs(i)<Jn?e.y=0:e.y=1/i,Math.abs(o)<Jn?e.z=0:e.z=1/o,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,r=n*n+i*i+o*o;return r>0&&(r=1/Math.sqrt(r),e.x=n*r,e.y=i*r,e.z=o*r),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},t.cross=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=n.x,s=n.y,c=n.z;return e.x=o*c-r*s,e.y=r*a-i*c,e.z=i*s-o*a,e},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e},t.random=function(e,t){t=t||1;var n=2*ni()*Math.PI,i=2*ni()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=n.m03*i+n.m07*o+n.m11*r+n.m15;return a=a?Math.abs(1/a):1,e.x=(n.m00*i+n.m04*o+n.m08*r+n.m12)*a,e.y=(n.m01*i+n.m05*o+n.m09*r+n.m13)*a,e.z=(n.m02*i+n.m06*o+n.m10*r+n.m14)*a,e},t.transformMat4Normal=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=n.m03*i+n.m07*o+n.m11*r;return a=a?Math.abs(1/a):1,e.x=(n.m00*i+n.m04*o+n.m08*r)*a,e.y=(n.m01*i+n.m05*o+n.m09*r)*a,e.z=(n.m02*i+n.m06*o+n.m10*r)*a,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y,r=t.z;return e.x=i*n.m00+o*n.m03+r*n.m06,e.y=i*n.m01+o*n.m04+r*n.m07,e.z=i*n.m02+o*n.m05+r*n.m08,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,r=t.z;return e.x=n.m00*i+n.m04*o+n.m08*r+n.m12,e.y=n.m01*i+n.m05*o+n.m09*r+n.m13,e.x=n.m02*i+n.m06*o+n.m10*r+n.m14,e},t.transformQuat=function(e,t,n){var i=n.w*t.x+n.y*t.z-n.z*t.y,o=n.w*t.y+n.z*t.x-n.x*t.z,r=n.w*t.z+n.x*t.y-n.y*t.x,a=-n.x*t.x-n.y*t.y-n.z*t.z;return e.x=i*n.w+a*-n.x+o*-n.z-r*-n.y,e.y=o*n.w+a*-n.y+r*-n.x-i*-n.z,e.z=r*n.w+a*-n.z+i*-n.y-o*-n.x,e},t.transformRTS=function(e,t,n,i,o){var r=t.x*o.x,a=t.y*o.y,s=t.z*o.z,c=n.w*r+n.y*s-n.z*a,l=n.w*a+n.z*r-n.x*s,u=n.w*s+n.x*a-n.y*r,f=-n.x*r-n.y*a-n.z*s;return e.x=c*n.w+f*-n.x+l*-n.z-u*-n.y+i.x,e.y=l*n.w+f*-n.y+u*-n.x-c*-n.z+i.y,e.z=u*n.w+f*-n.z+c*-n.y-l*-n.x+i.z,e},t.transformInverseRTS=function(e,t,n,i,o){var r=t.x-i.x,a=t.y-i.y,s=t.z-i.z,c=n.w*r-n.y*s+n.z*a,l=n.w*a-n.z*r+n.x*s,u=n.w*s-n.x*a+n.y*r,f=n.x*r+n.y*a+n.z*s;return e.x=(c*n.w+f*n.x+l*n.z-u*n.y)/o.x,e.y=(l*n.w+f*n.y+u*n.x-c*n.z)/o.y,e.z=(u*n.w+f*n.z+c*n.y-l*n.x)/o.z,e},t.rotateX=function(e,t,n,i){var o=t.x-n.x,r=t.y-n.y,a=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=o,u=r*s-a*c,f=r*c+a*s;return e.x=l+n.x,e.y=u+n.y,e.z=f+n.z,e},t.rotateY=function(e,t,n,i){var o=t.x-n.x,r=t.y-n.y,a=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=a*c+o*s,u=r,f=a*s-o*c;return e.x=l+n.x,e.y=u+n.y,e.z=f+n.z,e},t.rotateZ=function(e,t,n,i){var o=t.x-n.x,r=t.y-n.y,a=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=o*s-r*c,u=o*c+r*s,f=a;return e.x=l+n.x,e.y=u+n.y,e.z=f+n.z,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z},t.equals=function(e,t,n){void 0===n&&(n=Jn);var i=e.x,o=e.y,r=e.z,a=t.x,s=t.y,c=t.z;return Math.abs(i-a)<=n*Math.max(1,Math.abs(i),Math.abs(a))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))&&Math.abs(r-c)<=n*Math.max(1,Math.abs(r),Math.abs(c))},t.angle=function(e,n){t.normalize(mi,e),t.normalize(pi,n);var i=t.dot(mi,pi);return i>1?0:i<-1?Math.PI:Math.acos(i)},t.projectOnPlane=function(e,n,i){return t.subtract(e,n,t.project(e,n,i))},t.project=function(e,n,i){var o=t.lengthSqr(i);return o<1e-6?t.set(e,0,0,0):t.multiplyScalar(e,i,t.dot(n,i)/o)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z)},n.set=function(e,t,n){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z):(this.x=e||0,this.y=t||0,this.z=n||0),this},n.equals=function(e,t){return void 0===t&&(t=Jn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))},n.equals3f=function(e,t,n,i){return void 0===i&&(i=Jn),Math.abs(this.x-e)<=i*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=i*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=i*Math.max(1,Math.abs(this.z),Math.abs(n))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z},n.strictEquals3f=function(e,t,n){return this.x===e&&this.y===t&&this.z===n},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+")"},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},n.add3f=function(e,t,n){return this.x+=e,this.y+=t,this.z+=n,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},n.subtract3f=function(e,t,n){return this.x-=e,this.y-=t,this.z-=n,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec3.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec3.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this},n.multiply3f=function(e,t,n){return this.x*=e,this.y*=t,this.z*=n,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},n.divide3f=function(e,t,n){return this.x/=e,this.y/=t,this.z/=n,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},n.clampf=function(e,t){return this.x=$n(this.x,e.x,t.x),this.y=$n(this.y,e.y,t.y),this.z=$n(this.z,e.z,t.z),this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,r=e.y,a=e.z;return this.x=n*a-i*r,this.y=i*o-t*a,this.z=t*r-n*o,this},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=e*e+t*t+n*n;return i>0&&(i=1/Math.sqrt(i),this.x=e*i,this.y=t*i,this.z=n*i),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=e.m03*t+e.m07*n+e.m11*i+e.m15;return o=o?1/o:1,this.x=(e.m00*t+e.m04*n+e.m08*i+e.m12)*o,this.y=(e.m01*t+e.m05*n+e.m09*i+e.m13)*o,this.z=(e.m02*t+e.m06*n+e.m10*i+e.m14)*o,this},t}(Tt));_i.UNIT_X=Object.freeze(new _i(1,0,0)),_i.UNIT_Y=Object.freeze(new _i(0,1,0)),_i.UNIT_Z=Object.freeze(new _i(0,0,1)),_i.RIGHT=Object.freeze(new _i(1,0,0)),_i.UP=Object.freeze(new _i(0,1,0)),_i.FORWARD=Object.freeze(new _i(0,0,-1)),_i.ZERO=Object.freeze(new _i(0,0,0)),_i.ONE=Object.freeze(new _i(1,1,1)),_i.NEG_ONE=Object.freeze(new _i(-1,-1,-1));var mi=new _i,pi=new _i;function hi(e,t,n){return new _i(e,t,n)}mn.fastDefine("cc.Vec3",_i,{x:0,y:0,z:0}),s.Vec3=_i,s.v3=hi;var di=e("cb",function(e){function t(t,n,i,o,r,a,s,c,l){var u;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=1),void 0===a&&(a=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=1),u=e.call(this)||this,"object"==typeof t?(u.m00=t.m00,u.m01=t.m01,u.m02=t.m02,u.m03=t.m03,u.m04=t.m04,u.m05=t.m05,u.m06=t.m06,u.m07=t.m07,u.m08=t.m08):(u.m00=t,u.m01=n,u.m02=i,u.m03=o,u.m04=r,u.m05=a,u.m06=s,u.m07=c,u.m08=l),u}Z(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.set=function(e,t,n,i,o,r,a,s,c,l){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=r,e.m05=a,e.m06=s,e.m07=c,e.m08=l,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m05;e.m01=t.m03,e.m02=t.m06,e.m03=n,e.m05=t.m07,e.m06=i,e.m07=o}else e.m00=t.m00,e.m01=t.m03,e.m02=t.m06,e.m03=t.m01,e.m04=t.m04,e.m05=t.m07,e.m06=t.m02,e.m07=t.m05,e.m08=t.m08;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,r=t.m03,a=t.m04,s=t.m05,c=t.m06,l=t.m07,u=t.m08,f=u*a-s*l,_=-u*r+s*c,m=l*r-a*c,p=n*f+i*_+o*m;return 0===p?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e):(p=1/p,e.m00=f*p,e.m01=(-u*i+o*l)*p,e.m02=(s*i-o*a)*p,e.m03=_*p,e.m04=(u*n-o*c)*p,e.m05=(-s*n+o*r)*p,e.m06=m*p,e.m07=(-l*n+i*c)*p,e.m08=(a*n-i*r)*p,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,r=e.m04,a=e.m05,s=e.m06,c=e.m07,l=e.m08;return t*(l*r-a*c)+n*(-l*o+a*s)+i*(c*o-r*s)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,r=t.m02,a=t.m03,s=t.m04,c=t.m05,l=t.m06,u=t.m07,f=t.m08,_=n.m00,m=n.m01,p=n.m02,h=n.m03,d=n.m04,v=n.m05,g=n.m06,y=n.m07,x=n.m08;return e.m00=_*i+m*a+p*l,e.m01=_*o+m*s+p*u,e.m02=_*r+m*c+p*f,e.m03=h*i+d*a+v*l,e.m04=h*o+d*s+v*u,e.m05=h*r+d*c+v*f,e.m06=g*i+y*a+x*l,e.m07=g*o+y*s+x*u,e.m08=g*r+y*c+x*f,e},t.multiplyMat4=function(e,t,n){var i=t.m00,o=t.m01,r=t.m02,a=t.m03,s=t.m04,c=t.m05,l=t.m06,u=t.m07,f=t.m08,_=n.m00,m=n.m01,p=n.m02,h=n.m04,d=n.m05,v=n.m06,g=n.m08,y=n.m09,x=n.m10;return e.m00=_*i+m*a+p*l,e.m01=_*o+m*s+p*u,e.m02=_*r+m*c+p*f,e.m03=h*i+d*a+v*l,e.m04=h*o+d*s+v*u,e.m05=h*r+d*c+v*f,e.m06=g*i+y*a+x*l,e.m07=g*o+y*s+x*u,e.m08=g*r+y*c+x*f,e},t.transform=function(e,t,n){var i=t.m00,o=t.m01,r=t.m02,a=t.m03,s=t.m04,c=t.m05,l=t.m06,u=t.m07,f=t.m08,_=n.x,m=n.y;return e.m00=i,e.m01=o,e.m02=r,e.m03=a,e.m04=s,e.m05=c,e.m06=_*i+m*a+l,e.m07=_*o+m*s+u,e.m08=_*r+m*c+f,e},t.scale=function(e,t,n){var i=n.x,o=n.y;return e.m00=i*t.m00,e.m01=i*t.m01,e.m02=i*t.m02,e.m03=o*t.m03,e.m04=o*t.m04,e.m05=o*t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.rotate=function(e,t,n){var i=t.m00,o=t.m01,r=t.m02,a=t.m03,s=t.m04,c=t.m05,l=t.m06,u=t.m07,f=t.m08,_=Math.sin(n),m=Math.cos(n);return e.m00=m*i+_*a,e.m01=m*o+_*s,e.m02=m*r+_*c,e.m03=m*a-_*i,e.m04=m*s-_*o,e.m05=m*c-_*r,e.m06=l,e.m07=u,e.m08=f,e},t.fromMat4=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m04,e.m04=t.m05,e.m05=t.m06,e.m06=t.m08,e.m07=t.m09,e.m08=t.m10,e},t.fromViewUp=function(e,n,i){return _i.lengthSqr(n)<Jn*Jn?(t.identity(e),e):(i=i||_i.UNIT_Y,_i.normalize(vi,_i.cross(vi,i,n)),_i.lengthSqr(vi)<Jn*Jn?(t.identity(e),e):(_i.cross(gi,n,vi),t.set(e,vi.x,vi.y,vi.z,gi.x,gi.y,gi.z,n.x,n.y,n.z),e))},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=t.x,e.m07=t.y,e.m08=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=t.y,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=-n,e.m04=i,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,r=t.w,a=n+n,s=i+i,c=o+o,l=n*a,u=i*a,f=i*s,_=o*a,m=o*s,p=o*c,h=r*a,d=r*s,v=r*c;return e.m00=1-f-p,e.m03=u-v,e.m06=_+d,e.m01=u+v,e.m04=1-l-p,e.m07=m-h,e.m02=_-d,e.m05=m+h,e.m08=1-l-f,e},t.inverseTransposeMat4=function(e,t){var n=t.m00,i=t.m01,o=t.m02,r=t.m03,a=t.m04,s=t.m05,c=t.m06,l=t.m07,u=t.m08,f=t.m09,_=t.m10,m=t.m11,p=t.m12,h=t.m13,d=t.m14,v=t.m15,g=n*s-i*a,y=n*c-o*a,x=n*l-r*a,S=i*c-o*s,C=i*l-r*s,T=o*l-r*c,E=u*h-f*p,b=u*d-_*p,A=u*v-m*p,P=f*d-_*h,w=f*v-m*h,I=_*v-m*d,R=g*I-y*w+x*P+S*A-C*b+T*E;return R?(R=1/R,e.m00=(s*I-c*w+l*P)*R,e.m01=(c*A-a*I-l*b)*R,e.m02=(a*w-s*A+l*E)*R,e.m03=(o*w-i*I-r*P)*R,e.m04=(n*I-o*A+r*b)*R,e.m05=(i*A-n*w-r*E)*R,e.m06=(h*T-d*C+v*S)*R,e.m07=(d*x-p*T-v*y)*R,e.m08=(p*C-h*x+v*g)*R,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=n.m00*i+t.m00,e.m01=n.m01*i+t.m01,e.m02=n.m02*i+t.m02,e.m03=n.m03*i+t.m03,e.m04=n.m04*i+t.m04,e.m05=n.m05*i+t.m05,e.m06=n.m06*i+t.m06,e.m07=n.m07*i+t.m07,e.m08=n.m08*i+t.m08,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08},t.equals=function(e,t,n){return void 0===n&&(n=Jn),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))};var n=t.prototype;return n.clone=function(){var e=this;return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},n.set=function(e,t,n,i,o,r,a,s,c){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=1),void 0===r&&(r=0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===c&&(c=1),"object"==typeof e?(this.m00=e.m00,this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08):(this.m00=e,this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=r,this.m06=a,this.m07=s,this.m08=c),this},n.equals=function(e,t){return void 0===t&&(t=Jn),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08},n.toString=function(){var e=this;return"[\n"+e.m00+", "+e.m01+", "+e.m02+",\n"+e.m03+",\n"+e.m04+", "+e.m05+",\n"+e.m06+", "+e.m07+",\n"+e.m08+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=1,this.m05=0,this.m06=0,this.m07=0,this.m08=1,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m05;return this.m01=this.m03,this.m02=this.m06,this.m03=e,this.m05=this.m07,this.m06=t,this.m07=n,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,r=this.m05,a=this.m06,s=this.m07,c=this.m08,l=c*o-r*s,u=-c*i+r*a,f=s*i-o*a,_=e*l+t*u+n*f;return 0===_?(this.set(0,0,0,0,0,0,0,0,0),this):(_=1/_,this.m00=l*_,this.m01=(-c*t+n*s)*_,this.m02=(r*t-n*o)*_,this.m03=u*_,this.m04=(c*e-n*a)*_,this.m05=(-r*e+n*i)*_,this.m06=f*_,this.m07=(-s*e+t*a)*_,this.m08=(o*e-t*i)*_,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,r=this.m05,a=this.m06,s=this.m07,c=this.m08;return e*(c*o-r*s)+t*(-c*i+r*a)+n*(s*i-o*a)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,r=this.m04,a=this.m05,s=this.m06,c=this.m07,l=this.m08,u=e.m00,f=e.m01,_=e.m02,m=e.m03,p=e.m04,h=e.m05,d=e.m06,v=e.m07,g=e.m08;return this.m00=u*t+f*o+_*s,this.m01=u*n+f*r+_*c,this.m02=u*i+f*a+_*l,this.m03=m*t+p*o+h*s,this.m04=m*n+p*r+h*c,this.m05=m*i+p*a+h*l,this.m06=d*t+v*o+g*s,this.m07=d*n+v*r+g*c,this.m08=d*i+v*a+g*l,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this},n.scale=function(e){var t=e.x,n=e.y;return this.m00=t*this.m00,this.m01=t*this.m01,this.m02=t*this.m02,this.m03=n*this.m03,this.m04=n*this.m04,this.m05=n*this.m05,this.m06=this.m06,this.m07=this.m07,this.m08=this.m08,this},n.rotate=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,r=this.m04,a=this.m05,s=this.m06,c=this.m07,l=this.m08,u=Math.sin(e),f=Math.cos(e);return this.m00=f*t+u*o,this.m01=f*n+u*r,this.m02=f*i+u*a,this.m03=f*o-u*t,this.m04=f*r-u*n,this.m05=f*a-u*i,this.m06=s,this.m07=c,this.m08=l,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,r=t+t,a=n+n,s=i+i,c=t*r,l=n*r,u=n*a,f=i*r,_=i*a,m=i*s,p=o*r,h=o*a,d=o*s;return this.m00=1-u-m,this.m03=l-d,this.m06=f+h,this.m01=l+d,this.m04=1-c-m,this.m07=_-p,this.m02=f-h,this.m05=_+p,this.m08=1-c-u,this},t}(Tt));di.IDENTITY=Object.freeze(new di);var vi=new _i,gi=new _i;mn.fastDefine("cc.Mat3",di,{m00:1,m01:0,m02:0,m03:0,m04:1,m05:0,m06:0,m07:0,m08:1}),s.Mat3=di;var yi=e("c9",function(e){function t(t,n,i,o){var r;return r=e.call(this)||this,t&&"object"==typeof t?(r.x=t.x,r.y=t.y,r.z=t.z,r.w=t.w):(r.x=t||0,r.y=n||0,r.z=i||0,r.w=null!=o?o:1),r}Z(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.identity=function(e){return e.x=0,e.y=0,e.z=0,e.w=1,e},t.rotationTo=function(e,n,i){var o=_i.dot(n,i);return o<-.999999?(_i.cross(Ci,_i.UNIT_X,n),Ci.length()<1e-6&&_i.cross(Ci,_i.UNIT_Y,n),_i.normalize(Ci,Ci),t.fromAxisAngle(e,Ci,Math.PI),e):o>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,e):(_i.cross(Ci,n,i),e.x=Ci.x,e.y=Ci.y,e.z=Ci.z,e.w=1+o,t.normalize(e,e))},t.getAxisAngle=function(e,t){var n=2*Math.acos(t.w),i=Math.sin(n/2);return 0!==i?(e.x=t.x/i,e.y=t.y/i,e.z=t.z/i):(e.x=1,e.y=0,e.z=0),n},t.multiply=function(e,t,n){var i=t.x*n.w+t.w*n.x+t.y*n.z-t.z*n.y,o=t.y*n.w+t.w*n.y+t.z*n.x-t.x*n.z,r=t.z*n.w+t.w*n.z+t.x*n.y-t.y*n.x,a=t.w*n.w-t.x*n.x-t.y*n.y-t.z*n.z;return e.x=i,e.y=o,e.z=r,e.w=a,e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.rotateX=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),r=t.x,a=t.y,s=t.z,c=t.w;return e.x=r*o+c*i,e.y=a*o+s*i,e.z=s*o-a*i,e.w=c*o-r*i,e},t.rotateY=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),r=t.x,a=t.y,s=t.z,c=t.w;return e.x=r*o-s*i,e.y=a*o+c*i,e.z=s*o+r*i,e.w=c*o-a*i,e},t.rotateZ=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),r=t.x,a=t.y,s=t.z,c=t.w;return e.x=r*o+a*i,e.y=a*o-r*i,e.z=s*o+c*i,e.w=c*o-s*i,e},t.rotateAround=function(e,n,i,o){return t.invert(xi,n),_i.transformQuat(Ci,i,xi),t.fromAxisAngle(xi,Ci,o),t.multiply(e,n,xi),e},t.rotateAroundLocal=function(e,n,i,o){return t.fromAxisAngle(xi,i,o),t.multiply(e,n,xi),e},t.calculateW=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=Math.sqrt(Math.abs(1-t.x*t.x-t.y*t.y-t.z*t.z)),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.slerp=function(e,t,n,i){var o=0,r=0,a=n.x,s=n.y,c=n.z,l=n.w,u=t.x*n.x+t.y*n.y+t.z*n.z+t.w*n.w;if(u<0&&(u=-u,a=-a,s=-s,c=-c,l=-l),1-u>1e-6){var f=Math.acos(u),_=Math.sin(f);o=Math.sin((1-i)*f)/_,r=Math.sin(i*f)/_}else o=1-i,r=i;return e.x=o*t.x+r*a,e.y=o*t.y+r*s,e.z=o*t.z+r*c,e.w=o*t.w+r*l,e},t.sqlerp=function(e,n,i,o,r,a){return t.slerp(xi,n,r,a),t.slerp(Si,i,o,a),t.slerp(e,xi,Si,2*a*(1-a)),e},t.invert=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w,i=n?1/n:0;return e.x=-t.x*i,e.y=-t.y*i,e.z=-t.z*i,e.w=t.w*i,e},t.conjugate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=t.w,e},t.len=function(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w)},t.lengthSqr=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},t.normalize=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;return n>0&&(n=1/Math.sqrt(n),e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n),e},t.fromAxes=function(e,n,i,o){return di.set(Ti,n.x,n.y,n.z,i.x,i.y,i.z,o.x,o.y,o.z),t.normalize(e,t.fromMat3(e,Ti))},t.fromViewUp=function(e,n,i){return di.fromViewUp(Ti,n,i),t.normalize(e,t.fromMat3(e,Ti))},t.fromAxisAngle=function(e,t,n){n*=.5;var i=Math.sin(n);return e.x=i*t.x,e.y=i*t.y,e.z=i*t.z,e.w=Math.cos(n),e},t.fromMat3=function(e,t){var n=t.m00,i=t.m03,o=t.m06,r=t.m01,a=t.m04,s=t.m07,c=t.m02,l=t.m05,u=t.m08,f=n+a+u;if(f>0){var _=.5/Math.sqrt(f+1);e.w=.25/_,e.x=(l-s)*_,e.y=(o-c)*_,e.z=(r-i)*_}else if(n>a&&n>u){var m=2*Math.sqrt(1+n-a-u);e.w=(l-s)/m,e.x=.25*m,e.y=(i+r)/m,e.z=(o+c)/m}else if(a>u){var p=2*Math.sqrt(1+a-n-u);e.w=(o-c)/p,e.x=(i+r)/p,e.y=.25*p,e.z=(s+l)/p}else{var h=2*Math.sqrt(1+u-n-a);e.w=(r-i)/h,e.x=(o+c)/h,e.y=(s+l)/h,e.z=.25*h}return e},t.fromEuler=function(e,t,n,i){t*=Ei,n*=Ei,i*=Ei;var o=Math.sin(t),r=Math.cos(t),a=Math.sin(n),s=Math.cos(n),c=Math.sin(i),l=Math.cos(i);return e.x=o*s*l+r*a*c,e.y=r*a*l+o*s*c,e.z=r*s*c-o*a*l,e.w=r*s*l-o*a*c,e},t.fromAngleZ=function(e,t){return t*=Ei,e.x=e.y=0,e.z=Math.sin(t),e.w=Math.cos(t),e},t.toAxisX=function(e,t){var n=2*t.y,i=2*t.z;return e.x=1-n*t.y-i*t.z,e.y=n*t.x+i*t.w,e.z=i*t.x+n*t.w,e},t.toAxisY=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=i*t.x-o*t.w,e.y=1-n*t.x-o*t.z,e.z=o*t.y+n*t.w,e},t.toAxisZ=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=o*t.x-i*t.w,e.y=o*t.y-n*t.w,e.z=1-n*t.x-i*t.y,e},t.toEuler=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=t.w,s=0,c=0,l=0,u=i*o+r*a;if(u>.499999)s=0,c=ti(2*Math.atan2(i,a)),l=90;else if(u<-.499999)s=0,c=-ti(2*Math.atan2(i,a)),l=-90;else{var f=i*i,_=o*o,m=r*r;s=ti(Math.atan2(2*i*a-2*o*r,1-2*f-2*m)),c=ti(Math.atan2(2*o*a-2*i*r,1-2*_-2*m)),l=ti(Math.asin(2*u)),n&&(s=-180*Math.sign(s+1e-6)+s,c=-180*Math.sign(c+1e-6)+c,l=180*Math.sign(l+1e-6)-l)}return e.x=s,e.y=c,e.z=l,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=Jn),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=null!=i?i:1),this},n.equals=function(e,t){return void 0===t&&(t=Jn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.getEulerAngles=function(e){return t.toEuler(e,this)},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this.w+=t*(e.w-this.w),this},n.slerp=function(e,n){return t.slerp(this,this,e,n)},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t}(Tt));yi.IDENTITY=Object.freeze(new yi);var xi=new yi,Si=new yi,Ci=new _i,Ti=new di,Ei=.5*Math.PI/180;function bi(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),new yi(e,t,n,i)}mn.fastDefine("cc.Quat",yi,{x:0,y:0,z:0,w:1}),s.Quat=yi,s.quat=bi;var Ai=e("e0",Object.freeze([Object.freeze([1,0,0,1]),Object.freeze([0,1,-1,0]),Object.freeze([-1,0,0,-1]),Object.freeze([0,-1,1,0])])),Pi=e("cc",function(e){function t(t,n,i,o,r,a,s,c,l,u,f,_,m,p,h,d){var v;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=0),void 0===a&&(a=1),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===u&&(u=0),void 0===f&&(f=1),void 0===_&&(_=0),void 0===m&&(m=0),void 0===p&&(p=0),void 0===h&&(h=0),void 0===d&&(d=1),(v=e.call(this)||this).m00=void 0,v.m01=void 0,v.m02=void 0,v.m03=void 0,v.m04=void 0,v.m05=void 0,v.m06=void 0,v.m07=void 0,v.m08=void 0,v.m09=void 0,v.m10=void 0,v.m11=void 0,v.m12=void 0,v.m13=void 0,v.m14=void 0,v.m15=void 0,"object"==typeof t?(v.m00=t.m00,v.m01=t.m01,v.m02=t.m02,v.m03=t.m03,v.m04=t.m04,v.m05=t.m05,v.m06=t.m06,v.m07=t.m07,v.m08=t.m08,v.m09=t.m09,v.m10=t.m10,v.m11=t.m11,v.m12=t.m12,v.m13=t.m13,v.m14=t.m14,v.m15=t.m15):(v.m00=t,v.m01=n,v.m02=i,v.m03=o,v.m04=r,v.m05=a,v.m06=s,v.m07=c,v.m08=l,v.m09=u,v.m10=f,v.m11=_,v.m12=m,v.m13=p,v.m14=h,v.m15=d),v}Z(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08,e.m09,e.m10,e.m11,e.m12,e.m13,e.m14,e.m15)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.set=function(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p,h,d){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=r,e.m05=a,e.m06=s,e.m07=c,e.m08=l,e.m09=u,e.m10=f,e.m11=_,e.m12=m,e.m13=p,e.m14=h,e.m15=d,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m03,r=t.m06,a=t.m07,s=t.m11;e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=n,e.m06=t.m09,e.m07=t.m13,e.m08=i,e.m09=r,e.m11=t.m14,e.m12=o,e.m13=a,e.m14=s}else e.m00=t.m00,e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=t.m01,e.m05=t.m05,e.m06=t.m09,e.m07=t.m13,e.m08=t.m02,e.m09=t.m06,e.m10=t.m10,e.m11=t.m14,e.m12=t.m03,e.m13=t.m07,e.m14=t.m11,e.m15=t.m15;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,r=t.m03,a=t.m04,s=t.m05,c=t.m06,l=t.m07,u=t.m08,f=t.m09,_=t.m10,m=t.m11,p=t.m12,h=t.m13,d=t.m14,v=t.m15,g=n*s-i*a,y=n*c-o*a,x=n*l-r*a,S=i*c-o*s,C=i*l-r*s,T=o*l-r*c,E=u*h-f*p,b=u*d-_*p,A=u*v-m*p,P=f*d-_*h,w=f*v-m*h,I=_*v-m*d,R=g*I-y*w+x*P+S*A-C*b+T*E;return 0===R?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=0,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=0,e):(R=1/R,e.m00=(s*I-c*w+l*P)*R,e.m01=(o*w-i*I-r*P)*R,e.m02=(h*T-d*C+v*S)*R,e.m03=(_*C-f*T-m*S)*R,e.m04=(c*A-a*I-l*b)*R,e.m05=(n*I-o*A+r*b)*R,e.m06=(d*x-p*T-v*y)*R,e.m07=(u*T-_*x+m*y)*R,e.m08=(a*w-s*A+l*E)*R,e.m09=(i*A-n*w-r*E)*R,e.m10=(p*C-h*x+v*g)*R,e.m11=(f*x-u*C-m*g)*R,e.m12=(s*b-a*P-c*E)*R,e.m13=(n*P-i*b+o*E)*R,e.m14=(h*y-p*S-d*g)*R,e.m15=(u*S-f*y+_*g)*R,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,r=e.m04,a=e.m05,s=e.m06,c=e.m07,l=e.m08,u=e.m09,f=e.m10,_=e.m11,m=e.m12,p=e.m13,h=e.m14,d=e.m15;return(t*a-n*r)*(f*d-_*h)-(t*s-i*r)*(u*d-_*p)+(t*c-o*r)*(u*h-f*p)+(n*s-i*a)*(l*d-_*m)-(n*c-o*a)*(l*h-f*m)+(i*c-o*s)*(l*p-u*m)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,r=t.m02,a=t.m03,s=t.m04,c=t.m05,l=t.m06,u=t.m07,f=t.m08,_=t.m09,m=t.m10,p=t.m11,h=t.m12,d=t.m13,v=t.m14,g=t.m15,y=n.m00,x=n.m01,S=n.m02,C=n.m03;return e.m00=y*i+x*s+S*f+C*h,e.m01=y*o+x*c+S*_+C*d,e.m02=y*r+x*l+S*m+C*v,e.m03=y*a+x*u+S*p+C*g,y=n.m04,x=n.m05,S=n.m06,C=n.m07,e.m04=y*i+x*s+S*f+C*h,e.m05=y*o+x*c+S*_+C*d,e.m06=y*r+x*l+S*m+C*v,e.m07=y*a+x*u+S*p+C*g,y=n.m08,x=n.m09,S=n.m10,C=n.m11,e.m08=y*i+x*s+S*f+C*h,e.m09=y*o+x*c+S*_+C*d,e.m10=y*r+x*l+S*m+C*v,e.m11=y*a+x*u+S*p+C*g,y=n.m12,x=n.m13,S=n.m14,C=n.m15,e.m12=y*i+x*s+S*f+C*h,e.m13=y*o+x*c+S*_+C*d,e.m14=y*r+x*l+S*m+C*v,e.m15=y*a+x*u+S*p+C*g,e},t.transform=function(e,t,n){var i=n.x,o=n.y,r=n.z;if(t===e)e.m12=t.m00*i+t.m04*o+t.m08*r+t.m12,e.m13=t.m01*i+t.m05*o+t.m09*r+t.m13,e.m14=t.m02*i+t.m06*o+t.m10*r+t.m14,e.m15=t.m03*i+t.m07*o+t.m11*r+t.m15;else{var a=t.m00,s=t.m01,c=t.m02,l=t.m03,u=t.m04,f=t.m05,_=t.m06,m=t.m07,p=t.m08,h=t.m09,d=t.m10,v=t.m11;t.m12,t.m13,t.m14,t.m15,e.m00=a,e.m01=s,e.m02=c,e.m03=l,e.m04=u,e.m05=f,e.m06=_,e.m07=m,e.m08=p,e.m09=h,e.m10=d,e.m11=v,e.m12=a*i+u*o+p*r+t.m12,e.m13=s*i+f*o+h*r+t.m13,e.m14=c*i+_*o+d*r+t.m14,e.m15=l*i+m*o+v*r+t.m15}return e},t.translate=function(e,t,n){return console.warn("function changed"),t===e?(e.m12+=n.x,e.m13+=n.y,e.m14+=n.z):(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12+=n.x,e.m13+=n.y,e.m14+=n.z,e.m15=t.m15),e},t.scale=function(e,t,n){var i=n.x,o=n.y,r=n.z;return e.m00=t.m00*i,e.m01=t.m01*i,e.m02=t.m02*i,e.m03=t.m03*i,e.m04=t.m04*o,e.m05=t.m05*o,e.m06=t.m06*o,e.m07=t.m07*o,e.m08=t.m08*r,e.m09=t.m09*r,e.m10=t.m10*r,e.m11=t.m11*r,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.rotate=function(e,t,n,i){var o=i.x,r=i.y,a=i.z,s=Math.sqrt(o*o+r*r+a*a);if(Math.abs(s)<Jn)return null;o*=s=1/s,r*=s,a*=s;var c=Math.sin(n),l=Math.cos(n),u=1-l,f=t.m00,_=t.m01,m=t.m02,p=t.m03,h=t.m04,d=t.m05,v=t.m06,g=t.m07,y=t.m08,x=t.m09,S=t.m10,C=t.m11,T=o*o*u+l,E=r*o*u+a*c,b=a*o*u-r*c,A=o*r*u-a*c,P=r*r*u+l,w=a*r*u+o*c,I=o*a*u+r*c,R=r*a*u-o*c,N=a*a*u+l;return e.m00=f*T+h*E+y*b,e.m01=_*T+d*E+x*b,e.m02=m*T+v*E+S*b,e.m03=p*T+g*E+C*b,e.m04=f*A+h*P+y*w,e.m05=_*A+d*P+x*w,e.m06=m*A+v*P+S*w,e.m07=p*A+g*P+C*w,e.m08=f*I+h*R+y*N,e.m09=_*I+d*R+x*N,e.m10=m*I+v*R+S*N,e.m11=p*I+g*R+C*N,t!==e&&(e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e},t.rotateX=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),r=t.m04,a=t.m05,s=t.m06,c=t.m07,l=t.m08,u=t.m09,f=t.m10,_=t.m11;return t!==e&&(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m04=r*o+l*i,e.m05=a*o+u*i,e.m06=s*o+f*i,e.m07=c*o+_*i,e.m08=l*o-r*i,e.m09=u*o-a*i,e.m10=f*o-s*i,e.m11=_*o-c*i,e},t.rotateY=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),r=t.m00,a=t.m01,s=t.m02,c=t.m03,l=t.m08,u=t.m09,f=t.m10,_=t.m11;return t!==e&&(e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=r*o-l*i,e.m01=a*o-u*i,e.m02=s*o-f*i,e.m03=c*o-_*i,e.m08=r*i+l*o,e.m09=a*i+u*o,e.m10=s*i+f*o,e.m11=c*i+_*o,e},t.rotateZ=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),r=t.m00,a=t.m01,s=t.m02,c=t.m03,l=t.m04,u=t.m05,f=t.m06,_=t.m07;return t!==e&&(e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=r*o+l*i,e.m01=a*o+u*i,e.m02=s*o+f*i,e.m03=c*o+_*i,e.m04=l*o-r*i,e.m05=u*o-a*i,e.m06=f*o-s*i,e.m07=_*o-c*i,e},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=t.x,e.m13=t.y,e.m14=t.z,e.m15=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=t.y,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=t.z,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRotation=function(e,t,n){var i=n.x,o=n.y,r=n.z,a=Math.sqrt(i*i+o*o+r*r);if(Math.abs(a)<Jn)return null;i*=a=1/a,o*=a,r*=a;var s=Math.sin(t),c=Math.cos(t),l=1-c;return e.m00=i*i*l+c,e.m01=o*i*l+r*s,e.m02=r*i*l-o*s,e.m03=0,e.m04=i*o*l-r*s,e.m05=o*o*l+c,e.m06=r*o*l+i*s,e.m07=0,e.m08=i*r*l+o*s,e.m09=o*r*l-i*s,e.m10=r*r*l+c,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromXRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=i,e.m06=n,e.m07=0,e.m08=0,e.m09=-n,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromYRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=0,e.m02=-n,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=n,e.m09=0,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromZRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=0,e.m04=-n,e.m05=i,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRT=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=t.w,s=i+i,c=o+o,l=r+r,u=i*s,f=i*c,_=i*l,m=o*c,p=o*l,h=r*l,d=a*s,v=a*c,g=a*l;return e.m00=1-(m+h),e.m01=f+g,e.m02=_-v,e.m03=0,e.m04=f-g,e.m05=1-(u+h),e.m06=p+d,e.m07=0,e.m08=_+v,e.m09=p-d,e.m10=1-(u+m),e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.getTranslation=function(e,t){return e.x=t.m12,e.y=t.m13,e.z=t.m14,e},t.getScaling=function(e,t){var n=Ii.m00=t.m00,i=Ii.m01=t.m01,o=Ii.m02=t.m02,r=Ii.m03=t.m04,a=Ii.m04=t.m05,s=Ii.m05=t.m06,c=Ii.m06=t.m08,l=Ii.m07=t.m09,u=Ii.m08=t.m10;return e.x=Math.sqrt(n*n+i*i+o*o),e.y=Math.sqrt(r*r+a*a+s*s),e.z=Math.sqrt(c*c+l*l+u*u),di.determinant(Ii)<0&&(e.x*=-1),e},t.getRotation=function(e,t){var n=t.m00+t.m05+t.m10,i=0;return n>0?(i=2*Math.sqrt(n+1),e.w=.25*i,e.x=(t.m06-t.m09)/i,e.y=(t.m08-t.m02)/i,e.z=(t.m01-t.m04)/i):t.m00>t.m05&&t.m00>t.m10?(i=2*Math.sqrt(1+t.m00-t.m05-t.m10),e.w=(t.m06-t.m09)/i,e.x=.25*i,e.y=(t.m01+t.m04)/i,e.z=(t.m08+t.m02)/i):t.m05>t.m10?(i=2*Math.sqrt(1+t.m05-t.m00-t.m10),e.w=(t.m08-t.m02)/i,e.x=(t.m01+t.m04)/i,e.y=.25*i,e.z=(t.m06+t.m09)/i):(i=2*Math.sqrt(1+t.m10-t.m00-t.m05),e.w=(t.m01-t.m04)/i,e.x=(t.m08+t.m02)/i,e.y=(t.m06+t.m09)/i,e.z=.25*i),e},t.toRTS=function(e,t,n,i){i.x=_i.set(wi,e.m00,e.m01,e.m02).length(),Ii.m00=e.m00/i.x,Ii.m01=e.m01/i.x,Ii.m02=e.m02/i.x,i.y=_i.set(wi,e.m04,e.m05,e.m06).length(),Ii.m03=e.m04/i.y,Ii.m04=e.m05/i.y,Ii.m05=e.m06/i.y,i.z=_i.set(wi,e.m08,e.m09,e.m10).length(),Ii.m06=e.m08/i.z,Ii.m07=e.m09/i.z,Ii.m08=e.m10/i.z,di.determinant(Ii)<0&&(i.x*=-1,Ii.m00*=-1,Ii.m01*=-1,Ii.m02*=-1),yi.fromMat3(t,Ii),_i.set(n,e.m12,e.m13,e.m14)},t.fromRTS=function(e,t,n,i){var o=t.x,r=t.y,a=t.z,s=t.w,c=o+o,l=r+r,u=a+a,f=o*c,_=o*l,m=o*u,p=r*l,h=r*u,d=a*u,v=s*c,g=s*l,y=s*u,x=i.x,S=i.y,C=i.z;return e.m00=(1-(p+d))*x,e.m01=(_+y)*x,e.m02=(m-g)*x,e.m03=0,e.m04=(_-y)*S,e.m05=(1-(f+d))*S,e.m06=(h+v)*S,e.m07=0,e.m08=(m+g)*C,e.m09=(h-v)*C,e.m10=(1-(f+p))*C,e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.fromRTSOrigin=function(e,t,n,i,o){var r=t.x,a=t.y,s=t.z,c=t.w,l=r+r,u=a+a,f=s+s,_=r*l,m=r*u,p=r*f,h=a*u,d=a*f,v=s*f,g=c*l,y=c*u,x=c*f,S=i.x,C=i.y,T=i.z,E=o.x,b=o.y,A=o.z;return e.m00=(1-(h+v))*S,e.m01=(m+x)*S,e.m02=(p-y)*S,e.m03=0,e.m04=(m-x)*C,e.m05=(1-(_+v))*C,e.m06=(d+g)*C,e.m07=0,e.m08=(p+y)*T,e.m09=(d-g)*T,e.m10=(1-(_+h))*T,e.m11=0,e.m12=n.x+E-(e.m00*E+e.m04*b+e.m08*A),e.m13=n.y+b-(e.m01*E+e.m05*b+e.m09*A),e.m14=n.z+A-(e.m02*E+e.m06*b+e.m10*A),e.m15=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,r=t.w,a=n+n,s=i+i,c=o+o,l=n*a,u=i*a,f=i*s,_=o*a,m=o*s,p=o*c,h=r*a,d=r*s,v=r*c;return e.m00=1-f-p,e.m01=u+v,e.m02=_-d,e.m03=0,e.m04=u-v,e.m05=1-l-p,e.m06=m+h,e.m07=0,e.m08=_+d,e.m09=m-h,e.m10=1-l-f,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.frustum=function(e,t,n,i,o,r,a){var s=1/(n-t),c=1/(o-i),l=1/(r-a);return e.m00=2*r*s,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=2*r*c,e.m06=0,e.m07=0,e.m08=(n+t)*s,e.m09=(o+i)*c,e.m10=(a+r)*l,e.m11=-1,e.m12=0,e.m13=0,e.m14=a*r*2*l,e.m15=0,e},t.perspective=function(e,t,n,i,o,r,a,s,c){void 0===r&&(r=!0),void 0===a&&(a=-1),void 0===s&&(s=1),void 0===c&&(c=0);var l=1/Math.tan(t/2),u=1/(i-o),f=r?l/n:l,_=(r?l:l*n)*s,m=Ai[c];return e.m00=f*m[0],e.m01=f*m[1],e.m02=0,e.m03=0,e.m04=_*m[2],e.m05=_*m[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=(o-a*i)*u,e.m11=-1,e.m12=0,e.m13=0,e.m14=o*i*u*(1-a),e.m15=0,e},t.ortho=function(e,t,n,i,o,r,a,s,c,l){void 0===s&&(s=-1),void 0===c&&(c=1),void 0===l&&(l=0);var u=1/(t-n),f=1/(i-o)*c,_=1/(r-a),m=-2*u,p=-2*f,h=(t+n)*u,d=(o+i)*f,v=Ai[l];return e.m00=m*v[0],e.m01=m*v[1],e.m02=0,e.m03=0,e.m04=p*v[2],e.m05=p*v[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=_*(1-s),e.m11=0,e.m12=h*v[0]+d*v[2],e.m13=h*v[1]+d*v[3],e.m14=(r-s*a)*_,e.m15=1,e},t.lookAt=function(e,t,n,i){var o=t.x,r=t.y,a=t.z,s=i.x,c=i.y,l=i.z,u=o-n.x,f=r-n.y,_=a-n.z,m=1/Math.sqrt(u*u+f*f+_*_),p=c*(_*=m)-l*(f*=m),h=l*(u*=m)-s*_,d=s*f-c*u,v=f*(d*=m=1/Math.sqrt(p*p+h*h+d*d))-_*(h*=m),g=_*(p*=m)-u*d,y=u*h-f*p;return e.m00=p,e.m01=v,e.m02=u,e.m03=0,e.m04=h,e.m05=g,e.m06=f,e.m07=0,e.m08=d,e.m09=y,e.m10=_,e.m11=0,e.m12=-(p*o+h*r+d*a),e.m13=-(v*o+g*r+y*a),e.m14=-(u*o+f*r+_*a),e.m15=1,e},t.inverseTranspose=function(e,t){var n=t.m00,i=t.m01,o=t.m02,r=t.m03,a=t.m04,s=t.m05,c=t.m06,l=t.m07,u=t.m08,f=t.m09,_=t.m10,m=t.m11,p=t.m12,h=t.m13,d=t.m14,v=t.m15,g=n*s-i*a,y=n*c-o*a,x=n*l-r*a,S=i*c-o*s,C=i*l-r*s,T=o*l-r*c,E=u*h-f*p,b=u*d-_*p,A=u*v-m*p,P=f*d-_*h,w=f*v-m*h,I=_*v-m*d,R=g*I-y*w+x*P+S*A-C*b+T*E;return R?(R=1/R,e.m00=(s*I-c*w+l*P)*R,e.m01=(c*A-a*I-l*b)*R,e.m02=(a*w-s*A+l*E)*R,e.m03=0,e.m04=(o*w-i*I-r*P)*R,e.m05=(n*I-o*A+r*b)*R,e.m06=(i*A-n*w-r*E)*R,e.m07=0,e.m08=(h*T-d*C+v*S)*R,e.m09=(d*x-p*T-v*y)*R,e.m10=(p*C-h*x+v*g)*R,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e[n+9]=t.m09,e[n+10]=t.m10,e[n+11]=t.m11,e[n+12]=t.m12,e[n+13]=t.m13,e[n+14]=t.m14,e[n+15]=t.m15,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e.m09=t[n+9],e.m10=t[n+10],e.m11=t[n+11],e.m12=t[n+12],e.m13=t[n+13],e.m14=t[n+14],e.m15=t[n+15],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e.m09=t.m09+n.m09,e.m10=t.m10+n.m10,e.m11=t.m11+n.m11,e.m12=t.m12+n.m12,e.m13=t.m13+n.m13,e.m14=t.m14+n.m14,e.m15=t.m15+n.m15,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e.m09=t.m09-n.m09,e.m10=t.m10-n.m10,e.m11=t.m11-n.m11,e.m12=t.m12-n.m12,e.m13=t.m13-n.m13,e.m14=t.m14-n.m14,e.m15=t.m15-n.m15,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e.m09=t.m09*n,e.m10=t.m10*n,e.m11=t.m11*n,e.m12=t.m12*n,e.m13=t.m13*n,e.m14=t.m14*n,e.m15=t.m15*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=t.m00+n.m00*i,e.m01=t.m01+n.m01*i,e.m02=t.m02+n.m02*i,e.m03=t.m03+n.m03*i,e.m04=t.m04+n.m04*i,e.m05=t.m05+n.m05*i,e.m06=t.m06+n.m06*i,e.m07=t.m07+n.m07*i,e.m08=t.m08+n.m08*i,e.m09=t.m09+n.m09*i,e.m10=t.m10+n.m10*i,e.m11=t.m11+n.m11*i,e.m12=t.m12+n.m12*i,e.m13=t.m13+n.m13*i,e.m14=t.m14+n.m14*i,e.m15=t.m15+n.m15*i,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08&&e.m09===t.m09&&e.m10===t.m10&&e.m11===t.m11&&e.m12===t.m12&&e.m13===t.m13&&e.m14===t.m14&&e.m15===t.m15},t.equals=function(e,t,n){return void 0===n&&(n=Jn),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))&&Math.abs(e.m09-t.m09)<=n*Math.max(1,Math.abs(e.m09),Math.abs(t.m09))&&Math.abs(e.m10-t.m10)<=n*Math.max(1,Math.abs(e.m10),Math.abs(t.m10))&&Math.abs(e.m11-t.m11)<=n*Math.max(1,Math.abs(e.m11),Math.abs(t.m11))&&Math.abs(e.m12-t.m12)<=n*Math.max(1,Math.abs(e.m12),Math.abs(t.m12))&&Math.abs(e.m13-t.m13)<=n*Math.max(1,Math.abs(e.m13),Math.abs(t.m13))&&Math.abs(e.m14-t.m14)<=n*Math.max(1,Math.abs(e.m14),Math.abs(t.m14))&&Math.abs(e.m15-t.m15)<=n*Math.max(1,Math.abs(e.m15),Math.abs(t.m15))};var n=t.prototype;return n.clone=function(){return new t(this.m00,this.m01,this.m02,this.m03,this.m04,this.m05,this.m06,this.m07,this.m08,this.m09,this.m10,this.m11,this.m12,this.m13,this.m14,this.m15)},n.set=function(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p,h){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=1),void 0===a&&(a=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===u&&(u=1),void 0===f&&(f=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===p&&(p=0),void 0===h&&(h=1),"object"==typeof e?(this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08,this.m09=e.m09,this.m10=e.m10,this.m11=e.m11,this.m12=e.m12,this.m13=e.m13,this.m14=e.m14,this.m15=e.m15,this.m00=e.m00):(this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=r,this.m06=a,this.m07=s,this.m08=c,this.m09=l,this.m10=u,this.m11=f,this.m12=_,this.m13=m,this.m14=p,this.m15=h,this.m00=e),this},n.equals=function(e,t){return void 0===t&&(t=Jn),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))&&Math.abs(this.m09-e.m09)<=t*Math.max(1,Math.abs(this.m09),Math.abs(e.m09))&&Math.abs(this.m10-e.m10)<=t*Math.max(1,Math.abs(this.m10),Math.abs(e.m10))&&Math.abs(this.m11-e.m11)<=t*Math.max(1,Math.abs(this.m11),Math.abs(e.m11))&&Math.abs(this.m12-e.m12)<=t*Math.max(1,Math.abs(this.m12),Math.abs(e.m12))&&Math.abs(this.m13-e.m13)<=t*Math.max(1,Math.abs(this.m13),Math.abs(e.m13))&&Math.abs(this.m14-e.m14)<=t*Math.max(1,Math.abs(this.m14),Math.abs(e.m14))&&Math.abs(this.m15-e.m15)<=t*Math.max(1,Math.abs(this.m15),Math.abs(e.m15))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08&&this.m09===e.m09&&this.m10===e.m10&&this.m11===e.m11&&this.m12===e.m12&&this.m13===e.m13&&this.m14===e.m14&&this.m15===e.m15},n.toString=function(){return"[\n"+this.m00+", "+this.m01+", "+this.m02+", "+this.m03+",\n"+this.m04+", "+this.m05+", "+this.m06+", "+this.m07+",\n"+this.m08+", "+this.m09+", "+this.m10+", "+this.m11+",\n"+this.m12+", "+this.m13+", "+this.m14+", "+this.m15+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=1,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=1,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},n.zero=function(){return this.m00=0,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=0,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=0,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=0,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m03,i=this.m06,o=this.m07,r=this.m11;return this.m01=this.m04,this.m02=this.m08,this.m03=this.m12,this.m04=e,this.m06=this.m09,this.m07=this.m13,this.m08=t,this.m09=i,this.m11=this.m14,this.m12=n,this.m13=o,this.m14=r,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,r=this.m05,a=this.m06,s=this.m07,c=this.m08,l=this.m09,u=this.m10,f=this.m11,_=this.m12,m=this.m13,p=this.m14,h=this.m15,d=e*r-t*o,v=e*a-n*o,g=e*s-i*o,y=t*a-n*r,x=t*s-i*r,S=n*s-i*a,C=c*m-l*_,T=c*p-u*_,E=c*h-f*_,b=l*p-u*m,A=l*h-f*m,P=u*h-f*p,w=d*P-v*A+g*b+y*E-x*T+S*C;return 0===w?(this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this):(w=1/w,this.m00=(r*P-a*A+s*b)*w,this.m01=(n*A-t*P-i*b)*w,this.m02=(m*S-p*x+h*y)*w,this.m03=(u*x-l*S-f*y)*w,this.m04=(a*E-o*P-s*T)*w,this.m05=(e*P-n*E+i*T)*w,this.m06=(p*g-_*S-h*v)*w,this.m07=(c*S-u*g+f*v)*w,this.m08=(o*A-r*E+s*C)*w,this.m09=(t*E-e*A-i*C)*w,this.m10=(_*x-m*g+h*d)*w,this.m11=(l*g-c*x-f*d)*w,this.m12=(r*T-o*b-a*C)*w,this.m13=(e*b-t*T+n*C)*w,this.m14=(m*v-_*y-p*d)*w,this.m15=(c*y-l*v+u*d)*w,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,r=this.m05,a=this.m06,s=this.m07,c=this.m08,l=this.m09,u=this.m10,f=this.m11,_=this.m12,m=this.m13,p=this.m14,h=this.m15;return(e*r-t*o)*(u*h-f*p)-(e*a-n*o)*(l*h-f*m)+(e*s-i*o)*(l*p-u*m)+(t*a-n*r)*(c*h-f*_)-(t*s-i*r)*(c*p-u*_)+(n*s-i*a)*(c*m-l*_)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this.m09+=e.m09,this.m10+=e.m10,this.m11+=e.m11,this.m12+=e.m12,this.m13+=e.m13,this.m14+=e.m14,this.m15+=e.m15,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this.m09-=e.m09,this.m10-=e.m10,this.m11-=e.m11,this.m12-=e.m12,this.m13-=e.m13,this.m14-=e.m14,this.m15-=e.m15,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,r=this.m04,a=this.m05,s=this.m06,c=this.m07,l=this.m08,u=this.m09,f=this.m10,_=this.m11,m=this.m12,p=this.m13,h=this.m14,d=this.m15,v=e.m00,g=e.m01,y=e.m02,x=e.m03;return this.m00=v*t+g*r+y*l+x*m,this.m01=v*n+g*a+y*u+x*p,this.m02=v*i+g*s+y*f+x*h,this.m03=v*o+g*c+y*_+x*d,v=e.m04,g=e.m05,y=e.m06,x=e.m07,this.m04=v*t+g*r+y*l+x*m,this.m05=v*n+g*a+y*u+x*p,this.m06=v*i+g*s+y*f+x*h,this.m07=v*o+g*c+y*_+x*d,v=e.m08,g=e.m09,y=e.m10,x=e.m11,this.m08=v*t+g*r+y*l+x*m,this.m09=v*n+g*a+y*u+x*p,this.m10=v*i+g*s+y*f+x*h,this.m11=v*o+g*c+y*_+x*d,v=e.m12,g=e.m13,y=e.m14,x=e.m15,this.m12=v*t+g*r+y*l+x*m,this.m13=v*n+g*a+y*u+x*p,this.m14=v*i+g*s+y*f+x*h,this.m15=v*o+g*c+y*_+x*d,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this.m09*=e,this.m10*=e,this.m11*=e,this.m12*=e,this.m13*=e,this.m14*=e,this.m15*=e,this},n.translate=function(e){return console.warn("function changed"),this.m12+=e.x,this.m13+=e.y,this.m14+=e.z,this},n.scale=function(e){var t=e.x,n=e.y,i=e.z;return this.m00*=t,this.m01*=t,this.m02*=t,this.m03*=t,this.m04*=n,this.m05*=n,this.m06*=n,this.m07*=n,this.m08*=i,this.m09*=i,this.m10*=i,this.m11*=i,this},n.rotate=function(e,t){var n=t.x,i=t.y,o=t.z,r=Math.sqrt(n*n+i*i+o*o);if(Math.abs(r)<Jn)return null;n*=r=1/r,i*=r,o*=r;var a=Math.sin(e),s=Math.cos(e),c=1-s,l=this.m00,u=this.m01,f=this.m02,_=this.m03,m=this.m04,p=this.m05,h=this.m06,d=this.m07,v=this.m08,g=this.m09,y=this.m10,x=this.m11,S=n*n*c+s,C=i*n*c+o*a,T=o*n*c-i*a,E=n*i*c-o*a,b=i*i*c+s,A=o*i*c+n*a,P=n*o*c+i*a,w=i*o*c-n*a,I=o*o*c+s;return this.m00=l*S+m*C+v*T,this.m01=u*S+p*C+g*T,this.m02=f*S+h*C+y*T,this.m03=_*S+d*C+x*T,this.m04=l*E+m*b+v*A,this.m05=u*E+p*b+g*A,this.m06=f*E+h*b+y*A,this.m07=_*E+d*b+x*A,this.m08=l*P+m*w+v*I,this.m09=u*P+p*w+g*I,this.m10=f*P+h*w+y*I,this.m11=_*P+d*w+x*I,this},n.getTranslation=function(e){return e.x=this.m12,e.y=this.m13,e.z=this.m14,e},n.getScale=function(e){var t=Ii.m00=this.m00,n=Ii.m01=this.m01,i=Ii.m02=this.m02,o=Ii.m03=this.m04,r=Ii.m04=this.m05,a=Ii.m05=this.m06,s=Ii.m06=this.m08,c=Ii.m07=this.m09,l=Ii.m08=this.m10;return e.x=Math.sqrt(t*t+n*n+i*i),e.y=Math.sqrt(o*o+r*r+a*a),e.z=Math.sqrt(s*s+c*c+l*l),di.determinant(Ii)<0&&(e.x*=-1),e},n.getRotation=function(e){var t=this.m00+this.m05+this.m10,n=0;return t>0?(n=2*Math.sqrt(t+1),e.w=.25*n,e.x=(this.m06-this.m09)/n,e.y=(this.m08-this.m02)/n,e.z=(this.m01-this.m04)/n):this.m00>this.m05&&this.m00>this.m10?(n=2*Math.sqrt(1+this.m00-this.m05-this.m10),e.w=(this.m06-this.m09)/n,e.x=.25*n,e.y=(this.m01+this.m04)/n,e.z=(this.m08+this.m02)/n):this.m05>this.m10?(n=2*Math.sqrt(1+this.m05-this.m00-this.m10),e.w=(this.m08-this.m02)/n,e.x=(this.m01+this.m04)/n,e.y=.25*n,e.z=(this.m06+this.m09)/n):(n=2*Math.sqrt(1+this.m10-this.m00-this.m05),e.w=(this.m01-this.m04)/n,e.x=(this.m08+this.m02)/n,e.y=(this.m06+this.m09)/n,e.z=.25*n),e},n.fromRTS=function(e,t,n){var i=e.x,o=e.y,r=e.z,a=e.w,s=i+i,c=o+o,l=r+r,u=i*s,f=i*c,_=i*l,m=o*c,p=o*l,h=r*l,d=a*s,v=a*c,g=a*l,y=n.x,x=n.y,S=n.z;return this.m00=(1-(m+h))*y,this.m01=(f+g)*y,this.m02=(_-v)*y,this.m03=0,this.m04=(f-g)*x,this.m05=(1-(u+h))*x,this.m06=(p+d)*x,this.m07=0,this.m08=(_+v)*S,this.m09=(p-d)*S,this.m10=(1-(u+m))*S,this.m11=0,this.m12=t.x,this.m13=t.y,this.m14=t.z,this.m15=1,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,r=t+t,a=n+n,s=i+i,c=t*r,l=n*r,u=n*a,f=i*r,_=i*a,m=i*s,p=o*r,h=o*a,d=o*s;return this.m00=1-u-m,this.m01=l+d,this.m02=f-h,this.m03=0,this.m04=l-d,this.m05=1-c-m,this.m06=_+p,this.m07=0,this.m08=f+h,this.m09=_-p,this.m10=1-c-u,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},t}(Tt));Pi.IDENTITY=Object.freeze(new Pi);var wi=new _i,Ii=new di;function Ri(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p,h){return new Pi(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p,h)}mn.fastDefine("cc.Mat4",Pi,{m00:1,m01:0,m02:0,m03:0,m04:0,m05:1,m06:0,m07:0,m08:0,m09:0,m10:1,m11:0,m12:0,m13:0,m14:0,m15:1}),s.Mat4=Pi,s.mat4=Ri;var Ni=e("c3",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.x=t.x,i.y=t.y):(i.x=t||0,i.y=n||0),i}Z(t,e),t.clone=function(e){return new t(e.x,e.y)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e},t.set=function(e,t,n){return e.x=t,e.y=n,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return n*n+i*i},t.len=function(e){var t=e.x,n=e.y;return Math.sqrt(t*t+n*n)},t.lengthSqr=function(e){var t=e.x,n=e.y;return t*t+n*n},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y;return Math.abs(n)<Jn?e.x=0:e.x=1/n,Math.abs(i)<Jn?e.y=0:e.y=1/i,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=n*n+i*i;return o>0&&(o=1/Math.sqrt(o),e.x=n*o,e.y=i*o),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y},t.cross=function(e,t,n){return e.x=e.y=0,e.z=t.x*n.y-t.y*n.x,e},t.lerp=function(e,t,n,i){var o=t.x,r=t.y;return e.x=o+i*(n.x-o),e.y=r+i*(n.y-r),e},t.random=function(e,t){t=t||1;var n=2*ni()*Math.PI;return e.x=Math.cos(n)*t,e.y=Math.sin(n)*t,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m03*o+n.m06,e.y=n.m01*i+n.m04*o+n.m07,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m04*o+n.m12,e.y=n.m01*i+n.m05*o+n.m13,e},t.str=function(e){return"Vec2("+e.x+", "+e.y+")"},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y},t.equals=function(e,t,n){return void 0===n&&(n=Jn),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))},t.angle=function(e,n){t.normalize(Mi,e),t.normalize(Oi,n);var i=t.dot(Mi,Oi);return i>1?0:i<-1?Math.PI:Math.acos(i)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y)},n.set=function(e,t){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0),this},n.equals=function(e,t){return void 0===t&&(t=Jn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))},n.equals2f=function(e,t,n){return void 0===n&&(n=Jn),Math.abs(this.x-e)<=n*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=n*Math.max(1,Math.abs(this.y),Math.abs(t))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y},n.strictEquals2f=function(e,t){return this.x===e&&this.y===t},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+")"},n.lerp=function(e,t){var n=this.x,i=this.y;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this},n.clampf=function(e,t){return this.x=$n(this.x,e.x,t.x),this.y=$n(this.y,e.y,t.y),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this},n.add2f=function(e,t){return this.x+=e,this.y+=t,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this},n.subtract2f=function(e,t){return this.x-=e,this.y-=t,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec2.multiply for vector * vector operation"),this.x*=e,this.y*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec2.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this},n.multiply2f=function(e,t){return this.x*=e,this.y*=t,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this},n.divide2f=function(e,t){return this.x/=e,this.y/=t,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this},n.dot=function(e){return this.x*e.x+this.y*e.y},n.cross=function(e){return this.x*e.y-this.y*e.x},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y},n.normalize=function(){var e=this.x,t=this.y,n=e*e+t*t;return n>0&&(n=1/Math.sqrt(n),this.x*=n,this.y*=n),this},n.angle=function(e){var t=this.lengthSqr(),n=e.lengthSqr();if(0===t||0===n)return console.warn("Can't get angle between zero vector"),0;var i=this.dot(e)/Math.sqrt(t*n);return i=$n(i,-1,1),Math.acos(i)},n.signAngle=function(e){var t=this.angle(e);return this.cross(e)<0?-t:t},n.rotate=function(e){var t=this.x,n=this.y,i=Math.sin(e),o=Math.cos(e);return this.x=o*t-i*n,this.y=i*t+o*n,this},n.project=function(e){var t=this.dot(e)/e.dot(e);return this.x=e.x*t,this.y=e.y*t,this},n.transformMat4=function(e){var t=this.x,n=this.y;return this.x=e.m00*t+e.m04*n+e.m12,this.y=e.m01*t+e.m05*n+e.m13,this},t}(Tt));Ni.ZERO=Object.freeze(new Ni(0,0)),Ni.ONE=Object.freeze(new Ni(1,1)),Ni.NEG_ONE=Object.freeze(new Ni(-1,-1)),Ni.UNIT_X=Object.freeze(new Ni(1,0)),Ni.UNIT_Y=Object.freeze(new Ni(0,1));var Mi=new Ni,Oi=new Ni;function Di(e,t){return new Ni(e,t)}mn.fastDefine("cc.Vec2",Ni,{x:0,y:0}),s.Vec2=Ni,s.v2=Di;var zi=e("c7",function(e){function t(t,n,i,o){var r;return r=e.call(this)||this,t&&"object"==typeof t?(r.x=t.x,r.y=t.y,r.z=t.z,r.w=t.w):(r.x=t||0,r.y=n||0,r.z=i||0,r.w=o||0),r}Z(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e.w=t.w+n.w,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e.w=t.w-n.w,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e.w=t.w*n.w,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e.w=t.w/n.w,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e.w=Math.ceil(t.w),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e.w=Math.floor(t.w),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e.w=Math.min(t.w,n.w),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e.w=Math.max(t.w,n.w),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e.w=Math.round(t.w),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,r=t.w-e.w;return Math.sqrt(n*n+i*i+o*o+r*r)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,r=t.w-e.w;return n*n+i*i+o*o+r*r},t.len=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return Math.sqrt(t*t+n*n+i*i+o*o)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return t*t+n*n+i*i+o*o},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=-t.w,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e.w=1/t.w,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y,o=t.z,r=t.w;return Math.abs(n)<Jn?e.x=0:e.x=1/n,Math.abs(i)<Jn?e.y=0:e.y=1/i,Math.abs(o)<Jn?e.z=0:e.z=1/o,Math.abs(r)<Jn?e.w=0:e.w=1/r,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,r=t.w,a=n*n+i*i+o*o+r*r;return a>0&&(a=1/Math.sqrt(a),e.x=n*a,e.y=i*a,e.z=o*a,e.w=r*a),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.random=function(e,t){t=t||1;var n=2*ni()*Math.PI,i=2*ni()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e.w=0,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=t.w;return e.x=n.m00*i+n.m04*o+n.m08*r+n.m12*a,e.y=n.m01*i+n.m05*o+n.m09*r+n.m13*a,e.z=n.m02*i+n.m06*o+n.m10*r+n.m14*a,e.w=n.m03*i+n.m07*o+n.m11*r+n.m15*a,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=t.w;return e.x=n.m00*i+n.m01*o+n.m02*r+n.m03*a,e.y=n.m04*i+n.m05*o+n.m06*r+n.m07*a,e.x=n.m08*i+n.m09*o+n.m10*r+n.m11*a,e.w=t.w,e},t.transformQuat=function(e,t,n){var i=t.x,o=t.y,r=t.z,a=n.x,s=n.y,c=n.z,l=n.w,u=l*i+s*r-c*o,f=l*o+c*i-a*r,_=l*r+a*o-s*i,m=-a*i-s*o-c*r;return e.x=u*l+m*-a+f*-c-_*-s,e.y=f*l+m*-s+_*-a-u*-c,e.z=_*l+m*-c+u*-s-f*-a,e.w=t.w,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=Jn),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0),this},n.equals=function(e,t){return void 0===t&&(t=Jn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.equals4f=function(e,t,n,i,o){return void 0===o&&(o=Jn),Math.abs(this.x-e)<=o*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=o*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=o*Math.max(1,Math.abs(this.z),Math.abs(n))&&Math.abs(this.w-i)<=o*Math.max(1,Math.abs(this.w),Math.abs(i))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.strictEquals4f=function(e,t,n,i){return this.x===e&&this.y===t&&this.z===n&&this.w===i},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.z,r=this.w;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this.z=o+t*(e.z-o),this.w=r+t*(e.w-r),this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+", "+this.w.toFixed(2)+")"},n.clampf=function(e,t){return this.x=$n(this.x,e.x,t.x),this.y=$n(this.y,e.y,t.y),this.z=$n(this.z,e.z,t.z),this.w=$n(this.w,e.w,t.w),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},n.add4f=function(e,t,n,i){return this.x+=e,this.y+=t,this.z+=n,this.w+=i,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},n.subtract4f=function(e,t,n,i){return this.x-=e,this.y-=t,this.z-=n,this.w-=i,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec4.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec4.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},n.multiply4f=function(e,t,n,i){return this.x*=e,this.y*=t,this.z*=n,this.w*=i,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this},n.divide4f=function(e,t,n,i){return this.x/=e,this.y/=t,this.z/=n,this.w/=i,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,r=e.y,a=e.z;return this.x=n*a-i*r,this.y=i*o-t*a,this.z=t*r-n*o,this},n.length=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return Math.sqrt(e*e+t*t+n*n+i*i)},n.lengthSqr=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return e*e+t*t+n*n+i*i},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=this.w,o=e*e+t*t+n*n+i*i;return o>0&&(o=1/Math.sqrt(o),this.x=e*o,this.y=t*o,this.z=n*o,this.w=i*o),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=this.w;return this.x=e.m00*t+e.m04*n+e.m08*i+e.m12*o,this.y=e.m01*t+e.m05*n+e.m09*i+e.m13*o,this.z=e.m02*t+e.m06*n+e.m10*i+e.m14*o,this.w=e.m03*t+e.m07*n+e.m11*i+e.m15*o,this},t}(Tt));function Li(e,t,n,i){return new zi(e,t,n,i)}zi.ZERO=Object.freeze(new zi(0,0,0,0)),zi.ONE=Object.freeze(new zi(1,1,1,1)),zi.NEG_ONE=Object.freeze(new zi(-1,-1,-1,-1)),mn.fastDefine("cc.Vec4",zi,{x:0,y:0,z:0,w:0}),s.Vec4=zi,s.v4=Li,kn(Ni,"Vec2",[{name:"sub",newName:"subtract",target:Ni,targetName:"Vec2"},{name:"mul",newName:"multiply",target:Ni,targetName:"Vec2"},{name:"div",newName:"divide",target:Ni,targetName:"Vec2"},{name:"dist",newName:"distance",target:Ni,targetName:"Vec2"},{name:"sqrDist",newName:"squaredDistance",target:Ni,targetName:"Vec2"},{name:"mag",newName:"len",target:Ni,targetName:"Vec2"},{name:"sqrMag",newName:"lengthSqr",target:Ni,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Ni,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Ni,targetName:"Vec2"}]),kn(Ni.prototype,"Vec2",[{name:"mag",newName:"length",target:Ni.prototype,targetName:"Vec2"},{name:"magSqr",newName:"lengthSqr",target:Ni.prototype,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Ni.prototype,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Ni.prototype,targetName:"Vec2"}]),kn(_i,"Vec3",[{name:"sub",newName:"subtract",target:_i,targetName:"Vec3"},{name:"mul",newName:"multiply",target:_i,targetName:"Vec3"},{name:"div",newName:"divide",target:_i,targetName:"Vec3"},{name:"dist",newName:"distance",target:_i,targetName:"Vec3"},{name:"sqrDist",newName:"squaredDistance",target:_i,targetName:"Vec3"},{name:"mag",newName:"len",target:_i,targetName:"Vec3"},{name:"sqrMag",newName:"lengthSqr",target:_i,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:_i,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:_i,targetName:"Vec3"}]),kn(_i.prototype,"Vec3",[{name:"mag",newName:"length",target:_i.prototype,targetName:"Vec3"},{name:"magSqr",newName:"lengthSqr",target:_i.prototype,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:_i.prototype,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:_i.prototype,targetName:"Vec3"}]),kn(zi,"Vec4",[{name:"sub",newName:"subtract",target:zi,targetName:"Vec4"},{name:"mul",newName:"multiply",target:zi,targetName:"Vec4"},{name:"div",newName:"divide",target:zi,targetName:"Vec4"},{name:"dist",newName:"distance",target:zi,targetName:"Vec4"},{name:"sqrDist",newName:"squaredDistance",target:zi,targetName:"Vec4"},{name:"mag",newName:"len",target:zi,targetName:"Vec4"},{name:"sqrMag",newName:"lengthSqr",target:zi,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:zi,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:zi,targetName:"Vec4"}]),kn(zi.prototype,"Vec4",[{name:"mag",newName:"length",target:zi.prototype,targetName:"Vec4"},{name:"magSqr",newName:"lengthSqr",target:zi.prototype,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:zi.prototype,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:zi.prototype,targetName:"Vec4"}]),kn(yi,"Quat",[{name:"mag",newName:"len",target:yi,targetName:"Quat"},{name:"mul",newName:"multiply",target:yi,targetName:"Quat"},{name:"sqrMag",newName:"lengthSqr",target:yi,targetName:"Quat"},{name:"scale",newName:"multiplyScalar",target:yi,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:yi,targetName:"Quat"}]),kn(yi.prototype,"Quat",[{name:"scale",newName:"multiplyScalar",target:yi.prototype,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:yi.prototype,targetName:"Quat"}]),kn(ui,"Color",[{name:"sub",newName:"subtract",target:ui,targetName:"Color"},{name:"mul",newName:"multiply",target:ui,targetName:"Color"},{name:"div",newName:"divide",target:ui,targetName:"Color"},{name:"exactEquals",newName:"strictEquals",target:ui,targetName:"Color"},{name:"fromHex",newName:"fromHEX",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[1].toString(16);return s.Color.fromHEX(t[0],i)}}]),kn(di,"Mat3",[{name:"sub",newName:"subtract",target:di,targetName:"Mat3"},{name:"mul",newName:"multiply",target:di,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:di,targetName:"Mat3"},{name:"transfrom",newName:"transform",target:di,targetName:"Mat3"}]),kn(di.prototype,"Mat3",[{name:"sub",newName:"subtract",target:di.prototype,targetName:"Mat3"},{name:"mul",newName:"multiply",target:di.prototype,targetName:"Mat3"},{name:"mulScalar",newName:"multiplyScalar",target:di.prototype,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:di.prototype,targetName:"Mat3"}]),kn(Pi,"Mat4",[{name:"sub",newName:"subtract",target:Pi,targetName:"Mat4"},{name:"mul",newName:"multiply",target:Pi,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:Pi,targetName:"Mat4"}]),kn(Pi.prototype,"Mat4",[{name:"sub",newName:"subtract",target:Pi.prototype,targetName:"Mat4"},{name:"mul",newName:"multiply",target:Pi.prototype,targetName:"Mat4"},{name:"mulScalar",newName:"multiplyScalar",target:Pi.prototype,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:Pi.prototype,targetName:"Mat4"}]);var Fi=e("ce",function(){function e(e,t,n,i,o,r){void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=0),void 0===r&&(r=0),this.a=e,this.b=t,this.c=n,this.d=i,this.tx=o,this.ty=r}return e.identity=function(){return new e},e.clone=function(t){return new e(t.a,t.b,t.c,t.d,t.tx,t.ty)},e.concat=function(e,t,n){var i=t.a,o=t.b,r=t.c,a=t.d,s=t.tx,c=t.ty;e.a=i*n.a+o*n.c,e.b=i*n.b+o*n.d,e.c=r*n.a+a*n.c,e.d=r*n.b+a*n.d,e.tx=s*n.a+c*n.c+n.tx,e.ty=s*n.b+c*n.d+n.ty},e.invert=function(e,t){var n=1/(t.a*t.d-t.b*t.c);e.a=n*t.d,e.b=-n*t.b,e.c=-n*t.c,e.d=n*t.a,e.tx=n*(t.c*t.ty-t.d*t.tx),e.ty=n*(t.b*t.tx-t.a*t.ty)},e.fromMat4=function(e,t){e.a=t.m00,e.b=t.m01,e.c=t.m04,e.d=t.m05,e.tx=t.m12,e.ty=t.m13},e.transformVec2=function(e,t,n,i){var o,r;void 0===i?(i=n,o=t.x,r=t.y):(o=t,r=n),e.x=i.a*o+i.c*r+i.tx,e.y=i.b*o+i.d*r+i.ty},e.transformSize=function(e,t,n){e.width=n.a*t.width+n.c*t.height,e.height=n.b*t.width+n.d*t.height},e.transformRect=function(e,t,n){var i=t.x+t.width,o=t.y+t.height,r=n.a*t.x+n.c*t.y+n.tx,a=n.b*t.x+n.d*t.y+n.ty,s=n.a*i+n.c*t.y+n.tx,c=n.b*i+n.d*t.y+n.ty,l=n.a*t.x+n.c*o+n.tx,u=n.b*t.x+n.d*o+n.ty,f=n.a*i+n.c*o+n.tx,_=n.b*i+n.d*o+n.ty,m=Math.min(r,s,l,f),p=Math.max(r,s,l,f),h=Math.min(a,c,u,_),d=Math.max(a,c,u,_);e.x=m,e.y=h,e.width=p-m,e.height=d-h},e.transformObb=function(e,t,n,i,o,r){var a=r.a*o.x+r.c*o.y+r.tx,s=r.b*o.x+r.d*o.y+r.ty,c=r.a*o.width,l=r.b*o.width,u=r.c*o.height,f=r.d*o.height;t.x=a,t.y=s,n.x=c+a,n.y=l+s,e.x=u+a,e.y=f+s,i.x=c+u+a,i.y=l+f+s},e}());s.AffineTransform=Fi;var Ui=e("cf",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.width=t.width,i.height=t.height):(i.width=t||0,i.height=n||0),i}Z(t,e),t.lerp=function(e,t,n,i){return e.width=t.width+(n.width-t.width)*i,e.height=t.height+(n.height-t.height)*i,e};var n=t.prototype;return n.clone=function(){return new t(this.width,this.height)},n.set=function(e,t){return e&&"object"==typeof e?(this.height=e.height,this.width=e.width):(this.width=e||0,this.height=t||0),this},n.equals=function(e){return this.width===e.width&&this.height===e.height},n.lerp=function(e,t){return this.width+=(e.width-this.width)*t,this.height+=(e.height-this.height)*t,this},n.toString=function(){return"("+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},Q(t,[{key:"x",get:function(){return this.width},set:function(e){this.width=e}},{key:"y",get:function(){return this.height},set:function(e){this.height=e}}]),t}(Tt));function Bi(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),new Ui(e,t)}Ui.ZERO=Object.freeze(new Ui(0,0)),Ui.ONE=Object.freeze(new Ui(1,1)),mn.fastDefine("cc.Size",Ui,{width:0,height:0}),s.size=Bi,s.Size=Ui;var Gi=e("ch",function(e){function t(t,n,i,o){var r;return r=e.call(this)||this,t&&"object"==typeof t?(r.y=t.y,r.width=t.width,r.height=t.height,r.x=t.x):(r.x=t||0,r.y=n||0,r.width=i||0,r.height=o||0),r}Z(t,e),t.fromMinMax=function(e,t,n){var i=Math.min(t.x,n.x),o=Math.min(t.y,n.y),r=Math.max(t.x,n.x),a=Math.max(t.y,n.y);return e.x=i,e.y=o,e.width=r-i,e.height=a-o,e},t.lerp=function(e,t,n,i){var o=t.x,r=t.y,a=t.width,s=t.height;return e.x=o+(n.x-o)*i,e.y=r+(n.y-r)*i,e.width=a+(n.width-a)*i,e.height=s+(n.height-s)*i,e},t.intersection=function(e,t,n){var i=t.x,o=t.y,r=t.x+t.width,a=t.y+t.height,s=n.x,c=n.y,l=n.x+n.width,u=n.y+n.height;return e.x=Math.max(i,s),e.y=Math.max(o,c),e.width=Math.min(r,l)-e.x,e.height=Math.min(a,u)-e.y,e},t.union=function(e,t,n){var i=t.x,o=t.y,r=t.width,a=t.height,s=n.x,c=n.y,l=n.width,u=n.height;return e.x=Math.min(i,s),e.y=Math.min(o,c),e.width=Math.max(i+r,s+l)-e.x,e.height=Math.max(o+a,c+u)-e.y,e};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.width,this.height)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0),this},n.equals=function(e){return this.x===e.x&&this.y===e.y&&this.width===e.width&&this.height===e.height},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.width,r=this.height;return this.x=n+(e.x-n)*t,this.y=i+(e.y-i)*t,this.width=o+(e.width-o)*t,this.height=r+(e.height-r)*t,this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},n.intersects=function(e){var t=this.x+this.width,n=this.y+this.height,i=e.x+e.width,o=e.y+e.height;return!(t<e.x||i<this.x||n<e.y||o<this.y)},n.contains=function(e){return this.x<=e.x&&this.x+this.width>=e.x&&this.y<=e.y&&this.y+this.height>=e.y},n.containsRect=function(e){return this.x<=e.x&&this.x+this.width>=e.x+e.width&&this.y<=e.y&&this.y+this.height>=e.y+e.height},n.transformMat4=function(e){var t=this.x,n=this.y,i=t+this.width,o=n+this.height,r=e.m00*t+e.m04*n+e.m12,a=e.m01*t+e.m05*n+e.m13,s=e.m00*i+e.m04*n+e.m12,c=e.m01*i+e.m05*n+e.m13,l=e.m00*t+e.m04*o+e.m12,u=e.m01*t+e.m05*o+e.m13,f=e.m00*i+e.m04*o+e.m12,_=e.m01*i+e.m05*o+e.m13,m=Math.min(r,s,l,f),p=Math.max(r,s,l,f),h=Math.min(a,c,u,_),d=Math.max(a,c,u,_);return this.x=m,this.y=h,this.width=p-m,this.height=d-h,this},n.transformMat4ToPoints=function(e,t,n,i,o){var r=this.x,a=this.y,s=r+this.width,c=a+this.height;t.x=e.m00*r+e.m04*a+e.m12,t.y=e.m01*r+e.m05*a+e.m13,o.x=e.m00*s+e.m04*a+e.m12,o.y=e.m01*s+e.m05*a+e.m13,n.x=e.m00*r+e.m04*c+e.m12,n.y=e.m01*r+e.m05*c+e.m13,i.x=e.m00*s+e.m04*c+e.m12,i.y=e.m01*s+e.m05*c+e.m13},Q(t,[{key:"xMin",get:function(){return this.x},set:function(e){this.width+=this.x-e,this.x=e}},{key:"yMin",get:function(){return this.y},set:function(e){this.height+=this.y-e,this.y=e}},{key:"xMax",get:function(){return this.x+this.width},set:function(e){this.width=e-this.x}},{key:"yMax",get:function(){return this.y+this.height},set:function(e){this.height=e-this.y}},{key:"center",get:function(){return new Ni(this.x+.5*this.width,this.y+.5*this.height)},set:function(e){this.x=e.x-.5*this.width,this.y=e.y-.5*this.height}},{key:"origin",get:function(){return new Ni(this.x,this.y)},set:function(e){this.x=e.x,this.y=e.y}},{key:"size",get:function(){return new Ui(this.width,this.height)},set:function(e){this.width=e.width,this.height=e.height}},{key:"z",get:function(){return this.width},set:function(e){this.width=e}},{key:"w",get:function(){return this.height},set:function(e){this.height=e}}]),t}(Tt));function ki(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),new Gi(e,t,n,i)}mn.fastDefine("cc.Rect",Gi,{x:0,y:0,width:0,height:0}),s.Rect=Gi,s.rect=ki;var Hi=e("cG",Float64Array),ji=(e("cH",function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.createFloatArray=function(e){return new Hi(e)},Q(t,[{key:"array",get:function(){return this._array}}]),t}(Tt)),function(e){function t(){return e.call(this)||this}Z(t,e);var n=t.prototype;return n.requestFullScreen=function(){return Promise.reject(new Error("request fullscreen is not supported on this platform."))},n.exitFullScreen=function(){return Promise.reject(new Error("exit fullscreen is not supported on this platform."))},Q(t,[{key:"supportFullScreen",get:function(){return!1}},{key:"isFullScreen",get:function(){return!1}},{key:"windowSize",get:function(){var e=fe.getSystemInfoSync();return new Ui(e.screenWidth,e.screenHeight)},set:function(){console.warn("Setting window size is not supported on this platform.")}},{key:"orientation",get:function(){return fe.orientation}},{key:"safeAreaEdge",get:function(){var e=fe.getSafeArea(),t=this.windowSize,n=e.top,i=t.height-e.bottom,o=e.left,r=t.width-e.right;return this.orientation===F.PORTRAIT?n<i?n=i:i=n:o<r?o=r:r=o,{top:n,bottom:i,left:o,right:r}}}]),t}(Mn)),Vi=e("eV",new ji),qi=Vi.windowSize,Wi=Dn.pixelRatio,Xi=e("dB",{NetworkType:D,Language:O,OS:z,Platform:L,BrowserType:M,isNative:Dn.isNative,isBrowser:Dn.isBrowser,isMobile:Dn.isMobile,isLittleEndian:Dn.isLittleEndian,platform:Dn.platform,language:Dn.language,languageCode:Dn.nativeLanguage,os:Dn.os,osVersion:Dn.osVersion,osMainVersion:Dn.osMainVersion,browserType:Dn.browserType,browserVersion:Dn.browserVersion,windowPixelResolution:{width:qi.width*Wi,height:qi.height*Wi},capabilities:{canvas:Dn.supportCapability.canvas,opengl:Dn.supportCapability.gl,webp:Dn.supportCapability.webp,imageBitmap:Dn.supportCapability.imageBitmap,touches:!1,mouse:!1,keyboard:!1,accelerometer:!1},localStorage:{},getNetworkType:function(){return Dn.networkType},getBatteryLevel:function(){return Dn.getBatteryLevel()},garbageCollect:function(){Dn.triggerGC()},isObjectValid:function(e){return null!=e},dump:function(){var e="";e+="isMobile : "+this.isMobile+"\r\n",e+="language : "+this.language+"\r\n",e+="browserType : "+this.browserType+"\r\n",e+="browserVersion : "+this.browserVersion+"\r\n",e+="capabilities : "+JSON.stringify(this.capabilities)+"\r\n",e+="os : "+this.os+"\r\n",e+="osVersion : "+this.osVersion+"\r\n",e+="platform : "+this.platform+"\r\n",v(e+="Using "+(s.game.renderType===s.game.RENDER_TYPE_WEBGL?"WEBGL":"CANVAS")+" renderer.\r\n")},openURL:function(e){Dn.openURL(e)},now:function(){return Dn.now()},restartVM:function(){Dn.restartJSVM()},getSafeAreaRect:function(){var e=s.view,t=Vi.safeAreaEdge,n=Vi.windowSize,i=new Ni(t.left,n.height-t.bottom),o=new Ni(n.width-t.right,t.top),r={left:0,top:0,width:n.width,height:n.height};e.convertToLocationInView(i.x,i.y,r,i),e.convertToLocationInView(o.x,o.y,r,o),e._convertPointWithScale(i),e._convertPointWithScale(o);var a=i.x,c=i.y,l=o.x-i.x,u=o.y-i.y;return new Gi(a,c,l,u)}});!function(){try{var e=Xi.localStorage=window.localStorage;e.setItem("storage",""),e.removeItem("storage"),e=null}catch(e){var t=function(){w(5200)};Xi.localStorage={getItem:t,setItem:t,clear:t,removeItem:t}}var n=window,i=n.navigator,o=document,r=o.documentElement,a=Xi.capabilities;(void 0!==r.ontouchstart||void 0!==o.ontouchstart||i.msPointerEnabled)&&(a.touches=!0),void 0!==r.onmouseup&&(a.mouse=!0),void 0!==r.onkeyup&&(a.keyboard=!0),(n.DeviceMotionEvent||n.DeviceOrientationEvent)&&(a.accelerometer=!0),Xi.__isWebIOS14OrIPadOS14Env=(Xi.os===z.IOS||Xi.os===z.OSX)&&Dn.isBrowser&&/(OS 1[4-9])|(Version\/1[4-9])/.test(window.navigator.userAgent),Vi.on("window-resize",(function(){var e=Vi.windowSize;Xi.windowPixelResolution={width:Math.round(e.width*Wi),height:Math.round(e.height*Wi)}}))}(),s.sys=Xi;var Yi=/(\.[^\.\/\?\\]*)(\?.*)?$/,Ki=/((.*)(\/|\\|\\\\))?(.*?\..*$)?/,Qi=/[^\.\/]+\/\.\.\//;function Ji(){for(var e="",t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];for(var o=0,r=n;o<r.length;o++){var a=r[o];e=(e+(""===e?"":"/")+a).replace(/(\/|\\\\)$/,"")}return e}function Zi(e){var t=Yi.exec(e);return t?t[1]:""}function $i(e){if(e){var t=e.lastIndexOf(".");if(-1!==t)return e.substring(0,t)}return e}function eo(e,t){var n=e.indexOf("?");n>0&&(e=e.substring(0,n));var i=/(\/|\\)([^\/\\]+)$/g.exec(e.replace(/(\/|\\)$/,""));if(!i)return e;var o=i[2];return t&&e.substring(e.length-t.length).toLowerCase()===t.toLowerCase()?o.substring(0,o.length-t.length):o}function to(e){var t=Ki.exec(e);return t?t[2]:""}function no(e,t){t=t||"";var n=e.indexOf("?"),i="";return n>0&&(i=e.substring(n),e=e.substring(0,n)),(n=e.lastIndexOf("."))<0?e+t+i:e.substring(0,n)+t+i}function io(e,t,n){if(0===t.indexOf("."))return no(e,t);var i=e.indexOf("?"),o="",r=n?Zi(e):"";return i>0&&(o=e.substring(i),e=e.substring(0,i)),i=(i=e.lastIndexOf("/"))<=0?0:i+1,e.substring(0,i)+t+r+o}function oo(e){var t=e=String(e);do{t=e,e=e.replace(Qi,"")}while(t.length!==e.length);return e}function ro(e){return e.replace(/[\/\\]$/,"")}function ao(){return Xi.os===z.WINDOWS?"\\":"/"}e("cO",Object.freeze({__proto__:null,join:Ji,extname:Zi,mainFileName:$i,basename:eo,dirname:to,changeExtname:no,changeBasename:io,_normalize:oo,stripSep:ro,getSeperator:ao}));var so=e("bw",function(){function e(){this._skyColor=new ui(51,128,204,1),this._groundAlbedo=new ui(51,51,51,255),this._albedoArray=Float32Array.from([.2,.2,.2,1]),this._colorArray=Float32Array.from([.2,.5,.8,1]),this._enabled=!1,this._skyIllum=0}var t=e.prototype;return t.initialize=function(e){this.skyColor=e.skyColor,this.groundAlbedo=e.groundAlbedo,this.skyIllum=e.skyIllum},t._destroy=function(){},t.destroy=function(){this._destroy()},Q(e,[{key:"colorArray",get:function(){return this._colorArray}},{key:"albedoArray",get:function(){return this._albedoArray}},{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled=e}},{key:"skyColor",get:function(){return this._skyColor},set:function(e){this._skyColor.set(e),ui.toArray(this._colorArray,this._skyColor)}},{key:"skyIllum",get:function(){return this._skyIllum},set:function(e){this._skyIllum=e}},{key:"groundAlbedo",get:function(){return this._groundAlbedo},set:function(e){this._groundAlbedo.set(e),_i.toArray(this._albedoArray,this._groundAlbedo)}},{key:"native",get:function(){return this._nativeObj}}]),e}());so.SUN_ILLUM=65e3,so.SKY_ILLUM=2e4,s.Ambient=so;var co=new _i,lo=new _i,uo=new _i,fo=new _i,_o=new _i,mo=new _i,po=new Array(3),ho=new Array(3);function vo(e,t){return _i.dot(t.n,e)-t.d}function go(e,t,n){return _i.copy(e,t),_i.subtract(_o,n.center,n.halfExtents),_i.add(mo,n.center,n.halfExtents),e.x=e.x<_o.x?_o.x:e.x,e.y=e.y<_o.y?_o.y:e.y,e.z=e.z<_o.z?_o.z:e.z,e.x=e.x>mo.x?mo.x:e.x,e.y=e.y>mo.y?mo.y:e.y,e.z=e.z>mo.z?mo.z:e.z,e}function yo(e,t,n){_i.set(co,n.orientation.m00,n.orientation.m01,n.orientation.m02),_i.set(lo,n.orientation.m03,n.orientation.m04,n.orientation.m05),_i.set(uo,n.orientation.m06,n.orientation.m07,n.orientation.m08),po[0]=co,po[1]=lo,po[2]=uo,ho[0]=n.halfExtents.x,ho[1]=n.halfExtents.y,ho[2]=n.halfExtents.z,_i.subtract(fo,t,n.center),_i.set(e,n.center.x,n.center.y,n.center.z);for(var i=0;i<3;i++){var o=_i.dot(fo,po[i]);o>ho[i]&&(o=ho[i]),o<-ho[i]&&(o=-ho[i]),e.x+=o*po[i].x,e.y+=o*po[i].y,e.z+=o*po[i].z}return e}e("eY",Object.freeze({__proto__:null,point_plane:vo,pt_point_plane:function(e,t,n){var i=vo(t,n);return _i.subtract(e,t,_i.multiplyScalar(e,n.n,i))},pt_point_aabb:go,pt_point_obb:yo,pt_point_line:function(e,t,n,i){_i.subtract(co,n,i);var o=co,r=_i.lengthSqr(o);if(0==r)_i.copy(e,n);else{_i.subtract(co,t,n);var a=_i.dot(co,o)/r;a<0?_i.copy(e,n):a>1?_i.copy(e,i):_i.scaleAndAdd(e,n,o,a)}}}));var xo=e("eZ",{SHAPE_RAY:1,SHAPE_LINE:2,SHAPE_SPHERE:4,SHAPE_AABB:8,SHAPE_OBB:16,SHAPE_PLANE:32,SHAPE_TRIANGLE:64,SHAPE_FRUSTUM:128,SHAPE_FRUSTUM_ACCURATE:256,SHAPE_CAPSULE:512}),So=e("e_",function(){function e(e,t,n,i,o,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=-1),this.s=void 0,this.e=void 0,this._type=void 0,this._type=xo.SHAPE_LINE,this.s=new _i(e,t,n),this.e=new _i(i,o,r)}return e.create=function(t,n,i,o,r,a){return new e(t,n,i,o,r,a)},e.clone=function(t){return new e(t.s.x,t.s.y,t.s.z,t.e.x,t.e.y,t.e.z)},e.copy=function(e,t){return _i.copy(e.s,t.s),_i.copy(e.e,t.e),e},e.fromPoints=function(e,t,n){return _i.copy(e.s,t),_i.copy(e.e,n),e},e.set=function(e,t,n,i,o,r,a){return e.s.x=t,e.s.y=n,e.s.z=i,e.e.x=o,e.e.y=r,e.e.z=a,e},e.len=function(e){return _i.distance(e.s,e.e)},e.prototype.length=function(){return _i.distance(this.s,this.e)},Q(e,[{key:"type",get:function(){return this._type}}]),e}()),Co=e("e1",function(){function e(e,t,n,i,o,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=-1),this.o=void 0,this.d=void 0,this._type=void 0,this._type=xo.SHAPE_RAY,this.o=new _i(e,t,n),this.d=new _i(i,o,r)}return e.create=function(t,n,i,o,r,a){return void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=0),void 0===a&&(a=1),new e(t,n,i,o,r,a)},e.clone=function(t){return new e(t.o.x,t.o.y,t.o.z,t.d.x,t.d.y,t.d.z)},e.copy=function(e,t){return _i.copy(e.o,t.o),_i.copy(e.d,t.d),e},e.fromPoints=function(e,t,n){return _i.copy(e.o,t),_i.normalize(e.d,_i.subtract(e.d,n,t)),e},e.set=function(e,t,n,i,o,r,a){return e.o.x=t,e.o.y=n,e.o.z=i,e.d.x=o,e.d.y=r,e.d.z=a,e},e.prototype.computeHit=function(e,t){_i.normalize(e,this.d),_i.scaleAndAdd(e,this.o,e,t)},Q(e,[{key:"type",get:function(){return this._type}}]),e}()),To=new _i,Eo=new _i,bo=new _i,Ao=new _i;function Po(e){return Math.max(Math.max(e.x,e.y),e.z)}var wo,Io,Ro,No,Mo,Oo,Do,zo,Lo,Fo,Uo,Bo,Go,ko,Ho,jo,Vo,qo,Wo,Xo,Yo,Ko,Qo,Jo,Zo,$o,er,tr,nr,ir,or,rr,ar,sr,cr,lr,ur,fr,_r,mr=e("el",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),this._center=new _i(0,0,0),this._radius=0,this._type=void 0,this._type=xo.SHAPE_SPHERE,this._center=new _i(e,t,n),this._radius=i}e.create=function(t,n,i,o){return new e(t,n,i,o)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.radius)},e.copy=function(e,t){return _i.copy(e.center,t.center),e.radius=t.radius,e},e.fromPoints=function(e,t,n){return _i.multiplyScalar(e.center,_i.add(To,t,n),.5),e.radius=.5*_i.subtract(To,n,t).length(),e},e.set=function(e,t,n,i,o){return e.center.x=t,e.center.y=n,e.center.z=i,e.radius=o,e};var t=e.prototype;return t.destroy=function(){},t.clone=function(){return e.clone(this)},t.copy=function(t){return e.copy(this,t)},t.getBoundary=function(e,t){_i.set(e,this.center.x-this.radius,this.center.y-this.radius,this.center.z-this.radius),_i.set(t,this.center.x+this.radius,this.center.y+this.radius,this.center.z+this.radius)},t.transform=function(e,t,n,i,o){_i.transformMat4(o.center,this.center,e),o.radius=this.radius*Po(i)},t.translateAndRotate=function(e,t,n){_i.transformMat4(n.center,this.center,e)},t.setScale=function(e,t){t.radius=this.radius*Po(e)},t.mergePoint=function(e){this.radius<0&&(this.center.set(e),this.radius=0),_i.subtract(Eo,e,this.center);var t=Eo.length();if(t>this.radius){var n=.5*(t-this.radius);this.radius+=n,_i.multiplyScalar(Eo,Eo,n/t),_i.add(this.center,this.center,Eo)}},t.mergePoints=function(e){var t=e.length;if(!(t<1)){this.radius=-1;for(var n=0;n<t;n++)this.mergePoint(e[n])}},t.mergeAABB=function(e){e.getBoundary(bo,Ao),this.mergePoint(bo),this.mergePoint(Ao)},Q(e,[{key:"center",get:function(){return this._center},set:function(e){this._center=e}},{key:"radius",get:function(){return this._radius},set:function(e){this._radius=e}},{key:"type",get:function(){return this._type}}]),e}()),pr=e("f0",function(){function e(e,t,n,i,o,r,a,s,c){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=0),void 0===r&&(r=0),void 0===a&&(a=0),void 0===s&&(s=1),void 0===c&&(c=0),this.a=void 0,this.b=void 0,this.c=void 0,this._type=void 0,this._type=xo.SHAPE_TRIANGLE,this.a=new _i(e,t,n),this.b=new _i(i,o,r),this.c=new _i(a,s,c)}return e.create=function(t,n,i,o,r,a,s,c,l){return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=1),new e(t,n,i,o,r,a,s,c,l)},e.clone=function(t){return new e(t.a.x,t.a.y,t.a.z,t.b.x,t.b.y,t.b.z,t.c.x,t.c.y,t.c.z)},e.copy=function(e,t){return _i.copy(e.a,t.a),_i.copy(e.b,t.b),_i.copy(e.c,t.c),e},e.fromPoints=function(e,t,n,i){return _i.copy(e.a,t),_i.copy(e.b,n),_i.copy(e.c,i),e},e.set=function(e,t,n,i,o,r,a,s,c,l){return e.a.x=t,e.a.y=n,e.a.z=i,e.b.x=o,e.b.y=r,e.b.z=a,e.c.x=s,e.c.y=c,e.c.z=l,e},Q(e,[{key:"type",get:function(){return this._type}}]),e}()),hr=function(e,t,n){for(var i=0;i<t.length;++i)e.length<=i&&e.push(new n),e[i].copy(t[i]);e.length=t.length};!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BUFFER=1]="BUFFER",e[e.TEXTURE=2]="TEXTURE",e[e.RENDER_PASS=3]="RENDER_PASS",e[e.FRAMEBUFFER=4]="FRAMEBUFFER",e[e.SAMPLER=5]="SAMPLER",e[e.SHADER=6]="SHADER",e[e.DESCRIPTOR_SET_LAYOUT=7]="DESCRIPTOR_SET_LAYOUT",e[e.PIPELINE_LAYOUT=8]="PIPELINE_LAYOUT",e[e.PIPELINE_STATE=9]="PIPELINE_STATE",e[e.DESCRIPTOR_SET=10]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=11]="INPUT_ASSEMBLER",e[e.COMMAND_BUFFER=12]="COMMAND_BUFFER",e[e.QUEUE=13]="QUEUE",e[e.GLOBAL_BARRIER=14]="GLOBAL_BARRIER",e[e.TEXTURE_BARRIER=15]="TEXTURE_BARRIER",e[e.BUFFER_BARRIER=16]="BUFFER_BARRIER"}(wo||(wo=e("O",{}))),function(e){e[e.UNREADY=0]="UNREADY",e[e.FAILED=1]="FAILED",e[e.SUCCESS=2]="SUCCESS"}(Io||(Io=e("S",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.GLES2=1]="GLES2",e[e.GLES3=2]="GLES3",e[e.METAL=3]="METAL",e[e.VULKAN=4]="VULKAN",e[e.WEBGL=5]="WEBGL",e[e.WEBGL2=6]="WEBGL2",e[e.WEBGPU=7]="WEBGPU"}(Ro||(Ro=e("A",{}))),function(e){e[e.IDENTITY=0]="IDENTITY",e[e.ROTATE_90=1]="ROTATE_90",e[e.ROTATE_180=2]="ROTATE_180",e[e.ROTATE_270=3]="ROTATE_270"}(No||(No=e("v",{}))),function(e){e[e.COLOR_FLOAT=0]="COLOR_FLOAT",e[e.COLOR_HALF_FLOAT=1]="COLOR_HALF_FLOAT",e[e.TEXTURE_FLOAT=2]="TEXTURE_FLOAT",e[e.TEXTURE_HALF_FLOAT=3]="TEXTURE_HALF_FLOAT",e[e.TEXTURE_FLOAT_LINEAR=4]="TEXTURE_FLOAT_LINEAR",e[e.TEXTURE_HALF_FLOAT_LINEAR=5]="TEXTURE_HALF_FLOAT_LINEAR",e[e.FORMAT_R11G11B10F=6]="FORMAT_R11G11B10F",e[e.FORMAT_SRGB=7]="FORMAT_SRGB",e[e.FORMAT_ETC1=8]="FORMAT_ETC1",e[e.FORMAT_ETC2=9]="FORMAT_ETC2",e[e.FORMAT_DXT=10]="FORMAT_DXT",e[e.FORMAT_PVRTC=11]="FORMAT_PVRTC",e[e.FORMAT_ASTC=12]="FORMAT_ASTC",e[e.FORMAT_RGB8=13]="FORMAT_RGB8",e[e.ELEMENT_INDEX_UINT=14]="ELEMENT_INDEX_UINT",e[e.INSTANCED_ARRAYS=15]="INSTANCED_ARRAYS",e[e.MULTIPLE_RENDER_TARGETS=16]="MULTIPLE_RENDER_TARGETS",e[e.BLEND_MINMAX=17]="BLEND_MINMAX",e[e.COMPUTE_SHADER=18]="COMPUTE_SHADER",e[e.COUNT=19]="COUNT"}(Mo||(Mo=e("F",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.A8=1]="A8",e[e.L8=2]="L8",e[e.LA8=3]="LA8",e[e.R8=4]="R8",e[e.R8SN=5]="R8SN",e[e.R8UI=6]="R8UI",e[e.R8I=7]="R8I",e[e.R16F=8]="R16F",e[e.R16UI=9]="R16UI",e[e.R16I=10]="R16I",e[e.R32F=11]="R32F",e[e.R32UI=12]="R32UI",e[e.R32I=13]="R32I",e[e.RG8=14]="RG8",e[e.RG8SN=15]="RG8SN",e[e.RG8UI=16]="RG8UI",e[e.RG8I=17]="RG8I",e[e.RG16F=18]="RG16F",e[e.RG16UI=19]="RG16UI",e[e.RG16I=20]="RG16I",e[e.RG32F=21]="RG32F",e[e.RG32UI=22]="RG32UI",e[e.RG32I=23]="RG32I",e[e.RGB8=24]="RGB8",e[e.SRGB8=25]="SRGB8",e[e.RGB8SN=26]="RGB8SN",e[e.RGB8UI=27]="RGB8UI",e[e.RGB8I=28]="RGB8I",e[e.RGB16F=29]="RGB16F",e[e.RGB16UI=30]="RGB16UI",e[e.RGB16I=31]="RGB16I",e[e.RGB32F=32]="RGB32F",e[e.RGB32UI=33]="RGB32UI",e[e.RGB32I=34]="RGB32I",e[e.RGBA8=35]="RGBA8",e[e.BGRA8=36]="BGRA8",e[e.SRGB8_A8=37]="SRGB8_A8",e[e.RGBA8SN=38]="RGBA8SN",e[e.RGBA8UI=39]="RGBA8UI",e[e.RGBA8I=40]="RGBA8I",e[e.RGBA16F=41]="RGBA16F",e[e.RGBA16UI=42]="RGBA16UI",e[e.RGBA16I=43]="RGBA16I",e[e.RGBA32F=44]="RGBA32F",e[e.RGBA32UI=45]="RGBA32UI",e[e.RGBA32I=46]="RGBA32I",e[e.R5G6B5=47]="R5G6B5",e[e.R11G11B10F=48]="R11G11B10F",e[e.RGB5A1=49]="RGB5A1",e[e.RGBA4=50]="RGBA4",e[e.RGB10A2=51]="RGB10A2",e[e.RGB10A2UI=52]="RGB10A2UI",e[e.RGB9E5=53]="RGB9E5",e[e.D16=54]="D16",e[e.D16S8=55]="D16S8",e[e.D24=56]="D24",e[e.D24S8=57]="D24S8",e[e.D32F=58]="D32F",e[e.D32F_S8=59]="D32F_S8",e[e.BC1=60]="BC1",e[e.BC1_ALPHA=61]="BC1_ALPHA",e[e.BC1_SRGB=62]="BC1_SRGB",e[e.BC1_SRGB_ALPHA=63]="BC1_SRGB_ALPHA",e[e.BC2=64]="BC2",e[e.BC2_SRGB=65]="BC2_SRGB",e[e.BC3=66]="BC3",e[e.BC3_SRGB=67]="BC3_SRGB",e[e.BC4=68]="BC4",e[e.BC4_SNORM=69]="BC4_SNORM",e[e.BC5=70]="BC5",e[e.BC5_SNORM=71]="BC5_SNORM",e[e.BC6H_UF16=72]="BC6H_UF16",e[e.BC6H_SF16=73]="BC6H_SF16",e[e.BC7=74]="BC7",e[e.BC7_SRGB=75]="BC7_SRGB",e[e.ETC_RGB8=76]="ETC_RGB8",e[e.ETC2_RGB8=77]="ETC2_RGB8",e[e.ETC2_SRGB8=78]="ETC2_SRGB8",e[e.ETC2_RGB8_A1=79]="ETC2_RGB8_A1",e[e.ETC2_SRGB8_A1=80]="ETC2_SRGB8_A1",e[e.ETC2_RGBA8=81]="ETC2_RGBA8",e[e.ETC2_SRGB8_A8=82]="ETC2_SRGB8_A8",e[e.EAC_R11=83]="EAC_R11",e[e.EAC_R11SN=84]="EAC_R11SN",e[e.EAC_RG11=85]="EAC_RG11",e[e.EAC_RG11SN=86]="EAC_RG11SN",e[e.PVRTC_RGB2=87]="PVRTC_RGB2",e[e.PVRTC_RGBA2=88]="PVRTC_RGBA2",e[e.PVRTC_RGB4=89]="PVRTC_RGB4",e[e.PVRTC_RGBA4=90]="PVRTC_RGBA4",e[e.PVRTC2_2BPP=91]="PVRTC2_2BPP",e[e.PVRTC2_4BPP=92]="PVRTC2_4BPP",e[e.ASTC_RGBA_4X4=93]="ASTC_RGBA_4X4",e[e.ASTC_RGBA_5X4=94]="ASTC_RGBA_5X4",e[e.ASTC_RGBA_5X5=95]="ASTC_RGBA_5X5",e[e.ASTC_RGBA_6X5=96]="ASTC_RGBA_6X5",e[e.ASTC_RGBA_6X6=97]="ASTC_RGBA_6X6",e[e.ASTC_RGBA_8X5=98]="ASTC_RGBA_8X5",e[e.ASTC_RGBA_8X6=99]="ASTC_RGBA_8X6",e[e.ASTC_RGBA_8X8=100]="ASTC_RGBA_8X8",e[e.ASTC_RGBA_10X5=101]="ASTC_RGBA_10X5",e[e.ASTC_RGBA_10X6=102]="ASTC_RGBA_10X6",e[e.ASTC_RGBA_10X8=103]="ASTC_RGBA_10X8",e[e.ASTC_RGBA_10X10=104]="ASTC_RGBA_10X10",e[e.ASTC_RGBA_12X10=105]="ASTC_RGBA_12X10",e[e.ASTC_RGBA_12X12=106]="ASTC_RGBA_12X12",e[e.ASTC_SRGBA_4X4=107]="ASTC_SRGBA_4X4",e[e.ASTC_SRGBA_5X4=108]="ASTC_SRGBA_5X4",e[e.ASTC_SRGBA_5X5=109]="ASTC_SRGBA_5X5",e[e.ASTC_SRGBA_6X5=110]="ASTC_SRGBA_6X5",e[e.ASTC_SRGBA_6X6=111]="ASTC_SRGBA_6X6",e[e.ASTC_SRGBA_8X5=112]="ASTC_SRGBA_8X5",e[e.ASTC_SRGBA_8X6=113]="ASTC_SRGBA_8X6",e[e.ASTC_SRGBA_8X8=114]="ASTC_SRGBA_8X8",e[e.ASTC_SRGBA_10X5=115]="ASTC_SRGBA_10X5",e[e.ASTC_SRGBA_10X6=116]="ASTC_SRGBA_10X6",e[e.ASTC_SRGBA_10X8=117]="ASTC_SRGBA_10X8",e[e.ASTC_SRGBA_10X10=118]="ASTC_SRGBA_10X10",e[e.ASTC_SRGBA_12X10=119]="ASTC_SRGBA_12X10",e[e.ASTC_SRGBA_12X12=120]="ASTC_SRGBA_12X12",e[e.COUNT=121]="COUNT"}(Oo||(Oo=e("x",{}))),function(e){e[e.NONE=0]="NONE",e[e.UNORM=1]="UNORM",e[e.SNORM=2]="SNORM",e[e.UINT=3]="UINT",e[e.INT=4]="INT",e[e.UFLOAT=5]="UFLOAT",e[e.FLOAT=6]="FLOAT"}(Do||(Do=e("y",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BOOL=1]="BOOL",e[e.BOOL2=2]="BOOL2",e[e.BOOL3=3]="BOOL3",e[e.BOOL4=4]="BOOL4",e[e.INT=5]="INT",e[e.INT2=6]="INT2",e[e.INT3=7]="INT3",e[e.INT4=8]="INT4",e[e.UINT=9]="UINT",e[e.UINT2=10]="UINT2",e[e.UINT3=11]="UINT3",e[e.UINT4=12]="UINT4",e[e.FLOAT=13]="FLOAT",e[e.FLOAT2=14]="FLOAT2",e[e.FLOAT3=15]="FLOAT3",e[e.FLOAT4=16]="FLOAT4",e[e.MAT2=17]="MAT2",e[e.MAT2X3=18]="MAT2X3",e[e.MAT2X4=19]="MAT2X4",e[e.MAT3X2=20]="MAT3X2",e[e.MAT3=21]="MAT3",e[e.MAT3X4=22]="MAT3X4",e[e.MAT4X2=23]="MAT4X2",e[e.MAT4X3=24]="MAT4X3",e[e.MAT4=25]="MAT4",e[e.SAMPLER1D=26]="SAMPLER1D",e[e.SAMPLER1D_ARRAY=27]="SAMPLER1D_ARRAY",e[e.SAMPLER2D=28]="SAMPLER2D",e[e.SAMPLER2D_ARRAY=29]="SAMPLER2D_ARRAY",e[e.SAMPLER3D=30]="SAMPLER3D",e[e.SAMPLER_CUBE=31]="SAMPLER_CUBE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE1D=33]="TEXTURE1D",e[e.TEXTURE1D_ARRAY=34]="TEXTURE1D_ARRAY",e[e.TEXTURE2D=35]="TEXTURE2D",e[e.TEXTURE2D_ARRAY=36]="TEXTURE2D_ARRAY",e[e.TEXTURE3D=37]="TEXTURE3D",e[e.TEXTURE_CUBE=38]="TEXTURE_CUBE",e[e.IMAGE1D=39]="IMAGE1D",e[e.IMAGE1D_ARRAY=40]="IMAGE1D_ARRAY",e[e.IMAGE2D=41]="IMAGE2D",e[e.IMAGE2D_ARRAY=42]="IMAGE2D_ARRAY",e[e.IMAGE3D=43]="IMAGE3D",e[e.IMAGE_CUBE=44]="IMAGE_CUBE",e[e.SUBPASS_INPUT=45]="SUBPASS_INPUT",e[e.COUNT=46]="COUNT"}(zo||(zo=e("T",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.INDEX=4]="INDEX",e[e.VERTEX=8]="VERTEX",e[e.UNIFORM=16]="UNIFORM",e[e.STORAGE=32]="STORAGE",e[e.INDIRECT=64]="INDIRECT"}(Lo||(Lo=e("z",{}))),function(e){e[e.NONE=0]="NONE"}(Fo||(Fo=e("E",{}))),function(e){e[e.NONE=0]="NONE",e[e.READ_ONLY=1]="READ_ONLY",e[e.WRITE_ONLY=2]="WRITE_ONLY",e[e.READ_WRITE=3]="READ_WRITE"}(Uo||(Uo=e("M",{}))),function(e){e[e.NONE=0]="NONE",e[e.DEVICE=1]="DEVICE",e[e.HOST=2]="HOST"}(Bo||(Bo=e("G",{}))),function(e){e[e.TEX1D=0]="TEX1D",e[e.TEX2D=1]="TEX2D",e[e.TEX3D=2]="TEX3D",e[e.CUBE=3]="CUBE",e[e.TEX1D_ARRAY=4]="TEX1D_ARRAY",e[e.TEX2D_ARRAY=5]="TEX2D_ARRAY"}(Go||(Go=e("H",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.SAMPLED=4]="SAMPLED",e[e.STORAGE=8]="STORAGE",e[e.COLOR_ATTACHMENT=16]="COLOR_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=32]="DEPTH_STENCIL_ATTACHMENT",e[e.INPUT_ATTACHMENT=64]="INPUT_ATTACHMENT"}(ko||(ko=e("I",{}))),function(e){e[e.NONE=0]="NONE",e[e.GEN_MIPMAP=1]="GEN_MIPMAP",e[e.IMMUTABLE=2]="IMMUTABLE",e[e.GENERAL_LAYOUT=4]="GENERAL_LAYOUT"}(Ho||(Ho=e("J",{}))),function(e){e[e.X1=1]="X1",e[e.X2=2]="X2",e[e.X4=4]="X4",e[e.X8=8]="X8",e[e.X16=16]="X16",e[e.X32=32]="X32",e[e.X64=64]="X64"}(jo||(jo=e("K",{}))),function(e){e[e.NONE=0]="NONE",e[e.POINT=1]="POINT",e[e.LINEAR=2]="LINEAR",e[e.ANISOTROPIC=3]="ANISOTROPIC"}(Vo||(Vo=e("L",{}))),function(e){e[e.WRAP=0]="WRAP",e[e.MIRROR=1]="MIRROR",e[e.CLAMP=2]="CLAMP",e[e.BORDER=3]="BORDER"}(qo||(qo=e("N",{}))),function(e){e[e.NEVER=0]="NEVER",e[e.LESS=1]="LESS",e[e.EQUAL=2]="EQUAL",e[e.LESS_EQUAL=3]="LESS_EQUAL",e[e.GREATER=4]="GREATER",e[e.NOT_EQUAL=5]="NOT_EQUAL",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.ALWAYS=7]="ALWAYS"}(Wo||(Wo=e("Q",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.KEEP=1]="KEEP",e[e.REPLACE=2]="REPLACE",e[e.INCR=3]="INCR",e[e.DECR=4]="DECR",e[e.INVERT=5]="INVERT",e[e.INCR_WRAP=6]="INCR_WRAP",e[e.DECR_WRAP=7]="DECR_WRAP"}(Xo||(Xo=e("U",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=2]="SRC_ALPHA",e[e.DST_ALPHA=3]="DST_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=4]="ONE_MINUS_SRC_ALPHA",e[e.ONE_MINUS_DST_ALPHA=5]="ONE_MINUS_DST_ALPHA",e[e.SRC_COLOR=6]="SRC_COLOR",e[e.DST_COLOR=7]="DST_COLOR",e[e.ONE_MINUS_SRC_COLOR=8]="ONE_MINUS_SRC_COLOR",e[e.ONE_MINUS_DST_COLOR=9]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=10]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=11]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=12]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=13]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=14]="ONE_MINUS_CONSTANT_ALPHA"}(Yo||(Yo=e("V",{}))),function(e){e[e.ADD=0]="ADD",e[e.SUB=1]="SUB",e[e.REV_SUB=2]="REV_SUB",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(Ko||(Ko=e("W",{}))),function(e){e[e.NONE=0]="NONE",e[e.R=1]="R",e[e.G=2]="G",e[e.B=4]="B",e[e.A=8]="A",e[e.ALL=15]="ALL"}(Qo||(Qo=e("X",{}))),function(e){e[e.NONE=0]="NONE",e[e.VERTEX=1]="VERTEX",e[e.CONTROL=2]="CONTROL",e[e.EVALUATION=4]="EVALUATION",e[e.GEOMETRY=8]="GEOMETRY",e[e.FRAGMENT=16]="FRAGMENT",e[e.COMPUTE=32]="COMPUTE",e[e.ALL=63]="ALL"}(Jo||(Jo=e("Y",{}))),function(e){e[e.LOAD=0]="LOAD",e[e.CLEAR=1]="CLEAR",e[e.DISCARD=2]="DISCARD"}(Zo||(Zo=e("Z",{}))),function(e){e[e.STORE=0]="STORE",e[e.DISCARD=1]="DISCARD"}($o||($o=e("$",{}))),function(e){e[e.NONE=0]="NONE",e[e.INDIRECT_BUFFER=1]="INDIRECT_BUFFER",e[e.INDEX_BUFFER=2]="INDEX_BUFFER",e[e.VERTEX_BUFFER=3]="VERTEX_BUFFER",e[e.VERTEX_SHADER_READ_UNIFORM_BUFFER=4]="VERTEX_SHADER_READ_UNIFORM_BUFFER",e[e.VERTEX_SHADER_READ_TEXTURE=5]="VERTEX_SHADER_READ_TEXTURE",e[e.VERTEX_SHADER_READ_OTHER=6]="VERTEX_SHADER_READ_OTHER",e[e.FRAGMENT_SHADER_READ_UNIFORM_BUFFER=7]="FRAGMENT_SHADER_READ_UNIFORM_BUFFER",e[e.FRAGMENT_SHADER_READ_TEXTURE=8]="FRAGMENT_SHADER_READ_TEXTURE",e[e.FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT=9]="FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT=10]="FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_OTHER=11]="FRAGMENT_SHADER_READ_OTHER",e[e.COLOR_ATTACHMENT_READ=12]="COLOR_ATTACHMENT_READ",e[e.DEPTH_STENCIL_ATTACHMENT_READ=13]="DEPTH_STENCIL_ATTACHMENT_READ",e[e.COMPUTE_SHADER_READ_UNIFORM_BUFFER=14]="COMPUTE_SHADER_READ_UNIFORM_BUFFER",e[e.COMPUTE_SHADER_READ_TEXTURE=15]="COMPUTE_SHADER_READ_TEXTURE",e[e.COMPUTE_SHADER_READ_OTHER=16]="COMPUTE_SHADER_READ_OTHER",e[e.TRANSFER_READ=17]="TRANSFER_READ",e[e.HOST_READ=18]="HOST_READ",e[e.PRESENT=19]="PRESENT",e[e.VERTEX_SHADER_WRITE=20]="VERTEX_SHADER_WRITE",e[e.FRAGMENT_SHADER_WRITE=21]="FRAGMENT_SHADER_WRITE",e[e.COLOR_ATTACHMENT_WRITE=22]="COLOR_ATTACHMENT_WRITE",e[e.DEPTH_STENCIL_ATTACHMENT_WRITE=23]="DEPTH_STENCIL_ATTACHMENT_WRITE",e[e.COMPUTE_SHADER_WRITE=24]="COMPUTE_SHADER_WRITE",e[e.TRANSFER_WRITE=25]="TRANSFER_WRITE",e[e.HOST_PREINITIALIZED=26]="HOST_PREINITIALIZED",e[e.HOST_WRITE=27]="HOST_WRITE"}(er||(er=e("a0",{}))),function(e){e[e.NONE=0]="NONE",e[e.SAMPLE_ZERO=1]="SAMPLE_ZERO",e[e.AVERAGE=2]="AVERAGE",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(tr||(tr=e("a1",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.RAY_TRACING=2]="RAY_TRACING"}(nr||(nr=e("a2",{}))),function(e){e[e.POINT_LIST=0]="POINT_LIST",e[e.LINE_LIST=1]="LINE_LIST",e[e.LINE_STRIP=2]="LINE_STRIP",e[e.LINE_LOOP=3]="LINE_LOOP",e[e.LINE_LIST_ADJACENCY=4]="LINE_LIST_ADJACENCY",e[e.LINE_STRIP_ADJACENCY=5]="LINE_STRIP_ADJACENCY",e[e.ISO_LINE_LIST=6]="ISO_LINE_LIST",e[e.TRIANGLE_LIST=7]="TRIANGLE_LIST",e[e.TRIANGLE_STRIP=8]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=9]="TRIANGLE_FAN",e[e.TRIANGLE_LIST_ADJACENCY=10]="TRIANGLE_LIST_ADJACENCY",e[e.TRIANGLE_STRIP_ADJACENCY=11]="TRIANGLE_STRIP_ADJACENCY",e[e.TRIANGLE_PATCH_ADJACENCY=12]="TRIANGLE_PATCH_ADJACENCY",e[e.QUAD_PATCH_LIST=13]="QUAD_PATCH_LIST"}(ir||(ir=e("a3",{}))),function(e){e[e.FILL=0]="FILL",e[e.POINT=1]="POINT",e[e.LINE=2]="LINE"}(or||(or=e("a4",{}))),function(e){e[e.GOURAND=0]="GOURAND",e[e.FLAT=1]="FLAT"}(rr||(rr=e("a5",{}))),function(e){e[e.NONE=0]="NONE",e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK"}(ar||(ar=e("a6",{}))),function(e){e[e.NONE=0]="NONE",e[e.VIEWPORT=1]="VIEWPORT",e[e.SCISSOR=2]="SCISSOR",e[e.LINE_WIDTH=4]="LINE_WIDTH",e[e.DEPTH_BIAS=8]="DEPTH_BIAS",e[e.BLEND_CONSTANTS=16]="BLEND_CONSTANTS",e[e.DEPTH_BOUNDS=32]="DEPTH_BOUNDS",e[e.STENCIL_WRITE_MASK=64]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=128]="STENCIL_COMPARE_MASK"}(sr||(sr=e("a7",{}))),function(e){e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK",e[e.ALL=3]="ALL"}(cr||(cr=e("a8",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.UNIFORM_BUFFER=1]="UNIFORM_BUFFER",e[e.DYNAMIC_UNIFORM_BUFFER=2]="DYNAMIC_UNIFORM_BUFFER",e[e.STORAGE_BUFFER=4]="STORAGE_BUFFER",e[e.DYNAMIC_STORAGE_BUFFER=8]="DYNAMIC_STORAGE_BUFFER",e[e.SAMPLER_TEXTURE=16]="SAMPLER_TEXTURE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE=64]="TEXTURE",e[e.STORAGE_IMAGE=128]="STORAGE_IMAGE",e[e.INPUT_ATTACHMENT=256]="INPUT_ATTACHMENT"}(lr||(lr=e("a9",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.TRANSFER=2]="TRANSFER"}(ur||(ur=e("aa",{}))),function(e){e[e.PRIMARY=0]="PRIMARY",e[e.SECONDARY=1]="SECONDARY"}(fr||(fr=e("ab",{}))),function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.DEPTH=2]="DEPTH",e[e.STENCIL=4]="STENCIL",e[e.DEPTH_STENCIL=6]="DEPTH_STENCIL",e[e.ALL=7]="ALL"}(_r||(_r=e("ac",{})));var dr,vr=e("ad",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},e}()),gr=e("ae",function(){function e(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p,h,d,v,g,y,x,S,C){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===u&&(u=0),void 0===f&&(f=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===p&&(p=0),void 0===h&&(h=1),void 0===d&&(d=0),void 0===v&&(v=0),void 0===g&&(g=new vr),void 0===y&&(y=new vr),void 0===x&&(x=-1),void 0===S&&(S=1),void 0===C&&(C=1),this.maxVertexAttributes=e,this.maxVertexUniformVectors=t,this.maxFragmentUniformVectors=n,this.maxTextureUnits=i,this.maxImageUnits=o,this.maxVertexTextureUnits=r,this.maxColorRenderTargets=a,this.maxShaderStorageBufferBindings=s,this.maxShaderStorageBlockSize=c,this.maxUniformBufferBindings=l,this.maxUniformBlockSize=u,this.maxTextureSize=f,this.maxCubeMapTextureSize=_,this.depthBits=m,this.stencilBits=p,this.uboOffsetAlignment=h,this.maxComputeSharedMemorySize=d,this.maxComputeWorkGroupInvocations=v,this.maxComputeWorkGroupSize=g,this.maxComputeWorkGroupCount=y,this.clipSpaceMinZ=x,this.screenSpaceSignY=S,this.clipSpaceSignY=C}return e.prototype.copy=function(e){return this.maxVertexAttributes=e.maxVertexAttributes,this.maxVertexUniformVectors=e.maxVertexUniformVectors,this.maxFragmentUniformVectors=e.maxFragmentUniformVectors,this.maxTextureUnits=e.maxTextureUnits,this.maxImageUnits=e.maxImageUnits,this.maxVertexTextureUnits=e.maxVertexTextureUnits,this.maxColorRenderTargets=e.maxColorRenderTargets,this.maxShaderStorageBufferBindings=e.maxShaderStorageBufferBindings,this.maxShaderStorageBlockSize=e.maxShaderStorageBlockSize,this.maxUniformBufferBindings=e.maxUniformBufferBindings,this.maxUniformBlockSize=e.maxUniformBlockSize,this.maxTextureSize=e.maxTextureSize,this.maxCubeMapTextureSize=e.maxCubeMapTextureSize,this.depthBits=e.depthBits,this.stencilBits=e.stencilBits,this.uboOffsetAlignment=e.uboOffsetAlignment,this.maxComputeSharedMemorySize=e.maxComputeSharedMemorySize,this.maxComputeWorkGroupInvocations=e.maxComputeWorkGroupInvocations,this.maxComputeWorkGroupSize.copy(e.maxComputeWorkGroupSize),this.maxComputeWorkGroupCount.copy(e.maxComputeWorkGroupCount),this.clipSpaceMinZ=e.clipSpaceMinZ,this.screenSpaceSignY=e.screenSpaceSignY,this.clipSpaceSignY=e.clipSpaceSignY,this},e}()),yr=e("af",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},e}()),xr=e("ag",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=e,this.y=t,this.width=n,this.height=i}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this},e}()),Sr=e("ah",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.width=e,this.height=t,this.depth=n}return e.prototype.copy=function(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this},e}()),Cr=e("ai",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.mipLevel=e,this.baseArrayLayer=t,this.layerCount=n}return e.prototype.copy=function(e){return this.mipLevel=e.mipLevel,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this},e}()),Tr=e("aj",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=1),this.baseMipLevel=e,this.levelCount=t,this.baseArrayLayer=n,this.layerCount=i}return e.prototype.copy=function(e){return this.baseMipLevel=e.baseMipLevel,this.levelCount=e.levelCount,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this},e}()),Er=e("ak",function(){function e(e,t,n,i,o){void 0===e&&(e=new Cr),void 0===t&&(t=new yr),void 0===n&&(n=new Cr),void 0===i&&(i=new yr),void 0===o&&(o=new Sr),this.srcSubres=e,this.srcOffset=t,this.dstSubres=n,this.dstOffset=i,this.extent=o}return e.prototype.copy=function(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.extent.copy(e.extent),this},e}()),br=e("al",function(){function e(e,t,n,i,o,r){void 0===e&&(e=new Cr),void 0===t&&(t=new yr),void 0===n&&(n=new Sr),void 0===i&&(i=new Cr),void 0===o&&(o=new yr),void 0===r&&(r=new Sr),this.srcSubres=e,this.srcOffset=t,this.srcExtent=n,this.dstSubres=i,this.dstOffset=o,this.dstExtent=r}return e.prototype.copy=function(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.srcExtent.copy(e.srcExtent),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.dstExtent.copy(e.dstExtent),this},e}()),Ar=e("am",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=new yr),void 0===i&&(i=new Sr),void 0===o&&(o=new Cr),this.buffStride=e,this.buffTexHeight=t,this.texOffset=n,this.texExtent=i,this.texSubres=o}return e.prototype.copy=function(e){return this.buffStride=e.buffStride,this.buffTexHeight=e.buffTexHeight,this.texOffset.copy(e.texOffset),this.texExtent.copy(e.texExtent),this.texSubres.copy(e.texSubres),this},e}()),Pr=e("an",function(){function e(e,t,n,i,o,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=1),this.left=e,this.top=t,this.width=n,this.height=i,this.minDepth=o,this.maxDepth=r}return e.prototype.copy=function(e){return this.left=e.left,this.top=e.top,this.width=e.width,this.height=e.height,this.minDepth=e.minDepth,this.maxDepth=e.maxDepth,this},e}()),wr=e("ao",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=e,this.y=t,this.z=n,this.w=i}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},e}()),Ir=e("ap",function(){function e(e,t,n){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=0),this.bufferOffsets=e,this.samplerOffsets=t,this.flexibleSet=n}return e.prototype.copy=function(e){return this.bufferOffsets=e.bufferOffsets.slice(),this.samplerOffsets=e.samplerOffsets.slice(),this.flexibleSet=e.flexibleSet,this},e}()),Rr=e("aq",function(){function e(e,t,n,i,o){void 0===e&&(e=Lo.NONE),void 0===t&&(t=Bo.NONE),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=Fo.NONE),this.usage=e,this.memUsage=t,this.size=n,this.stride=i,this.flags=o}return e.prototype.copy=function(e){return this.usage=e.usage,this.memUsage=e.memUsage,this.size=e.size,this.stride=e.stride,this.flags=e.flags,this},e}()),Nr=e("ar",function(){function e(e,t,n){void 0===e&&(e=null),void 0===t&&(t=0),void 0===n&&(n=0),this.buffer=e,this.offset=t,this.range=n}return e.prototype.copy=function(e){return this.buffer=e.buffer,this.offset=e.offset,this.range=e.range,this},e}()),Mr=e("as",function(){function e(e,t,n,i,o,r,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=0),void 0===a&&(a=0),this.vertexCount=e,this.firstVertex=t,this.indexCount=n,this.firstIndex=i,this.vertexOffset=o,this.instanceCount=r,this.firstInstance=a}return e.prototype.copy=function(e){return this.vertexCount=e.vertexCount,this.firstVertex=e.firstVertex,this.indexCount=e.indexCount,this.firstIndex=e.firstIndex,this.vertexOffset=e.vertexOffset,this.instanceCount=e.instanceCount,this.firstInstance=e.firstInstance,this},e}()),Or=e("at",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=null),void 0===o&&(o=0),this.groupCountX=e,this.groupCountY=t,this.groupCountZ=n,this.indirectBuffer=i,this.indirectOffset=o}return e.prototype.copy=function(e){return this.groupCountX=e.groupCountX,this.groupCountY=e.groupCountY,this.groupCountZ=e.groupCountZ,this.indirectBuffer=e.indirectBuffer,this.indirectOffset=e.indirectOffset,this},e}()),Dr=e("au",function(){function e(e){void 0===e&&(e=[]),this.drawInfos=e}return e.prototype.copy=function(e){return hr(this.drawInfos,e.drawInfos,Mr),this},e}()),zr=e("av",function(){function e(e,t,n,i,o,r,a,s,c,l){void 0===e&&(e=Go.TEX2D),void 0===t&&(t=ko.NONE),void 0===n&&(n=Oo.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=0),void 0===r&&(r=Ho.NONE),void 0===a&&(a=1),void 0===s&&(s=1),void 0===c&&(c=jo.X1),void 0===l&&(l=1),this.type=e,this.usage=t,this.format=n,this.width=i,this.height=o,this.flags=r,this.layerCount=a,this.levelCount=s,this.samples=c,this.depth=l}return e.prototype.copy=function(e){return this.type=e.type,this.usage=e.usage,this.format=e.format,this.width=e.width,this.height=e.height,this.flags=e.flags,this.layerCount=e.layerCount,this.levelCount=e.levelCount,this.samples=e.samples,this.depth=e.depth,this},e}()),Lr=e("aw",function(){function e(e,t,n,i,o,r,a){void 0===e&&(e=null),void 0===t&&(t=Go.TEX2D),void 0===n&&(n=Oo.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=1),void 0===r&&(r=0),void 0===a&&(a=1),this.texture=e,this.type=t,this.format=n,this.baseLevel=i,this.levelCount=o,this.baseLayer=r,this.layerCount=a}return e.prototype.copy=function(e){return this.texture=e.texture,this.type=e.type,this.format=e.format,this.baseLevel=e.baseLevel,this.levelCount=e.levelCount,this.baseLayer=e.baseLayer,this.layerCount=e.layerCount,this},e}()),Fr=e("ax",function(){function e(e,t,n,i,o,r,a,s,c,l){void 0===e&&(e=Vo.LINEAR),void 0===t&&(t=Vo.LINEAR),void 0===n&&(n=Vo.NONE),void 0===i&&(i=qo.WRAP),void 0===o&&(o=qo.WRAP),void 0===r&&(r=qo.WRAP),void 0===a&&(a=0),void 0===s&&(s=Wo.ALWAYS),void 0===c&&(c=new wr),void 0===l&&(l=0),this.minFilter=e,this.magFilter=t,this.mipFilter=n,this.addressU=i,this.addressV=o,this.addressW=r,this.maxAnisotropy=a,this.cmpFunc=s,this.borderColor=c,this.mipLODBias=l}return e.prototype.copy=function(e){return this.minFilter=e.minFilter,this.magFilter=e.magFilter,this.mipFilter=e.mipFilter,this.addressU=e.addressU,this.addressV=e.addressV,this.addressW=e.addressW,this.maxAnisotropy=e.maxAnisotropy,this.cmpFunc=e.cmpFunc,this.borderColor.copy(e.borderColor),this.mipLODBias=e.mipLODBias,this},e}()),Ur=e("ay",function(){function e(e,t,n){void 0===e&&(e=""),void 0===t&&(t=zo.UNKNOWN),void 0===n&&(n=0),this.name=e,this.type=t,this.count=n}return e.prototype.copy=function(e){return this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),Br=e("az",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=[]),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.members=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,hr(this.members,e.members,Ur),this.count=e.count,this},e}()),Gr=e("aA",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=zo.UNKNOWN),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),kr=e("aB",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),this.set=e,this.binding=t,this.name=n,this.count=i}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this},e}()),Hr=e("aC",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=zo.UNKNOWN),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),jr=e("aD",function(){function e(e,t,n,i,o,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=zo.UNKNOWN),void 0===o&&(o=0),void 0===r&&(r=Uo.READ_WRITE),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o,this.memoryAccess=r}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this.memoryAccess=e.memoryAccess,this},e}()),Vr=e("aE",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),void 0===o&&(o=Uo.READ_WRITE),this.set=e,this.binding=t,this.name=n,this.count=i,this.memoryAccess=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this.memoryAccess=e.memoryAccess,this},e}()),qr=e("aF",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),this.set=e,this.binding=t,this.name=n,this.count=i}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this},e}()),Wr=e("aG",function(){function e(e,t){void 0===e&&(e=Jo.NONE),void 0===t&&(t=""),this.stage=e,this.source=t}return e.prototype.copy=function(e){return this.stage=e.stage,this.source=e.source,this},e}()),Xr=e("aH",function(){function e(e,t,n,i,o,r){void 0===e&&(e=""),void 0===t&&(t=Oo.UNKNOWN),void 0===n&&(n=!1),void 0===i&&(i=0),void 0===o&&(o=!1),void 0===r&&(r=0),this.name=e,this.format=t,this.isNormalized=n,this.stream=i,this.isInstanced=o,this.location=r}return e.prototype.copy=function(e){return this.name=e.name,this.format=e.format,this.isNormalized=e.isNormalized,this.stream=e.stream,this.isInstanced=e.isInstanced,this.location=e.location,this},e}()),Yr=e("aI",function(){function e(e,t,n,i,o,r,a,s,c,l){void 0===e&&(e=""),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=[]),void 0===r&&(r=[]),void 0===a&&(a=[]),void 0===s&&(s=[]),void 0===c&&(c=[]),void 0===l&&(l=[]),this.name=e,this.stages=t,this.attributes=n,this.blocks=i,this.buffers=o,this.samplerTextures=r,this.samplers=a,this.textures=s,this.images=c,this.subpassInputs=l}return e.prototype.copy=function(e){return this.name=e.name,hr(this.stages,e.stages,Wr),hr(this.attributes,e.attributes,Xr),hr(this.blocks,e.blocks,Br),hr(this.buffers,e.buffers,Vr),hr(this.samplerTextures,e.samplerTextures,Gr),hr(this.samplers,e.samplers,kr),hr(this.textures,e.textures,Hr),hr(this.images,e.images,jr),hr(this.subpassInputs,e.subpassInputs,qr),this},e}()),Kr=e("aJ",function(){function e(e,t,n,i){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=null),void 0===i&&(i=null),this.attributes=e,this.vertexBuffers=t,this.indexBuffer=n,this.indirectBuffer=i}return e.prototype.copy=function(e){return hr(this.attributes,e.attributes,Xr),this.vertexBuffers=e.vertexBuffers.slice(),this.indexBuffer=e.indexBuffer,this.indirectBuffer=e.indirectBuffer,this},e}()),Qr=e("aK",function(){function e(e,t,n,i,o,r,a){void 0===e&&(e=Oo.UNKNOWN),void 0===t&&(t=jo.X1),void 0===n&&(n=Zo.CLEAR),void 0===i&&(i=$o.STORE),void 0===o&&(o=[]),void 0===r&&(r=[er.PRESENT]),void 0===a&&(a=!1),this.format=e,this.sampleCount=t,this.loadOp=n,this.storeOp=i,this.beginAccesses=o,this.endAccesses=r,this.isGeneralLayout=a}return e.prototype.copy=function(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.loadOp=e.loadOp,this.storeOp=e.storeOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this.isGeneralLayout=e.isGeneralLayout,this},e}()),Jr=e("aL",function(){function e(e,t,n,i,o,r,a,s,c){void 0===e&&(e=Oo.UNKNOWN),void 0===t&&(t=jo.X1),void 0===n&&(n=Zo.CLEAR),void 0===i&&(i=$o.STORE),void 0===o&&(o=Zo.CLEAR),void 0===r&&(r=$o.STORE),void 0===a&&(a=[]),void 0===s&&(s=[er.DEPTH_STENCIL_ATTACHMENT_WRITE]),void 0===c&&(c=!1),this.format=e,this.sampleCount=t,this.depthLoadOp=n,this.depthStoreOp=i,this.stencilLoadOp=o,this.stencilStoreOp=r,this.beginAccesses=a,this.endAccesses=s,this.isGeneralLayout=c}return e.prototype.copy=function(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.depthLoadOp=e.depthLoadOp,this.depthStoreOp=e.depthStoreOp,this.stencilLoadOp=e.stencilLoadOp,this.stencilStoreOp=e.stencilStoreOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this.isGeneralLayout=e.isGeneralLayout,this},e}()),Zr=e("aM",function(){function e(e,t,n,i,o,r,a,s){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=-1),void 0===r&&(r=-1),void 0===a&&(a=tr.NONE),void 0===s&&(s=tr.NONE),this.inputs=e,this.colors=t,this.resolves=n,this.preserves=i,this.depthStencil=o,this.depthStencilResolve=r,this.depthResolveMode=a,this.stencilResolveMode=s}return e.prototype.copy=function(e){return this.inputs=e.inputs.slice(),this.colors=e.colors.slice(),this.resolves=e.resolves.slice(),this.preserves=e.preserves.slice(),this.depthStencil=e.depthStencil,this.depthStencilResolve=e.depthStencilResolve,this.depthResolveMode=e.depthResolveMode,this.stencilResolveMode=e.stencilResolveMode,this},e}()),$r=e("aN",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=[]),void 0===i&&(i=[]),this.srcSubpass=e,this.dstSubpass=t,this.srcAccesses=n,this.dstAccesses=i}return e.prototype.copy=function(e){return this.srcSubpass=e.srcSubpass,this.dstSubpass=e.dstSubpass,this.srcAccesses=e.srcAccesses.slice(),this.dstAccesses=e.dstAccesses.slice(),this},e}()),ea=e("aO",function(){function e(e,t,n,i){void 0===e&&(e=[]),void 0===t&&(t=new Jr),void 0===n&&(n=[]),void 0===i&&(i=[]),this.colorAttachments=e,this.depthStencilAttachment=t,this.subpasses=n,this.dependencies=i}return e.prototype.copy=function(e){return hr(this.colorAttachments,e.colorAttachments,Qr),this.depthStencilAttachment.copy(e.depthStencilAttachment),hr(this.subpasses,e.subpasses,Zr),hr(this.dependencies,e.dependencies,$r),this},e}()),ta=e("aP",function(){function e(e,t){void 0===e&&(e=[]),void 0===t&&(t=[]),this.prevAccesses=e,this.nextAccesses=t}return e.prototype.copy=function(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this},e}()),na=e("aQ",function(){function e(e,t,n,i,o){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=!1),void 0===i&&(i=null),void 0===o&&(o=null),this.prevAccesses=e,this.nextAccesses=t,this.discardContents=n,this.srcQueue=i,this.dstQueue=o}return e.prototype.copy=function(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this.discardContents=e.discardContents,this.srcQueue=e.srcQueue,this.dstQueue=e.dstQueue,this},e}()),ia=e("aR",function(){function e(e,t,n){void 0===e&&(e=null),void 0===t&&(t=[]),void 0===n&&(n=null),this.renderPass=e,this.colorTextures=t,this.depthStencilTexture=n}return e.prototype.copy=function(e){return this.renderPass=e.renderPass,this.colorTextures=e.colorTextures.slice(),this.depthStencilTexture=e.depthStencilTexture,this},e}()),oa=e("aS",function(){function e(e,t,n,i,o){void 0===e&&(e=-1),void 0===t&&(t=lr.UNKNOWN),void 0===n&&(n=0),void 0===i&&(i=Jo.NONE),void 0===o&&(o=[]),this.binding=e,this.descriptorType=t,this.count=n,this.stageFlags=i,this.immutableSamplers=o}return e.prototype.copy=function(e){return this.binding=e.binding,this.descriptorType=e.descriptorType,this.count=e.count,this.stageFlags=e.stageFlags,this.immutableSamplers=e.immutableSamplers.slice(),this},e}()),ra=e("aT",function(){function e(e){void 0===e&&(e=[]),this.bindings=e}return e.prototype.copy=function(e){return hr(this.bindings,e.bindings,oa),this},e}()),aa=e("aU",function(){function e(e){void 0===e&&(e=null),this.layout=e}return e.prototype.copy=function(e){return this.layout=e.layout,this},e}()),sa=e("aV",function(){function e(e){void 0===e&&(e=[]),this.setLayouts=e}return e.prototype.copy=function(e){return this.setLayouts=e.setLayouts.slice(),this},e}()),ca=e("aW",function(){function e(e){void 0===e&&(e=[]),this.attributes=e}return e.prototype.copy=function(e){return hr(this.attributes,e.attributes,Xr),this},e}()),la=e("aX",function(){function e(e,t){void 0===e&&(e=null),void 0===t&&(t=fr.PRIMARY),this.queue=e,this.type=t}return e.prototype.copy=function(e){return this.queue=e.queue,this.type=e.type,this},e}()),ua=e("aY",function(){function e(e){void 0===e&&(e=ur.GRAPHICS),this.type=e}return e.prototype.copy=function(e){return this.type=e.type,this},e}()),fa=e("aZ",(function(e,t,n,i,o,r,a,s){void 0===e&&(e=""),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=Do.NONE),void 0===o&&(o=!1),void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===s&&(s=!1),this.name=e,this.size=t,this.count=n,this.type=i,this.hasAlpha=o,this.hasDepth=r,this.hasStencil=a,this.isCompressed=s})),_a=e("a_",function(){function e(e,t){void 0===e&&(e=0),void 0===t&&(t=0),this.bufferSize=e,this.textureSize=t}return e.prototype.copy=function(e){return this.bufferSize=e.bufferSize,this.textureSize=e.textureSize,this},e}()),ma=e("a$",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.writeMask=e,this.compareMask=t,this.reference=n}return e.prototype.copy=function(e){return this.writeMask=e.writeMask,this.compareMask=e.compareMask,this.reference=e.reference,this},e}()),pa=e("b0",function(){function e(e,t,n,i,o,r,a,s,c,l,u){void 0===e&&(e=new Pr),void 0===t&&(t=new xr),void 0===n&&(n=new wr),void 0===i&&(i=1),void 0===o&&(o=0),void 0===r&&(r=0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=new ma),void 0===u&&(u=new ma),this.viewport=e,this.scissor=t,this.blendConstant=n,this.lineWidth=i,this.depthBiasConstant=o,this.depthBiasClamp=r,this.depthBiasSlope=a,this.depthMinBounds=s,this.depthMaxBounds=c,this.stencilStatesFront=l,this.stencilStatesBack=u}return e.prototype.copy=function(e){return this.viewport.copy(e.viewport),this.scissor.copy(e.scissor),this.blendConstant.copy(e.blendConstant),this.lineWidth=e.lineWidth,this.depthBiasConstant=e.depthBiasConstant,this.depthBiasClamp=e.depthBiasClamp,this.depthBiasSlope=e.depthBiasSlope,this.depthMinBounds=e.depthMinBounds,this.depthMaxBounds=e.depthMaxBounds,this.stencilStatesFront.copy(e.stencilStatesFront),this.stencilStatesBack.copy(e.stencilStatesBack),this},e}()),ha=e("b1",function(){function e(e){this._gfxType=wo.UNKNOWN,this._gfxType=e}return Q(e,[{key:"gfxType",get:function(){return this._gfxType}}]),e}()),da=e("b2",(function(e,t,n,i,o,r,a){void 0===t&&(t=!0),void 0===n&&(n=!0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===r&&(r=1),void 0===a&&(a=new Ir),this.canvasElm=e,this.isAntialias=t,this.isPremultipliedAlpha=n,this.devicePixelRatio=i,this.width=o,this.height=r,this.bindingMappingInfo=a}));!function(e){e.ATTR_POSITION="a_position",e.ATTR_NORMAL="a_normal",e.ATTR_TANGENT="a_tangent",e.ATTR_BITANGENT="a_bitangent",e.ATTR_WEIGHTS="a_weights",e.ATTR_JOINTS="a_joints",e.ATTR_COLOR="a_color",e.ATTR_COLOR1="a_color1",e.ATTR_COLOR2="a_color2",e.ATTR_TEX_COORD="a_texCoord",e.ATTR_TEX_COORD1="a_texCoord1",e.ATTR_TEX_COORD2="a_texCoord2",e.ATTR_TEX_COORD3="a_texCoord3",e.ATTR_TEX_COORD4="a_texCoord4",e.ATTR_TEX_COORD5="a_texCoord5",e.ATTR_TEX_COORD6="a_texCoord6",e.ATTR_TEX_COORD7="a_texCoord7",e.ATTR_TEX_COORD8="a_texCoord8",e.ATTR_BATCH_ID="a_batch_id",e.ATTR_BATCH_UV="a_batch_uv"}(dr||(dr=e("b3",{})));var va=e("b4",Object.freeze([new fa("UNKNOWN",0,0,Do.NONE,!1,!1,!1,!1),new fa("A8",1,1,Do.UNORM,!0,!1,!1,!1),new fa("L8",1,1,Do.UNORM,!1,!1,!1,!1),new fa("LA8",1,2,Do.UNORM,!0,!1,!1,!1),new fa("R8",1,1,Do.UNORM,!1,!1,!1,!1),new fa("R8SN",1,1,Do.SNORM,!1,!1,!1,!1),new fa("R8UI",1,1,Do.UINT,!1,!1,!1,!1),new fa("R8I",1,1,Do.INT,!1,!1,!1,!1),new fa("R16F",2,1,Do.FLOAT,!1,!1,!1,!1),new fa("R16UI",2,1,Do.UINT,!1,!1,!1,!1),new fa("R16I",2,1,Do.INT,!1,!1,!1,!1),new fa("R32F",4,1,Do.FLOAT,!1,!1,!1,!1),new fa("R32UI",4,1,Do.UINT,!1,!1,!1,!1),new fa("R32I",4,1,Do.INT,!1,!1,!1,!1),new fa("RG8",2,2,Do.UNORM,!1,!1,!1,!1),new fa("RG8SN",2,2,Do.SNORM,!1,!1,!1,!1),new fa("RG8UI",2,2,Do.UINT,!1,!1,!1,!1),new fa("RG8I",2,2,Do.INT,!1,!1,!1,!1),new fa("RG16F",4,2,Do.FLOAT,!1,!1,!1,!1),new fa("RG16UI",4,2,Do.UINT,!1,!1,!1,!1),new fa("RG16I",4,2,Do.INT,!1,!1,!1,!1),new fa("RG32F",8,2,Do.FLOAT,!1,!1,!1,!1),new fa("RG32UI",8,2,Do.UINT,!1,!1,!1,!1),new fa("RG32I",8,2,Do.INT,!1,!1,!1,!1),new fa("RGB8",3,3,Do.UNORM,!1,!1,!1,!1),new fa("SRGB8",3,3,Do.UNORM,!1,!1,!1,!1),new fa("RGB8SN",3,3,Do.SNORM,!1,!1,!1,!1),new fa("RGB8UI",3,3,Do.UINT,!1,!1,!1,!1),new fa("RGB8I",3,3,Do.INT,!1,!1,!1,!1),new fa("RGB16F",6,3,Do.FLOAT,!1,!1,!1,!1),new fa("RGB16UI",6,3,Do.UINT,!1,!1,!1,!1),new fa("RGB16I",6,3,Do.INT,!1,!1,!1,!1),new fa("RGB32F",12,3,Do.FLOAT,!1,!1,!1,!1),new fa("RGB32UI",12,3,Do.UINT,!1,!1,!1,!1),new fa("RGB32I",12,3,Do.INT,!1,!1,!1,!1),new fa("RGBA8",4,4,Do.UNORM,!0,!1,!1,!1),new fa("BGRA8",4,4,Do.UNORM,!0,!1,!1,!1),new fa("SRGB8_A8",4,4,Do.UNORM,!0,!1,!1,!1),new fa("RGBA8SN",4,4,Do.SNORM,!0,!1,!1,!1),new fa("RGBA8UI",4,4,Do.UINT,!0,!1,!1,!1),new fa("RGBA8I",4,4,Do.INT,!0,!1,!1,!1),new fa("RGBA16F",8,4,Do.FLOAT,!0,!1,!1,!1),new fa("RGBA16UI",8,4,Do.UINT,!0,!1,!1,!1),new fa("RGBA16I",8,4,Do.INT,!0,!1,!1,!1),new fa("RGBA32F",16,4,Do.FLOAT,!0,!1,!1,!1),new fa("RGBA32UI",16,4,Do.UINT,!0,!1,!1,!1),new fa("RGBA32I",16,4,Do.INT,!0,!1,!1,!1),new fa("R5G6B5",2,3,Do.UNORM,!1,!1,!1,!1),new fa("R11G11B10F",4,3,Do.FLOAT,!1,!1,!1,!1),new fa("RGB5A1",2,4,Do.UNORM,!0,!1,!1,!1),new fa("RGBA4",2,4,Do.UNORM,!0,!1,!1,!1),new fa("RGB10A2",2,4,Do.UNORM,!0,!1,!1,!1),new fa("RGB10A2UI",2,4,Do.UINT,!0,!1,!1,!1),new fa("RGB9E5",2,4,Do.FLOAT,!0,!1,!1,!1),new fa("D16",2,1,Do.UINT,!1,!0,!1,!1),new fa("D16S8",3,2,Do.UINT,!1,!0,!0,!1),new fa("D24",3,1,Do.UINT,!1,!0,!1,!1),new fa("D24S8",4,2,Do.UINT,!1,!0,!0,!1),new fa("D32F",4,1,Do.FLOAT,!1,!0,!1,!1),new fa("D32FS8",5,2,Do.FLOAT,!1,!0,!0,!1),new fa("BC1",1,3,Do.UNORM,!1,!1,!1,!0),new fa("BC1_ALPHA",1,4,Do.UNORM,!0,!1,!1,!0),new fa("BC1_SRGB",1,3,Do.UNORM,!1,!1,!1,!0),new fa("BC1_SRGB_ALPHA",1,4,Do.UNORM,!0,!1,!1,!0),new fa("BC2",1,4,Do.UNORM,!0,!1,!1,!0),new fa("BC2_SRGB",1,4,Do.UNORM,!0,!1,!1,!0),new fa("BC3",1,4,Do.UNORM,!0,!1,!1,!0),new fa("BC3_SRGB",1,4,Do.UNORM,!0,!1,!1,!0),new fa("BC4",1,1,Do.UNORM,!1,!1,!1,!0),new fa("BC4_SNORM",1,1,Do.SNORM,!1,!1,!1,!0),new fa("BC5",1,2,Do.UNORM,!1,!1,!1,!0),new fa("BC5_SNORM",1,2,Do.SNORM,!1,!1,!1,!0),new fa("BC6H_UF16",1,3,Do.UFLOAT,!1,!1,!1,!0),new fa("BC6H_SF16",1,3,Do.FLOAT,!1,!1,!1,!0),new fa("BC7",1,4,Do.UNORM,!0,!1,!1,!0),new fa("BC7_SRGB",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ETC_RGB8",1,3,Do.UNORM,!1,!1,!1,!0),new fa("ETC2_RGB8",1,3,Do.UNORM,!1,!1,!1,!0),new fa("ETC2_SRGB8",1,3,Do.UNORM,!1,!1,!1,!0),new fa("ETC2_RGB8_A1",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ETC2_SRGB8_A1",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ETC2_RGBA8",2,4,Do.UNORM,!0,!1,!1,!0),new fa("ETC2_SRGB8_A8",2,4,Do.UNORM,!0,!1,!1,!0),new fa("EAC_R11",1,1,Do.UNORM,!1,!1,!1,!0),new fa("EAC_R11SN",1,1,Do.SNORM,!1,!1,!1,!0),new fa("EAC_RG11",2,2,Do.UNORM,!1,!1,!1,!0),new fa("EAC_RG11SN",2,2,Do.SNORM,!1,!1,!1,!0),new fa("PVRTC_RGB2",2,3,Do.UNORM,!1,!1,!1,!0),new fa("PVRTC_RGBA2",2,4,Do.UNORM,!0,!1,!1,!0),new fa("PVRTC_RGB4",2,3,Do.UNORM,!1,!1,!1,!0),new fa("PVRTC_RGBA4",2,4,Do.UNORM,!0,!1,!1,!0),new fa("PVRTC2_2BPP",2,4,Do.UNORM,!0,!1,!1,!0),new fa("PVRTC2_4BPP",2,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_4x4",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_5x4",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_5x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_6x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_6x6",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_8x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_8x6",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_8x8",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_10x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_10x6",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_10x8",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_10x10",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_12x10",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_RGBA_12x12",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_4x4",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_5x4",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_5x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_6x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_6x6",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_8x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_8x6",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_8x8",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_10x5",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_10x6",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_10x8",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_10x10",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_12x10",1,4,Do.UNORM,!0,!1,!1,!0),new fa("ASTC_SRGBA_12x12",1,4,Do.UNORM,!0,!1,!1,!0)])),ga=e("b5",lr.UNIFORM_BUFFER|lr.DYNAMIC_UNIFORM_BUFFER|lr.STORAGE_BUFFER|lr.DYNAMIC_STORAGE_BUFFER),ya=e("b6",lr.SAMPLER_TEXTURE|lr.SAMPLER|lr.TEXTURE|lr.STORAGE_IMAGE|lr.INPUT_ATTACHMENT),xa=e("b7",lr.DYNAMIC_STORAGE_BUFFER|lr.DYNAMIC_UNIFORM_BUFFER),Sa=e("b8",28);function Ca(e){return e>0&&0==(e&e-1)}function Ta(e,t,n,i){if(!va[e].isCompressed)return t*n*i*va[e].size;switch(e){case Oo.BC1:case Oo.BC1_ALPHA:case Oo.BC1_SRGB:case Oo.BC1_SRGB_ALPHA:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case Oo.BC2:case Oo.BC2_SRGB:case Oo.BC3:case Oo.BC3_SRGB:case Oo.BC4:case Oo.BC4_SNORM:case Oo.BC6H_SF16:case Oo.BC6H_UF16:case Oo.BC7:case Oo.BC7_SRGB:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case Oo.BC5:case Oo.BC5_SNORM:return Math.ceil(t/4)*Math.ceil(n/4)*32*i;case Oo.ETC_RGB8:case Oo.ETC2_RGB8:case Oo.ETC2_SRGB8:case Oo.ETC2_RGB8_A1:case Oo.EAC_R11:case Oo.EAC_R11SN:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case Oo.ETC2_RGBA8:case Oo.ETC2_SRGB8_A1:case Oo.EAC_RG11:case Oo.EAC_RG11SN:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case Oo.PVRTC_RGB2:case Oo.PVRTC_RGBA2:case Oo.PVRTC2_2BPP:return Math.ceil(Math.max(t,16)*Math.max(n,8)/4)*i;case Oo.PVRTC_RGB4:case Oo.PVRTC_RGBA4:case Oo.PVRTC2_4BPP:return Math.ceil(Math.max(t,8)*Math.max(n,8)/2)*i;case Oo.ASTC_RGBA_4X4:case Oo.ASTC_SRGBA_4X4:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case Oo.ASTC_RGBA_5X4:case Oo.ASTC_SRGBA_5X4:return Math.ceil(t/5)*Math.ceil(n/4)*16*i;case Oo.ASTC_RGBA_5X5:case Oo.ASTC_SRGBA_5X5:return Math.ceil(t/5)*Math.ceil(n/5)*16*i;case Oo.ASTC_RGBA_6X5:case Oo.ASTC_SRGBA_6X5:return Math.ceil(t/6)*Math.ceil(n/5)*16*i;case Oo.ASTC_RGBA_6X6:case Oo.ASTC_SRGBA_6X6:return Math.ceil(t/6)*Math.ceil(n/6)*16*i;case Oo.ASTC_RGBA_8X5:case Oo.ASTC_SRGBA_8X5:return Math.ceil(t/8)*Math.ceil(n/5)*16*i;case Oo.ASTC_RGBA_8X6:case Oo.ASTC_SRGBA_8X6:return Math.ceil(t/8)*Math.ceil(n/6)*16*i;case Oo.ASTC_RGBA_8X8:case Oo.ASTC_SRGBA_8X8:return Math.ceil(t/8)*Math.ceil(n/8)*16*i;case Oo.ASTC_RGBA_10X5:case Oo.ASTC_SRGBA_10X5:return Math.ceil(t/10)*Math.ceil(n/5)*16*i;case Oo.ASTC_RGBA_10X6:case Oo.ASTC_SRGBA_10X6:return Math.ceil(t/10)*Math.ceil(n/6)*16*i;case Oo.ASTC_RGBA_10X8:case Oo.ASTC_SRGBA_10X8:return Math.ceil(t/10)*Math.ceil(n/8)*16*i;case Oo.ASTC_RGBA_10X10:case Oo.ASTC_SRGBA_10X10:return Math.ceil(t/10)*Math.ceil(n/10)*16*i;case Oo.ASTC_RGBA_12X10:case Oo.ASTC_SRGBA_12X10:return Math.ceil(t/12)*Math.ceil(n/10)*16*i;case Oo.ASTC_RGBA_12X12:case Oo.ASTC_SRGBA_12X12:return Math.ceil(t/12)*Math.ceil(n/12)*16*i;default:return 0}}function Ea(e,t,n,i,o){for(var r=0,a=0;a<o;++a)r+=Ta(e,t,n,i),t=Math.max(t>>1,1),n=Math.max(n>>1,1);return r}var ba=[0,4,8,12,16,4,8,12,16,4,8,12,16,4,8,12,16,16,24,32,24,36,48,32,48,64,4,4,4,4,4,4];function Aa(e){return ba[e]||0}function Pa(e){var t=e.size/e.count;switch(e.type){case Do.UNORM:case Do.UINT:switch(t){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array}break;case Do.SNORM:case Do.INT:switch(t){case 1:return Int8Array;case 2:return Int16Array;case 4:return Int32Array}break;case Do.FLOAT:return Float32Array}return Float32Array}var wa=Object.freeze({__proto__:null,get ObjectType(){return wo},get Status(){return Io},get API(){return Ro},get SurfaceTransform(){return No},get Feature(){return Mo},get Format(){return Oo},get FormatType(){return Do},get Type(){return zo},get BufferUsageBit(){return Lo},get BufferFlagBit(){return Fo},get MemoryAccessBit(){return Uo},get MemoryUsageBit(){return Bo},get TextureType(){return Go},get TextureUsageBit(){return ko},get TextureFlagBit(){return Ho},get SampleCount(){return jo},get Filter(){return Vo},get Address(){return qo},get ComparisonFunc(){return Wo},get StencilOp(){return Xo},get BlendFactor(){return Yo},get BlendOp(){return Ko},get ColorMask(){return Qo},get ShaderStageFlagBit(){return Jo},get LoadOp(){return Zo},get StoreOp(){return $o},get AccessType(){return er},get ResolveMode(){return tr},get PipelineBindPoint(){return nr},get PrimitiveMode(){return ir},get PolygonMode(){return or},get ShadeModel(){return rr},get CullMode(){return ar},get DynamicStateFlagBit(){return sr},get StencilFace(){return cr},get DescriptorType(){return lr},get QueueType(){return ur},get CommandBufferType(){return fr},get ClearFlagBit(){return _r},Size:vr,DeviceCaps:gr,Offset:yr,Rect:xr,Extent:Sr,TextureSubresLayers:Cr,TextureSubresRange:Tr,TextureCopy:Er,TextureBlit:br,BufferTextureCopy:Ar,Viewport:Pr,Color:wr,BindingMappingInfo:Ir,BufferInfo:Rr,BufferViewInfo:Nr,DrawInfo:Mr,DispatchInfo:Or,IndirectBuffer:Dr,TextureInfo:zr,TextureViewInfo:Lr,SamplerInfo:Fr,Uniform:Ur,UniformBlock:Br,UniformSamplerTexture:Gr,UniformSampler:kr,UniformTexture:Hr,UniformStorageImage:jr,UniformStorageBuffer:Vr,UniformInputAttachment:qr,ShaderStage:Wr,Attribute:Xr,ShaderInfo:Yr,InputAssemblerInfo:Kr,ColorAttachment:Qr,DepthStencilAttachment:Jr,SubpassInfo:Zr,SubpassDependency:$r,RenderPassInfo:ea,GlobalBarrierInfo:ta,TextureBarrierInfo:na,FramebufferInfo:ia,DescriptorSetLayoutBinding:oa,DescriptorSetLayoutInfo:ra,DescriptorSetInfo:aa,PipelineLayoutInfo:sa,InputState:ca,CommandBufferInfo:la,QueueInfo:ua,FormatInfo:fa,MemoryStatus:_a,DynamicStencilStates:ma,DynamicStates:pa,Obj:ha,DeviceInfo:da,get AttributeName(){return dr},FormatInfos:va,DESCRIPTOR_BUFFER_TYPE:ga,DESCRIPTOR_SAMPLER_TYPE:ya,DESCRIPTOR_DYNAMIC_TYPE:xa,DRAW_INFO_SIZE:Sa,IsPowerOf2:Ca,FormatSize:Ta,FormatSurfaceSize:Ea,GetTypeSize:Aa,getTypedArrayConstructor:Pa}),Ia=e("B",function(e){function t(t){var n;return(n=e.call(this,wo.BUFFER)||this)._device=void 0,n._usage=Lo.NONE,n._memUsage=Bo.NONE,n._size=0,n._stride=1,n._count=0,n._flags=Fo.NONE,n._indirectBuffer=null,n._isBufferView=!1,n._device=t,n}return Z(t,e),Q(t,[{key:"usage",get:function(){return this._usage}},{key:"memUsage",get:function(){return this._memUsage}},{key:"size",get:function(){return this._size}},{key:"stride",get:function(){return this._stride}},{key:"count",get:function(){return this._count}},{key:"flags",get:function(){return this._flags}}]),t}(ha)),Ra=e("u",function(e){function t(t){var n;return(n=e.call(this,wo.COMMAND_BUFFER)||this)._device=void 0,n._queue=null,n._type=fr.PRIMARY,n._numDrawCalls=0,n._numInstances=0,n._numTris=0,n._device=t,n}return Z(t,e),Q(t,[{key:"type",get:function(){return this._type}},{key:"queue",get:function(){return this._queue}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}}]),t}(ha));Ct(Oo);var Na=e("be",function(){function e(){this._canvas=null,this._canvas2D=null,this._gfxAPI=Ro.UNKNOWN,this._transform=No.IDENTITY,this._deviceName="",this._renderer="",this._vendor="",this._version="",this._features=new Array(Mo.COUNT),this._queue=null,this._cmdBuff=null,this._devicePixelRatio=1,this._width=0,this._height=0,this._colorFmt=Oo.UNKNOWN,this._depthStencilFmt=Oo.UNKNOWN,this._numDrawCalls=0,this._numInstances=0,this._numTris=0,this._memoryStatus=new _a,this._caps=new gr}return e.prototype.hasFeature=function(e){return this._features[e]},Q(e,[{key:"canvas",get:function(){return this._canvas}},{key:"canvas2D",get:function(){return this._canvas2D}},{key:"gfxAPI",get:function(){return this._gfxAPI}},{key:"queue",get:function(){return this._queue}},{key:"commandBuffer",get:function(){return this._cmdBuff}},{key:"devicePixelRatio",get:function(){return this._devicePixelRatio}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"renderer",get:function(){return this._renderer}},{key:"vendor",get:function(){return this._vendor}},{key:"colorFormat",get:function(){return this._colorFmt}},{key:"depthStencilFormat",get:function(){return this._depthStencilFmt}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}},{key:"memoryStatus",get:function(){return this._memoryStatus}},{key:"capabilities",get:function(){return this._caps}},{key:"surfaceTransform",get:function(){return this._transform}}]),e}()),Ma=e("bf",function(e){function t(t){var n;return(n=e.call(this,wo.FRAMEBUFFER)||this)._device=void 0,n._renderPass=null,n._colorTextures=[],n._depthStencilTexture=null,n._device=t,n}return Z(t,e),Q(t,[{key:"renderPass",get:function(){return this._renderPass}},{key:"colorTextures",get:function(){return this._colorTextures}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}}]),t}(ha)),Oa=String.prototype.charCodeAt;function Da(e){return this[e]}function za(e,t){for(var n=e.length,i=t^n,o=0,r="string"==typeof e?Oa:Da;n>=4;){var a=255&r.call(e,o)|(255&r.call(e,++o))<<8|(255&r.call(e,++o))<<16|(255&r.call(e,++o))<<24;a=1540483477*(65535&a)+((1540483477*(a>>>16)&65535)<<16),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)^(a=1540483477*(65535&(a^=a>>>24))+((1540483477*(a>>>16)&65535)<<16)),n-=4,++o}switch(n){case 3:i^=(255&r.call(e,o+2))<<16;case 2:i^=(255&r.call(e,o+1))<<8;case 1:i=1540483477*(65535&(i^=255&r.call(e,o)))+((1540483477*(i>>>16)&65535)<<16)}return i=1540483477*(65535&(i^=i>>>13))+((1540483477*(i>>>16)&65535)<<16),(i^=i>>>15)>>>0}var La=e("bg",function(e){function t(t){var n;return(n=e.call(this,wo.INPUT_ASSEMBLER)||this)._device=void 0,n._attributes=[],n._vertexBuffers=[],n._indexBuffer=null,n._vertexCount=0,n._firstVertex=0,n._indexCount=0,n._firstIndex=0,n._vertexOffset=0,n._instanceCount=0,n._firstInstance=0,n._attributesHash=0,n._indirectBuffer=null,n._device=t,n}Z(t,e);var n=t.prototype;return n.getVertexBuffer=function(e){return void 0===e&&(e=0),e<this._vertexBuffers.length?this._vertexBuffers[e]:null},n.computeAttributesHash=function(){for(var e="attrs",t=0;t<this.attributes.length;++t){var n=this.attributes[t];e+=","+n.name+","+n.format+","+n.isNormalized+","+n.stream+","+n.isInstanced}return za(e,666)},Q(t,[{key:"vertexBuffers",get:function(){return this._vertexBuffers}},{key:"indexBuffer",get:function(){return this._indexBuffer}},{key:"attributes",get:function(){return this._attributes}},{key:"attributesHash",get:function(){return this._attributesHash}},{key:"vertexCount",get:function(){return this._vertexCount},set:function(e){this._vertexCount=e}},{key:"firstVertex",get:function(){return this._firstVertex},set:function(e){this._firstVertex=e}},{key:"indexCount",get:function(){return this._indexCount},set:function(e){this._indexCount=e}},{key:"firstIndex",get:function(){return this._firstIndex},set:function(e){this._firstIndex=e}},{key:"vertexOffset",get:function(){return this._vertexOffset},set:function(e){this._vertexOffset=e}},{key:"instanceCount",get:function(){return this._instanceCount},set:function(e){this._instanceCount=e}},{key:"firstInstance",get:function(){return this._firstInstance},set:function(e){this._firstInstance=e}},{key:"indirectBuffer",get:function(){return this._indirectBuffer}}]),t}(ha)),Fa=e("D",function(e){function t(t){var n;return(n=e.call(this,wo.DESCRIPTOR_SET)||this)._device=void 0,n._layout=null,n._buffers=[],n._textures=[],n._samplers=[],n._isDirty=!1,n._device=t,n}Z(t,e);var n=t.prototype;return n.bindBuffer=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&ga){var r=this._layout.descriptorIndices[e];this._buffers[r+n]!==t&&(this._buffers[r+n]=t,this._isDirty=!0)}},n.bindSampler=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&ya){var r=this._layout.descriptorIndices[e];this._samplers[r+n]!==t&&(this._samplers[r+n]=t,this._isDirty=!0)}},n.bindTexture=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&ya){var r=this._layout.descriptorIndices[e];this._textures[r+n]!==t&&(this._textures[r+n]=t,this._isDirty=!0)}},n.getBuffer=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._buffers[n+t]},n.getSampler=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._samplers[n+t]},n.getTexture=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._textures[n+t]},Q(t,[{key:"layout",get:function(){return this._layout}}]),t}(ha)),Ua=e("bh",function(e){function t(t){var n;return(n=e.call(this,wo.DESCRIPTOR_SET_LAYOUT)||this)._device=void 0,n._bindings=[],n._bindingIndices=[],n._descriptorIndices=[],n._device=t,n}return Z(t,e),Q(t,[{key:"bindings",get:function(){return this._bindings}},{key:"bindingIndices",get:function(){return this._bindingIndices}},{key:"descriptorIndices",get:function(){return this._descriptorIndices}}]),t}(ha)),Ba=e("bi",function(e){function t(t){var n;return(n=e.call(this,wo.PIPELINE_LAYOUT)||this)._device=void 0,n._setLayouts=[],n._device=t,n}return Z(t,e),Q(t,[{key:"setLayouts",get:function(){return this._setLayouts}}]),t}(ha)),Ga=e("bj",function(){function e(e,t,n,i,o,r,a,s,c,l,u,f){void 0===e&&(e=!1),void 0===t&&(t=or.FILL),void 0===n&&(n=rr.GOURAND),void 0===i&&(i=ar.BACK),void 0===o&&(o=!0),void 0===r&&(r=!1),void 0===a&&(a=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=!0),void 0===u&&(u=!1),void 0===f&&(f=1),this.isDiscard=e,this.polygonMode=t,this.shadeModel=n,this.cullMode=i,this.isFrontFaceCCW=o,this.depthBiasEnabled=r,this.depthBias=a,this.depthBiasClamp=s,this.depthBiasSlop=c,this.isDepthClip=l,this.isMultisample=u,this.lineWidth=f}var t=e.prototype;return t.reset=function(){this.isDiscard=!1,this.polygonMode=or.FILL,this.shadeModel=rr.GOURAND,this.cullMode=ar.BACK,this.isFrontFaceCCW=!0,this.depthBiasEnabled=!1,this.depthBias=0,this.depthBiasClamp=0,this.depthBiasSlop=0,this.isDepthClip=!0,this.isMultisample=!1,this.lineWidth=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},Q(e,[{key:"native",get:function(){return this}}]),e}()),ka=e("bk",function(){function e(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p,h,d,v,g){void 0===e&&(e=!0),void 0===t&&(t=!0),void 0===n&&(n=Wo.LESS),void 0===i&&(i=!1),void 0===o&&(o=Wo.ALWAYS),void 0===r&&(r=65535),void 0===a&&(a=65535),void 0===s&&(s=Xo.KEEP),void 0===c&&(c=Xo.KEEP),void 0===l&&(l=Xo.KEEP),void 0===u&&(u=1),void 0===f&&(f=!1),void 0===_&&(_=Wo.ALWAYS),void 0===m&&(m=65535),void 0===p&&(p=65535),void 0===h&&(h=Xo.KEEP),void 0===d&&(d=Xo.KEEP),void 0===v&&(v=Xo.KEEP),void 0===g&&(g=1),this.depthTest=e,this.depthWrite=t,this.depthFunc=n,this.stencilTestFront=i,this.stencilFuncFront=o,this.stencilReadMaskFront=r,this.stencilWriteMaskFront=a,this.stencilFailOpFront=s,this.stencilZFailOpFront=c,this.stencilPassOpFront=l,this.stencilRefFront=u,this.stencilTestBack=f,this.stencilFuncBack=_,this.stencilReadMaskBack=m,this.stencilWriteMaskBack=p,this.stencilFailOpBack=h,this.stencilZFailOpBack=d,this.stencilPassOpBack=v,this.stencilRefBack=g}var t=e.prototype;return t.reset=function(){this.depthTest=!0,this.depthWrite=!0,this.depthFunc=Wo.LESS,this.stencilTestFront=!1,this.stencilFuncFront=Wo.ALWAYS,this.stencilReadMaskFront=65535,this.stencilWriteMaskFront=65535,this.stencilFailOpFront=Xo.KEEP,this.stencilZFailOpFront=Xo.KEEP,this.stencilPassOpFront=Xo.KEEP,this.stencilRefFront=1,this.stencilTestBack=!1,this.stencilFuncBack=Wo.ALWAYS,this.stencilReadMaskBack=65535,this.stencilWriteMaskBack=65535,this.stencilFailOpBack=Xo.KEEP,this.stencilZFailOpBack=Xo.KEEP,this.stencilPassOpBack=Xo.KEEP,this.stencilRefBack=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},Q(e,[{key:"native",get:function(){return this}}]),e}()),Ha=e("bl",function(){function e(e,t,n,i,o,r,a,s){void 0===e&&(e=!1),void 0===t&&(t=Yo.ONE),void 0===n&&(n=Yo.ZERO),void 0===i&&(i=Ko.ADD),void 0===o&&(o=Yo.ONE),void 0===r&&(r=Yo.ZERO),void 0===a&&(a=Ko.ADD),void 0===s&&(s=Qo.ALL),this.blend=e,this.blendSrc=t,this.blendDst=n,this.blendEq=i,this.blendSrcAlpha=o,this.blendDstAlpha=r,this.blendAlphaEq=a,this.blendColorMask=s}var t=e.prototype;return t.reset=function(){this.blend=!1,this.blendSrc=Yo.ONE,this.blendDst=Yo.ZERO,this.blendEq=Ko.ADD,this.blendSrcAlpha=Yo.ONE,this.blendDstAlpha=Yo.ZERO,this.blendAlphaEq=Ko.ADD,this.blendColorMask=Qo.ALL},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},e}()),ja=e("bm",function(){function e(e,t,n,i){void 0===e&&(e=!1),void 0===t&&(t=!1),void 0===n&&(n=new wr),void 0===i&&(i=[new Ha]),this.isA2C=e,this.isIndepend=t,this.blendColor=n,this.targets=i}var t=e.prototype;return t.setTarget=function(e,t){var n=this.targets[e];n||(n=this.targets[e]=new Ha),Object.assign(n,t)},t.reset=function(){this.isA2C=!1,this.isIndepend=!1,this.blendColor.x=0,this.blendColor.y=0,this.blendColor.z=0,this.blendColor.w=0,this.targets.length=1,this.targets[0].reset()},t.destroy=function(){},Q(e,[{key:"native",get:function(){return this}}]),e}()),Va=e("bn",(function(e,t,n,i,o,r,a,s,c,l){void 0===e&&(e=null),void 0===t&&(t=null),void 0===n&&(n=null),void 0===i&&(i=new ca),void 0===o&&(o=new Ga),void 0===r&&(r=new ka),void 0===a&&(a=new ja),void 0===s&&(s=ir.TRIANGLE_LIST),void 0===c&&(c=sr.NONE),void 0===l&&(l=nr.GRAPHICS),this.shader=e,this.pipelineLayout=t,this.renderPass=n,this.inputState=i,this.rasterizerState=o,this.depthStencilState=r,this.blendState=a,this.primitive=s,this.dynamicStates=c,this.bindPoint=l})),qa=e("bo",function(e){function t(t){var n;return(n=e.call(this,wo.PIPELINE_STATE)||this)._device=void 0,n._shader=null,n._pipelineLayout=null,n._primitive=ir.TRIANGLE_LIST,n._is=null,n._rs=new Ga,n._dss=new ka,n._bs=new ja,n._dynamicStates=sr.NONE,n._renderPass=null,n._device=t,n}return Z(t,e),Q(t,[{key:"shader",get:function(){return this._shader}},{key:"pipelineLayout",get:function(){return this._pipelineLayout}},{key:"primitive",get:function(){return this._primitive}},{key:"rasterizerState",get:function(){return this._rs}},{key:"depthStencilState",get:function(){return this._dss}},{key:"blendState",get:function(){return this._bs}},{key:"inputState",get:function(){return this._is}},{key:"dynamicStates",get:function(){return this._dynamicStates}},{key:"renderPass",get:function(){return this._renderPass}}]),t}(ha)),Wa=e("bp",function(e){function t(t){var n;return(n=e.call(this,wo.QUEUE)||this)._device=void 0,n._type=ur.GRAPHICS,n._isAsync=!1,n._device=t,n}return Z(t,e),t.prototype.isAsync=function(){return this._isAsync},Q(t,[{key:"type",get:function(){return this._type}}]),t}(ha)),Xa=e("bq",function(e){function t(t){var n;return(n=e.call(this,wo.RENDER_PASS)||this)._device=void 0,n._colorInfos=[],n._depthStencilInfo=null,n._subpasses=[],n._hash=0,n._device=t,n}return Z(t,e),t.prototype.computeHash=function(){var e="";if(this._subpasses.length)for(var t=0;t<this._subpasses.length;++t){var n=this._subpasses[t];if(n.inputs.length){e+="ia";for(var i=0;i<n.inputs.length;++i){var o=this._colorInfos[n.inputs[i]];e+=","+o.format+","+o.sampleCount}}if(n.colors.length){e+="ca";for(var r=0;r<n.inputs.length;++r){var a=this._colorInfos[n.inputs[r]];e+=","+a.format+","+a.sampleCount}}if(n.depthStencil>=0){var s=this._colorInfos[n.depthStencil];e+="ds,"+s.format+","+s.sampleCount}}else{e+="ca";for(var c=0;c<this._colorInfos.length;++c){var l=this._colorInfos[c];e+=","+l.format+","+l.sampleCount}var u=this._depthStencilInfo;u&&(e+="ds,"+u.format+","+u.sampleCount)}return za(e,666)},Q(t,[{key:"colorAttachments",get:function(){return this._colorInfos}},{key:"depthStencilAttachment",get:function(){return this._depthStencilInfo}},{key:"subPasses",get:function(){return this._subpasses}},{key:"hash",get:function(){return this._hash}}]),t}(ha)),Ya=e("br",function(e){function t(t){var n;return(n=e.call(this,wo.SAMPLER)||this)._device=void 0,n._minFilter=Vo.LINEAR,n._magFilter=Vo.LINEAR,n._mipFilter=Vo.NONE,n._addressU=qo.WRAP,n._addressV=qo.WRAP,n._addressW=qo.WRAP,n._maxAnisotropy=16,n._cmpFunc=Wo.NEVER,n._borderColor=new wr,n._mipLODBias=0,n._device=t,n}return Z(t,e),Q(t,[{key:"minFilter",get:function(){return this._minFilter}},{key:"magFilter",get:function(){return this._magFilter}},{key:"mipFilter",get:function(){return this._mipFilter}},{key:"addressU",get:function(){return this._addressU}},{key:"addressV",get:function(){return this._addressV}},{key:"addressW",get:function(){return this._addressW}},{key:"maxAnisotropy",get:function(){return this._maxAnisotropy}},{key:"cmpFunc",get:function(){return this._cmpFunc}},{key:"borderColor",get:function(){return this._borderColor}},{key:"mipLODBias",get:function(){return this._mipLODBias}}]),t}(ha)),Ka=e("bs",function(e){function t(n){var i;return(i=e.call(this,wo.SHADER)||this)._device=void 0,i._id=void 0,i._name="",i._stages=[],i._attributes=[],i._blocks=[],i._samplers=[],i._device=n,i._id=t._shaderIdGen++,i}return Z(t,e),Q(t,[{key:"id",get:function(){return this._id}},{key:"name",get:function(){return this._name}},{key:"attributes",get:function(){return this._attributes}},{key:"blocks",get:function(){return this._blocks}},{key:"samplers",get:function(){return this._samplers}}]),t}(ha));Ka._shaderIdGen=0;var Qa=e("bt",function(e){function t(t){var n;return(n=e.call(this,wo.TEXTURE)||this)._device=void 0,n._type=Go.TEX2D,n._usage=ko.NONE,n._format=Oo.UNKNOWN,n._width=0,n._height=0,n._depth=1,n._layerCount=1,n._levelCount=1,n._samples=jo.X1,n._flags=Ho.NONE,n._isPowerOf2=!1,n._size=0,n._device=t,n}return Z(t,e),Q(t,[{key:"type",get:function(){return this._type}},{key:"usage",get:function(){return this._usage}},{key:"format",get:function(){return this._format}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"depth",get:function(){return this._depth}},{key:"layerCount",get:function(){return this._layerCount}},{key:"levelCount",get:function(){return this._levelCount}},{key:"samples",get:function(){return this._samples}},{key:"flags",get:function(){return this._flags}},{key:"size",get:function(){return this._size}}]),t}(ha)),Ja=e("bu",function(e){function t(t){var n;return(n=e.call(this,wo.GLOBAL_BARRIER)||this)._device=void 0,n._info=new ta,n._device=t,n}return Z(t,e),t.prototype.initialize=function(e){return this._info.copy(e),!0},t}(ha)),Za=e("bv",function(e){function t(t){var n;return(n=e.call(this,wo.TEXTURE_BARRIER)||this)._device=void 0,n._info=new na,n._device=t,n}return Z(t,e),t.prototype.initialize=function(e){return this._info.copy(e),!0},t}(ha)),$a={Device:Na,Buffer:Ia,Texture:Qa,Sampler:Ya,Shader:Ka,InputAssembler:La,RenderPass:Xa,Framebuffer:Ma,DescriptorSet:Fa,DescriptorSetLayout:Ua,PipelineLayout:Ba,PipelineState:qa,CommandBuffer:Ra,Queue:Wa,GlobalBarrier:Ja,TextureBarrier:Za,RasterizerState:Ga,BlendState:ja,BlendTarget:Ha,DepthStencilState:ka,PipelineStateInfo:Va};Object.assign($a,wa),s.gfx=$a;var es,ts={Obj:"GFXObject",DRAW_INFO_SIZE:"GFX_DRAW_INFO_SIZE",DESCRIPTOR_BUFFER_TYPE:"",DESCRIPTOR_SAMPLER_TYPE:"",DESCRIPTOR_DYNAMIC_TYPE:"",getTypedArrayConstructor:""};for(var ns in s.gfx)if("__esModule"!==ns){var is=ts[ns];""===is?is=ns:void 0===is&&(is="GFX"+ns),kn(s,"cc",[{name:is,newName:ns,target:s.gfx,targetName:"cc.gfx"}])}!function(e){e[e.ALL=0]="ALL",e[e.CLOSEST=1]="CLOSEST",e[e.ANY=2]="ANY"}(es||(es=e("f5",{})));var os,rs,as,ss,cs,ls,us,fs,_s=(os=new _i(0,0,0),function(e,t){var n=_i.dot(e.d,t.n);if(Math.abs(n)<Number.EPSILON)return 0;_i.multiplyScalar(os,t.n,t.d);var i=_i.dot(_i.subtract(os,os,e.o),t.n)/n;return i<0?0:i}),ms=(rs=new _i(0,0,0),as=new _i(0,0,0),ss=new _i(0,0,0),cs=new _i(0,0,0),ls=new _i(0,0,0),function(e,t,n){_i.subtract(rs,t.b,t.a),_i.subtract(as,t.c,t.a),_i.cross(ss,e.d,as);var i=_i.dot(rs,ss);if(i<Number.EPSILON&&(!n||i>-Number.EPSILON))return 0;var o=1/i;_i.subtract(cs,e.o,t.a);var r=_i.dot(cs,ss)*o;if(r<0||r>1)return 0;_i.cross(ls,cs,rs);var a=_i.dot(e.d,ls)*o;if(a<0||r+a>1)return 0;var s=_i.dot(as,ls)*o;return s<0?0:s}),ps=function(){var e=new _i(0,0,0);return function(t,n){var i=n.radius,o=n.center,r=t.o,a=t.d,s=i*i;_i.subtract(e,o,r);var c=e.lengthSqr(),l=_i.dot(e,a),u=s-(c-l*l);if(u<0)return 0;var f=Math.sqrt(u),_=c<s?l+f:l-f;return _<0?0:_}}(),hs=(us=new _i,fs=new _i,function(e,t){return _i.subtract(us,t.center,t.halfExtents),_i.add(fs,t.center,t.halfExtents),ds(e,us,fs)});function ds(e,t,n){var i=e.o,o=e.d,r=1/o.x,a=1/o.y,s=1/o.z,c=(t.x-i.x)*r,l=(n.x-i.x)*r,u=(t.y-i.y)*a,f=(n.y-i.y)*a,_=(t.z-i.z)*s,m=(n.z-i.z)*s,p=Math.max(Math.max(Math.min(c,l),Math.min(u,f)),Math.min(_,m)),h=Math.min(Math.min(Math.max(c,l),Math.max(u,f)),Math.max(_,m));return h<0||p>h?0:p>0?p:h}var vs,gs,ys,xs,Ss=function(){var e=new _i,t=new _i,n=new _i,i=new _i,o=new _i,r=new _i,a=new _i,s=new Array(3),c=new Array(3),l=new Array(3),u=new Array(6);return function(f,_){s[0]=_.halfExtents.x,s[1]=_.halfExtents.y,s[2]=_.halfExtents.z,e=_.center,t=f.o,n=f.d,_i.set(i,_.orientation.m00,_.orientation.m01,_.orientation.m02),_i.set(o,_.orientation.m03,_.orientation.m04,_.orientation.m05),_i.set(r,_.orientation.m06,_.orientation.m07,_.orientation.m08),_i.subtract(a,e,t),c[0]=_i.dot(i,n),c[1]=_i.dot(o,n),c[2]=_i.dot(r,n),l[0]=_i.dot(i,a),l[1]=_i.dot(o,a),l[2]=_i.dot(r,a);for(var m=0;m<3;++m){if(0===c[m]){if(-l[m]-s[m]>0||-l[m]+s[m]<0)return 0;c[m]=1e-7}u[2*m+0]=(l[m]+s[m])/c[m],u[2*m+1]=(l[m]-s[m])/c[m]}var p=Math.max(Math.max(Math.min(u[0],u[1]),Math.min(u[2],u[3])),Math.min(u[4],u[5])),h=Math.min(Math.min(Math.max(u[0],u[1]),Math.max(u[2],u[3])),Math.max(u[4],u[5]));return h<0||p>h?0:p>0?p:h}}(),Cs=function(){var e=new _i,t=new _i,n=new _i,i=new _i,o=new _i,r=new _i,a=new _i,s=new mr;return function(c,l){var u=l.radius*l.radius,f=_i.normalize(e,c.d),_=l.ellipseCenter0,m=l.ellipseCenter1,p=_i.subtract(t,m,_);if(p.equals(_i.ZERO))return s.radius=l.radius,s.center.set(l.ellipseCenter0),ac.raySphere(c,s);var h=c.o,d=_i.subtract(n,h,_),v=_i.cross(i,f,p),g=v.lengthSqr();if(0===g){s.radius=l.radius;var y=_i.subtract(o,m,h);return d.lengthSqr()<y.lengthSqr()?s.center.set(l.ellipseCenter0):s.center.set(l.ellipseCenter1),ac.raySphere(c,s)}var x=_i.cross(o,d,p),S=p.lengthSqr(),C=2*_i.dot(v,x),T=C*C-4*g*(x.lengthSqr()-u*S);if(T<0)return 0;var E=(-C-Math.sqrt(T))/(2*g);if(E<0){s.radius=l.radius;var b=_i.subtract(r,m,h);return d.lengthSqr()<b.lengthSqr()?s.center.set(l.ellipseCenter0):s.center.set(l.ellipseCenter1),ac.raySphere(c,s)}var A=_i.scaleAndAdd(r,c.o,f,E),P=_i.subtract(a,A,_),w=_i.dot(P,p)/S;return w>=0&&w<=1?E:w<0?(s.radius=l.radius,s.center.set(l.ellipseCenter0),ac.raySphere(c,s)):w>1?(s.radius=l.radius,s.center.set(l.ellipseCenter1),ac.raySphere(c,s)):0}}(),Ts=(vs=pr.create(),gs={distance:1/0,doubleSided:!1,mode:es.ANY},ys=0,xs=function(e,t,n,i,o,r){e===es.CLOSEST?(ys>t||0===ys)&&(ys=t,r&&(0===r.length?r.push({distance:t,vertexIndex0:n/3,vertexIndex1:i/3,vertexIndex2:o/3}):(r[0].distance=t,r[0].vertexIndex0=n/3,r[0].vertexIndex1=i/3,r[0].vertexIndex2=o/3))):(ys=t,r&&r.push({distance:t,vertexIndex0:n/3,vertexIndex1:i/3,vertexIndex2:o/3}))},function(e,t,n){if(ys=0,0===t.geometricInfo.positions.length)return ys;var i=void 0===n?gs:n;if(ds(e,t.geometricInfo.boundingBox.min,t.geometricInfo.boundingBox.max)){var o=t.primitiveMode,r=t.geometricInfo;!function(e,t,n,i,o){if(n===ir.TRIANGLE_LIST)for(var r=t.length,a=0;a<r;a+=3){var s=3*t[a],c=3*t[a+1],l=3*t[a+2];_i.set(vs.a,e[s],e[s+1],e[s+2]),_i.set(vs.b,e[c],e[c+1],e[c+2]),_i.set(vs.c,e[l],e[l+1],e[l+2]);var u=ac.rayTriangle(i,vs,o.doubleSided);if(!(0===u||u>o.distance)&&(xs(o.mode,u,s,c,l,o.result),o.mode===es.ANY))return u}else if(n===ir.TRIANGLE_STRIP)for(var f=t.length-2,_=0,m=0;m<f;m+=1){var p=3*t[m-_],h=3*t[m+_+1],d=3*t[m+2];_i.set(vs.a,e[p],e[p+1],e[p+2]),_i.set(vs.b,e[h],e[h+1],e[h+2]),_i.set(vs.c,e[d],e[d+1],e[d+2]),_=~_;var v=ac.rayTriangle(i,vs,o.doubleSided);if(!(0===v||v>o.distance)&&(xs(o.mode,v,p,h,d,o.result),o.mode===es.ANY))return v}else if(n===ir.TRIANGLE_FAN){var g=t.length-1,y=3*t[0];_i.set(vs.a,e[y],e[y+1],e[y+2]);for(var x=1;x<g;x+=1){var S=3*t[x],C=3*t[x+1];_i.set(vs.b,e[S],e[S+1],e[S+2]),_i.set(vs.c,e[C],e[C+1],e[C+2]);var T=ac.rayTriangle(i,vs,o.doubleSided);if(!(0===T||T>o.distance)&&(xs(o.mode,T,y,S,C,o.result),o.mode===es.ANY))return T}}}(r.positions,r.indices,o,e,i)}return ys}),Es=function(){var e=0,t={distance:1/0,doubleSided:!1,mode:es.ANY};return function(n,i,o){e=0;var r=void 0===o?t:o,a=i.renderingSubMeshes.length,s=i.struct.minPosition,c=i.struct.maxPosition;if(s&&c&&!ds(n,s,c))return e;for(var l=0;l<a;l++){var u=i.renderingSubMeshes[l],f=Ts(n,u,r);if(f)if(r.mode===es.CLOSEST)(0===e||e>f)&&(e=f,r.subIndices&&(r.subIndices[0]=l));else if(e=f,r.subIndices&&r.subIndices.push(l),r.mode===es.ANY)return f}return e&&r.mode===es.CLOSEST&&(r.result&&(r.result[0].distance=e,r.result.length=1),r.subIndices&&(r.subIndices.length=1)),e}}(),bs=function(){var e=0,t={distance:1/0,doubleSided:!1,mode:es.ANY},n=new Co,i=new Pi;return function(o,r,a){e=0;var s=void 0===a?t:a,c=r.worldBounds;if(c&&!hs(o,c))return e;Co.copy(n,o),r.node&&(Pi.invert(i,r.node.getWorldMatrix(i)),_i.transformMat4(n.o,o.o,i),_i.transformMat4Normal(n.d,o.d,i));for(var l=r.subModels,u=0;u<l.length;u++){var f=l[u].subMesh,_=Ts(n,f,s);if(_)if(s.mode===es.CLOSEST)(0===e||e>_)&&(e=_,s.subIndices&&(s.subIndices[0]=u));else if(e=_,s.subIndices&&s.subIndices.push(u),s.mode===es.ANY)return _}return e&&s.mode===es.CLOSEST&&(s.result&&(s.result[0].distance=e,s.result.length=1),s.subIndices&&(s.subIndices.length=1)),e}}(),As=function(){var e=new _i(0,0,0);return function(t,n){_i.subtract(e,t.e,t.s);var i=(n.d-_i.dot(t.s,n.n))/_i.dot(e,n.n);return i<0||i>1?0:i}}(),Ps=function(){var e=new _i(0,0,0),t=new _i(0,0,0),n=new _i(0,0,0),i=new _i(0,0,0),o=new _i(0,0,0),r=new _i(0,0,0);return function(a,s,c){_i.subtract(e,s.b,s.a),_i.subtract(t,s.c,s.a),_i.subtract(n,a.s,a.e),_i.cross(o,e,t);var l=_i.dot(n,o);if(l<=0)return 0;_i.subtract(i,a.s,s.a);var u=_i.dot(i,o);if(u<0||u>l)return 0;_i.cross(r,n,i);var f=_i.dot(t,r);if(f<0||f>l)return 0;var _=-_i.dot(e,r);if(_<0||f+_>l)return 0;if(c){var m=1/l,p=1-(f*=m)-(_*=m);_i.set(c,s.a.x*p+s.b.x*f+s.c.x*_,s.a.y*p+s.b.y*f+s.c.y*_,s.a.z*p+s.b.z*f+s.c.z*_)}return 1}}(),ws=new Co;function Is(e,t){ws.o.set(e.s),_i.subtract(ws.d,e.e,e.s),ws.d.normalize();var n=hs(ws,t);return n<=e.length()?n:0}function Rs(e,t){ws.o.set(e.s),_i.subtract(ws.d,e.e,e.s),ws.d.normalize();var n=Ss(ws,t);return n<=e.length()?n:0}function Ns(e,t){ws.o.set(e.s),_i.subtract(ws.d,e.e,e.s),ws.d.normalize();var n=ps(ws,t);return n<=e.length()?n:0}var Ms,Os,Ds,zs,Ls=(Ms=new _i,Os=new _i,Ds=new _i,zs=new _i,function(e,t){return _i.subtract(Ms,e.center,e.halfExtents),_i.add(Os,e.center,e.halfExtents),_i.subtract(Ds,t.center,t.halfExtents),_i.add(zs,t.center,t.halfExtents),Ms.x<=zs.x&&Os.x>=Ds.x&&Ms.y<=zs.y&&Os.y>=Ds.y&&Ms.z<=zs.z&&Os.z>=Ds.z});function Fs(e,t,n,i,o,r){_i.set(r[0],e.x+n.x*t.x+i.x*t.y+o.x*t.z,e.y+n.y*t.x+i.y*t.y+o.y*t.z,e.z+n.z*t.x+i.z*t.y+o.z*t.z),_i.set(r[1],e.x-n.x*t.x+i.x*t.y+o.x*t.z,e.y-n.y*t.x+i.y*t.y+o.y*t.z,e.z-n.z*t.x+i.z*t.y+o.z*t.z),_i.set(r[2],e.x+n.x*t.x-i.x*t.y+o.x*t.z,e.y+n.y*t.x-i.y*t.y+o.y*t.z,e.z+n.z*t.x-i.z*t.y+o.z*t.z),_i.set(r[3],e.x+n.x*t.x+i.x*t.y-o.x*t.z,e.y+n.y*t.x+i.y*t.y-o.y*t.z,e.z+n.z*t.x+i.z*t.y-o.z*t.z),_i.set(r[4],e.x-n.x*t.x-i.x*t.y-o.x*t.z,e.y-n.y*t.x-i.y*t.y-o.y*t.z,e.z-n.z*t.x-i.z*t.y-o.z*t.z),_i.set(r[5],e.x+n.x*t.x-i.x*t.y-o.x*t.z,e.y+n.y*t.x-i.y*t.y-o.y*t.z,e.z+n.z*t.x-i.z*t.y-o.z*t.z),_i.set(r[6],e.x-n.x*t.x+i.x*t.y-o.x*t.z,e.y-n.y*t.x+i.y*t.y-o.y*t.z,e.z-n.z*t.x+i.z*t.y-o.z*t.z),_i.set(r[7],e.x-n.x*t.x-i.x*t.y+o.x*t.z,e.y-n.y*t.x-i.y*t.y+o.y*t.z,e.z-n.z*t.x-i.z*t.y+o.z*t.z)}function Us(e,t){for(var n=_i.dot(t,e[0]),i=n,o=1;o<8;++o){var r=_i.dot(t,e[o]);n=r<n?r:n,i=r>i?r:i}return[n,i]}var Bs,Gs,ks,Hs=function(){for(var e=new Array(15),t=0;t<15;t++)e[t]=new _i(0,0,0);for(var n=new Array(8),i=new Array(8),o=0;o<8;o++)n[o]=new _i(0,0,0),i[o]=new _i(0,0,0);var r=new _i,a=new _i;return function(t,o){_i.set(e[0],1,0,0),_i.set(e[1],0,1,0),_i.set(e[2],0,0,1),_i.set(e[3],o.orientation.m00,o.orientation.m01,o.orientation.m02),_i.set(e[4],o.orientation.m03,o.orientation.m04,o.orientation.m05),_i.set(e[5],o.orientation.m06,o.orientation.m07,o.orientation.m08);for(var s=0;s<3;++s)_i.cross(e[6+3*s],e[s],e[0]),_i.cross(e[7+3*s],e[s],e[1]),_i.cross(e[7+3*s],e[s],e[2]);_i.subtract(r,t.center,t.halfExtents),_i.add(a,t.center,t.halfExtents),function(e,t,n){_i.set(n[0],e.x,t.y,t.z),_i.set(n[1],e.x,t.y,e.z),_i.set(n[2],e.x,e.y,t.z),_i.set(n[3],e.x,e.y,e.z),_i.set(n[4],t.x,t.y,t.z),_i.set(n[5],t.x,t.y,e.z),_i.set(n[6],t.x,e.y,t.z),_i.set(n[7],t.x,e.y,e.z)}(r,a,n),Fs(o.center,o.halfExtents,e[3],e[4],e[5],i);for(var c=0;c<15;++c){var l=Us(n,e[c]),u=Us(i,e[c]);if(u[0]>l[1]||l[0]>u[1])return 0}return 1}}(),js=function(e,t){var n=e.halfExtents.x*Math.abs(t.n.x)+e.halfExtents.y*Math.abs(t.n.y)+e.halfExtents.z*Math.abs(t.n.z),i=_i.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1},Vs=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===js(e,t.planes[n]))return 0;return 1},qs=function(){for(var e=new Array(8),t=0,n=0,i=0;i<e.length;i++)e[i]=new _i(0,0,0);return function(i,o){for(var r=0,a=!1,s=0;s<o.planes.length;s++){if(-1===(r=js(i,o.planes[s])))return 0;1===r&&(a=!0)}if(!a)return 1;for(var c=0;c<o.vertices.length;c++)_i.subtract(e[c],o.vertices[c],i.center);t=0,n=0;for(var l=0;l<o.vertices.length;l++)e[l].x>i.halfExtents.x?t++:e[l].x<-i.halfExtents.x&&n++;if(t===o.vertices.length||n===o.vertices.length)return 0;t=0,n=0;for(var u=0;u<o.vertices.length;u++)e[u].y>i.halfExtents.y?t++:e[u].y<-i.halfExtents.y&&n++;if(t===o.vertices.length||n===o.vertices.length)return 0;t=0,n=0;for(var f=0;f<o.vertices.length;f++)e[f].z>i.halfExtents.z?t++:e[f].z<-i.halfExtents.z&&n++;return t===o.vertices.length||n===o.vertices.length?0:1}}(),Ws=(Bs=new _i(0,0,0),Gs=new di,function(e,t){return _i.subtract(Bs,t,e.center),_i.transformMat3(Bs,Bs,di.transpose(Gs,e.orientation)),n=Bs,i=e.halfExtents,Math.abs(n.x)<i.x&&Math.abs(n.y)<i.y&&Math.abs(n.z)<i.z;var n,i}),Xs=(ks=function(e,t,n,i){return Math.abs(e.x*t+e.y*n+e.z*i)},function(e,t){var n=e.halfExtents.x*ks(t.n,e.orientation.m00,e.orientation.m01,e.orientation.m02)+e.halfExtents.y*ks(t.n,e.orientation.m03,e.orientation.m04,e.orientation.m05)+e.halfExtents.z*ks(t.n,e.orientation.m06,e.orientation.m07,e.orientation.m08),i=_i.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1}),Ys=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===Xs(e,t.planes[n]))return 0;return 1},Ks=function(){for(var e=new Array(8),t=0,n=0,i=0,o=0;o<e.length;o++)e[o]=new _i(0,0,0);var r=function(e,t,n,i){return e.x*t+e.y*n+e.z*i};return function(o,a){for(var s=0,c=!1,l=0;l<a.planes.length;l++){if(-1===(s=Xs(o,a.planes[l])))return 0;1===s&&(c=!0)}if(!c)return 1;for(var u=0;u<a.vertices.length;u++)_i.subtract(e[u],a.vertices[u],o.center);n=0,i=0;for(var f=0;f<a.vertices.length;f++)(t=r(e[f],o.orientation.m00,o.orientation.m01,o.orientation.m02))>o.halfExtents.x?n++:t<-o.halfExtents.x&&i++;if(n===a.vertices.length||i===a.vertices.length)return 0;n=0,i=0;for(var _=0;_<a.vertices.length;_++)(t=r(e[_],o.orientation.m03,o.orientation.m04,o.orientation.m05))>o.halfExtents.y?n++:t<-o.halfExtents.y&&i++;if(n===a.vertices.length||i===a.vertices.length)return 0;n=0,i=0;for(var m=0;m<a.vertices.length;m++)(t=r(e[m],o.orientation.m06,o.orientation.m07,o.orientation.m08))>o.halfExtents.z?n++:t<-o.halfExtents.z&&i++;return n===a.vertices.length||i===a.vertices.length?0:1}}(),Qs=function(){for(var e=new Array(15),t=0;t<15;t++)e[t]=new _i(0,0,0);for(var n=new Array(8),i=new Array(8),o=0;o<8;o++)n[o]=new _i(0,0,0),i[o]=new _i(0,0,0);return function(t,o){_i.set(e[0],t.orientation.m00,t.orientation.m01,t.orientation.m02),_i.set(e[1],t.orientation.m03,t.orientation.m04,t.orientation.m05),_i.set(e[2],t.orientation.m06,t.orientation.m07,t.orientation.m08),_i.set(e[3],o.orientation.m00,o.orientation.m01,o.orientation.m02),_i.set(e[4],o.orientation.m03,o.orientation.m04,o.orientation.m05),_i.set(e[5],o.orientation.m06,o.orientation.m07,o.orientation.m08);for(var r=0;r<3;++r)_i.cross(e[6+3*r],e[r],e[3]),_i.cross(e[7+3*r],e[r],e[4]),_i.cross(e[8+3*r],e[r],e[5]);Fs(t.center,t.halfExtents,e[0],e[1],e[2],n),Fs(o.center,o.halfExtents,e[3],e[4],e[5],i);for(var a=0;a<15;++a){var s=Us(n,e[a]),c=Us(i,e[a]);if(c[0]>s[1]||s[0]>c[1])return 0}return 1}}(),Js=function(){for(var e=new mr,t=new _i,n=new _i,i=new _i,o=new Array(8),r=0;r<8;r++)o[r]=new _i;for(var a=new Array(8),s=0;s<8;s++)a[s]=new _i;return function(r,s){if(0===_i.squaredDistance(s.ellipseCenter0,s.ellipseCenter1))return e.radius=s.radius,e.center.set(s.ellipseCenter0),ac.sphereOBB(e,r);t.x=r.orientation.m00,t.y=r.orientation.m01,t.z=r.orientation.m02,n.x=r.orientation.m03,n.y=r.orientation.m04,n.z=r.orientation.m05,i.x=r.orientation.m06,i.y=r.orientation.m07,i.z=r.orientation.m08,Fs(r.center,r.halfExtents,t,n,i,o);var c=a,l=_i.copy(c[0],t),u=_i.copy(c[1],n),f=_i.copy(c[2],i);_i.subtract(c[3],s.center,r.center).normalize();var _=_i.subtract(c[4],s.ellipseCenter0,s.ellipseCenter1);_.normalize(),_i.cross(c[5],l,_),_i.cross(c[6],u,_),_i.cross(c[7],f,_);for(var m=0;m<8;++m){var p=Us(o,c[m]),h=_i.dot(c[m],s.ellipseCenter0),d=_i.dot(c[m],s.ellipseCenter1),v=Math.max(h,d),g=Math.min(h,d)-s.radius,y=v+s.radius;if(g>p[1]||p[0]>y)return 0}return 1}}(),Zs=function(e,t){var n=_i.dot(t.n,e.center),i=e.radius*t.n.length();return n+i<t.d?-1:n-i>t.d?0:1},$s=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===Zs(e,t.planes[n]))return 0;return 1},ec=function(){var e=new _i(0,0,0),t=[1,-1,1,-1,1,-1];return function(n,i){for(var o=0;o<6;o++){var r=i.planes[o],a=n.radius,s=n.center,c=r.n,l=r.d,u=_i.dot(c,s);if(u+a<l)return 0;if(!(u-a>l)){_i.add(e,s,_i.multiplyScalar(e,c,a));for(var f=0;f<6;f++)if(f!==o&&f!==o+t[o]){var _=i.planes[f];if(_i.dot(_.n,e)<_.d)return 0}}}return 1}}(),tc=function(e,t){var n=e.radius+t.radius;return _i.squaredDistance(e.center,t.center)<n*n},nc=function(){var e=new _i;return function(t,n){return go(e,t.center,n),_i.squaredDistance(t.center,e)<t.radius*t.radius}}(),ic=function(){var e=new _i;return function(t,n){return yo(e,t.center,n),_i.squaredDistance(t.center,e)<t.radius*t.radius}}(),oc=function(){var e=new _i,t=new _i;return function(n,i){var o=n.radius+i.radius,r=o*o,a=_i.squaredDistance(i.ellipseCenter0,i.ellipseCenter1);if(0===a)return _i.squaredDistance(n.center,i.center)<r;_i.subtract(e,n.center,i.ellipseCenter0),_i.subtract(t,i.ellipseCenter1,i.ellipseCenter0);var s=_i.dot(e,t)/a;return s<0?_i.squaredDistance(n.center,i.ellipseCenter0)<r:s>1?_i.squaredDistance(n.center,i.ellipseCenter1)<r:(_i.scaleAndAdd(e,i.ellipseCenter0,t,s),_i.squaredDistance(n.center,e)<r)}}(),rc=function(){var e=new _i,t=new _i,n=new _i,i=new _i,o=new _i,r=new _i;return function(a,s){var c,l,u=_i.subtract(e,a.ellipseCenter1,a.ellipseCenter0),f=_i.subtract(t,s.ellipseCenter1,s.ellipseCenter0),_=_i.subtract(n,a.ellipseCenter0,s.ellipseCenter0),m=_i.dot(u,u),p=_i.dot(u,f),h=_i.dot(f,f),d=_i.dot(u,_),v=_i.dot(f,_),g=m*h-p*p,y=g,x=g;g<Jn?(c=0,y=1,l=v,x=h):(l=m*v-p*d,(c=p*v-h*d)<0?(c=0,l=v,x=h):c>y&&(c=y,l=v+p,x=h)),l<0?(l=0,-d<0?c=0:-d>m?c=y:(c=-d,y=m)):l>x&&(l=x,-d+p<0?c=0:-d+p>m?c=y:(c=-d+p,y=m));var S=Math.abs(c)<Jn?0:c/y,C=Math.abs(l)<Jn?0:l/x,T=i;T.set(_),T.add(_i.multiplyScalar(o,u,S)),T.subtract(_i.multiplyScalar(r,f,C));var E=a.radius+s.radius;return T.lengthSqr()<E*E}}(),ac=e("em",{raySphere:ps,rayAABB:hs,rayOBB:Ss,rayPlane:_s,rayTriangle:ms,rayCapsule:Cs,raySubMesh:Ts,rayMesh:Es,rayModel:bs,lineSphere:Ns,lineAABB:Is,lineOBB:Rs,linePlane:As,lineTriangle:Ps,sphereWithSphere:tc,sphereAABB:nc,sphereOBB:ic,spherePlane:Zs,sphereFrustum:$s,sphereFrustumAccurate:ec,sphereCapsule:oc,aabbWithAABB:Ls,aabbWithOBB:Hs,aabbPlane:js,aabbFrustum:Vs,aabbFrustumAccurate:qs,obbWithOBB:Qs,obbPlane:Xs,obbFrustum:Ys,obbFrustumAccurate:Ks,obbPoint:Ws,obbCapsule:Js,capsuleWithCapsule:rc,resolve:function(e,t,n){void 0===n&&(n=null);var i=e._type,o=t._type,r=this[i|o];return i<o?r(e,t,n):r(t,e,n)}});ac[xo.SHAPE_RAY|xo.SHAPE_SPHERE]=ps,ac[xo.SHAPE_RAY|xo.SHAPE_AABB]=hs,ac[xo.SHAPE_RAY|xo.SHAPE_OBB]=Ss,ac[xo.SHAPE_RAY|xo.SHAPE_PLANE]=_s,ac[xo.SHAPE_RAY|xo.SHAPE_TRIANGLE]=ms,ac[xo.SHAPE_RAY|xo.SHAPE_CAPSULE]=Cs,ac[xo.SHAPE_LINE|xo.SHAPE_SPHERE]=Ns,ac[xo.SHAPE_LINE|xo.SHAPE_AABB]=Is,ac[xo.SHAPE_LINE|xo.SHAPE_OBB]=Rs,ac[xo.SHAPE_LINE|xo.SHAPE_PLANE]=As,ac[xo.SHAPE_LINE|xo.SHAPE_TRIANGLE]=Ps,ac[xo.SHAPE_SPHERE]=tc,ac[xo.SHAPE_SPHERE|xo.SHAPE_AABB]=nc,ac[xo.SHAPE_SPHERE|xo.SHAPE_OBB]=ic,ac[xo.SHAPE_SPHERE|xo.SHAPE_PLANE]=Zs,ac[xo.SHAPE_SPHERE|xo.SHAPE_FRUSTUM]=$s,ac[xo.SHAPE_SPHERE|xo.SHAPE_FRUSTUM_ACCURATE]=ec,ac[xo.SHAPE_SPHERE|xo.SHAPE_CAPSULE]=oc,ac[xo.SHAPE_AABB]=Ls,ac[xo.SHAPE_AABB|xo.SHAPE_OBB]=Hs,ac[xo.SHAPE_AABB|xo.SHAPE_PLANE]=js,ac[xo.SHAPE_AABB|xo.SHAPE_FRUSTUM]=Vs,ac[xo.SHAPE_AABB|xo.SHAPE_FRUSTUM_ACCURATE]=qs,ac[xo.SHAPE_OBB]=Qs,ac[xo.SHAPE_OBB|xo.SHAPE_PLANE]=Xs,ac[xo.SHAPE_OBB|xo.SHAPE_FRUSTUM]=Ys,ac[xo.SHAPE_OBB|xo.SHAPE_FRUSTUM_ACCURATE]=Ks,ac[xo.SHAPE_OBB|xo.SHAPE_CAPSULE]=Js,ac[xo.SHAPE_CAPSULE]=rc,kn(So.prototype,"line",[{name:"mag",newName:"len"},{name:"magnitude",newName:"len"}]),Hn(ac,"intersect",[{name:"line_quad"}]);var sc,cc,lc,uc,fc,_c,mc,pc=new _i(0,0,0),hc=new _i(0,0,0),dc=s.mat4(),vc=s.v4(),gc=e("e$",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),this.n=void 0,this.d=void 0,this._type=void 0,this._type=xo.SHAPE_PLANE,this.n=new _i(e,t,n),this.d=i}return e.create=function(t,n,i,o){return new e(t,n,i,o)},e.clone=function(t){return new e(t.n.x,t.n.y,t.n.z,t.d)},e.copy=function(e,t){return _i.copy(e.n,t.n),e.d=t.d,e},e.fromPoints=function(e,t,n,i){return _i.subtract(pc,n,t),_i.subtract(hc,i,t),_i.normalize(e.n,_i.cross(e.n,pc,hc)),e.d=_i.dot(e.n,t),e},e.set=function(e,t,n,i,o){return e.n.x=t,e.n.y=n,e.n.z=i,e.d=o,e},e.fromNormalAndPoint=function(e,t,n){return _i.copy(e.n,t),e.d=_i.dot(t,n),e},e.normalize=function(e,t){var n=t.n.length();return _i.normalize(e.n,t.n),n>0&&(e.d=t.d/n),e},e.prototype.transform=function(e){Pi.invert(dc,e),Pi.transpose(dc,dc),zi.set(vc,this.n.x,this.n.y,this.n.z,this.d),zi.transformMat4(vc,vc,dc),_i.set(this.n,vc.x,vc.y,vc.z),this.d=vc.w},Q(e,[{key:"type",get:function(){return this._type}},{key:"x",get:function(){return this.n.x},set:function(e){this.n.x=e}},{key:"y",get:function(){return this.n.y},set:function(e){this.n.y=e}},{key:"z",get:function(){return this.n.z},set:function(e){this.n.z=e}},{key:"w",get:function(){return this.d},set:function(e){this.d=e}}]),e}()),yc=function(){function e(e,t,n){this._arrayBuffers=[],this._chunkSize=void 0,this._chunkSize=n*(1<<t)}return e.prototype.allocateNewChunk=function(){return new ArrayBuffer(this._chunkSize)},e}();!function(e){e[e.UINT32=0]="UINT32",e[e.FLOAT32=1]="FLOAT32",e[e.NEVER=2]="NEVER"}(mc||(mc={}));var xc,Sc=function(){function e(e,t,n,i,o){void 0===o&&(o=8),this._dataType=void 0,this._dataMembers=void 0,this._elementCount=void 0,this._entryBits=void 0,this._stride=void 0,this._entriesPerChunk=void 0,this._entryMask=void 0,this._chunkMask=void 0,this._poolFlag=void 0,this._arrayBuffers=[],this._freeLists=[],this._uint32BufferViews=[],this._float32BufferViews=[],this._hasUint32=!1,this._hasFloat32=!1,this._nativePool=void 0,this._elementCount=i.COUNT,this._entryBits=o,this._dataType=t,this._dataMembers=n,this._stride=4*this._elementCount,this._entriesPerChunk=1<<o,this._entryMask=this._entriesPerChunk-1,this._poolFlag=1<<30,this._chunkMask=~(this._entryMask|this._poolFlag),this._nativePool=new yc(e,o,this._stride);var r=mc.NEVER,a=!1,s=!1;for(var c in t){if(a=this._hasFloat32,(s=this._hasUint32)&&a)break;r=t[c],a||r!==mc.FLOAT32?s||r!==mc.UINT32||(this._hasUint32=!0):this._hasFloat32=!0}}var t=e.prototype;return t.alloc=function(){for(var e=0;e<this._freeLists.length;e++){var t=this._freeLists[e];if(t.length){var n=t[t.length-1];return t.length--,(e<<this._entryBits)+n+this._poolFlag}}for(var i=this._nativePool.allocateNewChunk(),o=[],r=[],a=[],s=this._hasFloat32,c=this._hasUint32,l=0;l<this._entriesPerChunk;l++)s&&o.push(new Float32Array(i,this._stride*l,this._elementCount)),c&&r.push(new Uint32Array(i,this._stride*l,this._elementCount)),l&&a.push(l);return c&&this._uint32BufferViews.push(r),s&&this._float32BufferViews.push(o),this._freeLists.push(a),this._arrayBuffers.push(i),(e<<this._entryBits)+this._poolFlag},t.getBuffer=function(e){var t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;return(this._hasFloat32?this._float32BufferViews:this._uint32BufferViews)[t][n]},t.getTypedArray=function(e,t){var n=(this._chunkMask&e)>>this._entryBits,i=this._entryMask&e,o=t,r=(this._dataType[t]===mc.UINT32?this._uint32BufferViews:this._float32BufferViews)[n][i],a=this._dataMembers[t];return r.subarray(o,o+a)},t.free=function(e){var t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;(this._hasUint32?this._uint32BufferViews:this._float32BufferViews)[t][n].fill(0),this._freeLists[t].push(n)},e}();!function(e){e[e.NODE=0]="NODE",e[e.PASS=1]="PASS",e[e.AABB=2]="AABB"}(xc||(xc=e("bV",{})));var Cc,Tc=e("bW",0);!function(e){e[e.DIRTY_FLAG=0]="DIRTY_FLAG",e[e.LAYER=1]="LAYER",e[e.WORLD_SCALE=2]="WORLD_SCALE",e[e.WORLD_POSITION=5]="WORLD_POSITION",e[e.WORLD_ROTATION=8]="WORLD_ROTATION",e[e.WORLD_MATRIX=12]="WORLD_MATRIX",e[e.LOCAL_SCALE=28]="LOCAL_SCALE",e[e.LOCAL_POSITION=31]="LOCAL_POSITION",e[e.LOCAL_ROTATION=34]="LOCAL_ROTATION",e[e.COUNT=38]="COUNT"}(Cc||(Cc=e("bX",{})));var Ec,bc=((sc={})[Cc.DIRTY_FLAG]=mc.UINT32,sc[Cc.LAYER]=mc.UINT32,sc[Cc.WORLD_SCALE]=mc.FLOAT32,sc[Cc.WORLD_POSITION]=mc.FLOAT32,sc[Cc.WORLD_ROTATION]=mc.FLOAT32,sc[Cc.WORLD_MATRIX]=mc.FLOAT32,sc[Cc.LOCAL_SCALE]=mc.FLOAT32,sc[Cc.LOCAL_POSITION]=mc.FLOAT32,sc[Cc.LOCAL_ROTATION]=mc.FLOAT32,sc[Cc.COUNT]=mc.NEVER,sc),Ac=((cc={})[Cc.DIRTY_FLAG]=Cc.LAYER-Cc.DIRTY_FLAG,cc[Cc.LAYER]=Cc.WORLD_SCALE-Cc.LAYER,cc[Cc.WORLD_SCALE]=Cc.WORLD_POSITION-Cc.WORLD_SCALE,cc[Cc.WORLD_POSITION]=Cc.WORLD_ROTATION-Cc.WORLD_POSITION,cc[Cc.WORLD_ROTATION]=Cc.WORLD_MATRIX-Cc.WORLD_ROTATION,cc[Cc.WORLD_MATRIX]=Cc.LOCAL_SCALE-Cc.WORLD_MATRIX,cc[Cc.LOCAL_SCALE]=Cc.LOCAL_POSITION-Cc.LOCAL_SCALE,cc[Cc.LOCAL_POSITION]=Cc.LOCAL_ROTATION-Cc.LOCAL_POSITION,cc[Cc.LOCAL_ROTATION]=Cc.COUNT-Cc.LOCAL_ROTATION,cc[Cc.COUNT]=1,cc);e("bY",new Sc(xc.NODE,bc,Ac,Cc)),function(e){e[e.PRIORITY=0]="PRIORITY",e[e.STAGE=1]="STAGE",e[e.PHASE=2]="PHASE",e[e.PRIMITIVE=3]="PRIMITIVE",e[e.BATCHING_SCHEME=4]="BATCHING_SCHEME",e[e.DYNAMIC_STATE=5]="DYNAMIC_STATE",e[e.HASH=6]="HASH",e[e.COUNT=7]="COUNT"}(Ec||(Ec=e("bZ",{})));var Pc,wc=((lc={})[Ec.PRIORITY]=mc.UINT32,lc[Ec.STAGE]=mc.UINT32,lc[Ec.PHASE]=mc.UINT32,lc[Ec.PRIMITIVE]=mc.UINT32,lc[Ec.BATCHING_SCHEME]=mc.UINT32,lc[Ec.DYNAMIC_STATE]=mc.UINT32,lc[Ec.HASH]=mc.UINT32,lc[Ec.COUNT]=mc.NEVER,lc),Ic=((uc={})[Ec.PRIORITY]=Ec.STAGE-Ec.PRIORITY,uc[Ec.STAGE]=Ec.PHASE-Ec.STAGE,uc[Ec.PHASE]=Ec.PRIMITIVE-Ec.PHASE,uc[Ec.PRIMITIVE]=Ec.BATCHING_SCHEME-Ec.PRIMITIVE,uc[Ec.BATCHING_SCHEME]=Ec.DYNAMIC_STATE-Ec.BATCHING_SCHEME,uc[Ec.DYNAMIC_STATE]=Ec.HASH-Ec.DYNAMIC_STATE,uc[Ec.HASH]=Ec.COUNT-Ec.HASH,uc[Ec.COUNT]=1,uc);e("b_",new Sc(xc.PASS,wc,Ic,Ec)),function(e){e[e.CENTER=0]="CENTER",e[e.HALFEXTENTS=3]="HALFEXTENTS",e[e.COUNT=6]="COUNT"}(Pc||(Pc=e("b$",{})));var Rc=((fc={})[Pc.CENTER]=mc.FLOAT32,fc[Pc.HALFEXTENTS]=mc.FLOAT32,fc[Pc.COUNT]=mc.NEVER,fc),Nc=((_c={})[Pc.CENTER]=Pc.HALFEXTENTS-Pc.CENTER,_c[Pc.HALFEXTENTS]=Pc.COUNT-Pc.HALFEXTENTS,_c[Pc.COUNT]=1,_c),Mc=(e("c0",new Sc(xc.AABB,Rc,Nc,Pc)),new _i),Oc=new _i,Dc=new _i,zc=new _i,Lc=new di,Fc=function(e,t,n){Lc.m00=Math.abs(n.m00),Lc.m01=Math.abs(n.m01),Lc.m02=Math.abs(n.m02),Lc.m03=Math.abs(n.m04),Lc.m04=Math.abs(n.m05),Lc.m05=Math.abs(n.m06),Lc.m06=Math.abs(n.m08),Lc.m07=Math.abs(n.m09),Lc.m08=Math.abs(n.m10),_i.transformMat3(e,t,Lc)},Uc=e("e9",function(){function e(e,t,n,i,o,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===r&&(r=1),this.center=void 0,this.halfExtents=void 0,this._type=void 0,this._aabbHandle=Tc,this._type=xo.SHAPE_AABB,this.center=new _i(e,t,n),this.halfExtents=new _i(i,o,r)}e.create=function(t,n,i,o,r,a){return new e(t,n,i,o,r,a)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.halfExtents.x,t.halfExtents.y,t.halfExtents.z)},e.copy=function(e,t){return _i.copy(e.center,t.center),_i.copy(e.halfExtents,t.halfExtents),e},e.fromPoints=function(e,t,n){return _i.add(Mc,n,t),_i.subtract(Oc,n,t),_i.multiplyScalar(e.center,Mc,.5),_i.multiplyScalar(e.halfExtents,Oc,.5),e},e.set=function(e,t,n,i,o,r,a){return e.center.set(t,n,i),e.halfExtents.set(o,r,a),e},e.merge=function(t,n,i){return _i.subtract(Mc,n.center,n.halfExtents),_i.subtract(Oc,i.center,i.halfExtents),_i.add(Dc,n.center,n.halfExtents),_i.add(zc,i.center,i.halfExtents),_i.max(zc,Dc,zc),_i.min(Dc,Mc,Oc),e.fromPoints(t,Dc,zc)},e.toBoundingSphere=function(e,t){t.getBoundary(Mc,Oc),e.center.set(Mc),e.radius=0,_i.subtract(Dc,Oc,e.center);var n=Dc.length(),i=.5*n;return e.radius+=i,_i.multiplyScalar(Dc,Dc,i/n),_i.add(e.center,e.center,Dc),e},e.transform=function(e,t,n){return _i.transformMat4(e.center,t.center,n),Fc(e.halfExtents,t.halfExtents,n),e};var t=e.prototype;return t.getBoundary=function(e,t){_i.subtract(e,this.center,this.halfExtents),_i.add(t,this.center,this.halfExtents)},t.transform=function(e,t,n,i,o){_i.transformMat4(o.center,this.center,e),Fc(o.halfExtents,this.halfExtents,e)},t.clone=function(){return e.clone(this)},t.copy=function(t){return e.copy(this,t)},t.mergePoint=function(e){this.getBoundary(Mc,Oc),e.x<Mc.x&&(Mc.x=e.x),e.y<Mc.y&&(Mc.y=e.y),e.z<Mc.z&&(Mc.z=e.z),e.x>Oc.x&&(Oc.x=e.x),e.y>Oc.y&&(Oc.y=e.y),e.z>Oc.z&&(Oc.z=e.z),_i.add(Dc,Mc,Oc),this.center.set(_i.multiplyScalar(Dc,Dc,.5)),this.halfExtents.set(Oc.x-Dc.x,Oc.y-Dc.y,Oc.z-Dc.z)},t.mergePoints=function(e){if(!(e.length<1))for(var t=0;t<e.length;t++)this.mergePoint(e[t])},t.mergeFrustum=function(e){return this.mergePoints(e.vertices)},Q(e,[{key:"type",get:function(){return this._type}},{key:"native",get:function(){return this._nativeObj}}]),e}()),Bc=new _i,Gc=new _i,kc=new di,Hc=e("f1",function(){function e(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===r&&(r=1),void 0===a&&(a=1),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===u&&(u=1),void 0===f&&(f=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===p&&(p=1),this.center=void 0,this.halfExtents=void 0,this.orientation=void 0,this._type=void 0,this._type=xo.SHAPE_OBB,this.center=new _i(e,t,n),this.halfExtents=new _i(i,o,r),this.orientation=new di(a,s,c,l,u,f,_,m,p)}e.create=function(t,n,i,o,r,a,s,c,l,u,f,_,m,p,h){return new e(t,n,i,o,r,a,s,c,l,u,f,_,m,p,h)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.halfExtents.x,t.halfExtents.y,t.halfExtents.z,t.orientation.m00,t.orientation.m01,t.orientation.m02,t.orientation.m03,t.orientation.m04,t.orientation.m05,t.orientation.m06,t.orientation.m07,t.orientation.m08)},e.copy=function(e,t){return _i.copy(e.center,t.center),_i.copy(e.halfExtents,t.halfExtents),di.copy(e.orientation,t.orientation),e},e.fromPoints=function(e,t,n){return _i.multiplyScalar(e.center,_i.add(Bc,t,n),.5),_i.multiplyScalar(e.halfExtents,_i.subtract(Gc,n,t),.5),di.identity(e.orientation),e},e.set=function(e,t,n,i,o,r,a,s,c,l,u,f,_,m,p,h){return _i.set(e.center,t,n,i),_i.set(e.halfExtents,o,r,a),di.set(e.orientation,s,c,l,u,f,_,m,p,h),e};var t=e.prototype;return t.getBoundary=function(e,t){!function(e,t,n){kc.m00=Math.abs(n.m00),kc.m01=Math.abs(n.m01),kc.m02=Math.abs(n.m02),kc.m03=Math.abs(n.m03),kc.m04=Math.abs(n.m04),kc.m05=Math.abs(n.m05),kc.m06=Math.abs(n.m06),kc.m07=Math.abs(n.m07),kc.m08=Math.abs(n.m08),_i.transformMat3(e,t,kc)}(Bc,this.halfExtents,this.orientation),_i.subtract(e,this.center,Bc),_i.add(t,this.center,Bc)},t.transform=function(e,t,n,i,o){_i.transformMat4(o.center,this.center,e),di.fromQuat(o.orientation,n),_i.multiply(o.halfExtents,this.halfExtents,i)},t.translateAndRotate=function(e,t,n){_i.transformMat4(n.center,this.center,e),di.fromQuat(n.orientation,t)},t.setScale=function(e,t){_i.multiply(t.halfExtents,this.halfExtents,e)},Q(e,[{key:"type",get:function(){return this._type}}]),e}()),jc=e("f2",function(){function e(e,t,n){void 0===e&&(e=.5),void 0===t&&(t=.5),void 0===n&&(n=1),this._type=void 0,this.radius=void 0,this.halfHeight=void 0,this.axis=void 0,this.center=void 0,this.rotation=void 0,this.ellipseCenter0=void 0,this.ellipseCenter1=void 0,this._type=xo.SHAPE_CAPSULE,this.radius=e,this.halfHeight=t,this.axis=n,this.center=new _i,this.rotation=new yi,this.ellipseCenter0=new _i(0,t,0),this.ellipseCenter1=new _i(0,-t,0),this.updateCache()}var t=e.prototype;return t.transform=function(e,t,n,i,o){var r=i,a=ci(r);o.radius=this.radius*Math.abs(a);var s=(this.halfHeight+this.radius)*Math.abs(r.y)-o.radius;s<0&&(s=0),o.halfHeight=s,_i.transformMat4(o.center,this.center,e),yi.multiply(o.rotation,this.rotation,n),o.updateCache()},t.updateCache=function(){this.updateLocalCenter(),_i.transformQuat(this.ellipseCenter0,this.ellipseCenter0,this.rotation),_i.transformQuat(this.ellipseCenter1,this.ellipseCenter1,this.rotation),this.ellipseCenter0.add(this.center),this.ellipseCenter1.add(this.center)},t.updateLocalCenter=function(){var e=this.halfHeight;switch(this.axis){case 0:this.ellipseCenter0.set(e,0,0),this.ellipseCenter1.set(-e,0,0);break;case 1:this.ellipseCenter0.set(0,e,0),this.ellipseCenter1.set(0,-e,0);break;case 2:this.ellipseCenter0.set(0,0,e),this.ellipseCenter1.set(0,0,-e)}},Q(e,[{key:"type",get:function(){return this._type}}]),e}()),Vc=new Array(8);Vc[0]=new _i(1,1,1),Vc[1]=new _i(-1,1,1),Vc[2]=new _i(-1,-1,1),Vc[3]=new _i(1,-1,1),Vc[4]=new _i(1,1,-1),Vc[5]=new _i(-1,1,-1),Vc[6]=new _i(-1,-1,-1),Vc[7]=new _i(1,-1,-1);var qc,Wc,Xc=new _i,Yc=new _i,Kc=new _i,Qc=e("e3",function(){function e(){this._type=void 0,this.planes=void 0,this.vertices=void 0,this._type=xo.SHAPE_FRUSTUM,this.planes=new Array(6);for(var e=0;e<6;++e)this.planes[e]=gc.create(0,0,0,0);this.vertices=new Array(8);for(var t=0;t<8;++t)this.vertices[t]=new _i}e.createFromAABB=function(e,t){var n=new _i,i=new _i;return _i.subtract(n,t.center,t.halfExtents),_i.add(i,t.center,t.halfExtents),e.vertices[0].set(n.x,i.y,n.z),e.vertices[1].set(i.x,i.y,n.z),e.vertices[2].set(i.x,n.y,n.z),e.vertices[3].set(n.x,n.y,n.z),e.vertices[4].set(n.x,i.y,i.z),e.vertices[5].set(i.x,i.y,i.z),e.vertices[6].set(i.x,n.y,i.z),e.vertices[7].set(n.x,n.y,i.z),e._type!==xo.SHAPE_FRUSTUM_ACCURATE||e.updatePlanes(),e},e.split=function(e,t,n,i,o){var r=Math.tan(.5*t.fov),a=r*t.aspect;Xc.set(i*a,i*r,i),Yc.set(o*a,o*r,o);var s=e.vertices;return Kc.set(Xc.x,Xc.y,Xc.z),_i.transformMat4(s[0],Kc,n),Kc.set(-Xc.x,Xc.y,Xc.z),_i.transformMat4(s[1],Kc,n),Kc.set(-Xc.x,-Xc.y,Xc.z),_i.transformMat4(s[2],Kc,n),Kc.set(Xc.x,-Xc.y,Xc.z),_i.transformMat4(s[3],Kc,n),Kc.set(Yc.x,Yc.y,Yc.z),_i.transformMat4(s[4],Kc,n),Kc.set(-Yc.x,Yc.y,Yc.z),_i.transformMat4(s[5],Kc,n),Kc.set(-Yc.x,-Yc.y,Yc.z),_i.transformMat4(s[6],Kc,n),Kc.set(Yc.x,-Yc.y,Yc.z),_i.transformMat4(s[7],Kc,n),e.updatePlanes(),e},e.create=function(){return new e},e.clone=function(t){return e.copy(new e,t)},e.copy=function(e,t){e._type=t._type;for(var n=0;n<6;++n)gc.copy(e.planes[n],t.planes[n]);for(var i=0;i<8;++i)_i.copy(e.vertices[i],t.vertices[i]);return e};var t=e.prototype;return t.update=function(e,t){if(_i.set(this.planes[0].n,e.m03+e.m00,e.m07+e.m04,e.m11+e.m08),this.planes[0].d=-(e.m15+e.m12),_i.set(this.planes[1].n,e.m03-e.m00,e.m07-e.m04,e.m11-e.m08),this.planes[1].d=-(e.m15-e.m12),_i.set(this.planes[2].n,e.m03+e.m01,e.m07+e.m05,e.m11+e.m09),this.planes[2].d=-(e.m15+e.m13),_i.set(this.planes[3].n,e.m03-e.m01,e.m07-e.m05,e.m11-e.m09),this.planes[3].d=-(e.m15-e.m13),_i.set(this.planes[4].n,e.m03+e.m02,e.m07+e.m06,e.m11+e.m10),this.planes[4].d=-(e.m15+e.m14),_i.set(this.planes[5].n,e.m03-e.m02,e.m07-e.m06,e.m11-e.m10),this.planes[5].d=-(e.m15-e.m14),this._type===xo.SHAPE_FRUSTUM_ACCURATE){for(var n=0;n<6;n++){var i=this.planes[n],o=1/i.n.length();_i.multiplyScalar(i.n,i.n,o),i.d*=o}for(var r=0;r<8;r++)_i.transformMat4(this.vertices[r],Vc[r],t)}},t.transform=function(e){if(this._type===xo.SHAPE_FRUSTUM_ACCURATE){for(var t=0;t<8;t++)_i.transformMat4(this.vertices[t],this.vertices[t],e);gc.fromPoints(this.planes[0],this.vertices[1],this.vertices[5],this.vertices[6]),gc.fromPoints(this.planes[1],this.vertices[3],this.vertices[7],this.vertices[4]),gc.fromPoints(this.planes[2],this.vertices[6],this.vertices[7],this.vertices[3]),gc.fromPoints(this.planes[3],this.vertices[0],this.vertices[4],this.vertices[5]),gc.fromPoints(this.planes[4],this.vertices[2],this.vertices[3],this.vertices[0]),gc.fromPoints(this.planes[0],this.vertices[7],this.vertices[6],this.vertices[5])}},t.updatePlanes=function(){gc.fromPoints(this.planes[0],this.vertices[1],this.vertices[5],this.vertices[6]),gc.fromPoints(this.planes[1],this.vertices[3],this.vertices[7],this.vertices[4]),gc.fromPoints(this.planes[2],this.vertices[6],this.vertices[7],this.vertices[3]),gc.fromPoints(this.planes[3],this.vertices[0],this.vertices[4],this.vertices[5]),gc.fromPoints(this.planes[4],this.vertices[2],this.vertices[3],this.vertices[0]),gc.fromPoints(this.planes[5],this.vertices[7],this.vertices[6],this.vertices[5])},Q(e,[{key:"accurate",set:function(e){this._type=e?xo.SHAPE_FRUSTUM_ACCURATE:xo.SHAPE_FRUSTUM}},{key:"type",get:function(){return this._type}}]),e}());function Jc(e,t,n){void 0===n&&(n=1e-6);for(var i=0,o=e.length-1,r=o>>>1;i<=o;r=i+o>>>1){var a=e[r];if(a>t+n)o=r-1;else{if(!(a<t-n))return r;i=r+1}}return~i}Qc.createOrtho=function(e,t,n,i,o,r){var a=t/2,s=n/2;_i.set(Kc,a,s,i),_i.transformMat4(e.vertices[0],Kc,r),_i.set(Kc,-a,s,i),_i.transformMat4(e.vertices[1],Kc,r),_i.set(Kc,-a,-s,i),_i.transformMat4(e.vertices[2],Kc,r),_i.set(Kc,a,-s,i),_i.transformMat4(e.vertices[3],Kc,r),_i.set(Kc,a,s,o),_i.transformMat4(e.vertices[4],Kc,r),_i.set(Kc,-a,s,o),_i.transformMat4(e.vertices[5],Kc,r),_i.set(Kc,-a,-s,o),_i.transformMat4(e.vertices[6],Kc,r),_i.set(Kc,a,-s,o),_i.transformMat4(e.vertices[7],Kc,r),gc.fromPoints(e.planes[0],e.vertices[1],e.vertices[6],e.vertices[5]),gc.fromPoints(e.planes[1],e.vertices[3],e.vertices[4],e.vertices[7]),gc.fromPoints(e.planes[2],e.vertices[6],e.vertices[3],e.vertices[7]),gc.fromPoints(e.planes[3],e.vertices[0],e.vertices[5],e.vertices[4]),gc.fromPoints(e.planes[4],e.vertices[2],e.vertices[0],e.vertices[3]),gc.fromPoints(e.planes[0],e.vertices[7],e.vertices[5],e.vertices[6])},function(e){e[e.Default=0]="Default",e[e.Normal=1]="Normal",e[e.Loop=2]="Loop",e[e.ShouldWrap=4]="ShouldWrap",e[e.Clamp=8]="Clamp",e[e.PingPong=22]="PingPong",e[e.Reverse=36]="Reverse"}(qc||(qc=e("g6",{}))),function(e){e[e.Default=qc.Default]="Default",e[e.Normal=qc.Normal]="Normal",e[e.Reverse=qc.Reverse]="Reverse",e[e.Loop=qc.Loop]="Loop",e[e.LoopReverse=qc.Loop|qc.Reverse]="LoopReverse",e[e.PingPong=qc.PingPong]="PingPong",e[e.PingPongReverse=qc.PingPong|qc.Reverse]="PingPongReverse"}(Wc||(Wc=e("g5",{}))),Ct(Wc),e("g7",function(){function e(e){this.ratio=0,this.time=0,this.direction=1,this.stopped=!0,this.iterations=0,this.frameIndex=void 0,e&&this.set(e)}return e.prototype.set=function(e){this.ratio=e.ratio,this.time=e.time,this.direction=e.direction,this.stopped=e.stopped,this.iterations=e.iterations,this.frameIndex=e.frameIndex},e}());var Zc=function(){},$c=function(){return Zc},el=tl((function(){}));function tl(e){return function(t){return"function"==typeof t?e(t):function(n){return e(n,t)}}}function nl(e){return function(t){return function(n){!function(e,t,n){var i=ol(e);if(i){var o=rl(i,"proto");rl(o,"editor")[t]=n}}(n,e,t)}}}var il="__ccclassCache__";function ol(e){return rl(e,il)}function rl(e,t){return e[t]||(e[t]={})}var al=e("ef",tl((function(e,t){var n=vt.getSuper(e);n===Object&&(n=null);var i={name:t,extends:n,ctor:e},o=e[il];if(o){var r=o.proto;r&&vt.mixin(i,r),e[il]=void 0}return mn(i)}))),sl=e("gC",nl("requireComponent")),cl=e("ga",nl("executionOrder")),ll=e("gB",el);function ul(e,t,n){var i=null;function o(e,t,n){var o=ol(e.constructor);if(o){var r=rl(o,"proto"),a=rl(r,"properties");!function(e,t,n,i,o,r){var a,s=o&&(o.get||o.set);i&&(a=nn(i,s));var c=t[n],l=vt.mixin(c||{},a||i||{});if(s)o.get&&(l.get=o.get),o.set&&(l.set=o.set);else if(o)o.initializer&&(l.default=function(e){var t;try{t=e()}catch(t){return e}return"object"!=typeof t||null===t?t:e}(o.initializer));else{var u=r.default||(r.default=function(e){var t;try{t=new e}catch(e){return{}}return t}(e));u.hasOwnProperty(n)&&(l.default=u[n])}t[n]=l}(e.constructor,a,t,i,n,o)}}return void 0===e?ul({type:void 0}):void 0===t?(i=e,o):void o(e,t,n)}var fl=Symbol("cc:SerializationMetadata"),_l=e("ei",(function(e,t,n){return ul(pl({}))(e,t,n)})),ml=e("gN",(function(e,t,n){return ul({editorOnly:!0})(e,t,n)}));function pl(e){return e.__noImplicit=!0,"serializable"in e||(e.serializable=!0),e}var hl=e("g1",Zc),dl=e("fY",el),vl=e("f_",$c),gl=e("gV",el),yl=$c,xl=$c,Sl=e("fZ",$c),Cl=e("eu",Zc),Tl=e("go",$c),El=(e("gW",Zc),e("f$",$c)),bl=e("fU",$c),Al=e("gf",$c),Pl=e("gH",$c),wl=e("gI",$c),Il=$c,Rl=e("ge",Zc),Nl=e("ej",$c),Ml=(e("gg",$c),e("gR",Zc),e("gA",Zc),e("gw",Zc)),Ol=Fl(Wt),Dl=e("fW",Fl(Xt)),zl=Fl(Yt),Ll=e("gy",Fl(Kt));function Fl(e){return ul({type:e})}var Ul,Bl,Gl,kl,Hl,jl,Vl,ql,Wl,Xl=e("gn",(function(e,t,n){return ul({__noImplicit:!0,override:!0})(e,t,n)})),Yl=al("cc.KeyframeCurve")((Ul=Symbol.iterator,jl=function(){function e(){se(this,"_times",kl,this),se(this,"_values",Hl,this)}var t=e.prototype;return t[Ul]=function(){var e=this,t=0;return{next:function(){if(t>=e._times.length)return{done:!0,value:void 0};var n=[e._times[t],e._values[t]];return++t,{done:!1,value:n}}}},t.keyframes=function(){return this},t.times=function(){return this._times},t.values=function(){return this._values},t.getKeyframeTime=function(e){return this._times[e]},t.getKeyframeValue=function(e){return this._values[e]},t.addKeyFrame=function(e,t){return this._insertNewKeyframe(e,t)},t.removeKeyframe=function(e){this._times.splice(e,1),this._values.splice(e,1)},t.indexOfKeyframe=function(e){return Jc(this._times,e)},t.updateTime=function(e,t){var n=this._values[e];this.removeKeyframe(e),this._insertNewKeyframe(t,n)},t.assignSorted=function(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.slice());else{var n=Array.from(e);this.setKeyframes(n.map((function(e){return e[0]})),n.map((function(e){return e[1]})))}},t.clear=function(){this._times.length=0,this._values.length=0},t.searchKeyframe=function(e){return Jc(this._times,e)},t.setKeyframes=function(e,t){e.length,t.length,function(e){e.every((function(e,t,n){return 0===t||e>n[t-1]||Zn(e,n[t-1],1e-6)}))}(e),this._times=e,this._values=t},t._insertNewKeyframe=function(e,t){var n=this._times,i=this._values,o=n.length,r=Jc(n,e);if(r>=0)return r;var a=~r;return 0===a?(n.unshift(e),i.unshift(t)):a===o?(n.push(e),i.push(t)):(n.splice(a-1,0,e),i.splice(a-1,0,t)),a},Q(e,[{key:"keyFramesCount",get:function(){return this._times.length}},{key:"rangeMin",get:function(){return this._times[0]}},{key:"rangeMax",get:function(){return this._times[this._values.length-1]}}]),e}(),kl=ce((Gl=jl).prototype,"_times",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Hl=ce(Gl.prototype,"_values",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bl=Gl))||Bl;function Kl(e){return e>-1e-9&&e<1e-9}!function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.CUBIC=2]="CUBIC"}(Vl||(Vl=e("dV",{}))),function(e){e[e.LINEAR=0]="LINEAR",e[e.CLAMP=1]="CLAMP",e[e.LOOP=2]="LOOP",e[e.PING_PONG=3]="PING_PONG"}(ql||(ql=e("dW",{}))),function(e){e[e.NONE=0]="NONE",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.BOTH=3]="BOTH"}(Wl||(Wl=e("dX",{})));var Ql=Object,Jl=Object.freeze({__proto__:null,uniquelyReferenced:hl,ccclass:al,property:ul,requireComponent:sl,executionOrder:cl,disallowMultiple:ll,executeInEditMode:dl,menu:vl,playOnFocus:gl,inspector:yl,icon:xl,help:Sl,type:Fl,integer:Ol,float:Dl,boolean:zl,string:Ll});e("cY",Jl);var Zl=e("fk",function(){function e(e){this._map=null,this._count=0,e?(this._map=e,this._count=Object.keys(e).length):(this._map=vt.createMap(!0),this._count=0)}var t=e.prototype;return t.add=function(e,t){return e in this._map||this._count++,this._map[e]=t},t.get=function(e){return this._map[e]},t.has=function(e){return e in this._map},t.remove=function(e){var t=this._map[e];return e in this._map&&(delete this._map[e],this._count--),t},t.clear=function(){0!==this._count&&(this._map=vt.createMap(!0),this._count=0)},t.forEach=function(e){for(var t in this._map)e(this._map[t],t)},t.find=function(e){for(var t in this._map)if(e(this._map[t],t))return this._map[t];return null},t.destroy=function(){this._map=null},Q(e,[{key:"count",get:function(){return this._count}}]),e}()),$l=e("fK",function(){function e(t,n){this.id=e._pipelineId++,this.name="",this.pipes=[],this.name=t;for(var i=0,o=n.length;i<o;i++)this.pipes.push(n[i])}var t=e.prototype;return t.insert=function(e,t){return t>this.pipes.length?(w(4921),this):(this.pipes.splice(t,0,e),this)},t.append=function(e){return this.pipes.push(e),this},t.remove=function(e){return this.pipes.splice(e,1),this},t.sync=function(e){var t=this.pipes;if(0===t.length)return null;e.isFinish=!1;for(var n=0,i=t.length;n<i;){var o=(0,t[n])(e);if(o)return e.isFinish=!0,o;++n!==i&&(e.input=e.output,e.output=null)}return e.isFinish=!0,e.output},t.async=function(e){0!==this.pipes.length&&(e.isFinish=!1,this._flow(0,e))},t._flow=function(e,t){var n=this;(0,this.pipes[e])(t,(function(i){i?(t.isFinish=!0,t.dispatch("complete",i)):++e<n.pipes.length?(t.input=t.output,t.output=null,n._flow(e,t)):(t.isFinish=!0,t.dispatch("complete",i,t.output))}))},e}());$l._pipelineId=0,function(e){function t(t){var n;if((n=e.call(this)||this)._weakMap={},n._map=null,t)for(var i in t)n._weakMap[i]=new WeakRef(t[i]);return n}Z(t,e);var n=t.prototype;n.add=function(e,t){return this._weakMap[e]=new WeakRef(t),t},n.has=function(e){return e in this._weakMap&&!!this._weakMap[e].deref()},n.get=function(e){return this._weakMap[e]&&this._weakMap[e].deref()},n.remove=function(e){var t=this._weakMap[e];return delete this._weakMap[e],t&&t.deref()},n.clear=function(){this._weakMap=vt.createMap(!0)},n.forEach=function(e){for(var t in this._weakMap){var n=this.get(t);n&&e(n,t)}},n.find=function(e){for(var t in this._weakMap){var n=this.get(t);if(n&&e(n,t))return this._weakMap[t].deref()}return null},n.destroy=function(){this._weakMap={}},Q(t,[{key:"count",get:function(){return Object.values(this._weakMap).filter((function(e){return e.deref()})).length}}])}(Zl),e("fn",new Zl);var eu,tu,nu=e("fx",new Zl),iu=e("fI",new Zl),ou=e("fu",new Zl),ru=(e("fM",new $l("normal load",[])),e("fG",new $l("fetch",[])),e("fN",new $l("transform url",[])));e("fS",null),function(e){e.UUID="uuid",e.PATH="path",e.DIR="dir",e.URL="url",e.SCENE="scene"}(eu||(eu=e("fv",{}))),e("fP",{default:{priority:0},preload:{maxConcurrency:6,maxRequestsPerFrame:2,priority:-1},scene:{maxConcurrency:20,maxRequestsPerFrame:20,priority:1},bundle:{maxConcurrency:20,maxRequestsPerFrame:20,priority:2},remote:{maxRetryCount:4}}),function(e){e.RESOURCES="resources",e.MAIN="main",e.START_SCENE="start-scene"}(tu||(tu=e("fB",{})));var au=e("fF",function(){function e(t){this.id=e._taskId++,this.onComplete=null,this.onProgress=null,this.onError=null,this.source=null,this.output=null,this.input=null,this.progress=null,this.options=null,this.isFinish=!0,this.set(t)}e.create=function(t){var n;return 0!==e._deadPool.length?(n=e._deadPool.pop()).set(t):n=new e(t),n};var t=e.prototype;return t.set=function(e){void 0===e&&(e=Object.create(null)),this.onComplete=e.onComplete||null,this.onProgress=e.onProgress||null,this.onError=e.onError||null,this.source=this.input=e.input,this.output=null,this.progress=e.progress,this.options=e.options||Object.create(null)},t.dispatch=function(e,t,n,i,o){switch(e){case"complete":this.onComplete&&this.onComplete(t,n);break;case"progress":this.onProgress&&this.onProgress(t,n,i,o);break;case"error":this.onError&&this.onError(t,n,i,o);break;default:var r="on"+e[0].toUpperCase()+e.substr(1);"function"==typeof this[r]&&this[r](t,n,i,o)}},t.recycle=function(){e._deadPool.length!==e.MAX_DEAD_NUM&&(this.onComplete=null,this.onProgress=null,this.onError=null,this.source=this.output=this.input=null,this.progress=null,this.options=null,e._deadPool.push(this))},e}());au.MAX_DEAD_NUM=500,au._taskId=0,au._deadPool=[];var su="0123456789abcdef".split(""),cu=["","","",""],lu=cu.concat(cu,"-",cu,"-",cu,"-",cu,"-",cu,cu,cu),uu=lu.map((function(e,t){return"-"===e?NaN:t})).filter(isFinite);function fu(e){var t=e.split("@")[0];if(22!==t.length)return e;lu[0]=e[0],lu[1]=e[1];for(var n=2,i=2;n<22;n+=2){var o=It[e.charCodeAt(n)],r=It[e.charCodeAt(n+1)];lu[uu[i++]]=su[o>>2],lu[uu[i++]]=su[(3&o)<<2|r>>4],lu[uu[i++]]=su[15&r]}return e.replace(t,lu.join(""))}var _u=/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,}).*/;function mu(e){var t=_u.exec(e);return t?t[1]:""}function pu(e,t){(t=t||Object.create(null)).__isNative__=t.isNative,t.ext=t.nativeExt;var n=ou.find((function(t){return!!t.getAssetInfo(e)}));return n&&(t.bundle=n.name),vu(e,t)}function hu(e){return!!e&&(e instanceof s.SceneAsset||e instanceof s.Scene)}function du(e){return e&&(46===e.charCodeAt(0)&&47===e.charCodeAt(1)?e=e.slice(2):47===e.charCodeAt(0)&&(e=e.slice(1))),e}function vu(e,t){var n=au.create({input:e,options:t}),i=[];try{for(var o,r=ae(ru.sync(n));!(o=r()).done;){var a=o.value,s=a.url;a.recycle(),i.push(s)}}catch(e){for(var c,l=ae(n.output);!(c=l()).done;)c.value.recycle();y(e.message,e.stack)}return n.recycle(),i.length>1?i:i[0]}e("fR",Object.freeze({__proto__:null,getUuidFromURL:mu,getUrlWithUuid:pu,isScene:hu,normalize:du,transform:vu,decodeUuid:fu}));var gu=e("dc",function(){function e(e,t){this.type=void 0,this.bubbles=void 0,this.target=null,this.currentTarget=null,this.eventPhase=0,this.propagationStopped=!1,this.propagationImmediateStopped=!1,this.type=e,this.bubbles=!!t}var t=e.prototype;return t.unuse=function(){this.type=e.NO_TYPE,this.target=null,this.currentTarget=null,this.eventPhase=e.NONE,this.propagationStopped=!1,this.propagationImmediateStopped=!1},t.reuse=function(e,t){this.type=e,this.bubbles=t||!1},t.isStopped=function(){return this.propagationStopped||this.propagationImmediateStopped},t.getCurrentTarget=function(){return this.currentTarget},t.getType=function(){return this.type},e}());gu.NO_TYPE="no_type",gu.TOUCH="touch",gu.MOUSE="mouse",gu.KEYBOARD="keyboard",gu.ACCELERATION="acceleration",gu.NONE=0,gu.CAPTURING_PHASE=1,gu.AT_TARGET=2,gu.BUBBLING_PHASE=3,s.Event=gu;var yu,xu,Su,Cu,Tu,Eu,bu,Au,Pu=function(){function e(){this._finalizationRegistry=null}var t=e.prototype;return t.registerGCObject=function(e){return e},t.unregisterGCObject=function(){},t.init=function(){},t.finalizationRegistryCallback=function(e){e.isValid&&e.destroy()},t.destroy=function(){},e}(),wu=e("eQ",new Pu),Iu=al("cc.GCObject")(yu=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return t=e.call.apply(e,[this].concat(i))||this,wu.registerGCObject(oe(t))||oe(t)}Z(t,e);var n=t.prototype;return n.equals=function(e){return!!e&&e===this},n.destroy=function(){return wu.unregisterGCObject(this),e.prototype.destroy.call(this)},t}(xn))||yu,Ru=e("df",al("cc.Asset")((Tu=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this).loaded=!0,se(t,"_native",Cu,oe(t)),t._nativeUrl="",t._file=null,t._ref=0,Object.defineProperty(oe(t),"_uuid",{value:"",writable:!0}),t}Z(t,e),t.deserialize=function(e){return s.deserialize(e)};var n=t.prototype;return n.toString=function(){return this.nativeUrl},n.serialize=function(){},n._setRawAsset=function(e,t){void 0===t&&(t=!0),this._native=!1!==t?e||"":"/"+e},n.addRef=function(){return this._ref++,this},n.decRef=function(e){return void 0===e&&(e=!0),this._ref>0&&this._ref--,e&&s.assetManager._releaseManager.tryRelease(this),this},n.onLoaded=function(){},n.initDefault=function(e){e&&(this._uuid=e),this.isDefault=!0},n.validate=function(){return!0},n.destroy=function(){return S(W(12101,this._uuid)),e.prototype.destroy.call(this)},Q(t,[{key:"nativeUrl",get:function(){if(!this._nativeUrl){if(!this._native)return"";var e=this._native;if(47===e.charCodeAt(0))return e.slice(1);46===e.charCodeAt(0)?this._nativeUrl=pu(this._uuid,{nativeExt:e,isNative:!0}):this._nativeUrl=pu(this._uuid,{__nativeName__:e,nativeExt:Zi(e),isNative:!0})}return this._nativeUrl}},{key:"_nativeAsset",get:function(){return this._file},set:function(e){this._file=e}},{key:"_nativeDep",get:function(){if(this._native)return{__isNative__:!0,uuid:this._uuid,ext:this._native}}},{key:"refCount",get:function(){return this._ref}}]),t}(Rn(Iu)),Cu=ce((Su=Tu).prototype,"_native",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),ce(Su.prototype,"_nativeAsset",[ul],Object.getOwnPropertyDescriptor(Su.prototype,"_nativeAsset"),Su.prototype),xu=Su))||xu);Ru.prototype.createNode=null,s.Asset=Ru;var Nu=e("dt",al("cc.Script")(Eu=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t}(Ru))||Eu);s._Script=Nu;var Mu=e("du",al("cc.JavaScript")(bu=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t}(Nu))||bu);s._JavaScript=Mu;var Ou,Du,zu,Lu,Fu,Uu,Bu,Gu,ku,Hu,ju,Vu=e("dv",al("cc.TypeScript")(Au=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t}(Nu))||Au);s._TypeScript=Vu;var qu,Wu,Xu,Yu,Ku=new Ie("Comp"),Qu=xn.Flags.IsOnLoadCalled,Ju=e("dO",(Ou=al("cc.Component"),Du=El(),zu=Fl(Nu),Lu=bl(),Ou((ju=Hu=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"node",Bu,oe(t)),se(t,"_enabled",Gu,oe(t)),se(t,"__prefab",ku,oe(t)),t._sceneGetter=null,t._id=Ku.getNewId(),t}Z(t,e);var n=t.prototype;return n._getRenderScene=function(){return this._sceneGetter?this._sceneGetter():this.node.scene._renderScene},n.addComponent=function(e){return this.node.addComponent(e)},n.getComponent=function(e){return this.node.getComponent(e)},n.getComponents=function(e){return this.node.getComponents(e)},n.getComponentInChildren=function(e){return this.node.getComponentInChildren(e)},n.getComponentsInChildren=function(e){return this.node.getComponentsInChildren(e)},n.destroy=function(){return!!e.prototype.destroy.call(this)&&(this._enabled&&this.node.activeInHierarchy&&s.director._compScheduler.disableComp(this),!0)},n._onPreDestroy=function(){this.unscheduleAllCallbacks(),s.director._nodeActivator.destroyComp(this),this.node._removeComponent(this)},n._instantiate=function(e){return e||(e=s.instantiate._clone(this,this)),e&&(e.node=null),e},n.schedule=function(e,t,n,i){void 0===t&&(t=0),void 0===n&&(n=s.macro.REPEAT_FOREVER),void 0===i&&(i=0),q(e,1619),q((t=t||0)>=0,1620),n=Number.isNaN(n)?s.macro.REPEAT_FOREVER:n,i=i||0;var o=s.director.getScheduler(),r=o.isTargetPaused(this);o.schedule(e,this,t,n,i,r)},n.scheduleOnce=function(e,t){void 0===t&&(t=0),this.schedule(e,0,0,t)},n.unschedule=function(e){e&&s.director.getScheduler().unschedule(e,this)},n.unscheduleAllCallbacks=function(){s.director.getScheduler().unscheduleAllForTarget(this)},Q(t,[{key:"name",get:function(){if(this._name)return this._name;var e=He(this),t=e.lastIndexOf(".");return t>=0&&(e=e.slice(t+1)),this.node.name+"<"+e+">"},set:function(e){this._name=e}},{key:"uuid",get:function(){return this._id}},{key:"__scriptAsset",get:function(){return null}},{key:"enabled",get:function(){return this._enabled},set:function(e){if(this._enabled!==e&&(this._enabled=e,this.node.activeInHierarchy)){var t=s.director._compScheduler;e?t.enableComp(this):t.disableComp(this)}}},{key:"enabledInHierarchy",get:function(){return this._enabled&&this.node&&this.node.activeInHierarchy}},{key:"_isOnLoadCalled",get:function(){return this._objFlags&Qu}}]),t}(xn),Hu.system=null,ce((Uu=ju).prototype,"__scriptAsset",[Du,zu,Lu,Ml],Object.getOwnPropertyDescriptor(Uu.prototype,"__scriptAsset"),Uu.prototype),Bu=ce(Uu.prototype,"node",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Gu=ce(Uu.prototype,"_enabled",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ku=ce(Uu.prototype,"__prefab",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Fu=Uu))||Fu)),Zu=Ju.prototype;Zu.update=null,Zu.lateUpdate=null,Zu.__preload=null,Zu.onLoad=null,Zu.start=null,Zu.onEnable=null,Zu.onDisable=null,Zu.onDestroy=null,Zu.onFocusInEditor=null,Zu.onLostFocusInEditor=null,Zu.resetInEditor=null,Zu._getLocalBounds=null,Zu.onRestore=null,Ju._requireComponent=null,Ju._executionOrder=0,Fe(Ju,"_registerEditorProps",(function(e,t){var n=t.requireComponent;n&&(e._requireComponent=n);var i=t.executionOrder;i&&"number"==typeof i&&(e._executionOrder=i)})),s.Component=Ju;var $u=e("dN",al("cc.MissingScript")(qu=yl()((Yu=function(e){function t(){var t;return se(t=e.call(this)||this,"_$erialized",Xu,oe(t)),t}return Z(t,e),t.safeFindClass=function(e){var t=_t(e);if(t)return t;s.deserialize.reportMissingClass(e)},t.prototype.onLoad=function(){w(4600,this.node.name)},t}(Ju),Xu=ce((Wu=Yu).prototype,"_$erialized",[_l,ml],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),qu=Wu))||qu)||qu);s._MissingScript=$u;var ef=e("db",Symbol("[[Serialize]]")),tf=e("da",Symbol("[[Deserialize]]")),nf=e("fA",function(){function e(e,t){this._document=void 0,this._chunks=void 0,this._document=e,this._chunks=t}return Q(e,[{key:"document",get:function(){return this._document}},{key:"chunks",get:function(){return this._chunks}}]),e}());function of(e){var t=e;return{chunks:t.chunks,document:t.document}}function rf(e){if(e.length<16)throw new af(W(13102));var t=new DataView(e.buffer,e.byteOffset,e.byteLength);if(1313817411!==t.getUint32(0,!0))throw new af(W(13100));var n=t.getUint32(4,!0);if(1!==n)throw new af(W(13101,n));if(t.getUint32(8,!0)!==t.byteLength)throw new af(W(13102));var i=12,o=t.getUint32(i,!0);i+=4;var r=new Uint8Array(t.buffer,i+t.byteOffset,o);i+=o;var a,s=function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);if("Buffer"in globalThis)return globalThis.Buffer.from(e.buffer,e.byteOffset,e.byteLength).toString();throw new Error(W(13104))}(r);try{a=JSON.parse(s)}catch(e){throw new af(e)}for(var c=[];i<t.byteLength;){i%8!=0&&(i+=8-i%8);var l=t.getUint32(i,!0);i+=4,c.push(new Uint8Array(t.buffer,i+t.byteOffset,l)),i+=l}if(i!==t.byteLength)throw new af(W(13102));return new nf(a,c)}var af=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t}(ie(Error));!function(){function e(){this._viewOrPaddings=[],this._length=0}var t=e.prototype;t.alignAs=function(e){if(0!==e){var t=this._length%e;if(0!==t){var n=e-t;return this._viewOrPaddings.push(n),this._length+=n,n}}return 0},t.append=function(e){var t=this._length;return this._viewOrPaddings.push(e),this._length+=e.byteLength,t},t.get=function(){var e=new Uint8Array(this._length),t=0;return this._viewOrPaddings.forEach((function(n){"number"==typeof n?t+=n:(e.set(new Uint8Array(n.buffer,n.byteOffset,n.byteLength),t),t+=n.byteLength)})),e},Q(e,[{key:"byteLength",get:function(){return this._length}}])}(),s.internal.parseCCONJson=of,s.internal.decodeCCONBinary=rf,s.internal.CCON=nf;var sf="$_$default",cf="$_$formerlySerializedAs",lf=function(e){function t(){return e.call(this,(function(e){e.clear()}),1)||this}return Z(t,e),t.prototype.get=function(e,t,n,i,o){var r=this._get();return r?(r.reset(e,t,n,i,o),r):new uf(e,t,n,i,o)},t}(ht),uf=function(){function e(e,t,n,i){this.deserializedList=void 0,this.deserializedData=void 0,this._ignoreEditorOnly=void 0,this.result=e,this.customEnv=i,this.deserializedList=[],this.deserializedData=null,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced}var t=e.prototype;return t.reset=function(e,t,n,i){this.result=e,this.customEnv=i,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced},t.clear=function(){this.result=null,this.customEnv=null,this.deserializedList.length=0,this.deserializedData=null,this._classFinder=null,this._reportMissingClass=null,this._onDereferenced=null},t.deserialize=function(e){var t,n=!1;e instanceof nf?(n=!0,t=e.document,e.chunks.length>0&&(e.chunks.length,this._mainBinChunk=e.chunks[0])):t=e,this._serializedData=t,this._context={fromCCON:n};var i=Array.isArray(t)?t[0]:t;return this.deserializedData=this._deserializeObject(i,0),this._serializedData=void 0,this._mainBinChunk=void 0,this._context=void 0,this.deserializedData},t._deserializeObject=function(e,t,n,i){switch(e.__type__){case"TypedArray":return this._deserializeTypedArrayView(e);case"TypedArrayRef":return this._deserializeTypedArrayViewRef(e);default:return e.__type__?this._deserializeTypeTaggedObject(e,t,n,i):Array.isArray(e)?this._deserializeArray(e):this._deserializePlainObject(e)}},t._deserializeTypedArrayView=function(e){return globalThis[e.ctor].from(e.array)},t._deserializeTypedArrayViewRef=function(e){var t=e.offset,n=e.length,i=e.ctor;return new globalThis[i](this._mainBinChunk.buffer,this._mainBinChunk.byteOffset+t,n)},t._deserializeArray=function(e){for(var t,n=new Array(e.length),i=0;i<e.length;i++)"object"==typeof(t=e[i])&&t?this._deserializeAndAssignField(n,t,""+i)&&(n[i]=null):n[i]=t;return n},t._deserializePlainObject=function(e){var t={};return this._fillPlainObject(t,e),t},t._deserializeTypeTaggedObject=function(e,t,n,i){var o=this,r=e.__type__,a=this._classFinder(r,e,n,i);if(!a)return this._classFinder===_t&&this._reportMissingClass(r),null;var s=function(e){var n=new e;return t>=0&&(o.deserializedList[t]=n),n}(a);return this._deserializeInto(e,s,a),s},t._deserializeInto=function(e,t,n,i){void 0===i&&(i=!1),i||!t[tf]?t._deserialize?t._deserialize(e.content,this):s.Class._isCCClass(n)?this._deserializeFireClass(t,e,n):this._deserializeFastDefinedObject(t,e,n):this._runCustomizedDeserialize(e,t,n)},t._runCustomizedDeserialize=function(e,t,n){var i=this,o={readProperty:function(t){var n=e[t];return"object"==typeof n&&n?i._deserializeObjectField(n):n},readThis:function(){i._deserializeInto(e,t,n,!0)},readSuper:function(){var o=et(n);o&&i._deserializeInto(e,t,o)}};t[tf](o,this._context)},t._deserializeFireClass=function(e,t,n){var i;n.hasOwnProperty("__deserialize__")?i=n.__deserialize__:(i=function(e,t){var n=bt.test(pt(t)),i=tt(t,s._BaseNode)||tt(t,s.Component),o=!1,r=[],a=r,c=[],l=c,u=[];return function(){var e=t.__values__;o="_$erialized"===e[e.length-1];for(var i=jt(t),f=0;f<e.length;f++){var _=e[f],m=_;i[_+cf]&&(m=i[_+cf]);var p=mn.getDefault(i[_+sf]),h=!1;if(n){var d=i[_+"$_$type"];if(void 0===p&&d)h=d instanceof qt;else{var v=typeof p;h="string"===v||"number"===v||"boolean"===v}}n&&h?(m!==_&&a===r&&(a=r.slice()),r.push(_),a!==r&&a.push(m)):(m!==_&&l===c&&(l=c.slice()),c.push(_),l!==c&&l.push(m),u.push(p instanceof s.ValueType&&p.constructor))}}(),function(e,t,s){for(var f=0;f<r.length;++f){var _=s[a[f]];void 0!==_&&(t[r[f]]=_)}for(var m=0;m<c.length;++m){var p=c[m],h=s[l[m]];if(void 0!==h)if(n||"object"==typeof h){var d=u[m];d?n||h?e._deserializeFastDefinedObject(t[p],h,d):t[p]=null:h?e._deserializeAndAssignField(t,h,p):t[p]=null}else t[p]=h}i&&s._id&&(t._id=s._id),o&&(t._$erialized=JSON.parse(JSON.stringify(s)),e._fillPlainObject(t._$erialized,s))}}(0,n),Fe(n,"__deserialize__",i,!0)),i(this,e,t,n)},t._deserializeAndAssignField=function(e,t,n){var i=t.__id__;if("number"==typeof i){var o=this.deserializedList[i];if(o)e[n]=o;else{var r,a=this._serializedData[i];e[n]=this._deserializeObject(a,i,void 0,n),null===(r=this._onDereferenced)||void 0===r||r.call(this,this.deserializedList,i,e,n)}}else{var s=t.__uuid__;if(s){var c=t.__expectedType__;this.result.push(e,n,s,c)}else e[n]=this._deserializeObject(t,-1)}return!1},t._deserializeObjectField=function(e){var t=e.__id__;if("number"==typeof t){var n=this.deserializedList[t];if(n)return n;var i=this._serializedData[t];return this._deserializeObject(i,t,void 0,void 0)}if(e.__uuid__)throw e.__expectedType__,new Error("Asset reference field serialization is currently not supported in custom serialization.");return this._deserializeObject(e,-1)},t._fillPlainObject=function(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];"object"!=typeof i?"__type__"!==n&&(e[n]=i):i?this._deserializeAndAssignField(e,i,n)&&(e[n]=null):e[n]=null}},t._deserializeFastDefinedObject=function(e,t,n){if(n===s.Vec2)return e.x=t.x||0,void(e.y=t.y||0);if(n===s.Vec3)return e.x=t.x||0,e.y=t.y||0,void(e.z=t.z||0);if(n!==s.Color){if(n===s.Size)return e.width=t.width||0,void(e.height=t.height||0);for(var i=jt(n),o=n.__values__,r=0;r<o.length;r++){var a=o[r],c=t[a];void 0!==c||t.hasOwnProperty(a)||(c=mn.getDefault(i[a+sf])),"object"!=typeof c?e[a]=c:c?this._deserializeAndAssignField(e,c,a):e[a]=null}}else{e.r=t.r||0,e.g=t.g||0,e.b=t.b||0;var l=t.a;e.a=void 0===l?255:l}},e}();uf.pool=new lf;var ff=[Ni,_i,zi,yi,ui,Ui,Gi,Pi];function _f(e,t){e.x=t[1],e.y=t[2],e.z=t[3],e.w=t[4]}var mf=[function(e,t){e.x=t[1],e.y=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.z=t[3]},_f,_f,function(e,t){e._val=t[1]},function(e,t){e.width=t[1],e.height=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.width=t[3],e.height=t[4]},function(e,t){Pi.fromArray(e,t,1)}],pf=0,hf=1,df=2,vf=3,gf=4,yf=5,xf=e("d1",function(){function e(){this.uuidObjList=null,this.uuidPropList=null,this.uuidList=null,this.uuidTypeList=[]}var t=e.prototype;return t.init=function(e){e?(this.uuidObjList=e[8],this.uuidPropList=e[9],this.uuidList=e[10]):this.uuidList||(this.uuidList=[],this.uuidObjList=[],this.uuidPropList=[],this.uuidTypeList=[])},t.reset=function(){this.uuidList&&(this.uuidList.length=0,this.uuidObjList.length=0,this.uuidPropList.length=0,this.uuidTypeList.length=0)},t.push=function(e,t,n,i){this.uuidObjList.push(e),this.uuidPropList.push(t),this.uuidList.push(n),this.uuidTypeList.push(i||"")},e}());function Sf(e,t){for(var n=e[gf][t[0]],i=n[0],o=new(0,i[0]),r=i[1],a=i[2],s=n[n.length-1],c=1;c<s;++c)o[r[n[c]]]=t[c];for(;c<t.length;++c){var l=r[n[c]],u=i[n[c]+a];(0,Pf[u])(e,o,l,t[c])}return o}function Cf(e,t,n){var i=new t;return i._deserialize?i._deserialize(n,e[0]):R(5303,He(t)),i}function Tf(e,t,n,i){i>=0?t[n]=e[5][i]:e[7][3*~i]=t}function Ef(e){return function(t,n,i,o){n[i]=o;for(var r=0;r<o.length;++r)e(t,o,r,o[r])}}function bf(e,t,n,i){t[n]=null,e[8][i]=t}function Af(e,t,n,i){t[n]=Sf(e,i)}xf.pool=new ht((function(e){e.reset()}),5),xf.pool.get=function(){return this._get()||new xf};var Pf=new Array(13);function wf(e,t,n){return e||n(t),Object}function If(e,t,n,i,o,r,a){var s=e(t);if(!s){if(o)return void(n[i]=function(t,n,i){return function(){var o=e(i)||wf(r,i,a);return t[n]=o,new o}}(n,i,t));s=wf(r,t,a)}n[i]=s}function Rf(e,t,n,i){for(var o=n||_t,r=e[vf],a=0;a<r.length;++a){var s=r[a];"string"!=typeof s?If(o,s[0],s,0,t,n,i):If(o,s,r,a,t,n,i)}}function Nf(e){var t=e[gf];if(t)for(var n=e[vf],i=0;i<t.length;++i){var o=t[i];o[0]=n[o[0]]}}function Mf(e,t,n){"string"==typeof e&&(e=JSON.parse(e));var i,o=!t;if(t=t||xf.pool.get(),function(e){if(Array.isArray(e)){var t=e[0];return"number"==typeof t||t instanceof Of}return!1}(e)){t.init(e),n=n||{};var r,a=e[pf],c=!1;if("object"==typeof a&&(c=a.preprocessed,a=a.version),a<1)throw new Error(W(5304,a));n._version=a,n.result=t,e[0]=n,c||(Rf(e,!1,n.classFinder,null!==(r=n.reportMissingClass)&&void 0!==r?r:Mf.reportMissingClass),Nf(e)),s.game._isCloning=!0;var l=e[5],u=function(e){var t=e[5],n=e[6],i=0===n?0:n.length,o=t[t.length-1],r=t.length-i;"number"!=typeof o?o=0:(o<0&&(o=~o),--r);for(var a=0;a<r;++a)t[a]=Sf(e,t[a]);for(var s=e[vf],c=0;c<i;++c,++a){var l=n[c],u=t[a];if(l>=0){var f=s[l];t[a]=Cf(e,f,u)}else(0,Pf[l=~l])(e,t,a,u)}return o}(e);s.game._isCloning=!1,e[7]&&function(e,t,n){for(var i=e.length-1,o=0,r=3*e[i];o<r;o+=3){var a=e[o],s=t[e[o+2]],c=e[o+1];c>=0?a[n[c]]=s:a[~c]=s}for(;o<i;o+=3){var l=t[e[o]],u=t[e[o+2]],f=e[o+1];f>=0?l[n[f]]=u:l[~f]=u}}(e[7],l,e[df]),function(e){for(var t=e[5],n=e[df],i=e[hf],o=e[8],r=e[9],a=e[10],s=0;s<o.length;++s){var c=o[s];"number"==typeof c&&(o[s]=t[c]);var l=r[s];"number"==typeof l&&(l=l>=0?n[l]:~l,r[s]=l);var u=a[s];"number"==typeof u&&(a[s]=i[u])}}(e),i=l[u]}else i=function(e,t,n){var i,o=(n=n||{}).classFinder||_t,r=n.createAssetRefs||Xi.platform===L.EDITOR_CORE,a=n.customEnv,c=n.ignoreEditorOnly,l=null!==(i=n.reportMissingClass)&&void 0!==i?i:s.deserialize.reportMissingClass;t.init();var u=uf.pool.get(t,o,l,a,c);s.game._isCloning=!0;var f=u.deserialize(e);return s.game._isCloning=!1,uf.pool.put(u),r&&t.assignAssetsBy(EditorExtends.serialize.asAsset),f}(e,t,n);return o&&xf.pool.put(t),i}Pf[0]=function(e,t,n,i){t[n]=i},Pf[1]=Tf,Pf[2]=Ef(Tf),Pf[3]=Ef(bf),Pf[4]=Af,Pf[5]=function(e,t,n,i){mf[i[0]](t[n],i)},Pf[6]=bf,Pf[7]=function(e,t,n,i){t[n].set(i)},Pf[8]=function(e,t,n,i){var o=new ff[i[0]];mf[i[0]](o,i),t[n]=o},Pf[9]=Ef(Af),Pf[10]=function(e,t,n,i){var o=e[vf][i[0]];t[n]=Cf(e,o,i[1])},Pf[11]=function(e,t,n,i){var o=i[0];t[n]=o;for(var r=1;r<i.length;r+=3){var a=i[r],s=i[r+1],c=i[r+2];(0,Pf[s])(e,o,a,c)}},Pf[12]=function(e,t,n,i){var o=i[0];t[n]=o;for(var r=0;r<o.length;++r){var a=o[r],s=i[r+1];0!==s&&(0,Pf[s])(e,o,r,a)}},Mf.Details=xf,Mf.reportMissingClass=function(e){w(5302,e)};var Of=function(e){this.preprocessed=!0,this.version=e};s.deserialize=Mf;var Df,zf,Lf,Ff,Uf,Bf,Gf,kf,Hf,jf,Vf,qf=xn.Flags.Destroyed,Wf=xn.Flags.PersistentMask,Xf=[];function Yf(e){var t;if(e instanceof xn){if(e._instantiate)return s.game._isCloning=!0,t=e._instantiate(null,!0),s.game._isCloning=!1,t;if(e instanceof s.Asset)throw new TypeError(W(6903))}return s.game._isCloning=!0,t=Kf(e),s.game._isCloning=!1,t}function Kf(e,t){var n;Qf(e,n=e._iN$t?e._iN$t:e.constructor?new(0,e.constructor):Object.create(null),t);for(var i=0,o=Xf.length;i<o;++i)Xf[i]._iN$t=null;return Xf.length=0,n}function Qf(e,t,n){vt.value(e,"_iN$t",t,!0),Xf.push(e);var i=e.constructor;if(s.Class._isCCClass(i))!function(e,t,n,i){for(var o=e.__values__,r=0;r<o.length;r++){var a=o[r],s=t[a];if("object"==typeof s&&s){var c=n[a];c instanceof Tt&&c.constructor===s.constructor?c.set(s):n[a]=s._iN$t||Jf(s,i)}else n[a]=s}}(i,e,t,n);else for(var o in e)if(e.hasOwnProperty(o)&&(95!==o.charCodeAt(0)||95!==o.charCodeAt(1)||"__type__"===o)){var r=e[o];if("object"==typeof r&&r){if(r===t)continue;t[o]=r._iN$t||Jf(r,n)}else t[o]=r}e instanceof xn&&(t._objFlags&=Wf)}function Jf(e,t){if(e instanceof Tt)return e.clone();if(e instanceof s.Asset)return e;var n;if(ArrayBuffer.isView(e)){var i=e.length;n=new e.constructor(i),e._iN$t=n,Xf.push(e);for(var o=0;o<i;++o)n[o]=e[o];return n}if(Array.isArray(e)){var r=e.length;n=new Array(r),e._iN$t=n,Xf.push(e);for(var a=0;a<r;++a){var c=e[a];n[a]="object"==typeof c&&c?c._iN$t||Jf(c,t):c}return n}if(e._objFlags&qf)return null;var l=e.constructor;if(s.Class._isCCClass(l)){if(t)if(t instanceof s.Component){if(e instanceof s._BaseNode||e instanceof s.Component)return e}else if(t instanceof s._BaseNode)if(e instanceof s._BaseNode){if(!e.isChildOf(t))return e}else if(e instanceof s.Component&&e.node&&!e.node.isChildOf(t))return e;n=new l}else if(l===Object)n={};else{if(l)return e;n=Object.create(null)}return Qf(e,n,t),n}function Zf(e,t){return(t<<3)+e}function $f(e){return t_[e]}function e_(e){switch(e){case jf.Uint8:return Uint8Array;case jf.Uint16:return Uint16Array;case jf.Uint32:return Uint32Array;case jf.Int8:return Int8Array;case jf.Int16:return Int16Array;case jf.Int32:return Int32Array;case jf.Float32:return Float32Array;case jf.Float64:return Float64Array}}Yf._clone=Kf,s.instantiate=Yf,function(e){e[e.Uint8=0]="Uint8",e[e.Uint16=1]="Uint16",e[e.Uint32=2]="Uint32",e[e.Int8=3]="Int8",e[e.Int16=4]="Int16",e[e.Int32=5]="Int32",e[e.Float32=6]="Float32",e[e.Float64=7]="Float64"}(jf||(jf={})),function(e){e[e.Scalar=0]="Scalar",e[e.Vec2=1]="Vec2",e[e.Vec3=2]="Vec3",e[e.Vec4=3]="Vec4",e[e.Quat=4]="Quat",e[e.Mat4=5]="Mat4"}(Vf||(Vf={})),e("d8",al("cc.CompactValueTypeArray")((kf=Gf=function(){function e(){se(this,"_byteOffset",Lf,this),se(this,"_unitCount",Ff,this),se(this,"_unitElement",Uf,this),se(this,"_length",Bf,this)}return e.lengthFor=function(e,t,n){return $f(t).requiredUnits*e.length*e_(n).BYTES_PER_ELEMENT},e.compress=function(t,n,i,o,r,a){for(var s=$f(n),c=e_(i),l=s.requiredUnits*t.length,u=new c(o,r,l),f=0;f<t.length;++f)s.compress(u,f,t[f]);var _=new e;return _._unitElement=Zf(i,n),_._byteOffset=a,_._unitCount=l,_._length=t.length,_},e.prototype.decompress=function(e){for(var t,n={storageUnit:7&(t=this._unitElement),elementType:t>>3},i=n.storageUnit,o=$f(n.elementType),r=new(e_(i))(e,this._byteOffset,this._unitCount),a=new Array(this._length),s=0;s<this._length;++s)a[s]=o.decompress(r,s);return a},e}(),Gf.StorageUnit=jf,Gf.ElementType=Vf,Lf=ce((zf=kf).prototype,"_byteOffset",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Ff=ce(zf.prototype,"_unitCount",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Uf=ce(zf.prototype,"_unitElement",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Zf(jf.Uint8,Vf.Scalar)}}),Bf=ce(zf.prototype,"_length",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Df=zf))||Df);var t_=((Hf={})[Vf.Scalar]={requiredUnits:1,compress:function(e,t,n){e[t]=n},decompress:function(e,t){return e[t]}},Hf[Vf.Vec2]={requiredUnits:2,compress:function(e,t,n){e[2*t]=n.x,e[2*t+1]=n.y},decompress:function(e,t){return new _i(e[2*t],e[2*t+1])}},Hf[Vf.Vec3]={requiredUnits:3,compress:function(e,t,n){e[3*t]=n.x,e[3*t+1]=n.y,e[3*t+2]=n.z},decompress:function(e,t){return new _i(e[3*t],e[3*t+1],e[3*t+2])}},Hf[Vf.Vec4]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new zi(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},Hf[Vf.Quat]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new yi(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},Hf[Vf.Mat4]={requiredUnits:16,compress:function(e,t,n){Pi.toArray(e,n,16*t)},decompress:function(e,t){return Pi.fromArray(new Pi,e,16*t)}},Hf);function n_(){return 0}function i_(e){return e}function o_(e){return e*e}function r_(e){return e*(2-e)}function a_(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}function s_(e){return e*e*e}function c_(e){return--e*e*e+1}function l_(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}function u_(e){return e*e*e*e}function f_(e){return 1- --e*e*e*e}function __(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}function m_(e){return e*e*e*e*e}function p_(e){return--e*e*e*e*e+1}function h_(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}function d_(e){return 1===e?1:1-Math.cos(e*Math.PI/2)}function v_(e){return Math.sin(e*Math.PI/2)}function g_(e){return.5*(1-Math.cos(Math.PI*e))}function y_(e){return 0===e?0:Math.pow(1024,e-1)}function x_(e){return 1===e?1:1-Math.pow(2,-10*e)}function S_(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}function C_(e){return 1-Math.sqrt(1-e*e)}function T_(e){return Math.sqrt(1- --e*e)}function E_(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}function b_(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),-n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4))}function A_(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*e)*Math.sin(2*(e-t)*Math.PI/.4)+1)}function P_(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),(e*=2)<1?n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*-.5:n*Math.pow(2,-10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*.5+1)}function w_(e){if(1===e)return 1;var t=1.70158;return e*e*((t+1)*e-t)}function I_(e){if(0===e)return 0;var t=1.70158;return--e*e*((t+1)*e+t)+1}function R_(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}function N_(e){return 1-M_(1-e)}function M_(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function O_(e){return e<.5?.5*N_(2*e):.5*M_(2*e-1)+.5}function D_(e){return e<=0?0:e>=1?1:e*e*(3-2*e)}function z_(e){return e<=0?0:e>=1?1:e*e*e*(e*(6*e-15)+10)}s._decorator=Jl;var L_,F_,U_=Y_(o_,r_),B_=Y_(s_,c_),G_=Y_(u_,f_),k_=Y_(m_,p_),H_=Y_(d_,v_),j_=Y_(y_,x_),V_=Y_(C_,T_),q_=Y_(b_,A_),W_=Y_(w_,I_),X_=Y_(N_,M_);function Y_(e,t){return function(n){return n<.5?t(2*n)/2:e(2*n-1)/2+.5}}e("dR",Object.freeze({__proto__:null,constant:n_,linear:i_,quadIn:o_,quadOut:r_,quadInOut:a_,cubicIn:s_,cubicOut:c_,cubicInOut:l_,quartIn:u_,quartOut:f_,quartInOut:__,quintIn:m_,quintOut:p_,quintInOut:h_,sineIn:d_,sineOut:v_,sineInOut:g_,expoIn:y_,expoOut:x_,expoInOut:S_,circIn:C_,circOut:T_,circInOut:E_,elasticIn:b_,elasticOut:A_,elasticInOut:P_,backIn:w_,backOut:I_,backInOut:R_,bounceIn:N_,bounceOut:M_,bounceInOut:O_,smooth:D_,fade:z_,quadOutIn:U_,cubicOutIn:B_,quartOutIn:G_,quintOutIn:k_,sineOutIn:H_,expoOutIn:j_,circOutIn:V_,elasticOutIn:q_,backOutIn:W_,bounceOutIn:X_})),function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.QUAD_IN=2]="QUAD_IN",e[e.QUAD_OUT=3]="QUAD_OUT",e[e.QUAD_IN_OUT=4]="QUAD_IN_OUT",e[e.QUAD_OUT_IN=5]="QUAD_OUT_IN",e[e.CUBIC_IN=6]="CUBIC_IN",e[e.CUBIC_OUT=7]="CUBIC_OUT",e[e.CUBIC_IN_OUT=8]="CUBIC_IN_OUT",e[e.CUBIC_OUT_IN=9]="CUBIC_OUT_IN",e[e.QUART_IN=10]="QUART_IN",e[e.QUART_OUT=11]="QUART_OUT",e[e.QUART_IN_OUT=12]="QUART_IN_OUT",e[e.QUART_OUT_IN=13]="QUART_OUT_IN",e[e.QUINT_IN=14]="QUINT_IN",e[e.QUINT_OUT=15]="QUINT_OUT",e[e.QUINT_IN_OUT=16]="QUINT_IN_OUT",e[e.QUINT_OUT_IN=17]="QUINT_OUT_IN",e[e.SINE_IN=18]="SINE_IN",e[e.SINE_OUT=19]="SINE_OUT",e[e.SINE_IN_OUT=20]="SINE_IN_OUT",e[e.SINE_OUT_IN=21]="SINE_OUT_IN",e[e.EXPO_IN=22]="EXPO_IN",e[e.EXPO_OUT=23]="EXPO_OUT",e[e.EXPO_IN_OUT=24]="EXPO_IN_OUT",e[e.EXPO_OUT_IN=25]="EXPO_OUT_IN",e[e.CIRC_IN=26]="CIRC_IN",e[e.CIRC_OUT=27]="CIRC_OUT",e[e.CIRC_IN_OUT=28]="CIRC_IN_OUT",e[e.CIRC_OUT_IN=29]="CIRC_OUT_IN",e[e.ELASTIC_IN=30]="ELASTIC_IN",e[e.ELASTIC_OUT=31]="ELASTIC_OUT",e[e.ELASTIC_IN_OUT=32]="ELASTIC_IN_OUT",e[e.ELASTIC_OUT_IN=33]="ELASTIC_OUT_IN",e[e.BACK_IN=34]="BACK_IN",e[e.BACK_OUT=35]="BACK_OUT",e[e.BACK_IN_OUT=36]="BACK_IN_OUT",e[e.BACK_OUT_IN=37]="BACK_OUT_IN",e[e.BOUNCE_IN=38]="BOUNCE_IN",e[e.BOUNCE_OUT=39]="BOUNCE_OUT",e[e.BOUNCE_IN_OUT=40]="BOUNCE_IN_OUT",e[e.BOUNCE_OUT_IN=41]="BOUNCE_OUT_IN",e[e.SMOOTH=42]="SMOOTH",e[e.FADE=43]="FADE"}(F_||(F_=e("g4",{})));var K_,Q_,J_,Z_,$_,em=((L_={})[F_.CONSTANT]=n_,L_[F_.LINEAR]=i_,L_[F_.QUAD_IN]=o_,L_[F_.QUAD_OUT]=r_,L_[F_.QUAD_IN_OUT]=a_,L_[F_.QUAD_OUT_IN]=U_,L_[F_.CUBIC_IN]=s_,L_[F_.CUBIC_OUT]=c_,L_[F_.CUBIC_IN_OUT]=l_,L_[F_.CUBIC_OUT_IN]=B_,L_[F_.QUART_IN]=u_,L_[F_.QUART_OUT]=f_,L_[F_.QUART_IN_OUT]=__,L_[F_.QUART_OUT_IN]=G_,L_[F_.QUINT_IN]=m_,L_[F_.QUINT_OUT]=p_,L_[F_.QUINT_IN_OUT]=h_,L_[F_.QUINT_OUT_IN]=k_,L_[F_.SINE_IN]=d_,L_[F_.SINE_OUT]=v_,L_[F_.SINE_IN_OUT]=g_,L_[F_.SINE_OUT_IN]=H_,L_[F_.EXPO_IN]=y_,L_[F_.EXPO_OUT]=x_,L_[F_.EXPO_IN_OUT]=S_,L_[F_.EXPO_OUT_IN]=j_,L_[F_.CIRC_IN]=C_,L_[F_.CIRC_OUT]=T_,L_[F_.CIRC_IN_OUT]=E_,L_[F_.CIRC_OUT_IN]=V_,L_[F_.ELASTIC_IN]=b_,L_[F_.ELASTIC_OUT]=A_,L_[F_.ELASTIC_IN_OUT]=P_,L_[F_.ELASTIC_OUT_IN]=q_,L_[F_.BACK_IN]=w_,L_[F_.BACK_OUT]=I_,L_[F_.BACK_IN_OUT]=R_,L_[F_.BACK_OUT_IN]=W_,L_[F_.BOUNCE_IN]=N_,L_[F_.BOUNCE_OUT]=M_,L_[F_.BOUNCE_IN_OUT]=O_,L_[F_.BOUNCE_OUT_IN]=X_,L_[F_.SMOOTH]=D_,L_[F_.FADE]=z_,L_);function tm(e){return em[e]}var nm,im,om,rm=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this).interpolationMode=Vl.LINEAR,t.tangentWeightMode=Wl.NONE,t.value=0,t.rightTangent=0,t.rightTangentWeight=0,t.leftTangent=0,t.leftTangentWeight=0,t.easingMethod=F_.LINEAR,t}return Z(t,e),t}(Ql);function am(e){var t=new rm;if("number"==typeof e)t.value=e;else{var n=e.interpolationMode,i=e.tangentWeightMode,o=e.value,r=e.rightTangent,a=e.rightTangentWeight,s=e.leftTangent,c=e.leftTangentWeight,l=e.easingMethod,u=e[vn];t.value=null!=o?o:t.value,t.rightTangent=null!=r?r:t.rightTangent,t.rightTangentWeight=null!=a?a:t.rightTangentWeight,t.leftTangent=null!=s?s:t.leftTangent,t.leftTangentWeight=null!=c?c:t.leftTangentWeight,t.interpolationMode=null!=n?n:t.interpolationMode,t.tangentWeightMode=null!=i?i:t.tangentWeightMode,t.easingMethod=null!=l?l:t.easingMethod,u&&(t[vn]=u)}return t}mn.fastDefine("cc.RealKeyframeValue",rm,{interpolationMode:Vl.LINEAR,tangentWeightMode:Wl.NONE,value:0,rightTangent:0,rightTangentWeight:0,leftTangent:0,leftTangentWeight:0,easingMethod:F_.LINEAR}),mn.Attr.setClassAttr(rm,vn,"editorOnly",!0),(nm=rm,null!==(om=(im=nm)[fl])&&void 0!==om?om:im[fl]={}).uniquelyReferenced=!0;var sm,cm=e("dU",al("cc.RealCurve")(($_=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"preExtrapolation",J_,oe(t)),se(t,"postExtrapolation",Z_,oe(t)),t}Z(t,e);var n=t.prototype;return n.evaluate=function(e){var t=this._times,n=this._values,i=t.length;if(0===i)return 0;var o=t[0],r=t[i-1];if(e<o){var a=this.preExtrapolation,s=n[0];if(a===ql.CLAMP||i<2)return s.value;switch(a){case ql.LINEAR:return Em(o,n[0].value,t[1],n[1].value,e);case ql.LOOP:e=Cm(e,o,r);break;case ql.PING_PONG:e=Tm(e,o,r);break;default:return s.value}}else if(e>r){var c=this.postExtrapolation,l=n[i-1];if(c===ql.CLAMP||i<2)return l.value;switch(c){case ql.LINEAR:return Em(r,l.value,t[i-2],n[i-2].value,e);case ql.LOOP:e=Cm(e,o,r);break;case ql.PING_PONG:e=Tm(e,o,r);break;default:return l.value}}var u=Jc(t,e);if(u>=0)return n[u].value;var f=~u,_=f-1,m=t[_],p=n[_],h=t[f];return function(e,t,n,i,o){var r=n-e;switch(t.interpolationMode){default:case Vl.CONSTANT:return t.value;case Vl.LINEAR:var a=t.easingMethod===F_.LINEAR?o:tm(t.easingMethod)(o);return ei(t.value,i.value,a);case Vl.CUBIC:var s=1/3,c=t.rightTangent,l=t.rightTangentWeight,u=0!=(t.tangentWeightMode&Wl.RIGHT),f=i.leftTangent,_=i.leftTangentWeight,m=0!=(i.tangentWeightMode&Wl.LEFT);if(u||m){var p=0;if(u)p=l;else{var h=r,d=r*c;p=Math.sqrt(h*h+d*d)*s}var v=Math.atan(c),g=Math.cos(v)*p+e,y=Math.sin(v)*p+t.value,x=0;if(m)x=_;else{var S=r,C=r*f;x=Math.sqrt(S*S+C*C)*s}var T=Math.atan(f),E=(g-e)/r,b=(-Math.cos(T)*x+n-e)/r,A=y,P=-Math.sin(T)*x+i.value,w=[0,0,0],I=function(e,t,n,i,o){var r=n/i,a=t/i,s=r*r,c=1/3*(-1/3*s+a),l=.5*(2/27*r*s-1/3*r*a+e/i),u=c*c*c,f=l*l+u,_=0;if(Kl(f)){if(Kl(l))return o[0]=0,1;var m=Math.cbrt(-l);return o[0]=2*m,o[1]=-m,2}if(f<0){var p=1/3*Math.acos(-l/Math.sqrt(-u)),h=2*Math.sqrt(-c);o[0]=h*Math.cos(p),o[1]=-h*Math.cos(p+Math.PI/3),o[2]=-h*Math.cos(p-Math.PI/3),_=3}else{var d=Math.sqrt(f),v=Math.cbrt(d-l),g=-Math.cbrt(d+l);o[0]=v+g,_=1}for(var y=1/3*r,x=0;x<_;++x)o[x]-=y;return _}(0-o,3*E,3*b-6*E,3*(E-b)+1,w),R=function(e,t,n){var i=n;if(1===t)i=e[0];else{i=-1/0;for(var o=0;o<t;++o){var r=e[o];r>=0&&r<=1&&r>i&&(i=r)}i===-1/0&&(i=0)}return i}(w,I,o);return bm(t.value,A,P,i.value,R)}var N=t.value+s*c*r,M=i.value-s*f*r;return bm(t.value,N,M,i.value,o)}}(m,p,h,n[f],(e-m)/(h-m))},n.addKeyFrame=function(t,n){return e.prototype.addKeyFrame.call(this,t,am(n))},n.assignSorted=function(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((function(e){return am(e)})));else{var n=Array.from(e);this.setKeyframes(n.map((function(e){return e[0]})),n.map((function(e){return am(e[1])})))}},n.isConstant=function(e){if(this._values.length<=1)return!0;var t=this._values[0].value;return this._values.every((function(n){return Zn(n.value,t,e)}))},n[ef]=function(e,t){if(t.toCCON){var n=this._times,i=this._values,o=n.length,r=new DataView(new ArrayBuffer(0+lm+lm+um+fm*o+ym*o)),a=0;r.setUint8(a,this.preExtrapolation),a+=lm,r.setUint8(a,this.postExtrapolation),a+=lm,r.setUint32(a,o,!0),a+=um,n.forEach((function(e,t){return r.setFloat32(a+fm*t,e,!0)})),a+=fm*o;for(var s,c=ae(i);!(s=c()).done;){var l=s.value;a=xm(r,l,a)}var u=new Uint8Array(r.buffer,0,a);e.writeProperty("bytes",u);var f=i.map((function(e){return e[vn]}));f.some((function(e){return void 0!==e}))&&e.writeProperty("keyframeValueEditorExtras",f)}else e.writeThis()},n[tf]=function(e,t){if(t.fromCCON){var n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength),o=0;this.preExtrapolation=i.getUint8(o),o+=lm,this.postExtrapolation=i.getUint8(o),o+=lm;var r=i.getUint32(o,!0);o+=um;var a=Array.from({length:r},(function(e,t){return i.getFloat32(o+fm*t,!0)}));o+=fm*r;for(var s=new Array(r),c=0;c<r;++c){var l=am({});o=Sm(i,l,o),s[c]=l}n.byteLength;var u=e.readProperty("keyframeValueEditorExtras");u&&(u.length,u.forEach((function(e,t){return s[t][vn]=e}))),this._times=a,this._values=s}else e.readThis()},t}(Yl),J_=ce((Q_=$_).prototype,"preExtrapolation",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ql.CLAMP}}),Z_=ce(Q_.prototype,"postExtrapolation",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ql.CLAMP}}),K_=Q_))||K_);!function(e){e[e.VALUE=1]="VALUE",e[e.INTERPOLATION_MODE=2]="INTERPOLATION_MODE",e[e.TANGENT_WEIGHT_MODE=4]="TANGENT_WEIGHT_MODE",e[e.LEFT_TANGENT=8]="LEFT_TANGENT",e[e.LEFT_TANGENT_WEIGHT=16]="LEFT_TANGENT_WEIGHT",e[e.RIGHT_TANGENT=32]="RIGHT_TANGENT",e[e.RIGHT_TANGENT_WEIGHT=64]="RIGHT_TANGENT_WEIGHT"}(sm||(sm={}));var lm=1,um=4,fm=4,_m=am({}),mm=_m.interpolationMode,pm=_m.tangentWeightMode,hm=_m.leftTangent,dm=_m.leftTangentWeight,vm=_m.rightTangent,gm=_m.rightTangentWeight,ym=26;function xm(e,t,n){var i=0,o=n,r=o;o+=4;var a=t.value,s=t.interpolationMode,c=t.tangentWeightMode,l=t.rightTangent,u=t.rightTangentWeight,f=t.leftTangent,_=t.leftTangentWeight,m=t.easingMethod;return e.setFloat32(o,a,!0),o+=4,s!==mm&&(i|=sm.INTERPOLATION_MODE,e.setUint8(o,s),o+=1),c!==pm&&(i|=sm.TANGENT_WEIGHT_MODE,e.setUint8(o,c),o+=1),f!==hm&&(i|=sm.LEFT_TANGENT,e.setFloat32(o,f,!0),o+=4),_!==dm&&(i|=sm.LEFT_TANGENT_WEIGHT,e.setFloat32(o,_,!0),o+=4),l!==vm&&(i|=sm.RIGHT_TANGENT,e.setFloat32(o,l,!0),o+=4),u!==gm&&(i|=sm.RIGHT_TANGENT_WEIGHT,e.setFloat32(o,u,!0),o+=4),i|=m<<8,e.setUint32(r,i,!0),o}function Sm(e,t,n){var i=n,o=e.getUint32(i,!0);i+=4,t.value=e.getFloat32(i,!0),i+=4,o&sm.INTERPOLATION_MODE&&(t.interpolationMode=e.getUint8(i),i+=1),o&sm.TANGENT_WEIGHT_MODE&&(t.tangentWeightMode=e.getUint8(i),i+=1),o&sm.LEFT_TANGENT&&(t.leftTangent=e.getFloat32(i,!0),i+=4),o&sm.LEFT_TANGENT_WEIGHT&&(t.leftTangentWeight=e.getFloat32(i,!0),i+=4),o&sm.RIGHT_TANGENT&&(t.rightTangent=e.getFloat32(i,!0),i+=4),o&sm.RIGHT_TANGENT_WEIGHT&&(t.rightTangentWeight=e.getFloat32(i,!0),i+=4);var r=(65280&o)>>8;return t.easingMethod=r,i}function Cm(e,t,n){return t+ai(e-t,n-t)}function Tm(e,t,n){return t+si(e-t,n-t)}function Em(e,t,n,i,o){return t+(i-t)/(n-e)*(o-e)}function bm(e,t,n,i,o){var r=1-o;return r*r*r*e+3*r*r*o*t+3*r*o*o*n+o*o*o*i}function Am(e,t,n,i,o){var r=1-o;return r*(r*(e+(3*t-e)*o)+3*n*o*o)+i*o*o*o}s.bezier=Am;var Pm,wm,Im,Rm,Nm,Mm,Om,Dm,zm,Lm,Fm,Um=Math.cos,Bm=Math.acos,Gm=Math.max,km=2*Math.PI,Hm=Math.sqrt;function jm(e){return e<0?-Math.pow(-e,1/3):Math.pow(e,1/3)}function Vm(e,t){var n=function(e,t){var n,i,o,r,a=t-0,s=t-e[0],c=3*a,l=3*s,u=3*(t-e[2]),f=1/(-a+l-u+(t-1)),_=1/3,m=(c-6*s+u)*f,p=m*_,h=(-c+l)*f,d=(3*h-m*m)*_,v=d*_,g=(2*m*m*m-9*m*h+a*f*27)/27,y=g/2,x=y*y+v*v*v;if(x<0){var S=-d*_,C=Hm(S*S*S),T=-g/(2*C),E=Bm(T<-1?-1:T>1?1:T),b=2*jm(C);return i=b*Um(E*_)-p,o=b*Um((E+km)*_)-p,r=b*Um((E+2*km)*_)-p,i>=0&&i<=1?o>=0&&o<=1?r>=0&&r<=1?Gm(i,o,r):Gm(i,o):r>=0&&r<=1?Gm(i,r):i:o>=0&&o<=1?r>=0&&r<=1?Gm(o,r):o:r}if(0===x)return o=-(n=y<0?jm(-y):-jm(y))-p,(i=2*n-p)>=0&&i<=1?o>=0&&o<=1?Gm(i,o):i:o;var A=Hm(x);return(n=jm(-y+A))-jm(y+A)-p}(e,t),i=e[1];return((1-n)*(i+(e[3]-i)*n)*3+n*n)*n}s.bezierByTime=Vm,function(e){e[e.SLERP=0]="SLERP",e[e.CONSTANT=1]="CONSTANT"}(Fm||(Fm=e("dZ",{})));var qm,Wm=al("cc.QuatKeyframeValue")(Pm=hl((Im=ce((wm=function(e){var t=void 0===e?{}:e,n=t.value,i=t.interpolationMode,o=t.easingMethod;se(this,"interpolationMode",Im,this),se(this,"value",Rm,this),se(this,"easingMethod",Nm,this),this.value=n?yi.clone(n):this.value,this.interpolationMode=null!=i?i:this.interpolationMode,this.easingMethod=null!=o?o:this.easingMethod}).prototype,"interpolationMode",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Fm.SLERP}}),Rm=ce(wm.prototype,"value",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return yi.clone(yi.IDENTITY)}}),Nm=ce(wm.prototype,"easingMethod",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return F_.LINEAR}}),Pm=wm))||Pm)||Pm;function Xm(e){return new Wm(e)}e("dY",al("cc.QuatCurve")((Lm=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"preExtrapolation",Dm,oe(t)),se(t,"postExtrapolation",zm,oe(t)),t}Z(t,e);var n=t.prototype;return n.evaluate=function(e,t){var n;null!==(n=t)&&void 0!==n||(t=new yi);var i=this._times,o=this._values,r=this.postExtrapolation,a=this.preExtrapolation,s=i.length;if(0===s)return t;var c=i[0],l=i[s-1];if(e<c){var u=o[0];switch(a){case ql.LOOP:e=c+ai(e-c,l-c);break;case ql.PING_PONG:e=c+si(e-c,l-c);break;case ql.CLAMP:default:return yi.copy(t,u.value)}}else if(e>l){var f=o[s-1];switch(r){case ql.LOOP:e=c+ai(e-c,l-c);break;case ql.PING_PONG:e=c+si(e-c,l-c);break;case ql.CLAMP:default:return yi.copy(t,f.value)}}var _=Jc(i,e);if(_>=0)return yi.copy(t,o[_].value);var m=~_,p=m-1,h=i[p],d=o[p],v=i[m],g=o[m],y=(e-h)/(v-h);switch(d.interpolationMode){default:case Fm.CONSTANT:return yi.copy(t,d.value);case Fm.SLERP:var x=d.easingMethod,S=x===F_.LINEAR?y:Array.isArray(x)?Vm(x,y):tm(x)(y);return yi.slerp(t,d.value,g.value,S)}},n.addKeyFrame=function(t,n){var i=new Wm(n);return e.prototype.addKeyFrame.call(this,t,i)},n.assignSorted=function(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((function(e){return Xm(e)})));else{var n=Array.from(e);this.setKeyframes(n.map((function(e){return e[0]})),n.map((function(e){return Xm(e[1])})))}},n[ef]=function(e,t){if(t.toCCON){var n=this._times,i=this._values,o=!0;i.forEach((function(e,t,n){var i=n[0];o&&e.interpolationMode!==i.interpolationMode&&(o=!1)}));var r=n.length,a=op*(o?1:r),s=i.reduce((function(e,t){var n=t.easingMethod;return e+(Array.isArray(n)?rp+4*sp:rp)}),0),c=0,l=new DataView(new ArrayBuffer(c+=ep+tp+np*r+4*ip*r+s+a+0)),u=0,f=0;o&&(f|=qm.INTERPOLATION_MODE),l.setUint32(u,f,!0),u+=ep,l.setUint32(u,r,!0),u+=tp,n.forEach((function(e,t){return l.setFloat32(u+np*t,e,!0)})),u+=np*r,i.forEach((function(e,t){var n=e.value,i=n.x,o=n.y,r=n.z,a=n.w,s=u+4*ip*t;l.setFloat32(s+0*ip,i,!0),l.setFloat32(s+1*ip,o,!0),l.setFloat32(s+2*ip,r,!0),l.setFloat32(s+3*ip,a,!0)})),u+=4*ip*r,i.forEach((function(e){var t=e.easingMethod;Array.isArray(t)?(l.setUint8(u,ap),++u,l.setFloat32(u+0*sp,t[0],!0),l.setFloat32(u+1*sp,t[1],!0),l.setFloat32(u+2*sp,t[2],!0),l.setFloat32(u+3*sp,t[3],!0),u+=4*sp):(l.setUint8(u,t),++u)}));var _=u;u+=a;var m=_;i.forEach((function(e){var t=e.interpolationMode;l.setUint8(m,t),o||(m+=op)}));var p=new Uint8Array(l.buffer);e.writeProperty("bytes",p)}else e.writeThis()},n[tf]=function(e,t){if(t.fromCCON){var n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength),o=0,r=i.getUint32(o,!0);o+=ep;var a=r&qm.INTERPOLATION_MODE,s=i.getUint32(o,!0);o+=tp;var c=Array.from({length:s},(function(e,t){return i.getFloat32(o+np*t,!0)})),l=o+=np*s;o+=4*ip*s;var u=Array.from({length:s},(function(e,t){var n=l+4*ip*t,r=i.getFloat32(n+0*ip,!0),a=i.getFloat32(n+1*ip,!0),s=i.getFloat32(n+2*ip,!0),c=i.getFloat32(n+3*ip,!0),u=i.getUint8(o);++o;var f=Xm({value:{x:r,y:a,z:s,w:c}});return u!==ap?f.easingMethod=u:(f.easingMethod=[i.getFloat32(o+0*sp,!0),i.getFloat32(o+1*sp,!0),i.getFloat32(o+2*sp,!0),i.getFloat32(o+3*sp,!0)],o+=4*sp),f}));if(a){var f=i.getUint8(o);++o;for(var _=0;_<s;++_)u[_].interpolationMode=f}else{for(var m=0;m<s;++m){var p=i.getUint8(o+m);u[m].interpolationMode=p}o+=s}this._times=c,this._values=u}else e.readThis()},t}(Yl),Dm=ce((Om=Lm).prototype,"preExtrapolation",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ql.CLAMP}}),zm=ce(Om.prototype,"postExtrapolation",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ql.CLAMP}}),Mm=Om))||Mm),function(e){e[e.INTERPOLATION_MODE=1]="INTERPOLATION_MODE"}(qm||(qm={}));var Ym,Km,Qm,Jm,Zm,$m,ep=1,tp=4,np=4,ip=4,op=1,rp=1,ap=255,sp=4,cp=(e("d_",al("cc.ObjectCurve")(Ym=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.evaluate=function(e){var t=this.searchKeyframe(e);if(t>=0)return this._values[t];var n=$n(~t-1,0,this._values.length-1);return this._values[n]},t}(Yl))||Ym),e("f3",(function(){this.time=0,this.value=0,this.inTangent=0,this.outTangent=0})));mn.fastDefine("cc.Keyframe",cp,{time:0,value:0,inTangent:0,outTangent:0});var lp=function(){function e(){this.index=void 0,this.time=void 0,this.endTime=void 0,this.coefficient=void 0,this.index=-1,this.time=0,this.endTime=0,this.coefficient=new Float32Array(4)}return e.prototype.evaluate=function(e){return t=e-this.time,n=this.coefficient,t*(t*(t*n[0]+n[1])+n[2])+n[3];var t,n},e}();function up(e){switch(e){default:case qc.Default:case qc.Normal:case qc.Clamp:return ql.CLAMP;case qc.PingPong:return ql.PING_PONG;case qc.Loop:return ql.LOOP}}function fp(e){switch(e){default:case ql.LINEAR:case ql.CLAMP:return qc.Clamp;case ql.PING_PONG:return qc.PingPong;case ql.LOOP:return qc.Loop}}function _p(e,t){console.warn(e+" is deprecated, please use "+t+" instead.")}e("f4",al("cc.AnimationCurve")(($m=Zm=function(){function e(e){if(void 0===e&&(e=null),se(this,"_curve",Jm,this),this.cachedKey=void 0,e instanceof cm)this._curve=e;else{var t=new cm;this._curve=t,t.preExtrapolation=ql.LOOP,t.postExtrapolation=ql.CLAMP,e?t.assignSorted(e.map((function(e){return[e.time,{interpolationMode:Vl.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}]}))):t.assignSorted([[0,{interpolationMode:Vl.CUBIC,value:1}],[1,{interpolationMode:Vl.CUBIC,value:1}]])}this.cachedKey=new lp}var t=e.prototype;return t.addKey=function(e){e?this._curve.addKeyFrame(e.time,{interpolationMode:Vl.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}):this._curve.clear()},t.evaluate_slow=function(e){return this._curve.evaluate(e)},t.evaluate=function(e){var t=this.cachedKey,n=this._curve,i=n.keyFramesCount-1,o=e,r=e<0?n.preExtrapolation:n.postExtrapolation,a=n.getKeyframeTime(0),s=n.getKeyframeTime(i);switch(r){case ql.LOOP:o=ai(e-a,s-a)+a;break;case ql.PING_PONG:o=si(e-a,s-a)+a;break;case ql.CLAMP:default:o=$n(e,a,s)}if(o>=t.time&&o<t.endTime)return t.evaluate(o);var c=this.findIndex(t,o),l=Math.min(c+1,i);return this.calcOptimizedKey(t,c,l),t.evaluate(o)},t.calcOptimizedKey=function(e,t,n){var i=this._curve.getKeyframeTime(t),o=this._curve.getKeyframeTime(n),r=this._curve.getKeyframeValue(t),a=r.value,s=r.leftTangent,c=this._curve.getKeyframeValue(n),l=c.value,u=c.rightTangent;e.index=t,e.time=i,e.endTime=o;var f=o-i,_=l-a,m=1/(f*f),p=s*f,h=u*f;e.coefficient[0]=(p+h-_-_)*m/f,e.coefficient[1]=(_+_+_-p-p-h)*m,e.coefficient[2]=s,e.coefficient[3]=a},t.findIndex=function(e,t){var n=this._curve,i=n.keyFramesCount,o=e.index;if(-1!==o)if(t>n.getKeyframeTime(o))for(var r=0;r<3;r++){var a=o+r;if(a+1<i&&n.getKeyframeTime(a+1)>t)return a}else for(var s=0;s<3;s++){var c=o-s;if(c>=0&&n.getKeyframeTime(c-1)<=t)return c-1}for(var l,u=0,f=i;f-u>1;)l=Math.floor((u+f)/2),n.getKeyframeTime(l)>=t?f=l:u=l;return u},Q(e,[{key:"_internalCurve",get:function(){return this._curve}},{key:"keyFrames",get:function(){return Array.from(this._curve.keyframes()).map((function(e){var t=e[0],n=e[1],i=new cp;return i.time=t,i.value=n.value,i.inTangent=n.leftTangent,i.outTangent=n.rightTangent,i}))},set:function(e){this._curve.assignSorted(e.map((function(e){return[e.time,{interpolationMode:Vl.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}]})))}},{key:"preWrapMode",get:function(){return fp(this._curve.preExtrapolation)},set:function(e){this._curve.preExtrapolation=up(e)}},{key:"postWrapMode",get:function(){return fp(this._curve.postExtrapolation)},set:function(e){this._curve.postExtrapolation=up(e)}}]),e}(),Zm.defaultKF=[{time:0,value:1,inTangent:0,outTangent:0},{time:1,value:1,inTangent:0,outTangent:0}],Jm=ce((Qm=$m).prototype,"_curve",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Km=Qm))||Km),kn(ac,"intersect",[{name:"ray_aabb",newName:"rayAABB"},{name:"ray_plane",newName:"rayPlane"},{name:"ray_triangle",newName:"rayTriangle"},{name:"ray_sphere",newName:"raySphere"},{name:"ray_obb",newName:"rayOBB"},{name:"ray_capsule",newName:"rayCapsule"},{name:"ray_subMesh",newName:"raySubMesh"},{name:"ray_mesh",newName:"rayMesh"},{name:"ray_model",newName:"rayModel"},{name:"line_plane",newName:"linePlane"},{name:"line_triangle",newName:"lineTriangle"},{name:"line_aabb",newName:"lineAABB"},{name:"line_obb",newName:"lineOBB"},{name:"line_sphere",newName:"lineSphere"},{name:"aabb_aabb",newName:"aabbWithAABB"},{name:"aabb_obb",newName:"aabbWithOBB"},{name:"aabb_plane",newName:"aabbPlane"},{name:"aabb_frustum",newName:"aabbFrustum"},{name:"aabbFrustum_accurate",newName:"aabbFrustumAccurate"},{name:"obb_point",newName:"obbPoint"},{name:"obb_plane",newName:"obbPlane"},{name:"obb_frustum",newName:"obbFrustum"},{name:"obbFrustum_accurate",newName:"obbFrustumAccurate"},{name:"obb_obb",newName:"obbWithOBB"},{name:"obb_capsule",newName:"obbCapsule"},{name:"sphere_plane",newName:"spherePlane"},{name:"sphere_frustum",newName:"sphereFrustum"},{name:"sphereFrustum_accurate",newName:"sphereFrustumAccurate"},{name:"sphere_sphere",newName:"sphereWithSphere"},{name:"sphere_aabb",newName:"sphereAABB"},{name:"sphere_obb",newName:"sphereOBB"},{name:"sphere_capsule",newName:"sphereCapsule"},{name:"capsule_capsule",newName:"capsuleWithCapsule"}]),e("f6",function(e){function t(){var t;return t=e.call(this)||this,_p("line","Line"),t}return Z(t,e),t}(So)),e("f7",function(e){function t(){var t;return t=e.call(this)||this,_p("plane","Plane"),t}return Z(t,e),t}(gc)),e("f8",function(e){function t(){var t;return t=e.call(this)||this,_p("ray","Ray"),t}return Z(t,e),t}(Co)),e("f9",function(e){function t(){var t;return t=e.call(this)||this,_p("triangle","Triangle"),t}return Z(t,e),t}(pr)),e("fa",function(e){function t(){var t;return t=e.call(this)||this,_p("sphere","Sphere"),t}return Z(t,e),t}(mr)),e("fb",function(e){function t(){var t;return t=e.call(this)||this,_p("aabb","AABB"),t}return Z(t,e),t}(Uc)),e("fc",function(e){function t(){var t;return t=e.call(this)||this,_p("obb","OBB"),t}return Z(t,e),t}(Hc)),e("fd",function(e){function t(){var t;return t=e.call(this)||this,_p("capsule","Capsule"),t}return Z(t,e),t}(jc)),e("fe",function(e){function t(){var t;return t=e.call(this)||this,_p("frustum","Frustum"),t}return Z(t,e),t}(Qc));var mp={NONE:0,IGNORE_RAYCAST:1<<20,GIZMOS:1<<21,EDITOR:1<<22,UI_3D:1<<23,SCENE_GIZMO:1<<24,UI_2D:1<<25,PROFILER:1<<28,DEFAULT:1<<30,ALL:4294967295},pp=e("dJ",function(){function e(){}return e.makeMaskInclude=function(e){for(var t,n=0,i=ae(e);!(t=i()).done;)n|=t.value;return n},e.makeMaskExclude=function(t){return~e.makeMaskInclude(t)},e.addLayer=function(t,n){void 0!==n?n>19||n<0?console.warn("maximum layers reached."):(e.Enum[t]=1<<n,e.Enum[n]=t,e.BitMask[t]=1<<n,e.BitMask[n]=t):console.warn("bitNum can't be undefined")},e.deleteLayer=function(t){t>19||t<0?console.warn("do not change buildin layers."):(delete e.Enum[e.Enum[t]],delete e.Enum[t],delete e.BitMask[e.BitMask[t]],delete e.BitMask[t])},e.nameToLayer=function(t){return void 0===t?(console.warn("name can't be undefined"),-1):Fn(e.Enum[t])},e.layerToName=function(t){return t>31||t<0?(console.warn("Unable to access unknown layer."),""):e.Enum[t]},e}());pp.Enum=yt(mp),pp.BitMask=gt(J({},mp)),s.Layers=pp;var hp,dp,vp=e("eC","GbufferFlow"),gp=e("eF","LightingFlow"),yp=e("ez","ForwardFlow"),xp=e("eA","ShadowFlow");!function(e){e[e.DEFAULT=100]="DEFAULT",e[e.UI=200]="UI"}(hp||(hp={})),s.RenderPassStage=hp,function(e){e[e.MIN=0]="MIN",e[e.MAX=255]="MAX",e[e.DEFAULT=128]="DEFAULT"}(dp||(dp=e("e4",{})));var Sp,Cp=e("et",{bindings:[],layouts:{}}),Tp=e("eE",{bindings:[],layouts:{}});!function(e){e[e.UBO_GLOBAL=0]="UBO_GLOBAL",e[e.UBO_CAMERA=1]="UBO_CAMERA",e[e.UBO_SHADOW=2]="UBO_SHADOW",e[e.SAMPLER_SHADOWMAP=3]="SAMPLER_SHADOWMAP",e[e.SAMPLER_ENVIRONMENT=4]="SAMPLER_ENVIRONMENT",e[e.SAMPLER_SPOT_LIGHTING_MAP=5]="SAMPLER_SPOT_LIGHTING_MAP",e[e.SAMPLER_GBUFFER_ALBEDOMAP=6]="SAMPLER_GBUFFER_ALBEDOMAP",e[e.SAMPLER_GBUFFER_POSITIONMAP=7]="SAMPLER_GBUFFER_POSITIONMAP",e[e.SAMPLER_GBUFFER_NORMALMAP=8]="SAMPLER_GBUFFER_NORMALMAP",e[e.SAMPLER_GBUFFER_EMISSIVEMAP=9]="SAMPLER_GBUFFER_EMISSIVEMAP",e[e.SAMPLER_LIGHTING_RESULTMAP=10]="SAMPLER_LIGHTING_RESULTMAP",e[e.COUNT=11]="COUNT"}(Sp||(Sp=e("es",{})));var Ep,bp=Sp.SAMPLER_SHADOWMAP,Ap=Sp.COUNT-bp;!function(e){e[e.UBO_LOCAL=0]="UBO_LOCAL",e[e.UBO_FORWARD_LIGHTS=1]="UBO_FORWARD_LIGHTS",e[e.UBO_SKINNING_ANIMATION=2]="UBO_SKINNING_ANIMATION",e[e.UBO_SKINNING_TEXTURE=3]="UBO_SKINNING_TEXTURE",e[e.UBO_MORPH=4]="UBO_MORPH",e[e.SAMPLER_JOINTS=5]="SAMPLER_JOINTS",e[e.SAMPLER_MORPH_POSITION=6]="SAMPLER_MORPH_POSITION",e[e.SAMPLER_MORPH_NORMAL=7]="SAMPLER_MORPH_NORMAL",e[e.SAMPLER_MORPH_TANGENT=8]="SAMPLER_MORPH_TANGENT",e[e.SAMPLER_LIGHTMAP=9]="SAMPLER_LIGHTMAP",e[e.SAMPLER_SPRITE=10]="SAMPLER_SPRITE",e[e.SAMPLER_REFLECTION=11]="SAMPLER_REFLECTION",e[e.STORAGE_REFLECTION=12]="STORAGE_REFLECTION",e[e.COUNT=13]="COUNT"}(Ep||(Ep=e("gG",{})));var Pp,wp=Ep.SAMPLER_JOINTS,Ip=Ep.COUNT-wp;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.MATERIAL=1]="MATERIAL",e[e.LOCAL=2]="LOCAL"}(Pp||(Pp=e("ev",{})));var Rp=e("eT",new Ir);Rp.bufferOffsets=[0,bp+wp,bp],Rp.samplerOffsets=[-bp,Ap+Ip,Ap-wp],Rp.flexibleSet=1;var Np=e("eo",(function(){}));Np.TIME_OFFSET=0,Np.NATIVE_SIZE_OFFSET=Np.TIME_OFFSET+4,Np.SCREEN_SIZE_OFFSET=Np.NATIVE_SIZE_OFFSET+4,Np.COUNT=Np.SCREEN_SIZE_OFFSET+4,Np.SIZE=4*Np.COUNT,Np.NAME="CCGlobal",Np.BINDING=Sp.UBO_GLOBAL,Np.DESCRIPTOR=new oa(Np.BINDING,lr.UNIFORM_BUFFER,1,Jo.ALL),Np.LAYOUT=new Br(Pp.GLOBAL,Np.BINDING,Np.NAME,[new Ur("cc_time",zo.FLOAT4,1),new Ur("cc_screenSize",zo.FLOAT4,1),new Ur("cc_nativeSize",zo.FLOAT4,1)],1),Cp.layouts[Np.NAME]=Np.LAYOUT,Cp.bindings[Np.BINDING]=Np.DESCRIPTOR;var Mp=e("ep",(function(){}));Mp.MAT_VIEW_OFFSET=0,Mp.MAT_VIEW_INV_OFFSET=Mp.MAT_VIEW_OFFSET+16,Mp.MAT_PROJ_OFFSET=Mp.MAT_VIEW_INV_OFFSET+16,Mp.MAT_PROJ_INV_OFFSET=Mp.MAT_PROJ_OFFSET+16,Mp.MAT_VIEW_PROJ_OFFSET=Mp.MAT_PROJ_INV_OFFSET+16,Mp.MAT_VIEW_PROJ_INV_OFFSET=Mp.MAT_VIEW_PROJ_OFFSET+16,Mp.CAMERA_POS_OFFSET=Mp.MAT_VIEW_PROJ_INV_OFFSET+16,Mp.SCREEN_SCALE_OFFSET=Mp.CAMERA_POS_OFFSET+4,Mp.EXPOSURE_OFFSET=Mp.SCREEN_SCALE_OFFSET+4,Mp.MAIN_LIT_DIR_OFFSET=Mp.EXPOSURE_OFFSET+4,Mp.MAIN_LIT_COLOR_OFFSET=Mp.MAIN_LIT_DIR_OFFSET+4,Mp.AMBIENT_SKY_OFFSET=Mp.MAIN_LIT_COLOR_OFFSET+4,Mp.AMBIENT_GROUND_OFFSET=Mp.AMBIENT_SKY_OFFSET+4,Mp.GLOBAL_FOG_COLOR_OFFSET=Mp.AMBIENT_GROUND_OFFSET+4,Mp.GLOBAL_FOG_BASE_OFFSET=Mp.GLOBAL_FOG_COLOR_OFFSET+4,Mp.GLOBAL_FOG_ADD_OFFSET=Mp.GLOBAL_FOG_BASE_OFFSET+4,Mp.COUNT=Mp.GLOBAL_FOG_ADD_OFFSET+4,Mp.SIZE=4*Mp.COUNT,Mp.NAME="CCCamera",Mp.BINDING=Sp.UBO_CAMERA,Mp.DESCRIPTOR=new oa(Mp.BINDING,lr.UNIFORM_BUFFER,1,Jo.ALL),Mp.LAYOUT=new Br(Pp.GLOBAL,Mp.BINDING,Mp.NAME,[new Ur("cc_matView",zo.MAT4,1),new Ur("cc_matViewInv",zo.MAT4,1),new Ur("cc_matProj",zo.MAT4,1),new Ur("cc_matProjInv",zo.MAT4,1),new Ur("cc_matViewProj",zo.MAT4,1),new Ur("cc_matViewProjInv",zo.MAT4,1),new Ur("cc_cameraPos",zo.FLOAT4,1),new Ur("cc_screenScale",zo.FLOAT4,1),new Ur("cc_exposure",zo.FLOAT4,1),new Ur("cc_mainLitDir",zo.FLOAT4,1),new Ur("cc_mainLitColor",zo.FLOAT4,1),new Ur("cc_ambientSky",zo.FLOAT4,1),new Ur("cc_ambientGround",zo.FLOAT4,1),new Ur("cc_fogColor",zo.FLOAT4,1),new Ur("cc_fogBase",zo.FLOAT4,1),new Ur("cc_fogAdd",zo.FLOAT4,1)],1),Cp.layouts[Mp.NAME]=Mp.LAYOUT,Cp.bindings[Mp.BINDING]=Mp.DESCRIPTOR;var Op=e("en",(function(){}));Op.MAT_LIGHT_PLANE_PROJ_OFFSET=0,Op.MAT_LIGHT_VIEW_OFFSET=Op.MAT_LIGHT_PLANE_PROJ_OFFSET+16,Op.MAT_LIGHT_VIEW_PROJ_OFFSET=Op.MAT_LIGHT_VIEW_OFFSET+16,Op.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET=Op.MAT_LIGHT_VIEW_PROJ_OFFSET+16,Op.SHADOW_PROJ_DEPTH_INFO_OFFSET=Op.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET+4,Op.SHADOW_PROJ_INFO_OFFSET=Op.SHADOW_PROJ_DEPTH_INFO_OFFSET+4,Op.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET=Op.SHADOW_PROJ_INFO_OFFSET+4,Op.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET=Op.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+4,Op.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET=Op.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+4,Op.SHADOW_COLOR_OFFSET=Op.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+4,Op.COUNT=Op.SHADOW_COLOR_OFFSET+4,Op.SIZE=4*Op.COUNT,Op.NAME="CCShadow",Op.BINDING=Sp.UBO_SHADOW,Op.DESCRIPTOR=new oa(Op.BINDING,lr.UNIFORM_BUFFER,1,Jo.ALL),Op.LAYOUT=new Br(Pp.GLOBAL,Op.BINDING,Op.NAME,[new Ur("cc_matLightPlaneProj",zo.MAT4,1),new Ur("cc_matLightView",zo.MAT4,1),new Ur("cc_matLightViewProj",zo.MAT4,1),new Ur("cc_shadowInvProjDepthInfo",zo.FLOAT4,1),new Ur("cc_shadowProjDepthInfo",zo.FLOAT4,1),new Ur("cc_shadowProjInfo",zo.FLOAT4,1),new Ur("cc_shadowNFLSInfo",zo.FLOAT4,1),new Ur("cc_shadowWHPBInfo",zo.FLOAT4,1),new Ur("cc_shadowLPNNInfo",zo.FLOAT4,1),new Ur("cc_shadowColor",zo.FLOAT4,1)],1),Cp.layouts[Op.NAME]=Op.LAYOUT,Cp.bindings[Op.BINDING]=Op.DESCRIPTOR;var Dp=e("eq",Sp.SAMPLER_SHADOWMAP),zp=new oa(Dp,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),Lp=new Gr(Pp.GLOBAL,Dp,"cc_shadowMap",zo.SAMPLER2D,1);Cp.layouts.cc_shadowMap=Lp,Cp.bindings[Dp]=zp;var Fp=e("eG",Sp.SAMPLER_GBUFFER_ALBEDOMAP),Up=new oa(Fp,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),Bp=new Gr(Pp.GLOBAL,Fp,"cc_gbuffer_albedoMap",zo.SAMPLER2D,1);Cp.layouts.cc_gbuffer_albedoMap=Bp,Cp.bindings[Fp]=Up;var Gp=e("eH",Sp.SAMPLER_GBUFFER_POSITIONMAP),kp=new oa(Gp,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),Hp=new Gr(Pp.GLOBAL,Gp,"cc_gbuffer_positionMap",zo.SAMPLER2D,1);Cp.layouts.cc_gbuffer_positionMap=Hp,Cp.bindings[Gp]=kp;var jp=e("eI",Sp.SAMPLER_GBUFFER_NORMALMAP),Vp=new oa(jp,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),qp=new Gr(Pp.GLOBAL,jp,"cc_gbuffer_normalMap",zo.SAMPLER2D,1);Cp.layouts.cc_gbuffer_normalMap=qp,Cp.bindings[jp]=Vp;var Wp=e("eK",Sp.SAMPLER_LIGHTING_RESULTMAP),Xp=new oa(Wp,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),Yp=new Gr(Pp.GLOBAL,Wp,"cc_lighting_resultMap",zo.SAMPLER2D,1);Cp.layouts.cc_lighting_resultMap=Yp,Cp.bindings[Wp]=Xp;var Kp=e("eJ",Sp.SAMPLER_GBUFFER_EMISSIVEMAP),Qp=new oa(Kp,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),Jp=new Gr(Pp.GLOBAL,Kp,"cc_gbuffer_emissiveMap",zo.SAMPLER2D,1);Cp.layouts.cc_gbuffer_emissiveMap=Jp,Cp.bindings[Kp]=Qp;var Zp=e("ee",Sp.SAMPLER_ENVIRONMENT),$p=new oa(Zp,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),eh=new Gr(Pp.GLOBAL,Zp,"cc_environment",zo.SAMPLER_CUBE,1);Cp.layouts.cc_environment=eh,Cp.bindings[Zp]=$p;var th=e("ey",Sp.SAMPLER_SPOT_LIGHTING_MAP),nh=new oa(th,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),ih=new Gr(Pp.GLOBAL,th,"cc_spotLightingMap",zo.SAMPLER2D,1);Cp.layouts.cc_spotLightingMap=ih,Cp.bindings[th]=nh;var oh=e("e8",(function(){}));oh.MAT_WORLD_OFFSET=0,oh.MAT_WORLD_IT_OFFSET=oh.MAT_WORLD_OFFSET+16,oh.LIGHTINGMAP_UVPARAM=oh.MAT_WORLD_IT_OFFSET+16,oh.COUNT=oh.LIGHTINGMAP_UVPARAM+4,oh.SIZE=4*oh.COUNT,oh.NAME="CCLocal",oh.BINDING=Ep.UBO_LOCAL,oh.DESCRIPTOR=new oa(oh.BINDING,lr.UNIFORM_BUFFER,1,Jo.VERTEX|Jo.COMPUTE),oh.LAYOUT=new Br(Pp.LOCAL,oh.BINDING,oh.NAME,[new Ur("cc_matWorld",zo.MAT4,1),new Ur("cc_matWorldIT",zo.MAT4,1),new Ur("cc_lightingMapUVParam",zo.FLOAT4,1)],1),Tp.layouts[oh.NAME]=oh.LAYOUT,Tp.bindings[oh.BINDING]=oh.DESCRIPTOR;var rh=e("ea","a_matWorld0"),ah=e("ew",(function(){}));ah.BATCHING_COUNT=10,ah.MAT_WORLDS_OFFSET=0,ah.COUNT=16*ah.BATCHING_COUNT,ah.SIZE=4*ah.COUNT,ah.NAME="CCLocalBatched",ah.BINDING=Ep.UBO_LOCAL,ah.DESCRIPTOR=new oa(ah.BINDING,lr.UNIFORM_BUFFER,1,Jo.VERTEX|Jo.COMPUTE),ah.LAYOUT=new Br(Pp.LOCAL,ah.BINDING,ah.NAME,[new Ur("cc_matWorlds",zo.MAT4,ah.BATCHING_COUNT)],1),Tp.layouts[ah.NAME]=ah.LAYOUT,Tp.bindings[ah.BINDING]=ah.DESCRIPTOR;var sh=e("ex",(function(){}));sh.LIGHTS_PER_PASS=1,sh.LIGHT_POS_OFFSET=0,sh.LIGHT_COLOR_OFFSET=sh.LIGHT_POS_OFFSET+4*sh.LIGHTS_PER_PASS,sh.LIGHT_SIZE_RANGE_ANGLE_OFFSET=sh.LIGHT_COLOR_OFFSET+4*sh.LIGHTS_PER_PASS,sh.LIGHT_DIR_OFFSET=sh.LIGHT_SIZE_RANGE_ANGLE_OFFSET+4*sh.LIGHTS_PER_PASS,sh.COUNT=sh.LIGHT_DIR_OFFSET+4*sh.LIGHTS_PER_PASS,sh.SIZE=4*sh.COUNT,sh.NAME="CCForwardLight",sh.BINDING=Ep.UBO_FORWARD_LIGHTS,sh.DESCRIPTOR=new oa(sh.BINDING,lr.DYNAMIC_UNIFORM_BUFFER,1,Jo.FRAGMENT),sh.LAYOUT=new Br(Pp.LOCAL,sh.BINDING,sh.NAME,[new Ur("cc_lightPos",zo.FLOAT4,sh.LIGHTS_PER_PASS),new Ur("cc_lightColor",zo.FLOAT4,sh.LIGHTS_PER_PASS),new Ur("cc_lightSizeRangeAngle",zo.FLOAT4,sh.LIGHTS_PER_PASS),new Ur("cc_lightDir",zo.FLOAT4,sh.LIGHTS_PER_PASS)],1),Tp.layouts[sh.NAME]=sh.LAYOUT,Tp.bindings[sh.BINDING]=sh.DESCRIPTOR;var ch=e("eD",(function(){}));ch.LIGHTS_PER_PASS=10;var lh=e("gj",(function(){}));lh.JOINTS_TEXTURE_INFO_OFFSET=0,lh.COUNT=lh.JOINTS_TEXTURE_INFO_OFFSET+4,lh.SIZE=4*lh.COUNT,lh.NAME="CCSkinningTexture",lh.BINDING=Ep.UBO_SKINNING_TEXTURE,lh.DESCRIPTOR=new oa(lh.BINDING,lr.UNIFORM_BUFFER,1,Jo.VERTEX),lh.LAYOUT=new Br(Pp.LOCAL,lh.BINDING,lh.NAME,[new Ur("cc_jointTextureInfo",zo.FLOAT4,1)],1),Tp.layouts[lh.NAME]=lh.LAYOUT,Tp.bindings[lh.BINDING]=lh.DESCRIPTOR;var uh=e("gh",(function(){}));uh.JOINTS_ANIM_INFO_OFFSET=0,uh.COUNT=uh.JOINTS_ANIM_INFO_OFFSET+4,uh.SIZE=4*uh.COUNT,uh.NAME="CCSkinningAnimation",uh.BINDING=Ep.UBO_SKINNING_ANIMATION,uh.DESCRIPTOR=new oa(uh.BINDING,lr.UNIFORM_BUFFER,1,Jo.VERTEX),uh.LAYOUT=new Br(Pp.LOCAL,uh.BINDING,uh.NAME,[new Ur("cc_jointAnimInfo",zo.FLOAT4,1)],1),Tp.layouts[uh.NAME]=uh.LAYOUT,Tp.bindings[uh.BINDING]=uh.DESCRIPTOR;var fh=e("gl","a_jointAnimInfo"),_h=e("gi",(function(){}));_h.JOINTS_OFFSET=0,_h.COUNT=_h.JOINTS_OFFSET+360,_h.SIZE=4*_h.COUNT,_h.NAME="CCSkinning",_h.BINDING=Ep.UBO_SKINNING_TEXTURE,_h.DESCRIPTOR=new oa(_h.BINDING,lr.UNIFORM_BUFFER,1,Jo.VERTEX),_h.LAYOUT=new Br(Pp.LOCAL,_h.BINDING,_h.NAME,[new Ur("cc_joints",zo.FLOAT4,90)],1),Tp.layouts[_h.NAME]=_h.LAYOUT,Tp.bindings[_h.BINDING]=_h.DESCRIPTOR;var mh=e("gp",(function(){}));mh.MAX_MORPH_TARGET_COUNT=60,mh.OFFSET_OF_WEIGHTS=0,mh.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH=4*mh.MAX_MORPH_TARGET_COUNT,mh.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT=mh.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH+4,mh.OFFSET_OF_VERTICES_COUNT=mh.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT+4,mh.COUNT_BASE_4_BYTES=4*Math.ceil(mh.MAX_MORPH_TARGET_COUNT/4)+4,mh.SIZE=4*mh.COUNT_BASE_4_BYTES,mh.NAME="CCMorph",mh.BINDING=Ep.UBO_MORPH,mh.DESCRIPTOR=new oa(mh.BINDING,lr.UNIFORM_BUFFER,1,Jo.VERTEX),mh.LAYOUT=new Br(Pp.LOCAL,mh.BINDING,mh.NAME,[new Ur("cc_displacementWeights",zo.FLOAT4,mh.MAX_MORPH_TARGET_COUNT/4),new Ur("cc_displacementTextureInfo",zo.FLOAT4,1)],1),Tp.layouts[mh.NAME]=mh.LAYOUT,Tp.bindings[mh.BINDING]=mh.DESCRIPTOR;var ph=e("gk",Ep.SAMPLER_JOINTS),hh=new oa(ph,lr.SAMPLER_TEXTURE,1,Jo.VERTEX),dh=new Gr(Pp.LOCAL,ph,"cc_jointTexture",zo.SAMPLER2D,1);Tp.layouts.cc_jointTexture=dh,Tp.bindings[ph]=hh;var vh=e("gu",Ep.SAMPLER_MORPH_POSITION),gh=new oa(vh,lr.SAMPLER_TEXTURE,1,Jo.VERTEX),yh=new Gr(Pp.LOCAL,vh,"cc_PositionDisplacements",zo.SAMPLER2D,1);Tp.layouts.cc_PositionDisplacements=yh,Tp.bindings[vh]=gh;var xh=e("gt",Ep.SAMPLER_MORPH_NORMAL),Sh=new oa(xh,lr.SAMPLER_TEXTURE,1,Jo.VERTEX),Ch=new Gr(Pp.LOCAL,xh,"cc_NormalDisplacements",zo.SAMPLER2D,1);Tp.layouts.cc_NormalDisplacements=Ch,Tp.bindings[xh]=Sh;var Th=e("gs",Ep.SAMPLER_MORPH_TANGENT),Eh=new oa(Th,lr.SAMPLER_TEXTURE,1,Jo.VERTEX),bh=new Gr(Pp.LOCAL,Th,"cc_TangentDisplacements",zo.SAMPLER2D,1);Tp.layouts.cc_TangentDisplacements=bh,Tp.bindings[Th]=Eh;var Ah=e("e7",Ep.SAMPLER_LIGHTMAP),Ph=new oa(Ah,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),wh=new Gr(Pp.LOCAL,Ah,"cc_lightingMap",zo.SAMPLER2D,1);Tp.layouts.cc_lightingMap=wh,Tp.bindings[Ah]=Ph;var Ih=Ep.SAMPLER_SPRITE,Rh=new oa(Ih,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),Nh=new Gr(Pp.LOCAL,Ih,"cc_spriteTexture",zo.SAMPLER2D,1);Tp.layouts.cc_spriteTexture=Nh,Tp.bindings[Ih]=Rh;var Mh=e("e5",Ep.SAMPLER_REFLECTION),Oh=new oa(Mh,lr.SAMPLER_TEXTURE,1,Jo.FRAGMENT),Dh=new Gr(Pp.LOCAL,Mh,"cc_reflectionTexture",zo.SAMPLER2D,1);Tp.layouts.cc_reflectionTexture=Dh,Tp.bindings[Mh]=Oh;var zh=e("e6",Ep.STORAGE_REFLECTION),Lh=new oa(zh,lr.STORAGE_IMAGE,1,Jo.COMPUTE),Fh=new jr(Pp.LOCAL,zh,"cc_reflectionStorage",zo.IMAGE2D,1);Tp.layouts.cc_reflectionStorage=Fh,Tp.bindings[zh]=Lh;var Uh=e("d$",pp.makeMaskExclude([pp.BitMask.UI_2D,pp.BitMask.GIZMOS,pp.BitMask.EDITOR,pp.BitMask.SCENE_GIZMO,pp.BitMask.PROFILER])),Bh=pp.makeMaskExclude([pp.BitMask.UI_2D,pp.BitMask.PROFILER]),Gh=pp.Enum.ALL;function kh(e){return e.hasFeature(Mo.COLOR_HALF_FLOAT)&&e.hasFeature(Mo.TEXTURE_HALF_FLOAT)&&!(e.gfxAPI===Ro.WEBGL)}e("dE",Object.freeze({__proto__:null,PIPELINE_FLOW_GBUFFER:vp,PIPELINE_FLOW_LIGHTING:gp,PIPELINE_FLOW_FORWARD:yp,PIPELINE_FLOW_SHADOW:xp,PIPELINE_FLOW_SMAA:"SMAAFlow",PIPELINE_FLOW_TONEMAP:"ToneMapFlow",get RenderPassStage(){return hp},get RenderPriority(){return dp},globalDescriptorSetLayout:Cp,localDescriptorSetLayout:Tp,get PipelineGlobalBindings(){return Sp},get ModelLocalBindings(){return Ep},get SetIndex(){return Pp},bindingMappingInfo:Rp,UBOGlobal:Np,UBOCamera:Mp,UBOShadow:Op,UNIFORM_SHADOWMAP_BINDING:Dp,UNIFORM_GBUFFER_ALBEDOMAP_BINDING:Fp,UNIFORM_GBUFFER_POSITIONMAP_BINDING:Gp,UNIFORM_GBUFFER_NORMALMAP_BINDING:jp,UNIFORM_LIGHTING_RESULTMAP_BINDING:Wp,UNIFORM_GBUFFER_EMISSIVEMAP_BINDING:Kp,UNIFORM_ENVIRONMENT_BINDING:Zp,UNIFORM_SPOT_LIGHTING_MAP_TEXTURE_BINDING:th,UBOLocal:oh,INST_MAT_WORLD:rh,UBOLocalBatched:ah,UBOForwardLight:sh,UBODeferredLight:ch,JOINT_UNIFORM_CAPACITY:30,UBOSkinningTexture:lh,UBOSkinningAnimation:uh,INST_JOINT_ANIM_INFO:fh,UBOSkinning:_h,UBOMorph:mh,UNIFORM_JOINT_TEXTURE_BINDING:ph,UNIFORM_POSITION_MORPH_TEXTURE_BINDING:vh,UNIFORM_NORMAL_MORPH_TEXTURE_BINDING:xh,UNIFORM_TANGENT_MORPH_TEXTURE_BINDING:Th,UNIFORM_LIGHTMAP_TEXTURE_BINDING:Ah,UNIFORM_SPRITE_TEXTURE_BINDING:Ih,UNIFORM_REFLECTION_TEXTURE_BINDING:Mh,UNIFORM_REFLECTION_STORAGE_BINDING:zh,CAMERA_DEFAULT_MASK:Uh,CAMERA_EDITOR_MASK:Bh,MODEL_ALWAYS_MASK:Gh,supportsHalfFloatTexture:kh}));var Hh,jh,Vh,qh,Wh,Xh,Yh,Kh=1024;function Qh(e){return!!(s.sys.capabilities.imageBitmap&&e instanceof ImageBitmap)}!function(e){e[e.RGB565=Oo.R5G6B5]="RGB565",e[e.RGB5A1=Oo.RGB5A1]="RGB5A1",e[e.RGBA4444=Oo.RGBA4]="RGBA4444",e[e.RGB888=Oo.RGB8]="RGB888",e[e.RGB32F=Oo.RGB32F]="RGB32F",e[e.RGBA8888=Oo.RGBA8]="RGBA8888",e[e.RGBA32F=Oo.RGBA32F]="RGBA32F",e[e.A8=Oo.A8]="A8",e[e.I8=Oo.L8]="I8",e[e.AI8=Oo.LA8]="AI8",e[e.RGB_PVRTC_2BPPV1=Oo.PVRTC_RGB2]="RGB_PVRTC_2BPPV1",e[e.RGBA_PVRTC_2BPPV1=Oo.PVRTC_RGBA2]="RGBA_PVRTC_2BPPV1",e[e.RGB_A_PVRTC_2BPPV1=Kh++]="RGB_A_PVRTC_2BPPV1",e[e.RGB_PVRTC_4BPPV1=Oo.PVRTC_RGB4]="RGB_PVRTC_4BPPV1",e[e.RGBA_PVRTC_4BPPV1=Oo.PVRTC_RGBA4]="RGBA_PVRTC_4BPPV1",e[e.RGB_A_PVRTC_4BPPV1=Kh++]="RGB_A_PVRTC_4BPPV1",e[e.RGB_ETC1=Oo.ETC_RGB8]="RGB_ETC1",e[e.RGBA_ETC1=Kh++]="RGBA_ETC1",e[e.RGB_ETC2=Oo.ETC2_RGB8]="RGB_ETC2",e[e.RGBA_ETC2=Oo.ETC2_RGBA8]="RGBA_ETC2",e[e.RGBA_ASTC_4x4=Oo.ASTC_RGBA_4X4]="RGBA_ASTC_4x4",e[e.RGBA_ASTC_5x4=Oo.ASTC_RGBA_5X4]="RGBA_ASTC_5x4",e[e.RGBA_ASTC_5x5=Oo.ASTC_RGBA_5X5]="RGBA_ASTC_5x5",e[e.RGBA_ASTC_6x5=Oo.ASTC_RGBA_6X5]="RGBA_ASTC_6x5",e[e.RGBA_ASTC_6x6=Oo.ASTC_RGBA_6X6]="RGBA_ASTC_6x6",e[e.RGBA_ASTC_8x5=Oo.ASTC_RGBA_8X5]="RGBA_ASTC_8x5",e[e.RGBA_ASTC_8x6=Oo.ASTC_RGBA_8X6]="RGBA_ASTC_8x6",e[e.RGBA_ASTC_8x8=Oo.ASTC_RGBA_8X8]="RGBA_ASTC_8x8",e[e.RGBA_ASTC_10x5=Oo.ASTC_RGBA_10X5]="RGBA_ASTC_10x5",e[e.RGBA_ASTC_10x6=Oo.ASTC_RGBA_10X6]="RGBA_ASTC_10x6",e[e.RGBA_ASTC_10x8=Oo.ASTC_RGBA_10X8]="RGBA_ASTC_10x8",e[e.RGBA_ASTC_10x10=Oo.ASTC_RGBA_10X10]="RGBA_ASTC_10x10",e[e.RGBA_ASTC_12x10=Oo.ASTC_RGBA_12X10]="RGBA_ASTC_12x10",e[e.RGBA_ASTC_12x12=Oo.ASTC_RGBA_12X12]="RGBA_ASTC_12x12"}(Hh||(Hh=e("fJ",{}))),function(e){e[e.REPEAT=qo.WRAP]="REPEAT",e[e.CLAMP_TO_EDGE=qo.CLAMP]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=qo.MIRROR]="MIRRORED_REPEAT",e[e.CLAMP_TO_BORDER=qo.BORDER]="CLAMP_TO_BORDER"}(jh||(jh=e("gP",{}))),function(e){e[e.NONE=Vo.NONE]="NONE",e[e.LINEAR=Vo.LINEAR]="LINEAR",e[e.NEAREST=Vo.POINT]="NEAREST"}(Vh||(Vh=e("gm",{})));var Jh,Zh=e("dm",al("cc.ImageAsset")((Yh=Xh=function(e){function t(t){var n;return(n=e.call(this)||this)._nativeData=void 0,n._exportedExts=void 0,n._format=Hh.RGBA8888,n._width=0,n._height=0,n._nativeData={_data:null,width:0,height:0,format:0,_compressed:!1},void 0!==t&&n.reset(t),n}Z(t,e);var n=t.prototype;return n.reset=function(e){Qh(e)||e instanceof HTMLElement?this._nativeData=e:(this._nativeData=e,this._format=e.format)},n.destroy=function(){return this.data&&this.data instanceof HTMLImageElement?(this.data.src="",this._setRawAsset("")):Qh(this.data)&&this.data.close&&this.data.close(),e.prototype.destroy.call(this)},n._serialize=function(){},n._deserialize=function(e){var n="";"string"==typeof e?n=e:(this._width=e.w,this._height=e.h,n=e.fmt);for(var i,o=s.director.root?s.director.root.device:null,r=n.split("_"),a=Number.MAX_VALUE,c=this._format,l="",u=s.macro.SUPPORT_TEXTURE_FORMATS,f=ae(r);!(i=f()).done;){var _=i.value.split("@"),m=parseInt(_[0],void 0),p=t.extnames[m]||_[0],h=u.indexOf(p);if(-1!==h&&h<a){var d=_[1]?parseInt(_[1]):this._format;if(!(".astc"!==p||o&&o.hasFeature(Mo.FORMAT_ASTC)))continue;if(!(".pvr"!==p||o&&o.hasFeature(Mo.FORMAT_PVRTC)))continue;if(!(d!==Hh.RGB_ETC1&&d!==Hh.RGBA_ETC1||o&&o.hasFeature(Mo.FORMAT_ETC1)))continue;if(!(d!==Hh.RGB_ETC2&&d!==Hh.RGBA_ETC2||o&&o.hasFeature(Mo.FORMAT_ETC2)))continue;if(".webp"===p&&!s.sys.capabilities.webp)continue;a=h,l=p,c=d}}l?(this._setRawAsset(l),this._format=c):w(3121)},n.initDefault=function(n){if(e.prototype.initDefault.call(this,n),t._sharedPlaceHolderCanvas)this.reset(t._sharedPlaceHolderCanvas);else{var i=document.createElement("canvas"),o=i.getContext("2d"),r=i.width=i.height=2;o.fillStyle="#ff00ff",o.fillRect(0,0,r,r),this.reset(i),t._sharedPlaceHolderCanvas=i}},n.validate=function(){return!!this.data},Q(t,[{key:"_nativeAsset",get:function(){return this._nativeData},set:function(e){e instanceof HTMLElement||Qh(e)||(e.format=e.format||this._format),this.reset(e)}},{key:"data",get:function(){return this._nativeData&&((e=this._nativeData)instanceof HTMLImageElement||e instanceof HTMLCanvasElement||Qh(e))?this._nativeData:this._nativeData&&this._nativeData._data;var e}},{key:"width",get:function(){return this._nativeData.width||this._width}},{key:"height",get:function(){return this._nativeData.height||this._height}},{key:"format",get:function(){return this._format}},{key:"isCompressed",get:function(){return this._format>=Hh.RGB_ETC1&&this._format<=Hh.RGBA_ASTC_12x12||this._format>=Hh.RGB_A_PVRTC_2BPPV1&&this._format<=Hh.RGBA_ETC1}},{key:"url",get:function(){return this.nativeUrl}}]),t}(Ru),Xh.extnames=[".png",".jpg",".jpeg",".bmp",".webp",".pvr",".pkm",".astc"],Xh._sharedPlaceHolderCanvas=null,ce((Wh=Yh).prototype,"_nativeAsset",[Xl],Object.getOwnPropertyDescriptor(Wh.prototype,"_nativeAsset"),Wh.prototype),qh=Wh))||qh);s.ImageAsset=Zh,function(e){e[e.minFilter=0]="minFilter",e[e.magFilter=1]="magFilter",e[e.mipFilter=2]="mipFilter",e[e.addressU=3]="addressU",e[e.addressV=4]="addressV",e[e.addressW=5]="addressW",e[e.maxAnisotropy=6]="maxAnisotropy",e[e.cmpFunc=7]="cmpFunc",e[e.mipLODBias=8]="mipLODBias",e[e.total=9]="total"}(Jh||(Jh=e("bR",{})));var $h=[Vo.LINEAR,Vo.LINEAR,Vo.NONE,qo.WRAP,qo.WRAP,qo.WRAP,0,Wo.NEVER,0],ed=e("bS",id($h)),td=new wr,nd=new Fr;function id(e){for(var t=0,n=0,i=0;i<$h.length;i++)switch(t=e[i]||$h[i],i){case Jh.minFilter:n|=t;break;case Jh.magFilter:n|=t<<2;break;case Jh.mipFilter:n|=t<<4;break;case Jh.addressU:n|=t<<6;break;case Jh.addressV:n|=t<<8;break;case Jh.addressW:n|=t<<10;break;case Jh.maxAnisotropy:n|=t<<12;break;case Jh.cmpFunc:n|=t<<16;break;case Jh.mipLODBias:n|=t<<28}return n}var od,rd,ad,sd,cd,ld,ud,fd,_d,md,pd,hd,dd=function(){function e(){this._cache={}}return e.prototype.getSampler=function(e,t){return t||(t=ed),this._cache[t]||(nd.minFilter=3&t,nd.magFilter=t>>2&3,nd.mipFilter=t>>4&3,nd.addressU=t>>6&3,nd.addressV=t>>8&3,nd.addressW=t>>10&3,nd.maxAnisotropy=t>>12&15,nd.cmpFunc=t>>16&15,nd.mipLODBias=t>>28&15,nd.borderColor=td,this._cache[t]=e.createSampler(nd))},e}(),vd=e("bU",new dd);s.samplerLib=vd;var gd=new Ie("Tex"),yd=e("fV",al("cc.TextureBase")((hd=pd=function(e){function t(){var t;return se(t=e.call(this)||this,"_format",ad,oe(t)),se(t,"_minFilter",sd,oe(t)),se(t,"_magFilter",cd,oe(t)),se(t,"_mipFilter",ld,oe(t)),se(t,"_wrapS",ud,oe(t)),se(t,"_wrapT",fd,oe(t)),se(t,"_wrapR",_d,oe(t)),se(t,"_anisotropy",md,oe(t)),t._width=1,t._height=1,t._id=void 0,t._samplerInfo=[],t._samplerHash=0,t._gfxSampler=null,t._gfxDevice=null,t._textureHash=0,t._id=gd.getNewId(),t._gfxDevice=t._getGFXDevice(),t._textureHash=za(t._id,666),t}Z(t,e);var n=t.prototype;return n.getId=function(){return this._id},n.getPixelFormat=function(){return this._format},n.getAnisotropy=function(){return this._anisotropy},n.setWrapMode=function(e,t,n){this._wrapS=e,this._samplerInfo[Jh.addressU]=e,this._wrapT=t,this._samplerInfo[Jh.addressV]=t,void 0!==n&&(this._wrapR=n,this._samplerInfo[Jh.addressW]=n),this._samplerHash=id(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=vd.getSampler(this._gfxDevice,this._samplerHash))},n.setFilters=function(e,t){this._minFilter=e,this._samplerInfo[Jh.minFilter]=e,this._magFilter=t,this._samplerInfo[Jh.magFilter]=t,this._samplerHash=id(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=vd.getSampler(this._gfxDevice,this._samplerHash))},n.setMipFilter=function(e){this._mipFilter=e,this._samplerInfo[Jh.mipFilter]=e,this._samplerHash=id(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=vd.getSampler(this._gfxDevice,this._samplerHash))},n.setAnisotropy=function(e){this._anisotropy=e,this._samplerInfo[Jh.maxAnisotropy]=e,this._samplerHash=id(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=vd.getSampler(this._gfxDevice,this._samplerHash))},n.destroy=function(){var t,n=e.prototype.destroy.call(this);return n&&(null===(t=s.director.root)||void 0===t?void 0:t.batcher2D)&&s.director.root.batcher2D._releaseDescriptorSetCache(this._textureHash),n},n.getHash=function(){return this._textureHash},n.getGFXTexture=function(){return null},n.getSamplerHash=function(){return this._samplerHash},n.getGFXSampler=function(){return this._gfxSampler||(this._gfxDevice?this._gfxSampler=vd.getSampler(this._gfxDevice,this._samplerHash):R(9302)),this._gfxSampler},n._serialize=function(){return""},n._deserialize=function(e){var t=e.split(",");t.unshift(""),t.length>=5&&(this.setFilters(parseInt(t[1]),parseInt(t[2])),this.setWrapMode(parseInt(t[3]),parseInt(t[4]))),t.length>=7&&(this.setMipFilter(parseInt(t[5])),this.setAnisotropy(parseInt(t[6])))},n._getGFXDevice=function(){return s.director.root?s.director.root.device:null},n._getGFXFormat=function(){return this._getGFXPixelFormat(this._format)},n._setGFXFormat=function(e){this._format=void 0===e?Hh.RGBA8888:e},n._getGFXPixelFormat=function(e){return e===Hh.RGBA_ETC1?e=Hh.RGB_ETC1:e===Hh.RGB_A_PVRTC_4BPPV1?e=Hh.RGB_PVRTC_4BPPV1:e===Hh.RGB_A_PVRTC_2BPPV1&&(e=Hh.RGB_PVRTC_2BPPV1),e},Q(t,[{key:"isCompressed",get:function(){return this._format>=Hh.RGB_ETC1&&this._format<=Hh.RGBA_ASTC_12x12||this._format>=Hh.RGB_A_PVRTC_2BPPV1&&this._format<=Hh.RGBA_ETC1}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}}]),t}(Ru),pd.PixelFormat=Hh,pd.WrapMode=jh,pd.Filter=Vh,ad=ce((rd=hd).prototype,"_format",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Hh.RGBA8888}}),sd=ce(rd.prototype,"_minFilter",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vh.LINEAR}}),cd=ce(rd.prototype,"_magFilter",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vh.LINEAR}}),ld=ce(rd.prototype,"_mipFilter",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vh.NONE}}),ud=ce(rd.prototype,"_wrapS",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return jh.REPEAT}}),fd=ce(rd.prototype,"_wrapT",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return jh.REPEAT}}),_d=ce(rd.prototype,"_wrapR",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return jh.REPEAT}}),md=ce(rd.prototype,"_anisotropy",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),od=rd))||od);s.TextureBase=yd;var xd=e("fs",new WeakMap),Sd=e("ft",new WeakSet);function Cd(e,t){var n;n=$u.safeFindClass;var i,o=xf.pool.get();try{i=Mf(e,o,{classFinder:n,customEnv:t})}catch(e){throw y(e),xf.pool.put(o),e}i._uuid=t.__uuid__||"";for(var r=o.uuidList,a=o.uuidObjList,s=o.uuidPropList,c=o.uuidTypeList||[],l=[],u=0;u<r.length;u++){var f=r[u];l[u]={uuid:fu(f),owner:a[u],prop:s[u],type:vt._getClassById(c[u])}}return xd.set(i,l),i._native&&Sd.add(i),xf.pool.put(o),i}e("fL",new WeakSet);var Td,Ed=function(){function e(){this._depends=new Zl}var t=e.prototype;return t.init=function(){this._depends.clear()},t.getNativeDep=function(e){var t=this._depends.get(e);return t&&t.nativeDep?J({},t.nativeDep):null},t.getDeps=function(e){return this._depends.has(e)?this._depends.get(e).deps:[]},t.getDepsRecursively=function(e){var t=Object.create(null),n=[];return this._descend(e,t,n),n},t.remove=function(e){this._depends.remove(e)},t.parse=function(e,t){var n,i,o=null;if(Array.isArray(t)||t.__type__||t instanceof nf){if(this._depends.has(e))return this._depends.get(e);if(!Array.isArray(t)||"number"==typeof(i=(n=t[5])[n.length-1])&&i<0)try{var r=Cd(t,{__uuid__:e});(o=this._parseDepsFromAsset(r)).nativeDep&&(o.nativeDep.uuid=e),iu.add(e+"@import",r)}catch(t){nu.remove(e+"@import"),o={deps:[]}}else o={deps:this._parseDepsFromJson(t)}}else{if(this._depends.has(e)&&(o=this._depends.get(e)).parsedFromExistAsset)return o;o=this._parseDepsFromAsset(t)}return this._depends.add(e,o),o},t._parseDepsFromAsset=function(e){for(var t={deps:[],parsedFromExistAsset:!0},n=xd.get(e),i=0,o=n.length;i<o;i++)t.deps.push(n[i].uuid);return Sd.has(e)&&(t.nativeDep=e._nativeDep),t},t._parseDepsFromJson=function(e){var t=function(e){return n=(t=e)[hf],t[10].map((function(e){return n[e]}));var t,n}(e);return t.forEach((function(e,n){return t[n]=fu(e)})),t},t._descend=function(e,t,n){for(var i=this.getDeps(e),o=0;o<i.length;o++){var r=i[o];t[r]||(t[r]=!0,n.push(r),this._descend(r,t,n))}},e}(),bd=e("fo",new Ed),Ad=[new Ar];function Pd(e){return e&&0==(e&e-1)}var wd,Id,Rd,Nd,Md,Od,Dd=al("cc.SimpleTexture")(Td=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._gfxTexture=null,t._mipmapLevel=1,t._textureWidth=0,t._textureHeight=0,t}Z(t,e);var n=t.prototype;return n.getGFXTexture=function(){return this._gfxTexture},n.destroy=function(){return this._tryDestroyTexture(),e.prototype.destroy.call(this)},n.updateImage=function(){this.updateMipmaps(0)},n.updateMipmaps=function(){},n.uploadData=function(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=0),this._gfxTexture&&!(this._mipmapLevel<=t)){var i=this._getGFXDevice();if(i){var o=Ad[0];o.texExtent.width=this._textureWidth>>t,o.texExtent.height=this._textureHeight>>t,o.texSubres.mipLevel=t,o.texSubres.baseArrayLayer=n,ArrayBuffer.isView(e)?i.copyBuffersToTexture([e],this._gfxTexture,Ad):i.copyTexImagesToTexture([e],this._gfxTexture,Ad)}}},n._assignImage=function(e,t,n){var i=e.data;if(i&&(this.uploadData(i,t,n),this._checkTextureLoaded(),Et.CLEANUP_IMAGE_CACHE)){var o=bd.getDeps(this._uuid),r=o.indexOf(e._uuid);-1!==r&&(be(o,r),e.decRef())}},n._checkTextureLoaded=function(){this._textureReady()},n._textureReady=function(){this.loaded=!0,this.emit("load")},n._setMipmapLevel=function(e){this._mipmapLevel=e<1?1:e},n._getGfxTextureCreateInfo=function(){return null},n._tryReset=function(){if(this._tryDestroyTexture(),0!==this._mipmapLevel){var e=this._getGFXDevice();e&&this._createTexture(e)}},n._createTexture=function(e){if(0!==this._width&&0!==this._height){var t=Ho.NONE;this._mipFilter!==Vh.NONE&&function(e,t,n){return!(e.gfxAPI===Ro.WEBGL)||Pd(t)&&Pd(n)}(e,this._width,this._height)&&(this._mipmapLevel=function(e,t){for(var n=Math.max(e,t),i=0;n;)n>>=1,i++;return i}(this._width,this._height),t=Ho.GEN_MIPMAP);var n=this._getGfxTextureCreateInfo({usage:ko.SAMPLED|ko.TRANSFER_DST,format:this._getGFXFormat(),levelCount:this._mipmapLevel,flags:t|Ho.IMMUTABLE});if(n){var i=e.createTexture(n);this._textureWidth=n.width,this._textureHeight=n.height,this._gfxTexture=i}}},n._tryDestroyTexture=function(){this._gfxTexture&&(this._gfxTexture.destroy(),this._gfxTexture=null)},Q(t,[{key:"mipmapLevel",get:function(){return this._mipmapLevel}}]),t}(yd))||Td;s.SimpleTexture=Dd;var zd,Ld,Fd,Ud,Bd,Gd,kd,Hd=e("dn",(wd=al("cc.Texture2D"),Id=Fl([Zh]),wd((Od=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"_mipmaps",Md,oe(t)),t}Z(t,e);var n=t.prototype;return n.initialize=function(){this.mipmaps=this._mipmaps},n.onLoaded=function(){this.initialize()},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.create=function(e,t,n,i){void 0===n&&(n=Hh.RGBA8888),void 0===i&&(i=1),this.reset({width:e,height:t,format:n,mipmapLevel:i})},n.toString=function(){return 0!==this._mipmaps.length?this._mipmaps[0].url:""},n.updateMipmaps=function(e,t){if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),i=0;i<n;++i){var o=e+i;this._assignImage(this._mipmaps[o],o)}},n.getHtmlElementObj=function(){return this._mipmaps[0]&&this._mipmaps[0].data instanceof HTMLElement?this._mipmaps[0].data:null},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.description=function(){return"<cc.Texture2D | Name = "+(this._mipmaps[0]?this._mipmaps[0].url:"")+" | Dimension = "+this.width+" x "+this.height+">"},n.releaseTexture=function(){this.destroy()},n._serialize=function(){return null},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o)if(this._mipmaps[o]=new Zh,i.mipmaps[o]){var r=i.mipmaps[o];n.result.push(this._mipmaps,""+o,r,vt._getClassId(Zh))}},n._getGfxTextureCreateInfo=function(e){var t=new zr(Go.TEX2D);return t.width=this._width,t.height=this._height,Object.assign(t,e)},n.initDefault=function(t){e.prototype.initDefault.call(this,t);var n=new Zh;n.initDefault(),this.image=n},n.validate=function(){return this.mipmaps&&0!==this.mipmaps.length},Q(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0];this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){t._assignImage(e,n)}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(Dd),Md=ce((Nd=Od).prototype,"_mipmaps",[Id],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Rd=Nd))||Rd));s.Texture2D=Hd,function(e){e[e.right=0]="right",e[e.left=1]="left",e[e.top=2]="top",e[e.bottom=3]="bottom",e[e.front=4]="front",e[e.back=5]="back"}(kd||(kd={}));var jd=e("dp",al("cc.TextureCube")((Gd=Bd=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"isRGBE",Fd,oe(t)),se(t,"_mipmaps",Ud,oe(t)),t}Z(t,e),t.fromTexture2DArray=function(e,n){for(var i=[],o=e.length/6,r=0;r<o;r++){var a=6*r;i.push({front:e[a+kd.front].image,back:e[a+kd.back].image,left:e[a+kd.left].image,right:e[a+kd.right].image,top:e[a+kd.top].image,bottom:e[a+kd.bottom].image})}return(n=n||new t).mipmaps=i,n};var n=t.prototype;return n.onLoaded=function(){this.mipmaps=this._mipmaps},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.updateMipmaps=function(e,t){var n=this;if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var i=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),o=function(t){var i=e+t;Vd(n._mipmaps[i],(function(e,t){n._assignImage(e,i,t)}))},r=0;r<i;++r)o(r)},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.releaseTexture=function(){this.mipmaps=[]},n._serialize=function(){return null},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this.isRGBE=i.rgbe,this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o){this._mipmaps[o]={front:new Zh,back:new Zh,left:new Zh,right:new Zh,top:new Zh,bottom:new Zh};var r=i.mipmaps[o],a=vt._getClassId(Zh);n.result.push(this._mipmaps[o],"front",r.front,a),n.result.push(this._mipmaps[o],"back",r.back,a),n.result.push(this._mipmaps[o],"left",r.left,a),n.result.push(this._mipmaps[o],"right",r.right,a),n.result.push(this._mipmaps[o],"top",r.top,a),n.result.push(this._mipmaps[o],"bottom",r.bottom,a)}},n._getGfxTextureCreateInfo=function(e){var t=new zr(Go.CUBE);return t.width=this._width,t.height=this._height,t.layerCount=6,Object.assign(t,e),t},n.initDefault=function(t){e.prototype.initDefault.call(this,t);var n=new Zh;n.initDefault(),this.mipmaps=[{front:n,back:n,top:n,bottom:n,left:n,right:n}]},n.validate=function(){return 0!==this._mipmaps.length&&!this._mipmaps.find((function(e){return!(e.top&&e.bottom&&e.front&&e.back&&e.left&&e.right)}))},Q(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0].front;this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){Vd(e,(function(e,i){t._assignImage(e,n,i)}))}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(Dd),Bd.FaceIndex=kd,Fd=ce((Ld=Gd).prototype,"isRGBE",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Ud=ce(Ld.prototype,"_mipmaps",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zd=Ld))||zd);function Vd(e,t){t(e.front,kd.front),t(e.back,kd.back),t(e.left,kd.left),t(e.right,kd.right),t(e.top,kd.top),t(e.bottom,kd.bottom)}s.TextureCube=jd;var qd,Wd,Xd,Yd=e("dP",[{name:"billboard",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"billboard|vert:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"billboard|vert:vs_main|tinted-fs:add",hash:308883658,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:50,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"builtin",defines:[],binding:1,stageFlags:1,members:[{name:"cc_size_rotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:2,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:3}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2}]}]},{name:"clear-stencil",techniques:[{passes:[{blendState:{targets:[{blend:!0}]},rasterizerState:{cullMode:0},program:"clear-stencil|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"clear-stencil|sprite-vs:vert|sprite-fs:frag",hash:3507038093,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:0,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[],samplerTextures:[]},locals:{blocks:[],samplerTextures:[]}},defines:[],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0}]}]},{name:"graphics",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:1,blendDst:4,blendSrcAlpha:1,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"graphics|vs:vert|fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"graphics|vs:vert|fs:frag",hash:3113634185,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:46,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_dist",type:13,count:1,defines:[],stageFlags:1,format:11,location:2}]}]},{name:"particle-gpu",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",hash:3001336778,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:60,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"COLOR_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"SIZE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"FORCE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"VELOCITY_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"TEXTURE_ANIMATION_MODULE_ENABLE",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"SampleConstants",defines:[],binding:1,stageFlags:1,members:[{name:"u_sampleInfo",type:16,count:1}]},{name:"TickConstants",defines:[],binding:2,stageFlags:1,members:[{name:"u_worldRot",type:16,count:1},{name:"u_timeDelta",type:16,count:1}]},{name:"ColorConstant",defines:["COLOR_OVER_TIME_MODULE_ENABLE"],binding:3,stageFlags:1,members:[{name:"u_color_mode",type:5,count:1}]},{name:"RotationConstant",defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],binding:4,stageFlags:1,members:[{name:"u_rotation_mode",type:5,count:1}]},{name:"SizeConstant",defines:["SIZE_OVER_TIME_MODULE_ENABLE"],binding:5,stageFlags:1,members:[{name:"u_size_mode",type:5,count:1}]},{name:"ForceConstant",defines:["FORCE_OVER_TIME_MODULE_ENABLE"],binding:6,stageFlags:1,members:[{name:"u_force_mode",type:5,count:1},{name:"u_force_space",type:5,count:1}]},{name:"VelocityConstant",defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],binding:7,stageFlags:1,members:[{name:"u_velocity_mode",type:5,count:1},{name:"u_velocity_space",type:5,count:1}]},{name:"AnimationConstant",defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],binding:8,stageFlags:1,members:[{name:"u_anim_info",type:16,count:1}]},{name:"FragConstants",defines:[],binding:9,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"color_over_time_tex0",type:28,count:1,defines:["COLOR_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:10},{name:"rotation_over_time_tex0",type:28,count:1,defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:11},{name:"size_over_time_tex0",type:28,count:1,defines:["SIZE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:12},{name:"force_over_time_tex0",type:28,count:1,defines:["FORCE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:13},{name:"velocity_over_time_tex0",type:28,count:1,defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:14},{name:"texture_animation_tex0",type:28,count:1,defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],stageFlags:1,binding:15},{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:16}],attributes:[{name:"a_position_starttime",type:16,count:1,defines:[],stageFlags:1,format:44,location:0},{name:"a_size_uv",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_rotation_uv",type:16,count:1,defines:[],stageFlags:1,format:44,location:2},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_dir_life",type:16,count:1,defines:[],stageFlags:1,format:44,location:4},{name:"a_rndSeed",type:13,count:1,defines:[],stageFlags:1,format:11,location:5},{name:"a_texCoord",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:6},{name:"a_texCoord3",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:7},{name:"a_normal",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:8},{name:"a_color1",type:16,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:44,location:9}]}]},{name:"particle-trail",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-trail|particle-trail:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},frameTile_velLenScale:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-trail|particle-trail:vs_main|tinted-fs:add",hash:2637621064,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:49,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_DRAW_WIRE_FRAME",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_texCoord1",type:15,count:1,defines:[],stageFlags:1,format:32,location:2},{name:"a_texCoord2",type:15,count:1,defines:[],stageFlags:1,format:32,location:3},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:4}]}]},{name:"particle",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",hash:1675533382,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:49,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord1",type:15,count:1,defines:[],stageFlags:1,format:32,location:2},{name:"a_texCoord2",type:15,count:1,defines:[],stageFlags:1,format:32,location:3},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:4},{name:"a_color1",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:8},{name:"a_texCoord3",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:6},{name:"a_normal",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:7}]}]},{name:"spine",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"spine|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"spine|sprite-vs:vert|sprite-fs:frag",hash:1867464226,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:46,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:[]}]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"TWO_COLORED",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2},{name:"a_color2",type:16,count:1,defines:["TWO_COLORED"],stageFlags:1,format:44,location:3}]}]},{name:"sprite",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"sprite|sprite-vs:vert|sprite-fs:frag",hash:1559944983,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:46,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2}]}]},{name:"standard",techniques:[{name:"opaque",passes:[{program:"standard|standard-vs|standard-fs",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},SpecularIntensity:{value:[.5],type:13,handleInfo:["pbrParams",3,13]},normalStrenth:{value:[1],type:13,handleInfo:["miscParams",0,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,.5]},miscParams:{type:16,value:[1,0,0,0]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"deferred",propertyIndex:0,blendState:{targets:[{blend:!1},{blend:!1},{blend:!1},{blend:!1}]},program:"standard|standard-vs|standard-fs",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},SpecularIntensity:{value:[.5],type:13,handleInfo:["pbrParams",3,13]},normalStrenth:{value:[1],type:13,handleInfo:["miscParams",0,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,.5]},miscParams:{type:16,value:[1,0,0,0]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"standard|standard-vs|standard-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},SpecularIntensity:{value:[.5],type:13,handleInfo:["pbrParams",3,13]},normalStrenth:{value:[1],type:13,handleInfo:["miscParams",0,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,.5]},miscParams:{type:16,value:[1,0,0,0]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"shadow-caster",propertyIndex:0,rasterizerState:{cullMode:1},program:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}}]}],shaders:[{name:"standard|standard-vs|standard-fs",hash:3247695832,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:220,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:63},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]}]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_NORMAL_MAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"NORMAL_UV",type:"string",options:["v_uv","v_uv1"]},{name:"PBR_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_PBR_MAP",type:"boolean"},{name:"USE_METALLIC_ROUGHNESS_MAP",type:"boolean"},{name:"USE_OCCLUSION_MAP",type:"boolean"},{name:"USE_EMISSIVE_MAP",type:"boolean"},{name:"EMISSIVE_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"miscParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1},{name:"normalMap",type:28,count:1,defines:["USE_NORMAL_MAP"],stageFlags:16,binding:2},{name:"pbrMap",type:28,count:1,defines:["USE_PBR_MAP"],stageFlags:16,binding:3},{name:"metallicRoughnessMap",type:28,count:1,defines:["USE_METALLIC_ROUGHNESS_MAP"],stageFlags:16,binding:4},{name:"occlusionMap",type:28,count:1,defines:["USE_OCCLUSION_MAP"],stageFlags:16,binding:5},{name:"emissiveMap",type:28,count:1,defines:["USE_EMISSIVE_MAP"],stageFlags:16,binding:6}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_color",type:16,count:1,defines:["USE_VERTEX_COLOR"],stageFlags:1,format:44,location:13},{name:"a_texCoord1",type:14,count:1,defines:[],stageFlags:1,format:21,location:14}]},{name:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:1783225275,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:183,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:63},globals:{blocks:[{name:"CCShadow",defines:[]},{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]}]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"miscParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_texCoord1",type:14,count:1,defines:[],stageFlags:1,format:21,location:13}]}]},{name:"terrain",techniques:[{name:"opaque",passes:[{program:"terrain|terrain-vs|terrain-fs",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"deferred",propertyIndex:0,blendState:{targets:[{blend:!1},{blend:!1},{blend:!1},{blend:!1}]},program:"terrain|terrain-vs|terrain-fs",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"terrain|terrain-vs|terrain-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"shadow-add",propertyIndex:0,rasterizerState:{cullMode:2},program:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag"}]}],shaders:[{name:"terrain|terrain-vs|terrain-fs",hash:3600213289,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:67,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:58},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]}]},locals:{blocks:[{name:"CCLocal",defines:[]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD"]}],samplerTextures:[{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]}},defines:[{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_NORMALMAP",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"LAYERS",type:"number",range:[0,4]},{name:"USE_PBR",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],blocks:[{name:"TexCoords",defines:[],binding:0,stageFlags:1,members:[{name:"UVScale",type:16,count:1},{name:"lightMapUVParam",type:16,count:1}]},{name:"PbrParams",defines:[],binding:1,stageFlags:16,members:[{name:"metallic",type:16,count:1},{name:"roughness",type:16,count:1}]}],samplerTextures:[{name:"weightMap",type:28,count:1,defines:[],stageFlags:16,binding:2},{name:"detailMap0",type:28,count:1,defines:[],stageFlags:16,binding:3},{name:"detailMap1",type:28,count:1,defines:[],stageFlags:16,binding:4},{name:"detailMap2",type:28,count:1,defines:[],stageFlags:16,binding:5},{name:"detailMap3",type:28,count:1,defines:[],stageFlags:16,binding:6},{name:"normalMap0",type:28,count:1,defines:[],stageFlags:16,binding:7},{name:"normalMap1",type:28,count:1,defines:[],stageFlags:16,binding:8},{name:"normalMap2",type:28,count:1,defines:[],stageFlags:16,binding:9},{name:"normalMap3",type:28,count:1,defines:[],stageFlags:16,binding:10},{name:"lightMap",type:28,count:1,defines:[],stageFlags:16,binding:11}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2}]},{name:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:3278422876,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:65,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2}]}]},{name:"unlit",techniques:[{name:"opaque",passes:[{program:"unlit|unlit-vs:vert|unlit-fs:frag",properties:{mainTexture:{value:"grey",type:28},tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16},colorScale:{value:[1,1,1],type:15,handleInfo:["colorScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["colorScaleAndCutoff",3,13]},color:{type:16,handleInfo:["mainColor",0,16]},colorScaleAndCutoff:{type:16,value:[1,1,1,.5]}}}]}],shaders:[{name:"unlit|unlit-vs:vert|unlit-fs:frag",hash:1017648509,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:195,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r","g","b"]}],blocks:[{name:"TexCoords",defines:["USE_TEXTURE"],binding:0,stageFlags:1,members:[{name:"tilingOffset",type:16,count:1}]},{name:"Constant",defines:[],binding:1,stageFlags:16,members:[{name:"mainColor",type:16,count:1},{name:"colorScaleAndCutoff",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:["USE_TEXTURE"],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_color",type:16,count:1,defines:["USE_VERTEX_COLOR"],stageFlags:1,format:44,location:13}]}]},{name:"deferred-lighting",techniques:[{passes:[{phase:"deferred-lighting",program:"deferred-lighting|lighting-vs|lighting-fs",depthStencilState:{depthFunc:4,depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"deferred-lighting|lighting-vs|lighting-fs",hash:3555385669,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:37,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:56},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_gbuffer_albedoMap",defines:[]},{name:"cc_gbuffer_positionMap",defines:[]},{name:"cc_gbuffer_normalMap",defines:[]},{name:"cc_gbuffer_emissiveMap",defines:[]}]},locals:{blocks:[{name:"CCForwardLight",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"USE_LIGHTMAP",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3}]}]},{name:"planar-shadow",techniques:[{passes:[{phase:"planarShadow",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1,stencilTestFront:!0,stencilFuncFront:5,stencilPassOpFront:2,stencilRefBack:128,stencilRefFront:128,stencilReadMaskBack:128,stencilReadMaskFront:128,stencilWriteMaskBack:128,stencilWriteMaskFront:128}}]}],shaders:[{name:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",hash:1115292548,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:213,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:56},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12}]}]},{name:"post-process",techniques:[{passes:[{phase:"post-process",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendSrcAlpha:2,blendDstAlpha:4}]},program:"post-process|post-process-vs|post-process-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"post-process|post-process-vs|post-process-fs",hash:1780456825,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:145,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:37},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_lighting_resultMap",defines:[]}]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7}]}]},{name:"skybox",techniques:[{passes:[{rasterizerState:{cullMode:0},program:"skybox|sky-vs:vert|sky-fs:frag",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"skybox|sky-vs:vert|sky-fs:frag",hash:3169038185,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:37,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:37},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_environment",defines:[]}]},locals:{blocks:[],samplerTextures:[]}},defines:[{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_RGBE_CUBEMAP",type:"boolean"}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3}]}]},{name:"profiler",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"profiler|profiler-vs:vert|profiler-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"profiler|profiler-vs:vert|profiler-fs:frag",hash:3552712539,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:58,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:37},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[],samplerTextures:[]}},defines:[{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"offset",type:16,count:1}]},{name:"PerFrameInfo",defines:[],binding:1,stageFlags:1,members:[{name:"digits",type:16,count:20}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:1}]}]},{name:"splash-screen",techniques:[{name:"default",passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},resolution:{value:[640,960],type:14,handleInfo:["u_buffer0",0,14]},precent:{value:[.5],type:13,handleInfo:["u_buffer0",2,13]},scale:{value:[200,500],type:14,handleInfo:["u_buffer1",0,14]},translate:{value:[320,480],type:14,handleInfo:["u_buffer1",2,14]},u_buffer0:{type:16,value:[640,960,.5,0]},u_buffer1:{type:16,value:[200,500,320,480]}}}]}],shaders:[{name:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",hash:1349506124,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:6,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[],samplerTextures:[]},locals:{blocks:[],samplerTextures:[]}},defines:[],blocks:[{name:"Constant",defines:[],binding:0,stageFlags:1,members:[{name:"u_buffer0",type:16,count:1},{name:"u_buffer1",type:16,count:1},{name:"u_projection",type:25,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],attributes:[{name:"a_position",type:14,count:1,defines:[],stageFlags:1,format:21,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1}]}]}]),Kd=4026531840,Qd=264241152,Jd=3145728,Zd=1032192;!function(e){e[e.BUFFER=0]="BUFFER",e[e.TEXTURE=1]="TEXTURE"}(Xd||(Xd=e("bB",{})));var $d=e("bC",(function(e,t,n,i,o){return void 0===o&&(o=0),e<<28&Kd|i<<22&Qd|t<<20&Jd|n<<14&Zd|16383&o})),ev=e("bD",(function(e){return(e&Kd)>>>28})),tv=e("bE",(function(e){return(e&Qd)>>>22})),nv=(e("bF",(function(e){return(e&Jd)>>>20})),e("bG",(function(e){return(e&Zd)>>>14}))),iv=e("bH",(function(e){return 16383&e})),ov=e("bI",(function(e,t){return e&~Qd|t<<22&Qd})),rv=e("bJ",((qd={})[zo.UNKNOWN]=function(){return console.warn("illegal uniform handle")},qd[zo.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]},qd[zo.INT2]=function(e,t,n){return void 0===n&&(n=0),Ni.fromArray(t,e,n)},qd[zo.INT3]=function(e,t,n){return void 0===n&&(n=0),_i.fromArray(t,e,n)},qd[zo.INT4]=function(e,t,n){return void 0===n&&(n=0),zi.fromArray(t,e,n)},qd[zo.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]},qd[zo.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Ni.fromArray(t,e,n)},qd[zo.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),_i.fromArray(t,e,n)},qd[zo.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),zi.fromArray(t,e,n)},qd[zo.MAT3]=function(e,t,n){return void 0===n&&(n=0),di.fromArray(t,e,n)},qd[zo.MAT4]=function(e,t,n){return void 0===n&&(n=0),Pi.fromArray(t,e,n)},qd)),av=e("bK",((Wd={})[zo.UNKNOWN]=function(){return console.warn("illegal uniform handle")},Wd[zo.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},Wd[zo.INT2]=function(e,t,n){return void 0===n&&(n=0),Ni.toArray(e,t,n)},Wd[zo.INT3]=function(e,t,n){return void 0===n&&(n=0),_i.toArray(e,t,n)},Wd[zo.INT4]=function(e,t,n){return void 0===n&&(n=0),zi.toArray(e,t,n)},Wd[zo.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},Wd[zo.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Ni.toArray(e,t,n)},Wd[zo.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),_i.toArray(e,t,n)},Wd[zo.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),zi.toArray(e,t,n)},Wd[zo.MAT3]=function(e,t,n){return void 0===n&&(n=0),di.toArray(e,t,n)},Wd[zo.MAT4]=function(e,t,n){return void 0===n&&(n=0),Pi.toArray(e,t,n)},Wd)),sv=[Object.freeze([0]),Object.freeze([0,0]),Object.freeze([0,0,0,0]),Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])];function cv(e){switch(e){case zo.BOOL:case zo.INT:case zo.UINT:case zo.FLOAT:return sv[0];case zo.BOOL2:case zo.INT2:case zo.UINT2:case zo.FLOAT2:return sv[1];case zo.BOOL4:case zo.INT4:case zo.UINT4:case zo.FLOAT4:return sv[2];case zo.MAT4:return sv[3];case zo.SAMPLER2D:return"default-texture";case zo.SAMPLER_CUBE:return"default-cube-texture"}return sv[0]}var lv=new ra;function uv(e){return Math.ceil(Math.log2(Math.max(e,2)))}function fv(e,t){switch(e.type){case"boolean":return"number"==typeof t?t.toString():t?"1":"0";case"string":return void 0!==t?t:e.options[0];case"number":return void 0!==t?t.toString():e.range[0].toString();default:return console.warn("unknown define type '"+e.type+"'"),"-1"}}function _v(e,t,n,i,o){for(var r=e.builtins[i],a=[],s=function(e){var t=r.blocks[e],i=n.layouts[t.name],s=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&s&&s.descriptorType&ga))return console.warn("builtin UBO '"+t.name+"' not available!"),"continue";a.push(i),o&&!o.includes(s)&&o.push(s)},c=0;c<r.blocks.length;c++)s(c);Array.prototype.unshift.apply(t.gfxBlocks,a);for(var l=[],u=function(e){var t=r.samplerTextures[e],i=n.layouts[t.name],a=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&a&&a.descriptorType&ya))return console.warn("builtin samplerTexture '"+t.name+"' not available!"),"continue";l.push(i),o&&!o.includes(a)&&o.push(a)},f=0;f<r.samplerTextures.length;f++)u(f);Array.prototype.unshift.apply(t.gfxSamplerTextures,l),o&&o.sort((function(e,t){return e.binding-t.binding}))}function mv(e){return e.members.reduce((function(e,t){return e+Aa(t.type)*t.count}),0)}function pv(e,t){for(var n=0;n<e.length;n++){var i=e[n];if("!"===i[0]){if(t[i.slice(1)])return!1}else if(!t[i])return!1}return!0}var hv=function(){function e(){this._templates={},this._cache={},this._templateInfos={}}var t=e.prototype;return t.register=function(e){for(var t=0;t<e.shaders.length;t++)this.define(e.shaders[t]).effectName=e.name},t.define=function(e){var t=this._templates[e.name];if(t&&t.hash===e.hash)return t;for(var n=J({},e),i=0,o=function(e){var t=n.defines[e],o=1;if("number"===t.type){var r=t.range;o=uv(r[1]-r[0]+1),t._map=function(e){return e-r[0]}}else"string"===t.type?(o=uv(t.options.length),t._map=function(e){return Math.max(0,t.options.findIndex((function(t){return t===e})))}):"boolean"===t.type&&(t._map=function(e){return e?1:0});t._offset=i,i+=o},r=0;r<n.defines.length;r++)o(r);for(var a in i>31&&(n.uber=!0),n.constantMacros="",n.builtins.statistics)n.constantMacros+="#define "+a+" "+n.builtins.statistics[a]+"\n";if(this._templates[e.name]=n,!this._templateInfos[n.hash]){var s={};s.samplerStartBinding=n.blocks.length,s.gfxBlocks=[],s.gfxSamplerTextures=[],s.bindings=[],s.blockSizes=[];for(var c=0;c<n.blocks.length;c++){var l=n.blocks[c];s.blockSizes.push(mv(l)),s.bindings.push(new oa(l.binding,l.descriptorType||lr.UNIFORM_BUFFER,1,l.stageFlags)),s.gfxBlocks.push(new Br(Pp.MATERIAL,l.binding,l.name,l.members.map((function(e){return new Ur(e.name,e.type,e.count)})),1))}for(var u=0;u<n.samplerTextures.length;u++){var f=n.samplerTextures[u];s.bindings.push(new oa(f.binding,f.descriptorType||lr.SAMPLER_TEXTURE,f.count,f.stageFlags)),s.gfxSamplerTextures.push(new Gr(Pp.MATERIAL,f.binding,f.name,f.type,f.count))}s.gfxAttributes=[];for(var _=0;_<n.attributes.length;_++){var m=n.attributes[_];s.gfxAttributes.push(new Xr(m.name,m.format,m.isNormalized,0,m.isInstanced,m.location))}_v(n,s,Tp,"locals"),s.gfxStages=[],s.gfxStages.push(new Wr(Jo.VERTEX,"")),s.gfxStages.push(new Wr(Jo.FRAGMENT,"")),s.handleMap=function(e){for(var t={},n=0;n<e.blocks.length;n++)for(var i=e.blocks[n],o=i.members,r=0,a=0;a<o.length;a++){var s=o[a];t[s.name]=$d(Xd.BUFFER,Pp.MATERIAL,i.binding,s.type,r),r+=(Aa(s.type)>>2)*s.count}for(var c=0;c<e.samplerTextures.length;c++){var l=e.samplerTextures[c];t[l.name]=$d(Xd.TEXTURE,Pp.MATERIAL,l.binding,l.type)}return t}(n),s.setLayouts=[],this._templateInfos[n.hash]=s}return n},t.getTemplate=function(e){return this._templates[e]},t.getTemplateInfo=function(e){var t=this._templates[e].hash;return this._templateInfos[t]},t.getDescriptorSetLayout=function(e,t,n){void 0===n&&(n=!1);var i=this._templates[t],o=this._templateInfos[i.hash];return o.setLayouts.length||(lv.bindings=o.bindings,o.setLayouts[Pp.MATERIAL]=e.createDescriptorSetLayout(lv),lv.bindings=Tp.bindings,o.setLayouts[Pp.LOCAL]=e.createDescriptorSetLayout(lv)),o.setLayouts[n?Pp.LOCAL:Pp.MATERIAL]},t.hasProgram=function(e){return void 0!==this._templates[e]},t.getKey=function(e,t){var n=this._templates[e],i=n.defines;if(n.uber){for(var o="",r=0;r<i.length;r++){var a=i[r],s=t[a.name];if(s&&a._map){var c=a._map(s);o+=""+a._offset+c+"|"}}return""+o+n.hash}for(var l=0,u=0;u<i.length;u++){var f=i[u],_=t[f.name];_&&f._map&&(l|=f._map(_)<<f._offset)}return l.toString(16)+"|"+n.hash},t.destroyShaderByDefines=function(e){var t=this,n=Object.keys(e);if(n.length)for(var i=n.map((function(t){var n=e[t];return"boolean"==typeof n&&(n=n?"1":"0"),new RegExp(""+t+n)})),o=Object.keys(this._cache).filter((function(e){return i.every((function(n){return n.test(t._cache[e].name)}))})),r=0;r<o.length;r++){var a=o[r],s=this._cache[a];S("destroyed shader "+s.name),s.destroy(),delete this._cache[a]}},t.getGFXShader=function(e,t,n,i,o){Object.assign(n,i.macros),o||(o=this.getKey(t,n));var r=this._cache[o];if(r)return r;var a=this._templates[t],s=this._templateInfos[a.hash];s.pipelineLayout||(this.getDescriptorSetLayout(e,t),_v(a,s,Cp,"globals"),s.setLayouts[Pp.GLOBAL]=i.descriptorSetLayout,s.pipelineLayout=e.createPipelineLayout(new sa(s.setLayouts)));var c=function(e,t){for(var n=[],i=0;i<t.length;i++){var o=t[i],r=o.name,a=e[r],s=fv(o,a),c=!a||"0"===a;n.push({name:r,value:s,isDefault:c})}return n}(n,a.defines),l=i.constantMacros+a.constantMacros+c.reduce((function(e,t){return e+"#define "+t.name+" "+t.value+"\n"}),""),u=a.glsl3,f=dv(e);f?u=a[f]:console.error("Invalid GFX API!"),s.gfxStages[0].source=l+u.vert,s.gfxStages[1].source=l+u.frag;var _=function(e,t,n){for(var i=[],o=e.attributes,r=t.gfxAttributes,a=0;a<o.length;a++)pv(o[a].defines,n)&&i.push(r[a]);return i}(a,s,n),m=function(e,t){return e+t.reduce((function(e,t){return t.isDefault?e:e+"|"+t.name+t.value}),"")}(t,c),p=new Yr(m,s.gfxStages,_,s.gfxBlocks);return p.samplerTextures=s.gfxSamplerTextures,this._cache[o]=e.createShader(p)},e}();function dv(e){switch(e.gfxAPI){case Ro.GLES2:case Ro.WEBGL:return"glsl1";case Ro.GLES3:case Ro.WEBGL2:return"glsl3";default:return"glsl4"}}var vv=e("bQ",new hv);s.programLib=vv;var gv,yv,xv,Sv={glsl1:[[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nuniform vec4 cc_size_rotation;\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\nprecision highp float;\nvarying vec4 v_color;\nvarying float v_dist;\nvec4 frag () {\nvec4 o = v_color;\n#ifdef GL_OES_standard_derivatives\nfloat aa = fwidth(v_dist);\n#else\nfloat aa = 0.05;\n#endif\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nuniform vec4 u_sampleInfo;\nuniform vec4 u_worldRot;\nuniform vec4 u_timeDelta;\nattribute vec4 a_position_starttime;\nattribute vec4 a_size_uv;\nattribute vec4 a_rotation_uv;\nattribute vec4 a_color;\nattribute vec4 a_dir_life;\nattribute float a_rndSeed;\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom (float seed) {\nseed = mod(seed, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nuniform int u_color_mode;\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nuniform int u_rotation_mode;\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nuniform int u_size_mode;\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nuniform int u_force_mode;\nuniform int u_force_space;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nuniform int u_velocity_mode;\nuniform int u_velocity_space;\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nuniform vec4 u_anim_info;\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 toQuat(vec3 rotation) {\nvec3 rotTmp = rotation;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\nreturn rot;\n}\nmat3 QuatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 Mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 EulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\nvec4 rot = toQuat(startRotation);\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = EulerToQuat(euler);\nmat3 mLocal = QuatToMat3(quat);\nmat3 mStart = QuatToMat3(rot);\nrot = Mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = EulerToQuat(euler);\nmat3 mLocal = QuatToMat3(quat);\nmat3 mStart = QuatToMat3(rot);\nrot = Mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture2D(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture2D(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture2D(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nuniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\nattribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\nattribute vec4 a_color2;\nvarying vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\nvarying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture2D(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture2D(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\nuniform highp vec4 cc_lightingMapUVParam;\n#endif\nuniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nattribute vec4 a_color;\nvarying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(pos);\n#else\nv_fog_factor = 1.0;\n#endif\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nuniform vec4 pbrParams;\nuniform vec4 miscParams;\nuniform vec4 emissive;\nuniform vec4 emissiveScaleParam;\nvarying float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\nvarying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture2D(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * miscParams.x) * normalize(v_tangent) +\n(nmmp.y * miscParams.x) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\ns.position = v_position;\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture2D(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.w;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture2D(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = clamp(pbr.x, 0.0, 0.96);\ns.roughness = clamp(pbr.y, 0.04, 1.0);\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(s.position, s.roughness);\ngl_FragData[2] = vec4(s.normal, s.metallic);\ngl_FragData[3] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\n#endif\nuniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nuniform highp mat4 cc_matLightView;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture2D(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform highp mat4 cc_matWorld;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 luv;\nvarying mediump vec3 diffuse;\nuniform vec4 UVScale;\nuniform vec4 lightMapUVParam;\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(vec4(worldPos, 1.0));\n#else\nv_fog_factor = 1.0;\n#endif\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 diffuse;\nvarying mediump vec3 luv;\nuniform vec4 metallic;\nuniform vec4 roughness;\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture2D(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture2D(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\nbaseColor += texture2D(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture2D(detailMap0, uv0);\n#endif\ns.position = v_position;\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture2D(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\nbaseNormal += texture2D(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture2D(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(s.position, s.roughness);\ngl_FragData[2] = vec4(s.normal, s.metallic);\ngl_FragData[3] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matLightViewProj;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nvarying vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying float v_fog_factor;\n#if USE_VERTEX_COLOR\nattribute lowp vec4 a_color;\nvarying lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform vec4 tilingOffset;\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(matWorld * position);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(matWorld * position);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(matWorld * position);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(matWorld * position);\n#else\nv_fog_factor = 1.0;\n#endif\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_fogColor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying float v_fog_factor;\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nuniform vec4 mainColor;\nuniform vec4 colorScaleAndCutoff;\n#if USE_VERTEX_COLOR\nvarying lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no *= v_color;\n#endif\n#if USE_TEXTURE\no *= texture2D(mainTexture, v_uv);\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\no = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, o.rgb, v_fog_factor), o.a);\nreturn CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp mat4 cc_matLightViewProj;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying vec2 v_uv;\nuniform sampler2D cc_gbuffer_albedoMap;\nuniform sampler2D cc_gbuffer_positionMap;\nuniform sampler2D cc_gbuffer_normalMap;\nuniform sampler2D cc_gbuffer_emissiveMap;\nvoid main () {\nStandardSurface s;\nvec4 albedoMap = texture2D(cc_gbuffer_albedoMap,v_uv);\nvec4 positionMap = texture2D(cc_gbuffer_positionMap,v_uv);\nvec4 normalMap = texture2D(cc_gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture2D(cc_gbuffer_emissiveMap,v_uv);\ns.albedo = albedoMap;\ns.position = positionMap.xyz;\ns.roughness = positionMap.w;\ns.normal = normalMap.xyz;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\n#if CC_USE_FOG == 0\nfogFactor = LinearFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 1\nfogFactor = ExpFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 2\nfogFactor = ExpSquaredFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 3\nfogFactor = LayeredFog(vec4(s.position, 1));\n#else\nfogFactor = 1.0;\n#endif\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(s.position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\nCCStandardShadingAdditive(s, shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, fogFactor), color.a);\ngl_FragColor = CCFragOutput(color);\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nuniform highp mat4 cc_matLightPlaneProj;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nposition = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\nposition.z -= 0.0001;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform lowp vec4 cc_shadowColor;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvec4 frag () {\nreturn CCFragOutput(cc_shadowColor);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\nvarying vec2 v_uv;\nuniform sampler2D cc_lighting_resultMap;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\nvec4 texColor = texture2D(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\ngl_FragColor = fxaa(cc_lighting_resultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nvarying mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nmat4 matProj = cc_matProj;\nif (matProj[3].w > 0.0) {\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\n}\nvec4 pos = matProj * matViewRotOnly * viewDir;\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_ambientSky;\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nvarying mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(textureCube(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(textureCube(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec2 v_uv;\nuniform vec4 offset;\nuniform vec4 digits[20];\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nvec4 position = cc_matViewProj * vec4(a_position, 1.0);\nposition.xy += offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture2D(mainTexture, v_uv));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_uv;\nvarying float v_percent;\nuniform vec4 u_buffer0;\nuniform vec4 u_buffer1;\nuniform mat4 u_projection;\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nv_percent = u_buffer0.z;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvarying vec2 v_uv;\nvarying float v_percent;\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture2D(mainTexture, v_uv);\nfloat precent = clamp(v_percent, 0.0, 1.0);\ncolor.xyz *= precent;\nreturn color;\n}\nvoid main() { gl_FragColor = frag(); }"}]],glsl3:[[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nlayout(std140) uniform builtin {\nvec4 cc_size_rotation;\n};\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nin vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nin vec4 v_color;\nin float v_dist;\nvec4 frag () {\nvec4 o = v_color;\nfloat aa = fwidth(v_dist);\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(std140) uniform SampleConstants {\nvec4 u_sampleInfo;\n};\nlayout(std140) uniform TickConstants {\nvec4 u_worldRot;\nvec4 u_timeDelta;\n};\nin vec4 a_position_starttime;\nin vec4 a_size_uv;\nin vec4 a_rotation_uv;\nin vec4 a_color;\nin vec4 a_dir_life;\nin float a_rndSeed;\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord;\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom (float seed) {\nseed = mod(seed, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nlayout(std140) uniform ColorConstant {\nint u_color_mode;\n};\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nlayout(std140) uniform RotationConstant {\nint u_rotation_mode;\n};\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nlayout(std140) uniform SizeConstant {\nint u_size_mode;\n};\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nlayout(std140) uniform ForceConstant {\nint u_force_mode;\nint u_force_space;\n};\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nlayout(std140) uniform VelocityConstant {\nint u_velocity_mode;\nint u_velocity_space;\n};\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nlayout(std140) uniform AnimationConstant {\nvec4 u_anim_info;\n};\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 toQuat(vec3 rotation) {\nvec3 rotTmp = rotation;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\nreturn rot;\n}\nmat3 QuatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 Mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 EulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\nvec4 rot = toQuat(startRotation);\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = EulerToQuat(euler);\nmat3 mLocal = QuatToMat3(quat);\nmat3 mStart = QuatToMat3(rot);\nrot = Mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = EulerToQuat(euler);\nmat3 mLocal = QuatToMat3(quat);\nmat3 mStart = QuatToMat3(rot);\nrot = Mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nout vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\n#if CC_DRAW_WIRE_FRAME\nin vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\nin vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\nin vec4 a_color2;\nout vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 v_light;\n#if TWO_COLORED\nin vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\n#if SAMPLE_FROM_RT\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 color;\n#if USE_TEXTURE\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 miscParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nout float v_fog_factor;\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nin vec4 a_color;\nout vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\n#if USE_NORMAL_MAP\nout vec3 v_tangent;\nout vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nout vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(pos);\n#else\nv_fog_factor = 1.0;\n#endif\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 miscParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nin float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\n#if USE_VERTEX_COLOR\nin vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nin vec3 v_tangent;\nin vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * miscParams.x) * normalize(v_tangent) +\n(nmmp.y * miscParams.x) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\ns.position = v_position;\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.w;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = clamp(pbr.x, 0.0, 0.96);\ns.roughness = clamp(pbr.y, 0.04, 1.0);\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nlayout(location = 3) out vec4 fragColor3;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(s.position, s.roughness);\nfragColor2 = vec4(s.normal, s.metallic);\nfragColor3 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 miscParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 miscParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nout float v_fog_factor;\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout highp vec3 v_position;\nout mediump vec3 v_normal;\n#if USE_NORMALMAP\nout mediump vec3 v_tangent;\nout mediump vec3 v_binormal;\n#endif\nout mediump vec2 uvw;\nout mediump vec2 uv0;\nout mediump vec2 uv1;\nout mediump vec2 uv2;\nout mediump vec2 uv3;\nout mediump vec3 luv;\nout mediump vec3 diffuse;\nlayout(std140) uniform TexCoords {\nvec4 UVScale;\nvec4 lightMapUVParam;\n};\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(vec4(worldPos, 1.0));\n#else\nv_fog_factor = 1.0;\n#endif\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nin float v_fog_factor;\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin highp vec3 v_position;\nin mediump vec3 v_normal;\n#if USE_NORMALMAP\nin mediump vec3 v_tangent;\nin mediump vec3 v_binormal;\n#endif\nin mediump vec2 uvw;\nin mediump vec2 uv0;\nin mediump vec2 uv1;\nin mediump vec2 uv2;\nin mediump vec2 uv3;\nin mediump vec3 diffuse;\nin mediump vec3 luv;\nlayout(std140) uniform PbrParams {\nvec4 metallic;\nvec4 roughness;\n};\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\nbaseColor += texture(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture(detailMap0, uv0);\n#endif\ns.position = v_position;\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\nbaseNormal += texture(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nlayout(location = 3) out vec4 fragColor3;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(s.position, s.roughness);\nfragColor2 = vec4(s.normal, s.metallic);\nfragColor3 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nin vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nout float v_fog_factor;\n#if USE_VERTEX_COLOR\nin lowp vec4 a_color;\nout lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nout vec2 v_uv;\nlayout(std140) uniform TexCoords {\nvec4 tilingOffset;\n};\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(matWorld * position);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(matWorld * position);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(matWorld * position);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(matWorld * position);\n#else\nv_fog_factor = 1.0;\n#endif\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin float v_fog_factor;\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nin vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nlayout(std140) uniform Constant {\nvec4 mainColor;\nvec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\nin lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no *= v_color;\n#endif\n#if USE_TEXTURE\no *= texture(mainTexture, v_uv);\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\no = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, o.rgb, v_fog_factor), o.a);\nreturn CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nout vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nin vec2 v_uv;\nuniform sampler2D cc_gbuffer_albedoMap;\nuniform sampler2D cc_gbuffer_positionMap;\nuniform sampler2D cc_gbuffer_normalMap;\nuniform sampler2D cc_gbuffer_emissiveMap;\nlayout(location = 0) out vec4 fragColor;\nvoid main () {\nStandardSurface s;\nvec4 albedoMap = texture(cc_gbuffer_albedoMap,v_uv);\nvec4 positionMap = texture(cc_gbuffer_positionMap,v_uv);\nvec4 normalMap = texture(cc_gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture(cc_gbuffer_emissiveMap,v_uv);\ns.albedo = albedoMap;\ns.position = positionMap.xyz;\ns.roughness = positionMap.w;\ns.normal = normalMap.xyz;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\n#if CC_USE_FOG == 0\nfogFactor = LinearFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 1\nfogFactor = ExpFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 2\nfogFactor = ExpSquaredFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 3\nfogFactor = LayeredFog(vec4(s.position, 1));\n#else\nfogFactor = 1.0;\n#endif\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(s.position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\nCCStandardShadingAdditive(s, shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, fogFactor), color.a);\nfragColor = CCFragOutput(color);\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nposition = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\nposition.z -= 0.0001;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvec4 frag () {\nreturn CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nin vec2 v_uv;\nuniform sampler2D cc_lighting_resultMap;\nlayout(location = 0) out vec4 fragColor;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture(tex, v_rgbSE).xyz;\nvec4 texColor = texture(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\nfragColor = fxaa(cc_lighting_resultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nout mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nmat4 matProj = cc_matProj;\nif (matProj[3].w > 0.0) {\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\n}\nvec4 pos = matProj * matViewRotOnly * viewDir;\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nin mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec2 v_uv;\nlayout(std140) uniform Constants {\nvec4 offset;\n};\nlayout(std140) uniform PerFrameInfo {\nvec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nvec4 position = cc_matViewProj * vec4(a_position, 1.0);\nposition.xy += offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 v_uv;\nout float v_percent;\nlayout(std140) uniform Constant {\nvec4 u_buffer0;\nvec4 u_buffer1;\nmat4 u_projection;\n};\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nv_percent = u_buffer0.z;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nin vec2 v_uv;\nin float v_percent;\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture(mainTexture, v_uv);\nfloat precent = clamp(v_percent, 0.0, 1.0);\ncolor.xyz *= precent;\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]]},Cv=function(){function e(){this._device=null,this._resources={}}var t=e.prototype;return t.initBuiltinRes=function(e){var t=this;this._device=e;var n=this._resources,i=document.createElement("canvas"),o=i.getContext("2d"),r=new Zh(i),a=i.width=i.height=2;o.fillStyle="#000",o.fillRect(0,0,a,a);var c=new Hd;c._uuid="black-texture",c.image=r,n[c._uuid]=c,o.fillStyle="rgba(0,0,0,0)",o.fillRect(0,0,a,a);var l=new Hd;l._uuid="empty-texture",l.image=r,n[l._uuid]=l;var u=new jd;u._uuid="black-cube-texture",u.setMipFilter(jd.Filter.NEAREST),u.image={front:new Zh(i),back:new Zh(i),left:new Zh(i),right:new Zh(i),top:new Zh(i),bottom:new Zh(i)},n[u._uuid]=u,o.fillStyle="#777",o.fillRect(0,0,a,a);var f=new Hd;f._uuid="grey-texture",f.image=r,n[f._uuid]=f,o.fillStyle="#fff",o.fillRect(0,0,a,a);var _=new Hd;_._uuid="white-texture",_.image=r,n[_._uuid]=_;var m=new jd;m._uuid="white-cube-texture",m.setMipFilter(jd.Filter.NEAREST),m.image={front:new Zh(i),back:new Zh(i),left:new Zh(i),right:new Zh(i),top:new Zh(i),bottom:new Zh(i)},n[m._uuid]=m,o.fillStyle="#7f7fff",o.fillRect(0,0,a,a);var p=new Hd;p._uuid="normal-texture",p.image=r,n[p._uuid]=p,i.width=i.height=16,o.fillStyle="#ddd",o.fillRect(0,0,16,16),o.fillStyle="#555",o.fillRect(0,0,8,8),o.fillStyle="#555",o.fillRect(8,8,8,8);var h=new Hd;h._uuid="default-texture",h.image=r,n[h._uuid]=h;var d=new jd;if(d.setMipFilter(jd.Filter.NEAREST),d._uuid="default-cube-texture",d.image={front:new Zh(i),back:new Zh(i),left:new Zh(i),right:new Zh(i),top:new Zh(i),bottom:new Zh(i)},n[d._uuid]=d,s.SpriteFrame){var v=new s.SpriteFrame,g=r,y=new Hd;y.image=g,v.texture=y,v._uuid="default-spriteframe",n[v._uuid]=v}var x=dv(e);if(!x)return Promise.reject(Error("Failed to initialize builtin shaders: unknown device."));var S=Sv[x];return S?Promise.resolve().then((function(){Yd.forEach((function(e,t){var n=Object.assign(new s.EffectAsset,e);n.shaders.forEach((function(e,n){var i=S[t][n];i&&(e[x]=i)})),n.hideInEditor=!0,n.onLoaded()})),t._initMaterials()})):Promise.reject(Error("Current device is requiring builtin shaders of version "+x+" but shaders of that version are not assembled in this build."))},t.get=function(e){return this._resources[e]},t._initMaterials=function(){var e=this._resources,t=[],n=new s.Material;n._uuid="standard-material",n.initialize({effectName:"standard"}),e[n._uuid]=n,t.push(n);var i=new s.Material;i._uuid="missing-effect-material",i.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),i.setProperty("mainColor",s.color("#ffff00")),e[i._uuid]=i,t.push(i);var o=new s.Material;o._uuid="missing-material",o.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),o.setProperty("mainColor",s.color("#ff00ff")),e[o._uuid]=o,t.push(o);var r=new s.Material;r._uuid="default-clear-stencil",r.initialize({defines:{USE_TEXTURE:!1},effectName:"clear-stencil"}),e[r._uuid]=r,t.push(r);var a=new s.Material;a._uuid="ui-base-material",a.initialize({defines:{USE_TEXTURE:!1},effectName:"sprite"}),e[a._uuid]=a,t.push(a);var c=new s.Material;c._uuid="ui-sprite-material",c.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[c._uuid]=c,t.push(c);var l=new s.Material;l._uuid="ui-alpha-test-material",l.initialize({defines:{USE_TEXTURE:!0,USE_ALPHA_TEST:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[l._uuid]=l,t.push(l);var u=new s.Material;u._uuid="ui-sprite-gray-material",u.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!0},effectName:"sprite"}),e[u._uuid]=u,t.push(u);var f=new s.Material;f._uuid="ui-sprite-alpha-sep-material",f.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!1},effectName:"sprite"}),e[f._uuid]=f,t.push(f);var _=new s.Material;_._uuid="ui-sprite-gray-alpha-sep-material",_.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!0},effectName:"sprite"}),e[_._uuid]=_,t.push(_);var m=new s.Material;m._uuid="ui-graphics-material",m.initialize({effectName:"graphics"}),e[m._uuid]=m,t.push(m);var p=new s.Material;p._uuid="default-particle-material",p.initialize({effectName:"particle"}),e[p._uuid]=p,t.push(p);var h=new s.Material;h._uuid="default-particle-gpu-material",h.initialize({effectName:"particle-gpu"}),e[h._uuid]=h,t.push(h);var d=new s.Material;d._uuid="default-trail-material",d.initialize({effectName:"particle-trail"}),e[d._uuid]=d,t.push(d);var v=new s.Material;v._uuid="default-billboard-material",v.initialize({effectName:"billboard"}),e[v._uuid]=v,t.push(v);var g=new s.Material;g._uuid="default-spine-material",g.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"spine"}),e[g._uuid]=g,t.push(g),s.game.on(s.Game.EVENT_GAME_INITED,(function(){for(var e=0;e<t.length;++e)for(var n=t[e],i=0;i<n.passes.length;++i)n.passes[i].tryCompile()}))},e}(),Tv=e("dQ",s.builtinResMgr=new Cv),Ev=e("dF",(gv=new Map,yv=0,function(e){return"number"==typeof e?e:(gv.has(e)||(gv.set(e,1<<yv),yv++),gv.get(e))})),bv=new Rr(Lo.UNIFORM|Lo.TRANSFER_DST,Bo.HOST|Bo.DEVICE),Av=new Nr(null),Pv=new aa(null);!function(e){e[e.NONE=0]="NONE",e[e.INSTANCING=1]="INSTANCING",e[e.VB_MERGING=2]="VB_MERGING"}(xv||(xv=e("bN",{})));var wv,Iv,Rv,Nv,Mv,Ov,Dv,zv,Lv,Fv,Uv=e("bO",function(){function e(e){this._rootBuffer=null,this._buffers=[],this._descriptorSet=null,this._pipelineLayout=null,this._passIndex=0,this._propertyIndex=0,this._programName="",this._dynamics={},this._propertyHandleMap={},this._rootBlock=null,this._blocks=[],this._shaderInfo=null,this._defines={},this._properties={},this._shader=null,this._bs=new ja,this._dss=new ka,this._rs=new Ga,this._priority=dp.DEFAULT,this._stage=hp.DEFAULT,this._phase=Ev("default"),this._primitive=ir.TRIANGLE_LIST,this._batchingScheme=xv.NONE,this._dynamicStates=sr.NONE,this._hash=0,this._root=void 0,this._device=void 0,this._passHandle=Tc,this._rootBufferDirty=!1,this._root=e,this._device=e.device}e.fillPipelineInfo=function(e,t){void 0!==t.priority&&e._setPriority(t.priority),void 0!==t.primitive&&e._setPrimitive(t.primitive),void 0!==t.stage&&e._setStage(t.stage),void 0!==t.dynamicStates&&e._setDynamicState(t.dynamicStates),void 0!==t.phase&&e._setPhase(Ev(t.phase));var n=e._bs;if(t.blendState){var i=t.blendState,o=i.targets;o&&o.forEach((function(e,t){n.setTarget(t,e)})),void 0!==i.isA2C&&(n.isA2C=i.isA2C),void 0!==i.isIndepend&&(n.isIndepend=i.isIndepend),void 0!==i.blendColor&&(n.blendColor=i.blendColor)}e._rs.assign(t.rasterizerState),e._dss.assign(t.depthStencilState)},e.getPassHash=function(e){var t,n=vv.getKey(e.program,e.defines)+","+e._primitive+","+e._dynamicStates;return n+=function(e){for(var t,n=",bs,"+e.isA2C,i=ae(e.targets);!(t=i()).done;){var o=t.value;n+=",bt,"+o.blend+","+o.blendEq+","+o.blendAlphaEq+","+o.blendColorMask,n+=","+o.blendSrc+","+o.blendDst+","+o.blendSrcAlpha+","+o.blendDstAlpha}return n}(e._bs),n+=function(e){var t=",dss,"+e.depthTest+","+e.depthWrite+","+e.depthFunc;return t+=","+e.stencilTestFront+","+e.stencilFuncFront+","+e.stencilRefFront+","+e.stencilReadMaskFront,t+=","+e.stencilFailOpFront+","+e.stencilZFailOpFront+","+e.stencilPassOpFront+","+e.stencilWriteMaskFront,(t+=","+e.stencilTestBack+","+e.stencilFuncBack+","+e.stencilRefBack+","+e.stencilReadMaskBack)+","+e.stencilFailOpBack+","+e.stencilZFailOpBack+","+e.stencilPassOpBack+","+e.stencilWriteMaskBack}(e._dss),za(n+=",rs,"+(t=e._rs).cullMode+","+t.depthBias+","+t.isFrontFaceCCW,666)};var t=e.prototype;return t.initialize=function(e){this._doInit(e),this.resetUBOs(),this.resetTextures(),this.tryCompile()},t.getHandle=function(e,t,n){void 0===t&&(t=0),void 0===n&&(n=zo.UNKNOWN);var i=this._propertyHandleMap[e];return i?(n?i=ov(i,n):t&&(i=ov(i,tv(i)-t)),i+t):0},t.getBinding=function(t){var n=this.getHandle(t);return n?e.getBindingFromHandle(n):-1},t.setUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),r=e.getOffsetFromHandle(t),a=this._blocks[i];av[o](a,n,r),this._setRootBufferDirty(!0)},t.getUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),r=e.getOffsetFromHandle(t),a=this._blocks[i];return rv[o](a,n,r)},t.setUniformArray=function(t,n){for(var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),r=Aa(o)>>2,a=this._blocks[i],s=e.getOffsetFromHandle(t),c=0;c<n.length;c++,s+=r)null!==n[c]&&av[o](a,n[c],s);this._setRootBufferDirty(!0)},t.bindTexture=function(e,t,n){this._descriptorSet.bindTexture(e,t,n||0)},t.bindSampler=function(e,t,n){this._descriptorSet.bindSampler(e,t,n||0)},t.setDynamicState=function(e,t){var n=this._dynamics[e];n&&n.value===t||(n.value=t,n.dirty=!0)},t.overridePipelineStates=function(){console.warn("base pass cannot override states, please use pass instance instead.")},t._setRootBufferDirty=function(e){this._rootBufferDirty=e},t.update=function(){this._descriptorSet?(this._rootBuffer&&this._rootBufferDirty&&(this._rootBuffer.update(this._rootBlock),this._setRootBufferDirty(!1)),this._descriptorSet.update()):R(12006)},t._initNative=function(){},t._destroy=function(){},t.destroy=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++){var t=this._shaderInfo.blocks[e];this._buffers[t.binding].destroy()}this._buffers=[],this._rootBuffer&&(this._rootBuffer.destroy(),this._rootBuffer=null),this._descriptorSet.destroy(),this._rs.destroy(),this._dss.destroy(),this._bs.destroy(),this._destroy()},t.resetUniform=function(t){var n=this.getHandle(t);if(n){var i=e.getTypeFromHandle(n),o=e.getBindingFromHandle(n),r=e.getOffsetFromHandle(n),a=this._blocks[o],s=this._properties[t],c=s&&s.value||cv(i);av[i](a,c,r),this._setRootBufferDirty(!0)}},t.resetTexture=function(t,n){var i=this.getHandle(t);if(i){var o=e.getTypeFromHandle(i),r=e.getBindingFromHandle(i),a=this._properties[t],s=a&&a.value,c=s?s+"-texture":cv(o),l=Tv.get(c),u=l&&l.getGFXTexture(),f=a&&void 0!==a.samplerHash?a.samplerHash:l&&l.getSamplerHash(),_=vd.getSampler(this._device,f);this._descriptorSet.bindSampler(r,_,n),this._descriptorSet.bindTexture(r,u,n)}},t.resetUBOs=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++)for(var t=this._shaderInfo.blocks[e],n=this._blocks[t.binding],i=0,o=0;o<t.members.length;o++){for(var r=t.members[o],a=this._properties[r.name],s=a&&a.value||cv(r.type),c=(Aa(r.type)>>2)*r.count,l=0;l+s.length<=c;l+=s.length)n.set(s,i+l);i+=c}this._setRootBufferDirty(!0)},t.resetTextures=function(){for(var e=0;e<this._shaderInfo.samplerTextures.length;e++)for(var t=this._shaderInfo.samplerTextures[e],n=0;n<t.count;n++)this.resetTexture(t.name,n)},t.tryCompile=function(){var t=this._root.pipeline;if(!t)return!1;this._syncBatchingScheme();var n=vv.getGFXShader(this._device,this._programName,this._defines,t);return n?(this._shader=n,this._setPipelineLayout(vv.getTemplateInfo(this._programName).pipelineLayout),this._setHash(e.getPassHash(this)),!0):(console.warn("create shader "+this._programName+" failed"),!1)},t.getShaderVariant=function(e){if(void 0===e&&(e=null),!this._shader&&!this.tryCompile())return console.warn("pass resources incomplete"),null;if(!e)return this._shader;for(var t=this._root.pipeline,n=0;n<e.length;n++){var i=e[n];this._defines[i.name]=i.value}for(var o=vv.getGFXShader(this._device,this._programName,this._defines,t),r=0;r<e.length;r++){var a=e[r];delete this._defines[a.name]}return o},t.beginChangeStatesSilently=function(){},t.endChangeStatesSilently=function(){},t._setPriority=function(e){this._priority=e},t._setStage=function(e){this._stage=e},t._setPhase=function(e){this._phase=e},t._setPrimitive=function(e){this._primitive=e},t._setState=function(e,t,n,i){this._bs=e,this._dss=t,this._rs=n,this._descriptorSet=i},t._doInit=function(t,n){void 0===n&&(n=!1),this._initNative(),this._setPriority(dp.DEFAULT),this._setStage(hp.DEFAULT),this._setPhase(Ev("default")),this._setPrimitive(ir.TRIANGLE_LIST),this._passIndex=t.passIndex,this._propertyIndex=void 0!==t.propertyIndex?t.propertyIndex:t.passIndex,this._programName=t.program,this._defines=n?J({},t.defines):t.defines,this._shaderInfo=vv.getTemplate(t.program),this._properties=t.properties||this._properties;var i=this._device;e.fillPipelineInfo(this,t),t.stateOverrides&&e.fillPipelineInfo(this,t.stateOverrides),Pv.layout=vv.getDescriptorSetLayout(this._device,t.program),this._descriptorSet=this._device.createDescriptorSet(Pv),this._setState(this._bs,this._dss,this._rs,this._descriptorSet);for(var o=this._shaderInfo.blocks,r=vv.getTemplateInfo(t.program),a=r.blockSizes,s=r.handleMap,c=i.capabilities.uboOffsetAlignment,l=[],u=0,f=0,_=0;_<o.length;_++){var m=a[_];l.push(f),f+=Math.ceil(m/c)*c,u=m}var p=l[l.length-1]+u;p&&(bv.size=16*Math.ceil(p/16),this._rootBuffer=i.createBuffer(bv),this._rootBlock=new ArrayBuffer(p));for(var h=0,d=0;h<o.length;h++){var v=o[h].binding,g=a[h];Av.buffer=this._rootBuffer,Av.offset=l[d++],Av.range=16*Math.ceil(g/16);var y=this._buffers[v]=i.createBuffer(Av);this._blocks[v]=new Float32Array(this._rootBlock,Av.offset,g/Float32Array.BYTES_PER_ELEMENT),this._descriptorSet.bindBuffer(v,y)}var x=this._propertyHandleMap=s,S={};for(var C in this._properties){var T=this._properties[C];T.handleInfo&&(S[C]=this.getHandle.apply(this,T.handleInfo))}Object.assign(x,S)},t._syncBatchingScheme=function(){this._defines.USE_INSTANCING?this._device.hasFeature(Mo.INSTANCED_ARRAYS)?this._setBatchingScheme(xv.INSTANCING):(this._defines.USE_INSTANCING=!1,this._setBatchingScheme(xv.NONE)):this._defines.USE_BATCHING?this._setBatchingScheme(xv.VB_MERGING):this._setBatchingScheme(xv.NONE)},t._setBatchingScheme=function(e){this._batchingScheme=e},t._setDynamicState=function(e){this._dynamicStates=e},t._setHash=function(e){this._hash=e},t._setPipelineLayout=function(e){this._pipelineLayout=e},t._initPassFromTarget=function(e,t,n,i){this._initNative(),this._setPriority(e.priority),this._setStage(e.stage),this._setPhase(e.phase),this._setBatchingScheme(e.batchingScheme),this._setPrimitive(e.primitive),this._setDynamicState(e.dynamicStates),this._setState(n,t,e.rasterizerState,e.descriptorSet),this._passIndex=e.passIndex,this._propertyIndex=e.propertyIndex,this._programName=e.program,this._defines=e.defines,this._shaderInfo=e._shaderInfo,this._properties=e._properties,this._blocks=e._blocks,this._dynamics=e._dynamics,this._shader=e._shader,this._setPipelineLayout(vv.getTemplateInfo(this._programName).pipelineLayout),this._setHash(e._hash^i)},Q(e,[{key:"native",get:function(){return this._nativeObj}},{key:"root",get:function(){return this._root}},{key:"device",get:function(){return this._device}},{key:"shaderInfo",get:function(){return this._shaderInfo}},{key:"localSetLayout",get:function(){return vv.getDescriptorSetLayout(this._device,this._programName,!0)}},{key:"program",get:function(){return this._programName}},{key:"properties",get:function(){return this._properties}},{key:"defines",get:function(){return this._defines}},{key:"passIndex",get:function(){return this._passIndex}},{key:"propertyIndex",get:function(){return this._propertyIndex}},{key:"dynamics",get:function(){return this._dynamics}},{key:"blocks",get:function(){return this._blocks}},{key:"rootBufferDirty",get:function(){return this._rootBufferDirty}},{key:"priority",get:function(){return this._priority}},{key:"primitive",get:function(){return this._primitive}},{key:"stage",get:function(){return this._stage}},{key:"phase",get:function(){return this._phase}},{key:"rasterizerState",get:function(){return this._rs}},{key:"depthStencilState",get:function(){return this._dss}},{key:"blendState",get:function(){return this._bs}},{key:"dynamicStates",get:function(){return this._dynamicStates}},{key:"batchingScheme",get:function(){return this._batchingScheme}},{key:"descriptorSet",get:function(){return this._descriptorSet}},{key:"hash",get:function(){return this._hash}},{key:"pipelineLayout",get:function(){return this._pipelineLayout}}]),e}());Uv.PropertyType=Xd,Uv.getPropertyTypeFromHandle=ev,Uv.getTypeFromHandle=tv,Uv.getBindingFromHandle=nv,Uv.getOffsetFromHandle=iv,function(e){e[e.LOCAL=0]="LOCAL",e[e.WORLD=1]="WORLD"}(wv||(wv={})),function(e){e[e.NONE=0]="NONE",e[e.POSITION=1]="POSITION",e[e.ROTATION=2]="ROTATION",e[e.SCALE=4]="SCALE",e[e.RS=e.ROTATION|e.SCALE]="RS",e[e.TRS=e.POSITION|e.ROTATION|e.SCALE]="TRS",e[e.TRS_MASK=~e.TRS]="TRS_MASK"}(Iv||(Iv=e("eb",{}))),s.internal.TransformBit=Iv;var Bv,Gv,kv,Hv,jv,Vv,qv,Wv,Xv,Yv,Kv=e("dq",al("cc.EffectAsset")((Fv=Lv=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"techniques",Mv,oe(t)),se(t,"shaders",Ov,oe(t)),se(t,"combinations",Dv,oe(t)),se(t,"hideInEditor",zv,oe(t)),t}Z(t,e),t.register=function(e){t._effects[e.name]=e},t.remove=function(e){if("string"!=typeof e)t._effects[e.name]&&t._effects[e.name].equals(e)&&delete t._effects[e.name];else{if(t._effects[e])return void delete t._effects[e];for(var n in t._effects)if(t._effects[n]._uuid===e)return void delete t._effects[n]}},t.get=function(e){if(t._effects[e])return t._effects[e];for(var n in t._effects)if(t._effects[n]._uuid===e)return t._effects[n];return null},t.getAll=function(){return t._effects};var n=t.prototype;return n.onLoaded=function(){vv.register(this),t.register(this),s.game.once(s.Game.EVENT_ENGINE_INITED,this._precompile,this)},n._precompile=function(){for(var e=this,t=s.director.root,n=function(n){var i=e.shaders[n],o=e.combinations[n];if(!o)return"continue";Object.keys(o).reduce((function(e,t){return e.reduce((function(e,n){for(var i=o[t],r=0;r<i.length;++r){var a=J({},n);a[t]=i[r],e.push(a)}return e}),[])}),[{}]).forEach((function(e){return vv.getGFXShader(t.device,i.name,e,t.pipeline)}))},i=0;i<this.shaders.length;i++)n(i)},n.destroy=function(){return t.remove(this),e.prototype.destroy.call(this)},n.initDefault=function(n){e.prototype.initDefault.call(this,n);var i=t.get("unlit");this.name="unlit",this.shaders=i.shaders,this.combinations=i.combinations,this.techniques=i.techniques},n.validate=function(){return this.techniques.length>0&&this.shaders.length>0},t}(Ru),Lv._effects={},Mv=ce((Nv=Fv).prototype,"techniques",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ov=ce(Nv.prototype,"shaders",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Dv=ce(Nv.prototype,"combinations",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zv=ce(Nv.prototype,"hideInEditor",[_l,ml],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Rv=Nv))||Rv);s.EffectAsset=Kv;var Qv=e("dr",(Bv=al("cc.Material"),Gv=Fl(Kv),Bv((Yv=function(e){function t(){var t;return se(t=e.call(this)||this,"_effectAsset",jv,oe(t)),se(t,"_techIdx",Vv,oe(t)),se(t,"_defines",qv,oe(t)),se(t,"_states",Wv,oe(t)),se(t,"_props",Xv,oe(t)),t._passes=[],t._hash=0,t}Z(t,e),t.getHash=function(e){for(var t,n=0,i=ae(e.passes);!(t=i()).done;)n^=t.value.hash;return n};var n=t.prototype;return n.initialize=function(e){this._passes.length?w(12005):(this._defines||(this._defines=[]),this._states||(this._states=[]),this._props||(this._props=[]),void 0!==e.technique&&(this._techIdx=e.technique),e.effectAsset?this._effectAsset=e.effectAsset:e.effectName&&(this._effectAsset=Kv.get(e.effectName)),e.defines&&this._prepareInfo(e.defines,this._defines),e.states&&this._prepareInfo(e.states,this._states),this._update())},n.reset=function(e){this.initialize(e)},n.destroy=function(){return this._doDestroy(),e.prototype.destroy.call(this)},n.recompileShaders=function(){console.warn("Shaders in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.overridePipelineStates=function(){console.warn("Pipeline states in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.onLoaded=function(){this._update()},n.resetUniforms=function(e){void 0===e&&(e=!0),this._props.length=this._passes.length;for(var t=0;t<this._props.length;t++)this._props[t]={};if(e)for(var n,i=ae(this._passes);!(n=i()).done;){var o=n.value;o.resetUBOs(),o.resetTextures()}},n.setProperty=function(e,t,n){var i=!1;if(void 0===n)for(var o=this._passes,r=o.length,a=0;a<r;a++){var s=o[a];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}else{if(n>=this._passes.length)return void console.warn("illegal pass index: "+n+".");var c=this._passes[n];this._uploadProperty(c,e,t)&&(this._props[c.propertyIndex][e]=t,i=!0)}i||console.warn("illegal property name: "+e+".")},n.getProperty=function(e,t){if(void 0===t)for(var n=this._props,i=n.length,o=0;o<i;o++){var r=n[o];if(e in r)return r[e]}else{if(t>=this._props.length)return console.warn("illegal pass index: "+t+"."),null;var a=this._props[this._passes[t].propertyIndex];if(e in a)return a[e]}return null},n.copy=function(e){this._techIdx=e._techIdx,this._props.length=e._props.length;for(var t=0;t<e._props.length;t++)this._props[t]=J({},e._props[t]);this._defines.length=e._defines.length;for(var n=0;n<e._defines.length;n++)this._defines[n]=J({},e._defines[n]);this._states.length=e._states.length;for(var i=0;i<e._states.length;i++)this._states[i]=J({},e._states[i]);this._effectAsset=e._effectAsset,this._update()},n._prepareInfo=function(e,t){var n=e;if(!Array.isArray(n)){var i=this._effectAsset?this._effectAsset.techniques[this._techIdx].passes.length:1;n=Array(i).fill(n)}for(var o=0;o<n.length;++o)Object.assign(t[o]||(t[o]={}),n[o])},n._createPasses=function(){var e=this._effectAsset.techniques[this._techIdx||0];if(!e)return[];for(var t=e.passes.length,n=[],i=0;i<t;++i){var o=e.passes[i],r=o.passIndex=i,a=o.defines=this._defines[r]||(this._defines[r]={}),c=o.stateOverrides=this._states[r]||(this._states[r]={});if(void 0!==o.propertyIndex&&(Object.assign(a,this._defines[o.propertyIndex]),Object.assign(c,this._states[o.propertyIndex])),void 0!==o.embeddedMacros&&Object.assign(a,o.embeddedMacros),!o.switch||a[o.switch]){var l=new Uv(s.director.root);l.initialize(o),n.push(l)}}return n},n._update=function(e){var n=this;if(void 0===e&&(e=!0),this._effectAsset){this._passes=this._createPasses();var i=this._effectAsset.techniques[this._techIdx].passes.length;if(this._props.length=i,e)this._passes.forEach((function(e,t){var i=n._props[t];for(var o in i||(i=n._props[t]={}),void 0!==e.propertyIndex&&Object.assign(i,n._props[e.propertyIndex]),i)n._uploadProperty(e,o,i[o])}));else for(var o=0;o<this._props.length;o++)this._props[o]={}}this._hash=t.getHash(this)},n._uploadProperty=function(e,t,n){var i=e.getHandle(t);if(!i)return!1;var o=Uv.getPropertyTypeFromHandle(i);if(o===Xd.BUFFER)Array.isArray(n)?e.setUniformArray(i,n):null!==n?e.setUniform(i,n):e.resetUniform(t);else if(o===Xd.TEXTURE)if(Array.isArray(n))for(var r=0;r<n.length;r++)this._bindTexture(e,i,n[r],r);else n?this._bindTexture(e,i,n):e.resetTexture(t);return!0},n._bindTexture=function(e,t,n,i){var o=Uv.getBindingFromHandle(t);if(n instanceof Qa)e.bindTexture(o,n,i);else if(n instanceof yd){var r=n.getGFXTexture();if(!r||!r.width||!r.height)return;e.bindTexture(o,r,i),e.bindSampler(o,n.getGFXSampler(),i)}},n._doDestroy=function(){if(this._passes&&this._passes.length)for(var e,t=ae(this._passes);!(e=t()).done;)e.value.destroy();this._passes.length=0},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),this.setProperty("mainColor",new ui("#ff00ff"))},n.validate=function(){return!!this._effectAsset&&!this._effectAsset.isDefault&&this.passes.length>0},Q(t,[{key:"effectAsset",get:function(){return this._effectAsset}},{key:"effectName",get:function(){return this._effectAsset?this._effectAsset.name:""}},{key:"technique",get:function(){return this._techIdx}},{key:"passes",get:function(){return this._passes}},{key:"hash",get:function(){return this._hash}},{key:"parent",get:function(){return null}},{key:"owner",get:function(){return null}}]),t}(Ru),jv=ce((Hv=Yv).prototype,"_effectAsset",[Gv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Vv=ce(Hv.prototype,"_techIdx",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),qv=ce(Hv.prototype,"_defines",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Wv=ce(Hv.prototype,"_states",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Xv=ce(Hv.prototype,"_props",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),kv=Hv))||kv));s.Material=Qv;var Jv,Zv,$v,eg,tg,ng,ig,og,rg,ag,sg=e("bx",yt({Low_256x256:256,Medium_512x512:512,High_1024x1024:1024,Ultra_2048x2048:2048})),cg=e("by",yt({Planar:0,ShadowMap:1})),lg=e("bz",yt({HARD:0,SOFT:1,SOFT_2X:2})),ug=cg.ShadowMap+1,fg=e("bA",function(){function e(){this.fixedSphere=new mr(0,0,0,.01),this.maxReceived=4,this.shadowCameraFar=0,this.matShadowView=new Pi,this.matShadowProj=new Pi,this.matShadowViewProj=new Pi,this._normal=new _i(0,1,0),this._shadowColor=new ui(0,0,0,76),this._matLight=new Pi,this._material=null,this._instancingMaterial=null,this._size=new Ni(512,512),this._enabled=!1,this._distance=0,this._type=ug,this._near=.1,this._far=10,this._invisibleOcclusionRange=200,this._shadowDistance=100,this._orthoSize=1,this._pcf=0,this._shadowMapDirty=!1,this._bias=0,this._normalBias=0,this._fixedArea=!1,this._saturation=.75}var t=e.prototype;return t.getPlanarShader=function(e){return this._material||(this._material=new Qv,this._material.initialize({effectName:"planar-shadow"})),this._material.passes[0].getShaderVariant(e)},t.getPlanarInstanceShader=function(e){return this._instancingMaterial||(this._instancingMaterial=new Qv,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}})),this._instancingMaterial.passes[0].getShaderVariant(e)},t._setEnable=function(e){this._enabled=e},t._setType=function(e){this._type=this.enabled?e:ug},t.initialize=function(e){this.near=e.near,this.far=e.far,this.invisibleOcclusionRange=e.invisibleOcclusionRange,this.shadowDistance=e.shadowDistance,this.orthoSize=e.orthoSize,this.size=e.size,this.pcf=e.pcf,this.normal=e.normal,this.distance=e.distance,this.shadowColor=e.shadowColor,this.bias=e.bias,this.normalBias=e.normalBias,this.maxReceived=e.maxReceived,this.fixedArea=e.fixedArea,this._setEnable(e.enabled),this._setType(e.type),this.saturation=e.saturation},t.activate=function(){if(this.enabled)this.type===cg.ShadowMap?this._updatePipeline():this._updatePlanarInfo();else{var e=s.director.root;e.pipeline.macros.CC_RECEIVE_SHADOW=0,e.onGlobalPipelineStateChanged()}},t._updatePlanarInfo=function(){this._material||(this._material=new Qv,this._material.initialize({effectName:"planar-shadow"})),this._instancingMaterial||(this._instancingMaterial=new Qv,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}));var e=s.director.root;e.pipeline.macros.CC_RECEIVE_SHADOW=0,e.onGlobalPipelineStateChanged()},t._updatePipeline=function(){var e=s.director.root;e.pipeline.macros.CC_RECEIVE_SHADOW=1,e.onGlobalPipelineStateChanged()},t._destroy=function(){},t.destroy=function(){this._destroy(),this._material&&this._material.destroy(),this._instancingMaterial&&this._instancingMaterial.destroy(),this.fixedSphere.destroy()},Q(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._setEnable(e),this.activate()}},{key:"normal",get:function(){return this._normal},set:function(e){_i.copy(this._normal,e)}},{key:"distance",get:function(){return this._distance},set:function(e){this._distance=e}},{key:"shadowColor",get:function(){return this._shadowColor},set:function(e){this._shadowColor=e}},{key:"invisibleOcclusionRange",get:function(){return this._invisibleOcclusionRange},set:function(e){this._invisibleOcclusionRange=e}},{key:"shadowDistance",get:function(){return this._shadowDistance},set:function(e){this._shadowDistance=e}},{key:"type",get:function(){return this._type},set:function(e){this._setType(e),this.activate()}},{key:"near",get:function(){return this._near},set:function(e){this._near=e}},{key:"far",get:function(){return this._far},set:function(e){this._far=e}},{key:"orthoSize",get:function(){return this._orthoSize},set:function(e){this._orthoSize=e}},{key:"size",get:function(){return this._size},set:function(e){this._size.set(e)}},{key:"pcf",get:function(){return this._pcf},set:function(e){this._pcf=e}},{key:"shadowMapDirty",get:function(){return this._shadowMapDirty},set:function(e){this._shadowMapDirty=e}},{key:"bias",get:function(){return this._bias},set:function(e){this._bias=e}},{key:"normalBias",get:function(){return this._normalBias},set:function(e){this._normalBias=e}},{key:"saturation",get:function(){return this._saturation},set:function(e){this._saturation=e}},{key:"fixedArea",get:function(){return this._fixedArea},set:function(e){this._fixedArea=e}},{key:"matLight",get:function(){return this._matLight}},{key:"material",get:function(){return this._material}},{key:"instancingMaterial",get:function(){return this._instancingMaterial}},{key:"native",get:function(){return this._nativeObj}}]),e}());fg.MAX_FAR=2e3,fg.COEFFICIENT_OF_EXPANSION=2*Math.sqrt(3),s.Shadows=fg;var _g=new Qr;_g.endAccesses=[er.FRAGMENT_SHADER_READ_TEXTURE];var mg=new ea([_g],new Jr),pg={width:1,height:1,renderPassInfo:mg},hg=e("ds",(Jv=al("cc.RenderTexture"),Zv=Pl(),$v=wl(),eg=Pl(),tg=wl(),Jv((ag=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"_width",og,oe(t)),se(t,"_height",rg,oe(t)),t._window=null,t}Z(t,e);var n=t.prototype;return n.initialize=function(e){this._name=e.name||"",this._width=e.width,this._height=e.height,this._initWindow(e)},n.reset=function(e){this.initialize(e)},n.destroy=function(){if(this._window){var t=s.director.root;null==t||t.destroyWindow(this._window),this._window=null}return e.prototype.destroy.call(this)},n.resize=function(e,t){this._width=e,this._height=t,this._window&&this._window.resize(e,t),this.emit("resize",this._window)},n.getGFXTexture=function(){return this._window&&this._window.framebuffer.colorTextures[0]},n.getGFXSampler=function(){var e=s.director.root;return vd.getSampler(e.device,ed)},n.getSamplerHash=function(){return ed},n.onLoaded=function(){this._initWindow()},n._initWindow=function(e){var t=s.director.root;pg.title=this._name,pg.width=this._width,pg.height=this._height,pg.renderPassInfo=e&&e.passInfo?e.passInfo:mg,this._window?(this._window.destroy(),this._window.initialize(t.device,pg)):this._window=t.createWindow(pg)},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this._width=this._height=1,this._initWindow()},n.validate=function(){return this.width>=1&&this.width<=2048&&this.height>=1&&this.height<=2048},Q(t,[{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"window",get:function(){return this._window}},{key:"_serialize",get:function(){return null}},{key:"_deserialize",get:function(){return null}}]),t}(yd),og=ce((ig=ag).prototype,"_width",[_l,Zv,$v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),rg=ce(ig.prototype,"_height",[_l,eg,tg],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),ng=ig))||ng));s.RenderTexture=hg;var dg=yt({LINEAR:0,EXP:1,EXP_SQUARED:2,LAYERED:3}),vg=dg.LAYERED+1,gg=e("eB",function(){function e(){this._fogColor=new ui("#C8C8C8"),this._colorArray=new Float32Array([.2,.2,.2,1]),this._enabled=!1,this._type=0,this._fogDensity=.3,this._fogStart=.5,this._fogEnd=300,this._fogAtten=5,this._fogTop=1.5,this._fogRange=1.2}var t=e.prototype;return t._setType=function(e){this._type=this.enabled?e:vg},t._setEnable=function(e){this._enabled=e},t.initialize=function(e){this.fogColor=e.fogColor,this._setEnable(e.enabled),this._setType(e.type),this.fogDensity=e.fogDensity,this.fogStart=e.fogStart,this.fogEnd=e.fogEnd,this.fogAtten=e.fogAtten,this.fogTop=e.fogTop,this.fogRange=e.fogRange},t.activate=function(){this._updatePipeline()},t._updatePipeline=function(){var e=s.director.root,t=this.enabled?this.type:vg,n=e.pipeline;n.macros.CC_USE_FOG!==t&&(n.macros.CC_USE_FOG=t,e.onGlobalPipelineStateChanged())},t._destroy=function(){},t.destroy=function(){this._destroy()},Q(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._setEnable(e),e||(this._type=vg),e?this.activate():this._updatePipeline()}},{key:"fogColor",get:function(){return this._fogColor},set:function(e){this._fogColor.set(e),ui.toArray(this._colorArray,this._fogColor)}},{key:"type",get:function(){return this._type},set:function(e){this._setType(e),this.enabled&&this._updatePipeline()}},{key:"fogDensity",get:function(){return this._fogDensity},set:function(e){this._fogDensity=e}},{key:"fogStart",get:function(){return this._fogStart},set:function(e){this._fogStart=e}},{key:"fogEnd",get:function(){return this._fogEnd},set:function(e){this._fogEnd=e}},{key:"fogAtten",get:function(){return this._fogAtten},set:function(e){this._fogAtten=e}},{key:"fogTop",get:function(){return this._fogTop},set:function(e){this._fogTop=e}},{key:"fogRange",get:function(){return this._fogRange},set:function(e){this._fogRange=e}},{key:"colorArray",get:function(){return this._colorArray}},{key:"native",get:function(){return this._nativeObj}}]),e}());function yg(e,t){for(var n,i=ae(t);!(n=i()).done;){var o=n.value;Array.isArray(o)?yg(e,o):e.push(o)}}function xg(e){var t=[];return yg(t,e),t.join("")}s.Fog=gg;var Sg=xn.Flags.Destroyed,Cg=xn.Flags.PersistentMask,Tg=mn.IDENTIFIER_RE,Eg="var ",bg="o",Ag={"cc.ClickEvent":!1,"cc.PrefabInfo":!1},Pg=mn.escapeForJS,wg=function(){function e(e,t){this.varName=void 0,this.expression=void 0,this.varName=e,this.expression=t}return e.prototype.toString=function(){return Eg+this.varName+"="+this.expression+";"},e}();function Ig(e,t){return t instanceof wg?new wg(t.varName,e+t.expression):e+t}function Rg(e,t,n){Array.isArray(n)?(n[0]=Ig(t,n[0]),e.push(n)):e.push(Ig(t,n)+";")}var Ng=function(){function e(e){this._exps=void 0,this._targetExp=void 0,this._exps=[],this._targetExp=e}var t=e.prototype;return t.append=function(e,t){this._exps.push([e,t])},t.writeCode=function(e){var t;if(this._exps.length>1)e.push("t="+this._targetExp+";"),t="t";else{if(1!==this._exps.length)return;t=this._targetExp}for(var n=0;n<this._exps.length;n++){var i=this._exps[n];Rg(e,t+Mg(i[0])+"=",i[1])}},e}();function Mg(e){return Tg.test(e)?"."+e:"["+Pg(e)+"]"}Ng.pool=void 0,Ng.pool=new ht((function(e){e._exps.length=0,e._targetExp=null}),1),Ng.pool.get=function(e){var t=this._get()||new Ng;return t._targetExp=e,t};var Og=function(){function e(e,t){var n;this.parent=void 0,this.objsToClear_iN$t=void 0,this.codeArray=void 0,this.objs=void 0,this.funcs=void 0,this.funcModuleCache=void 0,this.globalVariables=void 0,this.globalVariableId=void 0,this.localVariableId=void 0,this.result=void 0,this.parent=t,this.objsToClear_iN$t=[],this.codeArray=[],this.objs=[],this.funcs=[],this.funcModuleCache=ke(),Ze(this.funcModuleCache,Ag),this.globalVariables=[],this.globalVariableId=0,this.localVariableId=0,this.codeArray.push("var o,t;","if(R){","o=R;","}else{","o=R=new "+this.getFuncModule(e.constructor,!0)+"();","}"),e._iN$t={globalVar:"R"},this.objsToClear_iN$t.push(e),this.enumerateObject(this.codeArray,e),this.globalVariables.length>0&&(n=Eg+this.globalVariables.join(",")+";");var i=xg(["return (function(R){",n||[],this.codeArray,"return o;","})"]);this.result=Function("O","F",i)(this.objs,this.funcs);for(var o=0,r=this.objsToClear_iN$t.length;o<r;++o)this.objsToClear_iN$t[o]._iN$t=null;this.objsToClear_iN$t.length=0}var t=e.prototype;return t.getFuncModule=function(e,t){var n=He(e);if(n){var i=this.funcModuleCache[n];if(i)return i;if(void 0===i){var o=-1!==n.indexOf(".");if(o)try{if(o=e===Function("return "+n)())return this.funcModuleCache[n]=n,n}catch(e){}}}var r=this.funcs.indexOf(e);r<0&&(r=this.funcs.length,this.funcs.push(e));var a="F["+r+"]";return t&&(a="("+a+")"),this.funcModuleCache[n]=a,a},t.getObjRef=function(e){var t=this.objs.indexOf(e);return t<0&&(t=this.objs.length,this.objs.push(e)),"O["+t+"]"},t.setValueType=function(e,t,n,i){var o=Ng.pool.get(i),r=t.constructor.__props__;r||(r=Object.keys(t));for(var a=0;a<r.length;a++){var s=r[a],c=n[s];if(t[s]!==c){var l=this.enumerateField(n,s,c);o.append(s,l)}}o.writeCode(e),Ng.pool.put(o)},t.enumerateCCClass=function(e,t,n){for(var i=n.__values__,o=jt(n),r=0;r<i.length;r++){var a=i[r],c=t[a],l=o[a+"$_$default"];if(!Dg(l,c))if("object"==typeof c&&c instanceof s.ValueType&&(l=mn.getDefault(l))&&l.constructor===c.constructor){var u=bg+Mg(a);this.setValueType(e,l,c,u)}else this.setObjProp(e,t,a,c)}},t.instantiateArray=function(e){if(0===e.length)return"[]";var t="a"+ ++this.localVariableId,n=[new wg(t,"new Array("+e.length+")")];e._iN$t={globalVar:"",source:n},this.objsToClear_iN$t.push(e);for(var i=0;i<e.length;++i)Rg(n,t+"["+i+"]=",this.enumerateField(e,i,e[i]));return n},t.instantiateTypedArray=function(e){var t=e.constructor.name;if(0===e.length)return"new "+t;var n="a"+ ++this.localVariableId,i=[new wg(n,"new "+t+"("+e.length+")")];e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e);for(var o=0;o<e.length;++o)0!==e[o]&&Rg(i,n+"["+o+"]=",e[o]);return i},t.enumerateField=function(e,t,n){if("object"==typeof n&&n){var i=n._iN$t;if(i){var o=i.globalVar;if(!o){o=i.globalVar="v"+ ++this.globalVariableId,this.globalVariables.push(o);var r=i.source[0];i.source[0]=Ig(o+"=",r)}return o}return ArrayBuffer.isView(n)?this.instantiateTypedArray(n):Array.isArray(n)?this.instantiateArray(n):this.instantiateObj(n)}return"function"==typeof n?this.getFuncModule(n):"string"==typeof n?Pg(n):("_objFlags"===t&&e instanceof xn&&(n&=Cg),n)},t.setObjProp=function(e,t,n,i){Rg(e,bg+Mg(n)+"=",this.enumerateField(t,n,i))},t.enumerateObject=function(e,t){var n=t.constructor;if(s.Class._isCCClass(n))this.enumerateCCClass(e,t,n);else for(var i in t)if(t.hasOwnProperty(i)&&(95!==i.charCodeAt(0)||95!==i.charCodeAt(1)||"__type__"===i)){var o=t[i];"object"==typeof o&&o&&o===t._iN$t||this.setObjProp(e,t,i,o)}},t.instantiateObj=function(e){if(e instanceof s.ValueType)return mn.getNewValueTypeCode(e);if(e instanceof s.Asset)return this.getObjRef(e);if(e._objFlags&Sg)return null;var t,n=e.constructor;if(s.Class._isCCClass(n)){if(this.parent)if(this.parent instanceof s.Component){if(e instanceof s._BaseNode||e instanceof s.Component)return this.getObjRef(e)}else if(this.parent instanceof s._BaseNode)if(e instanceof s._BaseNode){if(!e.isChildOf(this.parent))return this.getObjRef(e)}else if(e instanceof s.Component&&!e.node.isChildOf(this.parent))return this.getObjRef(e);t=new wg(bg,"new "+this.getFuncModule(n,!0)+"()")}else if(n===Object)t=new wg(bg,"{}");else{if(n)return this.getObjRef(e);t=new wg(bg,"Object.create(null)")}var i=[t];return e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e),this.enumerateObject(i,e),["(function(){",i,"return o;})();"]},e}();function Dg(e,t){if("function"==typeof e)try{e=e()}catch(e){return!1}if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t&&e.constructor===t.constructor)if(e instanceof s.ValueType){if(e.equals(t))return!0}else{if(Array.isArray(e))return 0===e.length&&0===t.length;if(e.constructor===Object)return ze(e)&&ze(t)}return!1}var zg,Lg=function(){function e(e){this._uiComp=null,this.opacity=1,this.localOpacity=1,this._uiTransformComp=null,this._node=void 0,this.uiTransformDirty=!0,this._node=e}return Q(e,[{key:"uiTransformComp",get:function(){return this._uiTransformComp||(this._uiTransformComp=this._node.getComponent("cc.UITransform")),this._uiTransformComp},set:function(e){this._uiTransformComp=e}},{key:"uiComp",get:function(){return this._uiComp},set:function(e){this._uiComp&&e?w(12002):this._uiComp=e}}]),e}();!function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed"}(zg||(zg=e("dD",{}))),Ct(zg),s.SystemEventType=zg;var Fg=e("eX",function(){function e(e,t,n){this._cameraPriority=0,this.owner=null,this.mask=null,this._previousIn=!1,this._target=null,this._onEvent=void 0,this._type=void 0,this._listenerID=void 0,this._registered=!1,this._fixedPriority=0,this._node=null,this._paused=!0,this._isEnabled=!0,this._onEvent=n,this._type=e||0,this._listenerID=t||""}e.create=function(e){q(e&&e.event,1900);var t=e.event;delete e.event;var n=null;if(t===s.EventListener.TOUCH_ONE_BY_ONE?n=new Gg:t===s.EventListener.TOUCH_ALL_AT_ONCE?n=new kg:t===s.EventListener.MOUSE?n=new Bg:t===s.EventListener.KEYBOARD?n=new jg:t===s.EventListener.ACCELERATION&&(n=new Hg(e.callback),delete e.callback),n)for(var i=0,o=Object.keys(e);i<o.length;i++){var r=o[i];n[r]=e[r]}return n};var t=e.prototype;return t._setPaused=function(e){this._paused=e},t._isPaused=function(){return this._paused},t._setRegistered=function(e){this._registered=e},t._isRegistered=function(){return this._registered},t._getType=function(){return this._type},t._getListenerID=function(){return this._listenerID},t._setFixedPriority=function(e){this._fixedPriority=e},t._getFixedPriority=function(){return this._fixedPriority},t._setSceneGraphPriority=function(e){this._target=e,this._node=e},t._getSceneGraphPriority=function(){return this._node},t.checkAvailable=function(){return null!==this._onEvent},t.clone=function(){return null},t.setEnabled=function(e){this._isEnabled=e},t.isEnabled=function(){return this._isEnabled},Q(e,[{key:"onEvent",get:function(){return this._onEvent}}]),e}());Fg.UNKNOWN=0,Fg.TOUCH_ONE_BY_ONE=1,Fg.TOUCH_ALL_AT_ONCE=2,Fg.KEYBOARD=3,Fg.MOUSE=4,Fg.ACCELERATION=6,Fg.CUSTOM=8,Fg.ListenerID={MOUSE:"__cc_mouse",TOUCH_ONE_BY_ONE:"__cc_touch_one_by_one",TOUCH_ALL_AT_ONCE:"__cc_touch_all_at_once",KEYBOARD:"__cc_keyboard",ACCELERATION:"__cc_acceleration"};var Ug=Fg.ListenerID,Bg=function(e){function t(){var t;return(t=e.call(this,Fg.MOUSE,Ug.MOUSE,null)||this).onMouseDown=null,t.onMouseUp=null,t.onMouseMove=null,t.onMouseScroll=null,t._onEvent=function(e){return t._callback(e)},t}Z(t,e);var n=t.prototype;return n._callback=function(e){switch(e.type){case zg.MOUSE_DOWN:this.onMouseDown&&this.onMouseDown(e);break;case zg.MOUSE_UP:this.onMouseUp&&this.onMouseUp(e);break;case zg.MOUSE_MOVE:this.onMouseMove&&this.onMouseMove(e);break;case zg.MOUSE_WHEEL:this.onMouseScroll&&this.onMouseScroll(e)}},n.clone=function(){var e=new t;return e.onMouseDown=this.onMouseDown,e.onMouseUp=this.onMouseUp,e.onMouseMove=this.onMouseMove,e.onMouseScroll=this.onMouseScroll,e},n.checkAvailable=function(){return!0},t}(Fg),Gg=function(e){function t(){var t;return(t=e.call(this,Fg.TOUCH_ONE_BY_ONE,Ug.TOUCH_ONE_BY_ONE,null)||this).swallowTouches=!1,t.onTouchBegan=null,t.onTouchMoved=null,t.onTouchEnded=null,t.onTouchCancelled=null,t._claimedTouches=[],t}Z(t,e);var n=t.prototype;return n.setSwallowTouches=function(e){this.swallowTouches=e},n.isSwallowTouches=function(){return this.swallowTouches},n.clone=function(){var e=new t;return e.onTouchBegan=this.onTouchBegan,e.onTouchMoved=this.onTouchMoved,e.onTouchEnded=this.onTouchEnded,e.onTouchCancelled=this.onTouchCancelled,e.swallowTouches=this.swallowTouches,e},n.checkAvailable=function(){return!!this.onTouchBegan||(A(1801),!1)},t}(Fg),kg=function(e){function t(){var t;return(t=e.call(this,Fg.TOUCH_ALL_AT_ONCE,Ug.TOUCH_ALL_AT_ONCE,null)||this).onTouchesBegan=null,t.onTouchesMoved=null,t.onTouchesEnded=null,t.onTouchesCancelled=null,t}Z(t,e);var n=t.prototype;return n.clone=function(){var e=new t;return e.onTouchesBegan=this.onTouchesBegan,e.onTouchesMoved=this.onTouchesMoved,e.onTouchesEnded=this.onTouchesEnded,e.onTouchesCancelled=this.onTouchesCancelled,e},n.checkAvailable=function(){return null!==this.onTouchesBegan||null!==this.onTouchesMoved||null!==this.onTouchesEnded||null!==this.onTouchesCancelled||(A(1802),!1)},t}(Fg),Hg=function(e){function t(t){var n;return(n=e.call(this,Fg.ACCELERATION,Ug.ACCELERATION,null)||this)._onAccelerationEvent=null,n._onEvent=function(e){return n._callback(e)},n._onAccelerationEvent=t,n}Z(t,e);var n=t.prototype;return n._callback=function(e){this._onAccelerationEvent&&this._onAccelerationEvent(e.acc,e)},n.checkAvailable=function(){return q(this._onAccelerationEvent,1803),!0},n.clone=function(){return new t(this._onAccelerationEvent)},t}(Fg),jg=function(e){function t(){var t;return(t=e.call(this,Fg.KEYBOARD,Ug.KEYBOARD,null)||this).onKeyDown=void 0,t.onKeyPressed=void 0,t.onKeyReleased=void 0,t._onEvent=function(e){return t._callback(e)},t}Z(t,e);var n=t.prototype;return n._callback=function(e){var t,n;switch(e.type){case zg.KEY_DOWN:null===(t=this.onKeyPressed)||void 0===t||t.call(this,e.keyCode,e);break;case zg.KEY_UP:null===(n=this.onKeyReleased)||void 0===n||n.call(this,e.keyCode,e)}},n.clone=function(){var e=new t;return e.onKeyDown=this.onKeyDown,e.onKeyPressed=this.onKeyPressed,e.onKeyReleased=this.onKeyReleased,e},n.checkAvailable=function(){return null!==this.onKeyDown||null!==this.onKeyPressed||null!==this.onKeyReleased||(A(1800),!1)},t}(Fg);s.EventListener=Fg;var Vg,qg,Wg,Xg,Yg,Kg,Qg,Jg,Zg,$g,ey=Fg.ListenerID,ty=[zg.TOUCH_START,zg.TOUCH_MOVE,zg.TOUCH_END,zg.TOUCH_CANCEL],ny=[zg.MOUSE_DOWN,zg.MOUSE_MOVE,zg.MOUSE_UP,zg.MOUSE_WHEEL],iy=[zg.KEY_DOWN,zg.KEY_UP],oy=function(){function e(){this.gt0Index=0,this._fixedListeners=[],this._sceneGraphListeners=[]}var t=e.prototype;return t.size=function(){return this._fixedListeners.length+this._sceneGraphListeners.length},t.empty=function(){return 0===this._fixedListeners.length&&0===this._sceneGraphListeners.length},t.push=function(e){0===e._getFixedPriority()?this._sceneGraphListeners.push(e):this._fixedListeners.push(e)},t.clearSceneGraphListeners=function(){this._sceneGraphListeners.length=0},t.clearFixedListeners=function(){this._fixedListeners.length=0},t.clear=function(){this._sceneGraphListeners.length=0,this._fixedListeners.length=0},t.getFixedPriorityListeners=function(){return this._fixedListeners},t.getSceneGraphPriorityListeners=function(){return this._sceneGraphListeners},e}(),ry=function(){function e(){this._listenersMap={},this._priorityDirtyFlagMap={},this._nodeListenersMap={},this._toAddedListeners=[],this._toRemovedListeners=[],this._dirtyListeners={},this._inDispatch=0,this._isEnabled=!1,this._internalCustomListenerIDs=[],this._currentTouch=null,this._currentTouchListener=null}var t=e.prototype;return t.pauseTarget=function(e,t){if(void 0===t&&(t=!1),e instanceof s._BaseNode){var n=this._nodeListenersMap[e.uuid];if(n)for(var i=0,o=n.length;i<o;i++){var r=n[i];r._setPaused(!0),r instanceof Gg&&r._claimedTouches.includes(this._currentTouch)&&this._clearCurTouch()}if(!0===t){var a=e.children;if(a)for(var c=0;c<a.length;++c){var l=a[c];this.pauseTarget(l,!0)}}}else w(3506)},t.resumeTarget=function(e,t){if(void 0===t&&(t=!1),e instanceof s._BaseNode){var n=this._nodeListenersMap[e.uuid];if(n)for(var i=0;i<n.length;++i)n[i]._setPaused(!1);if(this._setDirtyForNode(e),!0===t&&e.children.length>0){var o=e.children;if(o)for(var r=0;r<o.length;++r){var a=o[r];this.resumeTarget(a,!0)}}}else w(3506)},t.frameUpdateListeners=function(){var e=this._listenersMap,t=this._priorityDirtyFlagMap;for(var n in e)e[n].empty()&&(delete t[n],delete e[n]);var i=this._toAddedListeners;if(0!==i.length){for(var o=0,r=i.length;o<r;o++)this._forceAddEventListener(i[o]);i.length=0}0!==this._toRemovedListeners.length&&this._cleanToRemovedListeners()},t.hasEventListener=function(e){return!!this._getListeners(e)},t.addListener=function(e,t){if(q(e&&t,3503),!(s.js.isNumber(t)||t instanceof s._BaseNode))return w(3506),null;if(e instanceof s.EventListener){if(e._isRegistered())return A(3505),null}else q(!s.js.isNumber(t),3504),e=s.EventListener.create(e);if(!e.checkAvailable())return null;if(s.js.isNumber(t)){if(0===t)return A(3500),null;e._setSceneGraphPriority(null),e._setFixedPriority(t),e._setRegistered(!0),e._setPaused(!1),this._addListener(e)}else{if(!(n=t)||!n.getComponent("cc.UITransform"))return A(3512),null;e._setSceneGraphPriority(t),e._setFixedPriority(0),e._setRegistered(!0),this._addListener(e)}var n;return e},t.addCustomListener=function(e,t){var n=Fg.create({event:s.EventListener.CUSTOM,eventName:e,callback:t});return this.addListener(n,1),n},t.removeListener=function(e){if(null!=e){var t=!1,n=this._listenersMap;for(var i in e===this._currentTouchListener&&(this._currentTouchListener=this._currentTouch=null),n){var o=n[i],r=o.getFixedPriorityListeners(),a=o.getSceneGraphPriorityListeners();if((t=this._removeListenerInVector(a,e))?this._setDirty(e._getListenerID(),2):(t=this._removeListenerInVector(r,e))&&this._setDirty(e._getListenerID(),1),o.empty()&&(delete this._priorityDirtyFlagMap[e._getListenerID()],delete n[i]),t)break}if(!t)for(var c=this._toAddedListeners,l=c.length-1;l>=0;l--){var u=c[l];if(u===e){s.js.array.removeAt(c,l),u._setRegistered(!1);break}}}},t.removeListeners=function(e,t){if(void 0===t&&(t=!1),s.js.isNumber(e)||e instanceof s._BaseNode)if(void 0!==e._id){var n=this._nodeListenersMap[e._id];if(n){for(var i=s.js.array.copy(n),o=0;o<i.length;++o){var r=i[o];this.removeListener(r)}delete this._nodeListenersMap[e._id]}for(var a=this._toAddedListeners,c=0;c<a.length;){var l=a[c];l._getSceneGraphPriority()===e?(l._setSceneGraphPriority(null),l._setRegistered(!1),a.splice(c,1)):++c}if(!0===t)for(var u=e.getChildren(),f=0;f<u.length;++f){var _=u[f];this.removeListeners(_,!0)}}else e===s.EventListener.TOUCH_ONE_BY_ONE?this._removeListenersForListenerID(ey.TOUCH_ONE_BY_ONE):e===s.EventListener.TOUCH_ALL_AT_ONCE?this._removeListenersForListenerID(ey.TOUCH_ALL_AT_ONCE):e===s.EventListener.MOUSE?this._removeListenersForListenerID(ey.MOUSE):e===s.EventListener.ACCELERATION?this._removeListenersForListenerID(ey.ACCELERATION):e===s.EventListener.KEYBOARD?this._removeListenersForListenerID(ey.KEYBOARD):A(3501);else w(3506)},t.removeCustomListeners=function(e){this._removeListenersForListenerID(e)},t.removeAllListeners=function(){var e=this._listenersMap,t=this._internalCustomListenerIDs;for(var n in e)-1===t.indexOf(n)&&this._removeListenersForListenerID(n)},t.setPriority=function(e,t){if(null!=e){var n=this._listenersMap;for(var i in n){var o=n[i].getFixedPriorityListeners();if(o&&-1!==o.indexOf(e))return null!=e._getSceneGraphPriority()&&A(3502),void(e._getFixedPriority()!==t&&(e._setFixedPriority(t),this._setDirty(e._getListenerID(),1)))}}},t.setEnabled=function(e){this._isEnabled=e},t.isEnabled=function(){return this._isEnabled},t.dispatchEvent=function(e){if(this._isEnabled)if(this._updateDirtyFlagForSceneGraph(),this._inDispatch++,e&&e.getType){if(ty.includes(e.getType()))return this._dispatchTouchEvent(e),void this._inDispatch--;var t=function(e){var t=e.type;return t===zg.DEVICEMOTION?ey.ACCELERATION:iy.includes(t)?ey.KEYBOARD:ny.includes(t)?ey.MOUSE:(ty.includes(t)&&A(2e3),"")}(e);this._sortEventListeners(t);var n=this._listenersMap[t];null!=n&&(this._dispatchEventToListeners(n,this._onListenerCallback,e),this._onUpdateListeners(n)),this._inDispatch--}else R(3511)},t._onListenerCallback=function(e,t){t.currentTarget=e._target;var n=e.onEvent;return n&&n(t),t.isStopped()},t.dispatchCustomEvent=function(e,t){var n=new s.Event.EventCustom(e);n.setUserData(t),this.dispatchEvent(n)},t._setDirtyForNode=function(e){var t=this._nodeListenersMap[e._id];if(void 0!==t)for(var n=0,i=t.length;n<i;n++){var o=t[n]._getListenerID();this._dirtyListeners[o]||(this._dirtyListeners[o]=!0)}if(e.children.length>0)for(var r=e.children,a=0,s=r?r.length:0;a<s;a++)this._setDirtyForNode(r[a])},t._addListener=function(e){0===this._inDispatch?this._forceAddEventListener(e):this._toAddedListeners.push(e)},t._forceAddEventListener=function(e){var t=e._getListenerID(),n=this._listenersMap[t];if(n||(n=new oy,this._listenersMap[t]=n),n.push(e),0===e._getFixedPriority()){this._setDirty(t,2);var i=e._getSceneGraphPriority();null===i&&A(3507),this._associateNodeAndEventListener(i,e),i.activeInHierarchy&&this.resumeTarget(i)}else this._setDirty(t,1)},t._getListeners=function(e){return this._listenersMap[e]},t._updateDirtyFlagForSceneGraph=function(){var e=this._dirtyListeners;for(var t in e)this._setDirty(t,2),e[t]=!1},t._removeAllListenersInVector=function(e){if(e)for(var t,n=e.length-1;n>=0;n--)(t=e[n])._setRegistered(!1),null!=t._getSceneGraphPriority()&&(this._dissociateNodeAndEventListener(t._getSceneGraphPriority(),t),t._setSceneGraphPriority(null)),0===this._inDispatch&&s.js.array.removeAt(e,n)},t._removeListenersForListenerID=function(e){var t=this._listenersMap[e];if(t){var n=t.getFixedPriorityListeners(),i=t.getSceneGraphPriorityListeners();this._removeAllListenersInVector(i),this._removeAllListenersInVector(n),delete this._priorityDirtyFlagMap[e],this._inDispatch||(t.clear(),delete this._listenersMap[e])}for(var o=this._toAddedListeners,r=o.length-1;r>=0;r--){var a=o[r];a&&a._getListenerID()===e&&s.js.array.removeAt(o,r)}},t._sortEventListeners=function(e){var t=0,n=this._priorityDirtyFlagMap;n[e]&&(t=n[e]),0!==t&&(n[e]=0,1&t&&this._sortListenersOfFixedPriority(e),2&t&&s.director.getScene()&&this._sortListenersOfSceneGraphPriority(e))},t._sortListenersOfSceneGraphPriority=function(e){var t=this._getListeners(e);if(t){var n=t.getSceneGraphPriorityListeners();if(n&&0!==n.length){var i=t.getSceneGraphPriorityListeners();i.forEach((function(e){var t=e._getSceneGraphPriority(),n=null==t?void 0:t._uiProps.uiTransformComp;e._cameraPriority=n?n.cameraPriority:0})),i.sort(this._sortEventListenersOfSceneGraphPriorityDes)}}},t._sortEventListenersOfSceneGraphPriorityDes=function(e,t){var n=e._getSceneGraphPriority(),i=t._getSceneGraphPriority();if(!(t&&i&&i._activeInHierarchy&&i._uiProps.uiTransformComp))return-1;if(!(e&&n&&n._activeInHierarchy&&n._uiProps.uiTransformComp))return 1;var o=n,r=i,a=!1;if(e._cameraPriority!==t._cameraPriority)return t._cameraPriority-e._cameraPriority;for(;o.parent._id!==r.parent._id;)o=null===o.parent.parent?(a=!0)&&i:o.parent,r=null===r.parent.parent?(a=!0)&&n:r.parent;if(o._id===r._id){if(o._id===i._id)return-1;if(o._id===n._id)return 1}var s=o.getSiblingIndex(),c=r.getSiblingIndex();return a?s-c:c-s},t._sortListenersOfFixedPriority=function(e){var t=this._listenersMap[e];if(t){var n=t.getFixedPriorityListeners();if(n&&0!==n.length){n.sort(this._sortListenersOfFixedPriorityAsc);for(var i=0,o=n.length;i<o&&!(n[i]._getFixedPriority()>=0);)++i;t.gt0Index=i}}},t._sortListenersOfFixedPriorityAsc=function(e,t){return e._getFixedPriority()-t._getFixedPriority()},t._onUpdateListeners=function(e){var t=e.getFixedPriorityListeners(),n=e.getSceneGraphPriorityListeners(),i=this._toRemovedListeners;if(n)for(var o=n.length-1;o>=0;o--){var r=n[o];if(!r._isRegistered()){s.js.array.removeAt(n,o);var a=i.indexOf(r);-1!==a&&i.splice(a,1)}}if(t)for(var c=t.length-1;c>=0;c--){var l=t[c];if(!l._isRegistered()){s.js.array.removeAt(t,c);var u=i.indexOf(l);-1!==u&&i.splice(u,1)}}n&&0===n.length&&e.clearSceneGraphListeners(),t&&0===t.length&&e.clearFixedListeners()},t._updateTouchListeners=function(){var e=this._inDispatch;if(q(e>0,3508),!(e>1)){var t;(t=this._listenersMap[ey.TOUCH_ONE_BY_ONE])&&this._onUpdateListeners(t),(t=this._listenersMap[ey.TOUCH_ALL_AT_ONCE])&&this._onUpdateListeners(t),q(1===e,3509);var n=this._toAddedListeners;if(0!==n.length){for(var i=0,o=n.length;i<o;i++)this._forceAddEventListener(n[i]);this._toAddedListeners.length=0}0!==this._toRemovedListeners.length&&this._cleanToRemovedListeners()}},t._cleanToRemovedListeners=function(){for(var e=this._toRemovedListeners,t=0;t<e.length;++t){var n=e[t],i=this._listenersMap[n._getListenerID()];if(i){var o=i.getFixedPriorityListeners(),r=i.getSceneGraphPriorityListeners();if(r){var a=r.indexOf(n);-1!==a&&r.splice(a,1)}if(o){var s=o.indexOf(n);-1!==s&&o.splice(s,1)}}}e.length=0},t._onTouchEventCallback=function(e,t){if(!e._isRegistered())return!1;var n=t.event,i=n.touch;n.currentTarget=e._getSceneGraphPriority();var o=!1,r=-1,a=n.type;if(a===zg.TOUCH_START){if(!Et.ENABLE_MULTI_TOUCH&&ay._currentTouch){var s=ay._currentTouchListener._node;if(!s||s.activeInHierarchy)return!1}e.onTouchBegan&&(o=e.onTouchBegan(i,n))&&e._isRegistered()&&!e._isPaused()&&(e._claimedTouches.push(i),!Et.ENABLE_MULTI_TOUCH&&ay._currentTouch||(ay._currentTouch=i),ay._currentTouchListener=e)}else if(e._claimedTouches.length>0&&-1!==(r=e._claimedTouches.indexOf(i))){if(o=!0,!Et.ENABLE_MULTI_TOUCH&&ay._currentTouch&&ay._currentTouch!==i)return!1;a===zg.TOUCH_MOVE&&e.onTouchMoved?e.onTouchMoved(i,n):a===zg.TOUCH_END?(e.onTouchEnded&&e.onTouchEnded(i,n),e._isRegistered()&&e._claimedTouches.splice(r,1),(Et.ENABLE_MULTI_TOUCH||ay._currentTouch===i)&&(ay._currentTouch=null),ay._currentTouchListener=null):a===zg.TOUCH_CANCEL&&(e.onTouchCancelled&&e.onTouchCancelled(i,n),e._isRegistered()&&e._claimedTouches.splice(r,1),(Et.ENABLE_MULTI_TOUCH||ay._currentTouch===i)&&(ay._currentTouch=null),ay._currentTouchListener=null)}return n.isStopped()?(ay._updateTouchListeners(n),!0):!!(o&&e._isRegistered()&&e.swallowTouches)&&(t.needsMutableSet&&t.touches.splice(i,1),!0)},t._dispatchTouchEvent=function(e){this._sortEventListeners(ey.TOUCH_ONE_BY_ONE),this._sortEventListeners(ey.TOUCH_ALL_AT_ONCE);var t=this._getListeners(ey.TOUCH_ONE_BY_ONE),n=this._getListeners(ey.TOUCH_ALL_AT_ONCE);if(null!==t||null!==n){var i=e.getTouches(),o=s.js.array.copy(i),r={event:e,needsMutableSet:t&&n,touches:o,selTouch:null};if(t)for(var a=0;a<i.length;++a){var c=i[a];e.touch=c,e.propagationStopped=e.propagationImmediateStopped=!1,this._dispatchEventToListeners(t,this._onTouchEventCallback,r)}n&&o.length>0&&(this._dispatchEventToListeners(n,this._onTouchesEventCallback,{event:e,touches:o}),e.isStopped())||this._updateTouchListeners(e)}},t._onTouchesEventCallback=function(e,t){if(!e._isRegistered())return!1;var n=t.event,i=t.touches,o=n.type;return n.currentTarget=e._getSceneGraphPriority(),o===zg.TOUCH_START&&e.onTouchesBegan?e.onTouchesBegan(i,n):o===zg.TOUCH_MOVE&&e.onTouchesMoved?e.onTouchesMoved(i,n):o===zg.TOUCH_END&&e.onTouchesEnded?e.onTouchesEnded(i,n):o===zg.TOUCH_CANCEL&&e.onTouchesCancelled&&e.onTouchesCancelled(i,n),!!n.isStopped()&&(ay._updateTouchListeners(n),!0)},t._associateNodeAndEventListener=function(e,t){var n=this._nodeListenersMap[e.uuid];n||(n=[],this._nodeListenersMap[e.uuid]=n),n.push(t)},t._dissociateNodeAndEventListener=function(e,t){var n=this._nodeListenersMap[e.uuid];n&&(s.js.array.remove(n,t),0===n.length&&delete this._nodeListenersMap[e.uuid])},t._dispatchEventToListeners=function(e,t,n){var i=!1,o=e.getFixedPriorityListeners(),r=e.getSceneGraphPriorityListeners(),a=0;if(o&&0!==o.length)for(;a<e.gt0Index;++a){var s=o[a];if(s.isEnabled()&&!s._isPaused()&&s._isRegistered()&&t(s,n)){i=!0;break}}if(r&&!i)for(var c=0;c<r.length;++c){var l=r[c];if(l.isEnabled()&&!l._isPaused()&&l._isRegistered()&&t(l,n)){i=!0;break}}if(o&&!i)for(;a<o.length;++a){var u=o[a];if(u.isEnabled()&&!u._isPaused()&&u._isRegistered()&&t(u,n)){i=!0;break}}},t._setDirty=function(e,t){var n=this._priorityDirtyFlagMap;null==n[e]?n[e]=t:n[e]|=t},t._sortNumberAsc=function(e,t){return e-t},t._clearCurTouch=function(){this._currentTouchListener=null,this._currentTouch=null},t._removeListenerInCallback=function(e,t){if(null==e)return!1;for(var n=e.length-1;n>=0;n--){var i=e[n];if(i._onCustomEvent===t||i.onEvent===t)return i._setRegistered(!1),null!=i._getSceneGraphPriority()&&(this._dissociateNodeAndEventListener(i._getSceneGraphPriority(),i),i._setSceneGraphPriority(null)),0===this._inDispatch?s.js.array.removeAt(e,n):this._toRemovedListeners.push(i),!0}return!1},t._removeListenerInVector=function(e,t){if(null==e)return!1;for(var n=e.length-1;n>=0;n--){var i=e[n];if(i===t)return i._setRegistered(!1),null!=i._getSceneGraphPriority()&&(this._dissociateNodeAndEventListener(i._getSceneGraphPriority(),i),i._setSceneGraphPriority(null)),0===this._inDispatch?s.js.array.removeAt(e,n):this._toRemovedListeners.push(i),!0}return!1},e}(),ay=e("eN",new ry);xn.Flags.Destroying,function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed"}(Vg||(Vg=e("gD",{})));var sy=xn.Flags.Destroying,cy=xn.Flags.DontDestroy,ly=xn.Flags.Deactivating,uy=new Ie("Node");function fy(e){return e?"string"==typeof e?mt(e):e:(R(3804),null)}var _y,my,py,hy,dy,vy,gy,yy,xy,Sy,Cy,Ty=e("dG",al("cc.BaseNode")(($g=Zg=function(e){Z(i,e),i._setScene=function(e){e._updateScene()},i._findComponent=function(e,t){var n=t,i=e._components;if(n._sealed)for(var o=0;o<i.length;++o){var r=i[o];if(r.constructor===t)return r}else for(var a=0;a<i.length;++a){var s=i[a];if(s instanceof t)return s}return null},i._findComponents=function(e,t,n){var i=t,o=e._components;if(i._sealed)for(var r=0;r<o.length;++r){var a=o[r];a.constructor===t&&n.push(a)}else for(var s=0;s<o.length;++s){var c=o[s];c instanceof t&&n.push(c)}},i._findChildComponent=function(e,t){for(var n=0;n<e.length;++n){var o=e[n],r=i._findComponent(o,t);if(r)return r;if(o._children.length>0&&(r=i._findChildComponent(o._children,t)))return r}return null},i._findChildComponents=function(e,t,n){for(var o=0;o<e.length;++o){var r=e[o];i._findComponents(r,t,n),r._children.length>0&&i._findChildComponents(r._children,t,n)}};var n=i.prototype;function i(t){var n;return se(n=e.call(this,t)||this,"_parent",Xg,oe(n)),se(n,"_children",Yg,oe(n)),se(n,"_active",Kg,oe(n)),se(n,"_components",Qg,oe(n)),se(n,"_prefab",Jg,oe(n)),n._scene=null,n._activeInHierarchy=!1,n._id=uy.getNewId(),n._name=void 0,n._eventProcessor=new s.NodeEventProcessor(oe(n)),n._eventMask=0,n._siblingIndex=0,n._originalSceneId="",n._registerIfAttached=void 0,n._name=void 0!==t?t:"New Node",n}return n._updateScene=function(){null==this._parent?y("Node %s(%s) has not attached to a scene.",this.name,this.uuid):this._scene=this._parent._scene},n.attr=function(e){Ze(this,e)},n.getParent=function(){return this._parent},n.setParent=function(e,t){if(void 0===t&&(t=!1),this._parent!==e){var n=this._parent,i=e;if(this._parent=i,this._siblingIndex=0,this._onSetParent(n,t),this.emit&&this.emit(Vg.PARENT_CHANGED,n),n&&!(n._objFlags&sy)){var o=n._children.indexOf(this);n._children.splice(o,1),n._updateSiblingIndex(),n.emit&&n.emit(Vg.CHILD_REMOVED,this)}i&&(i._children.push(this),this._siblingIndex=i._children.length-1,i.emit&&i.emit(Vg.CHILD_ADDED,this)),this._onHierarchyChanged(n)}},n.getChildByUuid=function(e){if(!e)return v("Invalid uuid"),null;for(var t=this._children,n=0,i=t.length;n<i;n++)if(t[n]._id===e)return t[n];return null},n.getChildByName=function(e){if(!e)return v("Invalid name"),null;for(var t=this._children,n=0,i=t.length;n<i;n++)if(t[n]._name===e)return t[n];return null},n.getChildByPath=function(e){for(var t=e.split("/"),n=this,i=function(e){var i=t[e];if(0===i.length)return"continue";var o=n.children.find((function(e){return e.name===i}));if(!o)return{v:null};n=o},o=0;o<t.length;++o){var r=i(o);if("continue"!==r&&"object"==typeof r)return r.v}return n},n.addChild=function(e){e.setParent(this)},n.insertChild=function(e,t){e.parent=this,e.setSiblingIndex(t)},n.getSiblingIndex=function(){return this._siblingIndex},n.setSiblingIndex=function(e){if(this._parent)if(this._parent._objFlags&ly)R(3821);else{var t=this._parent._children;e=-1!==e?e:t.length-1;var n=t.indexOf(this);e!==n&&(t.splice(n,1),e<t.length?t.splice(e,0,this):t.push(this),this._parent._updateSiblingIndex(),this._onSiblingIndexChanged&&this._onSiblingIndexChanged(e))}},n.walk=function(e,t){var n=1,o=null,r=null,a=0,s=i._stacks[i._stackId];s||(s=[],i._stacks.push(s)),i._stackId++,s.length=0,s[0]=this;for(var c=null,l=!1;n;)if(r=s[--n])if(!l&&e?e(r):l&&t&&t(r),s[n]=null,l){if(c===this._parent)break;if(l=!1,o)if(o[++a])s[n]=o[a],n++;else if(c&&(s[n]=c,n++,l=!0,c._parent?(a=(o=c._parent._children).indexOf(c),c=c._parent):(c=null,o=null),a<0))break}else r._children.length>0?(c=r,o=r._children,a=0,s[n]=o[a],n++):(s[n]=r,n++,l=!0);s.length=0,i._stackId--},n.removeFromParent=function(){this._parent&&this._parent.removeChild(this)},n.removeChild=function(e){this._children.indexOf(e)>-1&&(e.parent=null)},n.removeAllChildren=function(){for(var e=this._children,t=e.length-1;t>=0;t--){var n=e[t];n&&(n.parent=null)}this._children.length=0},n.isChildOf=function(e){var t=this;do{if(t===e)return!0;t=t._parent}while(t);return!1},n.getComponent=function(e){var t=fy(e);return t?i._findComponent(this,t):null},n.getComponents=function(e){var t=fy(e),n=[];return t&&i._findComponents(this,t,n),n},n.getComponentInChildren=function(e){var t=fy(e);return t?i._findChildComponent(this._children,t):null},n.getComponentsInChildren=function(e){var t=fy(e),n=[];return t&&(i._findComponents(this,t,n),i._findChildComponents(this._children,t,n)),n},n.addComponent=function(e){var t;if("string"==typeof e){if(!(t=mt(e)))throw s._RF.peek()&&R(3808,e),TypeError(W(3807,e))}else{if(!e)throw TypeError(W(3804));t=e}if("function"!=typeof t)throw TypeError(W(3809));if(!tt(t,s.Component))throw TypeError(W(3810));var n=t._requireComponent;n&&!this.getComponent(n)&&this.addComponent(n);var i=new t;return i.node=this,this._components.push(i),this._activeInHierarchy&&s.director._nodeActivator.activateComp(i),i},n.removeComponent=function(e){if(e){var t=null;(t=e instanceof Ju?e:this.getComponent(e))&&t.destroy()}else R(3813)},n.on=function(e,t,n,i){switch(void 0===i&&(i=!1),e){case Vg.TRANSFORM_CHANGED:this._eventMask|=1}this._eventProcessor.on(e,t,n,i)},n.off=function(e,t,n,i){if(void 0===i&&(i=!1),this._eventProcessor.off(e,t,n,i),!this._eventProcessor.hasEventListener(e))switch(e){case Vg.TRANSFORM_CHANGED:this._eventMask&=-2}},n.once=function(e,t,n,i){this._eventProcessor.once(e,t,n,i)},n.emit=function(e,t,n,i,o,r){this._eventProcessor.emit(e,t,n,i,o,r)},n.dispatchEvent=function(e){this._eventProcessor.dispatchEvent(e)},n.hasEventListener=function(e,t,n){return this._eventProcessor.hasEventListener(e,t,n)},n.targetOff=function(e){this._eventProcessor.targetOff(e),1&this._eventMask&&!this._eventProcessor.hasEventListener(Vg.TRANSFORM_CHANGED)&&(this._eventMask&=-2)},n.destroy=function(){return!!e.prototype.destroy.call(this)&&(this.active=!1,!0)},n.destroyAllChildren=function(){for(var e=this._children,t=0;t<e.length;++t)e[t].destroy()},n._removeComponent=function(e){if(e){if(!(this._objFlags&sy)){var t=this._components.indexOf(e);-1!==t?this._components.splice(t,1):e.node!==this&&R(3815)}}else R(3814)},n._updateSiblingIndex=function(){for(var e=0;e<this._children.length;++e)this._children[e]._siblingIndex=e;this.emit(Vg.SIBLING_ORDER_CHANGED)},n._onSetParent=function(e){this._parent&&(null!=e&&e._scene===this._parent._scene||null==this._parent._scene||this.walk(i._setScene))},n._onPostActivated=function(){},n._onBatchCreated=function(){this._parent&&(this._siblingIndex=this._parent.children.indexOf(this))},n._onPreDestroy=function(){this._onPreDestroyBase()},n._onHierarchyChanged=function(e){return this._onHierarchyChangedBase(e)},n._instantiate=function(e,t){return e||(e=s.instantiate._clone(this,this)),e._prefab,e._parent=null,e._onBatchCreated(t),e},n._onHierarchyChangedBase=function(){var e=this._parent;!this._persistNode||e instanceof s.Scene||s.game.removePersistRootNode(this);var t=this._active&&!(!e||!e._activeInHierarchy);this._activeInHierarchy!==t&&s.director._nodeActivator.activateNode(this,t)},n._onPreDestroyBase=function(){this._objFlags|=sy;var e=this._parent,n=!!e&&0!=(e._objFlags&sy);if(!n&&t&&this._registerIfAttached(!1),this._persistNode&&s.game.removePersistRootNode(this),!n&&e){this.emit(Vg.PARENT_CHANGED,this);var i=e._children.indexOf(this);e._children.splice(i,1),this._siblingIndex=0,e._updateSiblingIndex(),e.emit&&e.emit(Vg.CHILD_REMOVED,this)}this.emit(Vg.NODE_DESTROYED,this),this._eventProcessor.destroy();for(var o=this._children,r=0;r<o.length;++r)o[r]._destroyImmediate();for(var a=this._components,c=0;c<a.length;++c)a[c]._destroyImmediate();return n},Q(i,[{key:"components",get:function(){return this._components}},{key:"_persistNode",get:function(){return(this._objFlags&cy)>0},set:function(e){e?this._objFlags|=cy:this._objFlags&=~cy}},{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"uuid",get:function(){return this._id}},{key:"children",get:function(){return this._children}},{key:"active",get:function(){return this._active},set:function(e){if(this._active!==e){this._active=e;var t=this._parent;t&&t._activeInHierarchy&&s.director._nodeActivator.activateNode(this,e)}}},{key:"activeInHierarchy",get:function(){return this._activeInHierarchy}},{key:"parent",get:function(){return this._parent},set:function(e){this.setParent(e)}},{key:"scene",get:function(){return this._scene}},{key:"eventProcessor",get:function(){return this._eventProcessor}}]),i}(xn),Zg.idGenerator=uy,Zg._stacks=[[]],Zg._stackId=0,ce((Wg=$g).prototype,"_persistNode",[ul],Object.getOwnPropertyDescriptor(Wg.prototype,"_persistNode"),Wg.prototype),ce(Wg.prototype,"name",[Cl],Object.getOwnPropertyDescriptor(Wg.prototype,"name"),Wg.prototype),ce(Wg.prototype,"children",[Cl],Object.getOwnPropertyDescriptor(Wg.prototype,"children"),Wg.prototype),ce(Wg.prototype,"active",[Cl],Object.getOwnPropertyDescriptor(Wg.prototype,"active"),Wg.prototype),ce(Wg.prototype,"activeInHierarchy",[Cl],Object.getOwnPropertyDescriptor(Wg.prototype,"activeInHierarchy"),Wg.prototype),ce(Wg.prototype,"parent",[Cl],Object.getOwnPropertyDescriptor(Wg.prototype,"parent"),Wg.prototype),Xg=ce(Wg.prototype,"_parent",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Yg=ce(Wg.prototype,"_children",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Kg=ce(Wg.prototype,"_active",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Qg=ce(Wg.prototype,"_components",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Jg=ce(Wg.prototype,"_prefab",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),qg=Wg))||qg);function Ey(e){var t=e._prefab;if(t&&t.instance){if(!t.asset)return R(3701,e.name),void(t.instance=void 0);var n=e._objFlags,i=e._parent,o=e._id,r=e._prefab;e[vn],s.game._isCloning=!0;var a=t.asset.data;a._iN$t=e,s.instantiate._clone(a,a),s.game._isCloning=!1,e._objFlags=n,e._parent=i,e._id=o,e._prefab&&(e._prefab.instance=null==r?void 0:r.instance)}}function by(e,t,n){var i;if(t){var o=t,r=null===(i=e._prefab)||void 0===i?void 0:i.instance;!n&&r&&(t[r.fileId]={},o=t[r.fileId]);var a=e._prefab;a&&(o[a.fileId]=e);for(var s=e.components,c=0;c<s.length;c++){var l=s[c];l.__prefab&&(o[l.__prefab.fileId]=l)}for(var u=0;u<e.children.length;u++)by(e.children[u],o,!1)}}function Ay(e,t){if(!e)return null;for(var n=t,i=0;i<e.length;i++){if(!n)return null;n=n[e[i]]}return n}function Py(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o&&o.targetInfo){var r=Ay(o.targetInfo.localID,n);if(!r)continue;var a=n,s=o.targetInfo.localID;if(s.length>0)for(var c=0;c<s.length-1;c++)a=a[s[c]];if(o.nodes)for(var l=0;l<o.nodes.length;l++){var u=o.nodes[l];u&&(r._children.push(u),u._parent=r,by(u,a,!1),u._siblingIndex=r._children.length-1,u._onBatchCreated(!1))}}}}function wy(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o&&o.targetInfo){var r=Ay(o.targetInfo.localID,n);if(!r)continue;if(o.components)for(var a=0;a<o.components.length;a++){var s=o.components[a];s&&(s.node=r,r._components.push(s))}}}}function Iy(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o){var r=Ay(o.localID,n);if(!r||!r.node)continue;var a=r.node.components.indexOf(r);a>=0&&r.node._components.splice(a,1)}}}function Ry(e,t,n){if(!(t.length<=0))for(var i=null,o=0;o<t.length;o++){var r=t[o];if(r&&r.targetInfo){if(!(i=Ay(r.targetInfo.localID,n)))continue;var a=i,s=r.propertyPath.slice();if(s.length>0){var c=s.pop();if(!c)continue;for(var l=0;l<s.length&&(a=a[s[l]]);l++);if(!a)continue;if(Array.isArray(a))if("length"===c)a[c]=r.value;else{var u=Number.parseInt(c);Number.isInteger(u)&&u<a.length&&(a[c]=r.value)}else a[c]instanceof Tt?a[c].set(r.value):a[c]=r.value}}}}function Ny(e){var t,n=null===(t=e._prefab)||void 0===t?void 0:t.targetOverrides;if(n)for(var i=0;i<n.length;i++){var o,r,a=n[i],s=a.source,c=a.sourceInfo;if(c){var l,u,f=null===(l=a.source)||void 0===l||null===(u=l._prefab)||void 0===u?void 0:u.instance;f&&f.targetMap&&(s=Ay(c.localID,f.targetMap))}if(s){var _,m=a.targetInfo;if(m){var p=null===(o=a.target)||void 0===o||null===(r=o._prefab)||void 0===r?void 0:r.instance;if(p&&p.targetMap&&(_=Ay(m.localID,p.targetMap))){var h=a.propertyPath.slice(),d=s;if(h.length>0){var v=h.pop();if(!v)return;for(var g=0;g<h.length&&(d=d[h[g]]);g++);if(!d)continue;d[v]=_}}}}}}s._BaseNode=Ty;var My=new _i,Oy=new yi,Dy=new yi,zy=new yi,Ly=new di,Fy=new di,Uy=new Pi,By=[],Gy=[],ky=[],Hy=function(){function e(){this._chunks=[],this._freelists=[],this._createChunk()}var t=e.prototype;return t.alloc=function(){for(var e=this._freelists.length,t=0;t<e;++t)if(this._freelists[t].length)return this._createView(t);return this._createChunk(),this._createView(e)},t.free=function(e,t){for(var n=this._freelists.length,i=0;i<n;++i)if(this._chunks[i]===e)return void this._freelists[i].push(t)},t.clear=function(){for(var e=this._chunks.length,t=0;t<e;++t)this._chunks[t].fill(0)},t._createChunk=function(){this._chunks.push(new Uint32Array(e.CAPACITY_PER_CHUNK));for(var t=[],n=e.CAPACITY_PER_CHUNK-1;n>=0;n--)t.push(n);this._freelists.push(t)},t._createView=function(e){return ky[0]=this._chunks[e],ky[1]=this._freelists[e].pop(),ky},e}();Hy.CAPACITY_PER_CHUNK=256;var jy,Vy,qy,Wy,Xy,Yy,Ky,Qy,Jy,Zy,$y,ex,tx,nx,ix,ox,rx,ax,sx,cx,lx,ux,fx,_x,mx,px,hx,dx,vx,gx,yx,xx,Sx,Cx,Tx,Ex,bx,Ax,Px,Ix,Rx,Nx,Mx,Ox,Dx,zx,Lx,Fx,Ux,Bx,Gx,kx,Hx,jx,Vx,qx,Wx,Xx,Yx,Kx,Qx,Jx,Zx,$x,eS,tS,nS,iS,oS=new Hy,rS=Symbol("ReserveContentsForAllSyncablePrefab"),aS=e("dH",(_y=al("cc.Node"),my=Fl(_i),_y((Cy=Sy=function(e){Z(i,e);var n=i.prototype;function i(t){var n;return(n=e.call(this,t)||this)._uiProps=new Lg(oe(n)),n._static=!1,se(n,"_lpos",dy,oe(n)),se(n,"_lrot",vy,oe(n)),se(n,"_lscale",gy,oe(n)),se(n,"_layer",yy,oe(n)),se(n,"_euler",xy,oe(n)),n._dirtyFlagsPri=Iv.NONE,n._eulerDirty=!1,n._nodeHandle=Tc,n._init(),n}return n._init=function(){var e=oS.alloc(),t=e[0],n=e[1];this._hasChangedFlagsChunk=t,this._hasChangedFlagsOffset=n;var i=new Uint32Array(t.buffer,t.byteOffset+4*n,1);this._hasChangedFlags=i,this._pos=new _i,this._rot=new yi,this._scale=new _i(1,1,1),this._mat=new Pi},i.isNode=function(e){return e instanceof i&&(e.constructor===i||!(e instanceof s.Scene))},n._onPreDestroy=function(){var e=this._onPreDestroyBase();return oS.free(this._hasChangedFlagsChunk,this._hasChangedFlagsOffset),e},n[ef]=function(e){e.writeThis()},n.setParent=function(t,n){void 0===n&&(n=!1),n&&this.updateWorldTransform(),e.prototype.setParent.call(this,t,n)},n._onSetParent=function(t,n){if(e.prototype._onSetParent.call(this,t,n),n){var i=this._parent;i?(i.updateWorldTransform(),Pi.multiply(Uy,Pi.invert(Uy,i._mat),this._mat),Pi.toRTS(Uy,this._lrot,this._lpos,this._lscale)):(_i.copy(this._lpos,this._pos),yi.copy(this._lrot,this._rot),_i.copy(this._lscale,this._scale)),this._eulerDirty=!0}this.invalidateChildren(Iv.TRS)},n._onHierarchyChanged=function(t){this.eventProcessor.reattach(),e.prototype._onHierarchyChangedBase.call(this,t)},n._onBatchCreated=function(e){var t,n=null===(t=this._prefab)||void 0===t?void 0:t.instance;!e&&n&&Ey(this),this.hasChangedFlags=Iv.TRS,this._dirtyFlags|=Iv.TRS,this._uiProps.uiTransformDirty=!0;for(var i=this._children.length,o=0;o<i;++o)this._children[o]._siblingIndex=o,this._children[o]._onBatchCreated(e);if(!e&&n){var r={};n.targetMap=r,by(this,r,!0),Py(0,n.mountedChildren,r),Iy(0,n.removedComponents,r),wy(0,n.mountedComponents,r),Ry(0,n.propertyOverrides,r)}Ny(this)},n._onBeforeSerialize=function(){this.eulerAngles},n._onPostActivated=function(e){e?(ay.resumeTarget(this),this.invalidateChildren(Iv.TRS)):ay.pauseTarget(this)},n.translate=function(e,t){var n=t||wv.LOCAL;if(n===wv.LOCAL)_i.transformQuat(My,e,this._lrot),this._lpos.x+=My.x,this._lpos.y+=My.y,this._lpos.z+=My.z;else if(n===wv.WORLD)if(this._parent){yi.invert(Oy,this._parent.worldRotation),_i.transformQuat(My,e,Oy);var i=this.worldScale;this._lpos.x+=My.x/i.x,this._lpos.y+=My.y/i.y,this._lpos.z+=My.z/i.z}else this._lpos.x+=e.x,this._lpos.y+=e.y,this._lpos.z+=e.z;this.invalidateChildren(Iv.POSITION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.POSITION)},n.rotate=function(e,t){var n=t||wv.LOCAL;if(yi.normalize(Oy,e),n===wv.LOCAL)yi.multiply(this._lrot,this._lrot,Oy);else if(n===wv.WORLD){var i=this.worldRotation;yi.multiply(Dy,Oy,i),yi.invert(Oy,i),yi.multiply(Dy,Oy,Dy),yi.multiply(this._lrot,this._lrot,Dy)}this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.ROTATION)},n.lookAt=function(e,t){this.getWorldPosition(My),_i.subtract(My,My,e),_i.normalize(My,My),yi.fromViewUp(Oy,My,t),this.setWorldRotation(Oy)},n._setDirtyNode=function(e,t){By[e]=t},n.invalidateChildren=function(e){var t,n,i,o=0,r=0,a=0,s=0,c=0,l=e|Iv.POSITION;for(By[0]=this;o>=0;){if(c=(t=By[o--])._hasChangedFlags[0],s=t._dirtyFlagsPri,t.isValid&&(s&c&e)!==e)for(s|=e,t._dirtyFlagsPri=s,t._uiProps.uiTransformDirty=!0,t._hasChangedFlags[0]=c|e,a=(i=t._children).length,r=0;r<a;r++)n=i[r],By[++o]=n;e=l}},n.updateWorldTransform=function(){if(this._dirtyFlags){for(var e,t=this,n=0;t&&t._dirtyFlags;)this._setDirtyNode(n++,t),t=t._parent;for(var i=0;n;)i|=(e=By[--n])._dirtyFlags,t?(i&Iv.POSITION&&(_i.transformMat4(e._pos,e._lpos,t._mat),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&Iv.RS&&(Pi.fromRTS(e._mat,e._lrot,e._lpos,e._lscale),Pi.multiply(e._mat,t._mat,e._mat),i&Iv.ROTATION&&yi.multiply(e._rot,t._rot,e._lrot),di.fromQuat(Ly,yi.conjugate(zy,e._rot)),di.multiplyMat4(Ly,Ly,e._mat),e._scale.x=Ly.m00,e._scale.y=Ly.m04,e._scale.z=Ly.m08)):(i&Iv.POSITION&&(_i.copy(e._pos,e._lpos),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&Iv.RS&&(i&Iv.ROTATION&&yi.copy(e._rot,e._lrot),i&Iv.SCALE&&(_i.copy(e._scale,e._lscale),Pi.fromRTS(e._mat,e._rot,e._pos,e._scale)))),e._dirtyFlags=Iv.NONE,t=e}},n.setPosition=function(e,t,n){void 0===t&&void 0===n?_i.copy(this._lpos,e):void 0===n?_i.set(this._lpos,e,t,this._lpos.z):_i.set(this._lpos,e,t,n),this.invalidateChildren(Iv.POSITION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.POSITION)},n.getPosition=function(e){return e?_i.set(e,this._lpos.x,this._lpos.y,this._lpos.z):_i.copy(new _i,this._lpos)},n.setRotation=function(e,t,n,i){void 0===t||void 0===n||void 0===i?yi.copy(this._lrot,e):yi.set(this._lrot,e,t,n,i),this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.ROTATION)},n.setRotationFromEuler=function(e,t,n){var i=void 0===n?this._euler.z:n;void 0===t?(_i.copy(this._euler,e),yi.fromEuler(this._lrot,e.x,e.y,e.z)):(_i.set(this._euler,e,t,i),yi.fromEuler(this._lrot,e,t,i)),this._eulerDirty=!1,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.ROTATION)},n.getRotation=function(e){return e?yi.set(e,this._lrot.x,this._lrot.y,this._lrot.z,this._lrot.w):yi.copy(new yi,this._lrot)},n.setScale=function(e,t,n){void 0===t&&void 0===n?_i.copy(this._lscale,e):void 0===n?_i.set(this._lscale,e,t,this._lscale.z):_i.set(this._lscale,e,t,n),this.invalidateChildren(Iv.SCALE),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.SCALE)},n.getScale=function(e){return e?_i.set(e,this._lscale.x,this._lscale.y,this._lscale.z):_i.copy(new _i,this._lscale)},n.inverseTransformPoint=function(e,t){_i.copy(e,t);for(var n=this,i=0;n._parent;)this._setDirtyNode(i++,n),n=n._parent;for(;i>=0;)_i.transformInverseRTS(e,e,n._lrot,n._lpos,n._lscale),n=By[--i];return e},n.setWorldPosition=function(e,t,n){void 0===t||void 0===n?_i.copy(this._pos,e):_i.set(this._pos,e,t,n);var i=this._parent,o=this._lpos;i?(i.updateWorldTransform(),_i.transformMat4(o,this._pos,Pi.invert(Uy,i._mat))):_i.copy(o,this._pos),this.invalidateChildren(Iv.POSITION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.POSITION)},n.getWorldPosition=function(e){return this.updateWorldTransform(),e?_i.copy(e,this._pos):_i.copy(new _i,this._pos)},n.setWorldRotation=function(e,t,n,i){void 0===t||void 0===n||void 0===i?yi.copy(this._rot,e):yi.set(this._rot,e,t,n,i),this._parent?(this._parent.updateWorldTransform(),yi.multiply(this._lrot,yi.conjugate(this._lrot,this._parent._rot),this._rot)):yi.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.ROTATION)},n.setWorldRotationFromEuler=function(e,t,n){yi.fromEuler(this._rot,e,t,n),this._parent?(this._parent.updateWorldTransform(),yi.multiply(this._lrot,yi.conjugate(this._lrot,this._parent._rot),this._rot)):yi.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.ROTATION)},n.getWorldRotation=function(e){return this.updateWorldTransform(),e?yi.copy(e,this._rot):yi.copy(new yi,this._rot)},n.setWorldScale=function(e,t,n){void 0===t||void 0===n?_i.copy(this._scale,e):_i.set(this._scale,e,t,n);var i=this._parent;i?(i.updateWorldTransform(),di.fromQuat(Ly,yi.conjugate(zy,i._rot)),di.multiplyMat4(Ly,Ly,i._mat),Fy.m00=this._scale.x,Fy.m04=this._scale.y,Fy.m08=this._scale.z,di.multiply(Ly,Fy,di.invert(Ly,Ly)),this._lscale.x=_i.set(My,Ly.m00,Ly.m01,Ly.m02).length(),this._lscale.y=_i.set(My,Ly.m03,Ly.m04,Ly.m05).length(),this._lscale.z=_i.set(My,Ly.m06,Ly.m07,Ly.m08).length()):_i.copy(this._lscale,this._scale),this.invalidateChildren(Iv.SCALE),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.SCALE)},n.getWorldScale=function(e){return this.updateWorldTransform(),e?_i.copy(e,this._scale):_i.copy(new _i,this._scale)},n.getWorldMatrix=function(e){this.updateWorldTransform();var t=e||new Pi;return Pi.copy(t,this._mat)},n.getWorldRS=function(e){this.updateWorldTransform();var t=e||new Pi;return Pi.copy(t,this._mat),t.m12=0,t.m13=0,t.m14=0,t},n.getWorldRT=function(e){this.updateWorldTransform();var t=e||new Pi;return Pi.fromRT(t,this._rot,this._pos)},n.setRTS=function(e,t,n){var i=0;e&&(i|=Iv.ROTATION,void 0!==e.w?(yi.copy(this._lrot,e),this._eulerDirty=!0):(_i.copy(this._euler,e),yi.fromEuler(this._lrot,e.x,e.y,e.z),this._eulerDirty=!1)),t&&(_i.copy(this._lpos,t),i|=Iv.POSITION),n&&(_i.copy(this._lscale,n),i|=Iv.SCALE),i&&(this.invalidateChildren(i),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,i))},n.pauseSystemEvents=function(e){ay.pauseTarget(this,e)},n.resumeSystemEvents=function(e){ay.resumeTarget(this,e)},i.resetHasChangedFlags=function(){oS.clear()},i.clearNodeArray=function(){i.ClearFrame<i.ClearRound&&!t?i.ClearFrame++:(i.ClearFrame=0,By.length=0,Gy.length=0)},Q(i,[{key:"_dirtyFlags",get:function(){return this._dirtyFlagsPri},set:function(e){this._dirtyFlagsPri=e}},{key:"native",get:function(){return this._nativeObj}},{key:"position",get:function(){return this._lpos},set:function(e){this.setPosition(e)}},{key:"worldPosition",get:function(){return this.updateWorldTransform(),this._pos},set:function(e){this.setWorldPosition(e)}},{key:"rotation",get:function(){return this._lrot},set:function(e){this.setRotation(e)}},{key:"eulerAngles",get:function(){return this._eulerDirty&&(yi.toEuler(this._euler,this._lrot),this._eulerDirty=!1),this._euler},set:function(e){this.setRotationFromEuler(e.x,e.y,e.z)}},{key:"angle",get:function(){return this._euler.z},set:function(e){_i.set(this._euler,0,0,e),yi.fromAngleZ(this._lrot,e),this._eulerDirty=!1,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.ROTATION)}},{key:"worldRotation",get:function(){return this.updateWorldTransform(),this._rot},set:function(e){this.setWorldRotation(e)}},{key:"scale",get:function(){return this._lscale},set:function(e){this.setScale(e)}},{key:"worldScale",get:function(){return this.updateWorldTransform(),this._scale},set:function(e){this.setWorldScale(e)}},{key:"matrix",set:function(e){Pi.toRTS(e,this._lrot,this._lpos,this._lscale),this.invalidateChildren(Iv.TRS),this._eulerDirty=!0,1&this._eventMask&&this.emit(Vg.TRANSFORM_CHANGED,Iv.TRS)}},{key:"worldMatrix",get:function(){return this.updateWorldTransform(),this._mat}},{key:"forward",get:function(){return _i.transformQuat(new _i,_i.FORWARD,this.worldRotation)},set:function(e){var t=e.length();_i.multiplyScalar(My,e,-1/t),yi.fromViewUp(Oy,My),this.setWorldRotation(Oy)}},{key:"up",get:function(){return _i.transformQuat(new _i,_i.UP,this.worldRotation)}},{key:"right",get:function(){return _i.transformQuat(new _i,_i.RIGHT,this.worldRotation)}},{key:"layer",get:function(){return this._layer},set:function(e){this._layer=e,this.emit(Vg.LAYER_CHANGED,this._layer)}},{key:"hasChangedFlags",get:function(){return this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]},set:function(e){this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]=e}}]),i}(Ty),Sy.EventType=Vg,Sy.NodeSpace=wv,Sy.TransformDirtyBit=Iv,Sy.TransformBit=Iv,Sy.reserveContentsForAllSyncablePrefabTag=rS,Sy.ClearFrame=0,Sy.ClearRound=1e3,dy=ce((hy=Cy).prototype,"_lpos",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _i}}),vy=ce(hy.prototype,"_lrot",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new yi}}),gy=ce(hy.prototype,"_lscale",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _i(1,1,1)}}),yy=ce(hy.prototype,"_layer",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return pp.Enum.DEFAULT}}),xy=ce(hy.prototype,"_euler",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _i}}),ce(hy.prototype,"eulerAngles",[my],Object.getOwnPropertyDescriptor(hy.prototype,"eulerAngles"),hy.prototype),ce(hy.prototype,"angle",[Cl],Object.getOwnPropertyDescriptor(hy.prototype,"angle"),hy.prototype),ce(hy.prototype,"layer",[Cl],Object.getOwnPropertyDescriptor(hy.prototype,"layer"),hy.prototype),py=hy))||py));s.Node=aS;var sS=al("cc.TargetInfo")((qy=ce((Vy=function(){se(this,"localID",qy,this)}).prototype,"localID",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),jy=Vy))||jy,cS=(Wy=al("cc.TargetOverrideInfo"),Xy=Fl(xn),Yy=Fl(sS),Ky=Fl(aS),Qy=Fl(sS),Wy(($y=ce((Zy=function(){se(this,"source",$y,this),se(this,"sourceInfo",ex,this),se(this,"propertyPath",tx,this),se(this,"target",nx,this),se(this,"targetInfo",ix,this)}).prototype,"source",[_l,Xy],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ex=ce(Zy.prototype,"sourceInfo",[_l,Yy],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),tx=ce(Zy.prototype,"propertyPath",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),nx=ce(Zy.prototype,"target",[_l,Ky],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ix=ce(Zy.prototype,"targetInfo",[_l,Qy],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Jy=Zy))||Jy),lS=al("cc.CompPrefabInfo")((ax=ce((rx=function(){se(this,"fileId",ax,this)}).prototype,"fileId",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),ox=rx))||ox,uS=(sx=al("CCPropertyOverrideInfo"),cx=Fl(sS),sx((px=function(){function e(){se(this,"targetInfo",fx,this),se(this,"propertyPath",_x,this),se(this,"value",mx,this)}return e.prototype.isTarget=function(){},e}(),fx=ce((ux=px).prototype,"targetInfo",[_l,cx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_x=ce(ux.prototype,"propertyPath",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),mx=ce(ux.prototype,"value",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),lx=ux))||lx),fS=(hx=al("cc.MountedChildrenInfo"),dx=Fl(sS),vx=Fl([aS]),hx((Cx=function(){function e(){se(this,"targetInfo",xx,this),se(this,"nodes",Sx,this)}return e.prototype.isTarget=function(){},e}(),xx=ce((yx=Cx).prototype,"targetInfo",[_l,dx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Sx=ce(yx.prototype,"nodes",[_l,vx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),gx=yx))||gx),_S=(Tx=al("cc.MountedComponentsInfo"),Ex=Fl(sS),bx=Fl([Ju]),Tx((Nx=function(){function e(){se(this,"targetInfo",Ix,this),se(this,"components",Rx,this)}return e.prototype.isTarget=function(){},e}(),Ix=ce((Px=Nx).prototype,"targetInfo",[_l,Ex],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Rx=ce(Px.prototype,"components",[_l,bx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ax=Px))||Ax),mS=(Mx=al("cc.PrefabInstance"),Ox=Fl(aS),Dx=Fl([fS]),zx=Fl([_S]),Lx=Fl([uS]),Fx=Fl([sS]),Mx((Wx=function(){function e(){se(this,"fileId",Gx,this),se(this,"prefabRootNode",kx,this),se(this,"mountedChildren",Hx,this),se(this,"mountedComponents",jx,this),se(this,"propertyOverrides",Vx,this),se(this,"removedComponents",qx,this),this.targetMap={}}var t=e.prototype;return t.findPropertyOverride=function(){},t.removePropertyOverride=function(){},e}(),Gx=ce((Bx=Wx).prototype,"fileId",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),kx=ce(Bx.prototype,"prefabRootNode",[_l,Ox],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Hx=ce(Bx.prototype,"mountedChildren",[_l,Dx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),jx=ce(Bx.prototype,"mountedComponents",[_l,zx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Vx=ce(Bx.prototype,"propertyOverrides",[_l,Lx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),qx=ce(Bx.prototype,"removedComponents",[_l,Fx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ux=Bx))||Ux),pS=(Xx=al("cc.PrefabInfo"),Yx=Fl(aS),Kx=Fl(mS),Qx=Fl([cS]),Xx(($x=ce((Zx=function(){se(this,"root",$x,this),se(this,"asset",eS,this),se(this,"fileId",tS,this),se(this,"instance",nS,this),se(this,"targetOverrides",iS,this)}).prototype,"root",[_l,Yx],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),eS=ce(Zx.prototype,"asset",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),tS=ce(Zx.prototype,"fileId",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),nS=ce(Zx.prototype,"instance",[_l,Kx],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),iS=ce(Zx.prototype,"targetOverrides",[_l,Qx],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Jx=Zx))||Jx);s._PrefabInfo=pS;var hS,dS,vS,gS,yS,xS,SS,CS,TS,ES,bS,AS,PS,wS=Object.freeze({__proto__:null,TargetInfo:sS,TargetOverrideInfo:cS,CompPrefabInfo:lS,PropertyOverrideInfo:uS,MountedChildrenInfo:fS,MountedComponentsInfo:_S,PrefabInstance:mS,PrefabInfo:pS,createNodeWithPrefab:Ey,generateTargetMap:by,getTarget:Ay,applyMountedChildren:Py,applyMountedComponents:wy,applyRemovedComponents:Iy,applyPropertyOverrides:Ry,applyTargetOverrides:Ny}),IS=yt({AUTO:0,SINGLE_INSTANCE:1,MULTI_INSTANCE:2}),RS=e("dh",al("cc.Prefab")((xS=yS=function(e){function t(){var t;return se(t=e.call(this)||this,"data",vS,oe(t)),se(t,"optimizationPolicy",gS,oe(t)),t._createFunction=void 0,t._instantiatedTimes=void 0,t._createFunction=null,t._instantiatedTimes=0,t}Z(t,e);var n=t.prototype;return n.createNode=function(e){var t=s.instantiate(this);t.name=this.name,e(null,t)},n.compileCreateFunction=function(){var e,t;this._createFunction=(t=(e=this.data)instanceof s._BaseNode&&e,new Og(e,t).result)},n._doInstantiate=function(e){return this.data._prefab||w(3700),this._createFunction||this.compileCreateFunction(),this._createFunction(e)},n._instantiate=function(){var e;return e=this.data._instantiate(),++this._instantiatedTimes,e},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.data=new aS,this.data.name="(Missing Node)";var n=new s._PrefabInfo;n.asset=this,n.root=this.data,this.data._prefab=n},n.validate=function(){return!!this.data},t}(Ru),yS.OptimizationPolicy=IS,yS.OptimizationPolicyThreshold=3,vS=ce((dS=xS).prototype,"data",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),gS=ce(dS.prototype,"optimizationPolicy",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return IS.AUTO}}),hS=dS))||hS);vt.value(RS,"_utils",wS),s.Prefab=RS,je(s,"cc._Prefab","Prefab"),e("cP",(SS=al("cc.PrefabLink"),CS=Fl(RS),TS=Tl(),SS((PS=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"prefab",AS,oe(t)),t}return Z(t,e),t}(Ju),AS=ce((bS=PS).prototype,"prefab",[CS,_l,TS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ES=bS))||ES));var NS=new _i;function MS(e,t,n,i){i||(i=new _i),e.convertToUINode(t,n,i);var o=n.position;return i.add(o),i}function OS(e,t,n){return n||(n=new _i),e.worldToScreen(t,n),n.x/=s.view.getScaleX(),n.y/=s.view.getScaleY(),n}var DS,zS,LS=e("cX",{WorldNode3DToLocalNodeUI:MS,WorldNode3DToWorldNodeUI:OS});s.pipelineUtils=LS,kn(s.pipelineUtils,"cc.pipelineUtils",[{name:"WorldNode3DToLocalNodeUI",newName:"convertToUINode",targetName:"cc.Camera.prototype",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[0],o=t[3]||NS;return i.convertToUINode(t[1],t[2],o),o.add(t[2].position),t[3]||o.clone()}}]),Hn(yd.prototype,"TextureBase.prototype",[{name:"hasPremultipliedAlpha"},{name:"setPremultiplyAlpha"},{name:"setFlipY"}]),kn(hg.prototype,"RenderTexture.prototype",[{name:"getGFXWindow",customFunction:function(){return this._window}}]);var FS,US=e("dg",al("cc.BufferAsset")((ce((zS=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._buffer=null,t}Z(t,e);var n=t.prototype;return n.buffer=function(){return this._buffer},n.validate=function(){return!!this.buffer},Q(t,[{key:"_nativeAsset",get:function(){return this._buffer},set:function(e){e instanceof ArrayBuffer?this._buffer=e:this._buffer=e.buffer}}]),t}(Ru)).prototype,"_nativeAsset",[Xl],Object.getOwnPropertyDescriptor(zS.prototype,"_nativeAsset"),zS.prototype),DS=zS))||DS);s.BufferAsset=US;var BS=((FS={})[Do.UNORM]="Uint",FS[Do.SNORM]="Int",FS[Do.UINT]="Uint",FS[Do.INT]="Int",FS[Do.UFLOAT]="Float",FS[Do.FLOAT]="Float",FS.default="Uint",FS);function GS(e){return""+(BS[e.type]||BS.default)+e.size/e.count*8}function kS(e,t,n,i,o,r,a){void 0===n&&(n=Oo.R32F),void 0===i&&(i=0),void 0===o&&(o=e.byteLength-i),void 0===r&&(r=0),a||(a=new DataView(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)));var s=va[n];r||(r=s.size);for(var c="set"+GS(s),l="get"+GS(s),u=s.size/s.count,f=Math.floor(o/r),_=Xi.isLittleEndian,m=0;m<f;++m)for(var p=i+r*m,h=0;h<s.count;++h){var d=p+u*h,v=e[l](d,_);a[c](d,t(v,h,e),_)}return a}e("di",function(){var e=t.prototype;function t(e,t,n,i,o){void 0===i&&(i=null),void 0===o&&(o=null),this.mesh=void 0,this.subMeshIdx=void 0,this._flatBuffers=[],this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0,this._vertexIdChannel=void 0,this._geometricInfo=void 0,this._vertexBuffers=void 0,this._attributes=void 0,this._indexBuffer=null,this._indirectBuffer=null,this._primitiveMode=void 0,this._iaInfo=void 0,this._attributes=t,this._vertexBuffers=e,this._indexBuffer=i,this._indirectBuffer=o,this._primitiveMode=n,this._iaInfo=new Kr(t,e,i,o),this._init()}return e._init=function(){},e.genFlatBuffers=function(){if(!this._flatBuffers.length&&this.mesh&&void 0!==this.subMeshIdx){var e=this.mesh,t=0,n=e.struct.primitives[this.subMeshIdx];n.indexView&&(t=n.indexView.count);for(var i=0;i<n.vertexBundelIndices.length;i++){var o=n.vertexBundelIndices[i],r=e.struct.vertexBundles[o],a=n.indexView?n.indexView.count:r.view.count,s=r.view.stride,c=s*a,l=new Uint8Array(e.data.buffer,r.view.offset,r.view.length),u=new Uint8Array(n.indexView?c:r.view.length);if(n.indexView){for(var f=e.readIndices(this.subMeshIdx),_=0;_<t;++_)for(var m=_*s,p=f[_]*s,h=0;h<s;++h)u[m+h]=l[p+h];this._flatBuffers.push({stride:s,count:a,buffer:u})}else u.set(e.data.subarray(r.view.offset,r.view.offset+r.view.length)),this._flatBuffers.push({stride:s,count:a,buffer:u})}}},e.destroy=function(){for(var e=0;e<this.vertexBuffers.length;e++)this.vertexBuffers[e].destroy();if(this.vertexBuffers.length=0,this._indexBuffer&&(this._indexBuffer.destroy(),this._indexBuffer=null),this._jointMappedBuffers&&this._jointMappedBufferIndices){for(var t=0;t<this._jointMappedBufferIndices.length;t++)this._jointMappedBuffers[this._jointMappedBufferIndices[t]].destroy();this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0}this._indirectBuffer&&(this._indirectBuffer.destroy(),this._indirectBuffer=null)},e.enableVertexIdChannel=function(e){if(!this._vertexIdChannel){var t=this.vertexBuffers.length,n=this.attributes.length,i=this._allocVertexIdBuffer(e);this._vertexBuffers.push(i),this._attributes.push(new Xr("a_vertexId",Oo.R32F,!1,t)),this._iaInfo.attributes=this._attributes,this._iaInfo.vertexBuffers=this._vertexBuffers,this._vertexIdChannel={stream:t,index:n}}},e._allocVertexIdBuffer=function(e){for(var t=0===this.vertexBuffers.length||0===this.vertexBuffers[0].stride?0:this.vertexBuffers[0].size/this.vertexBuffers[0].stride,n=new Float32Array(t),i=0;i<t;++i)n[i]=i+.5;var o=e.createBuffer(new Rr(Lo.VERTEX|Lo.TRANSFER_DST,Bo.DEVICE,n.byteLength,n.BYTES_PER_ELEMENT));return o.update(n),o},Q(t,[{key:"attributes",get:function(){return this._attributes}},{key:"vertexBuffers",get:function(){return this._vertexBuffers}},{key:"indexBuffer",get:function(){return this._indexBuffer}},{key:"indirectBuffer",get:function(){return this._indirectBuffer}},{key:"primitiveMode",get:function(){return this._primitiveMode}},{key:"geometricInfo",get:function(){if(this._geometricInfo)return this._geometricInfo;if(void 0===this.mesh)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:_i.ZERO,max:_i.ZERO}};if(void 0===this.subMeshIdx)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:_i.ZERO,max:_i.ZERO}};var e=this.mesh,t=this.subMeshIdx,n=e.readAttribute(t,dr.ATTR_POSITION),i=e.readIndices(t),o=new _i,r=new _i,a=this.attributes.find((function(e){return e.name===dr.ATTR_POSITION}));if(a){var s=va[a.format].count;2===s?(o.set(n[0],n[1],0),r.set(n[0],n[1],0)):(o.set(n[0],n[1],n[2]),r.set(n[0],n[1],n[2]));for(var c=0;c<n.length;c+=s)2===s?(o.x=n[c]>o.x?n[c]:o.x,o.y=n[c+1]>o.y?n[c+1]:o.y,r.x=n[c]<r.x?n[c]:r.x,r.y=n[c+1]<r.y?n[c+1]:r.y):(o.x=n[c]>o.x?n[c]:o.x,o.y=n[c+1]>o.y?n[c+1]:o.y,o.z=n[c+2]>o.z?n[c+2]:o.z,r.x=n[c]<r.x?n[c]:r.x,r.y=n[c+1]<r.y?n[c+1]:r.y,r.z=n[c+2]<r.z?n[c+2]:r.z)}return this._geometricInfo={positions:n,indices:i,boundingBox:{max:o,min:r}},this._geometricInfo}},{key:"flatBuffers",get:function(){return this._flatBuffers}},{key:"jointMappedBuffers",get:function(){var e=this;if(this._jointMappedBuffers)return this._jointMappedBuffers;var t=this._jointMappedBuffers=[],n=this._jointMappedBufferIndices=[];if(!this.mesh||void 0===this.subMeshIdx)return this._jointMappedBuffers=this.vertexBuffers;var i,o,r=this.mesh.struct,a=r.primitives[this.subMeshIdx];if(!r.jointMaps||void 0===a.jointMapIndex||!r.jointMaps[a.jointMapIndex])return this._jointMappedBuffers=this.vertexBuffers;for(var c=s.director.root.device,l=0;l<a.vertexBundelIndices.length;l++){var u=r.vertexBundles[a.vertexBundelIndices[l]];o=0,i=Oo.UNKNOWN;for(var f=0;f<u.attributes.length;f++){var _=u.attributes[f];if(_.name===dr.ATTR_JOINTS){i=_.format;break}o+=va[_.format].size}i?function(){var s=new Uint8Array(e.mesh.data.buffer,u.view.offset,u.view.length),f=new DataView(s.slice().buffer),_=r.jointMaps[a.jointMapIndex];kS(f,(function(e){return _.indexOf(e)}),i,o,u.view.length,u.view.stride,f);var m=c.createBuffer(new Rr(Lo.VERTEX|Lo.TRANSFER_DST,Bo.DEVICE,u.view.length,u.view.stride));m.update(f.buffer),t.push(m),n.push(l)}():t.push(this.vertexBuffers[a.vertexBundelIndices[l]])}return this._vertexIdChannel&&t.push(this._allocVertexIdBuffer(c)),t}},{key:"iaInfo",get:function(){return this._iaInfo}}]),t}());var HS=new Array(16),jS=null,VS=new Ni,qS=[Vg.TOUCH_START,Vg.TOUCH_MOVE,Vg.TOUCH_END,Vg.TOUCH_CANCEL],WS=[Vg.MOUSE_DOWN,Vg.MOUSE_ENTER,Vg.MOUSE_MOVE,Vg.MOUSE_LEAVE,Vg.MOUSE_UP,Vg.MOUSE_WHEEL];function XS(e,t){var n=this.owner;return!(!n||!n._uiProps.uiTransformComp||(e.getUILocation(VS),!n._uiProps.uiTransformComp.isHit(VS,this)||(t.type=Vg.TOUCH_START,t.touch=e,t.bubbles=!0,n.dispatchEvent(t),0)))}function YS(e,t){var n=this.owner;return!(!n||!n._uiProps.uiTransformComp||(t.type=Vg.TOUCH_MOVE,t.touch=e,t.bubbles=!0,n.dispatchEvent(t),0))}function KS(e,t){var n=this.owner;n&&n._uiProps.uiTransformComp&&(e.getUILocation(VS),n._uiProps.uiTransformComp.isHit(VS,this)?t.type=Vg.TOUCH_END:t.type=Vg.TOUCH_CANCEL,t.touch=e,t.bubbles=!0,n.dispatchEvent(t))}function QS(e,t){var n=this.owner;n&&n._uiProps.uiTransformComp&&(t.type=Vg.TOUCH_CANCEL,t.touch=e,t.bubbles=!0,n.dispatchEvent(t))}function JS(e){var t=this.owner;t&&t._uiProps.uiTransformComp&&(VS=e.getUILocation(),t._uiProps.uiTransformComp.isHit(VS,this)&&(e.type=Vg.MOUSE_DOWN,e.bubbles=!0,t.dispatchEvent(e)))}function ZS(e){var t=this.owner;if(t&&t._uiProps.uiTransformComp){if(VS=e.getUILocation(),t._uiProps.uiTransformComp.isHit(VS,this))this._previousIn||(jS&&jS.eventProcessor.mouseListener&&(e.type=Vg.MOUSE_LEAVE,jS.dispatchEvent(e),jS.eventProcessor.mouseListener&&(jS.eventProcessor.mouseListener._previousIn=!1)),jS=t,e.type=Vg.MOUSE_ENTER,t.dispatchEvent(e),this._previousIn=!0),e.type=Vg.MOUSE_MOVE,e.bubbles=!0,t.dispatchEvent(e);else{if(!this._previousIn)return;e.type=Vg.MOUSE_LEAVE,t.dispatchEvent(e),this._previousIn=!1,jS=null}e.propagationStopped=!0}}function $S(e){var t=this.owner;t&&t._uiProps.uiTransformComp&&(VS=e.getUILocation(),t._uiProps.uiTransformComp.isHit(VS,this)&&(e.type=Vg.MOUSE_UP,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0))}function eC(e){var t=this.owner;t&&t._uiProps.uiTransformComp&&(VS=e.getUILocation(),t._uiProps.uiTransformComp.isHit(VS,this)&&(e.type=Vg.MOUSE_WHEEL,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0))}function tC(e,t){if(t){for(var n=0,i=[],o=e;o&&aS.isNode(o);o=o.parent,++n){var r=o.getComponent(t);if(r){var a={index:n,comp:r};i?i.push(a):i=[a]}}return i.length>0?i:null}return null}function nC(e,t){if(!e._persistNode){if(e.eventProcessor.bubblingTargets)for(var n=0;n<t.length;++n)if(e.eventProcessor.bubblingTargets.hasEventListener(t[n]))return!0;if(e.eventProcessor.capturingTargets)for(var i=0;i<t.length;++i)if(e.eventProcessor.capturingTargets.hasEventListener(t[i]))return!0;return!1}return!0}var iC,oC,rC,aC,sC,cC,lC,uC,fC,_C,mC,pC,hC,dC,vC,gC,yC,xC,SC,CC,TC,EC,bC,AC,PC,wC,IC,RC,NC,MC,OC,DC,zC,LC,FC,UC,BC,GC,kC,HC,jC,VC,qC,WC,XC,YC,KC,QC,JC,ZC,$C,eT,tT,nT,iT,oT,rT,aT,sT,cT,lT,uT,fT,_T,mT,pT,hT,dT,vT,gT,yT,xT,ST,CT,TT,ET,bT,AT,PT,wT,IT,RT,NT,MT,OT,DT,zT,LT,FT,UT,BT,GT,kT,HT,jT,VT,qT,WT,XT,YT,KT,QT,JT,ZT,$T,eE,tE,nE,iE,oE,rE,aE,sE,cE,lE,uE,fE,_E,mE,pE,hE,dE,vE,gE=e("gE",function(){function e(e){this.bubblingTargets=null,this.capturingTargets=null,this.touchListener=null,this.mouseListener=null,this._node=void 0,this._node=e}var t=e.prototype;return t.reattach=function(){var t;this.node.walk((function(n){t||(t=tC(n,e._comp)),n.eventProcessor.touchListener&&(n.eventProcessor.touchListener.mask=t),n.eventProcessor.mouseListener&&(n.eventProcessor.mouseListener.mask=t)}))},t.destroy=function(){jS===this._node&&(jS=null),(this.touchListener||this.mouseListener)&&(ay.removeListeners(this._node),this.touchListener&&(this.touchListener.owner=null,this.touchListener.mask=null,this.touchListener=null),this.mouseListener&&(this.mouseListener.owner=null,this.mouseListener.mask=null,this.mouseListener=null)),this.capturingTargets&&this.capturingTargets.clear(),this.bubblingTargets&&this.bubblingTargets.clear()},t.on=function(e,t,n,i){return this._checknSetupSysEvent(e)?this._onDispatch(e,t,n,i):(this.bubblingTargets||(this.bubblingTargets=new In),this.bubblingTargets.on(e,t,n))},t.once=function(e,t,n,i){var o,r=this;(o=this._checknSetupSysEvent(e)&&i?this.capturingTargets=this.capturingTargets||new In:this.bubblingTargets=this.bubblingTargets||new In).on(e,t,n,!0),o.on(e,(function(){r.off(e,t,n)}),void 0,!0)},t.off=function(e,t,n,i){var o=-1!==qS.indexOf(e),r=!o&&-1!==WS.indexOf(e);o||r?(this._offDispatch(e,t,n,i),o?this.touchListener&&!nC(this._node,qS)&&(ay.removeListener(this.touchListener),this.touchListener=null):r&&this.mouseListener&&!nC(this._node,WS)&&(ay.removeListener(this.mouseListener),this.mouseListener=null)):this.bubblingTargets&&this.bubblingTargets.off(e,t,n)},t.emit=function(e,t,n,i,o,r){this.bubblingTargets&&this.bubblingTargets.emit(e,t,n,i,o,r)},t.dispatchEvent=function(e){!function(e,t){var n,i=0;for(t.target=e,HS.length=0,e.eventProcessor.getCapturingTargets(t.type,HS),t.eventPhase=1,i=HS.length-1;i>=0;--i)if((n=HS[i]).eventProcessor.capturingTargets&&(t.currentTarget=n,n.eventProcessor.capturingTargets.emit(t.type,t,HS),t.propagationStopped))return void(HS.length=0);if(HS.length=0,t.eventPhase=2,t.currentTarget=e,e.eventProcessor.capturingTargets&&e.eventProcessor.capturingTargets.emit(t.type,t),!t.propagationImmediateStopped&&e.eventProcessor.bubblingTargets&&e.eventProcessor.bubblingTargets.emit(t.type,t),!t.propagationStopped&&t.bubbles)for(e.eventProcessor.getBubblingTargets(t.type,HS),t.eventPhase=3,i=0;i<HS.length;++i)if((n=HS[i]).eventProcessor.bubblingTargets&&(t.currentTarget=n,n.eventProcessor.bubblingTargets.emit(t.type,t),t.propagationStopped))return void(HS.length=0);HS.length=0}(this._node,e),HS.length=0},t.hasEventListener=function(e,t,n){var i=!1;return this.bubblingTargets&&(i=this.bubblingTargets.hasEventListener(e,t,n)),!i&&this.capturingTargets&&(i=this.capturingTargets.hasEventListener(e,t,n)),i},t.targetOff=function(e){this.capturingTargets&&this.capturingTargets.removeAll(e),this.bubblingTargets&&this.bubblingTargets.removeAll(e),this.touchListener&&!nC(this.node,qS)&&(ay.removeListener(this.touchListener),this.touchListener=null),this.mouseListener&&!nC(this.node,WS)&&(ay.removeListener(this.mouseListener),this.mouseListener=null)},t.getCapturingTargets=function(e,t){for(var n=this._node.parent;n;)n.eventProcessor.capturingTargets&&n.eventProcessor.capturingTargets.hasEventListener(e)&&t.push(n),n=n.parent},t.getBubblingTargets=function(e,t){for(var n=this._node.parent;n;)n.eventProcessor.bubblingTargets&&n.eventProcessor.bubblingTargets.hasEventListener(e)&&t.push(n),n=n.parent},t._checknSetupSysEvent=function(t){var n=this,i=!1,o=!1;return-1!==qS.indexOf(t)?(this.touchListener||(this.touchListener=s.EventListener.create({event:s.EventListener.TOUCH_ONE_BY_ONE,swallowTouches:!0,owner:this._node,mask:tC(this._node,e._comp),onTouchBegan:XS,onTouchMoved:YS,onTouchEnded:KS,onTouchCancelled:QS}),ay.addListener(this.touchListener,this._node),i=!0),o=!0):-1!==WS.indexOf(t)&&(this.mouseListener||(this.mouseListener=s.EventListener.create({event:s.EventListener.MOUSE,_previousIn:!1,owner:this._node,mask:tC(this._node,e._comp),onMouseDown:JS,onMouseMove:ZS,onMouseUp:$S,onMouseScroll:eC}),ay.addListener(this.mouseListener,this._node),i=!0),o=!0),i&&!this._node.activeInHierarchy&&s.director.getScheduler().schedule((function(){n._node.activeInHierarchy||ay.pauseTarget(n._node)}),this._node,0,0,0,!1),o},t._onDispatch=function(e,t,n,i){if("boolean"==typeof n?(i=n,n=void 0):i=!!i,t){var o=null;return(o=i?this.capturingTargets=this.capturingTargets||new In:this.bubblingTargets=this.bubblingTargets||new In).hasEventListener(e,t,n)||o.on(e,t,n),t}R(6800)},t._offDispatch=function(e,t,n,i){if("boolean"==typeof n?(i=n,n=void 0):i=!!i,t){var o=i?this.capturingTargets:this.bubblingTargets;o&&o.off(e,t,n)}else this.capturingTargets&&this.capturingTargets.removeAll(e),this.bubblingTargets&&this.bubblingTargets.removeAll(e)},Q(e,[{key:"node",get:function(){return this._node}}]),e}());gE._comp=null,s.NodeEventProcessor=gE;var yE=new _i(0,1,0),xE=new _i,SE=new yi,CE=(iC=al("cc.AmbientInfo"),oC=Fl(Xt),iC((uC=function(){function e(){se(this,"_skyColor",sC,this),se(this,"_skyIllum",cC,this),se(this,"_groundAlbedo",lC,this),this._resource=null}return e.prototype.activate=function(e){this._resource=e,this._resource.initialize(this)},Q(e,[{key:"skyColor",get:function(){return this._skyColor},set:function(e){this._skyColor.set(e),this._resource&&(this._resource.skyColor=this._skyColor)}},{key:"skyIllum",get:function(){return this._skyIllum},set:function(e){this._skyIllum=e,this._resource&&(this._resource.skyIllum=this.skyIllum)}},{key:"groundAlbedo",get:function(){return this._groundAlbedo},set:function(e){this._groundAlbedo.set(e),this._resource&&(this._resource.groundAlbedo=this._groundAlbedo)}}]),e}(),sC=ce((aC=uC).prototype,"_skyColor",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ui(51,128,204,1)}}),cC=ce(aC.prototype,"_skyIllum",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return so.SKY_ILLUM}}),lC=ce(aC.prototype,"_groundAlbedo",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ui(51,51,51,255)}}),ce(aC.prototype,"skyColor",[Cl],Object.getOwnPropertyDescriptor(aC.prototype,"skyColor"),aC.prototype),ce(aC.prototype,"skyIllum",[Cl,oC],Object.getOwnPropertyDescriptor(aC.prototype,"skyIllum"),aC.prototype),ce(aC.prototype,"groundAlbedo",[Cl],Object.getOwnPropertyDescriptor(aC.prototype,"groundAlbedo"),aC.prototype),rC=aC))||rC);s.AmbientInfo=CE;var TE=(fC=al("cc.SkyboxInfo"),_C=Fl(jd),mC=Fl(jd),fC((xC=function(){function e(){se(this,"_envmap",dC,this),se(this,"_isRGBE",vC,this),se(this,"_enabled",gC,this),se(this,"_useIBL",yC,this),this._resource=null}return e.prototype.activate=function(e){this._resource=e,this._resource.initialize(this),this._resource.activate()},Q(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=this._enabled))}},{key:"useIBL",get:function(){return this._useIBL},set:function(e){this._useIBL=e,this._resource&&(this._resource.useIBL=this._useIBL)}},{key:"envmap",get:function(){return this._envmap},set:function(e){this._envmap=e,this._resource&&(this._resource.envmap=this._envmap)}},{key:"isRGBE",get:function(){return this._isRGBE},set:function(e){this._isRGBE=e,this._resource&&(this._resource.isRGBE=this._isRGBE)}}]),e}(),dC=ce((hC=xC).prototype,"_envmap",[_C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),vC=ce(hC.prototype,"_isRGBE",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),gC=ce(hC.prototype,"_enabled",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),yC=ce(hC.prototype,"_useIBL",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ce(hC.prototype,"enabled",[Cl],Object.getOwnPropertyDescriptor(hC.prototype,"enabled"),hC.prototype),ce(hC.prototype,"useIBL",[Cl],Object.getOwnPropertyDescriptor(hC.prototype,"useIBL"),hC.prototype),ce(hC.prototype,"envmap",[Cl,mC],Object.getOwnPropertyDescriptor(hC.prototype,"envmap"),hC.prototype),ce(hC.prototype,"isRGBE",[Cl],Object.getOwnPropertyDescriptor(hC.prototype,"isRGBE"),hC.prototype),pC=hC))||pC);s.SkyboxInfo=TE;var EE=(SC=al("cc.FogInfo"),CC=Fl(dg),TC=Tl(),EC=Fl(Xt),bC=Al(),AC=Il(),PC=Nl(),wC=Tl(),IC=Fl(Xt),RC=Il(),NC=Nl(),MC=Tl(),OC=Fl(Xt),DC=Il(),zC=Nl(),LC=Tl(),FC=Fl(Xt),UC=Pl(),BC=Il(),GC=Nl(),kC=Tl(),HC=Fl(Xt),jC=Il(),VC=Nl(),qC=Tl(),WC=Fl(Xt),XC=Il(),YC=Nl(),SC((sT=aT=function(){function e(){se(this,"_type",JC,this),se(this,"_fogColor",ZC,this),se(this,"_enabled",$C,this),se(this,"_fogDensity",eT,this),se(this,"_fogStart",tT,this),se(this,"_fogEnd",nT,this),se(this,"_fogAtten",iT,this),se(this,"_fogTop",oT,this),se(this,"_fogRange",rT,this),this._resource=null}return e.prototype.activate=function(e){this._resource=e,this._resource.initialize(this),this._resource.activate()},Q(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}},{key:"fogColor",get:function(){return this._fogColor},set:function(e){this._fogColor.set(e),this._resource&&(this._resource.fogColor=this._fogColor)}},{key:"type",get:function(){return this._type},set:function(e){this._type=e,this._resource&&(this._resource.type=e)}},{key:"fogDensity",get:function(){return this._fogDensity},set:function(e){this._fogDensity=e,this._resource&&(this._resource.fogDensity=e)}},{key:"fogStart",get:function(){return this._fogStart},set:function(e){this._fogStart=e,this._resource&&(this._resource.fogStart=e)}},{key:"fogEnd",get:function(){return this._fogEnd},set:function(e){this._fogEnd=e,this._resource&&(this._resource.fogEnd=e)}},{key:"fogAtten",get:function(){return this._fogAtten},set:function(e){this._fogAtten=e,this._resource&&(this._resource.fogAtten=e)}},{key:"fogTop",get:function(){return this._fogTop},set:function(e){this._fogTop=e,this._resource&&(this._resource.fogTop=e)}},{key:"fogRange",get:function(){return this._fogRange},set:function(e){this._fogRange=e,this._resource&&(this._resource.fogRange=e)}}]),e}(),aT.FogType=dg,JC=ce((QC=sT).prototype,"_type",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dg.LINEAR}}),ZC=ce(QC.prototype,"_fogColor",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ui("#C8C8C8")}}),$C=ce(QC.prototype,"_enabled",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),eT=ce(QC.prototype,"_fogDensity",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),tT=ce(QC.prototype,"_fogStart",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),nT=ce(QC.prototype,"_fogEnd",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 300}}),iT=ce(QC.prototype,"_fogAtten",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),oT=ce(QC.prototype,"_fogTop",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.5}}),rT=ce(QC.prototype,"_fogRange",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.2}}),ce(QC.prototype,"enabled",[Cl],Object.getOwnPropertyDescriptor(QC.prototype,"enabled"),QC.prototype),ce(QC.prototype,"fogColor",[Cl],Object.getOwnPropertyDescriptor(QC.prototype,"fogColor"),QC.prototype),ce(QC.prototype,"type",[Cl,CC],Object.getOwnPropertyDescriptor(QC.prototype,"type"),QC.prototype),ce(QC.prototype,"fogDensity",[TC,EC,bC,AC,Rl,PC],Object.getOwnPropertyDescriptor(QC.prototype,"fogDensity"),QC.prototype),ce(QC.prototype,"fogStart",[wC,IC,RC,NC],Object.getOwnPropertyDescriptor(QC.prototype,"fogStart"),QC.prototype),ce(QC.prototype,"fogEnd",[MC,OC,DC,zC],Object.getOwnPropertyDescriptor(QC.prototype,"fogEnd"),QC.prototype),ce(QC.prototype,"fogAtten",[LC,FC,UC,BC,GC],Object.getOwnPropertyDescriptor(QC.prototype,"fogAtten"),QC.prototype),ce(QC.prototype,"fogTop",[kC,HC,jC,VC],Object.getOwnPropertyDescriptor(QC.prototype,"fogTop"),QC.prototype),ce(QC.prototype,"fogRange",[qC,WC,XC,YC],Object.getOwnPropertyDescriptor(QC.prototype,"fogRange"),QC.prototype),KC=QC))||KC),bE=(cT=al("cc.ShadowsInfo"),lT=Fl(cg),uT=Tl(),fT=Tl(),_T=Fl(Xt),mT=Tl(),pT=Al(),hT=Fl(Xt),dT=Tl(),vT=Fl(lg),gT=Tl(),yT=Fl(Wt),xT=Tl(),ST=Fl(Xt),CT=Tl(),TT=Fl(Xt),ET=Tl(),bT=Fl(sg),AT=Tl(),PT=Fl(Yt),wT=Tl(),IT=Fl(Xt),RT=Tl(),NT=Fl(Xt),MT=Tl(),OT=bl(),DT=Al(),zT=Fl(Xt),LT=Tl(),FT=bl(),UT=Al(),BT=Fl(Xt),GT=Tl(),kT=Fl(Xt),HT=Tl(),cT((cE=function(){function e(){se(this,"_type",qT,this),se(this,"_enabled",WT,this),se(this,"_normal",XT,this),se(this,"_distance",YT,this),se(this,"_shadowColor",KT,this),se(this,"_fixedArea",QT,this),se(this,"_pcf",JT,this),se(this,"_bias",ZT,this),se(this,"_normalBias",$T,this),se(this,"_near",eE,this),se(this,"_far",tE,this),se(this,"_shadowDistance",nE,this),se(this,"_invisibleOcclusionRange",iE,this),se(this,"_orthoSize",oE,this),se(this,"_maxReceived",rE,this),se(this,"_size",aE,this),se(this,"_saturation",sE,this),this._resource=null}var t=e.prototype;return t.setPlaneFromNode=function(e){e.getWorldRotation(SE),this.normal=_i.transformQuat(xE,yE,SE),e.getWorldPosition(xE),this.distance=_i.dot(this._normal,xE)},t.activate=function(e){this._resource=e,this.pcf=Math.min(this._pcf,lg.SOFT_2X),this._resource.initialize(this),this._resource.activate()},Q(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}},{key:"type",get:function(){return this._type},set:function(e){this._type=e,this._resource&&(this._resource.type=e)}},{key:"shadowColor",get:function(){return this._shadowColor},set:function(e){this._shadowColor.set(e),this._resource&&(this._resource.shadowColor=e)}},{key:"normal",get:function(){return this._normal},set:function(e){_i.copy(this._normal,e),this._resource&&(this._resource.normal=e)}},{key:"distance",get:function(){return this._distance},set:function(e){this._distance=e,this._resource&&(this._resource.distance=e)}},{key:"saturation",get:function(){return this._saturation},set:function(e){e>1?(this._saturation=e/e,this._resource&&(this._resource.saturation=e/e)):(this._saturation=e,this._resource&&(this._resource.saturation=e))}},{key:"pcf",get:function(){return this._pcf},set:function(e){this._pcf=e,this._resource&&(this._resource.pcf=e)}},{key:"maxReceived",get:function(){return this._maxReceived},set:function(e){this._maxReceived=e,this._resource&&(this._resource.maxReceived=e)}},{key:"bias",get:function(){return this._bias},set:function(e){this._bias=e,this._resource&&(this._resource.bias=e)}},{key:"normalBias",get:function(){return this._normalBias},set:function(e){this._normalBias=e,this._resource&&(this._resource.normalBias=e)}},{key:"shadowMapSize",get:function(){return this._size.x},set:function(e){this._size.set(e,e),this._resource&&(this._resource.size.set(e,e),this._resource.shadowMapDirty=!0)}},{key:"size",get:function(){return this._size}},{key:"fixedArea",get:function(){return this._fixedArea},set:function(e){this._fixedArea=e,this._resource&&(this._resource.fixedArea=e)}},{key:"near",get:function(){return this._near},set:function(e){this._near=e,this._resource&&(this._resource.near=e)}},{key:"far",get:function(){return this._far},set:function(e){this._far=Math.min(e,2e3),this._resource&&(this._resource.far=Math.min(e,2e3))}},{key:"invisibleOcclusionRange",get:function(){return this._invisibleOcclusionRange},set:function(e){this._invisibleOcclusionRange=Math.min(e,2e3),this._resource&&(this._resource.invisibleOcclusionRange=Math.min(e,2e3))}},{key:"shadowDistance",get:function(){return this._shadowDistance},set:function(e){this._shadowDistance=Math.min(e,2e3),this._resource&&(this._resource.shadowDistance=Math.min(e,2e3))}},{key:"orthoSize",get:function(){return this._orthoSize},set:function(e){this._orthoSize=e,this._resource&&(this._resource.orthoSize=e)}}]),e}(),qT=ce((VT=cE).prototype,"_type",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return cg.Planar}}),WT=ce(VT.prototype,"_enabled",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),XT=ce(VT.prototype,"_normal",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _i(0,1,0)}}),YT=ce(VT.prototype,"_distance",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),KT=ce(VT.prototype,"_shadowColor",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ui(0,0,0,76)}}),QT=ce(VT.prototype,"_fixedArea",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),JT=ce(VT.prototype,"_pcf",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return lg.HARD}}),ZT=ce(VT.prototype,"_bias",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1e-5}}),$T=ce(VT.prototype,"_normalBias",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),eE=ce(VT.prototype,"_near",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),tE=ce(VT.prototype,"_far",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),nE=ce(VT.prototype,"_shadowDistance",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),iE=ce(VT.prototype,"_invisibleOcclusionRange",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 200}}),oE=ce(VT.prototype,"_orthoSize",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),rE=ce(VT.prototype,"_maxReceived",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 4}}),aE=ce(VT.prototype,"_size",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Ni(512,512)}}),sE=ce(VT.prototype,"_saturation",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.75}}),ce(VT.prototype,"enabled",[Cl],Object.getOwnPropertyDescriptor(VT.prototype,"enabled"),VT.prototype),ce(VT.prototype,"type",[Cl,lT],Object.getOwnPropertyDescriptor(VT.prototype,"type"),VT.prototype),ce(VT.prototype,"shadowColor",[uT],Object.getOwnPropertyDescriptor(VT.prototype,"shadowColor"),VT.prototype),ce(VT.prototype,"normal",[fT],Object.getOwnPropertyDescriptor(VT.prototype,"normal"),VT.prototype),ce(VT.prototype,"distance",[_T,mT],Object.getOwnPropertyDescriptor(VT.prototype,"distance"),VT.prototype),ce(VT.prototype,"saturation",[Cl,pT,Rl,hT,dT],Object.getOwnPropertyDescriptor(VT.prototype,"saturation"),VT.prototype),ce(VT.prototype,"pcf",[vT,gT],Object.getOwnPropertyDescriptor(VT.prototype,"pcf"),VT.prototype),ce(VT.prototype,"maxReceived",[yT,xT],Object.getOwnPropertyDescriptor(VT.prototype,"maxReceived"),VT.prototype),ce(VT.prototype,"bias",[ST,CT],Object.getOwnPropertyDescriptor(VT.prototype,"bias"),VT.prototype),ce(VT.prototype,"normalBias",[TT,ET],Object.getOwnPropertyDescriptor(VT.prototype,"normalBias"),VT.prototype),ce(VT.prototype,"shadowMapSize",[bT,AT],Object.getOwnPropertyDescriptor(VT.prototype,"shadowMapSize"),VT.prototype),ce(VT.prototype,"fixedArea",[PT,wT],Object.getOwnPropertyDescriptor(VT.prototype,"fixedArea"),VT.prototype),ce(VT.prototype,"near",[IT,RT],Object.getOwnPropertyDescriptor(VT.prototype,"near"),VT.prototype),ce(VT.prototype,"far",[NT,MT],Object.getOwnPropertyDescriptor(VT.prototype,"far"),VT.prototype),ce(VT.prototype,"invisibleOcclusionRange",[Cl,OT,DT,Rl,zT,LT],Object.getOwnPropertyDescriptor(VT.prototype,"invisibleOcclusionRange"),VT.prototype),ce(VT.prototype,"shadowDistance",[Cl,FT,UT,Rl,BT,GT],Object.getOwnPropertyDescriptor(VT.prototype,"shadowDistance"),VT.prototype),ce(VT.prototype,"orthoSize",[kT,HT],Object.getOwnPropertyDescriptor(VT.prototype,"orthoSize"),VT.prototype),jT=VT))||jT);s.ShadowsInfo=bE;var AE,PE=(lE=al("cc.SceneGlobals"),uE=Fl(TE),lE((vE=function(){function e(){se(this,"ambient",mE,this),se(this,"shadows",pE,this),se(this,"_skybox",hE,this),se(this,"fog",dE,this)}return e.prototype.activate=function(){var e=s.director.root.pipeline.pipelineSceneData;this.ambient.activate(e.ambient),this.skybox.activate(e.skybox),this.shadows.activate(e.shadows),this.fog.activate(e.fog)},Q(e,[{key:"skybox",get:function(){return this._skybox},set:function(e){this._skybox=e}}]),e}(),mE=ce((_E=vE).prototype,"ambient",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new CE}}),pE=ce(_E.prototype,"shadows",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bE}}),hE=ce(_E.prototype,"_skybox",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new TE}}),dE=ce(_E.prototype,"fog",[Cl,_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new EE}}),ce(_E.prototype,"skybox",[Cl,uE],Object.getOwnPropertyDescriptor(_E.prototype,"skybox"),_E.prototype),fE=_E))||fE);s.SceneGlobals=PE,kn(Ty.prototype,"BaseNode",[{name:"childrenCount",newName:"children.length",customGetter:function(){return this.children.length}}]),kn(aS.prototype,"Node",[{name:"width",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.width},customSetter:function(e){this._uiProps.uiTransformComp.width=e}},{name:"height",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.height},customSetter:function(e){this._uiProps.uiTransformComp.height=e}},{name:"anchorX",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.anchorX},customSetter:function(e){this._uiProps.uiTransformComp.anchorX=e}},{name:"anchorY",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.anchorY},customSetter:function(e){this._uiProps.uiTransformComp.anchorY=e}},{name:"getAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction:function(e){return e||(e=new Ni),e.set(this._uiProps.uiTransformComp.anchorPoint),e}},{name:"setAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction:function(e,t){this._uiProps.uiTransformComp.setAnchorPoint(e,t)}},{name:"getContentSize",targetName:"node.getComponent(UITransform)",customFunction:function(e){return e||(e=new Ui),e.set(this._uiProps.uiTransformComp.contentSize),e}},{name:"setContentSize",targetName:"node.getComponent(UITransform)",customFunction:function(e,t){"number"==typeof e?this._uiProps.uiTransformComp.setContentSize(e,t):this._uiProps.uiTransformComp.setContentSize(e)}}]),Hn(PE.prototype,"SceneGlobals.prototype",[{name:"aspect"},{name:"selfShadow"},{name:"linear"},{name:"packing"},{name:"autoAdapt"}]),Hn(aS.prototype,"Node.prototype",[{name:"addLayer"},{name:"removeLayer"}]),Hn(pp,"Layers",[{name:"All"},{name:"RaycastMask"},{name:"check"}]),kn(pp,"Layers",[{name:"Default",newName:"DEFAULT",target:pp.Enum,targetName:"Layers.Enum"},{name:"Always",newName:"ALWAYS",target:pp.Enum,targetName:"Layers.Enum"},{name:"IgnoreRaycast",newName:"IGNORE_RAYCAST",target:pp.Enum,targetName:"Layers.Enum"},{name:"Gizmos",newName:"GIZMOS",target:pp.Enum,targetName:"Layers.Enum"},{name:"Editor",newName:"EDITOR",target:pp.Enum,targetName:"Layers.Enum"},{name:"UI",newName:"UI_3D",target:pp.Enum,targetName:"Layers.Enum"},{name:"UI2D",newName:"UI_2D",target:pp.Enum,targetName:"Layers.Enum"},{name:"SceneGizmo",newName:"SCENE_GIZMO",target:pp.Enum,targetName:"Layers.Enum"},{name:"makeInclusiveMask",newName:"makeMaskInclude",target:pp,targetName:"Layers"},{name:"makeExclusiveMask",newName:"makeMaskExclude",target:pp,targetName:"Layers"}]),Hn(pp.Enum,"Layers.Enum",[{name:"ALWAYS"}]),Hn(pp.BitMask,"Layers.BitMask",[{name:"ALWAYS"}]);var wE,IE,RE,NE,ME=xn.Flags.HideInHierarchy,OE=xn.Flags.DontSave,DE=e("dM",al("cc.PrivateNode")(AE=function(e){function t(t){var n;return w(12003,(n=e.call(this,t)||this).name),n.hideFlags|=OE|ME,n}return Z(t,e),t}(aS))||AE);s.PrivateNode=DE;var zE=e("dI",al("cc.Scene")((ce((IE=function(e){Z(i,e);var n=i.prototype;function i(t){var n;return se(n=e.call(this,t)||this,"autoReleaseAssets",RE,oe(n)),se(n,"_globals",NE,oe(n)),n._renderScene=null,n.dependAssets=null,n._inited=void 0,n._prefabSyncedInLiveReload=!1,n._pos=_i.ZERO,n._rot=yi.IDENTITY,n._scale=_i.ONE,n._mat=Pi.IDENTITY,n._dirtyFlags=0,n._lpos=_i.ZERO,n._lrot=yi.IDENTITY,n._lscale=_i.ONE,n._activeInHierarchy=!1,s.director&&s.director.root&&(n._renderScene=s.director.root.createScene({})),n._inited=!s.game||!s.game._isCloning,n._init(),n}return n._updateScene=function(){this._scene=this},n._init=function(){},n.destroy=function(){var e=xn.prototype.destroy.call(this);if(e)for(var t=this._children,n=0;n<t.length;++n)t[n].active=!1;return this._renderScene&&s.director.root.destroyScene(this._renderScene),this._active=!1,this._activeInHierarchy=!1,e},n.addComponent=function(){throw new Error(W(3822))},n._onHierarchyChanged=function(){},n._onBatchCreated=function(t){e.prototype._onBatchCreated.call(this,t);for(var n=this._children.length,i=0;i<n;++i)this.children[i]._siblingIndex=i,this._children[i]._onBatchCreated(t);Ny(this)},n.getPosition=function(e){return _i.copy(e||new _i,_i.ZERO)},n.getRotation=function(e){return yi.copy(e||new yi,yi.IDENTITY)},n.getScale=function(e){return _i.copy(e||new _i,_i.ONE)},n.getWorldPosition=function(e){return _i.copy(e||new _i,_i.ZERO)},n.getWorldRotation=function(e){return yi.copy(e||new yi,yi.IDENTITY)},n.getWorldScale=function(e){return _i.copy(e||new _i,_i.ONE)},n.getWorldMatrix=function(e){return Pi.copy(e||new Pi,Pi.IDENTITY)},n.getWorldRS=function(e){return Pi.copy(e||new Pi,Pi.IDENTITY)},n.getWorldRT=function(e){return Pi.copy(e||new Pi,Pi.IDENTITY)},n.updateWorldTransform=function(){},n._instantiate=function(){},n._load=function(){this._inited||(this._onBatchCreated(t),this._inited=!0),this.walk(Ty._setScene)},n._activate=function(e){e=!1!==e,s.director._nodeActivator.activateNode(this,e),this._globals.activate()},Q(i,[{key:"renderScene",get:function(){return this._renderScene}},{key:"globals",get:function(){return this._globals}},{key:"native",get:function(){return this._nativeObj}},{key:"position",get:function(){return _i.ZERO}},{key:"worldPosition",get:function(){return _i.ZERO}},{key:"rotation",get:function(){return yi.IDENTITY}},{key:"worldRotation",get:function(){return yi.IDENTITY}},{key:"scale",get:function(){return _i.ONE}},{key:"worldScale",get:function(){return _i.ONE}},{key:"eulerAngles",get:function(){return _i.ZERO}},{key:"worldMatrix",get:function(){return Pi.IDENTITY}}]),i}(Ty)).prototype,"globals",[Cl],Object.getOwnPropertyDescriptor(IE.prototype,"globals"),IE.prototype),RE=ce(IE.prototype,"autoReleaseAssets",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),NE=ce(IE.prototype,"_globals",[_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new PE}}),wE=IE))||wE);function LE(e,t){if(!t){var n=s.director.getScene();if(!n)return null;t=n}return t.getChildByPath(e)}s.Scene=zE,s.find=LE;var FE=dt.fastRemoveAt,UE=xn.Flags.IsStartCalled,BE=xn.Flags.IsOnEnableCalled;function GE(e,t){for(var n=t.constructor._executionOrder,i=t._id,o=0,r=e.length-1,a=r>>>1;o<=r;a=o+r>>>1){var s=e[a],c=s.constructor._executionOrder;if(c>n)r=a-1;else if(c<n)o=a+1;else{var l=s._id;if(l>i)r=a-1;else{if(!(l<i))return a;o=a+1}}}return~o}function kE(e,t){for(var n=e.array,i=e.i+1;i<n.length;){var o=n[i];o.node._activeInHierarchy?++i:(e.removeAt(i),t&&(o._objFlags&=~t))}}xn.Flags.IsEditorOnEnableCalled;var HE=function(e){this._zero=void 0,this._neg=void 0,this._pos=void 0,this._invoke=void 0;var t=Te;this._zero=new t([]),this._neg=new t([]),this._pos=new t([]),this._invoke=e};function jE(e,t){return e.constructor._executionOrder-t.constructor._executionOrder}HE.stableRemoveInactive=kE;var VE=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.add=function(e){var t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).array.push(e)},n.remove=function(e){var t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).fastRemove(e)},n.cancelInactive=function(e){kE(this._zero,e),kE(this._neg,e),kE(this._pos,e)},n.invoke=function(){var e=this._neg;e.array.length>0&&(e.array.sort(jE),this._invoke(e),e.array.length=0),this._invoke(this._zero),this._zero.array.length=0;var t=this._pos;t.array.length>0&&(t.array.sort(jE),this._invoke(t),t.array.length=0)},t}(HE),qE=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.add=function(e){var t=e.constructor._executionOrder;if(0===t)this._zero.array.push(e);else{var n=t<0?this._neg.array:this._pos.array,i=GE(n,e);i<0&&n.splice(~i,0,e)}},n.remove=function(e){var t=e.constructor._executionOrder;if(0===t)this._zero.fastRemove(e);else{var n=t<0?this._neg:this._pos,i=GE(n.array,e);i>=0&&n.removeAt(i)}},n.invoke=function(e){this._neg.array.length>0&&this._invoke(this._neg,e),this._invoke(this._zero,e),this._pos.array.length>0&&this._invoke(this._pos,e)},t}(HE);function WE(e,t,n){return function(i,o){try{t(i,o)}catch(t){s._throw(t);var r=i.array;for(n&&(r[i.i]._objFlags|=n),++i.i;i.i<r.length;++i.i)try{e(r[i.i],o)}catch(e){s._throw(e),n&&(r[i.i]._objFlags|=n)}}}}var XE=WE((function(e){e.start(),e._objFlags|=UE}),(function(e){var t=e.array;for(e.i=0;e.i<t.length;++e.i){var n=t[e.i];n.start(),n._objFlags|=UE}}),UE),YE=WE((function(e,t){e.update(t)}),(function(e,t){var n=e.array;for(e.i=0;e.i<n.length;++e.i)n[e.i].update(t)})),KE=WE((function(e,t){e.lateUpdate(t)}),(function(e,t){var n=e.array;for(e.i=0;e.i<n.length;++e.i)n[e.i].lateUpdate(t)})),QE=function(e){var t=s.director._compScheduler,n=e.array;for(e.i=0;e.i<n.length;++e.i){var i=n[e.i];i._enabled&&(i.onEnable(),!i.node._activeInHierarchy||t._onEnabled(i))}},JE=(e("fj",function(){function e(){this._deferredComps=[],this.unscheduleAll()}var t=e.prototype;return t.unscheduleAll=function(){this.startInvoker=new VE(XE),this.updateInvoker=new qE(YE),this.lateUpdateInvoker=new qE(KE),this._updating=!1},t._onEnabled=function(e){s.director.getScheduler().resumeTarget(e),e._objFlags|=BE,this._updating?this._deferredComps.push(e):this._scheduleImmediate(e)},t._onDisabled=function(e){s.director.getScheduler().pauseTarget(e),e._objFlags&=~BE;var t=this._deferredComps.indexOf(e);t>=0?FE(this._deferredComps,t):(!e.start||e._objFlags&UE||this.startInvoker.remove(e),e.update&&this.updateInvoker.remove(e),e.lateUpdate&&this.lateUpdateInvoker.remove(e))},t.enableComp=function(e,t){if(!(e._objFlags&BE)){if(e.onEnable){if(t)return void t.add(e);if(e.onEnable(),!e.node._activeInHierarchy)return}this._onEnabled(e)}},t.disableComp=function(e){e._objFlags&BE&&(e.onDisable&&e.onDisable(),this._onDisabled(e))},t.startPhase=function(){this._updating=!0,this.startInvoker.invoke(),this._startForNewComps()},t.updatePhase=function(e){this.updateInvoker.invoke(e)},t.lateUpdatePhase=function(e){this.lateUpdateInvoker.invoke(e),this._updating=!1,this._startForNewComps()},t._startForNewComps=function(){this._deferredComps.length>0&&(this._deferredSchedule(),this.startInvoker.invoke())},t._scheduleImmediate=function(e){"function"!=typeof e.start||e._objFlags&UE||this.startInvoker.add(e),"function"==typeof e.update&&this.updateInvoker.add(e),"function"==typeof e.lateUpdate&&this.lateUpdateInvoker.add(e)},t._deferredSchedule=function(){for(var e=this._deferredComps,t=0,n=e.length;t<n;t++)this._scheduleImmediate(e[t]);e.length=0},e}()),xn.Flags.IsPreloadStarted),ZE=xn.Flags.IsOnLoadStarted,$E=xn.Flags.IsOnLoadCalled,eb=xn.Flags.Deactivating,tb=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.add=function(e){this._zero.array.push(e)},n.remove=function(e){this._zero.fastRemove(e)},n.cancelInactive=function(e){HE.stableRemoveInactive(this._zero,e)},n.invoke=function(){this._invoke(this._zero),this._zero.array.length=0},t}(HE),nb=WE((function(e){e.__preload()}),(function(e){var t=e.array;for(e.i=0;e.i<t.length;++e.i)t[e.i].__preload()})),ib=WE((function(e){e.onLoad(),e._objFlags|=$E}),(function(e){var t=e.array;for(e.i=0;e.i<t.length;++e.i){var n=t[e.i];n.onLoad(),n._objFlags|=$E}}),$E),ob=new ht(4);function rb(e,t,n){t?e._removeComponent(t):dt.removeAt(e._components,n)}ob.get=function(){var e=this._get()||{preload:new tb(nb),onLoad:new VE(ib),onEnable:new VE(QE)};e.preload._zero.i=-1;var t=e.onLoad;return t._zero.i=-1,t._neg.i=-1,t._pos.i=-1,(t=e.onEnable)._zero.i=-1,t._neg.i=-1,t._pos.i=-1,e},e("dL",function(){function e(){this.resetComp=void 0,this.reset()}var t=e.prototype;return t.reset=function(){this._activatingStack=[]},t.activateNode=function(e,t){if(t){var n=ob.get();this._activatingStack.push(n),this._activateNodeRecursively(e,n.preload,n.onLoad,n.onEnable),n.preload.invoke(),n.onLoad.invoke(),n.onEnable.invoke(),this._activatingStack.pop(),ob.put(n)}else{this._deactivateNodeRecursively(e);for(var i,o=ae(this._activatingStack);!(i=o()).done;){var r=i.value;r.preload.cancelInactive(JE),r.onLoad.cancelInactive(ZE),r.onEnable.cancelInactive()}}e.emit("active-in-hierarchy-changed",e)},t.activateComp=function(e,t,n,i){if(Cn(e,!0)&&(e._objFlags&JE||(e._objFlags|=JE,e.__preload&&(t?t.add(e):e.__preload())),e._objFlags&ZE||(e._objFlags|=ZE,e.onLoad?n?n.add(e):(e.onLoad(),e._objFlags|=$E):e._objFlags|=$E),e._enabled)){if(!e.node._activeInHierarchy)return;s.director._compScheduler.enableComp(e,i)}},t.destroyComp=function(e){s.director._compScheduler.disableComp(e),e.onDestroy&&e._objFlags&$E&&e.onDestroy()},t._activateNodeRecursively=function(e,t,n,i){if(e._objFlags&eb)R(3816,e.name);else{e._activeInHierarchy=!0;for(var o=e._components.length,r=0;r<o;++r){var a=e._components[r];a instanceof s.Component?this.activateComp(a,t,n,i):(rb(e,a,r),--r,--o)}e._childArrivalOrder=e._children.length;for(var c=0,l=e._children.length;c<l;++c){var u=e._children[c];u._active&&this._activateNodeRecursively(u,t,n,i)}e._onPostActivated(!0)}},t._deactivateNodeRecursively=function(e){e._objFlags|=eb,e._activeInHierarchy=!1;for(var t=e._components.length,n=0;n<t;++n){var i=e._components[n];if(i._enabled&&(s.director._compScheduler.disableComp(i),e._activeInHierarchy))return void(e._objFlags&=~eb)}for(var o=0,r=e._children.length;o<r;++o){var a=e._children[o];if(a._activeInHierarchy&&(this._deactivateNodeRecursively(a),e._activeInHierarchy))return void(e._objFlags&=~eb)}e._onPostActivated(!1),e._objFlags&=~eb},e}());var ab,sb,cb,lb,ub,fb,_b,mb,pb=e("dj",al("cc.SceneAsset")((lb=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"scene",cb,oe(t)),t}Z(t,e);var n=t.prototype;return n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.scene=new zE("New Scene")},n.validate=function(){return!!this.scene},t}(Ru),cb=ce((sb=lb).prototype,"scene",[Cl,_l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ab=sb))||ab);s.SceneAsset=pb;var hb,db,vb,gb,yb=e("dk",al("cc.TextAsset")((mb=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"text",_b,oe(t)),t}return Z(t,e),t.prototype.toString=function(){return this.text},t}(Ru),_b=ce((fb=mb).prototype,"text",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),ub=fb))||ub);s.TextAsset=yb;var xb=e("dl",al("cc.JsonAsset")((gb=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return se(t=e.call.apply(e,[this].concat(i))||this,"json",vb,oe(t)),t}return Z(t,e),t}(Ru),vb=ce((db=gb).prototype,"json",[_l,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),hb=db))||hb);s.JsonAsset=xb}}}));
 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/mesh-c8768986.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js"], function (t) {
  "use strict";

  var e, r, i, n, s, a, u, o, h, f, c, d, l, v, _, m, g, p, w, x, b, T, y, A, M, E, I, B, P, R, O, U, S, N, V, F, C, L, D;

  return {
    setters: [function (t) {
      e = t.e2, r = t.g0, i = t.gp, n = t.l, s = t.dm, a = t.dn, u = t.w, o = t.bU, h = t.t, f = t.b3, c = t.aq, d = t.z, l = t.G, v = t.F, _ = t.gq, m = t.eP, g = t.gr, p = t.gs, w = t.gt, x = t.gu, b = t.c5, T = t.ef, y = t.ec, A = t.d, M = t.aH, E = t.di, I = t.e9, B = t.c9, P = t.b4, R = t.bd, O = t.x, U = t.df, S = t.eg, N = t.y, V = t.eh, F = t.ed, C = t.cU, L = t.ei, D = t.dB;
    }],
    execute: function execute() {
      var k,
          G,
          z,
          H,
          W,
          X = t("B", function () {
        function t() {
          this._arrayBufferOrPaddings = [], this._length = 0;
        }

        var e = t.prototype;
        return e.setNextAlignment = function (t) {
          if (0 !== t) {
            var e = this._length % t;

            if (0 !== e) {
              var r = t - e;
              this._arrayBufferOrPaddings.push(r), this._length += r;
            }
          }
        }, e.addBuffer = function (t) {
          var e = this._length;
          return this._arrayBufferOrPaddings.push(t), this._length += t.byteLength, e;
        }, e.getLength = function () {
          return this._length;
        }, e.getCombined = function () {
          var t = new Uint8Array(this._length),
              e = 0;
          return this._arrayBufferOrPaddings.forEach(function (r) {
            "number" == typeof r ? e += r : (t.set(new Uint8Array(r), e), e += r.byteLength);
          }), t.buffer;
        }, t;
      }()),
          j = function () {
        function t(t, e) {
          if (this._mesh = void 0, this._subMeshRenderings = [], this._mesh = t, this._mesh.struct.morph) {
            var r = this._mesh.struct.primitives.length;
            this._subMeshRenderings = new Array(r).fill(null);

            for (var n = 0; n < r; ++n) {
              var s = this._mesh.struct.morph.subMeshMorphs[n];
              s && (s.targets.length > i.MAX_MORPH_TARGET_COUNT ? this._subMeshRenderings[n] = new J(this._mesh, n, this._mesh.struct.morph, e) : this._subMeshRenderings[n] = new q(this._mesh, n, this._mesh.struct.morph, e));
            }
          }
        }

        return t.prototype.createInstance = function () {
          for (var t = this, e = this._mesh.struct.primitives.length, r = new Array(e), i = 0; i < e; ++i) {
            var n, s;
            r[i] = null !== (n = null === (s = this._subMeshRenderings[i]) || void 0 === s ? void 0 : s.createInstance()) && void 0 !== n ? n : null;
          }

          return {
            setWeights: function setWeights(t, e) {
              var i;
              null === (i = r[t]) || void 0 === i || i.setWeights(e);
            },
            requiredPatches: function requiredPatches(e) {
              g(t._mesh.struct.morph);
              var i = t._mesh.struct.morph.subMeshMorphs[e],
                  n = r[e];
              if (null === n) return null;
              var s = [{
                name: "CC_USE_MORPH",
                value: !0
              }, {
                name: "CC_MORPH_TARGET_COUNT",
                value: i.targets.length
              }];
              return i.attributes.includes(f.ATTR_POSITION) && s.push({
                name: "CC_MORPH_TARGET_HAS_POSITION",
                value: !0
              }), i.attributes.includes(f.ATTR_NORMAL) && s.push({
                name: "CC_MORPH_TARGET_HAS_NORMAL",
                value: !0
              }), i.attributes.includes(f.ATTR_TANGENT) && s.push({
                name: "CC_MORPH_TARGET_HAS_TANGENT",
                value: !0
              }), s.push.apply(s, n.requiredPatches()), s;
            },
            adaptPipelineState: function adaptPipelineState(t, e) {
              var i;
              null === (i = r[t]) || void 0 === i || i.adaptPipelineState(e);
            },
            destroy: function destroy() {
              for (var t, e = h(r); !(t = e()).done;) {
                var i = t.value;
                null == i || i.destroy();
              }
            }
          };
        }, t;
      }(),
          q = function () {
        function t(t, e, r, i) {
          this._gfxDevice = void 0, this._subMeshMorph = void 0, this._textureInfo = void 0, this._attributes = void 0, this._verticesCount = void 0, this._gfxDevice = i;
          var n = r.subMeshMorphs[e];
          this._subMeshMorph = n, K(t, e, i);
          var s = t.struct.vertexBundles[t.struct.primitives[e].vertexBundelIndices[0]].view.count;
          this._verticesCount = s;
          var a = n.targets.length,
              u = Y(i, s * a);
          this._textureInfo = {
            width: u.width,
            height: u.height
          }, this._attributes = n.attributes.map(function (e, r) {
            var i = u.create(),
                a = i.valueView;
            return n.targets.forEach(function (e, i) {
              for (var n = e.displacements[r], u = new Float32Array(t.data.buffer, t.data.byteOffset + n.offset, n.count), o = s * i * 4, h = 0; h < s; ++h) {
                a[o + 4 * h + 0] = u[3 * h + 0], a[o + 4 * h + 1] = u[3 * h + 1], a[o + 4 * h + 2] = u[3 * h + 2];
              }
            }), i.updatePixels(), {
              name: e,
              morphTexture: i
            };
          });
        }

        var e = t.prototype;
        return e.destroy = function () {
          for (var t, e = h(this._attributes); !(t = e()).done;) {
            t.value.morphTexture.destroy();
          }
        }, e.createInstance = function () {
          var t = this,
              e = new Q(this._gfxDevice, this._subMeshMorph.targets.length);
          return e.setMorphTextureInfo(this._textureInfo.width, this._textureInfo.height), e.setVerticesCount(this._verticesCount), e.commit(), {
            setWeights: function setWeights(t) {
              e.setWeights(t), e.commit();
            },
            requiredPatches: function requiredPatches() {
              return [{
                name: "CC_MORPH_TARGET_USE_TEXTURE",
                value: !0
              }];
            },
            adaptPipelineState: function adaptPipelineState(r) {
              for (var n, s = h(t._attributes); !(n = s()).done;) {
                var a = n.value,
                    o = void 0;

                switch (a.name) {
                  case f.ATTR_POSITION:
                    o = x;
                    break;

                  case f.ATTR_NORMAL:
                    o = w;
                    break;

                  case f.ATTR_TANGENT:
                    o = p;
                    break;

                  default:
                    u("Unexpected attribute!");
                }

                void 0 !== o && (r.bindSampler(o, a.morphTexture.sampler), r.bindTexture(o, a.morphTexture.texture));
              }

              r.bindBuffer(i.BINDING, e.buffer), r.update();
            },
            destroy: function destroy() {}
          };
        }, t;
      }(),
          J = function () {
        function t(t, e, r, i) {
          this._gfxDevice = void 0, this._attributes = [], this._gfxDevice = i;
          var n = r.subMeshMorphs[e];
          K(t, e, i), this._attributes = n.attributes.map(function (e, r) {
            return {
              name: e,
              targets: n.targets.map(function (e) {
                return {
                  displacements: new Float32Array(t.data.buffer, t.data.byteOffset + e.displacements[r].offset, e.displacements[r].count)
                };
              })
            };
          });
        }

        return t.prototype.createInstance = function () {
          return new Z(this, this._attributes[0].targets[0].displacements.length / 3, this._gfxDevice);
        }, e(t, [{
          key: "data",
          get: function get() {
            return this._attributes;
          }
        }]), t;
      }(),
          Z = function () {
        function t(t, e, r) {
          this._attributes = void 0, this._owner = void 0, this._morphUniforms = void 0, this._owner = t, this._morphUniforms = new Q(r, 0);
          var i = Y(r, e);
          this._morphUniforms.setMorphTextureInfo(i.width, i.height), this._morphUniforms.commit(), this._attributes = this._owner.data.map(function (t) {
            var e = i.create();
            return {
              attributeName: t.name,
              morphTexture: e
            };
          });
        }

        var e = t.prototype;
        return e.setWeights = function (t) {
          for (var e = 0; e < this._attributes.length; ++e) {
            var i = this._attributes[e],
                n = i.morphTexture.valueView,
                s = this._owner.data[e];
            r(t.length === s.targets.length);

            for (var a = 0; a < s.targets.length; ++a) {
              var u = s.targets[a].displacements,
                  o = t[a],
                  h = u.length / 3;
              if (0 === a) for (var f = 0; f < h; ++f) {
                n[4 * f + 0] = u[3 * f + 0] * o, n[4 * f + 1] = u[3 * f + 1] * o, n[4 * f + 2] = u[3 * f + 2] * o;
              } else if (0 !== o) for (var c = 0; c < h; ++c) {
                n[4 * c + 0] += u[3 * c + 0] * o, n[4 * c + 1] += u[3 * c + 1] * o, n[4 * c + 2] += u[3 * c + 2] * o;
              }
            }

            i.morphTexture.updatePixels();
          }
        }, e.requiredPatches = function () {
          return [{
            name: "CC_MORPH_TARGET_USE_TEXTURE",
            value: !0
          }, {
            name: "CC_MORPH_PRECOMPUTED",
            value: !0
          }];
        }, e.adaptPipelineState = function (t) {
          for (var e, r = h(this._attributes); !(e = r()).done;) {
            var n = e.value,
                s = void 0;

            switch (n.attributeName) {
              case f.ATTR_POSITION:
                s = x;
                break;

              case f.ATTR_NORMAL:
                s = w;
                break;

              case f.ATTR_TANGENT:
                s = p;
                break;

              default:
                u("Unexpected attribute!");
            }

            void 0 !== s && (t.bindSampler(s, n.morphTexture.sampler), t.bindTexture(s, n.morphTexture.texture));
          }

          t.bindBuffer(i.BINDING, this._morphUniforms.buffer), t.update();
        }, e.destroy = function () {
          this._morphUniforms.destroy();

          for (var t = 0; t < this._attributes.length; ++t) {
            this._attributes[t].morphTexture.destroy();
          }
        }, t;
      }(),
          Q = function () {
        function t(t, e) {
          this._targetCount = void 0, this._localBuffer = void 0, this._remoteBuffer = void 0, this._targetCount = e, this._localBuffer = new DataView(new ArrayBuffer(i.SIZE)), this._remoteBuffer = t.createBuffer(new c(d.UNIFORM | d.TRANSFER_DST, l.HOST | l.DEVICE, i.SIZE, i.SIZE));
        }

        var s = t.prototype;
        return s.destroy = function () {
          this._remoteBuffer.destroy();
        }, s.setWeights = function (t) {
          r(t.length === this._targetCount);

          for (var e = 0; e < t.length; ++e) {
            this._localBuffer.setFloat32(i.OFFSET_OF_WEIGHTS + 4 * e, t[e], n.sys.isLittleEndian);
          }
        }, s.setMorphTextureInfo = function (t, e) {
          this._localBuffer.setFloat32(i.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH, t, n.sys.isLittleEndian), this._localBuffer.setFloat32(i.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT, e, n.sys.isLittleEndian);
        }, s.setVerticesCount = function (t) {
          this._localBuffer.setFloat32(i.OFFSET_OF_VERTICES_COUNT, t, n.sys.isLittleEndian);
        }, s.commit = function () {
          this._remoteBuffer.update(this._localBuffer.buffer);
        }, e(t, [{
          key: "buffer",
          get: function get() {
            return this._remoteBuffer;
          }
        }]), t;
      }();

      function Y(t, e) {
        var r, i, n, h;
        t.hasFeature(v.TEXTURE_FLOAT) ? (r = e, n = 16, i = a.PixelFormat.RGBA32F, h = Float32Array) : (r = 4 * e, n = 4, i = a.PixelFormat.RGBA8888, h = Uint8Array);

        var f = function (t) {
          t < 5 && (t = 5);

          var e = _(t),
              r = m(e),
              i = r >> 1;

          return {
            width: 1 << (1 & r ? i + 1 : i),
            height: 1 << i
          };
        }(r),
            c = f.width,
            d = f.height;

        return {
          width: c,
          height: d,
          create: function create() {
            var e = new ArrayBuffer(c * d * n),
                r = new Float32Array(e),
                f = h === Float32Array ? r : new h(e),
                l = new s({
              width: c,
              height: d,
              _data: f,
              _compressed: !1,
              format: i
            }),
                v = new a();
            v.setFilters(a.Filter.NEAREST, a.Filter.NEAREST), v.setMipFilter(a.Filter.NONE), v.setWrapMode(a.WrapMode.CLAMP_TO_EDGE, a.WrapMode.CLAMP_TO_EDGE, a.WrapMode.CLAMP_TO_EDGE), v.image = l, v.getGFXTexture() || u("Unexpected: failed to create morph texture?");

            var _ = o.getSampler(t, v.getSamplerHash());

            return {
              get texture() {
                return v.getGFXTexture();
              },

              get sampler() {
                return _;
              },

              get valueView() {
                return r;
              },

              destroy: function destroy() {
                v.destroy();
              },
              updatePixels: function updatePixels() {
                v.uploadData(f);
              }
            };
          }
        };
      }

      function K(t, e, r) {
        t.renderingSubMeshes[e].enableVertexIdChannel(r);
      }

      function $(t) {
        switch (t) {
          case 1:
            return Uint8Array;

          case 2:
            return Uint16Array;

          case 4:
            return Uint32Array;

          default:
            return Uint8Array;
        }
      }

      var tt = new b(),
          et = new b(),
          rt = new Uint8Array(),
          it = t("M", T("cc.Mesh")((W = function (t) {
        function r() {
          var e;
          return (e = t.call(this) || this).morphRendering = null, V(e, "_struct", z, F(e)), V(e, "_hash", H, F(e)), e._data = rt, e._initialized = !1, e._renderingSubMeshes = null, e._boneSpaceBounds = new Map(), e._jointBufferIndices = null, e;
        }

        y(r, t);
        var i = r.prototype;
        return i.initialize = function () {
          if (!this._initialized) {
            this._initialized = !0;

            for (var t = this._data.buffer, e = n.director.root.device, r = this._createVertexBuffers(e, t), i = [], s = 0; s < this._struct.primitives.length; s++) {
              var a = this._struct.primitives[s];

              if (0 !== a.vertexBundelIndices.length) {
                var u = null,
                    o = null;

                if (a.indexView) {
                  var h = a.indexView,
                      f = h.stride,
                      _ = h.length;

                  if (4 === f && !e.hasFeature(v.ELEMENT_INDEX_UINT)) {
                    var m = this._struct.vertexBundles[a.vertexBundelIndices[0]].view.count;

                    if (m >= 65536) {
                      A(10001, m, 65536);
                      continue;
                    }

                    f >>= 1, _ >>= 1;
                  }

                  u = e.createBuffer(new c(d.INDEX, l.DEVICE, _, f)), o = new ($(h.stride))(t, h.offset, h.count), h.stride !== f && (o = $(f).from(o)), u.update(o);
                }

                var g = a.vertexBundelIndices.map(function (t) {
                  return r[t];
                }),
                    p = [];
                if (a.vertexBundelIndices.length > 0) for (var w = a.vertexBundelIndices[0], x = this._struct.vertexBundles[w].attributes, b = 0; b < x.length; ++b) {
                  var T = x[b];
                  p[b] = new M(T.name, T.format, T.isInstanced, T.stream, T.isInstanced, T.location);
                }
                var y = new E(g, p, a.primitiveMode, u);
                y.mesh = this, y.subMeshIdx = s, i.push(y);
              }
            }

            this._renderingSubMeshes = i, this._struct.morph && (this.morphRendering = function (t, e) {
              return new j(t, e);
            }(this, e));
          }
        }, i.destroy = function () {
          return this.destroyRenderingMesh(), t.prototype.destroy.call(this);
        }, i.destroyRenderingMesh = function () {
          if (this._renderingSubMeshes) {
            for (var t = 0; t < this._renderingSubMeshes.length; t++) {
              this._renderingSubMeshes[t].destroy();
            }

            this._renderingSubMeshes = null, this._initialized = !1;
          }
        }, i.assign = function (t, e) {
          this.reset({
            struct: t,
            data: e
          });
        }, i.reset = function (t) {
          this.destroyRenderingMesh(), this._struct = t.struct, this._data = t.data, this._hash = 0;
        }, i.getBoneSpaceBounds = function (t) {
          if (this._boneSpaceBounds.has(t.hash)) return this._boneSpaceBounds.get(t.hash);
          var e = [];

          this._boneSpaceBounds.set(t.hash, e);

          for (var r = [], i = t.bindposes, n = 0; n < i.length; n++) {
            e.push(new I(1 / 0, 1 / 0, 1 / 0, -1 / 0, -1 / 0, -1 / 0)), r.push(!1);
          }

          for (var s = this._struct.primitives, a = 0; a < s.length; a++) {
            var u = this.readAttribute(a, f.ATTR_JOINTS),
                o = this.readAttribute(a, f.ATTR_WEIGHTS),
                h = this.readAttribute(a, f.ATTR_POSITION);
            if (u && o && h) for (var c = Math.min(u.length / 4, o.length / 4, h.length / 3), d = 0; d < c; d++) {
              b.set(tt, h[3 * d + 0], h[3 * d + 1], h[3 * d + 2]);

              for (var l = 0; l < 4; ++l) {
                var v = 4 * d + l,
                    _ = u[v];

                if (!(0 === o[v] || _ >= i.length)) {
                  b.transformMat4(et, tt, i[_]), r[_] = !0;
                  var m = e[_];
                  b.min(m.center, m.center, et), b.max(m.halfExtents, m.halfExtents, et);
                }
              }
            }
          }

          for (var g = 0; g < i.length; g++) {
            var p = e[g];
            r[g] ? I.fromPoints(p, p.center, p.halfExtents) : e[g] = null;
          }

          return e;
        }, i.merge = function (t, e, r) {
          if (r && !this.validateMergingMesh(t)) return !1;
          var i = new b(),
              n = e && new B(),
              s = e && new I();

          if (n && e.getRotation(n), !this._initialized) {
            var a = JSON.parse(JSON.stringify(t._struct)),
                u = t._data.slice();

            if (e) {
              a.maxPosition && a.minPosition && (b.add(s.center, a.maxPosition, a.minPosition), b.multiplyScalar(s.center, s.center, .5), b.subtract(s.halfExtents, a.maxPosition, a.minPosition), b.multiplyScalar(s.halfExtents, s.halfExtents, .5), I.transform(s, s, e), b.add(a.maxPosition, s.center, s.halfExtents), b.subtract(a.minPosition, s.center, s.halfExtents));

              for (var o = 0; o < a.vertexBundles.length; o++) {
                for (var c = a.vertexBundles[o], d = 0; d < c.attributes.length; d++) {
                  if (c.attributes[d].name === f.ATTR_POSITION || c.attributes[d].name === f.ATTR_NORMAL) {
                    var l = c.attributes[d].format,
                        v = new DataView(u.buffer, c.view.offset + nt(c.attributes, d)),
                        _ = ut(v, l),
                        m = ot(v, l);

                    if (!_ || !m) continue;

                    for (var g = c.view.count, p = c.view.stride, w = at(l), x = 0; x < g; x++) {
                      var T = x * p,
                          y = T + w,
                          A = y + w;

                      switch (i.set(_(T), _(y), _(A)), c.attributes[d].name) {
                        case f.ATTR_POSITION:
                          i.transformMat4(e);
                          break;

                        case f.ATTR_NORMAL:
                          b.transformQuat(i, i, n);
                      }

                      m(T, i.x), m(y, i.y), m(A, i.z);
                    }
                  }
                }
              }
            }

            return this.reset({
              struct: a,
              data: u
            }), this.initialize(), !0;
          }

          for (var M, E, R, O, U, S = new X(), N = 0, V = 0, F = 0, C = 0, L = 0, D = 0, k = 0, G = 0, z = !1, H = new Array(this._struct.vertexBundles.length), W = 0; W < this._struct.vertexBundles.length; ++W) {
            var j = this._struct.vertexBundles[W],
                q = t._struct.vertexBundles[W];
            F = j.view.offset, C = q.view.offset, V = j.view.stride, N = j.view.count + q.view.count, M = new ArrayBuffer(N * V), E = new Uint8Array(M), F += (R = this._data.subarray(F, F + j.view.length)).length, C += (O = t._data.subarray(C, C + q.view.length)).length, E.set(R), L = 0;

            for (var J, Z = h(j.attributes); !(J = Z()).done;) {
              var Q = J.value;
              k = 0, z = !1;

              for (var Y, K = h(q.attributes); !(Y = K()).done;) {
                var $ = Y.value;

                if (Q.name === $.name && Q.format === $.format) {
                  z = !0;
                  break;
                }

                k += P[$.format].size;
              }

              if (z) {
                G = P[Q.format].size, D = j.view.length + L;

                for (var tt = 0; tt < q.view.count; ++tt) {
                  if (U = O.subarray(k, k + G), E.set(U, D), (Q.name === f.ATTR_POSITION || Q.name === f.ATTR_NORMAL) && e) {
                    var et = new Float32Array(E.buffer, D, 3);

                    switch (i.set(et[0], et[1], et[2]), Q.name) {
                      case f.ATTR_POSITION:
                        i.transformMat4(e);
                        break;

                      case f.ATTR_NORMAL:
                        b.transformQuat(i, i, n);
                    }

                    et[0] = i.x, et[1] = i.y, et[2] = i.z;
                  }

                  D += j.view.stride, k += q.view.stride;
                }
              }

              L += P[Q.format].size;
            }

            H[W] = {
              attributes: j.attributes,
              view: {
                offset: S.getLength(),
                length: M.byteLength,
                count: N,
                stride: V
              }
            }, S.addBuffer(M);
          }

          for (var rt, it, st, ht = 0, ft = 2, ct = 0, dt = new Array(this._struct.primitives.length), lt = 0; lt < this._struct.primitives.length; ++lt) {
            var vt = this._struct.primitives[lt],
                _t = t._struct.primitives[lt];
            dt[lt] = {
              primitiveMode: vt.primitiveMode,
              vertexBundelIndices: vt.vertexBundelIndices
            };

            for (var mt, gt = h(vt.vertexBundelIndices); !(mt = gt()).done;) {
              var pt = mt.value;
              ct = Math.max(ct, this._struct.vertexBundles[pt].view.count);
            }

            if (vt.indexView && _t.indexView) {
              ht = vt.indexView.count, ht += _t.indexView.count, F = vt.indexView.offset, C = _t.indexView.offset, ft = ht < 256 ? 1 : ht < 65536 ? 2 : 4;
              var wt = new ArrayBuffer(ht * ft);
              if (rt = 2 === ft ? new Uint16Array(wt) : 1 === ft ? new Uint8Array(wt) : new Uint32Array(wt), it = 2 === vt.indexView.stride ? new Uint16Array(this._data.buffer, F, vt.indexView.count) : 1 === vt.indexView.stride ? new Uint8Array(this._data.buffer, F, vt.indexView.count) : new Uint32Array(this._data.buffer, F, vt.indexView.count), ft === vt.indexView.stride) rt.set(it);else for (var xt = 0; xt < vt.indexView.count; ++xt) {
                rt[xt] = it[xt];
              }
              F += vt.indexView.length, st = 2 === _t.indexView.stride ? new Uint16Array(t._data.buffer, C, _t.indexView.count) : 1 === _t.indexView.stride ? new Uint8Array(t._data.buffer, C, _t.indexView.count) : new Uint32Array(t._data.buffer, C, _t.indexView.count);

              for (var bt = 0; bt < _t.indexView.count; ++bt) {
                rt[vt.indexView.count + bt] = ct + st[bt];
              }

              C += _t.indexView.length, dt[lt].indexView = {
                offset: S.getLength(),
                length: wt.byteLength,
                count: ht,
                stride: ft
              }, S.setNextAlignment(ft), S.addBuffer(wt);
            }
          }

          var Tt = {
            vertexBundles: H,
            primitives: dt,
            minPosition: this._struct.minPosition,
            maxPosition: this._struct.maxPosition
          };
          return Tt.minPosition && t._struct.minPosition && Tt.maxPosition && t._struct.maxPosition && (e ? (b.add(s.center, t._struct.maxPosition, t._struct.minPosition), b.multiplyScalar(s.center, s.center, .5), b.subtract(s.halfExtents, t._struct.maxPosition, t._struct.minPosition), b.multiplyScalar(s.halfExtents, s.halfExtents, .5), I.transform(s, s, e), b.add(i, s.center, s.halfExtents), b.max(Tt.maxPosition, Tt.maxPosition, i), b.subtract(i, s.center, s.halfExtents), b.min(Tt.minPosition, Tt.minPosition, i)) : (b.min(Tt.minPosition, Tt.minPosition, t._struct.minPosition), b.max(Tt.maxPosition, Tt.maxPosition, t._struct.maxPosition))), this.reset({
            struct: Tt,
            data: new Uint8Array(S.getCombined())
          }), this.initialize(), !0;
        }, i.validateMergingMesh = function (t) {
          if (this._struct.vertexBundles.length !== t._struct.vertexBundles.length) return !1;

          for (var e = 0; e < this._struct.vertexBundles.length; ++e) {
            var r = this._struct.vertexBundles[e],
                i = t._struct.vertexBundles[e];
            if (r.attributes.length !== i.attributes.length) return !1;

            for (var n = 0; n < r.attributes.length; ++n) {
              if (r.attributes[n].format !== i.attributes[n].format) return !1;
            }
          }

          if (this._struct.primitives.length !== t._struct.primitives.length) return !1;

          for (var s = 0; s < this._struct.primitives.length; ++s) {
            var a = this._struct.primitives[s],
                u = t._struct.primitives[s];
            if (a.vertexBundelIndices.length !== u.vertexBundelIndices.length) return !1;

            for (var o = 0; o < a.vertexBundelIndices.length; ++o) {
              if (a.vertexBundelIndices[o] !== u.vertexBundelIndices[o]) return !1;
            }

            if (a.primitiveMode !== u.primitiveMode) return !1;

            if (a.indexView) {
              if (void 0 === u.indexView) return !1;
            } else if (u.indexView) return !1;
          }

          return !0;
        }, i.readAttribute = function (t, e) {
          var r = this,
              i = null;
          return this._accessAttribute(t, e, function (t, e) {
            var n = t.view.count,
                s = t.attributes[e].format,
                a = R(P[s]);

            if (0 !== n) {
              var u = new DataView(r._data.buffer, t.view.offset + nt(t.attributes, e)),
                  o = P[s],
                  h = ut(u, s);

              if (a && h) {
                for (var f = o.count, c = new a(n * f), d = t.view.stride, l = 0; l < n; ++l) {
                  for (var v = 0; v < f; ++v) {
                    c[f * l + v] = h(d * l + c.BYTES_PER_ELEMENT * v);
                  }
                }

                i = c;
              }
            }
          }), i;
        }, i.copyAttribute = function (t, e, r, i, n) {
          var s = this,
              a = !1;
          return this._accessAttribute(t, e, function (t, e) {
            var u = t.view.count;

            if (0 !== u) {
              var o = t.attributes[e].format,
                  h = new DataView(s._data.buffer, t.view.offset + nt(t.attributes, e)),
                  f = new DataView(r, n),
                  c = P[o],
                  d = ut(h, o),
                  l = ot(f, o);

              if (d && l) {
                for (var v = c.count, _ = t.view.stride, m = at(o), g = i, p = m, w = 0; w < u; ++w) {
                  for (var x = 0; x < v; ++x) {
                    l(g * w + p * x, d(_ * w + m * x));
                  }
                }

                a = !0;
              }
            } else a = !0;
          }), a;
        }, i.readIndices = function (t) {
          if (t >= this._struct.primitives.length) return null;
          var e = this._struct.primitives[t];
          if (!e.indexView) return null;
          var r = e.indexView.stride;
          return new (1 === r ? Uint8Array : 2 === r ? Uint16Array : Uint32Array)(this._data.buffer, e.indexView.offset, e.indexView.count);
        }, i.copyIndices = function (t, e) {
          if (t >= this._struct.primitives.length) return !1;
          var r = this._struct.primitives[t];
          if (!r.indexView) return !1;

          for (var i = r.indexView.count, n = 1 === r.indexView.stride ? O.R8UI : 2 === r.indexView.stride ? O.R16UI : O.R32UI, s = ut(new DataView(this._data.buffer), n), a = 0; a < i; ++a) {
            e[a] = s(r.indexView.offset + P[n].size * a);
          }

          return !0;
        }, i._accessAttribute = function (t, e, r) {
          if (!(t >= this._struct.primitives.length)) for (var i, n = this._struct.primitives[t], s = h(n.vertexBundelIndices); !(i = s()).done;) {
            var a = i.value,
                u = this._struct.vertexBundles[a],
                o = u.attributes.findIndex(function (t) {
              return t.name === e;
            });

            if (!(o < 0)) {
              r(u, o);
              break;
            }
          }
        }, i._createVertexBuffers = function (t, e) {
          return this._struct.vertexBundles.map(function (r) {
            var i = t.createBuffer(new c(d.VERTEX, l.DEVICE, r.view.length, r.view.stride)),
                n = new Uint8Array(e, r.view.offset, r.view.length);
            return i.update(n), i;
          });
        }, i.initDefault = function (e) {
          t.prototype.initDefault.call(this, e), this.reset({
            struct: {
              vertexBundles: [],
              primitives: []
            },
            data: rt
          });
        }, i.validate = function () {
          return this.renderingSubMeshes.length > 0 && this.data.byteLength > 0;
        }, e(r, [{
          key: "_nativeAsset",
          get: function get() {
            return this._data.buffer;
          },
          set: function set(t) {
            this._data = new Uint8Array(t);
          }
        }, {
          key: "subMeshCount",
          get: function get() {
            var t = this.renderingSubMeshes;
            return t ? t.length : 0;
          }
        }, {
          key: "minPosition",
          get: function get() {
            return this.struct.minPosition;
          }
        }, {
          key: "maxPosition",
          get: function get() {
            return this.struct.maxPosition;
          }
        }, {
          key: "struct",
          get: function get() {
            return this._struct;
          }
        }, {
          key: "data",
          get: function get() {
            return this._data;
          }
        }, {
          key: "hash",
          get: function get() {
            return this._hash || (this._hash = C(this._data, 666)), this._hash;
          }
        }, {
          key: "jointBufferIndices",
          get: function get() {
            return this._jointBufferIndices ? this._jointBufferIndices : this._jointBufferIndices = this._struct.primitives.map(function (t) {
              return t.jointMapIndex || 0;
            });
          }
        }, {
          key: "renderingSubMeshes",
          get: function get() {
            return this.initialize(), this._renderingSubMeshes;
          }
        }]), r;
      }(U), z = S((G = W).prototype, "_struct", [L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return {
            vertexBundles: [],
            primitives: []
          };
        }
      }), H = S(G.prototype, "_hash", [L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), k = G)) || k);

      function nt(t, e) {
        for (var r = 0, i = 0; i < e; ++i) {
          var n = t[i];
          r += P[n.format].size;
        }

        return r;
      }

      n.Mesh = it;
      var st = D.isLittleEndian;

      function at(t) {
        var e = P[t];
        return e.size / e.count;
      }

      function ut(t, e) {
        var r = P[e],
            i = r.size / r.count;

        switch (r.type) {
          case N.UNORM:
            switch (i) {
              case 1:
                return function (e) {
                  return t.getUint8(e);
                };

              case 2:
                return function (e) {
                  return t.getUint16(e, st);
                };

              case 4:
                return function (e) {
                  return t.getUint32(e, st);
                };
            }

            break;

          case N.SNORM:
          case N.INT:
            switch (i) {
              case 1:
                return function (e) {
                  return t.getInt8(e);
                };

              case 2:
                return function (e) {
                  return t.getInt16(e, st);
                };

              case 4:
                return function (e) {
                  return t.getInt32(e, st);
                };
            }

            break;

          case N.UINT:
            switch (i) {
              case 1:
                return function (e) {
                  return t.getUint8(e);
                };

              case 2:
                return function (e) {
                  return t.getUint16(e, st);
                };

              case 4:
                return function (e) {
                  return t.getUint32(e, st);
                };
            }

            break;

          case N.FLOAT:
            return function (e) {
              return t.getFloat32(e, st);
            };
        }

        return null;
      }

      function ot(t, e) {
        var r = P[e],
            i = r.size / r.count;

        switch (r.type) {
          case N.UNORM:
            switch (i) {
              case 1:
                return function (e, r) {
                  return t.setUint8(e, r);
                };

              case 2:
                return function (e, r) {
                  return t.setUint16(e, r, st);
                };

              case 4:
                return function (e, r) {
                  return t.setUint32(e, r, st);
                };
            }

            break;

          case N.SNORM:
          case N.INT:
            switch (i) {
              case 1:
                return function (e, r) {
                  return t.setInt8(e, r);
                };

              case 2:
                return function (e, r) {
                  return t.setInt16(e, r, st);
                };

              case 4:
                return function (e, r) {
                  return t.setInt32(e, r, st);
                };
            }

            break;

          case N.UINT:
            switch (i) {
              case 1:
                return function (e, r) {
                  return t.setUint8(e, r);
                };

              case 2:
                return function (e, r) {
                  return t.setUint16(e, r, st);
                };

              case 4:
                return function (e, r) {
                  return t.setUint32(e, r, st);
                };
            }

            break;

          case N.FLOAT:
            return function (e, r) {
              return t.setFloat32(e, r, st);
            };
        }

        return null;
      }
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/mesh-renderer-86d175c0.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./renderable-component-b5e46bae.js", "./mesh-c8768986.js"], function (e) {
  "use strict";

  var t, i, s, n, h, o, a, r, l, u, d, c, p, _, g, m, f, b, S, M, w, v, y, I, O, P;

  return {
    setters: [function (e) {
      t = e.ec, i = e.cJ, s = e.ef, n = e.gv, h = e.e2, o = e.eg, a = e.eu, r = e.ek, l = e.fY, u = e.l, d = e.g0, c = e.eb, p = e.dQ, _ = e.gw, g = e.eh, m = e.ei, f = e.c7, b = e.fZ, S = e.ga, M = e.f_, w = e.fU, v = e.go, y = e.ed;
    }, function (e) {
      I = e.i;
    }, function () {}, function (e) {
      O = e.R;
    }, function (e) {
      P = e.M;
    }],
    execute: function execute() {
      var R,
          z,
          C,
          W,
          k,
          F,
          j,
          D,
          L,
          x,
          B,
          T,
          N,
          U,
          A,
          E,
          V,
          H,
          q,
          J,
          Q,
          Y,
          Z,
          G,
          K,
          X,
          $,
          ee,
          te,
          ie,
          se,
          ne = e("a", function (e) {
        function i() {
          for (var t, i = arguments.length, s = new Array(i), n = 0; n < i; n++) {
            s[n] = arguments[n];
          }

          return (t = e.call.apply(e, [this].concat(s)) || this)._morphRenderingInstance = null, t._usedMaterials = new Set(), t;
        }

        t(i, e);
        var s = i.prototype;
        return s.getMacroPatches = function (e) {
          return this._morphRenderingInstance ? this._morphRenderingInstance.requiredPatches(e) : null;
        }, s.initSubModel = function (t, i, s) {
          return e.prototype.initSubModel.call(this, t, i, this._launderMaterial(s));
        }, s.destroy = function () {
          e.prototype.destroy.call(this), this._morphRenderingInstance = null;
        }, s.setSubModelMaterial = function (t, i) {
          return e.prototype.setSubModelMaterial.call(this, t, this._launderMaterial(i));
        }, s._updateLocalDescriptors = function (t, i) {
          e.prototype._updateLocalDescriptors.call(this, t, i), this._morphRenderingInstance && this._morphRenderingInstance.adaptPipelineState(t, i);
        }, s._launderMaterial = function (e) {
          return e;
        }, s.setMorphRendering = function (e) {
          this._morphRenderingInstance = e;
        }, i;
      }(I)),
          he = i({
        OFF: 0,
        ON: 1
      }),
          oe = i({
        OFF: 0,
        ON: 1
      }),
          ae = (R = s("cc.ModelLightmapSettings"), z = n("_recieveShadow"), R((B = function () {
        function e() {
          g(this, "texture", k, this), g(this, "uvParam", F, this), g(this, "_bakeable", j, this), g(this, "_castShadow", D, this), g(this, "_receiveShadow", L, this), g(this, "_lightmapSize", x, this);
        }

        return h(e, [{
          key: "bakeable",
          get: function get() {
            return this._bakeable;
          },
          set: function set(e) {
            this._bakeable = e;
          }
        }, {
          key: "castShadow",
          get: function get() {
            return this._castShadow;
          },
          set: function set(e) {
            this._castShadow = e;
          }
        }, {
          key: "receiveShadow",
          get: function get() {
            return this._receiveShadow;
          },
          set: function set(e) {
            this._receiveShadow = e;
          }
        }, {
          key: "lightmapSize",
          get: function get() {
            return this._lightmapSize;
          },
          set: function set(e) {
            this._lightmapSize = e;
          }
        }]), e;
      }(), k = o((W = B).prototype, "texture", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), F = o(W.prototype, "uvParam", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new f();
        }
      }), j = o(W.prototype, "_bakeable", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), D = o(W.prototype, "_castShadow", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), L = o(W.prototype, "_receiveShadow", [z], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), x = o(W.prototype, "_lightmapSize", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 64;
        }
      }), o(W.prototype, "bakeable", [a], Object.getOwnPropertyDescriptor(W.prototype, "bakeable"), W.prototype), o(W.prototype, "castShadow", [a], Object.getOwnPropertyDescriptor(W.prototype, "castShadow"), W.prototype), o(W.prototype, "receiveShadow", [a], Object.getOwnPropertyDescriptor(W.prototype, "receiveShadow"), W.prototype), o(W.prototype, "lightmapSize", [a], Object.getOwnPropertyDescriptor(W.prototype, "lightmapSize"), W.prototype), C = W)) || C);
      e("M", (T = s("cc.MeshRenderer"), N = b(), U = S(100), A = M(), E = r(he), V = w(), H = r(oe), q = w(), J = r(P), Q = w(), Y = v(), T(Z = N(Z = U(Z = A(Z = l((se = ie = function (e) {
        function i() {
          var t;
          return t = e.call(this) || this, g(t, "lightmapSettings", K, y(t)), g(t, "_mesh", X, y(t)), g(t, "_shadowCastingMode", $, y(t)), g(t, "_shadowReceivingMode", ee, y(t)), t._subMeshShapesWeights = [], t._modelType = void 0, t._model = null, t._morphInstance = null, g(t, "_enableMorph", te, y(t)), t._modelType = I, t;
        }

        t(i, e);
        var s = i.prototype;
        return s.onLoad = function () {
          this._mesh && this._mesh.initialize(), this._validateShapeWeights() || this._initSubMeshShapesWeights(), this._watchMorphInMesh(), this._updateModels(), this._updateCastShadow(), this._updateReceiveShadow();
        }, s.onRestore = function () {
          this._updateModels(), this._updateCastShadow(), this._updateReceiveShadow();
        }, s.onEnable = function () {
          this._model || this._updateModels(), this._attachToScene();
        }, s.onDisable = function () {
          this._model && this._detachFromScene();
        }, s.onDestroy = function () {
          this._model && (u.director.root.destroyModel(this._model), this._model = null, this._models.length = 0), this._morphInstance && this._morphInstance.destroy();
        }, s.getWeight = function (e, t) {
          var i = this._subMeshShapesWeights;
          d(e < i.length);
          var s = this._subMeshShapesWeights[e];
          return d(t < s.length), s[t];
        }, s.setWeights = function (e, t) {
          var i = this._subMeshShapesWeights;
          t >= i.length || i[t].length === e.length && (i[t] = e.slice(0), this._uploadSubMeshShapesWeights(t));
        }, s.setWeight = function (e, t, i) {
          var s = this._subMeshShapesWeights;

          if (!(t >= s.length)) {
            var n = s[t];
            i >= n.length || (n[i] = e, this._uploadSubMeshShapesWeights(t));
          }
        }, s.setInstancedAttribute = function (e, t) {
          if (this.model) for (var i = this.model.instancedAttributes, s = i.attributes, n = i.views, h = 0; h < s.length; h++) {
            if (s[h].name === e) {
              n[h].set(t);
              break;
            }
          }
        }, s._updateLightmap = function (e, t, i, s, n) {
          this.lightmapSettings.texture = e, this.lightmapSettings.uvParam.x = t, this.lightmapSettings.uvParam.y = i, this.lightmapSettings.uvParam.z = s, this.lightmapSettings.uvParam.w = n, this._onUpdateLightingmap();
        }, s._updateModels = function () {
          if (this.enabledInHierarchy && this._mesh) {
            var e = this._model;
            e ? (e.destroy(), e.initialize(), e.node = e.transform = this.node) : this._createModel(), this._model && (this._model.createBoundingShape(this._mesh.struct.minPosition, this._mesh.struct.maxPosition), this._updateModelParams(), this._onUpdateLightingmap());
          }
        }, s._createModel = function () {
          var e = this._morphInstance && this._modelType === I ? ne : this._modelType,
              t = this._model = u.director.root.createModel(e);
          t.visFlags = this.visibility, t.node = t.transform = this.node, this._models.length = 0, this._models.push(this._model), this._morphInstance && t instanceof ne && t.setMorphRendering(this._morphInstance);
        }, s._attachToScene = function () {
          if (this.node.scene && this._model) {
            var e = this._getRenderScene();

            null !== this._model.scene && this._detachFromScene(), e.addModel(this._model);
          }
        }, s._detachFromScene = function () {
          this._model && this._model.scene && this._model.scene.removeModel(this._model);
        }, s._updateModelParams = function () {
          if (this._mesh && this._model) {
            this.node.hasChangedFlags |= c.POSITION, this._model.transform.hasChangedFlags |= c.POSITION, this._model.isDynamicBatching = this._isBatchingEnabled();
            var e = this._mesh ? this._mesh.renderingSubMeshes.length : 0,
                t = this._mesh.renderingSubMeshes;
            if (t) for (var i = 0; i < e; ++i) {
              var s = this.getRenderMaterial(i);
              s && !s.isValid && (s = null);
              var n = t[i];
              n && this._model.initSubModel(i, n, s || this._getBuiltinMaterial());
            }
            this._model.enabled = !0;
          }
        }, s._onUpdateLightingmap = function () {
          null !== this.model && this.model.updateLightingmap(this.lightmapSettings.texture, this.lightmapSettings.uvParam), this.setInstancedAttribute("a_lightingMapUVParam", [this.lightmapSettings.uvParam.x, this.lightmapSettings.uvParam.y, this.lightmapSettings.uvParam.z, this.lightmapSettings.uvParam.w]);
        }, s._onMaterialModified = function (e, t) {
          this._model && this._model.inited && this._onRebuildPSO(e, t || this._getBuiltinMaterial());
        }, s._onRebuildPSO = function (e, t) {
          this._model && this._model.inited && (this._model.isDynamicBatching = this._isBatchingEnabled(), this._model.setSubModelMaterial(e, t), this._onUpdateLightingmap());
        }, s._onMeshChanged = function () {}, s._clearMaterials = function () {
          if (this._model) for (var e = this._model.subModels, t = 0; t < e.length; ++t) {
            this._onMaterialModified(t, null);
          }
        }, s._getBuiltinMaterial = function () {
          return p.get("missing-material");
        }, s._onVisibilityChange = function (e) {
          this._model && (this._model.visFlags = e);
        }, s._updateCastShadow = function () {
          this._model && (this._shadowCastingMode === he.OFF ? this._model.castShadow = !1 : (d(this._shadowCastingMode === he.ON, "ShadowCastingMode " + this._shadowCastingMode + " is not supported."), this._model.castShadow = !0));
        }, s._updateReceiveShadow = function () {
          this._model && (this._shadowReceivingMode === oe.OFF ? this._model.receiveShadow = !1 : this._model.receiveShadow = !0);
        }, s._isBatchingEnabled = function () {
          for (var e = 0; e < this._materials.length; ++e) {
            var t = this._materials[e];
            if (t) for (var i = 0; i < t.passes.length; ++i) {
              if (t.passes[i].batchingScheme) return !0;
            }
          }

          return !1;
        }, s._watchMorphInMesh = function () {
          if (this._morphInstance && (this._morphInstance.destroy(), this._morphInstance = null), this._enableMorph && this._mesh && this._mesh.struct.morph && this._mesh.morphRendering) {
            this._morphInstance = this._mesh.morphRendering.createInstance();

            for (var e = this._mesh.struct.primitives.length, t = 0; t < e; ++t) {
              this._uploadSubMeshShapesWeights(t);
            }

            this._model && this._model instanceof ne && this._model.setMorphRendering(this._morphInstance);
          }
        }, s._initSubMeshShapesWeights = function () {
          var e = this._mesh;

          if (this._subMeshShapesWeights.length = 0, e) {
            var t = e.struct.morph;

            if (t) {
              var i = t.weights;
              this._subMeshShapesWeights = t.subMeshMorphs.map(function (e) {
                return e ? e.weights ? e.weights.slice(0) : i ? (d(i.length === e.targets.length), i.slice(0)) : new Array(e.targets.length).fill(0) : [];
              });
            }
          }
        }, s._validateShapeWeights = function () {
          var e = this._mesh,
              t = this._subMeshShapesWeights;
          if (!e || !e.struct.morph) return 0 === t.length;
          var i = e.struct.morph;
          return i.subMeshMorphs.length === t.length && t.every(function (e, t) {
            var s,
                n,
                h = e.length;
            return (null !== (s = null === (n = i.subMeshMorphs[t]) || void 0 === n ? void 0 : n.targets.length) && void 0 !== s ? s : 0) === h;
          });
        }, s._uploadSubMeshShapesWeights = function (e) {
          var t;
          null === (t = this._morphInstance) || void 0 === t || t.setWeights(e, this._subMeshShapesWeights[e]);
        }, h(i, [{
          key: "shadowCastingMode",
          get: function get() {
            return this._shadowCastingMode;
          },
          set: function set(e) {
            this._shadowCastingMode = e, this._updateCastShadow();
          }
        }, {
          key: "receiveShadow",
          get: function get() {
            return this._shadowReceivingMode;
          },
          set: function set(e) {
            this._shadowReceivingMode = e, this._updateReceiveShadow();
          }
        }, {
          key: "mesh",
          get: function get() {
            return this._mesh;
          },
          set: function set(e) {
            var t = this._mesh,
                i = this._mesh = e;
            null == i || i.initialize(), this._initSubMeshShapesWeights(), this._watchMorphInMesh(), this._onMeshChanged(t), this._updateModels(), this.enabledInHierarchy && this._attachToScene(), this._updateCastShadow(), this._updateReceiveShadow();
          }
        }, {
          key: "model",
          get: function get() {
            return this._model;
          }
        }, {
          key: "enableMorph",
          get: function get() {
            return this._enableMorph;
          },
          set: function set(e) {
            this._enableMorph = e;
          }
        }]), i;
      }(O), ie.ShadowCastingMode = he, ie.ShadowReceivingMode = oe, K = o((G = se).prototype, "lightmapSettings", [m, a, _], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new ae();
        }
      }), X = o(G.prototype, "_mesh", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), $ = o(G.prototype, "_shadowCastingMode", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return he.OFF;
        }
      }), ee = o(G.prototype, "_shadowReceivingMode", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return oe.ON;
        }
      }), o(G.prototype, "shadowCastingMode", [E, V, _], Object.getOwnPropertyDescriptor(G.prototype, "shadowCastingMode"), G.prototype), o(G.prototype, "receiveShadow", [H, q, _], Object.getOwnPropertyDescriptor(G.prototype, "receiveShadow"), G.prototype), o(G.prototype, "mesh", [J, Q], Object.getOwnPropertyDescriptor(G.prototype, "mesh"), G.prototype), o(G.prototype, "enableMorph", [Y, _], Object.getOwnPropertyDescriptor(G.prototype, "enableMorph"), G.prototype), te = o(G.prototype, "_enableMorph", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Z = G)) || Z) || Z) || Z) || Z) || Z));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/particle-2d.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./sprite-frame-1c023836.js", "./renderable-2d-f6cb180f.js", "./vertex-format-bf491aa3.js", "./deprecated-ddee6a28.js", "./ZipUtils-3ae2be0b.js"], function (t) {
  "use strict";

  var e, i, r, a, n, o, s, l, h, p, c, u, d, f, m, y, g, b, _, v, S, C, w, F, P, T, D, A, R, V, x, O, I, z, E, M, U, k, L, N, B, G;

  return {
    setters: [function (t) {
      e = t.cJ, i = t.c3, r = t.ec, a = t.cj, n = t.gz, o = t.gF, s = t.gT, l = t.gU, h = t.ef, p = t.eg, c = t.l, u = t.eh, d = t.ed, f = t.df, m = t.ei, y = t.eu, g = t.dz, b = t.c, _ = t.ek, v = t.gv, S = t.gV, C = t.fY, w = t.f, F = t.e, P = t.p, T = t.d, D = t.dm, A = t.V, R = t.e2, V = t.f_, x = t.fU, O = t.go, I = t.dn, z = t.fZ;
    }, function (t) {
      E = t.e;
    }, function () {}, function () {}, function () {}, function () {}, function () {}, function (t) {
      M = t.S;
    }, function (t) {
      U = t.R, k = t.M;
    }, function (t) {
      L = t.b, N = t.c;
    }, function () {}, function (t) {
      B = t._, G = t.c;
    }],
    execute: function execute() {
      var j,
          W,
          Y,
          H,
          q = e({
        GRAVITY: 0,
        RADIUS: 1
      }),
          Z = e({
        FREE: 0,
        RELATIVE: 1,
        GROUPED: 2
      }),
          X = new i(0, 0),
          J = new i(),
          K = new i(),
          Q = new i(),
          $ = new i(),
          tt = L(N),
          et = function et() {
        this.pos = new i(0, 0), this.startPos = new i(0, 0), this.color = new a(0, 0, 0, 255), this.deltaColor = {
          r: 0,
          g: 0,
          b: 0,
          a: 255
        }, this.size = 0, this.deltaSize = 0, this.rotation = 0, this.deltaRotation = 0, this.timeToLive = 0, this.drawPos = new i(0, 0), this.aspectRatio = 1, this.dir = new i(0, 0), this.radialAccel = 0, this.tangentialAccel = 0, this.angle = 0, this.degreesPerSecond = 0, this.radius = 0, this.deltaRadius = 0;
      },
          it = new (function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        return r(e, t), e.prototype.get = function () {
          return this._get() || new et();
        }, e;
      }(n))(function (t) {
        t.pos.set(X), t.startPos.set(X), t.color._val = 4278190080, t.deltaColor.r = t.deltaColor.g = t.deltaColor.b = 0, t.deltaColor.a = 255, t.size = 0, t.deltaSize = 0, t.rotation = 0, t.deltaRotation = 0, t.timeToLive = 0, t.drawPos.set(X), t.aspectRatio = 1, t.dir.set(X), t.radialAccel = 0, t.tangentialAccel = 0, t.angle = 0, t.degreesPerSecond = 0, t.radius = 0, t.deltaRadius = 0;
      }, 1024),
          rt = function () {
        function t(t) {
          this.particles = [], this.active = !1, this.uvFilled = 0, this.finished = !1, this.readyToPlay = !0, this.elapsed = 0, this.emitCounter = 0, this._worldRotation = 0, this.sys = t, this.particles = [], this.active = !1, this.readyToPlay = !0, this.finished = !1, this.elapsed = 0, this.emitCounter = 0, this.uvFilled = 0, this._worldRotation = 0;
        }

        var e = t.prototype;
        return e.stop = function () {
          this.active = !1, this.readyToPlay = !1, this.elapsed = this.sys.duration, this.emitCounter = 0;
        }, e.reset = function () {
          this.active = !0, this.readyToPlay = !0, this.elapsed = 0, this.emitCounter = 0, this.finished = !1;

          for (var t = this.particles, e = 0; e < t.length; ++e) {
            it.put(t[e]);
          }

          t.length = 0;
        }, e.emitParticle = function (t) {
          var e = this.sys,
              i = it.get();
          this.particles.push(i), i.timeToLive = e.life + e.lifeVar * (Math.random() - .5) * 2;
          var r = i.timeToLive = Math.max(0, i.timeToLive);
          i.pos.x = e.sourcePos.x + e.posVar.x * (Math.random() - .5) * 2, i.pos.y = e.sourcePos.y + e.posVar.y * (Math.random() - .5) * 2;
          var a,
              n,
              h,
              p,
              c = e.startColor,
              u = e.startColorVar,
              d = e.endColor,
              f = e.endColorVar;
          i.color.r = a = o(c.r + u.r * (Math.random() - .5) * 2, 0, 255), i.color.g = n = o(c.g + u.g * (Math.random() - .5) * 2, 0, 255), i.color.b = h = o(c.b + u.b * (Math.random() - .5) * 2, 0, 255), i.color.a = p = o(c.a + u.a * (Math.random() - .5) * 2, 0, 255), i.deltaColor.r = (o(d.r + f.r * (Math.random() - .5) * 2, 0, 255) - a) / r, i.deltaColor.g = (o(d.g + f.g * (Math.random() - .5) * 2, 0, 255) - n) / r, i.deltaColor.b = (o(d.b + f.b * (Math.random() - .5) * 2, 0, 255) - h) / r, i.deltaColor.a = (o(d.a + f.a * (Math.random() - .5) * 2, 0, 255) - p) / r;
          var m = e.startSize + e.startSizeVar * (Math.random() - .5) * 2;
          if (m = Math.max(0, m), i.size = m, -1 === e.endSize) i.deltaSize = 0;else {
            var y = e.endSize + e.endSizeVar * (Math.random() - .5) * 2;
            y = Math.max(0, y), i.deltaSize = (y - m) / r;
          }
          var g = e.startSpin + e.startSpinVar * (Math.random() - .5) * 2,
              b = e.endSpin + e.endSpinVar * (Math.random() - .5) * 2;
          i.rotation = g, i.deltaRotation = (b - g) / r, i.startPos.x = t.x, i.startPos.y = t.y, i.aspectRatio = e.aspectRatio || 1;

          var _ = s(e.angle + this._worldRotation + e.angleVar * (Math.random() - .5) * 2);

          if (e.emitterMode === q.GRAVITY) {
            var v = e.speed + e.speedVar * (Math.random() - .5) * 2;
            i.dir.x = Math.cos(_), i.dir.y = Math.sin(_), i.dir.multiplyScalar(v), i.radialAccel = e.radialAccel + e.radialAccelVar * (Math.random() - .5) * 2, i.tangentialAccel = e.tangentialAccel + e.tangentialAccelVar * (Math.random() - .5) * 2, e.rotationIsDir && (i.rotation = -l(Math.atan2(i.dir.y, i.dir.x)));
          } else {
            var S = e.startRadius + e.startRadiusVar * (Math.random() - .5) * 2,
                C = e.endRadius + e.endRadiusVar * (Math.random() - .5) * 2;
            i.radius = S, i.deltaRadius = -1 === e.endRadius ? 0 : (C - S) / r, i.angle = _, i.degreesPerSecond = s(e.rotatePerS + e.rotatePerSVar * (Math.random() - .5) * 2);
          }
        }, e.updateUVs = function (t) {
          var e = this.renderData;

          if (e && this.sys._renderSpriteFrame) {
            for (var i = e.vData, r = this.sys._renderSpriteFrame.uv, a = t ? 0 : this.uvFilled, n = this.particles.length, o = a; o < n; o++) {
              var s = o * tt * 4;
              i[s + 3] = r[0], i[s + 4] = r[1], i[s + 12] = r[2], i[s + 13] = r[3], i[s + 21] = r[4], i[s + 22] = r[5], i[s + 30] = r[6], i[s + 31] = r[7];
            }

            this.uvFilled = n;
          }
        }, e.updateParticleBuffer = function (t, e, i, r) {
          var n = i.vData,
              o = e.x,
              l = e.y,
              h = t.size,
              p = h,
              c = t.aspectRatio;
          c > 1 ? p = h / c : h = p * c;
          var u = h / 2,
              d = p / 2;

          if (t.rotation) {
            var f = -u,
                m = -d,
                y = u,
                g = d,
                b = -s(t.rotation),
                _ = Math.cos(b),
                v = Math.sin(b);

            n[r] = f * _ - m * v + o, n[r + 1] = f * v + m * _ + l, n[r + 2] = 0, n[r + 9] = y * _ - m * v + o, n[r + 10] = y * v + m * _ + l, n[r + 11] = 0, n[r + 18] = f * _ - g * v + o, n[r + 19] = f * v + g * _ + l, n[r + 20] = 0, n[r + 27] = y * _ - g * v + o, n[r + 28] = y * v + g * _ + l, n[r + 29] = 0;
          } else n[r] = o - u, n[r + 1] = l - d, n[r + 2] = 0, n[r + 9] = o + u, n[r + 10] = l - d, n[r + 11] = 0, n[r + 18] = o - u, n[r + 19] = l + d, n[r + 20] = 0, n[r + 27] = o + u, n[r + 28] = l + d, n[r + 29] = 0;

          a.toArray(n, t.color, r + 5), a.toArray(n, t.color, r + 14), a.toArray(n, t.color, r + 23), a.toArray(n, t.color, r + 32);
        }, e.step = function (t) {
          var e = this.sys.assembler,
              i = this.sys,
              r = i.node,
              a = this.particles;

          if (t = t > e.maxParticleDeltaTime ? e.maxParticleDeltaTime : t, r.updateWorldTransform(), i.positionType === Z.FREE) {
            this._worldRotation = function (t) {
              for (var e = 0, i = t; i;) {
                e += i.eulerAngles.z, i = i.parent;
              }

              return e;
            }(r);

            var n = r.worldMatrix;
            J.x = n.m12, J.y = n.m13;
          } else i.positionType === Z.RELATIVE ? (this._worldRotation = r.eulerAngles.z, J.x = r.position.x, J.y = r.position.y) : this._worldRotation = 0;

          if (this.active && i.emissionRate) {
            var o = 1 / i.emissionRate;

            for (a.length < i.totalParticles && (this.emitCounter += t); a.length < i.totalParticles && this.emitCounter > o;) {
              this.emitParticle(J), this.emitCounter -= o;
            }

            this.elapsed += t, -1 !== i.duration && i.duration < this.elapsed && i.stopSystem();
          }

          var s = this.renderData,
              l = a.length;
          s.reset(), this.requestData(4 * l, 6 * l), l > this.uvFilled && this.updateUVs();

          for (var h = 0; h < a.length;) {
            K.x = K.y = Q.x = Q.y = $.x = $.y = 0;
            var p = a[h];

            if (p.timeToLive -= t, p.timeToLive > 0) {
              if (i.emitterMode === q.GRAVITY) {
                var c = $,
                    u = K,
                    d = Q;
                (p.pos.x || p.pos.y) && (u.set(p.pos), u.normalize()), d.set(u), u.multiplyScalar(p.radialAccel);
                var f = d.x;
                d.x = -d.y, d.y = f, d.multiplyScalar(p.tangentialAccel), c.set(u), c.add(d), c.add(i.gravity), c.multiplyScalar(t), p.dir.add(c), c.set(p.dir), c.multiplyScalar(t), p.pos.add(c);
              } else p.angle += p.degreesPerSecond * t, p.radius += p.deltaRadius * t, p.pos.x = -Math.cos(p.angle) * p.radius, p.pos.y = -Math.sin(p.angle) * p.radius;

              p.color.r += p.deltaColor.r * t, p.color.g += p.deltaColor.g * t, p.color.b += p.deltaColor.b * t, p.color.a += p.deltaColor.a * t, p.size += p.deltaSize * t, p.size < 0 && (p.size = 0), p.rotation += p.deltaRotation * t;
              var m = K;
              m.set(p.pos), i.positionType !== Z.GROUPED && m.add(p.startPos);
              var y = tt * h * 4;
              this.updateParticleBuffer(p, m, s, y), ++h;
            } else {
              var g = a[h];
              h !== a.length - 1 && (a[h] = a[a.length - 1]), it.put(g), a.length--, s.indicesCount -= 6, s.vertexCount -= 4;
            }
          }

          0 !== a.length || this.active || this.readyToPlay || (this.finished = !0, i._finishedSimulation());
        }, e.requestData = function (t, e) {
          var i = this.renderData.indicesCount;
          this.renderData.request(t, e);

          for (var r = this.renderData.indicesCount / 6, a = this.renderData.iData, n = i; n < r; n++) {
            var o = 4 * n;
            a[i++] = o, a[i++] = o + 1, a[i++] = o + 2, a[i++] = o + 1, a[i++] = o + 3, a[i++] = o + 2;
          }
        }, t;
      }(),
          at = t("ParticleAsset", h("cc.ParticleAsset")((H = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
            r[a] = arguments[a];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, u(e, "spriteFrame", Y, d(e)), e;
        }

        return r(e, t), e;
      }(f), Y = p((W = H).prototype, "spriteFrame", [m, y], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), j = W)) || j);

      c.ParticleAsset = at;

      var nt,
          ot,
          st,
          lt,
          ht,
          pt,
          ct,
          ut,
          dt,
          ft,
          mt,
          yt,
          gt,
          bt,
          _t,
          vt,
          St,
          Ct,
          wt,
          Ft,
          Pt,
          Tt,
          Dt,
          At,
          Rt,
          Vt,
          xt,
          Ot,
          It,
          zt,
          Et,
          Mt,
          Ut,
          kt,
          Lt,
          Nt,
          Bt,
          Gt,
          jt,
          Wt,
          Yt,
          Ht,
          qt,
          Zt,
          Xt,
          Jt,
          Kt,
          Qt,
          $t,
          te,
          ee,
          ie,
          re,
          ae,
          ne,
          oe,
          se,
          le,
          he,
          pe,
          ce,
          ue,
          de,
          fe,
          me,
          ye,
          ge,
          be,
          _e,
          ve,
          Se,
          Ce,
          we,
          Fe,
          Pe,
          Te,
          De,
          Ae,
          Re,
          Ve,
          xe,
          Oe,
          Ie,
          ze,
          Ee,
          Me,
          Ue,
          ke,
          Le,
          Ne,
          Be,
          Ge,
          je,
          We,
          Ye,
          He,
          qe,
          Ze,
          Xe = function () {
        function t(t) {
          var e,
              i = this;
          this.pos = 8, this.palette = [], this.imgData = [], this.text = {}, this.width = 0, this.height = 0, this.bits = 0, this.colorType = 0, this.compressionMethod = 0, this.filterMethod = 0, this.interlaceMethod = 0, this.colors = 0, this.hasAlphaChannel = !1, this.pixelBitlength = 0, this.data = t, this.transparency = {
            indexed: [],
            rgb: 0,
            grayscale: 0
          };

          for (var r = 0, a = 0, n = 0;;) {
            n = this.readUInt32();

            var o = function () {
              var t = [];

              for (r = 0; r < 4; ++r) {
                t.push(String.fromCharCode(i.data[i.pos++]));
              }

              return t;
            }.call(this).join("");

            switch (o) {
              case "IHDR":
                this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
                break;

              case "acTL":
                this.animation = {
                  numFrames: this.readUInt32(),
                  numPlays: this.readUInt32() || 1 / 0,
                  frames: []
                };
                break;

              case "PLTE":
                this.palette = this.read(n);
                break;

              case "fcTL":
                e && this.animation.frames.push(e), this.pos += 4, e = {
                  width: this.readUInt32(),
                  height: this.readUInt32(),
                  xOffset: this.readUInt32(),
                  yOffset: this.readUInt32()
                };
                var s = this.readUInt16(),
                    l = this.readUInt16() || 100;
                e.delay = 1e3 * s / l, e.disposeOp = this.data[this.pos++], e.blendOp = this.data[this.pos++], e.data = [];
                break;

              case "IDAT":
              case "fdAT":
                for ("fdAT" === o && (this.pos += 4, n -= 4), t = (null != e ? e.data : void 0) || this.imgData, r = 0; n >= 0 ? r < n : r > n; n >= 0 ? ++r : --r) {
                  t.push(this.data[this.pos++]);
                }

                break;

              case "tRNS":
                switch (this.transparency = {}, this.colorType) {
                  case 3:
                    this.transparency.indexed = this.read(n);
                    var h = 255 - this.transparency.indexed.length;
                    if (h > 0) for (a = 0; h >= 0 ? a < h : a > h; h >= 0 ? ++a : --a) {
                      this.transparency.indexed.push(255);
                    }
                    break;

                  case 0:
                    this.transparency.grayscale = this.read(n)[0];
                    break;

                  case 2:
                    this.transparency.rgb = this.read(n);
                }

                break;

              case "tEXt":
                var p = this.read(n),
                    c = p.indexOf(0),
                    u = String.fromCharCode.apply(String, p.slice(0, c));
                this.text[u] = String.fromCharCode.apply(String, p.slice(c + 1));
                break;

              case "IEND":
                e && this.animation.frames.push(e), this.colors = function () {
                  switch (i.colorType) {
                    case 0:
                    case 3:
                    case 4:
                      return 1;

                    case 2:
                    case 6:
                      return 3;
                  }
                }.call(this);
                var d = this.colorType;
                this.hasAlphaChannel = 4 === d || 6 === d;
                var f = this.colors + (this.hasAlphaChannel ? 1 : 0);
                return this.pixelBitlength = this.bits * f, this.colorSpace = function () {
                  switch (i.colors) {
                    case 1:
                      return "DeviceGray";

                    case 3:
                      return "DeviceRGB";
                  }
                }.call(this), void (this.imgData instanceof Uint8Array || (this.imgData = new Uint8Array(this.imgData)));

              default:
                this.pos += n;
            }

            if (this.pos += 4, this.pos > this.data.length) throw new Error(g(6017));
          }
        }

        var e = t.prototype;
        return e.read = function (t) {
          var e = 0,
              i = [];

          for (e = 0; t >= 0 ? e < t : e > t; t >= 0 ? ++e : --e) {
            i.push(this.data[this.pos++]);
          }

          return i;
        }, e.readUInt32 = function () {
          return this.data[this.pos++] << 24 | this.data[this.pos++] << 16 | this.data[this.pos++] << 8 | this.data[this.pos++];
        }, e.readUInt16 = function () {
          return this.data[this.pos++] << 8 | this.data[this.pos++];
        }, e.decodePixels = function (t) {
          if (null == t && (t = this.imgData), 0 === t.length) return new Uint8Array(0);
          t = new B.Inflate(t, {
            index: 0,
            verify: !1
          }).decompress();

          for (var e = this.pixelBitlength / 8, i = e * this.width, r = new Uint8Array(i * this.height), a = t.length, n = 0, o = 0, s = 0, l = 0, h = 0, p = 0, c = 0, u = 0, d = 0, f = 0, m = 0, y = 0, b = 0, _ = 0, v = 0, S = 0, C = 0, w = 0, F = 0; o < a;) {
            switch (t[o++]) {
              case 0:
                for (p = c = 0; c < i; p = c += 1) {
                  r[s++] = t[o++];
                }

                break;

              case 1:
                for (p = u = 0; u < i; p = u += 1) {
                  l = t[o++], y = p < e ? 0 : r[s - e], r[s++] = (l + y) % 256;
                }

                break;

              case 2:
                for (p = d = 0; d < i; p = d += 1) {
                  l = t[o++], h = (p - p % e) / e, w = n && r[(n - 1) * i + h * e + p % e], r[s++] = (w + l) % 256;
                }

                break;

              case 3:
                for (p = f = 0; f < i; p = f += 1) {
                  l = t[o++], h = (p - p % e) / e, y = p < e ? 0 : r[s - e], w = n && r[(n - 1) * i + h * e + p % e], r[s++] = (l + Math.floor((y + w) / 2)) % 256;
                }

                break;

              case 4:
                for (p = m = 0; m < i; p = m += 1) {
                  l = t[o++], h = (p - p % e) / e, y = p < e ? 0 : r[s - e], 0 === n ? w = F = 0 : (w = r[(n - 1) * i + h * e + p % e], F = h && r[(n - 1) * i + (h - 1) * e + p % e]), b = y + w - F, _ = Math.abs(b - y), S = Math.abs(b - w), C = Math.abs(b - F), v = _ <= S && _ <= C ? y : S <= C ? w : F, r[s++] = (l + v) % 256;
                }

                break;

              default:
                throw new Error(g(6018, t[o - 1]));
            }

            n++;
          }

          return r;
        }, e.copyToImageData = function (t, e) {
          var i,
              r = this.hasAlphaChannel,
              a = this.colors;
          this.palette.length && (i = null != this._decodedPalette ? this._decodedPalette : this._decodedPalette = this.decodePalette(), a = 4, r = !0);
          var n = t.data || t,
              o = n.length,
              s = i || e,
              l = 0,
              h = 0,
              p = 0,
              c = 0;
          if (1 === a) for (; l < o;) {
            p = i ? 4 * e[l / 4] : h, c = s[p++], n[l++] = c, n[l++] = c, n[l++] = c, n[l++] = r ? s[p++] : 255, h = p;
          } else for (; l < o;) {
            p = i ? 4 * e[l / 4] : h, n[l++] = s[p++], n[l++] = s[p++], n[l++] = s[p++], n[l++] = r ? s[p++] : 255, h = p;
          }
        }, e.decodePalette = function () {
          for (var t = this.palette, e = this.transparency.indexed || [], i = new Uint8Array((e.length || 0) + t.length), r = 0, a = 0, n = 0, o = 0, s = 0, l = t.length; s < l; o = s += 3) {
            i[r++] = t[o], i[r++] = t[o + 1], i[r++] = t[o + 2], n = e[a++], i[r++] = null != n ? n : 255;
          }

          return i;
        }, e.render = function (t) {
          t.width = this.width, t.height = this.height;
          var e = t.getContext("2d"),
              i = e.createImageData(this.width, this.height);
          return this.copyToImageData(i, this.decodePixels(null)), e.putImageData(i, 0, 0);
        }, t;
      }(),
          Je = function () {
        function t() {
          this._littleEndian = !1, this._tiffData = [], this._fileDirectories = [];
        }

        var e = t.prototype;
        return e.getUint8 = function (t) {
          return this._tiffData[t];
        }, e.getUint16 = function (t) {
          return this._littleEndian ? this._tiffData[t + 1] << 8 | this._tiffData[t] : this._tiffData[t] << 8 | this._tiffData[t + 1];
        }, e.getUint32 = function (t) {
          var e = this._tiffData;
          return this._littleEndian ? e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t] : e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
        }, e.checkLittleEndian = function () {
          var t = this.getUint16(0);
          if (18761 === t) this._littleEndian = !0;else {
            if (19789 !== t) throw console.log(t), TypeError(g(6019));
            this._littleEndian = !1;
          }
          return this._littleEndian;
        }, e.hasTowel = function () {
          if (42 !== this.getUint16(2)) throw RangeError(g(6020));
          return !0;
        }, e.getFieldTypeName = function (t) {
          return t in Qe ? Qe[t] : null;
        }, e.getFieldTagName = function (t) {
          return t in Ke ? Ke[t] : (b(6021, t), "Tag" + t);
        }, e.getFieldTypeLength = function (t) {
          return -1 !== ["BYTE", "ASCII", "SBYTE", "UNDEFINED"].indexOf(t) ? 1 : -1 !== ["SHORT", "SSHORT"].indexOf(t) ? 2 : -1 !== ["LONG", "SLONG", "FLOAT"].indexOf(t) ? 4 : -1 !== ["RATIONAL", "SRATIONAL", "DOUBLE"].indexOf(t) ? 8 : 0;
        }, e.getFieldValues = function (t, e, i, r) {
          var a = [],
              n = this.getFieldTypeLength(e);
          if (n * i <= 4) !1 === this._littleEndian ? a.push(r >>> 8 * (4 - n)) : a.push(r);else for (var o = 0; o < i; o++) {
            var s = n * o;
            n >= 8 ? -1 !== ["RATIONAL", "SRATIONAL"].indexOf(e) ? (a.push(this.getUint32(r + s)), a.push(this.getUint32(r + s + 4))) : b(8e3) : a.push(this.getBytes(n, r + s));
          }
          return "ASCII" === e && a.forEach(function (t, e, i) {
            i[e] = String.fromCharCode(t);
          }), a;
        }, e.getBytes = function (t, e) {
          if (t <= 0) b(8001);else {
            if (t <= 1) return this.getUint8(e);
            if (t <= 2) return this.getUint16(e);
            if (t <= 3) return this.getUint32(e) >>> 8;
            if (t <= 4) return this.getUint32(e);
            b(8002);
          }
          return 0;
        }, e.getBits = function (t, e, i) {
          i = i || 0;
          var r = e + Math.floor(i / 8),
              a = i + t,
              n = 32 - t,
              o = 0,
              s = 0;
          return a <= 0 ? b(6023) : a <= 8 ? (o = 24 + i, s = this.getUint8(r)) : a <= 16 ? (o = 16 + i, s = this.getUint16(r)) : a <= 32 ? (o = i, s = this.getUint32(r)) : b(6022), {
            bits: s << o >>> n,
            byteOffset: r + Math.floor(a / 8),
            bitOffset: a % 8
          };
        }, e.parseFileDirectory = function (t) {
          var e = this.getUint16(t),
              i = [],
              r = 0,
              a = 0;

          for (r = t + 2, a = 0; a < e; r += 12, a++) {
            var n = this.getUint16(r),
                o = this.getUint16(r + 2),
                s = this.getUint32(r + 4),
                l = this.getUint32(r + 8),
                h = this.getFieldTagName(n),
                p = this.getFieldTypeName(o),
                c = this.getFieldValues(h, p, s, l);
            i[h] = {
              type: p,
              values: c
            };
          }

          this._fileDirectories.push(i);

          var u = this.getUint32(r);
          0 !== u && this.parseFileDirectory(u);
        }, e.clampColorSample = function (t, e) {
          var i = Math.pow(2, 8 - e);
          return Math.floor(t * i + (i - 1));
        }, e.parseTIFF = function (t, e) {
          var i = this;

          if (e = e || document.createElement("canvas"), this._tiffData = t, this._canvas = e, this.checkLittleEndian(), this.hasTowel()) {
            var r = this.getUint32(4);
            this._fileDirectories.length = 0, this.parseFileDirectory(r);
            var a = this._fileDirectories[0],
                n = a.ImageWidth.values[0],
                o = a.ImageLength.values[0];
            this._canvas.width = n, this._canvas.height = o;
            var s = [],
                l = a.Compression ? a.Compression.values[0] : 1,
                h = a.SamplesPerPixel.values[0],
                p = [],
                c = 0,
                u = !1;
            a.BitsPerSample.values.forEach(function (t, e) {
              p[e] = {
                bitsPerSample: t,
                hasBytesPerSample: !1,
                bytesPerSample: void 0
              }, t % 8 == 0 && (p[e].hasBytesPerSample = !0, p[e].bytesPerSample = t / 8), c += t;
            }, this);
            var d = 0;
            c % 8 == 0 && (u = !0, d = c / 8);
            var f,
                m = a.StripOffsets.values,
                y = m.length;
            if (a.StripByteCounts) f = a.StripByteCounts.values;else {
              if (b(8003), 1 !== y) throw Error(g(6024));
              f = [Math.ceil(n * o * c / 8)];
            }

            for (var _ = 1, v = 1, S = 0; S < y; S++) {
              var C = m[S];
              s[S] = [];

              for (var w = f[S], F = 0, P = 0, T = 1, D = !0, A = [], R = 0, V = 0, x = 0; F < w; F += T) {
                switch (l) {
                  case 1:
                    A = [];

                    for (var O = 0; O < h; O++) {
                      var I = p[O];

                      if (!I.hasBytesPerSample) {
                        var z = this.getBits(I.bitsPerSample, C + F, P);
                        throw A.push(z.bits), F = z.byteOffset - C, P = z.bitOffset, RangeError(g(6025));
                      }

                      var E = I.bytesPerSample * O;
                      A.push(this.getBytes(I.bytesPerSample, C + F + E));
                    }

                    if (s[S].push(A), !u) throw T = 0, RangeError(g(6026));
                    T = d;
                    break;

                  case 2:
                  case 3:
                  case 4:
                  case 5:
                  case 6:
                  case 7:
                    break;

                  case 32773:
                    if (D) {
                      D = !1;
                      var M = this.getUint8(C + F);
                      M >= 0 && M <= 127 ? _ = M + 1 : M >= -127 && M <= -1 ? v = 1 - M : D = !0;
                    } else {
                      for (var U = this.getUint8(C + F), k = 0; k < v; k++) {
                        var L = p[V];
                        if (!L.hasBytesPerSample) throw RangeError(g(6025));
                        x = x << 8 * R | U, ++R === L.bytesPerSample && (A.push(x), x = R = 0, V++), V === h && (s[S].push(A), A = [], V = 0);
                      }

                      0 == --_ && (D = !0);
                    }

                    T = 1;
                }
              }
            }

            if (e.getContext) {
              var N = this._canvas.getContext("2d");

              N.fillStyle = "rgba(255, 255, 255, 0)";
              var B = a.RowsPerStrip ? a.RowsPerStrip.values[0] : o,
                  G = s.length,
                  j = o % B,
                  W = 0 === j ? B : j,
                  Y = B,
                  H = 0,
                  q = a.PhotometricInterpretation.values[0],
                  Z = [],
                  X = 0;
              a.ExtraSamples && (X = (Z = a.ExtraSamples.values).length);
              var J = [],
                  K = 0;
              a.ColorMap && (J = a.ColorMap.values, K = Math.pow(2, p[0].bitsPerSample));

              for (var Q = 0; Q < G; Q++) {
                Q + 1 === G && (Y = W);

                for (var $ = s[Q].length, tt = H * Q, et = 0, it = 0; et < Y && it < $; et++) {
                  for (var rt = 0; rt < n; rt++, it++) {
                    var at = s[Q][it],
                        nt = 0,
                        ot = 0,
                        st = 0,
                        lt = 1;
                    if (X > 0) for (var ht = 0; ht < X; ht++) {
                      if (1 === Z[ht] || 2 === Z[ht]) {
                        lt = at[3 + ht] / 256;
                        break;
                      }
                    }
                    !function () {
                      switch (q) {
                        case 0:
                          var t = 0;
                          p[0].hasBytesPerSample && (t = Math.pow(16, 2 * p[0].bytesPerSample)), at.forEach(function (e, i, r) {
                            r[i] = t - e;
                          });

                        case 1:
                          nt = ot = st = i.clampColorSample(at[0], p[0].bitsPerSample);
                          break;

                        case 2:
                          nt = i.clampColorSample(at[0], p[0].bitsPerSample), ot = i.clampColorSample(at[1], p[1].bitsPerSample), st = i.clampColorSample(at[2], p[2].bitsPerSample);
                          break;

                        case 3:
                          if (void 0 === J) throw Error(g(6027));
                          var e = at[0];
                          nt = i.clampColorSample(J[e], 16), ot = i.clampColorSample(J[K + e], 16), st = i.clampColorSample(J[2 * K + e], 16);
                          break;

                        default:
                          throw RangeError(g(6028, q));
                      }
                    }(), N.fillStyle = "rgba(" + nt + ", " + ot + ", " + st + ", " + lt + ")", N.fillRect(rt, tt + et, 1, 1);
                  }
                }

                H = Y;
              }
            }

            return this._canvas;
          }
        }, t;
      }(),
          Ke = {
        315: "Artist",
        258: "BitsPerSample",
        265: "CellLength",
        264: "CellWidth",
        320: "ColorMap",
        259: "Compression",
        33432: "Copyright",
        306: "DateTime",
        338: "ExtraSamples",
        266: "FillOrder",
        289: "FreeByteCounts",
        288: "FreeOffsets",
        291: "GrayResponseCurve",
        290: "GrayResponseUnit",
        316: "HostComputer",
        270: "ImageDescription",
        257: "ImageLength",
        256: "ImageWidth",
        271: "Make",
        281: "MaxSampleValue",
        280: "MinSampleValue",
        272: "Model",
        254: "NewSubfileType",
        274: "Orientation",
        262: "PhotometricInterpretation",
        284: "PlanarConfiguration",
        296: "ResolutionUnit",
        278: "RowsPerStrip",
        277: "SamplesPerPixel",
        305: "Software",
        279: "StripByteCounts",
        273: "StripOffsets",
        255: "SubfileType",
        263: "Threshholding",
        282: "XResolution",
        283: "YResolution",
        326: "BadFaxLines",
        327: "CleanFaxData",
        343: "ClipPath",
        328: "ConsecutiveBadFaxLines",
        433: "Decode",
        434: "DefaultImageColor",
        269: "DocumentName",
        336: "DotRange",
        321: "HalftoneHints",
        346: "Indexed",
        347: "JPEGTables",
        285: "PageName",
        297: "PageNumber",
        317: "Predictor",
        319: "PrimaryChromaticities",
        532: "ReferenceBlackWhite",
        339: "SampleFormat",
        559: "StripRowCounts",
        330: "SubIFDs",
        292: "T4Options",
        293: "T6Options",
        325: "TileByteCounts",
        323: "TileLength",
        324: "TileOffsets",
        322: "TileWidth",
        301: "TransferFunction",
        318: "WhitePoint",
        344: "XClipPathUnits",
        286: "XPosition",
        529: "YCbCrCoefficients",
        531: "YCbCrPositioning",
        530: "YCbCrSubSampling",
        345: "YClipPathUnits",
        287: "YPosition",
        37378: "ApertureValue",
        40961: "ColorSpace",
        36868: "DateTimeDigitized",
        36867: "DateTimeOriginal",
        34665: "Exif IFD",
        36864: "ExifVersion",
        33434: "ExposureTime",
        41728: "FileSource",
        37385: "Flash",
        40960: "FlashpixVersion",
        33437: "FNumber",
        42016: "ImageUniqueID",
        37384: "LightSource",
        37500: "MakerNote",
        37377: "ShutterSpeedValue",
        37510: "UserComment",
        33723: "IPTC",
        34675: "ICC Profile",
        700: "XMP",
        42112: "GDAL_METADATA",
        42113: "GDAL_NODATA",
        34377: "Photoshop"
      },
          Qe = {
        1: "BYTE",
        2: "ASCII",
        3: "SHORT",
        4: "LONG",
        5: "RATIONAL",
        6: "SBYTE",
        7: "UNDEFINED",
        8: "SSHORT",
        9: "SLONG",
        10: "SRATIONAL",
        11: "FLOAT",
        12: "DOUBLE"
      };

      function $e(t) {
        var e = t.parent,
            i = t.getComponent(fi);
        return e && i ? $e(e) : t.getComponentsInChildren(fi);
      }

      !function (t) {
        t[t.JPG = 0] = "JPG", t[t.PNG = 1] = "PNG", t[t.TIFF = 2] = "TIFF", t[t.WEBP = 3] = "WEBP", t[t.PVR = 4] = "PVR", t[t.ETC = 5] = "ETC", t[t.S3TC = 6] = "S3TC", t[t.ATITC = 7] = "ATITC", t[t.TGA = 8] = "TGA", t[t.RAWDATA = 9] = "RAWDATA", t[t.UNKNOWN = 10] = "UNKNOWN";
      }(Ze || (Ze = {}));

      var ti,
          ei,
          ii,
          ri,
          ai,
          ni,
          oi,
          si,
          li,
          hi,
          pi,
          ci,
          ui,
          di,
          fi = t("ParticleSystem2D", (nt = h("cc.ParticleSystem2D"), ot = V(), st = x(), lt = _(at), ht = x(), pt = _(M), ct = x(), ut = x(), dt = x(), ft = x(), mt = x(), yt = x(), gt = x(), bt = x(), _t = O(), vt = x(), St = x(), Ct = x(), wt = x(), Ft = x(), Pt = x(), Tt = x(), Dt = x(), At = x(), Rt = x(), Vt = x(), xt = x(), Ot = x(), It = _(Z), zt = x(), Et = _(q), Mt = x(), Ut = x(), kt = x(), Lt = x(), Nt = x(), Bt = x(), Gt = x(), jt = x(), Wt = x(), Yt = x(), Ht = x(), qt = x(), Zt = x(), Xt = x(), Jt = x(), Kt = x(), Qt = x(), $t = v("preview"), te = x(), nt(ee = ot(ee = S(ee = C((qe = He = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, u(e, "duration", re, d(e)), u(e, "emissionRate", ae, d(e)), u(e, "life", ne, d(e)), u(e, "lifeVar", oe, d(e)), u(e, "angle", se, d(e)), u(e, "angleVar", le, d(e)), u(e, "startSize", he, d(e)), u(e, "startSizeVar", pe, d(e)), u(e, "endSize", ce, d(e)), u(e, "endSizeVar", ue, d(e)), u(e, "startSpin", de, d(e)), u(e, "startSpinVar", fe, d(e)), u(e, "endSpin", me, d(e)), u(e, "endSpinVar", ye, d(e)), u(e, "sourcePos", ge, d(e)), u(e, "posVar", be, d(e)), u(e, "emitterMode", _e, d(e)), u(e, "gravity", ve, d(e)), u(e, "speed", Se, d(e)), u(e, "speedVar", Ce, d(e)), u(e, "tangentialAccel", we, d(e)), u(e, "tangentialAccelVar", Fe, d(e)), u(e, "radialAccel", Pe, d(e)), u(e, "radialAccelVar", Te, d(e)), u(e, "rotationIsDir", De, d(e)), u(e, "startRadius", Ae, d(e)), u(e, "startRadiusVar", Re, d(e)), u(e, "endRadius", Ve, d(e)), u(e, "endRadiusVar", xe, d(e)), u(e, "rotatePerS", Oe, d(e)), u(e, "rotatePerSVar", Ie, d(e)), e.aspectRatio = 1, u(e, "playOnLoad", ze, d(e)), u(e, "autoRemoveOnFinish", Ee, d(e)), u(e, "_preview", Me, d(e)), u(e, "_custom", Ue, d(e)), u(e, "_file", ke, d(e)), u(e, "_spriteFrame", Le, d(e)), u(e, "_totalParticles", Ne, d(e)), u(e, "_startColor", Be, d(e)), u(e, "_startColorVar", Ge, d(e)), u(e, "_endColor", je, d(e)), u(e, "_endColorVar", We, d(e)), u(e, "_positionType", Ye, d(e)), e._stopped = !0, e.initProperties(), e;
        }

        r(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          t.prototype.onEnable.call(this), this._updateMaterial();
        }, i.onDestroy = function () {
          t.prototype.onDestroy.call(this), this.autoRemoveOnFinish && (this.autoRemoveOnFinish = !1), this._simulator.uvFilled = 0;
        }, i.initProperties = function () {
          this._previewTimer = null, this._focused = !1, this.aspectRatio = 1, this._simulator = new rt(this);
        }, i.onFocusInEditor = function () {
          this._focused = !0;

          for (var t = $e(this.node), e = 0; e < t.length; ++e) {
            t[e]._startPreview();
          }
        }, i.onLostFocusInEditor = function () {
          this._focused = !1;

          for (var t = $e(this.node), e = 0; e < t.length; ++e) {
            t[e]._stopPreview();
          }
        }, i._startPreview = function () {
          this._preview && this.resetSystem();
        }, i._stopPreview = function () {
          this._preview && (this.resetSystem(), this.stopSystem()), this._previewTimer && clearInterval(this._previewTimer);
        }, i.__preload = function () {
          t.prototype.__preload.call(this), this._custom && this.spriteFrame && !this._renderSpriteFrame ? this._applySpriteFrame() : this._file && (this._custom ? !this._getTexture() && this._applyFile() : this._applyFile()), this.playOnLoad && this.resetSystem();
        }, i._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this._assembler = t), this._assembler && this._assembler.createData && (this._simulator.renderData = this._assembler.createData(this));
        }, i.lateUpdate = function (t) {
          this._simulator.finished || this._simulator.step(t);
        }, i.addParticle = function () {}, i.stopSystem = function () {
          this._stopped = !0, this._simulator.stop();
        }, i.resetSystem = function () {
          this._stopped = !1, this._simulator.reset(), this._renderFlag = this._canRender();
        }, i.isFull = function () {
          return this.particleCount >= this.totalParticles;
        }, i._applyFile = function () {
          var t = this._file;

          if (t) {
            if (!t) return void w(6029);
            if (!this.isValid) return;
            this._plistFile = t.nativeUrl, this._custom || (this._spriteFrame !== t.spriteFrame && (this.spriteFrame = t.spriteFrame), this._initWithDictionary(t._nativeAsset)), this._spriteFrame ? !this._renderSpriteFrame && this._spriteFrame && this._applySpriteFrame() : t.spriteFrame ? this.spriteFrame = t.spriteFrame : this._custom && this._initTextureWithDictionary(t._nativeAsset);
          }
        }, i._initTextureWithDictionary = function (t) {
          var e,
              i = this;

          if (t.spriteFrameUuid) {
            var r = t.spriteFrameUuid;
            E.loadAny(r, function (e, r) {
              e ? (t.spriteFrameUuid = void 0, i._initTextureWithDictionary(t), F(e)) : i.spriteFrame = r;
            });
          } else {
            var a = P(this._plistFile, t.textureFileName || "");
            if (t.textureFileName) E.loadRemote(a, function (e, r) {
              e ? (t.textureFileName = void 0, i._initTextureWithDictionary(t), F(e)) : i.spriteFrame = M.createWithImage(r);
            });else if (t.textureImageData) {
              var n = t.textureImageData;
              if (!(n && n.length > 0)) return !1;
              var o = E.assets.get(a);

              if (!o) {
                var s = G.unzipBase64AsArray(n, 1);
                if (!s) return T(6030, this._file.name), !1;
                var l = (e = s).length > 8 && 137 === e[0] && 80 === e[1] && 78 === e[2] && 71 === e[3] && 13 === e[4] && 10 === e[5] && 26 === e[6] && 10 === e[7] ? Ze.PNG : e.length > 2 && (73 === e[0] && 73 === e[1] || 77 === e[0] && 77 === e[1] || 255 === e[0] && 216 === e[1]) ? Ze.TIFF : Ze.UNKNOWN;
                if (l !== Ze.TIFF && l !== Ze.PNG) return T(6031, this._file.name), !1;
                var h = document.createElement("canvas");
                l === Ze.PNG ? new Xe(s).render(h) : (this._tiffReader || (this._tiffReader = new Je()), this._tiffReader.parseTIFF(s, h)), o = new D(h), E.assets.add(a, o);
              }

              o || T(6032, this._file.name), this.spriteFrame = M.createWithImage(o);
            }
          }

          return !0;
        }, i._initWithDictionary = function (t) {
          this.totalParticles = parseInt(t.maxParticles || 0), this.life = parseFloat(t.particleLifespan || 0), this.lifeVar = parseFloat(t.particleLifespanVariance || 0);
          var e = t.emissionRate;
          this.emissionRate = e || Math.min(this.totalParticles / this.life, Number.MAX_VALUE), this.duration = parseFloat(t.duration || 0), this._srcBlendFactor = parseInt(t.blendFuncSource || A.SRC_ALPHA), this._dstBlendFactor = parseInt(t.blendFuncDestination || A.ONE_MINUS_SRC_ALPHA);
          var i = this._startColor;
          i.r = 255 * parseFloat(t.startColorRed || 0), i.g = 255 * parseFloat(t.startColorGreen || 0), i.b = 255 * parseFloat(t.startColorBlue || 0), i.a = 255 * parseFloat(t.startColorAlpha || 0);
          var r = this._startColorVar;
          r.r = 255 * parseFloat(t.startColorVarianceRed || 0), r.g = 255 * parseFloat(t.startColorVarianceGreen || 0), r.b = 255 * parseFloat(t.startColorVarianceBlue || 0), r.a = 255 * parseFloat(t.startColorVarianceAlpha || 0);
          var a = this._endColor;
          a.r = 255 * parseFloat(t.finishColorRed || 0), a.g = 255 * parseFloat(t.finishColorGreen || 0), a.b = 255 * parseFloat(t.finishColorBlue || 0), a.a = 255 * parseFloat(t.finishColorAlpha || 0);
          var n = this._endColorVar;

          if (n.r = 255 * parseFloat(t.finishColorVarianceRed || 0), n.g = 255 * parseFloat(t.finishColorVarianceGreen || 0), n.b = 255 * parseFloat(t.finishColorVarianceBlue || 0), n.a = 255 * parseFloat(t.finishColorVarianceAlpha || 0), this.startSize = parseFloat(t.startParticleSize || 0), this.startSizeVar = parseFloat(t.startParticleSizeVariance || 0), this.endSize = parseFloat(t.finishParticleSize || 0), this.endSizeVar = parseFloat(t.finishParticleSizeVariance || 0), this.positionType = parseFloat(void 0 !== t.positionType ? t.positionType : Z.FREE), this.sourcePos.set(0, 0), this.posVar.set(parseFloat(t.sourcePositionVariancex || 0), parseFloat(t.sourcePositionVariancey || 0)), this.angle = parseFloat(t.angle || 0), this.angleVar = parseFloat(t.angleVariance || 0), this.startSpin = parseFloat(t.rotationStart || 0), this.startSpinVar = parseFloat(t.rotationStartVariance || 0), this.endSpin = parseFloat(t.rotationEnd || 0), this.endSpinVar = parseFloat(t.rotationEndVariance || 0), this.emitterMode = parseInt(t.emitterType || q.GRAVITY), this.emitterMode === q.GRAVITY) {
            this.gravity.set(parseFloat(t.gravityx || 0), parseFloat(t.gravityy || 0)), this.speed = parseFloat(t.speed || 0), this.speedVar = parseFloat(t.speedVariance || 0), this.radialAccel = parseFloat(t.radialAcceleration || 0), this.radialAccelVar = parseFloat(t.radialAccelVariance || 0), this.tangentialAccel = parseFloat(t.tangentialAcceleration || 0), this.tangentialAccelVar = parseFloat(t.tangentialAccelVariance || 0);
            var o = t.rotationIsDir || "";
            null !== o ? (o = o.toString().toLowerCase(), this.rotationIsDir = "true" === o || "1" === o) : this.rotationIsDir = !1;
          } else {
            if (this.emitterMode !== q.RADIUS) return T(6009), !1;
            this.startRadius = parseFloat(t.maxRadius || 0), this.startRadiusVar = parseFloat(t.maxRadiusVariance || 0), this.endRadius = parseFloat(t.minRadius || 0), this.endRadiusVar = parseFloat(t.minRadiusVariance || 0), this.rotatePerS = parseFloat(t.rotatePerSecond || 0), this.rotatePerSVar = parseFloat(t.rotatePerSecondVariance || 0);
          }

          return this._initTextureWithDictionary(t), !0;
        }, i._syncAspect = function () {
          if (this._renderSpriteFrame) {
            var t = this._renderSpriteFrame.rect;
            this.aspectRatio = t.width / t.height;
          }
        }, i._applySpriteFrame = function () {
          this._renderSpriteFrame = this._renderSpriteFrame || this._spriteFrame, this._renderSpriteFrame ? this._renderSpriteFrame.texture && (this._simulator.updateUVs(!0), this._syncAspect(), this._updateMaterial(), this._stopped = !1, this._renderFlag = this._canRender()) : this.resetSystem();
        }, i._getTexture = function () {
          return this._renderSpriteFrame && this._renderSpriteFrame.texture;
        }, i._updateMaterial = function () {
          var t = this.getMaterialInstance(0);
          t && t.recompileShaders({
            USE_LOCAL: this._positionType !== Z.FREE
          });
        }, i._finishedSimulation = function () {
          this.resetSystem(), this.stopSystem(), this._renderFlag = this._canRender(), this.autoRemoveOnFinish && this._stopped && this.node.destroy();
        }, i._canRender = function () {
          return t.prototype._canRender.call(this) && !this._stopped && null !== this._renderSpriteFrame;
        }, i._render = function (t) {
          this._positionType === Z.RELATIVE ? t.commitComp(this, this._renderSpriteFrame, this._assembler, this.node.parent) : this.positionType === Z.GROUPED ? t.commitComp(this, this._renderSpriteFrame, this._assembler, this.node) : t.commitComp(this, this._renderSpriteFrame, this._assembler, null);
        }, R(e, [{
          key: "custom",
          get: function get() {
            return this._custom;
          },
          set: function set(t) {
            this._custom !== t && (this._custom = t, this._applyFile());
          }
        }, {
          key: "file",
          get: function get() {
            return this._file;
          },
          set: function set(t) {
            this._file !== t && (this._file = t, t ? this._applyFile() : this.custom = !0);
          }
        }, {
          key: "spriteFrame",
          get: function get() {
            return this._spriteFrame;
          },
          set: function set(t) {
            this._renderSpriteFrame !== t && (this._renderSpriteFrame = t, t && !t._uuid || (this._spriteFrame = t), this._applySpriteFrame());
          }
        }, {
          key: "particleCount",
          get: function get() {
            return this._simulator.particles.length;
          }
        }, {
          key: "totalParticles",
          get: function get() {
            return this._totalParticles;
          },
          set: function set(t) {
            this._totalParticles !== t && (this._totalParticles = t);
          }
        }, {
          key: "startColor",
          get: function get() {
            return this._startColor;
          },
          set: function set(t) {
            this._startColor.r = t.r, this._startColor.g = t.g, this._startColor.b = t.b, this._startColor.a = t.a;
          }
        }, {
          key: "startColorVar",
          get: function get() {
            return this._startColorVar;
          },
          set: function set(t) {
            this._startColorVar.r = t.r, this._startColorVar.g = t.g, this._startColorVar.b = t.b, this._startColorVar.a = t.a;
          }
        }, {
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set() {}
        }, {
          key: "endColor",
          get: function get() {
            return this._endColor;
          },
          set: function set(t) {
            this._endColor.r = t.r, this._endColor.g = t.g, this._endColor.b = t.b, this._endColor.a = t.a;
          }
        }, {
          key: "endColorVar",
          get: function get() {
            return this._endColorVar;
          },
          set: function set(t) {
            this._endColorVar.r = t.r, this._endColorVar.g = t.g, this._endColorVar.b = t.b, this._endColorVar.a = t.a;
          }
        }, {
          key: "positionType",
          get: function get() {
            return this._positionType;
          },
          set: function set(t) {
            this._positionType = t, this._updateMaterial();
          }
        }, {
          key: "preview",
          get: function get() {
            return this._preview;
          },
          set: function set(t) {
            t ? this._startPreview() : this._stopPreview(), this._preview = t;
          }
        }, {
          key: "stopped",
          get: function get() {
            return this._stopped;
          }
        }, {
          key: "active",
          get: function get() {
            return this._simulator.active;
          }
        }, {
          key: "assembler",
          get: function get() {
            return this._assembler;
          }
        }]), e;
      }(U), He.EmitterMode = q, He.PositionType = Z, He.DURATION_INFINITY = -1, He.START_SIZE_EQUAL_TO_END_SIZE = -1, He.START_RADIUS_EQUAL_TO_END_RADIUS = -1, p((ie = qe).prototype, "custom", [y, st], Object.getOwnPropertyDescriptor(ie.prototype, "custom"), ie.prototype), p(ie.prototype, "file", [lt, ht], Object.getOwnPropertyDescriptor(ie.prototype, "file"), ie.prototype), p(ie.prototype, "spriteFrame", [pt, ct], Object.getOwnPropertyDescriptor(ie.prototype, "spriteFrame"), ie.prototype), p(ie.prototype, "totalParticles", [y, ut], Object.getOwnPropertyDescriptor(ie.prototype, "totalParticles"), ie.prototype), re = p(ie.prototype, "duration", [m, y, dt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), ae = p(ie.prototype, "emissionRate", [m, y, ft], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 10;
        }
      }), ne = p(ie.prototype, "life", [m, y, mt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), oe = p(ie.prototype, "lifeVar", [m, y, yt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), p(ie.prototype, "startColor", [y, gt], Object.getOwnPropertyDescriptor(ie.prototype, "startColor"), ie.prototype), p(ie.prototype, "startColorVar", [y, bt], Object.getOwnPropertyDescriptor(ie.prototype, "startColorVar"), ie.prototype), p(ie.prototype, "color", [_t], Object.getOwnPropertyDescriptor(ie.prototype, "color"), ie.prototype), p(ie.prototype, "endColor", [y, vt], Object.getOwnPropertyDescriptor(ie.prototype, "endColor"), ie.prototype), p(ie.prototype, "endColorVar", [y, St], Object.getOwnPropertyDescriptor(ie.prototype, "endColorVar"), ie.prototype), se = p(ie.prototype, "angle", [m, y, Ct], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 90;
        }
      }), le = p(ie.prototype, "angleVar", [m, y, wt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 20;
        }
      }), he = p(ie.prototype, "startSize", [m, y, Ft], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 50;
        }
      }), pe = p(ie.prototype, "startSizeVar", [m, y, Pt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ce = p(ie.prototype, "endSize", [m, y, Tt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ue = p(ie.prototype, "endSizeVar", [m, y, Dt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), de = p(ie.prototype, "startSpin", [m, y, At], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), fe = p(ie.prototype, "startSpinVar", [m, y, Rt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), me = p(ie.prototype, "endSpin", [m, y, Vt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ye = p(ie.prototype, "endSpinVar", [m, y, xt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ge = p(ie.prototype, "sourcePos", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return i.ZERO.clone();
        }
      }), be = p(ie.prototype, "posVar", [m, y, Ot], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return i.ZERO.clone();
        }
      }), p(ie.prototype, "positionType", [It, zt], Object.getOwnPropertyDescriptor(ie.prototype, "positionType"), ie.prototype), p(ie.prototype, "preview", [y], Object.getOwnPropertyDescriptor(ie.prototype, "preview"), ie.prototype), _e = p(ie.prototype, "emitterMode", [m, y, Et, Mt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return q.GRAVITY;
        }
      }), ve = p(ie.prototype, "gravity", [m, y, Ut], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return i.ZERO.clone();
        }
      }), Se = p(ie.prototype, "speed", [m, y, kt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 180;
        }
      }), Ce = p(ie.prototype, "speedVar", [m, y, Lt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 50;
        }
      }), we = p(ie.prototype, "tangentialAccel", [m, y, Nt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 80;
        }
      }), Fe = p(ie.prototype, "tangentialAccelVar", [m, y, Bt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Pe = p(ie.prototype, "radialAccel", [m, y, Gt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Te = p(ie.prototype, "radialAccelVar", [m, y, jt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), De = p(ie.prototype, "rotationIsDir", [m, y, Wt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Ae = p(ie.prototype, "startRadius", [m, y, Yt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Re = p(ie.prototype, "startRadiusVar", [m, y, Ht], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ve = p(ie.prototype, "endRadius", [m, y, qt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), xe = p(ie.prototype, "endRadiusVar", [m, y, Zt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Oe = p(ie.prototype, "rotatePerS", [m, y, Xt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ie = p(ie.prototype, "rotatePerSVar", [m, y, Jt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ze = p(ie.prototype, "playOnLoad", [m, y, Kt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Ee = p(ie.prototype, "autoRemoveOnFinish", [m, y, Qt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Me = p(ie.prototype, "_preview", [$t, y, te], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Ue = p(ie.prototype, "_custom", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), ke = p(ie.prototype, "_file", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Le = p(ie.prototype, "_spriteFrame", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ne = p(ie.prototype, "_totalParticles", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 150;
        }
      }), Be = p(ie.prototype, "_startColor", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new a(255, 255, 255, 255);
        }
      }), Ge = p(ie.prototype, "_startColorVar", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new a(0, 0, 0, 0);
        }
      }), je = p(ie.prototype, "_endColor", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new a(255, 255, 255, 0);
        }
      }), We = p(ie.prototype, "_endColorVar", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new a(0, 0, 0, 0);
        }
      }), Ye = p(ie.prototype, "_positionType", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Z.FREE;
        }
      }), ee = ie)) || ee) || ee) || ee) || ee)),
          mi = function () {
        function t(t, e) {
          this.point = new i(), this.dir = new i(), this.distance = 0, this.time = 0, t && this.point.set(t), e && this.dir.set(e);
        }

        var e = t.prototype;
        return e.setPoint = function (t, e) {
          this.point.x = t, this.point.y = e;
        }, e.setDir = function (t, e) {
          this.dir.x = t, this.dir.y = e;
        }, t;
      }(),
          yi = t("MotionStreak", (ti = h("cc.MotionStreak"), ei = V(), ii = z(), ri = _(I), ti(ai = C(ai = S(ai = ei(ai = ii((di = ui = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
            r[a] = arguments[a];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, u(e, "_preview", oi, d(e)), u(e, "_fadeTime", si, d(e)), u(e, "_minSeg", li, d(e)), u(e, "_stroke", hi, d(e)), u(e, "_texture", pi, d(e)), u(e, "_fastMode", ci, d(e)), e._points = [], e;
        }

        r(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          t.prototype.onEnable.call(this), this.reset();
        }, i._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this._assembler = t), this._renderData || this._assembler && this._assembler.createData && (this._renderData = this._assembler.createData(this), this._renderData.material = this.material);
        }, i.onFocusInEditor = function () {
          this._preview && this.reset();
        }, i.onLostFocusInEditor = function () {
          this._preview && this.reset();
        }, i.reset = function () {
          this._points.length = 0, this._renderData && this._renderData.clear();
        }, i.lateUpdate = function (t) {
          this._assembler && this._assembler.update(this, t);
        }, i._render = function (t) {
          t.commitComp(this, this._texture, this._assembler, null);
        }, R(e, [{
          key: "preview",
          get: function get() {
            return this._preview;
          },
          set: function set(t) {
            this._preview = t, this.reset();
          }
        }, {
          key: "fadeTime",
          get: function get() {
            return this._fadeTime;
          },
          set: function set(t) {
            this._fadeTime = t, this.reset();
          }
        }, {
          key: "minSeg",
          get: function get() {
            return this._minSeg;
          },
          set: function set(t) {
            this._minSeg = t;
          }
        }, {
          key: "stroke",
          get: function get() {
            return this._stroke;
          },
          set: function set(t) {
            this._stroke = t;
          }
        }, {
          key: "texture",
          get: function get() {
            return this._texture;
          },
          set: function set(t) {
            this._texture !== t && (this._texture = t);
          }
        }, {
          key: "fastMode",
          get: function get() {
            return this._fastMode;
          },
          set: function set(t) {
            this._fastMode = t;
          }
        }, {
          key: "points",
          get: function get() {
            return this._points;
          }
        }]), e;
      }(U), ui.Point = mi, p((ni = di).prototype, "preview", [y], Object.getOwnPropertyDescriptor(ni.prototype, "preview"), ni.prototype), p(ni.prototype, "fadeTime", [y], Object.getOwnPropertyDescriptor(ni.prototype, "fadeTime"), ni.prototype), p(ni.prototype, "minSeg", [y], Object.getOwnPropertyDescriptor(ni.prototype, "minSeg"), ni.prototype), p(ni.prototype, "stroke", [y], Object.getOwnPropertyDescriptor(ni.prototype, "stroke"), ni.prototype), p(ni.prototype, "texture", [ri], Object.getOwnPropertyDescriptor(ni.prototype, "texture"), ni.prototype), p(ni.prototype, "fastMode", [y], Object.getOwnPropertyDescriptor(ni.prototype, "fastMode"), ni.prototype), oi = p(ni.prototype, "_preview", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), si = p(ni.prototype, "_fadeTime", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), li = p(ni.prototype, "_minSeg", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), hi = p(ni.prototype, "_stroke", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 64;
        }
      }), pi = p(ni.prototype, "_texture", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ci = p(ni.prototype, "_fastMode", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), ai = ni)) || ai) || ai) || ai) || ai) || ai)),
          gi = (new i(), new i()),
          bi = new i();

      function _i(t, e) {
        return t.x = -e.y, t.y = e.x, t;
      }

      var vi = {
        createData: function createData(t) {
          var e = t.requestRenderData();
          return e.dataLength = 4, e.vertexCount = 16, e.indicesCount = 42, e;
        },
        update: function update(t, e) {
          var r,
              a = t.stroke / 2,
              n = t.node.worldMatrix,
              o = n.m12,
              s = n.m13,
              l = t.points;

          if (l.length > 1) {
            var h = l[0],
                p = h.point.x - o,
                c = h.point.y - s;
            p * p + c * c < t.minSeg && (r = h);
          }

          r || (r = new yi.Point(), l.unshift(r)), r.setPoint(o, s), r.time = t.fadeTime + e;
          var u,
              d = 0;

          if (!(l.length < 2)) {
            var f = t.renderData,
                m = t.color,
                y = m.r,
                g = m.g,
                b = m.b,
                _ = m.a,
                v = l[1];
            v.distance = i.subtract(bi, r.point, v.point).length(), bi.normalize(), v.setDir(bi.x, bi.y), r.setDir(bi.x, bi.y), f.dataLength = 2 * l.length;

            for (var S = f.data, C = t.fadeTime, w = !1, F = l.length - 1; F >= 0; F--) {
              var P = l[F],
                  T = P.point,
                  D = P.dir;
              if (P.time -= e, P.time < 0) l.splice(F, 1);else {
                var A = P.time / C,
                    R = l[F - 1];

                if (!w) {
                  if (!R) {
                    l.splice(F, 1);
                    continue;
                  }

                  T.x = R.point.x - D.x * A, T.y = R.point.y - D.y * A;
                }

                w = !0, _i(gi, D);
                var V = (A * _ << 24 >>> 0) + (b << 16) + (g << 8) + y,
                    x = d;
                S[x].x = T.x + gi.x * a, S[x].y = T.y + gi.y * a, S[x].u = 1, S[x].v = A, S[x].color._val = V, S[x += 1].x = T.x - gi.x * a, S[x].y = T.y - gi.y * a, S[x].u = 0, S[x].v = A, S[x].color._val = V, d += 2;
              }
            }

            u = d <= 2 ? 0 : 3 * (d - 2), f.vertexCount = d, f.indicesCount = u;
          }
        },
        updateRenderData: function updateRenderData() {},
        fillBuffers: function fillBuffers(t, e) {
          var i = t.renderData,
              r = i.data,
              n = (t.node, e.acquireBufferBatch()),
              o = n.byteOffset >> 2,
              s = n.indicesOffset,
              l = n.vertexOffset;
          n.request(i.vertexCount, i.indicesCount) || (n = e.currBufferBatch, s = 0, l = 0);

          for (var h = n.vData, p = n.iData, c = i.vertexCount, u = i.indicesCount, d = 0; d < c; d++) {
            var f = r[d];
            h[o++] = f.x, h[o++] = f.y, h[o++] = f.z, h[o++] = f.u, h[o++] = f.v, a.toArray(h, f.color, o), o += 4;
          }

          for (var m = 0, y = u; m < y; m += 2) {
            var g = l + m;
            p[s++] = g, p[s++] = g + 2, p[s++] = g + 1, p[s++] = g + 1, p[s++] = g + 2, p[s++] = g + 3;
          }
        }
      },
          Si = t("MotionStreakAssemblerManager", {
        getAssembler: function getAssembler() {
          return vi;
        }
      });
      yi.Assembler = Si;
      var Ci = {
        maxParticleDeltaTime: 0,
        createData: function createData() {
          return k.add();
        },
        updateRenderData: function updateRenderData() {},
        fillBuffers: function fillBuffers(t, e) {
          if (null !== t) {
            var i = t._simulator.renderData;

            if (0 !== i.vertexCount && 0 !== i.indicesCount) {
              var r = e.acquireBufferBatch(),
                  a = r.byteOffset >> 2,
                  n = r.indicesOffset,
                  o = r.vertexOffset;
              r.request(i.vertexCount, i.indicesCount) || (r = e.currBufferBatch, n = 0, o = 0);

              for (var s = r.vData, l = r.iData, h = i.vData, p = i.iData, c = 9 * i.vertexCount, u = 0; u < c; u++) {
                s[a++] = h[u];
              }

              for (var d = i.indicesCount, f = 0; f < d; f++) {
                l[n++] = p[f] + o;
              }
            }
          }
        }
      },
          wi = t("ParticleSystem2DAssembler", {
        getAssembler: function getAssembler() {
          return Ci.maxParticleDeltaTime || (Ci.maxParticleDeltaTime = c.game.frameTime / 1e3 * 2), Ci;
        }
      });
      fi.Assembler = wi;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/particle.js", function(require, module, exports){ 			
"use strict";

require("@babel/runtime/helpers/Arrayincludes");

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./index-da6f70c6.js", "./create-mesh-9aab53f1.js", "./mesh-c8768986.js", "./mesh-renderer-86d175c0.js", "./skeleton-314b4fa5.js"], function (t) {
  "use strict";

  var e, i, r, a, n, o, s, l, u, h, c, _, p, d, f, m, y, v, b, g, M, w, S, T, O, x, z, R, E, C, A, D, F, I, P, L, B, U, V, k, N, G, H, W, j, X, K, Y, q, Q, Z, J, $, tt, et, it, rt, at, nt, ot, st, lt, ut, ht, ct, _t, pt, dt, ft, mt, yt, vt, bt, gt, Mt, wt, St, Tt, Ot, xt, zt, Rt, Et, Ct;

  return {
    setters: [function (t) {
      e = t.ef, i = t.ek, r = t.dn, a = t.fY, n = t.ec, o = t.a3, s = t.cj, l = t.aH, u = t.b3, h = t.x, c = t.l, _ = t.dr, p = t.dQ, d = t.e2, f = t.eg, m = t.fZ, y = t.f_, v = t.fU, b = t.eh, g = t.ed, M = t.c7, w = t.cs, S = t.cr, T = t.dO, O = t.ei, x = t.c5, z = t.t, R = t.b4, E = t.aq, C = t.z, A = t.G, D = t.di, F = t.au, I = t.as, P = t.b8, L = t.cJ, B = t.dU, U = t.cq, V = t.f4, k = t.gO, N = t.eu, G = t.dm, H = t.fJ, W = t.gm, j = t.gP, X = t.cA, K = t.eR, Y = t.c3, q = t.ej, Q = t.gf, Z = t.c9, J = t.cc, $ = t.cw, tt = t.ct, et = t.cu, it = t.cv, rt = t.gQ, at = t.gR, nt = t.gv, ot = t.cB, st = t.co, lt = t.go, ut = t.R, ht = t.bO, ct = t.f, _t = t.F, pt = t.P, dt = t.eb, ft = t.gS, mt = t.gn, yt = t.ga, vt = t.f$, bt = t.d3, gt = t.dH, Mt = t.cS, wt = t.eM;
    }, function (t) {
      St = t.d, Tt = t.D;
    }, function (t) {
      Ot = t.i, xt = t.M, zt = t.o;
    }, function () {}, function () {}, function () {}, function (t) {
      Rt = t.R;
    }, function () {}, function () {}, function (t) {
      Et = t.c;
    }, function (t) {
      Ct = t.M;
    }, function () {}, function () {}],
    execute: function execute() {
      var At,
          Dt,
          Ft,
          It,
          Pt,
          Lt,
          Bt,
          Ut,
          Vt,
          kt,
          Nt,
          Gt,
          Ht,
          Wt,
          jt,
          Xt,
          Kt,
          Yt,
          qt,
          Qt,
          Zt,
          Jt,
          $t,
          te,
          ee,
          ie,
          re,
          ae,
          ne,
          oe,
          se,
          le,
          ue,
          he,
          ce,
          _e,
          pe,
          de,
          fe,
          me,
          ye,
          ve,
          be,
          ge,
          Me,
          we,
          Se,
          Te,
          Oe,
          xe = (At = e("cc.Billboard"), Dt = m(), Ft = y(), It = i(r), Pt = i(r), Lt = v(), Bt = v(), Ut = v(), Vt = v(), Kt = At(kt = Dt(kt = Ft(kt = a((Xt = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, b(e, "_texture", Gt, g(e)), b(e, "_height", Ht, g(e)), b(e, "_width", Wt, g(e)), b(e, "_rotation", jt, g(e)), e._model = null, e._mesh = null, e._material = null, e._uniform = new M(1, 1, 0, 0), e;
        }

        n(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          this.createModel();
        }, i.onEnable = function () {
          this.attachToScene(), this._model.enabled = !0, this.width = this._width, this.height = this._height, this.rotation = this.rotation, this.texture = this.texture;
        }, i.onDisable = function () {
          this.detachFromScene();
        }, i.attachToScene = function () {
          this._model && this.node && this.node.scene && (this._model.scene && this.detachFromScene(), this._getRenderScene().addModel(this._model));
        }, i.detachFromScene = function () {
          this._model && this._model.scene && this._model.scene.removeModel(this._model);
        }, i.createModel = function () {
          this._mesh = Et({
            primitiveMode: o.TRIANGLE_LIST,
            positions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            uvs: [0, 0, 1, 0, 0, 1, 1, 1],
            colors: [s.WHITE.r, s.WHITE.g, s.WHITE.b, s.WHITE.a, s.WHITE.r, s.WHITE.g, s.WHITE.b, s.WHITE.a, s.WHITE.r, s.WHITE.g, s.WHITE.b, s.WHITE.a, s.WHITE.r, s.WHITE.g, s.WHITE.b, s.WHITE.a],
            attributes: [new l(u.ATTR_POSITION, h.RGB32F), new l(u.ATTR_TEX_COORD, h.RG32F), new l(u.ATTR_COLOR, h.RGBA8UI, !0)],
            indices: [0, 1, 2, 1, 2, 3]
          }, void 0, {
            calculateBounds: !1
          });
          var t = this._model = c.director.root.createModel(Ot, this.node);
          t.node = t.transform = this.node, null == this._material && (this._material = new _(), this._material.copy(p.get("default-billboard-material"))), t.initSubModel(0, this._mesh.renderingSubMeshes[0], this._material);
        }, d(e, [{
          key: "texture",
          get: function get() {
            return this._texture;
          },
          set: function set(t) {
            this._texture = t, this._material && this._material.setProperty("mainTexture", t);
          }
        }, {
          key: "height",
          get: function get() {
            return this._height;
          },
          set: function set(t) {
            this._height = t, this._material && (this._uniform.y = t, this._material.setProperty("cc_size_rotation", this._uniform));
          }
        }, {
          key: "width",
          get: function get() {
            return this._width;
          },
          set: function set(t) {
            this._width = t, this._material && (this._uniform.x = t, this._material.setProperty("cc_size_rotation", this._uniform));
          }
        }, {
          key: "rotation",
          get: function get() {
            return Math.round(100 * w(this._rotation)) / 100;
          },
          set: function set(t) {
            this._rotation = S(t), this._material && (this._uniform.z = this._rotation, this._material.setProperty("cc_size_rotation", this._uniform));
          }
        }]), e;
      }(T), Gt = f((Nt = Xt).prototype, "_texture", [It], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(Nt.prototype, "texture", [Pt, Lt], Object.getOwnPropertyDescriptor(Nt.prototype, "texture"), Nt.prototype), Ht = f(Nt.prototype, "_height", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), f(Nt.prototype, "height", [Bt], Object.getOwnPropertyDescriptor(Nt.prototype, "height"), Nt.prototype), Wt = f(Nt.prototype, "_width", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), f(Nt.prototype, "width", [Ut], Object.getOwnPropertyDescriptor(Nt.prototype, "width"), Nt.prototype), jt = f(Nt.prototype, "_rotation", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), f(Nt.prototype, "rotation", [Vt], Object.getOwnPropertyDescriptor(Nt.prototype, "rotation"), Nt.prototype), kt = Nt)) || kt) || kt) || kt) || kt, t({
        Billboard: Kt,
        BillboardComponent: Kt
      }), Kt),
          ze = [new l(u.ATTR_POSITION, h.RGB32F), new l(u.ATTR_TEX_COORD, h.RGBA32F), new l(u.ATTR_TEX_COORD1, h.RGB32F), new l(u.ATTR_COLOR, h.RGBA8, !0)],
          Re = new x(),
          Ee = new x(),
          Ce = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._capacity = void 0, e._vertSize = 0, e._vBuffer = null, e._vertAttrsFloatCount = 0, e._vdataF32 = null, e._vdataUint32 = null, e._iaInfo = void 0, e._iaInfoBuffer = void 0, e._subMeshData = null, e._vertCount = 0, e._indexCount = 0, e._material = null, e.type = xt.LINE, e._capacity = 100, e._iaInfo = new F([new I()]), e._iaInfoBuffer = e._device.createBuffer(new E(C.INDIRECT, A.HOST | A.DEVICE, P, P)), e;
        }

        n(e, t);
        var i = e.prototype;
        return i.setCapacity = function (t) {
          this._capacity = t, this.createBuffer();
        }, i.createBuffer = function () {
          this._vertSize = 0;

          for (var t, e = z(ze); !(t = e()).done;) {
            var i = t.value;
            i.offset = this._vertSize, this._vertSize += R[i.format].size;
          }

          this._vertAttrsFloatCount = this._vertSize / 4, this._vBuffer = this.createSubMeshData(), this._vdataF32 = new Float32Array(this._vBuffer), this._vdataUint32 = new Uint32Array(this._vBuffer);
        }, i.updateMaterial = function (e) {
          this._material = e, t.prototype.setSubModelMaterial.call(this, 0, e);
        }, i.createSubMeshData = function () {
          this._subMeshData && this.destroySubMeshData(), this._vertCount = 2, this._indexCount = 6;

          var t = this._device.createBuffer(new E(C.VERTEX | C.TRANSFER_DST, A.HOST | A.DEVICE, this._vertSize * this._capacity * this._vertCount, this._vertSize)),
              e = new ArrayBuffer(this._vertSize * this._capacity * this._vertCount);

          t.update(e);

          for (var i = new Uint16Array((this._capacity - 1) * this._indexCount), r = 0, a = 0; a < this._capacity - 1; ++a) {
            var n = 2 * a;
            i[r++] = n, i[r++] = n + 1, i[r++] = n + 2, i[r++] = n + 3, i[r++] = n + 2, i[r++] = n + 1;
          }

          var s = this._device.createBuffer(new E(C.INDEX | C.TRANSFER_DST, A.HOST | A.DEVICE, (this._capacity - 1) * this._indexCount * Uint16Array.BYTES_PER_ELEMENT, Uint16Array.BYTES_PER_ELEMENT));

          return s.update(i), this._iaInfo.drawInfos[0].vertexCount = this._capacity * this._vertCount, this._iaInfo.drawInfos[0].indexCount = (this._capacity - 1) * this._indexCount, this._iaInfoBuffer.update(this._iaInfo), this._subMeshData = new D([t], ze, o.TRIANGLE_LIST, s, this._iaInfoBuffer), this.initSubModel(0, this._subMeshData, this._material), e;
        }, i.addLineVertexData = function (t, e, i) {
          if (t.length > 1) {
            var r = 0;
            x.subtract(Re, t[1], t[0]), this._vdataF32[r++] = t[0].x, this._vdataF32[r++] = t[0].y, this._vdataF32[r++] = t[0].z, this._vdataF32[r++] = 0, this._vdataF32[r++] = e.evaluate(0, 1), this._vdataF32[r++] = 0, this._vdataF32[r++] = 0, this._vdataF32[r++] = Re.x, this._vdataF32[r++] = Re.y, this._vdataF32[r++] = Re.z, this._vdataUint32[r++] = i.evaluate(0, 1)._val, this._vdataF32[r++] = t[0].x, this._vdataF32[r++] = t[0].y, this._vdataF32[r++] = t[0].z, this._vdataF32[r++] = 1, this._vdataF32[r++] = e.evaluate(0, 1), this._vdataF32[r++] = 0, this._vdataF32[r++] = 1, this._vdataF32[r++] = Re.x, this._vdataF32[r++] = Re.y, this._vdataF32[r++] = Re.z, this._vdataUint32[r++] = i.evaluate(0, 1)._val;

            for (var a = 1; a < t.length - 1; a++) {
              x.subtract(Re, t[a - 1], t[a]), x.subtract(Ee, t[a + 1], t[a]), x.subtract(Ee, Ee, Re);
              var n = a / t.length;
              this._vdataF32[r++] = t[a].x, this._vdataF32[r++] = t[a].y, this._vdataF32[r++] = t[a].z, this._vdataF32[r++] = 0, this._vdataF32[r++] = e.evaluate(n, 1), this._vdataF32[r++] = n, this._vdataF32[r++] = 0, this._vdataF32[r++] = Ee.x, this._vdataF32[r++] = Ee.y, this._vdataF32[r++] = Ee.z, this._vdataUint32[r++] = i.evaluate(n, 1)._val, this._vdataF32[r++] = t[a].x, this._vdataF32[r++] = t[a].y, this._vdataF32[r++] = t[a].z, this._vdataF32[r++] = 1, this._vdataF32[r++] = e.evaluate(n, 1), this._vdataF32[r++] = n, this._vdataF32[r++] = 1, this._vdataF32[r++] = Ee.x, this._vdataF32[r++] = Ee.y, this._vdataF32[r++] = Ee.z, this._vdataUint32[r++] = i.evaluate(n, 1)._val;
            }

            x.subtract(Re, t[t.length - 1], t[t.length - 2]), this._vdataF32[r++] = t[t.length - 1].x, this._vdataF32[r++] = t[t.length - 1].y, this._vdataF32[r++] = t[t.length - 1].z, this._vdataF32[r++] = 0, this._vdataF32[r++] = e.evaluate(1, 1), this._vdataF32[r++] = 1, this._vdataF32[r++] = 0, this._vdataF32[r++] = Re.x, this._vdataF32[r++] = Re.y, this._vdataF32[r++] = Re.z, this._vdataUint32[r++] = i.evaluate(1, 1)._val, this._vdataF32[r++] = t[t.length - 1].x, this._vdataF32[r++] = t[t.length - 1].y, this._vdataF32[r++] = t[t.length - 1].z, this._vdataF32[r++] = 1, this._vdataF32[r++] = e.evaluate(1, 1), this._vdataF32[r++] = 1, this._vdataF32[r++] = 1, this._vdataF32[r++] = Re.x, this._vdataF32[r++] = Re.y, this._vdataF32[r++] = Re.z, this._vdataUint32[r++] = i.evaluate(1, 1)._val;
          }

          this.updateIA(Math.max(0, t.length - 1));
        }, i.updateIA = function (t) {
          this._subModels[0].inputAssembler.vertexBuffers[0].update(this._vdataF32), this._iaInfo.drawInfos[0].firstIndex = 0, this._iaInfo.drawInfos[0].indexCount = this._indexCount * t, this._iaInfoBuffer.update(this._iaInfo);
        }, i.destroySubMeshData = function () {
          this._subMeshData && (this._subMeshData.destroy(), this._subMeshData = null);
        }, e;
      }(Ot),
          Ae = [["mode", "constant", "multiplier"], ["mode", "spline", "multiplier"], ["mode", "splineMin", "splineMax", "multiplier"], ["mode", "constantMin", "constantMax", "multiplier"]],
          De = L({
        Constant: 0,
        Curve: 1,
        TwoCurves: 2,
        TwoConstants: 3
      }),
          Fe = t("CurveRange", (Yt = e("cc.CurveRange"), qt = i(De), Qt = i(B), Zt = i(B), Jt = i(B), Yt((he = ue = function () {
        function t() {
          b(this, "mode", ee, this), b(this, "spline", ie, this), b(this, "splineMin", re, this), b(this, "splineMax", ae, this), b(this, "constant", ne, this), b(this, "constantMin", oe, this), b(this, "constantMax", se, this), b(this, "multiplier", le, this), this._curve = new V(this.spline), this._curveMin = new V(this.splineMin), this._curveMax = new V(this.splineMax);
        }

        var e = t.prototype;
        return e.evaluate = function (t, e) {
          switch (this.mode) {
            default:
            case De.Constant:
              return this.constant;

            case De.Curve:
              return this.spline.evaluate(t) * this.multiplier;

            case De.TwoCurves:
              return U(this.splineMin.evaluate(t), this.splineMax.evaluate(t), e) * this.multiplier;

            case De.TwoConstants:
              return U(this.constantMin, this.constantMax, e);
          }
        }, e.getMax = function () {
          switch (this.mode) {
            default:
            case De.Constant:
              return this.constant;

            case De.Curve:
              return this.multiplier;

            case De.TwoConstants:
              return this.constantMax;

            case De.TwoCurves:
              return this.multiplier;
          }
        }, e._onBeforeSerialize = function () {
          return Ae[this.mode];
        }, d(t, [{
          key: "curve",
          get: function get() {
            return this._curve;
          },
          set: function set(t) {
            this._curve = t, this.spline = t._internalCurve;
          }
        }, {
          key: "curveMin",
          get: function get() {
            return this._curveMin;
          },
          set: function set(t) {
            this._curveMin = t, this.splineMin = t._internalCurve;
          }
        }, {
          key: "curveMax",
          get: function get() {
            return this._curveMax;
          },
          set: function set(t) {
            this._curveMax = t, this.splineMax = t._internalCurve;
          }
        }]), t;
      }(), ue.Mode = De, ee = f((te = he).prototype, "mode", [qt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return De.Constant;
        }
      }), ie = f(te.prototype, "spline", [Qt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return k();
        }
      }), re = f(te.prototype, "splineMin", [Zt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return k();
        }
      }), ae = f(te.prototype, "splineMax", [Jt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return k();
        }
      }), ne = f(te.prototype, "constant", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), oe = f(te.prototype, "constantMin", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), se = f(te.prototype, "constantMax", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), le = f(te.prototype, "multiplier", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), $t = te)) || $t));

      function Ie(t, e, i) {
        switch (t.mode) {
          case De.Constant:
            return t.constant;

          case De.Curve:
            return t.spline.evaluate(e) * t.multiplier;

          case De.TwoCurves:
            return 0 === i ? t.splineMin.evaluate(e) * t.multiplier : t.splineMax.evaluate(e) * t.multiplier;

          case De.TwoConstants:
            return 0 === i ? t.constantMin : t.constantMax;

          default:
            return 0;
        }
      }

      function Pe(t) {
        switch (t.mode) {
          case De.TwoConstants:
          case De.TwoCurves:
            return 2;

          default:
            return 1;
        }
      }

      function Le(t, e, i) {
        var a = new G({
          width: e,
          height: i,
          _data: t,
          _compressed: !1,
          format: H.RGBA32F
        }),
            n = new r();
        return n.setFilters(W.NEAREST, W.NEAREST), n.setMipFilter(W.NONE), n.setWrapMode(j.CLAMP_TO_EDGE, j.CLAMP_TO_EDGE, j.CLAMP_TO_EDGE), n.image = a, n;
      }

      function Be(t, e, i, r, a) {
        for (var n = Math.max(Pe(e), Pe(i), Pe(r)), o = new Float32Array(t * n * 4), s = [e, i, r], l = 1 / (t - 1), u = 0; u < n; u++) {
          for (var h = 0; h < 3; h++) {
            for (var c = s[h], _ = 0, p = 0, d = 0; d < t; d++) {
              var f = Ie(c, l * d, u);
              p = a ? f : (_ += f) / (d + 1), o[4 * d + h] = p;
            }
          }
        }

        return Le(o, t, n);
      }

      var Ue,
          Ve,
          ke,
          Ne,
          Ge,
          He,
          We,
          je,
          Xe,
          Ke,
          Ye,
          qe,
          Qe,
          Ze,
          Je,
          $e,
          ti,
          ei,
          ii,
          ri,
          ai,
          ni,
          oi,
          si,
          li,
          ui,
          hi,
          ci,
          _i,
          pi,
          di,
          fi,
          mi,
          yi,
          vi,
          bi,
          gi,
          Mi,
          wi,
          Si,
          Ti,
          Oi,
          xi,
          zi,
          Ri,
          Ei,
          Ci,
          Ai,
          Di,
          Fi,
          Ii,
          Pi,
          Li,
          Bi,
          Ui,
          Vi,
          ki = L({
        Blend: 0,
        Fixed: 1
      }),
          Ni = (t("ColorKey", e("cc.ColorKey")((pe = f((_e = function _e() {
        b(this, "color", pe, this), b(this, "time", de, this);
      }).prototype, "color", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return s.WHITE.clone();
        }
      }), de = f(_e.prototype, "time", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ce = _e)) || ce), t("AlphaKey", e("cc.AlphaKey")((ye = f((me = function me() {
        b(this, "alpha", ye, this), b(this, "time", ve, this);
      }).prototype, "alpha", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), ve = f(me.prototype, "time", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), fe = me)) || fe), t("Gradient", e("cc.Gradient")((Oe = Te = function () {
        function t() {
          b(this, "colorKeys", Me, this), b(this, "alphaKeys", we, this), b(this, "mode", Se, this), this._color = void 0, this._color = s.WHITE.clone();
        }

        var e = t.prototype;
        return e.setKeys = function (t, e) {
          this.colorKeys = t, this.alphaKeys = e;
        }, e.sortKeys = function () {
          this.colorKeys.length > 1 && this.colorKeys.sort(function (t, e) {
            return t.time - e.time;
          }), this.alphaKeys.length > 1 && this.alphaKeys.sort(function (t, e) {
            return t.time - e.time;
          });
        }, e.evaluate = function (t) {
          return this.getRGB(t), this._color._set_a_unsafe(this.getAlpha(t)), this._color;
        }, e.randomColor = function () {
          var t = this.colorKeys[Math.trunc(Math.random() * this.colorKeys.length)],
              e = this.alphaKeys[Math.trunc(Math.random() * this.alphaKeys.length)];
          return this._color.set(t.color), this._color._set_a_unsafe(e.alpha), this._color;
        }, e.getRGB = function (t) {
          if (!(this.colorKeys.length > 1)) return 1 === this.colorKeys.length ? (this._color.set(this.colorKeys[0].color), this._color) : (this._color.set(s.WHITE), this._color);
          t = X(t, 1);

          for (var e = 1; e < this.colorKeys.length; ++e) {
            var i = this.colorKeys[e - 1].time,
                r = this.colorKeys[e].time;

            if (t >= i && t < r) {
              if (this.mode === ki.Fixed) return this.colorKeys[e].color;
              var a = (t - i) / (r - i);
              return s.lerp(this._color, this.colorKeys[e - 1].color, this.colorKeys[e].color, a), this._color;
            }
          }

          var n = this.colorKeys.length - 1;
          t < this.colorKeys[0].time ? s.lerp(this._color, s.BLACK, this.colorKeys[0].color, t / this.colorKeys[0].time) : t > this.colorKeys[n].time && s.lerp(this._color, this.colorKeys[n].color, s.BLACK, (t - this.colorKeys[n].time) / (1 - this.colorKeys[n].time));
        }, e.getAlpha = function (t) {
          if (!(this.alphaKeys.length > 1)) return 1 === this.alphaKeys.length ? this.alphaKeys[0].alpha : 255;
          t = X(t, 1);

          for (var e = 1; e < this.alphaKeys.length; ++e) {
            var i = this.alphaKeys[e - 1].time,
                r = this.alphaKeys[e].time;

            if (t >= i && t < r) {
              if (this.mode === ki.Fixed) return this.alphaKeys[e].alpha;
              var a = (t - i) / (r - i);
              return U(this.alphaKeys[e - 1].alpha, this.alphaKeys[e].alpha, a);
            }
          }

          var n = this.alphaKeys.length - 1;
          return t < this.alphaKeys[0].time ? U(0, this.alphaKeys[0].alpha, t / this.alphaKeys[0].time) : t > this.alphaKeys[n].time ? U(this.alphaKeys[n].alpha, 0, (t - this.alphaKeys[n].time) / (1 - this.alphaKeys[n].time)) : void 0;
        }, t;
      }(), Te.Mode = ki, Me = f((ge = Oe).prototype, "colorKeys", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Array();
        }
      }), we = f(ge.prototype, "alphaKeys", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Array();
        }
      }), Se = f(ge.prototype, "mode", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return ki.Blend;
        }
      }), be = ge)) || be)),
          Gi = K,
          Hi = L({
        Color: 0,
        Gradient: 1,
        TwoColors: 2,
        TwoGradients: 3,
        RandomColor: 4
      }),
          Wi = t("GradientRange", (Ue = e("cc.GradientRange"), Ve = i(Hi), ke = i(Ni), Ne = i(Ni), Ge = i(Ni), He = i(Hi), Ue((ti = $e = function () {
        function t() {
          b(this, "color", Xe, this), b(this, "colorMin", Ke, this), b(this, "colorMax", Ye, this), b(this, "gradient", qe, this), b(this, "gradientMin", Qe, this), b(this, "gradientMax", Ze, this), b(this, "_mode", Je, this), this._color = s.WHITE.clone();
        }

        var e = t.prototype;
        return e.evaluate = function (t, e) {
          switch (this._mode) {
            case Hi.Color:
              return this.color;

            case Hi.TwoColors:
              return s.lerp(this._color, this.colorMin, this.colorMax, e), this._color;

            case Hi.RandomColor:
              return this.gradient.randomColor();

            case Hi.Gradient:
              return this.gradient.evaluate(t);

            case Hi.TwoGradients:
              return s.lerp(this._color, this.gradientMin.evaluate(t), this.gradientMax.evaluate(t), e), this._color;

            default:
              return this.color;
          }
        }, e._onBeforeSerialize = function () {
          return Gi[this._mode];
        }, d(t, [{
          key: "mode",
          get: function get() {
            return this._mode;
          },
          set: function set(t) {
            this._mode = t;
          }
        }]), t;
      }(), $e.Mode = Hi, f((je = ti).prototype, "mode", [Ve], Object.getOwnPropertyDescriptor(je.prototype, "mode"), je.prototype), Xe = f(je.prototype, "color", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return s.WHITE.clone();
        }
      }), Ke = f(je.prototype, "colorMin", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return s.WHITE.clone();
        }
      }), Ye = f(je.prototype, "colorMax", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return s.WHITE.clone();
        }
      }), qe = f(je.prototype, "gradient", [ke], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Ni();
        }
      }), Qe = f(je.prototype, "gradientMin", [Ne], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Ni();
        }
      }), Ze = f(je.prototype, "gradientMax", [Ge], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Ni();
        }
      }), Je = f(je.prototype, "_mode", [He], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Hi.Color;
        }
      }), We = je)) || We));

      function ji(t, e, i) {
        switch (t.mode) {
          case Hi.Color:
            return t.color;

          case Hi.TwoColors:
            return 0 === i ? t.colorMin : t.colorMax;

          case Hi.RandomColor:
            return t.gradient.randomColor();

          case Hi.Gradient:
            return t.gradient.evaluate(e);

          case Hi.TwoGradients:
            return 0 === i ? t.gradientMin.evaluate(e) : t.gradientMax.evaluate(e);

          default:
            return t.color;
        }
      }

      var Xi = {
        parent: null,
        owner: null,
        subModelIdx: 0
      },
          Ki = {
        CC_USE_WORLD_SPACE: !1
      },
          Yi = function (e) {
        return t({
          Line: e,
          LineComponent: e
        }), e;
      }((ei = e("cc.Line"), ii = m(), ri = y(), ai = i(r), ni = i(r), oi = q(), si = v(), li = q(), ui = v(), hi = i([x]), ci = i([x]), _i = q(), pi = v(), di = i(Fe), fi = Q(), mi = i(Fe), yi = Q(), vi = q(), bi = v(), gi = i(Y), Mi = q(), wi = v(), Si = i(Y), Ti = q(), Oi = v(), xi = i(Wi), zi = i(Wi), Ri = q(), Ei = v(), ei(Ci = ii(Ci = ri(Ci = a((Vi = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, b(e, "_texture", Di, g(e)), e._material = null, e._materialInstance = null, b(e, "_worldSpace", Fi, g(e)), b(e, "_positions", Ii, g(e)), b(e, "_width", Pi, g(e)), b(e, "_tile", Li, g(e)), b(e, "_offset", Bi, g(e)), b(e, "_color", Ui, g(e)), e._model = null, e._tile_offset = new M(), e;
        }

        n(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          var t = this._model = c.director.root.createModel(Ce);
          t.node = t.transform = this.node, null === this._material && (this._material = new _(), this._material.copy(p.get("default-trail-material")), Ki.CC_USE_WORLD_SPACE = this.worldSpace, Xi.parent = this._material, Xi.subModelIdx = 0, this._materialInstance = new zt(Xi), Xi.parent = null, Xi.subModelIdx = 0, this._materialInstance.recompileShaders(Ki)), t.updateMaterial(this._materialInstance), t.setCapacity(100);
        }, i.onEnable = function () {
          this._model && (this._attachToScene(), this.texture = this._texture, this.tile = this._tile, this.offset = this._offset, this._model.addLineVertexData(this._positions, this._width, this._color));
        }, i.onDisable = function () {
          this._model && this._detachFromScene();
        }, i._attachToScene = function () {
          this._model && this.node && this.node.scene && (this._model.scene && this._detachFromScene(), this._getRenderScene().addModel(this._model));
        }, i._detachFromScene = function () {
          this._model && this._model.scene && this._model.scene.removeModel(this._model);
        }, d(e, [{
          key: "texture",
          get: function get() {
            return this._texture;
          },
          set: function set(t) {
            this._texture = t, this._materialInstance && this._materialInstance.setProperty("mainTexture", t);
          }
        }, {
          key: "worldSpace",
          get: function get() {
            return this._worldSpace;
          },
          set: function set(t) {
            this._worldSpace = t, this._materialInstance && (Ki.CC_USE_WORLD_SPACE = this.worldSpace, this._materialInstance.recompileShaders(Ki), this._model && this._model.setSubModelMaterial(0, this._materialInstance));
          }
        }, {
          key: "positions",
          get: function get() {
            return this._positions;
          },
          set: function set(t) {
            this._positions = t, this._model && this._model.addLineVertexData(this._positions, this._width, this._color);
          }
        }, {
          key: "width",
          get: function get() {
            return this._width;
          },
          set: function set(t) {
            this._width = t, this._model && this._model.addLineVertexData(this._positions, this._width, this._color);
          }
        }, {
          key: "tile",
          get: function get() {
            return this._tile;
          },
          set: function set(t) {
            this._tile.set(t), this._materialInstance && (this._tile_offset.x = this._tile.x, this._tile_offset.y = this._tile.y, this._materialInstance.setProperty("mainTiling_Offset", this._tile_offset));
          }
        }, {
          key: "offset",
          get: function get() {
            return this._offset;
          },
          set: function set(t) {
            this._offset.set(t), this._materialInstance && (this._tile_offset.z = this._offset.x, this._tile_offset.w = this._offset.y, this._materialInstance.setProperty("mainTiling_Offset", this._tile_offset));
          }
        }, {
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color = t, this._model && this._model.addLineVertexData(this._positions, this._width, this._color);
          }
        }]), e;
      }(T), Di = f((Ai = Vi).prototype, "_texture", [ai], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(Ai.prototype, "texture", [ni, oi, si], Object.getOwnPropertyDescriptor(Ai.prototype, "texture"), Ai.prototype), Fi = f(Ai.prototype, "_worldSpace", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(Ai.prototype, "worldSpace", [li, ui], Object.getOwnPropertyDescriptor(Ai.prototype, "worldSpace"), Ai.prototype), Ii = f(Ai.prototype, "_positions", [hi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), f(Ai.prototype, "positions", [ci, _i, pi], Object.getOwnPropertyDescriptor(Ai.prototype, "positions"), Ai.prototype), Pi = f(Ai.prototype, "_width", [di, fi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), f(Ai.prototype, "width", [mi, yi, vi, bi], Object.getOwnPropertyDescriptor(Ai.prototype, "width"), Ai.prototype), Li = f(Ai.prototype, "_tile", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Y(1, 1);
        }
      }), f(Ai.prototype, "tile", [gi, Mi, wi], Object.getOwnPropertyDescriptor(Ai.prototype, "tile"), Ai.prototype), Bi = f(Ai.prototype, "_offset", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Y(0, 0);
        }
      }), f(Ai.prototype, "offset", [Si, Ti, Oi], Object.getOwnPropertyDescriptor(Ai.prototype, "offset"), Ai.prototype), Ui = f(Ai.prototype, "_color", [xi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Wi();
        }
      }), f(Ai.prototype, "color", [zi, Ri, Ei], Object.getOwnPropertyDescriptor(Ai.prototype, "color"), Ai.prototype), Ci = Ai)) || Ci) || Ci) || Ci) || Ci)),
          qi = function () {
        function t(t) {
          this.particleSystem = void 0, this.position = void 0, this.velocity = void 0, this.animatedVelocity = void 0, this.ultimateVelocity = void 0, this.angularVelocity = void 0, this.axisOfRotation = void 0, this.rotation = void 0, this.startEuler = void 0, this.startRotation = void 0, this.deltaQuat = void 0, this.deltaMat = void 0, this.localMat = void 0, this.startSize = void 0, this.size = void 0, this.startColor = void 0, this.color = void 0, this.randomSeed = void 0, this.remainingLifetime = void 0, this.loopCount = void 0, this.lastLoop = void 0, this.trailDelay = void 0, this.startLifetime = void 0, this.emitAccumulator0 = void 0, this.emitAccumulator1 = void 0, this.frameIndex = void 0, this.startRow = void 0, this.particleSystem = t, this.position = new x(0, 0, 0), this.velocity = new x(0, 0, 0), this.animatedVelocity = new x(0, 0, 0), this.ultimateVelocity = new x(0, 0, 0), this.angularVelocity = new x(0, 0, 0), this.axisOfRotation = new x(0, 0, 0), this.rotation = new x(0, 0, 0), this.startEuler = new x(0, 0, 0), this.startRotation = new Z(), this.deltaQuat = new Z(), this.deltaMat = new J(), this.localMat = new J(), this.startSize = new x(0, 0, 0), this.size = new x(0, 0, 0), this.startColor = s.WHITE.clone(), this.color = s.WHITE.clone(), this.randomSeed = 0, this.remainingLifetime = 0, this.loopCount = 0, this.lastLoop = 0, this.trailDelay = 0, this.startLifetime = 0, this.emitAccumulator0 = 0, this.emitAccumulator1 = 0, this.frameIndex = 0, this.startRow = 0;
        }

        return t.prototype.reset = function () {
          this.rotation.set(0, 0, 0), this.startEuler.set(0, 0, 0), this.startRotation.set(0, 0, 0, 1), this.deltaQuat.set(0, 0, 0, 1), this.deltaMat.identity(), this.localMat.identity();
        }, t;
      }();

      qi.INDENTIFY_NEG_QUAT = 10, qi.R2D = 180 / Math.PI;

      var Qi,
          Zi,
          Ji,
          $i,
          tr,
          er,
          ir,
          rr,
          ar,
          nr,
          or,
          sr,
          lr,
          ur,
          hr,
          cr,
          _r,
          pr,
          dr,
          fr,
          mr,
          yr,
          vr,
          br,
          gr,
          Mr,
          wr,
          Sr,
          Tr,
          Or,
          xr,
          zr,
          Rr,
          Er,
          Cr = "colorModule",
          Ar = "rotationModule",
          Dr = "sizeModule",
          Fr = "textureModule",
          Ir = ["sizeModule", "colorModule", "forceModule", "velocityModule", "limitModule", "rotationModule", "textureModule"],
          Pr = ["_colorOverLifetimeModule", "_shapeModule", "_sizeOvertimeModule", "_velocityOvertimeModule", "_forceOvertimeModule", "_limitVelocityOvertimeModule", "_rotationOvertimeModule", "_textureAnimationModule", "_trailModule"],
          Lr = function () {
        function t() {
          this.target = null, this.needUpdate = !1, this.needAnimate = !0, this.name = void 0;
        }

        var e = t.prototype;
        return e.bindTarget = function (t) {
          this.target = t;
        }, e.update = function () {}, t;
      }(),
          Br = L({
        World: 0,
        Local: 1,
        Custom: 2
      }),
          Ur = L({
        Billboard: 0,
        StrecthedBillboard: 1,
        HorizontalBillboard: 2,
        VerticalBillboard: 3,
        Mesh: 4
      }),
          Vr = L({
        Box: 0,
        Circle: 1,
        Cone: 2,
        Sphere: 3,
        Hemisphere: 4
      }),
          kr = L({
        Base: 0,
        Edge: 1,
        Shell: 2,
        Volume: 3
      }),
          Nr = L({
        Random: 0,
        Loop: 1,
        PingPong: 2
      }),
          Gr = L({
        Particles: 0
      }),
          Hr = L({
        Stretch: 0
      }),
          Wr = (Qi = e("cc.ColorOvertimeModule"), Zi = q(), Ji = i(Wi), $i = q(), Qi((ar = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
            r[a] = arguments[a];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, b(e, "_enable", ir, g(e)), b(e, "color", rr, g(e)), e.name = Cr, e;
        }

        return n(e, t), e.prototype.animate = function (t) {
          t.color.set(t.startColor), t.color.multiply(this.color.evaluate(1 - t.remainingLifetime / t.startLifetime, $(t.randomSeed + 91041)));
        }, d(e, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable !== t && (this._enable = t, this.target && this.target.enableModule(this.name, t, this));
          }
        }]), e;
      }(Lr), ir = f((er = ar).prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(er.prototype, "enable", [Zi], Object.getOwnPropertyDescriptor(er.prototype, "enable"), er.prototype), rr = f(er.prototype, "color", [Ji, O, $i], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Wi();
        }
      }), tr = er)) || tr),
          jr = new x(0, 0, -1);

      function Xr(t, e, i, r) {
        return e !== t ? (t === Br.World || J.invert(i, i), J.getRotation(r, i), !0) : (Z.set(r, 0, 0, 0, 1), !1);
      }

      function Kr(t, e) {
        Y.set(t, Math.cos(e), Math.sin(e));
      }

      function Yr(t) {
        var e = et(-1, 1),
            i = et(0, 2 * Math.PI),
            r = Math.sqrt(1 - e * e),
            a = r * Math.cos(i),
            n = r * Math.sin(i);
        x.set(t, a, n, e);
      }

      function qr(t, e, i) {
        Yr(t), x.multiplyScalar(t, t, e + (i - e) * tt());
      }

      function Qr(t, e, i, r) {
        Kr(t, r), t.z = 0, x.multiplyScalar(t, t, e + (i - e) * tt());
      }

      function Zr(t) {
        for (var e = 0; e < t.length; e++) {
          var i = e + it(0, t.length - e),
              r = t[i];
          t[i] = t[e], t[e] = r;
        }
      }

      function Jr() {
        var t = et(-1, 1);
        return 0 === t && t++, rt(t);
      }

      var $r,
          ta,
          ea,
          ia,
          ra,
          aa,
          na,
          oa,
          sa,
          la,
          ua,
          ha,
          ca,
          _a,
          pa,
          da,
          fa,
          ma,
          ya,
          va,
          ba,
          ga,
          Ma,
          wa,
          Sa,
          Ta,
          Oa,
          xa,
          za,
          Ra,
          Ea,
          Ca,
          Aa,
          Da,
          Fa,
          Ia,
          Pa,
          La,
          Ba,
          Ua,
          Va,
          ka,
          Na,
          Ga,
          Ha,
          Wa,
          ja,
          Xa,
          Ka,
          Ya,
          qa,
          Qa,
          Za,
          Ja,
          $a,
          tn,
          en,
          rn,
          an,
          nn,
          on = 212165,
          sn = new x(),
          ln = (nr = e("cc.ForceOvertimeModule"), or = q(), sr = i(Fe), lr = Q(), ur = q(), hr = v(), cr = i(Fe), _r = Q(), pr = q(), dr = v(), fr = i(Fe), mr = Q(), yr = q(), vr = v(), br = i(Br), gr = q(), Mr = v(), nr((Er = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, b(e, "_enable", Tr, g(e)), b(e, "x", Or, g(e)), b(e, "y", xr, g(e)), b(e, "z", zr, g(e)), b(e, "space", Rr, g(e)), e.randomized = !1, e.rotation = void 0, e.needTransform = void 0, e.name = "forceModule", e.rotation = new Z(), e.needTransform = !1, e.needUpdate = !0, e;
        }

        n(e, t);
        var i = e.prototype;
        return i.update = function (t, e) {
          this.needTransform = Xr(t, this.space, e, this.rotation);
        }, i.animate = function (t, e) {
          var i = 1 - t.remainingLifetime / t.startLifetime,
              r = x.set(sn, this.x.evaluate(i, $(t.randomSeed + on)), this.y.evaluate(i, $(t.randomSeed + on)), this.z.evaluate(i, $(t.randomSeed + on)));
          this.needTransform && x.transformQuat(r, r, this.rotation), x.scaleAndAdd(t.velocity, t.velocity, r, e), x.copy(t.ultimateVelocity, t.velocity);
        }, d(e, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable !== t && (this._enable = t, this.target && this.target.enableModule(this.name, t, this));
          }
        }]), e;
      }(Lr), Tr = f((Sr = Er).prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(Sr.prototype, "enable", [or], Object.getOwnPropertyDescriptor(Sr.prototype, "enable"), Sr.prototype), Or = f(Sr.prototype, "x", [sr, O, lr, ur, hr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), xr = f(Sr.prototype, "y", [cr, O, _r, pr, dr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), zr = f(Sr.prototype, "z", [fr, O, mr, yr, vr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Rr = f(Sr.prototype, "space", [br, O, gr, Mr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Br.Local;
        }
      }), wr = Sr)) || wr),
          un = 23541,
          hn = new x(),
          cn = new x(),
          _n = ($r = e("cc.LimitVelocityOvertimeModule"), ta = q(), ea = i(Fe), ia = Q(), ra = q(), aa = v(), na = i(Fe), oa = Q(), sa = q(), la = v(), ua = i(Fe), ha = Q(), ca = q(), _a = v(), pa = i(Fe), da = Q(), fa = q(), ma = v(), ya = q(), va = v(), ba = q(), ga = v(), Ma = i(Br), wa = q(), Sa = v(), $r((Ia = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, b(e, "_enable", xa, g(e)), b(e, "limitX", za, g(e)), b(e, "limitY", Ra, g(e)), b(e, "limitZ", Ea, g(e)), b(e, "limit", Ca, g(e)), b(e, "dampen", Aa, g(e)), b(e, "separateAxes", Da, g(e)), b(e, "space", Fa, g(e)), e.drag = null, e.multiplyDragByParticleSize = !1, e.multiplyDragByParticleVelocity = !1, e.name = "limitModule", e.rotation = void 0, e.needTransform = void 0, e.rotation = new Z(), e.needTransform = !1, e.needUpdate = !0, e;
        }

        n(e, t);
        var i = e.prototype;
        return i.update = function (t, e) {
          this.needTransform = Xr(t, this.space, e, this.rotation);
        }, i.animate = function (t) {
          var e = 1 - t.remainingLifetime / t.startLifetime,
              i = hn;
          this.separateAxes ? (x.set(cn, this.limitX.evaluate(e, $(t.randomSeed + un)), this.limitY.evaluate(e, $(t.randomSeed + un)), this.limitZ.evaluate(e, $(t.randomSeed + un))), this.needTransform && x.transformQuat(cn, cn, this.rotation), x.set(i, pn(t.ultimateVelocity.x, cn.x, this.dampen), pn(t.ultimateVelocity.y, cn.y, this.dampen), pn(t.ultimateVelocity.z, cn.z, this.dampen))) : (x.normalize(i, t.ultimateVelocity), x.multiplyScalar(i, i, pn(t.ultimateVelocity.length(), this.limit.evaluate(e, $(t.randomSeed + un)), this.dampen))), x.copy(t.ultimateVelocity, i);
        }, d(e, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable !== t && (this._enable = t, this.target && this.target.enableModule(this.name, t, this));
          }
        }]), e;
      }(Lr), xa = f((Oa = Ia).prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(Oa.prototype, "enable", [ta], Object.getOwnPropertyDescriptor(Oa.prototype, "enable"), Oa.prototype), za = f(Oa.prototype, "limitX", [ea, O, ia, ra, aa], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Ra = f(Oa.prototype, "limitY", [na, O, oa, sa, la], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Ea = f(Oa.prototype, "limitZ", [ua, O, ha, ca, _a], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Ca = f(Oa.prototype, "limit", [pa, O, da, fa, ma], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Aa = f(Oa.prototype, "dampen", [O, ya, va], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 3;
        }
      }), Da = f(Oa.prototype, "separateAxes", [O, ba, ga], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Fa = f(Oa.prototype, "space", [Ma, O, wa, Sa], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Br.Local;
        }
      }), Ta = Oa)) || Ta);

      function pn(t, e, i) {
        var r = Math.sign(t),
            a = Math.abs(t);
        return a > e && (a = U(a, e, i)), a * r;
      }

      var dn,
          fn,
          mn,
          yn,
          vn,
          bn,
          gn,
          Mn,
          wn,
          Sn,
          Tn,
          On,
          xn,
          zn,
          Rn,
          En,
          Cn,
          An,
          Dn,
          Fn,
          In,
          Pn,
          Ln,
          Bn,
          Un,
          Vn,
          kn,
          Nn,
          Gn,
          Hn,
          Wn,
          jn,
          Xn,
          Kn,
          Yn,
          qn,
          Qn,
          Zn,
          Jn,
          $n,
          to,
          eo,
          io,
          ro,
          ao,
          no,
          oo,
          so,
          lo,
          uo,
          ho,
          co,
          _o,
          po,
          fo,
          mo,
          yo,
          vo,
          bo,
          go,
          Mo,
          wo,
          So,
          To,
          Oo,
          xo,
          zo,
          Ro,
          Eo,
          Co,
          Ao,
          Do,
          Fo,
          Io,
          Po,
          Lo,
          Bo,
          Uo,
          Vo,
          ko,
          No,
          Go,
          Ho,
          Wo,
          jo,
          Xo,
          Ko,
          Yo,
          qo,
          Qo,
          Zo,
          Jo,
          $o,
          ts,
          es,
          is,
          rs,
          as,
          ns,
          os,
          ss,
          ls,
          us,
          hs,
          cs,
          _s,
          ps,
          ds,
          fs,
          ms,
          ys,
          vs,
          bs,
          gs,
          Ms,
          ws,
          Ss,
          Ts,
          Os,
          xs,
          zs,
          Rs,
          Es,
          Cs,
          As,
          Ds,
          Fs,
          Is,
          Ps,
          Ls,
          Bs,
          Us,
          Vs,
          ks,
          Ns,
          Gs,
          Hs,
          Ws,
          js,
          Xs,
          Ks,
          Ys,
          qs,
          Qs,
          Zs,
          Js,
          $s,
          tl,
          el,
          il,
          rl,
          al,
          nl,
          ol,
          sl,
          ll,
          ul,
          hl,
          cl,
          _l,
          pl,
          dl,
          fl,
          ml,
          yl,
          vl,
          bl,
          gl,
          Ml,
          wl,
          Sl,
          Tl,
          Ol,
          xl,
          zl,
          Rl,
          El,
          Cl,
          Al,
          Dl,
          Fl,
          Il,
          Pl,
          Ll = (Pa = e("cc.RotationOvertimeModule"), La = q(), Ba = q(), Ua = v(), Va = i(Fe), ka = Q(), Na = q(), Ga = v(), Ha = i(Fe), Wa = Q(), ja = q(), Xa = v(), Ka = i(Fe), Ya = Q(), qa = q(), Qa = v(), Pa((nn = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
            r[a] = arguments[a];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, b(e, "_enable", $a, g(e)), b(e, "_separateAxes", tn, g(e)), b(e, "x", en, g(e)), b(e, "y", rn, g(e)), b(e, "z", an, g(e)), e.name = Ar, e._startMat = new J(), e._matRot = new J(), e._quatRot = new Z(), e._otherEuler = new x(), e;
        }

        n(e, t);
        var i = e.prototype;
        return i._processRotation = function (t) {
          var e = t.particleSystem.processor.getInfo().renderMode;
          e !== Ur.Mesh && e === Ur.StrecthedBillboard && this._quatRot.set(0, 0, 0, 1), Z.normalize(this._quatRot, this._quatRot), this._quatRot.w < 0 && (this._quatRot.x += qi.INDENTIFY_NEG_QUAT);
        }, i.animate = function (t, e) {
          var i = 1 - t.remainingLifetime / t.startLifetime,
              r = $(t.randomSeed + 125292),
              a = t.particleSystem.processor.getInfo().renderMode;
          this._separateAxes && a !== Ur.VerticalBillboard && a !== Ur.HorizontalBillboard ? Z.fromEuler(t.deltaQuat, this.x.evaluate(i, r) * e * qi.R2D, this.y.evaluate(i, r) * e * qi.R2D, this.z.evaluate(i, r) * e * qi.R2D) : Z.fromEuler(t.deltaQuat, 0, 0, this.z.evaluate(i, r) * e * qi.R2D), t.deltaMat = J.fromQuat(t.deltaMat, t.deltaQuat), t.localMat = t.localMat.multiply(t.deltaMat), this._startMat = J.fromQuat(this._startMat, t.startRotation), this._matRot = this._startMat.multiply(t.localMat), J.getRotation(this._quatRot, this._matRot), this._processRotation(t, qi.R2D), t.rotation.set(this._quatRot.x, this._quatRot.y, this._quatRot.z);
        }, d(e, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable !== t && (this._enable = t, this.target && this.target.enableModule(this.name, t, this));
          }
        }, {
          key: "separateAxes",
          get: function get() {
            return this._separateAxes;
          },
          set: function set(t) {
            this._separateAxes = t;
          }
        }]), e;
      }(Lr), $a = f((Ja = nn).prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(Ja.prototype, "enable", [La], Object.getOwnPropertyDescriptor(Ja.prototype, "enable"), Ja.prototype), tn = f(Ja.prototype, "_separateAxes", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(Ja.prototype, "separateAxes", [Ba, Ua], Object.getOwnPropertyDescriptor(Ja.prototype, "separateAxes"), Ja.prototype), en = f(Ja.prototype, "x", [Va, O, ka, at, Na, Ga], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), rn = f(Ja.prototype, "y", [Ha, O, Wa, at, ja, Xa], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), an = f(Ja.prototype, "z", [Ka, O, Ya, at, qa, Qa], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Za = Ja)) || Za),
          Bl = (dn = e("cc.SizeOvertimeModule"), fn = q(), mn = q(), yn = v(), vn = i(Fe), bn = Q(), gn = q(), Mn = v(), wn = i(Fe), Sn = Q(), Tn = q(), On = v(), xn = i(Fe), zn = Q(), Rn = q(), En = v(), Cn = i(Fe), An = Q(), Dn = q(), Fn = v(), dn((Gn = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
            r[a] = arguments[a];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, b(e, "_enable", Ln, g(e)), b(e, "separateAxes", Bn, g(e)), b(e, "size", Un, g(e)), b(e, "x", Vn, g(e)), b(e, "y", kn, g(e)), b(e, "z", Nn, g(e)), e.name = Dr, e;
        }

        return n(e, t), e.prototype.animate = function (t) {
          if (this.separateAxes) {
            var e = 1 - t.remainingLifetime / t.startLifetime,
                i = $(t.randomSeed + 39825);
            t.size.x = t.startSize.x * this.x.evaluate(e, i), t.size.y = t.startSize.y * this.y.evaluate(e, i), t.size.z = t.startSize.z * this.z.evaluate(e, i);
          } else x.multiplyScalar(t.size, t.startSize, this.size.evaluate(1 - t.remainingLifetime / t.startLifetime, $(t.randomSeed + 39825)));
        }, d(e, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable !== t && (this._enable = t, this.target && this.target.enableModule(this.name, t, this));
          }
        }]), e;
      }(Lr), Ln = f((Pn = Gn).prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(Pn.prototype, "enable", [fn], Object.getOwnPropertyDescriptor(Pn.prototype, "enable"), Pn.prototype), Bn = f(Pn.prototype, "separateAxes", [O, mn, yn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Un = f(Pn.prototype, "size", [vn, O, bn, gn, Mn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Vn = f(Pn.prototype, "x", [wn, O, Sn, Tn, On], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), kn = f(Pn.prototype, "y", [xn, O, zn, Rn, En], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Nn = f(Pn.prototype, "z", [Cn, O, An, Dn, Fn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), In = Pn)) || In),
          Ul = 90794,
          Vl = L({
        Grid: 0
      }),
          kl = L({
        WholeSheet: 0,
        SingleRow: 1
      }),
          Nl = (Hn = e("cc.TextureAnimationModule"), Wn = nt("numTilesX"), jn = nt("numTilesY"), Xn = q(), Kn = i(Vl), Yn = i(Vl), qn = q(), Qn = v(), Zn = q(), Jn = v(), $n = q(), to = v(), eo = i(kl), io = q(), ro = v(), ao = i(Fe), no = Q(), oo = q(), so = v(), lo = i(Fe), uo = Q(), ho = q(), co = v(), _o = q(), po = v(), fo = q(), mo = v(), yo = q(), vo = v(), Hn((Io = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
            r[a] = arguments[a];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, b(e, "_enable", Mo, g(e)), b(e, "_numTilesX", wo, g(e)), b(e, "_numTilesY", So, g(e)), b(e, "_mode", To, g(e)), b(e, "animation", Oo, g(e)), b(e, "frameOverTime", xo, g(e)), b(e, "startFrame", zo, g(e)), b(e, "cycleCount", Ro, g(e)), b(e, "_flipU", Eo, g(e)), b(e, "_flipV", Co, g(e)), b(e, "_uvChannelMask", Ao, g(e)), b(e, "randomRow", Do, g(e)), b(e, "rowIndex", Fo, g(e)), e.name = Fr, e;
        }

        n(e, t);
        var i = e.prototype;
        return i.init = function (t) {
          t.startRow = Math.floor(Math.random() * this.numTilesY);
        }, i.animate = function (t) {
          var e = 1 - t.remainingLifetime / t.startLifetime,
              i = this.startFrame.evaluate(e, $(t.randomSeed + Ul)) / (this.numTilesX * this.numTilesY);
          if (this.animation === kl.WholeSheet) t.frameIndex = X(this.cycleCount * (this.frameOverTime.evaluate(e, $(t.randomSeed + Ul)) + i), 1);else if (this.animation === kl.SingleRow) {
            var r = 1 / this.numTilesY;

            if (this.randomRow) {
              var a = X(this.cycleCount * (this.frameOverTime.evaluate(e, $(t.randomSeed + Ul)) + i), 1),
                  n = t.startRow * r,
                  o = n + r;
              t.frameIndex = U(n, o, a);
            } else {
              var s = this.rowIndex * r,
                  l = s + r;
              t.frameIndex = U(s, l, X(this.cycleCount * (this.frameOverTime.evaluate(e, $(t.randomSeed + Ul)) + i), 1));
            }
          }
        }, d(e, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable !== t && (this._enable = t, this.target && (this.target.updateMaterialParams(), this.target.enableModule(this.name, t, this)));
          }
        }, {
          key: "mode",
          get: function get() {
            return this._mode;
          },
          set: function set(t) {
            t !== Vl.Grid && console.error("particle texture animation's sprites is not supported!");
          }
        }, {
          key: "numTilesX",
          get: function get() {
            return this._numTilesX;
          },
          set: function set(t) {
            this._numTilesX !== t && (this._numTilesX = t, this.target.updateMaterialParams());
          }
        }, {
          key: "numTilesY",
          get: function get() {
            return this._numTilesY;
          },
          set: function set(t) {
            this._numTilesY !== t && (this._numTilesY = t, this.target.updateMaterialParams());
          }
        }, {
          key: "flipU",
          get: function get() {
            return this._flipU;
          },
          set: function set() {
            console.error("particle texture animation's flipU is not supported!");
          }
        }, {
          key: "flipV",
          get: function get() {
            return this._flipV;
          },
          set: function set() {
            console.error("particle texture animation's flipV is not supported!");
          }
        }, {
          key: "uvChannelMask",
          get: function get() {
            return this._uvChannelMask;
          },
          set: function set() {
            console.error("particle texture animation's uvChannelMask is not supported!");
          }
        }]), e;
      }(Lr), Mo = f((go = Io).prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), wo = f(go.prototype, "_numTilesX", [Wn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), So = f(go.prototype, "_numTilesY", [jn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), f(go.prototype, "enable", [Xn], Object.getOwnPropertyDescriptor(go.prototype, "enable"), go.prototype), To = f(go.prototype, "_mode", [Kn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Vl.Grid;
        }
      }), f(go.prototype, "mode", [Yn, qn, Qn], Object.getOwnPropertyDescriptor(go.prototype, "mode"), go.prototype), f(go.prototype, "numTilesX", [Zn, Jn], Object.getOwnPropertyDescriptor(go.prototype, "numTilesX"), go.prototype), f(go.prototype, "numTilesY", [$n, to], Object.getOwnPropertyDescriptor(go.prototype, "numTilesY"), go.prototype), Oo = f(go.prototype, "animation", [eo, O, io, ro], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return kl.WholeSheet;
        }
      }), xo = f(go.prototype, "frameOverTime", [ao, O, no, oo, so], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), zo = f(go.prototype, "startFrame", [lo, O, uo, ho, co], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Ro = f(go.prototype, "cycleCount", [O, _o, po], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Eo = f(go.prototype, "_flipU", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Co = f(go.prototype, "_flipV", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ao = f(go.prototype, "_uvChannelMask", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), Do = f(go.prototype, "randomRow", [O, fo, mo], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Fo = f(go.prototype, "rowIndex", [O, yo, vo], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), bo = go)) || bo),
          Gl = 197866,
          Hl = new x(),
          Wl = (Po = e("cc.VelocityOvertimeModule"), Lo = q(), Bo = i(Fe), Uo = Q(), Vo = q(), ko = v(), No = i(Fe), Go = Q(), Ho = q(), Wo = v(), jo = i(Fe), Xo = Q(), Ko = q(), Yo = v(), qo = i(Fe), Qo = Q(), Zo = q(), Jo = v(), $o = i(Br), ts = q(), es = v(), Po((hs = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, b(e, "_enable", as, g(e)), b(e, "x", ns, g(e)), b(e, "y", os, g(e)), b(e, "z", ss, g(e)), b(e, "speedModifier", ls, g(e)), b(e, "space", us, g(e)), e.rotation = void 0, e.needTransform = void 0, e.name = "velocityModule", e.rotation = new Z(), e.speedModifier.constant = 1, e.needTransform = !1, e.needUpdate = !0, e;
        }

        n(e, t);
        var i = e.prototype;
        return i.update = function (t, e) {
          this.needTransform = Xr(t, this.space, e, this.rotation);
        }, i.animate = function (t) {
          var e = 1 - t.remainingLifetime / t.startLifetime,
              i = x.set(Hl, this.x.evaluate(e, $(t.randomSeed ^ Gl)), this.y.evaluate(e, $(156497 ^ t.randomSeed)), this.z.evaluate(e, $(984136 ^ t.randomSeed)));
          this.needTransform && x.transformQuat(i, i, this.rotation), x.add(t.animatedVelocity, t.animatedVelocity, i), x.add(t.ultimateVelocity, t.velocity, t.animatedVelocity), x.multiplyScalar(t.ultimateVelocity, t.ultimateVelocity, this.speedModifier.evaluate(1 - t.remainingLifetime / t.startLifetime, $(t.randomSeed + Gl)));
        }, d(e, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable !== t && (this._enable = t, this.target && this.target.enableModule(this.name, t, this));
          }
        }]), e;
      }(Lr), as = f((rs = hs).prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(rs.prototype, "enable", [Lo], Object.getOwnPropertyDescriptor(rs.prototype, "enable"), rs.prototype), ns = f(rs.prototype, "x", [Bo, O, Uo, Vo, ko], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), os = f(rs.prototype, "y", [No, O, Go, Ho, Wo], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), ss = f(rs.prototype, "z", [jo, O, Xo, Ko, Yo], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), ls = f(rs.prototype, "speedModifier", [qo, O, Qo, Zo, Jo], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), us = f(rs.prototype, "space", [$o, O, ts, es], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Br.Local;
        }
      }), is = rs)) || is),
          jl = t("Burst", (cs = e("cc.Burst"), _s = i(Fe), ps = Q(), cs((gs = function () {
        function t() {
          b(this, "_time", ms, this), b(this, "_repeatCount", ys, this), b(this, "repeatInterval", vs, this), b(this, "count", bs, this), this._remainingCount = void 0, this._curTime = void 0, this._remainingCount = 0, this._curTime = 0;
        }

        var e = t.prototype;
        return e.update = function (t, e) {
          if (0 === this._remainingCount && (this._remainingCount = this._repeatCount, this._curTime = this._time), this._remainingCount > 0) {
            var i = X(t._time - t.startDelay.evaluate(0, 1), t.duration) - e;
            i = i > 0 ? i : 0;
            var r = X(t.time - t.startDelay.evaluate(0, 1), t.duration);
            this._curTime >= i && this._curTime < r && (t.emit(this.count.evaluate(this._curTime / t.duration, 1), e - (r - this._curTime)), this._curTime += this.repeatInterval, --this._remainingCount);
          }
        }, e.getMaxCount = function (t) {
          return this.count.getMax() * Math.min(Math.ceil(t.duration / this.repeatInterval), this.repeatCount);
        }, d(t, [{
          key: "time",
          get: function get() {
            return this._time;
          },
          set: function set(t) {
            this._time = t, this._curTime = t;
          }
        }, {
          key: "repeatCount",
          get: function get() {
            return this._repeatCount;
          },
          set: function set(t) {
            this._repeatCount = t, this._remainingCount = t;
          }
        }]), t;
      }(), ms = f((fs = gs).prototype, "_time", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), f(fs.prototype, "time", [N], Object.getOwnPropertyDescriptor(fs.prototype, "time"), fs.prototype), ys = f(fs.prototype, "_repeatCount", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), f(fs.prototype, "repeatCount", [N], Object.getOwnPropertyDescriptor(fs.prototype, "repeatCount"), fs.prototype), vs = f(fs.prototype, "repeatInterval", [O, N], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), bs = f(fs.prototype, "count", [_s, O, ps], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), ds = fs)) || ds)),
          Xl = new x(0, 0, 0),
          Kl = [],
          Yl = new x(.5, .5, .5),
          ql = (Ms = e("cc.ShapeModule"), ws = q(), Ss = v(), Ts = q(), Os = v(), xs = q(), zs = v(), Rs = q(), Es = v(), Cs = q(), As = v(), Ds = q(), Fs = i(Vr), Is = nt("shapeType"), Ps = q(), Ls = i(Vr), Bs = v(), Us = i(kr), Vs = q(), ks = v(), Ns = q(), Gs = v(), Hs = q(), Ws = v(), js = q(), Xs = v(), Ks = q(), Ys = v(), qs = q(), Qs = v(), Zs = q(), Js = v(), $s = i(Nr), tl = q(), el = v(), il = lt(), rl = q(), al = v(), nl = i(Fe), ol = lt(), sl = Q(), ll = q(), ul = v(), hl = q(), cl = v(), _l = q(), pl = v(), Ms((Pl = function () {
        function t() {
          b(this, "_enable", ml, this), b(this, "_shapeType", yl, this), b(this, "emitFrom", vl, this), b(this, "alignToDirection", bl, this), b(this, "randomDirectionAmount", gl, this), b(this, "sphericalDirectionAmount", Ml, this), b(this, "randomPositionAmount", wl, this), b(this, "radius", Sl, this), b(this, "radiusThickness", Tl, this), b(this, "arcMode", Ol, this), b(this, "arcSpread", xl, this), b(this, "arcSpeed", zl, this), b(this, "length", Rl, this), b(this, "boxThickness", El, this), b(this, "_position", Cl, this), b(this, "_rotation", Al, this), b(this, "_scale", Dl, this), b(this, "_arc", Fl, this), b(this, "_angle", Il, this), this.mat = void 0, this.quat = void 0, this.particleSystem = void 0, this.lastTime = void 0, this.totalAngle = void 0, this.mat = new J(), this.quat = new Z(), this.particleSystem = null, this.lastTime = 0, this.totalAngle = 0;
        }

        var e = t.prototype;
        return e.onInit = function (t) {
          this.particleSystem = t, this.constructMat(), this.lastTime = this.particleSystem._time;
        }, e.emit = function (t) {
          switch (this.shapeType) {
            case Vr.Box:
              !function (t, e, i, r) {
                switch (t) {
                  case kr.Volume:
                    a = i, n = Yl, x.set(a, et(-n.x, n.x), et(-n.y, n.y), et(-n.z, n.z));
                    break;

                  case kr.Shell:
                    Kl.splice(0, Kl.length), Kl.push(et(-.5, .5)), Kl.push(et(-.5, .5)), Kl.push(.5 * Jr()), Zr(Kl), Ql(Kl, e), x.set(i, Kl[0], Kl[1], Kl[2]);
                    break;

                  case kr.Edge:
                    Kl.splice(0, Kl.length), Kl.push(et(-.5, .5)), Kl.push(.5 * Jr()), Kl.push(.5 * Jr()), Zr(Kl), Ql(Kl, e), x.set(i, Kl[0], Kl[1], Kl[2]);
                    break;

                  default:
                    console.warn(t + " is not supported for box emitter.");
                }

                var a, n;
                x.copy(r, jr);
              }(this.emitFrom, this.boxThickness, t.position, t.velocity);
              break;

            case Vr.Circle:
              e = this.radius, i = this.radiusThickness, r = this.generateArcAngle(), a = t.position, n = t.velocity, Qr(a, e * (1 - i), e, r), x.normalize(n, a);
              break;

            case Vr.Cone:
              !function (t, e, i, r, a, n, o, s) {
                switch (t) {
                  case kr.Base:
                    Qr(o, e * (1 - i), e, r), Y.multiplyScalar(s, o, Math.sin(a)), s.z = -Math.cos(a) * e, x.normalize(s, s), o.z = 0;
                    break;

                  case kr.Shell:
                    Kr(o, r), Y.multiplyScalar(s, o, Math.sin(a)), s.z = -Math.cos(a), x.normalize(s, s), Y.multiplyScalar(o, o, e), o.z = 0;
                    break;

                  case kr.Volume:
                    Qr(o, e * (1 - i), e, r), Y.multiplyScalar(s, o, Math.sin(a)), s.z = -Math.cos(a) * e, x.normalize(s, s), o.z = 0, x.add(o, o, x.multiplyScalar(Xl, s, n * tt() / -s.z));
                    break;

                  default:
                    console.warn(t + " is not supported for cone emitter.");
                }
              }(this.emitFrom, this.radius, this.radiusThickness, this.generateArcAngle(), this._angle, this.length, t.position, t.velocity);
              break;

            case Vr.Sphere:
              !function (t, e, i, r, a) {
                switch (t) {
                  case kr.Volume:
                    qr(r, e * (1 - i), e), x.normalize(a, r);
                    break;

                  case kr.Shell:
                    Yr(r), x.multiplyScalar(r, r, e), x.normalize(a, r);
                    break;

                  default:
                    console.warn(t + " is not supported for sphere emitter.");
                }
              }(this.emitFrom, this.radius, this.radiusThickness, t.position, t.velocity);
              break;

            case Vr.Hemisphere:
              !function (t, e, i, r, a) {
                switch (t) {
                  case kr.Volume:
                    qr(r, e * (1 - i), e), r.z > 0 && (r.z *= -1), x.normalize(a, r);
                    break;

                  case kr.Shell:
                    Yr(r), x.multiplyScalar(r, r, e), r.z > 0 && (r.z *= -1), x.normalize(a, r);
                    break;

                  default:
                    console.warn(t + " is not supported for hemisphere emitter.");
                }
              }(this.emitFrom, this.radius, this.radiusThickness, t.position, t.velocity);
              break;

            default:
              console.warn(this.shapeType + " shapeType is not supported by ShapeModule.");
          }

          var e, i, r, a, n;

          if (this.randomPositionAmount > 0 && (t.position.x += et(-this.randomPositionAmount, this.randomPositionAmount), t.position.y += et(-this.randomPositionAmount, this.randomPositionAmount), t.position.z += et(-this.randomPositionAmount, this.randomPositionAmount)), x.transformQuat(t.velocity, t.velocity, this.quat), x.transformMat4(t.position, t.position, this.mat), this.sphericalDirectionAmount > 0) {
            var o = x.normalize(Xl, t.position);
            x.lerp(t.velocity, t.velocity, o, this.sphericalDirectionAmount);
          }

          this.lastTime = this.particleSystem._time;
        }, e.constructMat = function () {
          Z.fromEuler(this.quat, this._rotation.x, this._rotation.y, this._rotation.z), J.fromRTS(this.mat, this.quat, this._position, this._scale);
        }, e.generateArcAngle = function () {
          if (this.arcMode === Nr.Random) return et(0, this._arc);
          var t = this.totalAngle + 2 * Math.PI * this.arcSpeed.evaluate(this.particleSystem._time, 1) * (this.particleSystem._time - this.lastTime);

          switch (this.totalAngle = t, 0 !== this.arcSpread && (t = Math.floor(t / (this._arc * this.arcSpread)) * this._arc * this.arcSpread), this.arcMode) {
            case Nr.Loop:
              return X(t, this._arc);

            case Nr.PingPong:
              return ot(t, this._arc);

            default:
              return X(t, this._arc);
          }
        }, d(t, [{
          key: "position",
          get: function get() {
            return this._position;
          },
          set: function set(t) {
            this._position = t, this.constructMat();
          }
        }, {
          key: "rotation",
          get: function get() {
            return this._rotation;
          },
          set: function set(t) {
            this._rotation = t, this.constructMat();
          }
        }, {
          key: "scale",
          get: function get() {
            return this._scale;
          },
          set: function set(t) {
            this._scale = t, this.constructMat();
          }
        }, {
          key: "arc",
          get: function get() {
            return w(this._arc);
          },
          set: function set(t) {
            this._arc = S(t);
          }
        }, {
          key: "angle",
          get: function get() {
            return Math.round(100 * w(this._angle)) / 100;
          },
          set: function set(t) {
            this._angle = S(t);
          }
        }, {
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            this._enable = t;
          }
        }, {
          key: "shapeType",
          get: function get() {
            return this._shapeType;
          },
          set: function set(t) {
            switch (this._shapeType = t, this._shapeType) {
              case Vr.Box:
                this.emitFrom === kr.Base && (this.emitFrom = kr.Volume);
                break;

              case Vr.Cone:
                this.emitFrom === kr.Edge && (this.emitFrom = kr.Base);
                break;

              case Vr.Sphere:
              case Vr.Hemisphere:
                this.emitFrom !== kr.Base && this.emitFrom !== kr.Edge || (this.emitFrom = kr.Volume);
            }
          }
        }]), t;
      }(), f((fl = Pl).prototype, "position", [ws, Ss], Object.getOwnPropertyDescriptor(fl.prototype, "position"), fl.prototype), f(fl.prototype, "rotation", [Ts, Os], Object.getOwnPropertyDescriptor(fl.prototype, "rotation"), fl.prototype), f(fl.prototype, "scale", [xs, zs], Object.getOwnPropertyDescriptor(fl.prototype, "scale"), fl.prototype), f(fl.prototype, "arc", [Rs, Es], Object.getOwnPropertyDescriptor(fl.prototype, "arc"), fl.prototype), f(fl.prototype, "angle", [Cs, As], Object.getOwnPropertyDescriptor(fl.prototype, "angle"), fl.prototype), ml = f(fl.prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(fl.prototype, "enable", [Ds], Object.getOwnPropertyDescriptor(fl.prototype, "enable"), fl.prototype), yl = f(fl.prototype, "_shapeType", [Fs, Is, Ps], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Vr.Cone;
        }
      }), f(fl.prototype, "shapeType", [Ls, Bs], Object.getOwnPropertyDescriptor(fl.prototype, "shapeType"), fl.prototype), vl = f(fl.prototype, "emitFrom", [Us, O, Vs, ks], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return kr.Volume;
        }
      }), bl = f(fl.prototype, "alignToDirection", [O, Ns, Gs], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), gl = f(fl.prototype, "randomDirectionAmount", [O, Hs, Ws], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ml = f(fl.prototype, "sphericalDirectionAmount", [O, js, Xs], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), wl = f(fl.prototype, "randomPositionAmount", [O, Ks, Ys], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Sl = f(fl.prototype, "radius", [O, qs, Qs], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Tl = f(fl.prototype, "radiusThickness", [O, Zs, Js], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Ol = f(fl.prototype, "arcMode", [$s, O, tl, el], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Nr.Random;
        }
      }), xl = f(fl.prototype, "arcSpread", [il, O, rl, al], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), zl = f(fl.prototype, "arcSpeed", [nl, ol, sl, O, ll, ul], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Rl = f(fl.prototype, "length", [O, hl, cl], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 5;
        }
      }), El = f(fl.prototype, "boxThickness", [O, _l, pl], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new x(0, 0, 0);
        }
      }), Cl = f(fl.prototype, "_position", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new x(0, 0, 0);
        }
      }), Al = f(fl.prototype, "_rotation", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new x(0, 0, 0);
        }
      }), Dl = f(fl.prototype, "_scale", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new x(1, 1, 1);
        }
      }), Fl = f(fl.prototype, "_arc", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return S(360);
        }
      }), Il = f(fl.prototype, "_angle", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return S(25);
        }
      }), dl = fl)) || dl);

      function Ql(t, e) {
        e.x > 0 && (t[0] += .5 * et(-e.x, e.x), t[0] = st(t[0], -.5, .5)), e.y > 0 && (t[1] += .5 * et(-e.y, e.y), t[1] = st(t[1], -.5, .5)), e.z > 0 && (t[2] += .5 * et(-e.z, e.z), t[2] = st(t[2], -.5, .5));
      }

      var Zl,
          Jl,
          $l,
          tu,
          eu,
          iu,
          ru,
          au,
          nu,
          ou,
          su,
          lu,
          uu,
          hu,
          cu,
          _u,
          pu,
          du,
          fu,
          mu,
          yu,
          vu,
          bu,
          gu,
          Mu,
          wu,
          Su,
          Tu,
          Ou,
          xu = [0, 0, 1, 0, 0, 1, 1, 1],
          zu = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._capacity = void 0, e._vertAttrs = void 0, e._vertSize = void 0, e._vBuffer = void 0, e._vertAttrsFloatCount = void 0, e._vdataF32 = void 0, e._vdataUint32 = void 0, e._iaInfo = void 0, e._iaInfoBuffer = void 0, e._subMeshData = void 0, e._mesh = void 0, e._vertCount = 0, e._indexCount = 0, e._startTimeOffset = 0, e._lifeTimeOffset = 0, e._material = null, e.type = xt.PARTICLE_BATCH, e._capacity = 0, e._vertAttrs = null, e._vertSize = 0, e._vBuffer = null, e._vertAttrsFloatCount = 0, e._vdataF32 = null, e._vdataUint32 = null, e._iaInfo = new F([new I()]), e._iaInfoBuffer = e._device.createBuffer(new E(C.INDIRECT, A.HOST | A.DEVICE, P, P)), e._subMeshData = null, e._mesh = null, e;
        }

        n(e, t);
        var i = e.prototype;
        return i.setCapacity = function (t) {
          var e = this._capacity !== t;
          this._capacity = t, this._subMeshData && e && this.rebuild();
        }, i.setVertexAttributes = function (t, e) {
          if (this._mesh !== t || this._vertAttrs !== e) {
            this._mesh = t, this._vertAttrs = e, this._vertSize = 0;

            for (var i, r = z(this._vertAttrs); !(i = r()).done;) {
              var a = i.value;
              a.offset = this._vertSize, this._vertSize += R[a.format].size;
            }

            this._vertAttrsFloatCount = this._vertSize / 4, this.rebuild();
          }
        }, i.createSubMeshData = function () {
          this.destroySubMeshData(), this._vertCount = 4, this._indexCount = 6, this._mesh && (this._vertCount = this._mesh.struct.vertexBundles[this._mesh.struct.primitives[0].vertexBundelIndices[0]].view.count, this._indexCount = this._mesh.struct.primitives[0].indexView.count);

          var t = this._device.createBuffer(new E(C.VERTEX | C.TRANSFER_DST, A.HOST | A.DEVICE, this._vertSize * this._capacity * this._vertCount, this._vertSize)),
              e = new ArrayBuffer(this._vertSize * this._capacity * this._vertCount);

          if (this._mesh) {
            var i = this._vertAttrs[this._vertAttrs.findIndex(function (t) {
              return t.name === u.ATTR_TEX_COORD;
            })].offset;

            this._mesh.copyAttribute(0, u.ATTR_TEX_COORD, e, this._vertSize, i);

            var r = this._vertAttrs.findIndex(function (t) {
              return t.name === u.ATTR_TEX_COORD3;
            });

            if (i = this._vertAttrs[r++].offset, this._mesh.copyAttribute(0, u.ATTR_POSITION, e, this._vertSize, i), i = this._vertAttrs[r++].offset, this._mesh.copyAttribute(0, u.ATTR_NORMAL, e, this._vertSize, i), i = this._vertAttrs[r++].offset, !this._mesh.copyAttribute(0, u.ATTR_COLOR, e, this._vertSize, i)) for (var a = new Uint32Array(e), n = 0; n < this._vertCount; ++n) {
              a[n * this._vertAttrsFloatCount + i / 4] = s.WHITE._val;
            }

            for (var l = new Float32Array(e), h = 1; h < this._capacity; h++) {
              l.copyWithin(h * this._vertSize * this._vertCount / 4, 0, this._vertSize * this._vertCount / 4);
            }
          }

          t.update(e);
          var c = new Uint16Array(this._capacity * this._indexCount);

          if (this._mesh) {
            this._mesh.copyIndices(0, c);

            for (var _ = 1; _ < this._capacity; _++) {
              for (var p = 0; p < this._indexCount; p++) {
                c[_ * this._indexCount + p] = c[p] + _ * this._vertCount;
              }
            }
          } else for (var d = 0, f = 0; f < this._capacity; ++f) {
            var m = 4 * f;
            c[d++] = m, c[d++] = m + 1, c[d++] = m + 2, c[d++] = m + 3, c[d++] = m + 2, c[d++] = m + 1;
          }

          var y = this._device.createBuffer(new E(C.INDEX | C.TRANSFER_DST, A.HOST | A.DEVICE, this._capacity * this._indexCount * Uint16Array.BYTES_PER_ELEMENT, Uint16Array.BYTES_PER_ELEMENT));

          return y.update(c), this._iaInfo.drawInfos[0].vertexCount = this._capacity * this._vertCount, this._iaInfo.drawInfos[0].indexCount = this._capacity * this._indexCount, this._iaInfoBuffer || (this._iaInfoBuffer = this._device.createBuffer(new E(C.INDIRECT, A.HOST | A.DEVICE, P, P))), this._iaInfoBuffer.update(this._iaInfo), this._subMeshData = new D([t], this._vertAttrs, o.TRIANGLE_LIST, y, this._iaInfoBuffer), this.initSubModel(0, this._subMeshData, this._material), e;
        }, i.updateMaterial = function (t) {
          this._material = t, this.setSubModelMaterial(0, t);
        }, i.addParticleVertexData = function (t, e) {
          if (this._mesh) for (var i = 0; i < this._vertCount; i++) {
            var r = (t * this._vertCount + i) * this._vertAttrsFloatCount;
            this._vdataF32[r++] = e[0].x, this._vdataF32[r++] = e[0].y, this._vdataF32[r++] = e[0].z, r += 2, this._vdataF32[r++] = e[1].z, this._vdataF32[r++] = e[2].x, this._vdataF32[r++] = e[2].y, this._vdataF32[r++] = e[2].z, this._vdataF32[r++] = e[3].x, this._vdataF32[r++] = e[3].y, this._vdataF32[r++] = e[3].z, this._vdataUint32[r++] = e[4];
          } else {
            var a = t * this._vertAttrsFloatCount;
            this._vdataF32[a++] = e[0].x, this._vdataF32[a++] = e[0].y, this._vdataF32[a++] = e[0].z, this._vdataF32[a++] = e[1].x, this._vdataF32[a++] = e[1].y, this._vdataF32[a++] = e[1].z, this._vdataF32[a++] = e[2].x, this._vdataF32[a++] = e[2].y, this._vdataF32[a++] = e[2].z, this._vdataF32[a++] = e[3].x, this._vdataF32[a++] = e[3].y, this._vdataF32[a++] = e[3].z, this._vdataUint32[a++] = e[4], e[5] && (this._vdataF32[a++] = e[5].x, this._vdataF32[a++] = e[5].y, this._vdataF32[a++] = e[5].z);
          }
        }, i.addGPUParticleVertexData = function (t, e, i) {
          for (var r = e * this._vertAttrsFloatCount * this._vertCount, a = 0; a < this._vertCount; a++) {
            var n = r;
            this._vdataF32[n++] = t.position.x, this._vdataF32[n++] = t.position.y, this._vdataF32[n++] = t.position.z, this._vdataF32[n++] = i, this._vdataF32[n++] = t.startSize.x, this._vdataF32[n++] = t.startSize.y, this._vdataF32[n++] = t.startSize.z, this._vdataF32[n++] = xu[2 * a], this._vdataF32[n++] = t.rotation.x, this._vdataF32[n++] = t.rotation.y, this._vdataF32[n++] = t.rotation.z, this._vdataF32[n++] = xu[2 * a + 1], this._vdataF32[n++] = t.startColor.r / 255, this._vdataF32[n++] = t.startColor.g / 255, this._vdataF32[n++] = t.startColor.b / 255, this._vdataF32[n++] = t.startColor.a / 255, this._vdataF32[n++] = t.velocity.x, this._vdataF32[n++] = t.velocity.y, this._vdataF32[n++] = t.velocity.z, this._vdataF32[n++] = t.startLifetime, this._vdataF32[n++] = t.randomSeed, r += this._vertAttrsFloatCount;
          }
        }, i.updateGPUParticles = function (t, e, i) {
          for (var r = this._vertAttrsFloatCount * this._vertCount, a = 0, n = 0, o = 0, s = 0; s < t; ++s) {
            a = s * r, n = this._vdataF32[a + this._startTimeOffset], this._vdataF32[a + this._lifeTimeOffset] - (e - n) < i && (o = --t * r, this._vdataF32.copyWithin(a, o, o + r), s--);
          }

          return t;
        }, i.constructAttributeIndex = function () {
          if (this._vertAttrs) {
            var t = this._vertAttrs.findIndex(function (t) {
              return "a_position_starttime" === t.name;
            }),
                e = this._vertAttrs[t].offset;

            this._startTimeOffset = e / 4 + 3, t = this._vertAttrs.findIndex(function (t) {
              return "a_dir_life" === t.name;
            }), e = this._vertAttrs[t].offset, this._lifeTimeOffset = e / 4 + 3;
          }
        }, i.updateIA = function (t) {
          this._subModels[0].inputAssembler.vertexBuffers[0].update(this._vdataF32), this._iaInfo.drawInfos[0].firstIndex = 0, this._iaInfo.drawInfos[0].indexCount = this._indexCount * t, this._iaInfoBuffer.update(this._iaInfo);
        }, i.clear = function () {
          this._subModels[0].inputAssembler.indexCount = 0;
        }, i.destroy = function () {
          t.prototype.destroy.call(this), this._vBuffer = null, this._vdataF32 = null, this.destroySubMeshData(), this._iaInfoBuffer && (this._iaInfoBuffer.destroy(), this._iaInfoBuffer = null);
        }, i.rebuild = function () {
          this._vBuffer = this.createSubMeshData(), this._vdataF32 = new Float32Array(this._vBuffer), this._vdataUint32 = new Uint32Array(this._vBuffer);
        }, i.destroySubMeshData = function () {
          this._subMeshData && (this._subMeshData.destroy(), this._subMeshData = null, this._iaInfoBuffer = null);
        }, e;
      }(Ot),
          Ru = function () {
        function t(t) {
          this._particleSystem = null, this._model = null, this._renderInfo = null, this._vertAttrs = [], this._renderInfo = t;
        }

        var e = t.prototype;
        return e.getInfo = function () {
          return this._renderInfo;
        }, e.onInit = function (t) {
          this._particleSystem = t;
        }, e.onEnable = function () {
          if (this._particleSystem) {
            this.attachToScene();
            var t = this._model;
            t && (t.node = t.transform = this._particleSystem.node, t.enabled = this._particleSystem.enabledInHierarchy);
          }
        }, e.onDisable = function () {
          this.detachFromScene();
        }, e.onDestroy = function () {
          this._model && (c.director.root.destroyModel(this._model), this._model = null);
        }, e.attachToScene = function () {
          this._model && (this._model.scene && this.detachFromScene(), this._particleSystem._getRenderScene().addModel(this._model));
        }, e.detachFromScene = function () {
          this._model && this._model.scene && this._model.scene.removeModel(this._model);
        }, e.setVertexAttributes = function () {
          this._model && this._model.setVertexAttributes(this._renderInfo.renderMode === Ur.Mesh ? this._renderInfo.mesh : null, this._vertAttrs);
        }, e.clear = function () {
          this._model && (this._model.enabled = !1);
        }, e._initModel = function () {
          this._model || (this._model = c.director.root.createModel(zu), this._model.setCapacity(this._particleSystem.capacity), this._model.visFlags = this._particleSystem.visibility);
        }, e.updateTrailMaterial = function () {}, e.getDefaultTrailMaterial = function () {
          return null;
        }, t;
      }(),
          Eu = new x(),
          Cu = new J(),
          Au = ["_colorOverLifetimeModule", "_sizeOvertimeModule", "_velocityOvertimeModule", "_forceOvertimeModule", "_limitVelocityOvertimeModule", "_rotationOvertimeModule", "_textureAnimationModule"],
          Du = [0, 0, 1, 0, 0, 1, 1, 1],
          Fu = [new l(u.ATTR_POSITION, h.RGB32F), new l(u.ATTR_TEX_COORD, h.RGB32F), new l(u.ATTR_TEX_COORD1, h.RGB32F), new l(u.ATTR_TEX_COORD2, h.RGB32F), new l(u.ATTR_COLOR, h.RGBA8, !0)],
          Iu = [new l(u.ATTR_POSITION, h.RGB32F), new l(u.ATTR_TEX_COORD, h.RGB32F), new l(u.ATTR_TEX_COORD1, h.RGB32F), new l(u.ATTR_TEX_COORD2, h.RGB32F), new l(u.ATTR_COLOR, h.RGBA8, !0), new l(u.ATTR_COLOR1, h.RGB32F)],
          Pu = [new l(u.ATTR_POSITION, h.RGB32F), new l(u.ATTR_TEX_COORD, h.RGB32F), new l(u.ATTR_TEX_COORD1, h.RGB32F), new l(u.ATTR_TEX_COORD2, h.RGB32F), new l(u.ATTR_COLOR, h.RGBA8, !0), new l(u.ATTR_TEX_COORD3, h.RGB32F), new l(u.ATTR_NORMAL, h.RGB32F), new l(u.ATTR_COLOR1, h.RGBA8, !0)],
          Lu = {
        parent: null,
        owner: null,
        subModelIdx: 0
      },
          Bu = function (t) {
        function e(e) {
          var i;
          return (i = t.call(this, e) || this)._defines = void 0, i._trailDefines = void 0, i._frameTile_velLenScale = void 0, i._tmp_velLenScale = void 0, i._defaultMat = null, i._node_scale = void 0, i._attrs = void 0, i._particles = null, i._defaultTrailMat = null, i._updateList = new Map(), i._animateList = new Map(), i._runAnimateList = new Array(), i._fillDataFunc = null, i._uScaleHandle = 0, i._uLenHandle = 0, i._inited = !1, i._localMat = new J(), i._gravity = new M(), i._model = null, i._frameTile_velLenScale = new M(1, 1, 0, 0), i._tmp_velLenScale = i._frameTile_velLenScale.clone(), i._node_scale = new M(), i._attrs = new Array(5), i._defines = {
            CC_USE_WORLD_SPACE: !0,
            CC_USE_BILLBOARD: !0,
            CC_USE_STRETCHED_BILLBOARD: !1,
            CC_USE_HORIZONTAL_BILLBOARD: !1,
            CC_USE_VERTICAL_BILLBOARD: !1
          }, i._trailDefines = {
            CC_USE_WORLD_SPACE: !0
          }, i;
        }

        n(e, t);
        var i = e.prototype;
        return i.onInit = function (e) {
          var i = this;
          t.prototype.onInit.call(this, e), this._particles = new ut(function () {
            return new qi(i);
          }, 16), this._setVertexAttrib(), this._setFillFunc(), this._initModuleList(), this._initModel(), this.updateMaterialParams(), this.updateTrailMaterial(), this.setVertexAttributes(), this._inited = !0;
        }, i.clear = function () {
          t.prototype.clear.call(this), this._particles.reset(), this._particleSystem._trailModule && this._particleSystem._trailModule.clear(), this.updateRenderData(), this._model.enabled = !1;
        }, i.updateRenderMode = function () {
          this._setVertexAttrib(), this._setFillFunc(), this.updateMaterialParams(), this.setVertexAttributes();
        }, i.getFreeParticle = function () {
          return this._particles.length >= this._particleSystem.capacity ? null : this._particles.add();
        }, i.getDefaultTrailMaterial = function () {
          return this._defaultTrailMat;
        }, i.setNewParticle = function () {}, i._initModuleList = function () {
          var t = this;
          Au.forEach(function (e) {
            var i = t._particleSystem[e];
            i && i.enable && (i.needUpdate && (t._updateList[i.name] = i), i.needAnimate && (t._animateList[i.name] = i));
          }), this._runAnimateList.length = 0;

          for (var e = 0, i = Ir.length; e < i; e++) {
            var r = this._animateList[Ir[e]];
            r && this._runAnimateList.push(r);
          }
        }, i.enableModule = function (t, e, i) {
          e ? (i.needUpdate && (this._updateList[i.name] = i), i.needAnimate && (this._animateList[i.name] = i)) : (delete this._animateList[t], delete this._updateList[t]), this._runAnimateList.length = 0;

          for (var r = 0, a = Ir.length; r < a; r++) {
            var n = this._animateList[Ir[r]];
            n && this._runAnimateList.push(n);
          }
        }, i.updateParticles = function (t) {
          var e = this,
              i = this._particleSystem;
          if (!i) return this._particles.length;

          switch (i.node.getWorldMatrix(Cu), i.scaleSpace) {
            case Br.Local:
              i.node.getScale(this._node_scale);
              break;

            case Br.World:
              i.node.getWorldScale(this._node_scale);
          }

          (i.getMaterialInstance(0) || this._defaultMat).passes[0].setUniform(this._uScaleHandle, this._node_scale), this._updateList.forEach(function (t) {
            t.update(i._simulationSpace, Cu);
          });
          var r = i._trailModule,
              a = r && r.enable;

          if (a && r.update(), i.simulationSpace === Br.Local) {
            var n = i.node.getRotation();
            J.fromQuat(this._localMat, n), this._localMat.transpose();
          }

          for (var o = function o(n) {
            var o = e._particles.data[n];
            if (o.remainingLifetime -= t, x.set(o.animatedVelocity, 0, 0, 0), o.remainingLifetime < 0) return a && r.removeParticle(o), e._particles.removeAt(n), --n, s = n, "continue";

            if (i.simulationSpace === Br.Local) {
              var l = 9.8 * -i.gravityModifier.evaluate(1 - o.remainingLifetime / o.startLifetime, $(o.randomSeed)) * t;
              e._gravity.x = 0, e._gravity.y = l, e._gravity.z = 0, e._gravity.w = 1, e._gravity = e._gravity.transformMat4(e._localMat), o.velocity.x += e._gravity.x, o.velocity.y += e._gravity.y, o.velocity.z += e._gravity.z;
            } else o.velocity.y -= 9.8 * i.gravityModifier.evaluate(1 - o.remainingLifetime / o.startLifetime, $(o.randomSeed)) * t;

            x.copy(o.ultimateVelocity, o.velocity), e._runAnimateList.forEach(function (e) {
              e.animate(o, t);
            }), x.scaleAndAdd(o.position, o.position, o.ultimateVelocity, t), a && r.animate(o, t), s = n;
          }, s = 0; s < this._particles.length; ++s) {
            o(s);
          }

          return this._model.enabled = this._particles.length > 0, this._particles.length;
        }, i.updateRenderData = function () {
          for (var t = 0, e = 0; e < this._particles.length; ++e) {
            var i = this._particles.data[e],
                r = 0,
                a = this._particleSystem._textureAnimationModule;
            a && a.enable && (r = i.frameIndex), t = 4 * e, this._fillDataFunc(i, t, r);
          }
        }, i.beforeRender = function () {
          this._model.updateIA(this._particles.length);
        }, i.getParticleCount = function () {
          return this._particles.length;
        }, i.onMaterialModified = function (t) {
          this._inited && (0 === t ? this.updateMaterialParams() : this.updateTrailMaterial());
        }, i.onRebuildPSO = function (t, e) {
          this._model && 0 === t && this._model.setSubModelMaterial(0, e);
          var i = this._particleSystem._trailModule;
          i && i._trailModel && 1 === t && i._trailModel.setSubModelMaterial(0, e);
        }, i._setFillFunc = function () {
          this._renderInfo.renderMode === Ur.Mesh ? this._fillDataFunc = this._fillMeshData : this._renderInfo.renderMode === Ur.StrecthedBillboard ? this._fillDataFunc = this._fillStrecthedData : this._fillDataFunc = this._fillNormalData;
        }, i._fillMeshData = function (t, e, i) {
          var r = e / 4;
          this._attrs[0] = t.position, Eu.z = i, this._attrs[1] = Eu, this._attrs[2] = t.size, this._attrs[3] = t.rotation, this._attrs[4] = t.color._val, this._model.addParticleVertexData(r, this._attrs);
        }, i._fillStrecthedData = function (t, e, i) {
          for (var r = 0; r < 4; ++r) {
            this._attrs[0] = t.position, Eu.x = Du[2 * r], Eu.y = Du[2 * r + 1], Eu.z = i, this._attrs[1] = Eu, this._attrs[2] = t.size, this._attrs[3] = t.rotation, this._attrs[4] = t.color._val, this._attrs[5] = t.ultimateVelocity, this._attrs[6] = null, this._model.addParticleVertexData(e++, this._attrs);
          }
        }, i._fillNormalData = function (t, e, i) {
          for (var r = 0; r < 4; ++r) {
            this._attrs[0] = t.position, Eu.x = Du[2 * r], Eu.y = Du[2 * r + 1], Eu.z = i, this._attrs[1] = Eu, this._attrs[2] = t.size, this._attrs[3] = t.rotation, this._attrs[4] = t.color._val, this._attrs[5] = null, this._model.addParticleVertexData(e++, this._attrs);
          }
        }, i._setVertexAttrib = function () {
          switch (this._renderInfo.renderMode) {
            case Ur.StrecthedBillboard:
              this._vertAttrs = Iu.slice();
              break;

            case Ur.Mesh:
              this._vertAttrs = Pu.slice();
              break;

            default:
              this._vertAttrs = Fu.slice();
          }
        }, i.updateMaterialParams = function () {
          if (this._particleSystem) {
            var t = this._particleSystem,
                e = t.sharedMaterial;

            if (null != e) {
              var i = e._effectAsset._name;
              this._renderInfo.mainTexture = e.getProperty("mainTexture", 0), -1 !== i.indexOf("particle") && -1 === i.indexOf("particle-gpu") || t.setMaterial(null, 0);
            }

            null == t.sharedMaterial && null == this._defaultMat && (Lu.parent = p.get("default-particle-material"), Lu.owner = this._particleSystem, Lu.subModelIdx = 0, this._defaultMat = new zt(Lu), Lu.parent = null, Lu.owner = null, Lu.subModelIdx = 0, null !== this._renderInfo.mainTexture && this._defaultMat.setProperty("mainTexture", this._renderInfo.mainTexture));

            var r = t.getMaterialInstance(0) || this._defaultMat;

            t._simulationSpace === Br.World ? this._defines.CC_USE_WORLD_SPACE = !0 : this._defines.CC_USE_WORLD_SPACE = !1;
            var a = r.passes[0];
            this._uScaleHandle = a.getHandle("scale"), this._uLenHandle = a.getHandle("frameTile_velLenScale");
            var n = this._renderInfo.renderMode,
                o = this._frameTile_velLenScale;
            n === Ur.Billboard ? this._defines.CC_RENDER_MODE = 0 : n === Ur.StrecthedBillboard ? (this._defines.CC_RENDER_MODE = 1, o.z = this._renderInfo.velocityScale, o.w = this._renderInfo.lengthScale) : n === Ur.HorizontalBillboard ? this._defines.CC_RENDER_MODE = 2 : n === Ur.VerticalBillboard ? this._defines.CC_RENDER_MODE = 3 : n === Ur.Mesh ? this._defines.CC_RENDER_MODE = 4 : console.warn("particle system renderMode " + n + " not support.");
            var s = t._textureAnimationModule;
            s && s.enable ? (M.copy(this._tmp_velLenScale, o), Y.set(this._tmp_velLenScale, s.numTilesX, s.numTilesY), a.setUniform(this._uLenHandle, this._tmp_velLenScale)) : a.setUniform(this._uLenHandle, o), r.recompileShaders(this._defines), this._model && this._model.updateMaterial(r);
          }
        }, i.updateTrailMaterial = function () {
          if (this._particleSystem) {
            var t = this._particleSystem,
                e = t._trailModule;

            if (e && e.enable) {
              t.simulationSpace === Br.World || e.space === Br.World ? this._trailDefines.CC_USE_WORLD_SPACE = !0 : this._trailDefines.CC_USE_WORLD_SPACE = !1;
              var i = t.getMaterialInstance(1);
              null === i && null === this._defaultTrailMat && (Lu.parent = p.get("default-trail-material"), Lu.owner = this._particleSystem, Lu.subModelIdx = 1, this._defaultTrailMat = new zt(Lu), Lu.parent = null, Lu.owner = null, Lu.subModelIdx = 0), (i = i || this._defaultTrailMat).recompileShaders(this._trailDefines), e.updateMaterial();
            }
          }
        }, e;
      }(Ru),
          Uu = new J(),
          Vu = new M(),
          ku = new Z(),
          Nu = 32,
          Gu = "a_position_starttime",
          Hu = "a_size_uv",
          Wu = "a_rotation_uv",
          ju = "a_color",
          Xu = "a_dir_life",
          Ku = "a_rndSeed",
          Yu = [new l(Gu, h.RGBA32F), new l(Hu, h.RGBA32F), new l(Wu, h.RGBA32F), new l(ju, h.RGBA32F), new l(Xu, h.RGBA32F), new l(Ku, h.R32F)],
          qu = [new l(Gu, h.RGBA32F), new l(Hu, h.RGBA32F), new l(Wu, h.RGBA32F), new l(ju, h.RGBA32F), new l(Xu, h.RGBA32F), new l(Ku, h.R32F), new l(u.ATTR_TEX_COORD, h.RGB32F), new l(u.ATTR_TEX_COORD3, h.RGB32F), new l(u.ATTR_NORMAL, h.RGB32F), new l(u.ATTR_COLOR1, h.RGBA8, !0)],
          Qu = {
        parent: null,
        owner: null,
        subModelIdx: 0
      },
          Zu = function (t) {
        function e(e) {
          var i;
          return (i = t.call(this, e) || this)._defines = void 0, i._frameTile_velLenScale = void 0, i._unifrom_velLenScale = void 0, i._tmp_velLenScale = void 0, i._node_scale = void 0, i._vertAttrs = [], i._defaultMat = null, i._particleNum = 0, i._tempParticle = null, i._colorTexture = null, i._forceTexture = null, i._velocityTexture = null, i._rotationTexture = null, i._sizeTexture = null, i._animTexture = null, i._uTimeHandle = 0, i._uRotHandle = 0, i._inited = !1, i._frameTile_velLenScale = new M(1, 1, 0, 0), i._unifrom_velLenScale = i._frameTile_velLenScale.clone(), i._tmp_velLenScale = i._frameTile_velLenScale.clone(), i._node_scale = new M(), i._defines = {
            CC_USE_WORLD_SPACE: !0,
            CC_USE_BILLBOARD: !0,
            CC_USE_STRETCHED_BILLBOARD: !1,
            CC_USE_HORIZONTAL_BILLBOARD: !1,
            CC_USE_VERTICAL_BILLBOARD: !1,
            COLOR_OVER_TIME_MODULE_ENABLE: !1
          }, i._tempParticle = new qi(null), i._particleNum = 0, i;
        }

        n(e, t);
        var i = e.prototype;
        return i.onInit = function (e) {
          t.prototype.onInit.call(this, e), this._setVertexAttrib(), this._initModel(), this.updateMaterialParams(), this.setVertexAttributes(), this._inited = !0;
        }, i.updateRenderMode = function () {
          this._setVertexAttrib(), this.updateMaterialParams(), this.setVertexAttributes();
        }, i.setVertexAttributes = function () {
          t.prototype.setVertexAttributes.call(this), this._model.constructAttributeIndex();
        }, i.clear = function () {
          t.prototype.clear.call(this), this._particleNum = 0, this.updateRenderData();
        }, i.onDestroy = function () {
          t.prototype.onDestroy.call(this), this._forceTexture && this._forceTexture.destroy(), this._velocityTexture && this._velocityTexture.destroy(), this._colorTexture && this._colorTexture.destroy(), this._sizeTexture && this._sizeTexture.destroy(), this._rotationTexture && this._rotationTexture.destroy(), this._animTexture && this._animTexture.destroy();
        }, i.enableModule = function () {
          var t = this._particleSystem.getMaterialInstance(0) || this._defaultMat;

          t && (this.initShaderUniform(t), t.recompileShaders(this._defines), this._model && this._model.setSubModelMaterial(0, t));
        }, i.getFreeParticle = function () {
          return this._particleNum >= this._particleSystem._capacity ? null : this._tempParticle;
        }, i.setNewParticle = function (t) {
          this._model.addGPUParticleVertexData(t, this._particleNum, this._particleSystem._time), this._particleNum++;
        }, i.updateParticles = function (t) {
          return this._particleNum = this._model.updateGPUParticles(this._particleNum, this._particleSystem._time, t), this.updateShaderUniform(t), this._model.enabled = this._particleNum > 0, this._particleNum;
        }, i.updateRenderData = function () {}, i.beforeRender = function () {
          this._model.updateIA(this._particleNum);
        }, i.updateShaderUniform = function (t) {
          var e = this._particleSystem.getMaterialInstance(0) || this._defaultMat;

          if (e) {
            var i = e.passes[0];
            Vu.x = this._particleSystem._time, Vu.y = t, i.setUniform(this._uTimeHandle, Vu), this._particleSystem.node.getWorldRotation(ku), i.setUniform(this._uRotHandle, ku);
          }
        }, i.initShaderUniform = function (t) {
          var e = t.passes[0];
          this._uTimeHandle = e.getHandle("u_timeDelta"), this._uRotHandle = e.getHandle("u_worldRot"), e.setUniform(e.getHandle("scale"), this._node_scale), e.setUniform(e.getHandle("frameTile_velLenScale"), this._unifrom_velLenScale), Vu.x = Nu, Vu.y = .03125, e.setUniform(e.getHandle("u_sampleInfo"), Vu);
          var i = !1,
              a = this._particleSystem._forceOvertimeModule;

          if (i = a && a.enable, this._defines.FORCE_OVER_TIME_MODULE_ENABLE = i, i) {
            this._forceTexture && this._forceTexture.destroy(), this._forceTexture = Be(Nu, a.x, a.y, a.z);
            var n = e.getHandle("force_over_time_tex0"),
                o = ht.getBindingFromHandle(n);
            e.bindSampler(o, this._forceTexture.getGFXSampler()), e.bindTexture(o, this._forceTexture.getGFXTexture());
            var s = e.getHandle("u_force_space");
            e.setUniform(s, a.space);
            var l = e.getHandle("u_force_mode");
            e.setUniform(l, this._forceTexture.height);
          }

          var u = this._particleSystem._velocityOvertimeModule;

          if (i = u && u.enable, this._defines.VELOCITY_OVER_TIME_MODULE_ENABLE = i, i) {
            this._velocityTexture && this._velocityTexture.destroy(), this._velocityTexture = function (t, e, i, r, a) {
              for (var n = Math.max(Pe(e), Pe(i), Pe(r), Pe(a)), o = new Float32Array(128 * n), s = [e, i, r, a], l = 0; l < n; l++) {
                for (var u = 0; u < 4; u++) {
                  for (var h = s[u], c = 0, _ = 0, p = 0; p < 32; p++) {
                    var d = Ie(h, .03225806451612903 * p, l);
                    _ = (c += d) / (p + 1), o[4 * p + u] = _;
                  }
                }
              }

              return Le(o, 32, n);
            }(0, u.x, u.y, u.z, u.speedModifier);
            var h = e.getHandle("velocity_over_time_tex0"),
                c = ht.getBindingFromHandle(h);
            e.bindSampler(c, this._velocityTexture.getGFXSampler()), e.bindTexture(c, this._velocityTexture.getGFXTexture());

            var _ = e.getHandle("u_velocity_space");

            e.setUniform(_, u.space);
            var p = e.getHandle("u_velocity_mode");
            e.setUniform(p, this._velocityTexture.height);
          }

          var d = this._particleSystem._colorOverLifetimeModule;

          if (i = d && d.enable, this._defines.COLOR_OVER_TIME_MODULE_ENABLE = i, i) {
            this._colorTexture && this._colorTexture.destroy(), this._colorTexture = function (t, e) {
              for (var i = function (t) {
                switch (t.mode) {
                  case Hi.TwoColors:
                  case Hi.TwoGradients:
                    return 2;

                  default:
                    return 1;
                }
              }(e), a = new Uint8Array(t * i * 4), n = 1 / (t - 1), o = 0, s = 0; s < i; s++) {
                for (var l = 0; l < t; l++) {
                  var u = ji(e, n * l, s);
                  a[o] = u.r, a[o + 1] = u.g, a[o + 2] = u.b, a[o + 3] = u.a, o += 4;
                }
              }

              var h = new r();
              return h.create(t, i, H.RGBA8888), h.setFilters(W.LINEAR, W.LINEAR), h.setWrapMode(j.CLAMP_TO_EDGE, j.CLAMP_TO_EDGE), h.uploadData(a), h;
            }(Nu, d.color);
            var f = e.getHandle("color_over_time_tex0"),
                m = ht.getBindingFromHandle(f);
            e.bindSampler(m, this._colorTexture.getGFXSampler()), e.bindTexture(m, this._colorTexture.getGFXTexture());
            var y = e.getHandle("u_color_mode");
            e.setUniform(y, this._colorTexture.height);
          }

          var v = this._particleSystem._rotationOvertimeModule;

          if (i = v && v.enable, this._defines.ROTATION_OVER_TIME_MODULE_ENABLE = i, i) {
            this._rotationTexture && this._rotationTexture.destroy(), v.separateAxes ? this._rotationTexture = Be(Nu, v.x, v.y, v.z) : this._rotationTexture = function (t, e) {
              for (var i = Pe(e), r = new Float32Array(128 * i), a = 0, n = 0; n < i; n++) {
                for (var o = 0; o < 32; o++) {
                  var s = Ie(e, .03225806451612903 * o, n);
                  r[a + 2] = s, a += 4;
                }
              }

              return Le(r, 32, i);
            }(0, v.z);
            var b = e.getHandle("rotation_over_time_tex0"),
                g = ht.getBindingFromHandle(b);
            e.bindSampler(g, this._rotationTexture.getGFXSampler()), e.bindTexture(g, this._rotationTexture.getGFXTexture());
            var M = e.getHandle("u_rotation_mode");
            e.setUniform(M, this._rotationTexture.height);
          }

          var w = this._particleSystem._sizeOvertimeModule;

          if (i = w && w.enable, this._defines.SIZE_OVER_TIME_MODULE_ENABLE = i, i) {
            this._sizeTexture && this._sizeTexture.destroy(), w.separateAxes ? this._sizeTexture = Be(Nu, w.x, w.y, w.z, !0) : this._sizeTexture = function (t, e) {
              for (var i = Pe(e), r = new Float32Array(128 * i), a = 0, n = 0, o = 0; o < i; o++) {
                0;

                for (var s = 0; s < 32; s++) {
                  var l = Ie(e, .03225806451612903 * s, o);
                  a = l, r[n] = a, r[n + 1] = a, r[n + 2] = a, n += 4;
                }
              }

              return Le(r, 32, i);
            }(0, w.size);
            var S = e.getHandle("size_over_time_tex0"),
                T = ht.getBindingFromHandle(S);
            e.bindSampler(T, this._sizeTexture.getGFXSampler()), e.bindTexture(T, this._sizeTexture.getGFXTexture());
            var O = e.getHandle("u_size_mode");
            e.setUniform(O, this._sizeTexture.height);
          }

          var x = this._particleSystem._textureAnimationModule;

          if (i = x && x.enable, this._defines.TEXTURE_ANIMATION_MODULE_ENABLE = i, i) {
            this._animTexture && this._animTexture.destroy(), this._animTexture = function (t, e, i) {
              for (var r = Math.max(Pe(e), Pe(i)), a = new Float32Array(128 * r), n = [e, i], o = 0; o < r; o++) {
                for (var s = 0; s < 2; s++) {
                  for (var l = n[s], u = 0, h = 0, c = 0; c < 32; c++) {
                    var _ = Ie(l, .03225806451612903 * c, o);

                    h = (u += _) / (c + 1), a[4 * c + s] = h;
                  }
                }
              }

              return Le(a, 32, r);
            }(0, x.startFrame, x.frameOverTime);
            var z = e.getHandle("texture_animation_tex0"),
                R = ht.getBindingFromHandle(z);
            e.bindSampler(R, this._animTexture.getGFXSampler()), e.bindTexture(R, this._animTexture.getGFXTexture());
            var E = e.getHandle("u_anim_info");
            Vu.x = this._animTexture.height, Vu.y = x.numTilesX * x.numTilesY, Vu.z = x.cycleCount, e.setUniform(E, Vu);
          }
        }, i.getParticleCount = function () {
          return this._particleNum;
        }, i.onMaterialModified = function () {
          this._inited && this.updateMaterialParams();
        }, i.onRebuildPSO = function (t, e) {
          this._model && 0 === t && this._model.setSubModelMaterial(0, e);
        }, i._setVertexAttrib = function () {
          switch (this._renderInfo.renderMode) {
            case Ur.StrecthedBillboard:
              this._vertAttrs = Yu.slice();
              break;

            case Ur.Mesh:
              this._vertAttrs = qu.slice();
              break;

            default:
              this._vertAttrs = Yu.slice();
          }
        }, i.updateMaterialParams = function () {
          if (this._particleSystem) {
            var t = this._particleSystem,
                e = t.sharedMaterial;

            if (null !== e) {
              var i = e._effectAsset._name;
              this._renderInfo.mainTexture = e.getProperty("mainTexture", 0), -1 === i.indexOf("particle-gpu") && (this._renderInfo.mainTexture = e.getProperty("mainTexture", 0), this._particleSystem.setMaterial(null, 0));
            }

            null == t.sharedMaterial && null == this._defaultMat && (Qu.parent = p.get("default-particle-gpu-material"), Qu.owner = t, Qu.subModelIdx = 0, this._defaultMat = new zt(Qu), Qu.parent = null, Qu.owner = null, Qu.subModelIdx = 0, null !== this._renderInfo.mainTexture && this._defaultMat.setProperty("mainTexture", this._renderInfo.mainTexture));

            var r = t.getMaterialInstance(0) || this._defaultMat;

            switch (t.node.getWorldMatrix(Uu), t.scaleSpace) {
              case Br.Local:
                t.node.getScale(this._node_scale);
                break;

              case Br.World:
                t.node.getWorldScale(this._node_scale);
            }

            t._simulationSpace === Br.World ? this._defines.CC_USE_WORLD_SPACE = !0 : this._defines.CC_USE_WORLD_SPACE = !1;
            var a = this._renderInfo.renderMode;
            a === Ur.Billboard ? this._defines.CC_RENDER_MODE = 0 : a === Ur.StrecthedBillboard ? (this._defines.CC_RENDER_MODE = 1, this._frameTile_velLenScale.z = this._renderInfo.velocityScale, this._frameTile_velLenScale.w = this._renderInfo.lengthScale) : a === Ur.HorizontalBillboard ? this._defines.CC_RENDER_MODE = 2 : a === Ur.VerticalBillboard ? this._defines.CC_RENDER_MODE = 3 : a === Ur.Mesh ? this._defines.CC_RENDER_MODE = 4 : console.warn("particle system renderMode " + a + " not support.");
            var n = t._textureAnimationModule;
            n && n.enable ? (Y.set(this._frameTile_velLenScale, n.numTilesX, n.numTilesY), M.copy(this._unifrom_velLenScale, this._frameTile_velLenScale)) : (this._tmp_velLenScale.z = this._frameTile_velLenScale.z, this._tmp_velLenScale.w = this._frameTile_velLenScale.w, M.copy(this._unifrom_velLenScale, this._tmp_velLenScale)), this.initShaderUniform(r), r.recompileShaders(this._defines), this._model && this._model.updateMaterial(r);
          }
        }, e;
      }(Ru);

      function Ju() {
        var t = St.root.device;
        return !!(t.capabilities.maxVertexTextureUnits >= 8 && t.hasFeature(_t.TEXTURE_FLOAT)) || (c.warn("Maybe the device has restrictions on vertex textures or does not support float textures."), !1);
      }

      var $u,
          th,
          eh,
          ih,
          rh,
          ah,
          nh,
          oh,
          sh,
          lh,
          uh,
          hh,
          ch,
          _h,
          ph,
          dh,
          fh,
          mh,
          yh,
          vh,
          bh,
          gh,
          Mh,
          wh,
          Sh,
          Th,
          Oh,
          xh,
          zh,
          Rh,
          Eh,
          Ch,
          Ah,
          Dh,
          Fh,
          Ih,
          Ph,
          Lh,
          Bh,
          Uh,
          Vh,
          kh,
          Nh,
          Gh,
          Hh,
          Wh,
          jh,
          Xh,
          Kh,
          Yh,
          qh,
          Qh,
          Zh,
          Jh,
          $h,
          tc,
          ec,
          ic,
          rc,
          ac,
          nc,
          oc,
          sc,
          lc,
          uc,
          hc,
          cc,
          _c,
          pc,
          dc,
          fc,
          mc,
          yc,
          vc,
          bc,
          gc,
          Mc,
          wc,
          Sc,
          Tc,
          Oc,
          xc,
          zc,
          Rc,
          Ec,
          Cc,
          Ac,
          Dc,
          Fc,
          Ic,
          Pc,
          Lc,
          Bc,
          Uc,
          Vc,
          kc,
          Nc,
          Gc,
          Hc,
          Wc,
          jc,
          Xc,
          Kc,
          Yc,
          qc,
          Qc,
          Zc,
          Jc,
          $c,
          t_,
          e_,
          i_,
          r_,
          a_,
          n_,
          o_,
          s_,
          l_,
          u_,
          h_,
          c_,
          __,
          p_,
          d_,
          f_,
          m_,
          y_,
          v_,
          b_,
          g_,
          M_,
          w_,
          S_,
          T_,
          O_,
          x_,
          z_,
          R_,
          E_,
          C_,
          A_,
          D_,
          F_,
          I_,
          P_,
          L_,
          B_,
          U_,
          V_,
          k_,
          N_,
          G_,
          H_,
          W_,
          j_,
          X_,
          K_,
          Y_,
          q_,
          Q_,
          Z_,
          J_,
          $_,
          tp,
          ep,
          ip,
          rp,
          ap,
          np,
          op,
          sp,
          lp,
          up,
          hp,
          cp,
          _p,
          pp,
          dp,
          fp,
          mp,
          yp,
          vp,
          bp,
          gp,
          Mp,
          wp,
          Sp,
          Tp,
          Op,
          xp,
          zp,
          Rp,
          Ep,
          Cp,
          Ap,
          Dp,
          Fp,
          Ip,
          Pp,
          Lp,
          Bp,
          Up,
          Vp,
          kp,
          Np,
          Gp,
          Hp,
          Wp,
          jp,
          Xp,
          Kp,
          Yp,
          qp = (Zl = e("cc.ParticleSystemRenderer"), Jl = i(Ur), $l = q(), tu = v(), eu = q(), iu = v(), ru = q(), au = v(), nu = i(Ur), ou = i(Ct), su = q(), lu = v(), uu = i(_), hu = q(), cu = v(), _u = i(_), pu = q(), du = v(), fu = q(), mu = v(), Zl((Ou = function () {
        function t() {
          b(this, "_renderMode", bu, this), b(this, "_velocityScale", gu, this), b(this, "_lengthScale", Mu, this), b(this, "_mesh", wu, this), b(this, "_mainTexture", Su, this), b(this, "_useGPU", Tu, this), this._particleSystem = null;
        }

        var e = t.prototype;
        return e.create = function (t) {
          null === this._particleSystem ? this._particleSystem = t : this._particleSystem !== t && ct(6033);
        }, e.onInit = function (t) {
          if (this.create(t), this._particleSystem.processor) ct(6034);else {
            var e = this._useGPU && Ju();
            this._particleSystem.processor = e ? new Zu(this) : new Bu(this), this._particleSystem.processor.onInit(t);
          }
        }, e._switchProcessor = function () {
          this._particleSystem && (this._particleSystem.processor && (this._particleSystem.processor.detachFromScene(), this._particleSystem.processor.clear(), this._particleSystem.processor = null), this._particleSystem.processor = this._useGPU ? new Zu(this) : new Bu(this), this._particleSystem.processor.onInit(this._particleSystem), this._particleSystem.processor.onEnable(), this._particleSystem.bindModule());
        }, d(t, [{
          key: "renderMode",
          get: function get() {
            return this._renderMode;
          },
          set: function set(t) {
            this._renderMode !== t && (this._renderMode = t, this._particleSystem && this._particleSystem.processor.updateRenderMode());
          }
        }, {
          key: "velocityScale",
          get: function get() {
            return this._velocityScale;
          },
          set: function set(t) {
            this._velocityScale = t, this._particleSystem && this._particleSystem.processor.updateMaterialParams();
          }
        }, {
          key: "lengthScale",
          get: function get() {
            return this._lengthScale;
          },
          set: function set(t) {
            this._lengthScale = t, this._particleSystem && this._particleSystem.processor.updateMaterialParams();
          }
        }, {
          key: "mesh",
          get: function get() {
            return this._mesh;
          },
          set: function set(t) {
            this._mesh = t, this._particleSystem && this._particleSystem.processor.setVertexAttributes();
          }
        }, {
          key: "particleMaterial",
          get: function get() {
            return this._particleSystem ? this._particleSystem.getMaterial(0) : null;
          },
          set: function set(t) {
            this._particleSystem && this._particleSystem.setMaterial(t, 0);
          }
        }, {
          key: "trailMaterial",
          get: function get() {
            return this._particleSystem ? this._particleSystem.getMaterial(1) : null;
          },
          set: function set(t) {
            this._particleSystem && this._particleSystem.setMaterial(t, 1);
          }
        }, {
          key: "mainTexture",
          get: function get() {
            return this._mainTexture;
          },
          set: function set(t) {
            this._mainTexture = t;
          }
        }, {
          key: "useGPU",
          get: function get() {
            return this._useGPU;
          },
          set: function set(t) {
            this._useGPU !== t && (Ju() ? this._useGPU = t : this._useGPU = !1, this._switchProcessor());
          }
        }]), t;
      }(), f((vu = Ou).prototype, "renderMode", [Jl, $l, tu], Object.getOwnPropertyDescriptor(vu.prototype, "renderMode"), vu.prototype), f(vu.prototype, "velocityScale", [eu, iu], Object.getOwnPropertyDescriptor(vu.prototype, "velocityScale"), vu.prototype), f(vu.prototype, "lengthScale", [ru, au], Object.getOwnPropertyDescriptor(vu.prototype, "lengthScale"), vu.prototype), bu = f(vu.prototype, "_renderMode", [nu, O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ur.Billboard;
        }
      }), gu = f(vu.prototype, "_velocityScale", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Mu = f(vu.prototype, "_lengthScale", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), wu = f(vu.prototype, "_mesh", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(vu.prototype, "mesh", [ou, su, lu], Object.getOwnPropertyDescriptor(vu.prototype, "mesh"), vu.prototype), f(vu.prototype, "particleMaterial", [uu, hu, cu], Object.getOwnPropertyDescriptor(vu.prototype, "particleMaterial"), vu.prototype), f(vu.prototype, "trailMaterial", [_u, pu, du], Object.getOwnPropertyDescriptor(vu.prototype, "trailMaterial"), vu.prototype), Su = f(vu.prototype, "_mainTexture", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Tu = f(vu.prototype, "_useGPU", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), f(vu.prototype, "useGPU", [fu, mu], Object.getOwnPropertyDescriptor(vu.prototype, "useGPU"), vu.prototype), yu = vu)) || yu),
          Qp = Math.cos(S(100)),
          Zp = {
        position: new x(),
        velocity: new x()
      },
          Jp = new Z(),
          $p = new J(),
          td = new x(),
          ed = new x(),
          id = new s(),
          rd = function () {
        function t(t) {
          for (this.start = void 0, this.end = void 0, this.trailElements = void 0, this.start = -1, this.end = -1, this.trailElements = []; t--;) {
            this.trailElements.push({
              position: new x(),
              lifetime: 0,
              width: 0,
              velocity: new x(),
              direction: 0,
              color: new s()
            });
          }
        }

        var e = t.prototype;
        return e.getElement = function (t) {
          return -1 === this.start ? null : (t < 0 && (t = (t + this.trailElements.length) % this.trailElements.length), t >= this.trailElements.length && (t %= this.trailElements.length), this.trailElements[t]);
        }, e.addElement = function () {
          if (0 === this.trailElements.length) return null;
          if (-1 === this.start) return this.start = 0, this.end = 1, this.trailElements[0];
          this.start === this.end && (this.trailElements.splice(this.end, 0, {
            position: new x(),
            lifetime: 0,
            width: 0,
            velocity: new x(),
            direction: 0,
            color: new s()
          }), this.start++, this.start %= this.trailElements.length);
          var t = this.end++;
          return this.end %= this.trailElements.length, this.trailElements[t];
        }, e.iterateElement = function (t, e, i, r) {
          for (var a = this.start >= this.end ? this.end + this.trailElements.length : this.end, n = this.start; n < a; n++) {
            e(t, this.trailElements[n % this.trailElements.length], i, r) && (this.start++, this.start %= this.trailElements.length);
          }

          this.start === a && (this.start = -1, this.end = -1);
        }, e.count = function () {
          return this.start < this.end ? this.end - this.start : this.trailElements.length + this.end - this.start;
        }, e.clear = function () {
          this.start = -1, this.end = -1;
        }, t;
      }(),
          ad = ($u = e("cc.TrailModule"), th = q(), eh = i(Gr), ih = q(), rh = v(), ah = i(Fe), nh = Q(), oh = q(), sh = v(), lh = q(), uh = v(), hh = i(Br), ch = q(), _h = v(), ph = i(Hr), dh = q(), fh = v(), mh = q(), yh = v(), vh = i(Fe), bh = Q(), gh = q(), Mh = v(), wh = q(), Sh = v(), Th = i(Wi), Oh = q(), xh = v(), zh = i(Wi), Rh = q(), Eh = v(), Ch = i(Br), $u((Xh = function () {
        function t() {
          b(this, "_enable", Fh, this), b(this, "mode", Ih, this), b(this, "lifeTime", Ph, this), b(this, "_minParticleDistance", Lh, this), b(this, "existWithParticles", Bh, this), b(this, "textureMode", Uh, this), b(this, "widthFromParticle", Vh, this), b(this, "widthRatio", kh, this), b(this, "colorFromParticle", Nh, this), b(this, "colorOverTrail", Gh, this), b(this, "colorOvertime", Hh, this), b(this, "_space", Wh, this), b(this, "_particleSystem", jh, this), this._minSquaredDistance = 0, this._vertSize = void 0, this._trailNum = 0, this._trailLifetime = 0, this.vbOffset = 0, this.ibOffset = 0, this._trailSegments = null, this._particleTrail = void 0, this._trailModel = null, this._iaInfo = void 0, this._iaInfoBuffer = null, this._subMeshData = null, this._vertAttrs = void 0, this._vbF32 = null, this._vbUint32 = null, this._iBuffer = null, this._needTransform = !1, this._material = null, this._iaInfo = new F([new I()]), this._vertAttrs = [new l(u.ATTR_POSITION, h.RGB32F), new l(u.ATTR_TEX_COORD, h.RGBA32F), new l(u.ATTR_TEX_COORD1, h.RGB32F), new l(u.ATTR_COLOR, h.RGBA8, !0)], this._vertSize = 0;

          for (var t, e = z(this._vertAttrs); !(t = e()).done;) {
            var i = t.value;
            this._vertSize += R[i.format].size;
          }

          this._particleTrail = new Map();
        }

        var e = t.prototype;
        return e.onInit = function (t) {
          this._particleSystem = t, this.minParticleDistance = this._minParticleDistance;

          for (var e = 0, i = t.startLifetime.getMax(), r = t.rateOverTime.getMax(), a = t.duration, n = 0, o = t.bursts.length; n < o; n++) {
            e += t.bursts[n].getMaxCount(t) * Math.ceil(i / a);
          }

          this._trailNum = Math.ceil(i * this.lifeTime.getMax() * 60 * (r * a + e)), this._trailSegments = new pt(function () {
            return new rd(10);
          }, Math.ceil(r * a)), this._enable && (this.enable = this._enable);
        }, e.onEnable = function () {
          this._attachToScene();
        }, e.onDisable = function () {
          this._particleTrail.clear(), this._detachFromScene();
        }, e._attachToScene = function () {
          this._trailModel && (this._trailModel.scene && this._detachFromScene(), this._particleSystem._getRenderScene().addModel(this._trailModel));
        }, e._detachFromScene = function () {
          this._trailModel && this._trailModel.scene && this._trailModel.scene.removeModel(this._trailModel);
        }, e.destroy = function () {
          this.destroySubMeshData(), this._trailModel && (St.root.destroyModel(this._trailModel), this._trailModel = null), this._trailSegments && (this._trailSegments.destroy(function (t) {
            t.trailElements.length = 0;
          }), this._trailSegments = null);
        }, e.play = function () {
          this._trailModel && this._enable && (this._trailModel.enabled = !0);
        }, e.clear = function () {
          if (this.enable) {
            for (var t = this._particleTrail.values(), e = t.next(); !e.done;) {
              e.value.clear(), e = t.next();
            }

            this._particleTrail.clear(), this.updateRenderData(), this._trailModel && (this._trailModel.enabled = !1);
          }
        }, e.updateMaterial = function () {
          this._particleSystem && (this._material = this._particleSystem.getMaterialInstance(1) || this._particleSystem.processor._defaultTrailMat, this._trailModel && this._trailModel.setSubModelMaterial(0, this._material));
        }, e.update = function () {
          this._trailLifetime = this.lifeTime.evaluate(this._particleSystem._time, 1), this.space === Br.World && this._particleSystem._simulationSpace === Br.Local ? (this._needTransform = !0, this._particleSystem.node.getWorldMatrix($p), this._particleSystem.node.getWorldRotation(Jp)) : this._needTransform = !1;
        }, e.animate = function (t, e) {
          if (this._trailSegments) if (t.loopCount > t.lastLoop) t.trailDelay > 1 ? (t.lastLoop = t.loopCount, t.trailDelay = 0) : t.trailDelay++;else {
            var i = this._particleTrail.get(t);

            if (!i) return i = this._trailSegments.alloc(), void this._particleTrail.set(t, i);
            var r = i.getElement(i.end - 1);

            if (this._needTransform ? x.transformMat4(td, t.position, $p) : x.copy(td, t.position), !(r && (i.iterateElement(this, this._updateTrailElement, t, e), x.squaredDistance(r.position, td) < this._minSquaredDistance)) && (r = i.addElement())) {
              x.copy(r.position, td), r.lifetime = 0, this.widthFromParticle ? r.width = t.size.x * this.widthRatio.evaluate(0, 1) : r.width = this.widthRatio.evaluate(0, 1);
              var a = i.count();

              if (2 === a) {
                var n = i.getElement(i.end - 2);
                x.subtract(n.velocity, r.position, n.position);
              } else if (a > 2) {
                var o = i.getElement(i.end - 2),
                    s = i.getElement(i.end - 3);
                x.subtract(td, s.position, o.position), x.subtract(ed, r.position, o.position), x.subtract(o.velocity, ed, td), x.equals(x.ZERO, o.velocity) && x.copy(o.velocity, td), x.normalize(o.velocity, o.velocity), this._checkDirectionReverse(o, s);
              }

              this.colorFromParticle ? r.color.set(t.color) : r.color.set(this.colorOvertime.evaluate(0, 1));
            }
          }
        }, e.removeParticle = function (t) {
          var e = this._particleTrail.get(t);

          e && this._trailSegments && (e.clear(), this._trailSegments.free(e), this._particleTrail.delete(t));
        }, e.updateRenderData = function () {
          this.vbOffset = 0, this.ibOffset = 0;

          for (var t, e = z(this._particleTrail.keys()); !(t = e()).done;) {
            var i = t.value,
                r = this._particleTrail.get(i);

            if (-1 !== r.start) {
              var a = 4 * this.vbOffset / this._vertSize,
                  n = r.start >= r.end ? r.end + r.trailElements.length : r.end,
                  o = n - r.start,
                  s = 1 / o,
                  l = r.trailElements[r.start];

              this._fillVertexBuffer(l, this.colorOverTrail.evaluate(1, 1), a, 1, 0, 4);

              for (var u = r.start + 1; u < n; u++) {
                var h = r.trailElements[u % r.trailElements.length],
                    c = u - r.start;

                this._fillVertexBuffer(h, this.colorOverTrail.evaluate(1 - c / o, 1), a, 1 - c * s, c, 5);
              }

              this._needTransform ? x.transformMat4(Zp.position, i.position, $p) : x.copy(Zp.position, i.position);
              var _ = this._trailModel;

              if (_ && _.node.invalidateChildren(dt.POSITION), 1 === o || 2 === o) {
                var p = r.getElement(r.end - 1);
                x.subtract(p.velocity, Zp.position, p.position), this._vbF32[this.vbOffset - this._vertSize / 4 - 4] = p.velocity.x, this._vbF32[this.vbOffset - this._vertSize / 4 - 3] = p.velocity.y, this._vbF32[this.vbOffset - this._vertSize / 4 - 2] = p.velocity.z, this._vbF32[this.vbOffset - 4] = p.velocity.x, this._vbF32[this.vbOffset - 3] = p.velocity.y, this._vbF32[this.vbOffset - 2] = p.velocity.z, x.subtract(Zp.velocity, Zp.position, p.position), this._checkDirectionReverse(Zp, p);
              } else if (o > 2) {
                var d = r.getElement(r.end - 1),
                    f = r.getElement(r.end - 2);
                x.subtract(td, f.position, d.position), x.subtract(ed, Zp.position, d.position), x.normalize(td, td), x.normalize(ed, ed), x.subtract(d.velocity, ed, td), x.normalize(d.velocity, d.velocity), this._checkDirectionReverse(d, f), this.vbOffset -= this._vertSize / 4 * 2, this.ibOffset -= 6, this._fillVertexBuffer(d, this.colorOverTrail.evaluate(s, 1), a, s, o - 1, 5), x.subtract(Zp.velocity, Zp.position, d.position), x.normalize(Zp.velocity, Zp.velocity), this._checkDirectionReverse(Zp, d);
              }

              this.widthFromParticle ? Zp.width = i.size.x * this.widthRatio.evaluate(0, 1) : Zp.width = this.widthRatio.evaluate(0, 1), Zp.color = i.color, x.equals(Zp.velocity, x.ZERO) ? this.ibOffset -= 3 : this._fillVertexBuffer(Zp, this.colorOverTrail.evaluate(0, 1), a, 0, o, 1);
            }
          }

          this._trailModel.enabled = this.ibOffset > 0;
        }, e.updateIA = function (t) {
          var e = this._trailModel && this._trailModel.subModels;

          if (e && e.length > 0) {
            var i = e[0];
            i.inputAssembler.vertexBuffers[0].update(this._vbF32), i.inputAssembler.indexBuffer.update(this._iBuffer), this._iaInfo.drawInfos[0].firstIndex = 0, this._iaInfo.drawInfos[0].indexCount = t, this._iaInfoBuffer.update(this._iaInfo);
          }
        }, e.beforeRender = function () {
          this.updateIA(this.ibOffset);
        }, e._createModel = function () {
          this._trailModel || (this._trailModel = c.director.root.createModel(Ot));
        }, e.rebuild = function () {
          var t = St.root.device,
              e = t.createBuffer(new E(C.VERTEX | C.TRANSFER_DST, A.HOST | A.DEVICE, this._vertSize * (this._trailNum + 1) * 2, this._vertSize)),
              i = new ArrayBuffer(this._vertSize * (this._trailNum + 1) * 2);
          this._vbF32 = new Float32Array(i), this._vbUint32 = new Uint32Array(i), e.update(i);
          var r = t.createBuffer(new E(C.INDEX | C.TRANSFER_DST, A.HOST | A.DEVICE, 6 * this._trailNum * Uint16Array.BYTES_PER_ELEMENT, Uint16Array.BYTES_PER_ELEMENT));
          this._iBuffer = new Uint16Array(6 * this._trailNum), r.update(this._iBuffer), this._iaInfoBuffer = t.createBuffer(new E(C.INDIRECT, A.HOST | A.DEVICE, P, P)), this._iaInfo.drawInfos[0].vertexCount = 2 * (this._trailNum + 1), this._iaInfo.drawInfos[0].indexCount = 6 * this._trailNum, this._iaInfoBuffer.update(this._iaInfo), this._subMeshData = new D([e], this._vertAttrs, o.TRIANGLE_LIST, r, this._iaInfoBuffer);
          var a = this._trailModel;
          a && (a.node = a.transform = this._particleSystem.node, a.visFlags = this._particleSystem.visibility, a.initSubModel(0, this._subMeshData, this._material), a.enabled = !0);
        }, e._updateTrailElement = function (t, e, i, r) {
          return e.lifetime += r, t.colorFromParticle ? (e.color.set(i.color), e.color.multiply(t.colorOvertime.evaluate(1 - i.remainingLifetime / i.startLifetime, 1))) : e.color.set(t.colorOvertime.evaluate(1 - i.remainingLifetime / i.startLifetime, 1)), t.widthFromParticle ? e.width = i.size.x * t.widthRatio.evaluate(e.lifetime / t._trailLifetime, 1) : e.width = t.widthRatio.evaluate(e.lifetime / t._trailLifetime, 1), e.lifetime > t._trailLifetime;
        }, e._fillVertexBuffer = function (t, e, i, r, a, n) {
          this._vbF32[this.vbOffset++] = t.position.x, this._vbF32[this.vbOffset++] = t.position.y, this._vbF32[this.vbOffset++] = t.position.z, this._vbF32[this.vbOffset++] = t.direction, this._vbF32[this.vbOffset++] = t.width, this._vbF32[this.vbOffset++] = r, this._vbF32[this.vbOffset++] = 0, this._vbF32[this.vbOffset++] = t.velocity.x, this._vbF32[this.vbOffset++] = t.velocity.y, this._vbF32[this.vbOffset++] = t.velocity.z, id.set(t.color), id.multiply(e), this._vbUint32[this.vbOffset++] = id._val, this._vbF32[this.vbOffset++] = t.position.x, this._vbF32[this.vbOffset++] = t.position.y, this._vbF32[this.vbOffset++] = t.position.z, this._vbF32[this.vbOffset++] = 1 - t.direction, this._vbF32[this.vbOffset++] = t.width, this._vbF32[this.vbOffset++] = r, this._vbF32[this.vbOffset++] = 1, this._vbF32[this.vbOffset++] = t.velocity.x, this._vbF32[this.vbOffset++] = t.velocity.y, this._vbF32[this.vbOffset++] = t.velocity.z, this._vbUint32[this.vbOffset++] = id._val, 1 & n && (this._iBuffer[this.ibOffset++] = i + 2 * a, this._iBuffer[this.ibOffset++] = i + 2 * a - 1, this._iBuffer[this.ibOffset++] = i + 2 * a + 1), 4 & n && (this._iBuffer[this.ibOffset++] = i + 2 * a, this._iBuffer[this.ibOffset++] = i + 2 * a + 1, this._iBuffer[this.ibOffset++] = i + 2 * a + 2);
        }, e._checkDirectionReverse = function (t, e) {
          x.dot(t.velocity, e.velocity) < Qp ? t.direction = 1 - e.direction : t.direction = e.direction;
        }, e.destroySubMeshData = function () {
          this._subMeshData && (this._subMeshData.destroy(), this._subMeshData = null);
        }, d(t, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(t) {
            t === this._enable && this._trailModel || (t && !this._enable && (this._enable = t, this._particleSystem.processor && this._particleSystem.processor.updateTrailMaterial()), t && !this._trailModel && (this._createModel(), this.rebuild()), this._enable = t, this._trailModel && (this._trailModel.enabled = t), t ? this.onEnable() : this.onDisable());
          }
        }, {
          key: "minParticleDistance",
          get: function get() {
            return this._minParticleDistance;
          },
          set: function set(t) {
            this._minParticleDistance = t, this._minSquaredDistance = t * t;
          }
        }, {
          key: "space",
          get: function get() {
            return this._space;
          },
          set: function set(t) {
            this._space = t;
            var e = this._particleSystem;
            e && e.processor && e.processor.updateTrailMaterial();
          }
        }]), t;
      }(), f((Dh = Xh).prototype, "enable", [th], Object.getOwnPropertyDescriptor(Dh.prototype, "enable"), Dh.prototype), Fh = f(Dh.prototype, "_enable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Ih = f(Dh.prototype, "mode", [eh, O, ih, rh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Gr.Particles;
        }
      }), Ph = f(Dh.prototype, "lifeTime", [ah, O, nh, oh, sh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Lh = f(Dh.prototype, "_minParticleDistance", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .1;
        }
      }), f(Dh.prototype, "minParticleDistance", [lh, uh], Object.getOwnPropertyDescriptor(Dh.prototype, "minParticleDistance"), Dh.prototype), f(Dh.prototype, "space", [hh, ch, _h], Object.getOwnPropertyDescriptor(Dh.prototype, "space"), Dh.prototype), Bh = f(Dh.prototype, "existWithParticles", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Uh = f(Dh.prototype, "textureMode", [ph, O, dh, fh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Hr.Stretch;
        }
      }), Vh = f(Dh.prototype, "widthFromParticle", [O, mh, yh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), kh = f(Dh.prototype, "widthRatio", [vh, O, bh, gh, Mh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Nh = f(Dh.prototype, "colorFromParticle", [O, wh, Sh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Gh = f(Dh.prototype, "colorOverTrail", [Th, O, Oh, xh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Wi();
        }
      }), Hh = f(Dh.prototype, "colorOvertime", [zh, O, Rh, Eh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Wi();
        }
      }), Wh = f(Dh.prototype, "_space", [Ch], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Br.World;
        }
      }), jh = f(Dh.prototype, "_particleSystem", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ah = Dh)) || Ah),
          nd = new J(),
          od = new Z(),
          sd = Object.getOwnPropertyDescriptor(Rt.prototype, "sharedMaterials"),
          ld = function (e) {
        return t({
          ParticleSystem: e,
          ParticleSystemComponent: e
        }), e;
      }((Kh = e("cc.ParticleSystem"), Yh = m(), qh = y(), Qh = yt(99), Zh = q(), Jh = v(), $h = i(Wi), tc = q(), ec = v(), ic = i(Br), rc = q(), ac = v(), nc = q(), oc = v(), sc = nt("startSize"), lc = Q(), uc = i(Fe), hc = q(), cc = v(), _c = i(Fe), pc = Q(), dc = q(), fc = v(), mc = i(Fe), yc = Q(), vc = q(), bc = v(), gc = i(Fe), Mc = Q(), wc = q(), Sc = v(), Tc = q(), Oc = v(), xc = i(Fe), zc = Q(), Rc = q(), Ec = v(), Cc = i(Fe), Ac = Q(), Dc = q(), Fc = v(), Ic = i(Fe), Pc = nt("startRotation"), Lc = Q(), Bc = q(), Uc = v(), Vc = i(Fe), kc = Q(), Nc = q(), Gc = v(), Hc = i(Fe), Wc = Q(), jc = q(), Xc = v(), Kc = q(), Yc = v(), qc = q(), Qc = v(), Zc = q(), Jc = v(), $c = i(Br), t_ = q(), e_ = v(), i_ = q(), r_ = v(), a_ = q(), n_ = v(), o_ = i(Fe), s_ = Q(), l_ = q(), u_ = v(), h_ = i(Fe), c_ = Q(), __ = q(), p_ = v(), d_ = i(Fe), f_ = Q(), m_ = q(), y_ = v(), v_ = i([jl]), b_ = q(), g_ = v(), M_ = lt(), w_ = i(_), S_ = vt(), T_ = i(Wr), O_ = i(Wr), x_ = q(), z_ = v(), R_ = i(ql), E_ = i(ql), C_ = q(), A_ = v(), D_ = i(Bl), F_ = i(Bl), I_ = q(), P_ = v(), L_ = i(Wl), B_ = i(Wl), U_ = q(), V_ = v(), k_ = i(ln), N_ = i(ln), G_ = q(), H_ = v(), W_ = i(_n), j_ = i(_n), X_ = q(), K_ = v(), Y_ = i(Ll), q_ = i(Ll), Q_ = q(), Z_ = v(), J_ = i(Nl), $_ = i(Nl), tp = q(), ep = v(), ip = i(ad), rp = i(ad), ap = q(), np = v(), op = i(qp), sp = q(), lp = v(), up = q(), hp = v(), Kh(cp = Yh(cp = qh(cp = Qh(cp = a((Yp = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, b(e, "startColor", pp, g(e)), b(e, "scaleSpace", dp, g(e)), b(e, "startSize3D", fp, g(e)), b(e, "startSizeX", mp, g(e)), b(e, "startSizeY", yp, g(e)), b(e, "startSizeZ", vp, g(e)), b(e, "startSpeed", bp, g(e)), b(e, "startRotation3D", gp, g(e)), b(e, "startRotationX", Mp, g(e)), b(e, "startRotationY", wp, g(e)), b(e, "startRotationZ", Sp, g(e)), b(e, "startDelay", Tp, g(e)), b(e, "startLifetime", Op, g(e)), b(e, "duration", xp, g(e)), b(e, "loop", zp, g(e)), b(e, "simulationSpeed", Rp, g(e)), b(e, "playOnAwake", Ep, g(e)), b(e, "gravityModifier", Cp, g(e)), b(e, "rateOverTime", Ap, g(e)), b(e, "rateOverDistance", Dp, g(e)), b(e, "bursts", Fp, g(e)), b(e, "_colorOverLifetimeModule", Ip, g(e)), b(e, "_shapeModule", Pp, g(e)), b(e, "_sizeOvertimeModule", Lp, g(e)), b(e, "_velocityOvertimeModule", Bp, g(e)), b(e, "_forceOvertimeModule", Up, g(e)), b(e, "_limitVelocityOvertimeModule", Vp, g(e)), b(e, "_rotationOvertimeModule", kp, g(e)), b(e, "_textureAnimationModule", Np, g(e)), b(e, "_trailModule", Gp, g(e)), b(e, "renderer", Hp, g(e)), b(e, "enableCulling", Wp, g(e)), e._isPlaying = void 0, e._isPaused = void 0, e._isStopped = void 0, e._isEmitting = void 0, e._needRefresh = void 0, e._time = void 0, e._emitRateTimeCounter = void 0, e._emitRateDistanceCounter = void 0, e._oldWPos = void 0, e._curWPos = void 0, e._customData1 = void 0, e._customData2 = void 0, e._subEmitters = void 0, b(e, "_prewarm", jp, g(e)), b(e, "_capacity", Xp, g(e)), b(e, "_simulationSpace", Kp, g(e)), e.processor = null, e.rateOverTime.constant = 10, e.startLifetime.constant = 5, e.startSizeX.constant = 1, e.startSpeed.constant = 5, e._isPlaying = !1, e._isPaused = !1, e._isStopped = !0, e._isEmitting = !1, e._needRefresh = !0, e._time = 0, e._emitRateTimeCounter = 0, e._emitRateDistanceCounter = 0, e._oldWPos = new x(), e._curWPos = new x(), e._customData1 = new Y(), e._customData2 = new Y(), e._subEmitters = [], e;
        }

        n(e, t);
        var i = e.prototype;
        return i.onFocusInEditor = function () {
          this.renderer.create(this);
        }, i.onLoad = function () {
          this.renderer.onInit(this), this._shapeModule && this._shapeModule.onInit(this), this._trailModule && this._trailModule.onInit(this), this.bindModule(), this._resetPosition();
        }, i._onMaterialModified = function (t, e) {
          null !== this.processor && this.processor.onMaterialModified(t, e);
        }, i._onRebuildPSO = function (t, e) {
          this.processor.onRebuildPSO(t, e);
        }, i._collectModels = function () {
          return this._models.length = 0, this._models.push(this.processor._model), this._trailModule && this._trailModule.enable && this._trailModule._trailModel && this._models.push(this._trailModule._trailModel), this._models;
        }, i._attachToScene = function () {
          this.processor.attachToScene(), this._trailModule && this._trailModule.enable && this._trailModule._attachToScene();
        }, i._detachFromScene = function () {
          this.processor.detachFromScene(), this._trailModule && this._trailModule.enable && this._trailModule._detachFromScene();
        }, i.bindModule = function () {
          this._colorOverLifetimeModule && this._colorOverLifetimeModule.bindTarget(this.processor), this._sizeOvertimeModule && this._sizeOvertimeModule.bindTarget(this.processor), this._rotationOvertimeModule && this._rotationOvertimeModule.bindTarget(this.processor), this._forceOvertimeModule && this._forceOvertimeModule.bindTarget(this.processor), this._limitVelocityOvertimeModule && this._limitVelocityOvertimeModule.bindTarget(this.processor), this._velocityOvertimeModule && this._velocityOvertimeModule.bindTarget(this.processor), this._textureAnimationModule && this._textureAnimationModule.bindTarget(this.processor);
        }, i.play = function () {
          this._isPaused && (this._isPaused = !1), this._isStopped && (this._isStopped = !1), this._isPlaying = !0, this._isEmitting = !0, this._resetPosition(), this._prewarm && this._prewarmSystem(), this._trailModule && this._trailModule.play();
        }, i.pause = function () {
          this._isStopped ? console.warn("pause(): particle system is already stopped.") : (this._isPlaying && (this._isPlaying = !1), this._isPaused = !0);
        }, i.stop = function () {
          (this._isPlaying || this._isPaused) && this.clear(), this._isPlaying && (this._isPlaying = !1), this._isPaused && (this._isPaused = !1), this._time = 0, this._emitRateTimeCounter = 0, this._emitRateDistanceCounter = 0, this._isStopped = !0, this._needRefresh = !0;
        }, i.clear = function () {
          this.enabledInHierarchy && (this.processor.clear(), this._trailModule && this._trailModule.clear());
        }, i.getParticleCount = function () {
          return this.processor.getParticleCount();
        }, i.setCustomData1 = function (t, e) {
          Y.set(this._customData1, t, e);
        }, i.setCustomData2 = function (t, e) {
          Y.set(this._customData2, t, e);
        }, i.onDestroy = function () {
          c.director.off(c.Director.EVENT_BEFORE_COMMIT, this.beforeRender, this), this.processor.onDestroy(), this._trailModule && this._trailModule.destroy();
        }, i.onEnable = function () {
          c.director.on(c.Director.EVENT_BEFORE_COMMIT, this.beforeRender, this), this.playOnAwake && this.play(), this.processor.onEnable(), this._trailModule && this._trailModule.onEnable();
        }, i.onDisable = function () {
          c.director.off(c.Director.EVENT_BEFORE_COMMIT, this.beforeRender, this), this.processor.onDisable(), this._trailModule && this._trailModule.onDisable();
        }, i.update = function (t) {
          var e = t * this.simulationSpeed;
          this._isPlaying && (this._time += e, this._emit(e), 0 !== this.processor.updateParticles(e) || this._isEmitting || this.stop()), this.processor.updateRenderData(), this._trailModule && this._trailModule.enable && this._trailModule.updateRenderData();
        }, i.beforeRender = function () {
          this._isPlaying && (this.processor.beforeRender(), this._trailModule && this._trailModule.enable && this._trailModule.beforeRender());
        }, i._onVisibilityChange = function (t) {
          this.processor._model && (this.processor._model.visFlags = t);
        }, i._processRotation = function (t) {
          var e = this.processor.getInfo().renderMode;
          e !== Ur.Mesh && (e === Ur.StrecthedBillboard ? t.startEuler.set(0, 0, 0) : e !== Ur.Billboard && t.startEuler.set(0, 0, t.startEuler.z)), Z.fromEuler(t.startRotation, t.startEuler.x * qi.R2D, t.startEuler.y * qi.R2D, t.startEuler.z * qi.R2D), t.startRotation = Z.normalize(t.startRotation, t.startRotation), t.startRotation.w < 0 && (t.startRotation.x += qi.INDENTIFY_NEG_QUAT);
        }, i.emit = function (t, e) {
          var i = this._time % this.duration / this.duration;
          this._needRefresh && (this.node.invalidateChildren(dt.POSITION), this._needRefresh = !1), this._simulationSpace === Br.World && (this.node.getWorldMatrix(nd), this.node.getWorldRotation(od));

          for (var r = 0; r < t; ++r) {
            var a = this.processor.getFreeParticle();
            if (null === a) return;
            a.particleSystem = this, a.reset();
            var n = $(it(0, ft));
            this._shapeModule && this._shapeModule.enable ? this._shapeModule.emit(a) : (x.set(a.position, 0, 0, 0), x.copy(a.velocity, jr)), this._textureAnimationModule && this._textureAnimationModule.enable && this._textureAnimationModule.init(a);
            var o = this.startSpeed.evaluate(i, n);
            x.multiplyScalar(a.velocity, a.velocity, o), this._simulationSpace === Br.World && (x.transformMat4(a.position, a.position, nd), x.transformQuat(a.velocity, a.velocity, od)), x.copy(a.ultimateVelocity, a.velocity), this.startRotation3D ? a.startEuler.set(this.startRotationX.evaluate(i, n), this.startRotationY.evaluate(i, n), this.startRotationZ.evaluate(i, n)) : a.startEuler.set(0, 0, this.startRotationZ.evaluate(i, n)), this._processRotation(a), x.set(a.rotation, a.startRotation.x, a.startRotation.y, a.startRotation.z), this.startSize3D ? x.set(a.startSize, this.startSizeX.evaluate(i, n), this.startSizeY.evaluate(i, n), this.startSizeZ.evaluate(i, n)) : (x.set(a.startSize, this.startSizeX.evaluate(i, n), 1, 1), a.startSize.y = a.startSize.x), x.copy(a.size, a.startSize), a.startColor.set(this.startColor.evaluate(i, n)), a.color.set(a.startColor), a.startLifetime = this.startLifetime.evaluate(i, n) + e, a.remainingLifetime = a.startLifetime, a.randomSeed = it(0, 233280), a.loopCount++, this.processor.setNewParticle(a);
          }
        }, i._prewarmSystem = function () {
          this.startDelay.mode = De.Constant, this.startDelay.constant = 0;

          for (var t = this.duration / 1, e = 0; e < t; ++e) {
            this._time += 1, this._emit(1), this.processor.updateParticles(1);
          }
        }, i._emit = function (t) {
          var e = this.startDelay.evaluate(0, 1);

          if (this._time > e) {
            if (this._time > this.duration + e && !this.loop) return void (this._isEmitting = !1);

            if (this._emitRateTimeCounter += this.rateOverTime.evaluate(this._time / this.duration, 1) * t, this._emitRateTimeCounter > 1 && this._isEmitting) {
              var i = Math.floor(this._emitRateTimeCounter);
              this._emitRateTimeCounter -= i, this.emit(i, t);
            }

            this.node.getWorldPosition(this._curWPos);
            var r = x.distance(this._curWPos, this._oldWPos);

            if (x.copy(this._oldWPos, this._curWPos), this._emitRateDistanceCounter += r * this.rateOverDistance.evaluate(this._time / this.duration, 1), this._emitRateDistanceCounter > 1 && this._isEmitting) {
              var a = Math.floor(this._emitRateDistanceCounter);
              this._emitRateDistanceCounter -= a, this.emit(a, t);
            }

            for (var n, o = z(this.bursts); !(n = o()).done;) {
              n.value.update(this, t);
            }
          }
        }, i._resetPosition = function () {
          this.node.getWorldPosition(this._oldWPos), x.copy(this._curWPos, this._oldWPos);
        }, i.addSubEmitter = function (t) {
          this._subEmitters.push(t);
        }, i.removeSubEmitter = function (t) {
          this._subEmitters.splice(this._subEmitters.indexOf(t), 1);
        }, i.addBurst = function (t) {
          this.bursts.push(t);
        }, i.removeBurst = function (t) {
          this.bursts.splice(this.bursts.indexOf(t), 1);
        }, i._onBeforeSerialize = function (t) {
          var e = this;
          return this.enableCulling ? t.filter(function (t) {
            return !Pr.includes(t) || e[t] && e[t].enable;
          }) : t;
        }, d(e, [{
          key: "capacity",
          get: function get() {
            return this._capacity;
          },
          set: function set(t) {
            this._capacity = Math.floor(t), this.processor && this.processor._model && this.processor._model.setCapacity(this._capacity);
          }
        }, {
          key: "prewarm",
          get: function get() {
            return this._prewarm;
          },
          set: function set(t) {
            !0 === t && this.loop, this._prewarm = t;
          }
        }, {
          key: "simulationSpace",
          get: function get() {
            return this._simulationSpace;
          },
          set: function set(t) {
            t !== this._simulationSpace && (this._simulationSpace = t, this.processor && (this.processor.updateMaterialParams(), this.processor.updateTrailMaterial()));
          }
        }, {
          key: "sharedMaterials",
          get: function get() {
            return sd.get.call(this);
          },
          set: function set(t) {
            sd.set.call(this, t);
          }
        }, {
          key: "colorOverLifetimeModule",
          get: function get() {
            return this._colorOverLifetimeModule;
          },
          set: function set(t) {
            t && (this._colorOverLifetimeModule = t);
          }
        }, {
          key: "shapeModule",
          get: function get() {
            return this._shapeModule;
          },
          set: function set(t) {
            t && (this._shapeModule = t);
          }
        }, {
          key: "sizeOvertimeModule",
          get: function get() {
            return this._sizeOvertimeModule;
          },
          set: function set(t) {
            t && (this._sizeOvertimeModule = t);
          }
        }, {
          key: "velocityOvertimeModule",
          get: function get() {
            return this._velocityOvertimeModule;
          },
          set: function set(t) {
            t && (this._velocityOvertimeModule = t);
          }
        }, {
          key: "forceOvertimeModule",
          get: function get() {
            return this._forceOvertimeModule;
          },
          set: function set(t) {
            t && (this._forceOvertimeModule = t);
          }
        }, {
          key: "limitVelocityOvertimeModule",
          get: function get() {
            return this._limitVelocityOvertimeModule;
          },
          set: function set(t) {
            t && (this._limitVelocityOvertimeModule = t);
          }
        }, {
          key: "rotationOvertimeModule",
          get: function get() {
            return this._rotationOvertimeModule;
          },
          set: function set(t) {
            t && (this._rotationOvertimeModule = t);
          }
        }, {
          key: "textureAnimationModule",
          get: function get() {
            return this._textureAnimationModule;
          },
          set: function set(t) {
            t && (this._textureAnimationModule = t);
          }
        }, {
          key: "trailModule",
          get: function get() {
            return this._trailModule;
          },
          set: function set(t) {
            t && (this._trailModule = t);
          }
        }, {
          key: "isPlaying",
          get: function get() {
            return this._isPlaying;
          }
        }, {
          key: "isPaused",
          get: function get() {
            return this._isPaused;
          }
        }, {
          key: "isStopped",
          get: function get() {
            return this._isStopped;
          }
        }, {
          key: "isEmitting",
          get: function get() {
            return this._isEmitting;
          }
        }, {
          key: "time",
          get: function get() {
            return this._time;
          }
        }]), e;
      }(Rt), f((_p = Yp).prototype, "capacity", [Zh, Jh], Object.getOwnPropertyDescriptor(_p.prototype, "capacity"), _p.prototype), pp = f(_p.prototype, "startColor", [$h, O, tc, ec], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Wi();
        }
      }), dp = f(_p.prototype, "scaleSpace", [ic, O, rc, ac], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Br.Local;
        }
      }), fp = f(_p.prototype, "startSize3D", [O, nc, oc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), mp = f(_p.prototype, "startSizeX", [sc, lc, uc, hc, cc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), yp = f(_p.prototype, "startSizeY", [_c, O, pc, dc, fc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), vp = f(_p.prototype, "startSizeZ", [mc, O, yc, vc, bc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), bp = f(_p.prototype, "startSpeed", [gc, O, Mc, wc, Sc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), gp = f(_p.prototype, "startRotation3D", [O, Tc, Oc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Mp = f(_p.prototype, "startRotationX", [xc, O, zc, at, Rc, Ec], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), wp = f(_p.prototype, "startRotationY", [Cc, O, Ac, at, Dc, Fc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Sp = f(_p.prototype, "startRotationZ", [Ic, Pc, Lc, at, Bc, Uc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Tp = f(_p.prototype, "startDelay", [Vc, O, kc, Nc, Gc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Op = f(_p.prototype, "startLifetime", [Hc, O, Wc, jc, Xc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), xp = f(_p.prototype, "duration", [O, Kc, Yc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 5;
        }
      }), zp = f(_p.prototype, "loop", [O, qc, Qc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), f(_p.prototype, "prewarm", [Zc, Jc], Object.getOwnPropertyDescriptor(_p.prototype, "prewarm"), _p.prototype), f(_p.prototype, "simulationSpace", [$c, O, t_, e_], Object.getOwnPropertyDescriptor(_p.prototype, "simulationSpace"), _p.prototype), Rp = f(_p.prototype, "simulationSpeed", [O, i_, r_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Ep = f(_p.prototype, "playOnAwake", [O, a_, n_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Cp = f(_p.prototype, "gravityModifier", [o_, O, s_, l_, u_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Ap = f(_p.prototype, "rateOverTime", [h_, O, c_, __, p_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Dp = f(_p.prototype, "rateOverDistance", [d_, O, f_, m_, y_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new Fe();
        }
      }), Fp = f(_p.prototype, "bursts", [v_, O, b_, g_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), f(_p.prototype, "sharedMaterials", [mt, M_, w_, O, S_], Object.getOwnPropertyDescriptor(_p.prototype, "sharedMaterials"), _p.prototype), Ip = f(_p.prototype, "_colorOverLifetimeModule", [T_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "colorOverLifetimeModule", [O_, x_, z_], Object.getOwnPropertyDescriptor(_p.prototype, "colorOverLifetimeModule"), _p.prototype), Pp = f(_p.prototype, "_shapeModule", [R_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "shapeModule", [E_, C_, A_], Object.getOwnPropertyDescriptor(_p.prototype, "shapeModule"), _p.prototype), Lp = f(_p.prototype, "_sizeOvertimeModule", [D_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "sizeOvertimeModule", [F_, I_, P_], Object.getOwnPropertyDescriptor(_p.prototype, "sizeOvertimeModule"), _p.prototype), Bp = f(_p.prototype, "_velocityOvertimeModule", [L_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "velocityOvertimeModule", [B_, U_, V_], Object.getOwnPropertyDescriptor(_p.prototype, "velocityOvertimeModule"), _p.prototype), Up = f(_p.prototype, "_forceOvertimeModule", [k_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "forceOvertimeModule", [N_, G_, H_], Object.getOwnPropertyDescriptor(_p.prototype, "forceOvertimeModule"), _p.prototype), Vp = f(_p.prototype, "_limitVelocityOvertimeModule", [W_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "limitVelocityOvertimeModule", [j_, X_, K_], Object.getOwnPropertyDescriptor(_p.prototype, "limitVelocityOvertimeModule"), _p.prototype), kp = f(_p.prototype, "_rotationOvertimeModule", [Y_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "rotationOvertimeModule", [q_, Q_, Z_], Object.getOwnPropertyDescriptor(_p.prototype, "rotationOvertimeModule"), _p.prototype), Np = f(_p.prototype, "_textureAnimationModule", [J_], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "textureAnimationModule", [$_, tp, ep], Object.getOwnPropertyDescriptor(_p.prototype, "textureAnimationModule"), _p.prototype), Gp = f(_p.prototype, "_trailModule", [ip], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), f(_p.prototype, "trailModule", [rp, ap, np], Object.getOwnPropertyDescriptor(_p.prototype, "trailModule"), _p.prototype), Hp = f(_p.prototype, "renderer", [op, O, sp, lp], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new qp();
        }
      }), Wp = f(_p.prototype, "enableCulling", [O, up, hp], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), jp = f(_p.prototype, "_prewarm", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Xp = f(_p.prototype, "_capacity", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 100;
        }
      }), Kp = f(_p.prototype, "_simulationSpace", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Br.Local;
        }
      }), cp = _p)) || cp) || cp) || cp) || cp) || cp)),
          ud = t("ParticleUtils", function () {
        function t() {}

        return t.instantiate = function (t) {
          return this.registeredSceneEvent || (St.on(Tt.EVENT_BEFORE_SCENE_LAUNCH, this.onSceneUnload, this), this.registeredSceneEvent = !0), this.particleSystemPool.has(t._uuid) || this.particleSystemPool.set(t._uuid, new pt(function () {
            return bt(t) || new gt();
          }, 1)), this.particleSystemPool.get(t._uuid).alloc();
        }, t.destroy = function (t) {
          this.particleSystemPool.has(t._prefab.asset._uuid) && (this.stop(t), this.particleSystemPool.get(t._prefab.asset._uuid).free(t));
        }, t.play = function (t) {
          for (var e, i = z(t.getComponentsInChildren(ld)); !(e = i()).done;) {
            e.value.play();
          }
        }, t.stop = function (t) {
          for (var e, i = z(t.getComponentsInChildren(ld)); !(e = i()).done;) {
            e.value.stop();
          }
        }, t.onSceneUnload = function () {
          this.particleSystemPool.forEach(function (t) {
            t.destroy(function (t) {
              t.destroy();
            });
          }), this.particleSystemPool.clear();
        }, t;
      }());

      ud.particleSystemPool = new Map(), ud.registeredSceneEvent = !1, Mt(jl.prototype, "Burst.prototype", [{
        name: "minCount"
      }, {
        name: "maxCount"
      }]), c.ParticleSystemComponent = ld, wt.setClassAlias(ld, "cc.ParticleSystemComponent"), c.BillboardComponent = xe, wt.setClassAlias(xe, "cc.BillboardComponent"), c.LineComponent = Yi, wt.setClassAlias(Yi, "cc.LineComponent"), c.ParticleUtils = ud;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/primitive.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./create-mesh-9aab53f1.js", "./mesh-c8768986.js", "./capsule-1280d817.js"], function (i) {
  "use strict";

  var n, o, t, r, e, s, a, u, v, c, f, h, m, p, d, l, P, M, g;
  return {
    setters: [function (i) {
      n = i.a3, o = i.c5, t = i.cK, r = i.ef, e = i.ek, s = i.ec, a = i.eg, u = i.l, v = i.eh, c = i.ed, f = i.ei, h = i.eu;
    }, function (i) {
      m = i.c;
    }, function (i) {
      p = i.M;
    }, function (i) {
      d = i.c, l = i.a, P = i.b, M = i.p, g = i.d;
    }],
    execute: function execute() {
      var x,
          y,
          b,
          E,
          I,
          L,
          R,
          z,
          A,
          w = Object.freeze({
        __proto__: null,
        box: P,
        cone: function cone(i, n, o) {
          return void 0 === i && (i = .5), void 0 === n && (n = 1), void 0 === o && (o = {}), d(0, i, n, o);
        },
        cylinder: d,
        plane: M,
        quad: function quad(i) {
          var n = l(i),
              o = {
            positions: [-.5, -.5, 0, -.5, .5, 0, .5, .5, 0, .5, -.5, 0],
            indices: [0, 3, 1, 3, 2, 1],
            minPos: {
              x: -.5,
              y: -.5,
              z: 0
            },
            maxPos: {
              x: .5,
              y: .5,
              z: 0
            },
            boundingRadius: Math.sqrt(.5)
          };
          return !1 !== n.includeNormal && (o.normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]), !1 !== n.includeUV && (o.uvs = [0, 0, 0, 1, 1, 1, 1, 0]), o;
        },
        sphere: function sphere(i, n) {
          void 0 === i && (i = .5), void 0 === n && (n = {});

          for (var t = void 0 !== n.segments ? n.segments : 32, r = [], e = [], s = [], a = [], u = new o(-i, -i, -i), v = new o(i, i, i), c = i, f = 0; f <= t; ++f) {
            for (var h = f * Math.PI / t, m = Math.sin(h), p = -Math.cos(h), d = 0; d <= t; ++d) {
              var l = 2 * d * Math.PI / t - Math.PI / 2,
                  P = Math.sin(l) * m,
                  M = p,
                  g = Math.cos(l) * m,
                  x = d / t,
                  y = f / t;

              if (r.push(P * i, M * i, g * i), e.push(P, M, g), s.push(x, y), f < t && d < t) {
                var b = t + 1,
                    E = b * f + d,
                    I = b * (f + 1) + d,
                    L = b * (f + 1) + d + 1,
                    R = b * f + d + 1;
                a.push(E, R, I), a.push(R, L, I);
              }
            }
          }

          return {
            positions: r,
            indices: a,
            normals: e,
            uvs: s,
            minPos: u,
            maxPos: v,
            boundingRadius: c
          };
        },
        torus: function torus(i, n, t) {
          void 0 === i && (i = .4), void 0 === n && (n = .1), void 0 === t && (t = {});

          for (var r = t.radialSegments || 32, e = t.tubularSegments || 32, s = t.arc || 2 * Math.PI, a = [], u = [], v = [], c = [], f = new o(-i - n, -n, -i - n), h = new o(i + n, n, i + n), m = i + n, p = 0; p <= r; p++) {
            for (var d = 0; d <= e; d++) {
              var l = d / e,
                  P = p / r,
                  M = l * s,
                  g = P * Math.PI * 2,
                  x = (i + n * Math.cos(g)) * Math.sin(M),
                  y = n * Math.sin(g),
                  b = (i + n * Math.cos(g)) * Math.cos(M),
                  E = Math.sin(M) * Math.cos(g),
                  I = Math.sin(g),
                  L = Math.cos(M) * Math.cos(g);

              if (a.push(x, y, b), u.push(E, I, L), v.push(l, P), d < e && p < r) {
                var R = e + 1,
                    z = R * p + d,
                    A = R * (p + 1) + d,
                    w = R * (p + 1) + d + 1,
                    N = R * p + d + 1;
                c.push(z, N, A), c.push(N, w, A);
              }
            }
          }

          return {
            positions: a,
            normals: u,
            uvs: v,
            indices: c,
            minPos: f,
            maxPos: h,
            boundingRadius: m
          };
        },
        capsule: g,
        circle: function circle(i) {
          var o = function (i) {
            return (i = l(i)).segments = 64, i;
          }(i).segments,
              t = new Array(3 * (o + 1));

          t[0] = 0, t[1] = 0, t[2] = 0;
          var r = new Array(1 + 2 * o);
          r[0] = 0;

          for (var e = 2 * Math.PI / o, s = 0; s < o; ++s) {
            var a = e * s,
                u = Math.cos(a),
                v = Math.sin(a),
                c = 3 * (s + 1);
            t[c + 0] = u, t[c + 1] = v, t[c + 2] = 0;
            var f = 2 * s;
            r[1 + f] = s + 1, r[1 + (f + 1)] = s + 2;
          }

          return o > 0 && (r[r.length - 1] = 1), {
            positions: t,
            indices: r,
            minPos: {
              x: 1,
              y: 1,
              z: 0
            },
            maxPos: {
              x: -1,
              y: -1,
              z: 0
            },
            boundingRadius: 1,
            primitiveMode: n.TRIANGLE_FAN
          };
        },
        translate: function translate(i, n) {
          for (var o = n.x || 0, t = n.y || 0, r = n.z || 0, e = Math.floor(i.positions.length / 3), s = 0; s < e; ++s) {
            var a = 3 * s,
                u = 3 * s + 1,
                v = 3 * s + 2;
            i.positions[a] += o, i.positions[u] += t, i.positions[v] += r;
          }

          return i.minPos && (i.minPos.x += o, i.minPos.y += t, i.minPos.z += r), i.maxPos && (i.maxPos.x += o, i.maxPos.y += t, i.maxPos.z += r), i;
        },
        scale: function scale(i, n) {
          for (var o = n.x || 0, t = n.y || 0, r = n.z || 0, e = Math.floor(i.positions.length / 3), s = 0; s < e; ++s) {
            var a = 3 * s,
                u = 3 * s + 1,
                v = 3 * s + 2;
            i.positions[a] *= o, i.positions[u] *= t, i.positions[v] *= r;
          }

          return i.minPos && (i.minPos.x *= o, i.minPos.y *= t, i.minPos.z *= r), i.maxPos && (i.maxPos.x *= o, i.maxPos.y *= t, i.maxPos.z *= r), i.boundingRadius = Math.max(Math.max(o, t), r), i;
        },
        wireframed: function wireframed(i) {
          var o = i.indices;
          if (!o) return i;
          if (i.primitiveMode && i.primitiveMode !== n.TRIANGLE_LIST) return i;

          for (var t = [[0, 1], [1, 2], [2, 0]], r = [], e = {}, s = 0; s < o.length; s += 3) {
            for (var a = 0; a < 3; ++a) {
              var u = o[s + t[a][0]],
                  v = o[s + t[a][1]],
                  c = u > v ? v << 16 | u : u << 16 | v;
              void 0 === e[c] && (e[c] = 0, r.push(u, v));
            }
          }

          return i.indices = r, i.primitiveMode = n.LINE_LIST, i;
        },
        wireframe: function wireframe(i) {
          for (var n = [[0, 1], [1, 2], [2, 0]], o = [], t = {}, r = 0; r < i.length; r += 3) {
            for (var e = 0; e < 3; ++e) {
              var s = i[r + n[e][0]],
                  a = i[r + n[e][1]],
                  u = s > a ? a << 16 | s : s << 16 | a;
              void 0 === t[u] && (t[u] = 0, o.push(s, a));
            }
          }

          return o;
        },
        invWinding: function invWinding(i) {
          for (var n = [], o = 0; o < i.length; o += 3) {
            n.push(i[o], i[o + 2], i[o + 1]);
          }

          return n;
        },
        toWavefrontOBJ: function toWavefrontOBJ(i, o) {
          if (void 0 === o && (o = 1), !i.indices || !i.uvs || !i.normals || void 0 !== i.primitiveMode && i.primitiveMode !== n.TRIANGLE_LIST) return "";

          for (var t = i.positions, r = i.uvs, e = i.normals, s = i.indices, a = function a(i) {
            return s[i] + 1 + "/" + (s[i] + 1) + "/" + (s[i] + 1);
          }, u = "", v = 0; v < t.length; v += 3) {
            u += "v " + t[v] * o + " " + t[v + 1] * o + " " + t[v + 2] * o + "\n";
          }

          for (var c = 0; c < r.length; c += 2) {
            u += "vt " + r[c] + " " + r[c + 1] + "\n";
          }

          for (var f = 0; f < e.length; f += 3) {
            u += "vn " + e[f] + " " + e[f + 1] + " " + e[f + 2] + "\n";
          }

          for (var h = 0; h < s.length; h += 3) {
            u += "f " + a(h) + " " + a(h + 1) + " " + a(h + 2) + "\n";
          }

          return u;
        },
        normals: function normals(i, n, o) {
          void 0 === o && (o = 1);

          for (var t = new Array(2 * i.length), r = 0; r < i.length / 3; ++r) {
            var e = 3 * r,
                s = 6 * r;
            t[s + 0] = i[e + 0], t[s + 1] = i[e + 1], t[s + 2] = i[e + 2], t[s + 3] = i[e + 0] + n[e + 0] * o, t[s + 4] = i[e + 1] + n[e + 1] * o, t[s + 5] = i[e + 2] + n[e + 2] * o;
          }

          return t;
        },
        applyDefaultGeometryOptions: l
      });
      i("primitives", w), function (i) {
        i[i.BOX = 0] = "BOX", i[i.SPHERE = 1] = "SPHERE", i[i.CYLINDER = 2] = "CYLINDER", i[i.CONE = 3] = "CONE", i[i.CAPSULE = 4] = "CAPSULE", i[i.TORUS = 5] = "TORUS", i[i.PLANE = 6] = "PLANE", i[i.QUAD = 7] = "QUAD";
      }(A || (A = {})), t(A);
      var N = i("Primitive", (x = r("cc.Primitive"), y = e(A), x((z = R = function (i) {
        function n(n) {
          var o;
          return void 0 === n && (n = A.BOX), o = i.call(this) || this, v(o, "type", I, c(o)), v(o, "info", L, c(o)), o.type = n, o;
        }

        return s(n, i), n.prototype.onLoaded = function () {
          m(w[A[this.type].toLowerCase()](this.info), this);
        }, n;
      }(p), R.PrimitiveType = A, I = a((E = z).prototype, "type", [y], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return A.BOX;
        }
      }), L = a(E.prototype, "info", [f, h], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return {};
        }
      }), b = E)) || b));
      u.Primitive = N, u.primitives = w;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/profiler.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./create-mesh-9aab53f1.js", "./mesh-c8768986.js", "./mesh-renderer-86d175c0.js"], function (t) {
  "use strict";

  var e, s, i, a, r, h, o, n, c, _, u, f, d, l, v, m, g;

  return {
    setters: [function (t) {
      e = t.e2, s = t.ef, i = t.ec, a = t.l, r = t.av, h = t.H, o = t.I, n = t.x, c = t.dH, _ = t.dJ, u = t.ac, f = t.dr, d = t.e0, l = t.am;
    }, function () {}, function () {}, function (t) {
      v = t.C;
    }, function () {}, function (t) {
      m = t.c;
    }, function () {}, function (t) {
      g = t.M;
    }],
    execute: function execute() {
      var p,
          E = function () {
        function t(t, e, s) {
          this._id = void 0, this._opts = void 0, this._accumStart = void 0, this._total = 0, this._value = 0, this._averageValue = 0, this._accumValue = 0, this._accumSamples = 0, this._id = t, this._opts = e, this._accumStart = s;
        }

        var s = t.prototype;
        return s.sample = function (t) {
          this._average(this._value, t);
        }, s.human = function () {
          var t = this._opts,
              e = t.average,
              s = t.isInteger,
              i = e ? this._averageValue : this._value;
          return s ? Math.round(i) : Math.round(100 * i) / 100;
        }, s.alarm = function () {
          return this._opts.below && this._value < this._opts.below || this._opts.over && this._value > this._opts.over;
        }, s._average = function (t, e) {
          if (void 0 === e && (e = 0), this._opts.average) {
            this._accumValue += t, ++this._accumSamples;
            var s = e;
            s - this._accumStart >= this._opts.average && (this._averageValue = this._accumValue / this._accumSamples, this._accumValue = 0, this._accumStart = s, this._accumSamples = 0);
          }
        }, e(t, [{
          key: "value",
          get: function get() {
            return this._value;
          },
          set: function set(t) {
            this._value = t;
          }
        }]), t;
      }(),
          w = s("cc.PerfCounter")(p = function (t) {
        function e(e, s, i) {
          var a;
          return (a = t.call(this, e, s, i) || this)._time = void 0, a._time = i, a;
        }

        i(e, t);
        var s = e.prototype;
        return s.start = function (t) {
          void 0 === t && (t = 0), this._time = t;
        }, s.end = function (t) {
          void 0 === t && (t = 0), this._value = t - this._time, this._average(this._value);
        }, s.tick = function () {
          this.end(), this.start();
        }, s.frame = function (t) {
          var e = t,
              s = e - this._time;
          this._total++, s > (this._opts.average || 1e3) && (this._value = 1e3 * this._total / s, this._total = 0, this._time = e, this._average(this._value));
        }, e;
      }(E)) || p,
          D = "0123456789. ",
          T = 500,
          N = {
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        ".": 10
      },
          S = {
        fps: {
          desc: "Framerate (FPS)",
          below: 30,
          average: T,
          isInteger: !0
        },
        draws: {
          desc: "Draw call",
          isInteger: !0
        },
        frame: {
          desc: "Frame time (ms)",
          min: 0,
          max: 50,
          average: T
        },
        instances: {
          desc: "Instance Count",
          isInteger: !0
        },
        tricount: {
          desc: "Triangle",
          isInteger: !0
        },
        logic: {
          desc: "Game Logic (ms)",
          min: 0,
          max: 50,
          average: T,
          color: "#080"
        },
        physics: {
          desc: "Physics (ms)",
          min: 0,
          max: 50,
          average: T
        },
        render: {
          desc: "Renderer (ms)",
          min: 0,
          max: 50,
          average: T,
          color: "#f90"
        },
        textureMemory: {
          desc: "GFX Texture Mem(M)"
        },
        bufferMemory: {
          desc: "GFX Buffer Mem(M)"
        }
      },
          x = t("Profiler", function () {
        function t() {
          this._stats = null, this.id = "__Profiler__", this._showFPS = !1, this._rootNode = null, this._device = null, this._canvas = null, this._ctx = null, this._texture = null, this._region = new l(), this._canvasArr = [], this._regionArr = [this._region], this.digitsData = null, this.offsetData = null, this.pass = null, this._canvasDone = !1, this._statsDone = !1, this._inited = !1, this._lineHeight = 256 / (Object.keys(S).length + 1), this._wordHeight = 0, this._eachNumWidth = 0, this._totalLines = 0, this.lastTime = 0, this._canvas = document.createElement("canvas"), this._ctx = this._canvas.getContext("2d"), this._canvasArr.push(this._canvas);
        }

        var e = t.prototype;
        return e.isShowingStats = function () {
          return this._showFPS;
        }, e.hideStats = function () {
          this._showFPS && (this._rootNode && (this._rootNode.active = !1), a.game.off(a.Game.EVENT_RESTART, this.generateNode, this), a.director.off(a.Director.EVENT_BEFORE_UPDATE, this.beforeUpdate, this), a.director.off(a.Director.EVENT_AFTER_UPDATE, this.afterUpdate, this), a.director.off(a.Director.EVENT_BEFORE_PHYSICS, this.beforePhysics, this), a.director.off(a.Director.EVENT_AFTER_PHYSICS, this.afterPhysics, this), a.director.off(a.Director.EVENT_BEFORE_DRAW, this.beforeDraw, this), a.director.off(a.Director.EVENT_AFTER_DRAW, this.afterDraw, this), this._showFPS = !1, a.game.config.showFPS = !1);
        }, e.showStats = function () {
          this._showFPS || (this._device || (this._device = a.director.root.device), this.generateCanvas(), this.generateStats(), a.game.once(a.Game.EVENT_ENGINE_INITED, this.generateNode, this), a.game.on(a.Game.EVENT_RESTART, this.generateNode, this), this._rootNode && (this._rootNode.active = !0), a.director.on(a.Director.EVENT_BEFORE_UPDATE, this.beforeUpdate, this), a.director.on(a.Director.EVENT_AFTER_UPDATE, this.afterUpdate, this), a.director.on(a.Director.EVENT_BEFORE_PHYSICS, this.beforePhysics, this), a.director.on(a.Director.EVENT_AFTER_PHYSICS, this.afterPhysics, this), a.director.on(a.Director.EVENT_BEFORE_DRAW, this.beforeDraw, this), a.director.on(a.Director.EVENT_AFTER_DRAW, this.afterDraw, this), this._showFPS = !0, this._canvasDone = !0, this._statsDone = !0, a.game.config.showFPS = !0);
        }, e.generateCanvas = function () {
          if (!this._canvasDone) {
            this._ctx && this._canvas && (this._canvas.width = 256, this._canvas.height = 256, this._canvas.style.width = "" + this._canvas.width, this._canvas.style.height = "" + this._canvas.height, this._ctx.font = "23px Arial", this._ctx.textBaseline = "top", this._ctx.fillStyle = "#fff", this._texture = this._device.createTexture(new r(h.TEX2D, o.SAMPLED | o.TRANSFER_DST, n.RGBA8, 256, 256)), this._region.texExtent.width = 256, this._region.texExtent.height = 256);
          }
        }, e.generateStats = function () {
          if (!this._statsDone && this._ctx && this._canvas) {
            this._stats = null;
            var t = performance.now();
            this._ctx.textAlign = "left";
            var e = 0;

            for (var s in S) {
              var i = S[s];
              this._ctx.fillText(i.desc, 0, e * this._lineHeight), i.counter = new w(s, i, t), e++;
            }

            this._totalLines = e, this._wordHeight = this._totalLines * this._lineHeight / this._canvas.height;

            for (var a = 0; a < D.length; ++a) {
              var r = this._ctx.measureText(D[a]).width;

              this._eachNumWidth = Math.max(this._eachNumWidth, r);
            }

            for (var h = 0; h < D.length; ++h) {
              this._ctx.fillText(D[h], h * this._eachNumWidth, this._totalLines * this._lineHeight);
            }

            this._eachNumWidth /= this._canvas.width, this._stats = S, this._canvasArr[0] = this._canvas, this._device.copyTexImagesToTexture(this._canvasArr, this._texture, this._regionArr);
          }
        }, e.generateNode = function () {
          if (!this._rootNode || !this._rootNode.isValid) {
            this._rootNode = new c("PROFILER_NODE"), a.game.addPersistRootNode(this._rootNode);
            var t = new c("Profiler_Camera");
            t.setPosition(0, 0, 1.5), t.parent = this._rootNode;
            var e = t.addComponent("cc.Camera");
            e.projection = v.ProjectionType.ORTHO, e.orthoHeight = 1, e.near = 1, e.far = 2, e.visibility = _.BitMask.PROFILER, e.clearFlags = u.NONE, e.priority = 4294967295;
            var s = new c("Profiler_Root");
            s.parent = this._rootNode;

            for (var i = .4, r = i / this._totalLines, h = i / this._wordHeight, o = r / 23, n = this._eachNumWidth * this._canvas.width * o, d = [0, i, 0, h, i, 0, h, 0, 0, 0, 0, 0], l = [0, 2, 1, 0, 3, 2], p = [0, 0, -1, 0, 1, 0, -1, 0, 1, this._wordHeight, -1, 0, 0, this._wordHeight, -1, 0], E = 0, w = 0; w < this._totalLines; w++) {
              for (var D = 0; D < 8; D++) {
                d.push(h + D * n, i - w * r, 0), d.push(h + (D + 1) * n, i - w * r, 0), d.push(h + (D + 1) * n, i - (w + 1) * r, 0), d.push(h + D * n, i - (w + 1) * r, 0), E = 4 * (8 * w + D + 1), l.push(0 + E, 2 + E, 1 + E, 0 + E, 3 + E, 2 + E);
                var T = 8 * w + D,
                    N = Math.floor(T / 4),
                    S = T - 4 * N;
                p.push(0, this._wordHeight, N, S), p.push(this._eachNumWidth, this._wordHeight, N, S), p.push(this._eachNumWidth, 1, N, S), p.push(0, 1, N, S);
              }
            }

            var x = s.addComponent(g);
            x.mesh = m({
              positions: d,
              indices: l,
              colors: p
            });
            var P = new f();
            P.initialize({
              effectName: "profiler"
            });
            var R = this.pass = P.passes[0],
                y = R.getBinding("mainTexture"),
                F = R.getBinding("digits"),
                A = R.getBinding("offset");
            R.bindTexture(y, this._texture), this.digitsData = R.blocks[F], this.offsetData = R.blocks[A], this.offsetData[3] = -1, x.material = P, x.node.layer = _.Enum.PROFILER, this._inited = !0;
          }
        }, e.beforeUpdate = function () {
          if (this._stats) {
            var t = performance.now();
            this._stats.frame.counter.start(t), this._stats.logic.counter.start(t);
          }
        }, e.afterUpdate = function () {
          if (this._stats) {
            var t = performance.now();
            a.director.isPaused() ? this._stats.frame.counter.start(t) : this._stats.logic.counter.end(t);
          }
        }, e.beforePhysics = function () {
          if (this._stats) {
            var t = performance.now();

            this._stats.physics.counter.start(t);
          }
        }, e.afterPhysics = function () {
          if (this._stats) {
            var t = performance.now();

            this._stats.physics.counter.end(t);
          }
        }, e.beforeDraw = function () {
          if (this._stats) {
            var t = this._device.surfaceTransform,
                e = this._device.capabilities.clipSpaceSignY;

            if (t !== this.offsetData[3]) {
              var s = d[t],
                  i = -.9 * e;
              this.offsetData[0] = -.9 * s[0] + i * s[2], this.offsetData[1] = -.9 * s[1] + i * s[3], this.offsetData[2] = this._eachNumWidth, this.offsetData[3] = t;
            }

            this.pass._setRootBufferDirty(!0);

            var a = performance.now();

            this._stats.render.counter.start(a);
          }
        }, e.afterDraw = function () {
          if (this._stats && this._inited) {
            var t = performance.now();

            if (this._stats.frame.counter.end(t), this._stats.fps.counter.frame(t), this._stats.render.counter.end(t), !(t - this.lastTime < T)) {
              this.lastTime = t;
              var e = this._device;
              this._stats.draws.counter.value = e.numDrawCalls, this._stats.instances.counter.value = e.numInstances, this._stats.bufferMemory.counter.value = e.memoryStatus.bufferSize / 1048576, this._stats.textureMemory.counter.value = e.memoryStatus.textureSize / 1048576, this._stats.tricount.counter.value = e.numTris;
              var s = 0,
                  i = this.digitsData;

              for (var a in this._stats) {
                var r = this._stats[a];
                r.counter.sample(t);

                for (var h = r.counter.human().toString(), o = 7; o >= 0; o--) {
                  var n = 8 * s + o,
                      c = h[h.length - (8 - o)],
                      _ = N[c];
                  void 0 === _ && (_ = 11), i[n] = _;
                }

                s++;
              }
            }
          }
        }, t;
      }()),
          P = t("profiler", new x());

      a.profiler = P;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/renderable-2d-f6cb180f.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js"], function (t) {
  "use strict";

  var e, i, n, r, a, s, o, h, c, l, u, d, _, f, p, g, E, y, D, m, S, A, v, R, C, b, k, P, M, w, B, L, N, T, F, O, x, H, I, z, U, V, W, G, Y, j;

  return {
    setters: [function (t) {
      e = t.ec, i = t.e2, n = t.P, r = t.cj, a = t.R, s = t.c3, o = t.cc, h = t.ch, c = t.ef, l = t.gB, u = t.fY, d = t.gD, _ = t.c5, f = t.t, p = t.e9, g = t.eg, E = t.fZ, y = t.ga, D = t.f_, m = t.ej, S = t.fU, A = t.eh, v = t.ed, R = t.d, C = t.dO, b = t.cf, k = t.ei, P = t.Q, M = t.bk, w = t.U, B = t.cK, L = t.V, N = t.ek, T = t.dr, F = t.bl, O = t.dQ, x = t.gn, H = t.l, I = t.gC, z = t.go, U = t.f$, V = t.bm;
    }, function (t) {
      W = t.d, G = t.D;
    }, function (t) {
      Y = t._;
    }, function () {}, function (t) {
      j = t.R;
    }],
    execute: function execute() {
      t({
        I: void 0,
        a: void 0
      });

      var X,
          Z,
          q,
          K,
          Q,
          $,
          J,
          tt,
          et,
          it,
          nt,
          rt,
          at,
          st,
          ot,
          ht = function ht() {
        this.material = null, this.vertexCount = 0, this.indicesCount = 0;
      },
          ct = function (t) {
        function n() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (e = t.call.apply(t, [this].concat(n)) || this).vData = null, e.uvDirty = !0, e.vertDirty = !0, e._data = [], e._indices = [], e._pivotX = 0, e._pivotY = 0, e._width = 0, e._height = 0, e;
        }

        e(n, t), n.add = function () {
          return dt.add();
        }, n.remove = function (t) {
          var e = dt.data.indexOf(t);
          -1 !== e && (dt.data[e].clear(), dt.removeAt(e));
        };
        var r = n.prototype;
        return r.updateSizeNPivot = function (t, e, i, n) {
          t === this._width && e === this._height && i === this._pivotX && n === this._pivotY || (this._width = t, this._height = e, this._pivotX = i, this._pivotY = n, this.vertDirty = !0);
        }, r.clear = function () {
          this._data.length = 0, this._indices.length = 0, this._pivotX = 0, this._pivotY = 0, this._width = 0, this._height = 0, this.uvDirty = !0, this.vertDirty = !0, this.material = null, this.vertexCount = 0, this.indicesCount = 0;
        }, i(n, [{
          key: "dataLength",
          get: function get() {
            return this._data.length;
          },
          set: function set(t) {
            var e = this._data;

            if (e.length !== t) {
              var i = e.length,
                  n = 0;

              for (n = t; n < i; n++) {
                ut.free(e[n]);
              }

              for (n = i; n < t; n++) {
                e[n] = ut.alloc();
              }

              e.length = t;
            }
          }
        }, {
          key: "data",
          get: function get() {
            return this._data;
          }
        }]), n;
      }(ht),
          lt = t("M", function (t) {
        function n(e) {
          var i;
          return void 0 === e && (e = 9), (i = t.call(this) || this).vData = void 0, i.iData = void 0, i.vertexStart = 0, i.indicesStart = 0, i.byteStart = 0, i.byteCount = 0, i.lastFilledIndices = 0, i.lastFilledVertex = 0, i._formatByte = void 0, i._formatByte = e * Float32Array.BYTES_PER_ELEMENT, i.vData = new Float32Array(256 * e * Float32Array.BYTES_PER_ELEMENT), i.iData = new Uint16Array(1536), i;
        }

        e(n, t), n.add = function () {
          return _t.add();
        }, n.remove = function (t) {
          var e = _t.data.indexOf(t);

          -1 !== e && (_t.data[e].reset(), _t.removeAt(e));
        };
        var r = n.prototype;
        return r.request = function (t, e) {
          var i = this.byteCount + t * this._formatByte;
          return this.reserve(t, e), this.vertexCount += t, this.indicesCount += e, this.byteCount = i, !0;
        }, r.reserve = function (t, e) {
          var i = this.byteCount + t * this._formatByte,
              n = this.indicesCount + e;
          if (t + this.vertexCount > 65535) return !1;
          var r = this.vData.byteLength,
              a = this.iData.length,
              s = this.vData.length,
              o = this.iData.length;

          if (i > r || n > a) {
            for (; r < i || a < n;) {
              r = 4 * (s *= 2), a = o *= 2;
            }

            this._reallocBuffer(s, o);
          }

          return !0;
        }, r.advance = function (t, e) {
          this.vertexCount += t, this.indicesCount += e, this.byteCount += t * this._formatByte;
        }, r.reset = function () {
          this.vertexCount = 0, this.indicesCount = 0, this.byteCount = 0, this.vertexStart = 0, this.indicesStart = 0, this.byteStart = 0, this.lastFilledIndices = 0, this.lastFilledVertex = 0;
        }, r._reallocBuffer = function (t, e) {
          var i = this.vData;
          this.vData = new Float32Array(t), this.vData.set(i, 0);
          var n = this.iData;
          this.iData = new Uint16Array(e), this.iData.set(n, 0);
        }, i(n, [{
          key: "formatByte",
          get: function get() {
            return this._formatByte;
          },
          set: function set(t) {
            this._formatByte = t;
          }
        }, {
          key: "floatStride",
          get: function get() {
            return this._formatByte >> 2;
          }
        }, {
          key: "vDataOffset",
          get: function get() {
            return this.byteCount >>> 2;
          }
        }]), n;
      }(ht)),
          ut = (function (t) {
        function i() {
          return t.apply(this, arguments) || this;
        }

        e(i, t);
        var n = i.prototype;
        n._fillQuadBuffer = function () {
          for (var t = this.iData.length / 6, e = this.iData, i = 0, n = 0; i < t; i++) {
            var r = 4 * i;
            e[n++] = r, e[n++] = r + 1, e[n++] = r + 2, e[n++] = r + 1, e[n++] = r + 3, e[n++] = r + 2;
          }
        }, n._reallocBuffer = function (e, i) {
          t.prototype._reallocBuffer.call(this, e, i), this._fillQuadBuffer();
        };
      }(lt), new n(function () {
        return {
          x: 0,
          y: 0,
          z: 0,
          u: 0,
          v: 0,
          color: r.WHITE.clone()
        };
      }, 128)),
          dt = new a(function () {
        return new ct();
      }, 32),
          _t = new a(function () {
        return new lt();
      }, 32),
          ft = new s(),
          pt = new s(),
          gt = new o(),
          Et = new o(),
          yt = new o(),
          Dt = new o(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
          mt = new h(),
          St = t("U", (X = c("cc.UITransform"), Z = E(), q = y(110), K = D(), Q = m(), $ = S(), J = m(), tt = S(), X(et = Z(et = q(et = K(et = l(et = u((st = at = function (t) {
        function n() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (e = t.call.apply(t, [this].concat(n)) || this)._priority = 0, A(e, "_contentSize", nt, v(e)), A(e, "_anchorPoint", rt, v(e)), e;
        }

        e(n, t);
        var r = n.prototype;
        return r.__preload = function () {
          this.node._uiProps.uiTransformComp = this;
        }, r.onLoad = function () {
          this.node.parent && n.insertChangeMap(this.node.parent);
        }, r.onEnable = function () {
          this.node.on(d.PARENT_CHANGED, this._parentChanged, this), this._markRenderDataDirty();
        }, r.onDisable = function () {
          this.node.off(d.PARENT_CHANGED, this._parentChanged, this);
        }, r.onDestroy = function () {
          this.node._uiProps.uiTransformComp = null;
        }, r.setContentSize = function (t, e) {
          var i = this._contentSize;

          if (void 0 === e) {
            if ((t = t).width === i.width && t.height === i.height) return;
            i.width = t.width, i.height = t.height;
          } else {
            if (t === i.width && e === i.height) return;
            i.width = t, i.height = e;
          }

          this.node.emit(d.SIZE_CHANGED), this._markRenderDataDirty();
        }, r.setAnchorPoint = function (t, e) {
          var i = this._anchorPoint;

          if (void 0 === e) {
            if ((t = t).x === i.x && t.y === i.y) return;
            i.x = t.x, i.y = t.y;
          } else {
            if (t === i.x && e === i.y) return;
            i.x = t, i.y = e;
          }

          this.node.emit(d.ANCHOR_CHANGED, this._anchorPoint), this._markRenderDataDirty();
        }, r.isHit = function (t, e) {
          for (var i = this._contentSize.width, n = this._contentSize.height, r = ft, a = pt, h = this._getRenderScene().cameras, c = 0; c < h.length; c++) {
            var l = h[c];

            if (l.visibility & this.node.layer) {
              l.node.getWorldRT(gt);
              var u = gt.m12,
                  d = gt.m13,
                  _ = Y.center;

              if (gt.m12 = _.x - (gt.m00 * u + gt.m04 * d), gt.m13 = _.y - (gt.m01 * u + gt.m05 * d), o.invert(gt, gt), s.transformMat4(r, t, gt), this.node.getWorldMatrix(yt), o.invert(gt, yt), !o.strictEquals(gt, Dt)) {
                s.transformMat4(a, r, gt), a.x += this._anchorPoint.x * i, a.y += this._anchorPoint.y * n;
                var f = !1;
                if (a.x >= 0 && a.y >= 0 && a.x <= i && a.y <= n && (f = !0, e && e.mask)) for (var p = e.mask, g = this.node, E = p ? p.length : 0, y = 0, D = 0; g && D < E; ++y, g = g.parent) {
                  var m = p[D];

                  if (y === m.index) {
                    if (g !== m.comp.node) {
                      p.length = D;
                      break;
                    }

                    var S = m.comp;

                    if (S && S._enabled && !S.isHit(r)) {
                      f = !1;
                      break;
                    }

                    D++;
                  } else if (y > m.index) {
                    p.length = D;
                    break;
                  }
                }
                if (f) return !0;
              }
            }
          }

          return !1;
        }, r.convertToNodeSpaceAR = function (t, e) {
          return this.node.getWorldMatrix(yt), o.invert(gt, yt), e || (e = new _()), _.transformMat4(e, t, gt);
        }, r.convertToWorldSpaceAR = function (t, e) {
          return this.node.getWorldMatrix(yt), e || (e = new _()), _.transformMat4(e, t, yt);
        }, r.getBoundingBox = function () {
          o.fromRTS(Et, this.node.getRotation(), this.node.getPosition(), this.node.getScale());
          var t = this._contentSize.width,
              e = this._contentSize.height,
              i = new h(-this._anchorPoint.x * t, -this._anchorPoint.y * e, t, e);
          return i.transformMat4(Et), i;
        }, r.getBoundingBoxToWorld = function () {
          return this.node.parent ? (this.node.parent.getWorldMatrix(yt), this.getBoundingBoxTo(yt)) : this.getBoundingBox();
        }, r.getBoundingBoxTo = function (t) {
          o.fromRTS(Et, this.node.getRotation(), this.node.getPosition(), this.node.getScale());
          var e = this._contentSize.width,
              i = this._contentSize.height,
              r = new h(-this._anchorPoint.x * e, -this._anchorPoint.y * i, e, i);
          if (o.multiply(yt, t, Et), r.transformMat4(yt), !this.node.children) return r;

          for (var a, s = this.node.children, c = f(s); !(a = c()).done;) {
            var l = a.value;

            if (l && l.active) {
              var u = l.getComponent(n);

              if (u) {
                var d = u.getBoundingBoxTo(t);
                d && h.union(r, r, d);
              }
            }
          }

          return r;
        }, r.getComputeAABB = function (t) {
          var e = this._contentSize.width,
              i = this._contentSize.height;
          mt.set(-this._anchorPoint.x * e, -this._anchorPoint.y * i, e, i), mt.transformMat4(this.node.worldMatrix);
          var n = mt.x + .5 * mt.width,
              r = mt.y + .5 * mt.height,
              a = this.node.worldPosition.z,
              s = mt.width / 2,
              o = mt.height / 2;
          return null != t ? (p.set(t, n, r, a, s, o, .001), t) : new p(n, r, a, s, o, .001);
        }, r._parentChanged = function () {
          this.node.getComponent("cc.RenderRoot2D") || this.node.parent && n.insertChangeMap(this.node.parent);
        }, r._markRenderDataDirty = function () {
          var t = this.node._uiProps.uiComp;
          t && t.markForUpdateRenderData();
        }, n.insertChangeMap = function (t) {
          var e = t.uuid;
          n.priorityChangeNodeMap.has(e) || n.priorityChangeNodeMap.set(e, t);
        }, n._sortChildrenSibling = function (t) {
          var e = t.children;
          e && e.sort(function (t, e) {
            var i = t._uiProps.uiTransformComp,
                n = e._uiProps.uiTransformComp,
                r = (i ? i._priority : 0) - (n ? n._priority : 0);
            return 0 === r ? t.getSiblingIndex() - e.getSiblingIndex() : r;
          });
        }, n._sortSiblings = function () {
          n.priorityChangeNodeMap.forEach(function (t) {
            n._sortChildrenSibling(t), t._updateSiblingIndex(), t.emit("childrenSiblingOrderChanged");
          }), n.priorityChangeNodeMap.clear();
        }, n._cleanChangeMap = function () {
          n.priorityChangeNodeMap.clear();
        }, i(n, [{
          key: "contentSize",
          get: function get() {
            return this._contentSize;
          },
          set: function set(t) {
            this._contentSize.equals(t) || (this._contentSize.set(t), this.node.emit(d.SIZE_CHANGED), this._markRenderDataDirty());
          }
        }, {
          key: "width",
          get: function get() {
            return this._contentSize.width;
          },
          set: function set(t) {
            this._contentSize.width !== t && (this._contentSize.width = t, this.node.emit(d.SIZE_CHANGED), this._markRenderDataDirty());
          }
        }, {
          key: "height",
          get: function get() {
            return this._contentSize.height;
          },
          set: function set(t) {
            this.contentSize.height !== t && (this._contentSize.height = t, this.node.emit(d.SIZE_CHANGED), this._markRenderDataDirty());
          }
        }, {
          key: "anchorPoint",
          get: function get() {
            return this._anchorPoint;
          },
          set: function set(t) {
            this._anchorPoint.equals(t) || (this._anchorPoint.set(t), this.node.emit(d.ANCHOR_CHANGED, this._anchorPoint), this._markRenderDataDirty());
          }
        }, {
          key: "anchorX",
          get: function get() {
            return this._anchorPoint.x;
          },
          set: function set(t) {
            this._anchorPoint.x !== t && (this._anchorPoint.x = t, this.node.emit(d.ANCHOR_CHANGED, this._anchorPoint), this._markRenderDataDirty());
          }
        }, {
          key: "anchorY",
          get: function get() {
            return this._anchorPoint.y;
          },
          set: function set(t) {
            this._anchorPoint.y !== t && (this._anchorPoint.y = t, this.node.emit(d.ANCHOR_CHANGED, this._anchorPoint), this._markRenderDataDirty());
          }
        }, {
          key: "priority",
          get: function get() {
            return this._priority;
          },
          set: function set(t) {
            this._priority !== t && (this.node.getComponent("cc.RenderRoot2D") ? R(6706) : (this._priority = t, this.node.parent && n.insertChangeMap(this.node.parent)));
          }
        }, {
          key: "visibility",
          get: function get() {
            var t = W.root.batcher2D.getFirstRenderCamera(this.node);
            return t ? t.visibility : 0;
          }
        }, {
          key: "cameraPriority",
          get: function get() {
            var t = W.root.batcher2D.getFirstRenderCamera(this.node);
            return t ? t.priority : 0;
          }
        }]), n;
      }(C), at.EventType = d, at.priorityChangeNodeMap = new Map(), g((it = st).prototype, "contentSize", [Q, $], Object.getOwnPropertyDescriptor(it.prototype, "contentSize"), it.prototype), g(it.prototype, "anchorPoint", [J, tt], Object.getOwnPropertyDescriptor(it.prototype, "anchorPoint"), it.prototype), nt = g(it.prototype, "_contentSize", [k], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new b(100, 100);
        }
      }), rt = g(it.prototype, "_anchorPoint", [k], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new s(.5, .5);
        }
      }), et = it)) || et) || et) || et) || et) || et) || et));

      W.on(G.EVENT_AFTER_UPDATE, St._sortSiblings), W.on(G.EVENT_BEFORE_SCENE_LAUNCH, St._cleanChangeMap), function (t) {
        t[t.DISABLED = 0] = "DISABLED", t[t.CLEAR = 1] = "CLEAR", t[t.ENTER_LEVEL = 2] = "ENTER_LEVEL", t[t.ENABLED = 3] = "ENABLED", t[t.EXIT_LEVEL = 4] = "EXIT_LEVEL", t[t.CLEAR_INVERTED = 5] = "CLEAR_INVERTED", t[t.ENTER_LEVEL_INVERTED = 6] = "ENTER_LEVEL_INVERTED";
      }(ot || (ot = t("a", {})));
      var At,
          vt,
          Rt,
          Ct,
          bt,
          kt,
          Pt,
          Mt,
          wt,
          Bt,
          Lt,
          Nt,
          Tt,
          Ft,
          Ot,
          xt,
          Ht,
          It,
          zt,
          Ut = t("S", function () {
        function t() {
          this.stage = ot.DISABLED, this._maskStack = [], this._stencilPattern = {
            stencilTest: !0,
            func: P.ALWAYS,
            stencilMask: 65535,
            writeMask: 65535,
            failOp: w.KEEP,
            zFailOp: w.KEEP,
            passOp: w.KEEP,
            ref: 1
          }, this.stencilStateMap = new Map(), this.stencilStateMapWithDepth = new Map();
        }

        var e = t.prototype;
        return e.pushMask = function (t) {
          this._maskStack.push(t);
        }, e.clear = function (t) {
          t.stencilStage = t.inverted ? ot.CLEAR_INVERTED : ot.CLEAR;
        }, e.enterLevel = function (t) {
          t.graphics.stencilStage = t.inverted ? ot.ENTER_LEVEL_INVERTED : ot.ENTER_LEVEL;
        }, e.enableMask = function () {
          this.stage = ot.ENABLED;
        }, e.exitMask = function () {
          0 !== this._maskStack.length && (this._maskStack.pop(), 0 === this._maskStack.length ? this.stage = ot.DISABLED : this.stage = ot.ENABLED);
        }, e.getWriteMask = function () {
          return 1 << this._maskStack.length - 1;
        }, e.getExitWriteMask = function () {
          return 1 << this._maskStack.length;
        }, e.getStencilRef = function () {
          for (var t = 0, e = 0; e < this._maskStack.length; ++e) {
            t += 1 << e;
          }

          return t;
        }, e.reset = function () {
          this._maskStack.length = 0, this.stage = ot.DISABLED;
        }, e.destroy = function () {
          this.stencilStateMap.forEach(function (t) {
            t.destroy();
          }), this.stencilStateMap.clear();
        }, e.getStencilStage = function (t, e) {
          var i = 0,
              n = !1,
              r = !1,
              a = P.LESS,
              s = this.stencilStateMap;

          if (e && e.passes[0]) {
            var o = e.passes[0].depthStencilState,
                h = 0,
                c = 0;
            o.depthTest && (h = 1), o.depthWrite && (c = 1), i = h | c << 1 | o.depthFunc << 2 | t << 6 | this._maskStack.length << 9, n = o.depthTest, r = o.depthWrite, a = o.depthFunc, s = this.stencilStateMapWithDepth;
          } else i = t << 16 | this._maskStack.length;

          if (s && s.has(i)) return s.get(i);
          this.setStateFromStage(t);
          var l = new M(n, r, a, this._stencilPattern.stencilTest, this._stencilPattern.func, this._stencilPattern.stencilMask, this._stencilPattern.writeMask, this._stencilPattern.failOp, this._stencilPattern.zFailOp, this._stencilPattern.passOp, this._stencilPattern.ref, this._stencilPattern.stencilTest, this._stencilPattern.func, this._stencilPattern.stencilMask, this._stencilPattern.writeMask, this._stencilPattern.failOp, this._stencilPattern.zFailOp, this._stencilPattern.passOp, this._stencilPattern.ref);
          return s.set(i, l), l;
        }, e.getStencilHash = function (t) {
          return t << 8 | this._maskStack.length;
        }, e.setStateFromStage = function (t) {
          var e = this._stencilPattern;
          t === ot.DISABLED ? (e.stencilTest = !1, e.func = P.ALWAYS, e.failOp = w.KEEP, e.stencilMask = e.writeMask = 65535, e.ref = 1) : (e.stencilTest = !0, t === ot.ENABLED ? (e.func = P.EQUAL, e.failOp = w.KEEP, e.stencilMask = e.ref = this.getStencilRef(), e.writeMask = this.getWriteMask()) : t === ot.CLEAR ? (e.func = P.NEVER, e.failOp = w.ZERO, e.writeMask = e.stencilMask = e.ref = this.getWriteMask()) : t === ot.CLEAR_INVERTED || t === ot.ENTER_LEVEL ? (e.func = P.NEVER, e.failOp = w.REPLACE, e.writeMask = e.stencilMask = e.ref = this.getWriteMask()) : t === ot.ENTER_LEVEL_INVERTED && (e.func = P.NEVER, e.failOp = w.ZERO, e.writeMask = e.stencilMask = e.ref = this.getWriteMask()));
        }, i(t, [{
          key: "pattern",
          get: function get() {
            return this._stencilPattern;
          }
        }]), t;
      }());
      Ut.sharedManager = null, Ut.sharedManager = new Ut(), B(L), function (t) {
        t[t.ADD_COLOR = 0] = "ADD_COLOR", t[t.ADD_COLOR_AND_TEXTURE = 1] = "ADD_COLOR_AND_TEXTURE", t[t.GRAYSCALE = 2] = "GRAYSCALE", t[t.USE_ALPHA_SEPARATED = 3] = "USE_ALPHA_SEPARATED", t[t.USE_ALPHA_SEPARATED_AND_GRAY = 4] = "USE_ALPHA_SEPARATED_AND_GRAY";
      }(zt || (zt = t("I", {})));
      var Vt = t("R", (At = c("cc.Renderable2D"), vt = I(St), Rt = z(), Ct = N(T), bt = N(T), kt = m(), Pt = U(), Mt = m(), wt = S(), At(Bt = vt(Bt = l(Bt = u((It = Ht = function (t) {
        function n() {
          for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, A(e, "_materials", Nt, v(e)), A(e, "_customMaterial", Tt, v(e)), e.stencilStage = ot.DISABLED, A(e, "_srcBlendFactor", Ft, v(e)), A(e, "_dstBlendFactor", Ot, v(e)), A(e, "_color", xt, v(e)), e._assembler = null, e._postAssembler = null, e._renderData = null, e._renderDataFlag = !0, e._renderFlag = !0, e._delegateSrc = null, e._instanceMaterialType = zt.ADD_COLOR_AND_TEXTURE, e._blendState = new V(), e._blendHash = 0, e._colorDirty = !0, e._cacheAlpha = 1, e._lastParent = null, e;
        }

        e(n, t);
        var r = n.prototype;
        return r.updateMaterial = function () {
          if (this._customMaterial) return this.setMaterial(this._customMaterial, 0), void (this._blendHash = -1);

          var t = this._updateBuiltinMaterial();

          this.setMaterial(t, 0), this._updateBlendFunc();
        }, r.updateBlendHash = function () {
          var t = this._blendState.targets[0].blendDst << 4;
          this._blendHash = t | this._blendState.targets[0].blendSrc;
        }, r.__preload = function () {
          this.node._uiProps.uiComp = this, this._flushAssembler && this._flushAssembler();
        }, r.onEnable = function () {
          this.node.on(d.ANCHOR_CHANGED, this._nodeStateChange, this), this.node.on(d.SIZE_CHANGED, this._nodeStateChange, this), this.updateMaterial(), this._renderFlag = this._canRender();
        }, r.onRestore = function () {
          this.updateMaterial(), this._renderFlag = this._canRender();
        }, r.onDisable = function () {
          this.node.off(d.ANCHOR_CHANGED, this._nodeStateChange, this), this.node.off(d.SIZE_CHANGED, this._nodeStateChange, this), this._renderFlag = !1;
        }, r.onDestroy = function () {
          if (this.node._uiProps.uiComp === this && (this.node._uiProps.uiComp = null), this.destroyRenderData(), this._materialInstances) for (var t = 0; t < this._materialInstances.length; t++) {
            this._materialInstances[t] && this._materialInstances[t].destroy();
          }
          this._renderData = null, this._blendState && this._blendState.destroy();
        }, r.markForUpdateRenderData = function (t) {
          if (void 0 === t && (t = !0), this._renderFlag = this._canRender(), t && this._renderFlag) {
            var e = this._renderData;
            e && (e.vertDirty = !0), this._renderDataFlag = t;
          } else t || (this._renderDataFlag = t);
        }, r.requestRenderData = function () {
          var t = ct.add();
          return this._renderData = t, t;
        }, r.destroyRenderData = function () {
          this._renderData && (ct.remove(this._renderData), this._renderData = null);
        }, r.updateAssembler = function (t) {
          this._updateColor(), this._renderFlag && (this._checkAndUpdateRenderData(), this._render(t));
        }, r.postUpdateAssembler = function (t) {
          this._renderFlag && this._postRender(t);
        }, r._render = function () {}, r._postRender = function () {}, r._checkAndUpdateRenderData = function () {
          this._renderDataFlag && (this._assembler.updateRenderData(this), this._renderDataFlag = !1);
        }, r._canRender = function () {
          return this.isValid && null !== this.getMaterial(0) && this.enabled && (this._delegateSrc ? this._delegateSrc.activeInHierarchy : this.enabledInHierarchy) && this.node._uiProps.opacity > 0;
        }, r._postCanRender = function () {}, r._updateColor = function () {
          var t = this._cacheAlpha <= 0;
          this._updateWorldAlpha(), this._colorDirty && this._assembler && this._assembler.updateColor && (this._assembler.updateColor(this), t && (this._renderFlag = this._canRender()), this._colorDirty = !1);
        }, r._updateWorldAlpha = function () {
          var t = this.color.a / 255;
          1 === t && (t = this.node._uiProps.localOpacity);
          var e = this.node._uiProps.opacity * t;
          this.node._uiProps.opacity = e, this._colorDirty = this._colorDirty || e !== this._cacheAlpha, this._cacheAlpha = e;
        }, r._updateBlendFunc = function () {
          var t = this._blendState.targets[0];
          t || (t = new F(), this._blendState.setTarget(0, t)), t.blendDst === this._dstBlendFactor && t.blendSrc === this._srcBlendFactor || (t.blend = !0, t.blendDstAlpha = L.ONE_MINUS_SRC_ALPHA, t.blendDst = this._dstBlendFactor, t.blendSrc = this._srcBlendFactor), this.updateBlendHash();
        }, r.getBlendState = function () {
          return this._blendState;
        }, r._nodeStateChange = function () {
          this._renderData && this.markForUpdateRenderData();

          for (var t = 0; t < this.node.children.length; ++t) {
            var e = this.node.children[t].getComponent(n);
            e && e.markForUpdateRenderData();
          }
        }, r._updateBuiltinMaterial = function () {
          var t;

          switch (this._instanceMaterialType) {
            case zt.ADD_COLOR:
              t = O.get("ui-base-material");
              break;

            case zt.GRAYSCALE:
              t = O.get("ui-sprite-gray-material");
              break;

            case zt.USE_ALPHA_SEPARATED:
              t = O.get("ui-sprite-alpha-sep-material");
              break;

            case zt.USE_ALPHA_SEPARATED_AND_GRAY:
              t = O.get("ui-sprite-gray-alpha-sep-material");
              break;

            default:
              t = O.get("ui-sprite-material");
          }

          return t;
        }, r._setCacheAlpha = function (t) {
          this._cacheAlpha = t;
        }, i(n, [{
          key: "sharedMaterials",
          get: function get() {
            return this._materials;
          },
          set: function set(t) {
            for (var e = 0; e < t.length; e++) {
              t[e] !== this._materials[e] && this.setMaterial(t[e], e);
            }

            if (t.length < this._materials.length) {
              for (var i = t.length; i < this._materials.length; i++) {
                this.setMaterial(null, i);
              }

              this._materials.splice(t.length);
            }
          }
        }, {
          key: "customMaterial",
          get: function get() {
            return this._customMaterial;
          },
          set: function set(t) {
            this._customMaterial = t, this.updateMaterial();
          }
        }, {
          key: "srcBlendFactor",
          get: function get() {
            return this._customMaterial && R(12001), this._srcBlendFactor;
          },
          set: function set(t) {
            this._customMaterial ? R(12001) : this._srcBlendFactor !== t && (this._srcBlendFactor = t, this._updateBlendFunc());
          }
        }, {
          key: "dstBlendFactor",
          get: function get() {
            return this._customMaterial && R(12001), this._dstBlendFactor;
          },
          set: function set(t) {
            this._customMaterial ? R(12001) : this._dstBlendFactor !== t && (this._dstBlendFactor = t, this._updateBlendFunc());
          }
        }, {
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(t) {
            this._color.equals(t) || (this._color.set(t), this._colorDirty = !0);
          }
        }, {
          key: "renderData",
          get: function get() {
            return this._renderData;
          }
        }, {
          key: "delegateSrc",
          set: function set(t) {
            this._delegateSrc = t;
          }
        }, {
          key: "blendHash",
          get: function get() {
            return this._blendHash;
          }
        }]), n;
      }(j), Ht.BlendState = L, Ht.Assembler = null, Ht.PostAssembler = null, Nt = g((Lt = It).prototype, "_materials", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), g(Lt.prototype, "sharedMaterials", [x, Rt], Object.getOwnPropertyDescriptor(Lt.prototype, "sharedMaterials"), Lt.prototype), Tt = g(Lt.prototype, "_customMaterial", [Ct], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), g(Lt.prototype, "customMaterial", [bt, kt, Pt], Object.getOwnPropertyDescriptor(Lt.prototype, "customMaterial"), Lt.prototype), g(Lt.prototype, "color", [Mt, wt], Object.getOwnPropertyDescriptor(Lt.prototype, "color"), Lt.prototype), Ft = g(Lt.prototype, "_srcBlendFactor", [k], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return L.SRC_ALPHA;
        }
      }), Ot = g(Lt.prototype, "_dstBlendFactor", [k], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return L.ONE_MINUS_SRC_ALPHA;
        }
      }), xt = g(Lt.prototype, "_color", [k], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return r.WHITE.clone();
        }
      }), Bt = Lt)) || Bt) || Bt) || Bt) || Bt));
      H.internal.Renderable2D = Vt;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/renderable-component-b5e46bae.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js"], function (t) {
  "use strict";

  var e, a, i, n, s, r, l, o, h, c, u, _, f, m, g, d;

  return {
    setters: [function (t) {
      e = t.ef, a = t.ek, i = t.dr, n = t.ec, s = t.d, r = t.e2, l = t.eg, o = t.l, h = t.ej, c = t.f$, u = t.eh, _ = t.ed, f = t.dO, m = t.dJ, g = t.ei;
    }, function (t) {
      d = t.o;
    }],
    execute: function execute() {
      var M,
          I,
          p,
          v,
          y,
          b,
          w,
          k,
          j,
          C,
          F = {
        parent: null,
        owner: null,
        subModelIdx: 0
      },
          O = t("R", (M = e("cc.RenderableComponent"), I = a([i]), p = a(i), v = h(), y = c(), M((C = function (t) {
        function e() {
          for (var e, a = arguments.length, i = new Array(a), n = 0; n < a; n++) {
            i[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(i)) || this, u(e, "_materials", k, _(e)), u(e, "_visFlags", j, _(e)), e._materialInstances = [], e._models = [], e;
        }

        n(e, t);
        var a = e.prototype;
        return a.getMaterial = function (t) {
          return t < 0 || t >= this._materials.length ? null : this._materials[t];
        }, a.setMaterial = function (t, e) {
          t && t instanceof d && console.error("Can't set a material instance to a sharedMaterial slot"), this._materials[e] = t;
          var a = this._materialInstances[e];
          a && (a.destroy(), this._materialInstances[e] = null), this._onMaterialModified(e, this._materials[e]);
        }, a.getMaterialInstance = function (t) {
          if (!this._materials[t]) return null;

          if (!this._materialInstances[t]) {
            F.parent = this._materials[t], F.owner = this, F.subModelIdx = t;
            var e = new d(F);
            F.parent = null, F.owner = null, F.subModelIdx = 0, this.setMaterialInstance(e, t);
          }

          return this._materialInstances[t];
        }, a.setMaterialInstance = function (t, e) {
          if ("number" == typeof t) {
            s(12007);
            var a = t;
            t = e, e = a;
          }

          var i = this._materialInstances[e];
          t && t.parent ? t !== i && (this._materialInstances[e] = t, this._onMaterialModified(e, t)) : (t !== this._materials[e] || i) && this.setMaterial(t, e);
        }, a.getRenderMaterial = function (t) {
          return this._materialInstances[t] || this._materials[t];
        }, a._collectModels = function () {
          return this._models;
        }, a._attachToScene = function () {}, a._detachFromScene = function () {}, a._onMaterialModified = function () {}, a._onRebuildPSO = function () {}, a._clearMaterials = function () {}, a._onVisibilityChange = function () {}, r(e, [{
          key: "visibility",
          get: function get() {
            return this._visFlags;
          },
          set: function set(t) {
            this._visFlags = t, this._onVisibilityChange(t);
          }
        }, {
          key: "sharedMaterials",
          get: function get() {
            return this._materials;
          },
          set: function set(t) {
            for (var e = 0; e < t.length; e++) {
              t[e] !== this._materials[e] && this.setMaterial(t[e], e);
            }

            if (t.length < this._materials.length) {
              for (var a = t.length; a < this._materials.length; a++) {
                this.setMaterial(null, a);
              }

              this._materials.splice(t.length);
            }
          }
        }, {
          key: "materials",
          get: function get() {
            for (var t = 0; t < this._materials.length; t++) {
              this._materialInstances[t] = this.getMaterialInstance(t);
            }

            return this._materialInstances;
          },
          set: function set(t) {
            var e = t.length - this._materials.length;
            if (e > 0) this._materials.length = t.length, this._materialInstances.length = t.length;else if (e < 0) for (var a = this._materials.length - e; a < this._materials.length; ++a) {
              this.setMaterialInstance(null, a);
            }

            for (var i = 0; i < this._materialInstances.length; i++) {
              this._materialInstances[i] != t[i] && this.setMaterialInstance(t[i], i);
            }
          }
        }, {
          key: "sharedMaterial",
          get: function get() {
            return this.getMaterial(0);
          }
        }, {
          key: "material",
          get: function get() {
            return this.getMaterialInstance(0);
          },
          set: function set(t) {
            (1 !== this._materials.length || this._materialInstances[0] || this._materials[0] !== t) && this.setMaterialInstance(t, 0);
          }
        }]), e;
      }(f), k = l((w = C).prototype, "_materials", [I], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), j = l(w.prototype, "_visFlags", [g], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return m.Enum.NONE;
        }
      }), l(w.prototype, "sharedMaterials", [p, v, y], Object.getOwnPropertyDescriptor(w.prototype, "sharedMaterials"), w.prototype), b = w)) || b));
      o.RenderableComponent = O;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/skeleton-314b4fa5.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./mesh-c8768986.js"], function (e) {
  "use strict";

  var i, t, n, o, s, r, c, a, h, u, l, p, f, d, m, _;

  return {
    setters: [function (e) {
      i = e.cR, t = e.cS, n = e.ef, o = e.ek, s = e.d7, r = e.cc, c = e.ec, a = e.l, h = e.e2, u = e.df, l = e.eg, p = e.eh, f = e.ed, d = e.cU, m = e.ei;
    }, function (e) {
      _ = e.M;
    }],
    execute: function execute() {
      var v, b, y, g, P, j, k, B, S;
      i(_.prototype, "Mesh.prototype", [{
        name: "renderingMesh",
        newName: "renderingSubMeshes"
      }]), t(_.prototype, "Mesh.prototype", [{
        name: "hasFlatBuffers"
      }, {
        name: "destroyFlatBuffers"
      }]);
      var w = e("S", (v = n("cc.Skeleton"), b = o([s]), y = o([r]), v((S = function (e) {
        function i() {
          for (var i, t = arguments.length, n = new Array(t), o = 0; o < t; o++) {
            n[o] = arguments[o];
          }

          return i = e.call.apply(e, [this].concat(n)) || this, p(i, "_joints", j, f(i)), p(i, "_bindposes", k, f(i)), p(i, "_hash", B, f(i)), i._invBindposes = null, i;
        }

        c(i, e);
        var t = i.prototype;
        return t.destroy = function () {
          var i, t;
          return null === (i = null === (t = a.director.root) || void 0 === t ? void 0 : t.dataPoolManager) || void 0 === i || i.releaseSkeleton(this), e.prototype.destroy.call(this);
        }, t.validate = function () {
          return this.joints.length > 0 && this.bindposes.length > 0;
        }, h(i, [{
          key: "joints",
          get: function get() {
            return this._joints;
          },
          set: function set(e) {
            this._joints = e;
          }
        }, {
          key: "bindposes",
          get: function get() {
            return this._bindposes;
          },
          set: function set(e) {
            this._bindposes = e;
          }
        }, {
          key: "inverseBindposes",
          get: function get() {
            if (!this._invBindposes) {
              this._invBindposes = [];

              for (var e = 0; e < this._bindposes.length; e++) {
                var i = new r();
                r.invert(i, this._bindposes[e]), this._invBindposes.push(i);
              }
            }

            return this._invBindposes;
          }
        }, {
          key: "hash",
          get: function get() {
            if (!this._hash) {
              for (var e = "", i = 0; i < this._bindposes.length; i++) {
                var t = this._bindposes[i];
                e += t.m00.toPrecision(2) + " " + t.m01.toPrecision(2) + " " + t.m02.toPrecision(2) + " " + t.m03.toPrecision(2) + " " + t.m04.toPrecision(2) + " " + t.m05.toPrecision(2) + " " + t.m06.toPrecision(2) + " " + t.m07.toPrecision(2) + " " + t.m08.toPrecision(2) + " " + t.m09.toPrecision(2) + " " + t.m10.toPrecision(2) + " " + t.m11.toPrecision(2) + " " + t.m12.toPrecision(2) + " " + t.m13.toPrecision(2) + " " + t.m14.toPrecision(2) + " " + t.m15.toPrecision(2) + "\n";
              }

              this._hash = d(e, 666);
            }

            return this._hash;
          }
        }]), i;
      }(u), j = l((P = S).prototype, "_joints", [b], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), k = l(P.prototype, "_bindposes", [y], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), B = l(P.prototype, "_hash", [m], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), g = P)) || g));
      a.Skeleton = w;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/spine.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./renderable-2d-f6cb180f.js", "./graphics-f8140643.js", "./vertex-format-bf491aa3.js"], function (t) {
  "use strict";

  var e, n, a, r, i, s, o, l, h, u, c, d, f, p, m, g, v, y, x, w, E, M, _, T, b, A, C, S, k, I, R, P, D, V, N, F, O, L, U, B, Y, X, W, q, H, j, z;

  return {
    setters: [function (t) {
      e = t.cc, n = t.c5, a = t.t, r = t.ec, i = t.gm, s = t.gP, o = t.ef, l = t.ek, h = t.dn, u = t.d7, c = t.dH, d = t.cJ, f = t.e2, p = t.df, m = t.eg, g = t.l, v = t.eh, y = t.ed, x = t.ei, w = t.cK, E = t.eM, M = t.dr, _ = t.fY, T = t.w, b = t.c, A = t.dQ, C = t.cj, S = t.W, k = t.c_, I = t.gn, R = t.eu, P = t.cZ, D = t.fZ, V = t.f_, N = t.ej, F = t.f$, O = t.fU, L = t.go, U = t.V;
    }, function (t) {
      B = t.d, Y = t.h;
    }, function (t) {
      X = t.o;
    }, function () {}, function () {}, function () {}, function () {}, function () {}, function (t) {
      W = t.M, q = t.R;
    }, function (t) {
      H = t.G;
    }, function (t) {
      j = t.c, z = t.e;
    }],
    execute: function execute() {
      var _G,
          Z,
          J,
          Q = (_G = function G(t, e) {
        return (_G = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var n in e) {
            e.hasOwnProperty(n) && (t[n] = e[n]);
          }
        })(t, e);
      }, function (t, e) {
        function n() {
          this.constructor = t;
        }

        _G(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n());
      });

      !function (t) {
        var e,
            n,
            a,
            r = function () {
          function t(t, e, n) {
            if (null == t) throw new Error("name cannot be null.");
            if (null == e) throw new Error("timelines cannot be null.");
            this.name = t, this.timelines = e, this.timelineIds = [];

            for (var a = 0; a < e.length; a++) {
              this.timelineIds[e[a].getPropertyId()] = !0;
            }

            this.duration = n;
          }

          return t.prototype.hasTimeline = function (t) {
            return 1 == this.timelineIds[t];
          }, t.prototype.apply = function (t, e, n, a, r, i, s, o) {
            if (null == t) throw new Error("skeleton cannot be null.");
            a && 0 != this.duration && (n %= this.duration, e > 0 && (e %= this.duration));

            for (var l = this.timelines, h = 0, u = l.length; h < u; h++) {
              l[h].apply(t, e, n, r, i, s, o);
            }
          }, t.binarySearch = function (t, e, n) {
            void 0 === n && (n = 1);
            var a = 0,
                r = t.length / n - 2;
            if (0 == r) return n;

            for (var i = r >>> 1;;) {
              if (t[(i + 1) * n] <= e ? a = i + 1 : r = i, a == r) return (a + 1) * n;
              i = a + r >>> 1;
            }
          }, t.linearSearch = function (t, e, n) {
            for (var a = 0, r = t.length - n; a <= r; a += n) {
              if (t[a] > e) return a;
            }

            return -1;
          }, t;
        }();

        t.Animation = r, function (t) {
          t[t.setup = 0] = "setup", t[t.first = 1] = "first", t[t.replace = 2] = "replace", t[t.add = 3] = "add";
        }(e = t.MixBlend || (t.MixBlend = {})), function (t) {
          t[t.mixIn = 0] = "mixIn", t[t.mixOut = 1] = "mixOut";
        }(n = t.MixDirection || (t.MixDirection = {})), function (t) {
          t[t.rotate = 0] = "rotate", t[t.translate = 1] = "translate", t[t.scale = 2] = "scale", t[t.shear = 3] = "shear", t[t.attachment = 4] = "attachment", t[t.color = 5] = "color", t[t.deform = 6] = "deform", t[t.event = 7] = "event", t[t.drawOrder = 8] = "drawOrder", t[t.ikConstraint = 9] = "ikConstraint", t[t.transformConstraint = 10] = "transformConstraint", t[t.pathConstraintPosition = 11] = "pathConstraintPosition", t[t.pathConstraintSpacing = 12] = "pathConstraintSpacing", t[t.pathConstraintMix = 13] = "pathConstraintMix", t[t.twoColor = 14] = "twoColor";
        }(a = t.TimelineType || (t.TimelineType = {}));

        var i = function () {
          function e(n) {
            if (n <= 0) throw new Error("frameCount must be > 0: " + n);
            this.curves = t.Utils.newFloatArray((n - 1) * e.BEZIER_SIZE);
          }

          return e.prototype.getFrameCount = function () {
            return this.curves.length / e.BEZIER_SIZE + 1;
          }, e.prototype.setLinear = function (t) {
            this.curves[t * e.BEZIER_SIZE] = e.LINEAR;
          }, e.prototype.setStepped = function (t) {
            this.curves[t * e.BEZIER_SIZE] = e.STEPPED;
          }, e.prototype.getCurveType = function (t) {
            var n = t * e.BEZIER_SIZE;
            if (n == this.curves.length) return e.LINEAR;
            var a = this.curves[n];
            return a == e.LINEAR ? e.LINEAR : a == e.STEPPED ? e.STEPPED : e.BEZIER;
          }, e.prototype.setCurve = function (t, n, a, r, i) {
            var s = .03 * (2 * -n + r),
                o = .03 * (2 * -a + i),
                l = .006 * (3 * (n - r) + 1),
                h = .006 * (3 * (a - i) + 1),
                u = 2 * s + l,
                c = 2 * o + h,
                d = .3 * n + s + .16666667 * l,
                f = .3 * a + o + .16666667 * h,
                p = t * e.BEZIER_SIZE,
                m = this.curves;
            m[p++] = e.BEZIER;

            for (var g = d, v = f, y = p + e.BEZIER_SIZE - 1; p < y; p += 2) {
              m[p] = g, m[p + 1] = v, d += u, f += c, u += l, c += h, g += d, v += f;
            }
          }, e.prototype.getCurvePercent = function (n, a) {
            a = t.MathUtils.clamp(a, 0, 1);
            var r = this.curves,
                i = n * e.BEZIER_SIZE,
                s = r[i];
            if (s == e.LINEAR) return a;
            if (s == e.STEPPED) return 0;

            for (var o = 0, l = ++i, h = i + e.BEZIER_SIZE - 1; i < h; i += 2) {
              if ((o = r[i]) >= a) {
                var u = void 0,
                    c = void 0;
                return i == l ? (u = 0, c = 0) : (u = r[i - 2], c = r[i - 1]), c + (r[i + 1] - c) * (a - u) / (o - u);
              }
            }

            var d = r[i - 1];
            return d + (1 - d) * (a - o) / (1 - o);
          }, e.LINEAR = 0, e.STEPPED = 1, e.BEZIER = 2, e.BEZIER_SIZE = 19, e;
        }();

        t.CurveTimeline = i;

        var s = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e << 1), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.rotate << 24) + this.boneIndex;
          }, i.prototype.setFrame = function (t, e, n) {
            t <<= 1, this.frames[t] = e, this.frames[t + i.ROTATION] = n;
          }, i.prototype.apply = function (t, n, a, s, o, l) {
            var h = this.frames,
                u = t.bones[this.boneIndex];
            if (u.active) if (a < h[0]) switch (l) {
              case e.setup:
                return void (u.rotation = u.data.rotation);

              case e.first:
                var c = u.data.rotation - u.rotation;
                u.rotation += (c - 360 * (16384 - (16384.499999999996 - c / 360 | 0))) * o;
            } else if (a >= h[h.length - i.ENTRIES]) {
              var d = h[h.length + i.PREV_ROTATION];

              switch (l) {
                case e.setup:
                  u.rotation = u.data.rotation + d * o;
                  break;

                case e.first:
                case e.replace:
                  d += u.data.rotation - u.rotation, d -= 360 * (16384 - (16384.499999999996 - d / 360 | 0));

                case e.add:
                  u.rotation += d * o;
              }
            } else {
              var f = r.binarySearch(h, a, i.ENTRIES),
                  p = h[f + i.PREV_ROTATION],
                  m = h[f],
                  g = this.getCurvePercent((f >> 1) - 1, 1 - (a - m) / (h[f + i.PREV_TIME] - m)),
                  v = h[f + i.ROTATION] - p;

              switch (v = p + (v - 360 * (16384 - (16384.499999999996 - v / 360 | 0))) * g, l) {
                case e.setup:
                  u.rotation = u.data.rotation + (v - 360 * (16384 - (16384.499999999996 - v / 360 | 0))) * o;
                  break;

                case e.first:
                case e.replace:
                  v += u.data.rotation - u.rotation;

                case e.add:
                  u.rotation += (v - 360 * (16384 - (16384.499999999996 - v / 360 | 0))) * o;
              }
            }
          }, i.ENTRIES = 2, i.PREV_TIME = -2, i.PREV_ROTATION = -1, i.ROTATION = 1, i;
        }(i);

        t.RotateTimeline = s;

        var o = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e * i.ENTRIES), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.translate << 24) + this.boneIndex;
          }, i.prototype.setFrame = function (t, e, n, a) {
            t *= i.ENTRIES, this.frames[t] = e, this.frames[t + i.X] = n, this.frames[t + i.Y] = a;
          }, i.prototype.apply = function (t, n, a, s, o, l) {
            var h = this.frames,
                u = t.bones[this.boneIndex];
            if (u.active) if (a < h[0]) switch (l) {
              case e.setup:
                return u.x = u.data.x, void (u.y = u.data.y);

              case e.first:
                u.x += (u.data.x - u.x) * o, u.y += (u.data.y - u.y) * o;
            } else {
              var c = 0,
                  d = 0;
              if (a >= h[h.length - i.ENTRIES]) c = h[h.length + i.PREV_X], d = h[h.length + i.PREV_Y];else {
                var f = r.binarySearch(h, a, i.ENTRIES);
                c = h[f + i.PREV_X], d = h[f + i.PREV_Y];
                var p = h[f],
                    m = this.getCurvePercent(f / i.ENTRIES - 1, 1 - (a - p) / (h[f + i.PREV_TIME] - p));
                c += (h[f + i.X] - c) * m, d += (h[f + i.Y] - d) * m;
              }

              switch (l) {
                case e.setup:
                  u.x = u.data.x + c * o, u.y = u.data.y + d * o;
                  break;

                case e.first:
                case e.replace:
                  u.x += (u.data.x + c - u.x) * o, u.y += (u.data.y + d - u.y) * o;
                  break;

                case e.add:
                  u.x += c * o, u.y += d * o;
              }
            }
          }, i.ENTRIES = 3, i.PREV_TIME = -3, i.PREV_X = -2, i.PREV_Y = -1, i.X = 1, i.Y = 2, i;
        }(i);

        t.TranslateTimeline = o;

        var l = function (i) {
          function s(t) {
            return i.call(this, t) || this;
          }

          return Q(s, i), s.prototype.getPropertyId = function () {
            return (a.scale << 24) + this.boneIndex;
          }, s.prototype.apply = function (a, i, o, l, h, u, c) {
            var d = this.frames,
                f = a.bones[this.boneIndex];
            if (f.active) if (o < d[0]) switch (u) {
              case e.setup:
                return f.scaleX = f.data.scaleX, void (f.scaleY = f.data.scaleY);

              case e.first:
                f.scaleX += (f.data.scaleX - f.scaleX) * h, f.scaleY += (f.data.scaleY - f.scaleY) * h;
            } else {
              var p = 0,
                  m = 0;
              if (o >= d[d.length - s.ENTRIES]) p = d[d.length + s.PREV_X] * f.data.scaleX, m = d[d.length + s.PREV_Y] * f.data.scaleY;else {
                var g = r.binarySearch(d, o, s.ENTRIES);
                p = d[g + s.PREV_X], m = d[g + s.PREV_Y];
                var v = d[g],
                    y = this.getCurvePercent(g / s.ENTRIES - 1, 1 - (o - v) / (d[g + s.PREV_TIME] - v));
                p = (p + (d[g + s.X] - p) * y) * f.data.scaleX, m = (m + (d[g + s.Y] - m) * y) * f.data.scaleY;
              }
              if (1 == h) u == e.add ? (f.scaleX += p - f.data.scaleX, f.scaleY += m - f.data.scaleY) : (f.scaleX = p, f.scaleY = m);else {
                var x = 0,
                    w = 0;
                if (c == n.mixOut) switch (u) {
                  case e.setup:
                    x = f.data.scaleX, w = f.data.scaleY, f.scaleX = x + (Math.abs(p) * t.MathUtils.signum(x) - x) * h, f.scaleY = w + (Math.abs(m) * t.MathUtils.signum(w) - w) * h;
                    break;

                  case e.first:
                  case e.replace:
                    x = f.scaleX, w = f.scaleY, f.scaleX = x + (Math.abs(p) * t.MathUtils.signum(x) - x) * h, f.scaleY = w + (Math.abs(m) * t.MathUtils.signum(w) - w) * h;
                    break;

                  case e.add:
                    x = f.scaleX, w = f.scaleY, f.scaleX = x + (Math.abs(p) * t.MathUtils.signum(x) - f.data.scaleX) * h, f.scaleY = w + (Math.abs(m) * t.MathUtils.signum(w) - f.data.scaleY) * h;
                } else switch (u) {
                  case e.setup:
                    x = Math.abs(f.data.scaleX) * t.MathUtils.signum(p), w = Math.abs(f.data.scaleY) * t.MathUtils.signum(m), f.scaleX = x + (p - x) * h, f.scaleY = w + (m - w) * h;
                    break;

                  case e.first:
                  case e.replace:
                    x = Math.abs(f.scaleX) * t.MathUtils.signum(p), w = Math.abs(f.scaleY) * t.MathUtils.signum(m), f.scaleX = x + (p - x) * h, f.scaleY = w + (m - w) * h;
                    break;

                  case e.add:
                    x = t.MathUtils.signum(p), w = t.MathUtils.signum(m), f.scaleX = Math.abs(f.scaleX) * x + (p - Math.abs(f.data.scaleX) * x) * h, f.scaleY = Math.abs(f.scaleY) * w + (m - Math.abs(f.data.scaleY) * w) * h;
                }
              }
            }
          }, s;
        }(o);

        t.ScaleTimeline = l;

        var h = function (t) {
          function n(e) {
            return t.call(this, e) || this;
          }

          return Q(n, t), n.prototype.getPropertyId = function () {
            return (a.shear << 24) + this.boneIndex;
          }, n.prototype.apply = function (t, a, i, s, o, l) {
            var h = this.frames,
                u = t.bones[this.boneIndex];
            if (u.active) if (i < h[0]) switch (l) {
              case e.setup:
                return u.shearX = u.data.shearX, void (u.shearY = u.data.shearY);

              case e.first:
                u.shearX += (u.data.shearX - u.shearX) * o, u.shearY += (u.data.shearY - u.shearY) * o;
            } else {
              var c = 0,
                  d = 0;
              if (i >= h[h.length - n.ENTRIES]) c = h[h.length + n.PREV_X], d = h[h.length + n.PREV_Y];else {
                var f = r.binarySearch(h, i, n.ENTRIES);
                c = h[f + n.PREV_X], d = h[f + n.PREV_Y];
                var p = h[f],
                    m = this.getCurvePercent(f / n.ENTRIES - 1, 1 - (i - p) / (h[f + n.PREV_TIME] - p));
                c += (h[f + n.X] - c) * m, d += (h[f + n.Y] - d) * m;
              }

              switch (l) {
                case e.setup:
                  u.shearX = u.data.shearX + c * o, u.shearY = u.data.shearY + d * o;
                  break;

                case e.first:
                case e.replace:
                  u.shearX += (u.data.shearX + c - u.shearX) * o, u.shearY += (u.data.shearY + d - u.shearY) * o;
                  break;

                case e.add:
                  u.shearX += c * o, u.shearY += d * o;
              }
            }
          }, n;
        }(o);

        t.ShearTimeline = h;

        var u = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e * i.ENTRIES), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.color << 24) + this.slotIndex;
          }, i.prototype.setFrame = function (t, e, n, a, r, s) {
            t *= i.ENTRIES, this.frames[t] = e, this.frames[t + i.R] = n, this.frames[t + i.G] = a, this.frames[t + i.B] = r, this.frames[t + i.A] = s;
          }, i.prototype.apply = function (t, n, a, s, o, l) {
            var h = t.slots[this.slotIndex];

            if (h.bone.active) {
              var u = this.frames;
              if (a < u[0]) switch (l) {
                case e.setup:
                  return void h.color.setFromColor(h.data.color);

                case e.first:
                  var c = h.color,
                      d = h.data.color;
                  c.add((d.r - c.r) * o, (d.g - c.g) * o, (d.b - c.b) * o, (d.a - c.a) * o);
              } else {
                var f = 0,
                    p = 0,
                    m = 0,
                    g = 0;

                if (a >= u[u.length - i.ENTRIES]) {
                  var v = u.length;
                  f = u[v + i.PREV_R], p = u[v + i.PREV_G], m = u[v + i.PREV_B], g = u[v + i.PREV_A];
                } else {
                  var y = r.binarySearch(u, a, i.ENTRIES);
                  f = u[y + i.PREV_R], p = u[y + i.PREV_G], m = u[y + i.PREV_B], g = u[y + i.PREV_A];
                  var x = u[y],
                      w = this.getCurvePercent(y / i.ENTRIES - 1, 1 - (a - x) / (u[y + i.PREV_TIME] - x));
                  f += (u[y + i.R] - f) * w, p += (u[y + i.G] - p) * w, m += (u[y + i.B] - m) * w, g += (u[y + i.A] - g) * w;
                }

                1 == o ? h.color.set(f, p, m, g) : (c = h.color, l == e.setup && c.setFromColor(h.data.color), c.add((f - c.r) * o, (p - c.g) * o, (m - c.b) * o, (g - c.a) * o));
              }
            }
          }, i.ENTRIES = 5, i.PREV_TIME = -5, i.PREV_R = -4, i.PREV_G = -3, i.PREV_B = -2, i.PREV_A = -1, i.R = 1, i.G = 2, i.B = 3, i.A = 4, i;
        }(i);

        t.ColorTimeline = u;

        var c = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e * i.ENTRIES), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.twoColor << 24) + this.slotIndex;
          }, i.prototype.setFrame = function (t, e, n, a, r, s, o, l, h) {
            t *= i.ENTRIES, this.frames[t] = e, this.frames[t + i.R] = n, this.frames[t + i.G] = a, this.frames[t + i.B] = r, this.frames[t + i.A] = s, this.frames[t + i.R2] = o, this.frames[t + i.G2] = l, this.frames[t + i.B2] = h;
          }, i.prototype.apply = function (t, n, a, s, o, l) {
            var h = t.slots[this.slotIndex];

            if (h.bone.active) {
              var u = this.frames;
              if (a < u[0]) switch (l) {
                case e.setup:
                  return h.color.setFromColor(h.data.color), void h.darkColor.setFromColor(h.data.darkColor);

                case e.first:
                  var c = h.color,
                      d = h.darkColor,
                      f = h.data.color,
                      p = h.data.darkColor;
                  c.add((f.r - c.r) * o, (f.g - c.g) * o, (f.b - c.b) * o, (f.a - c.a) * o), d.add((p.r - d.r) * o, (p.g - d.g) * o, (p.b - d.b) * o, 0);
              } else {
                var m = 0,
                    g = 0,
                    v = 0,
                    y = 0,
                    x = 0,
                    w = 0,
                    E = 0;

                if (a >= u[u.length - i.ENTRIES]) {
                  var M = u.length;
                  m = u[M + i.PREV_R], g = u[M + i.PREV_G], v = u[M + i.PREV_B], y = u[M + i.PREV_A], x = u[M + i.PREV_R2], w = u[M + i.PREV_G2], E = u[M + i.PREV_B2];
                } else {
                  var _ = r.binarySearch(u, a, i.ENTRIES);

                  m = u[_ + i.PREV_R], g = u[_ + i.PREV_G], v = u[_ + i.PREV_B], y = u[_ + i.PREV_A], x = u[_ + i.PREV_R2], w = u[_ + i.PREV_G2], E = u[_ + i.PREV_B2];
                  var T = u[_],
                      b = this.getCurvePercent(_ / i.ENTRIES - 1, 1 - (a - T) / (u[_ + i.PREV_TIME] - T));
                  m += (u[_ + i.R] - m) * b, g += (u[_ + i.G] - g) * b, v += (u[_ + i.B] - v) * b, y += (u[_ + i.A] - y) * b, x += (u[_ + i.R2] - x) * b, w += (u[_ + i.G2] - w) * b, E += (u[_ + i.B2] - E) * b;
                }

                1 == o ? (h.color.set(m, g, v, y), h.darkColor.set(x, w, E, 1)) : (c = h.color, d = h.darkColor, l == e.setup && (c.setFromColor(h.data.color), d.setFromColor(h.data.darkColor)), c.add((m - c.r) * o, (g - c.g) * o, (v - c.b) * o, (y - c.a) * o), d.add((x - d.r) * o, (w - d.g) * o, (E - d.b) * o, 0));
              }
            }
          }, i.ENTRIES = 8, i.PREV_TIME = -8, i.PREV_R = -7, i.PREV_G = -6, i.PREV_B = -5, i.PREV_A = -4, i.PREV_R2 = -3, i.PREV_G2 = -2, i.PREV_B2 = -1, i.R = 1, i.G = 2, i.B = 3, i.A = 4, i.R2 = 5, i.G2 = 6, i.B2 = 7, i;
        }(i);

        t.TwoColorTimeline = c;

        var d = function () {
          function i(e) {
            this.frames = t.Utils.newFloatArray(e), this.attachmentNames = new Array(e);
          }

          return i.prototype.getPropertyId = function () {
            return (a.attachment << 24) + this.slotIndex;
          }, i.prototype.getFrameCount = function () {
            return this.frames.length;
          }, i.prototype.setFrame = function (t, e, n) {
            this.frames[t] = e, this.attachmentNames[t] = n;
          }, i.prototype.apply = function (t, a, i, s, o, l, h) {
            var u = t.slots[this.slotIndex];
            if (u.bone.active) if (h != n.mixOut || l != e.setup) {
              var c = this.frames;

              if (i < c[0]) {
                if (l == e.setup || l == e.first) {
                  var d = u.data.attachmentName;
                  u.setAttachment(null == d ? null : t.getAttachment(this.slotIndex, d));
                }
              } else {
                var f;
                f = i >= c[c.length - 1] ? c.length - 1 : r.binarySearch(c, i, 1) - 1;
                var p = this.attachmentNames[f];
                t.slots[this.slotIndex].setAttachment(null == p ? null : t.getAttachment(this.slotIndex, p));
              }
            } else {
              var m = u.data.attachmentName;
              u.setAttachment(null == m ? null : t.getAttachment(this.slotIndex, m));
            }
          }, i;
        }();

        t.AttachmentTimeline = d;

        var f = null,
            p = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e), a.frameVertices = new Array(e), null == f && (f = t.Utils.newFloatArray(64)), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.deform << 27) + +this.attachment.id + this.slotIndex;
          }, i.prototype.setFrame = function (t, e, n) {
            this.frames[t] = e, this.frameVertices[t] = n;
          }, i.prototype.apply = function (n, a, i, s, o, l) {
            var h = n.slots[this.slotIndex];

            if (h.bone.active) {
              var u = h.getAttachment();

              if (u instanceof t.VertexAttachment && u.deformAttachment == this.attachment) {
                var c = h.deform;
                0 == c.length && (l = e.setup);
                var d = this.frameVertices,
                    f = d[0].length,
                    p = this.frames;

                if (i < p[0]) {
                  var m = u;

                  switch (l) {
                    case e.setup:
                      return void (c.length = 0);

                    case e.first:
                      if (1 == o) {
                        c.length = 0;
                        break;
                      }

                      var g = t.Utils.setArraySize(c, f);
                      if (null == m.bones) for (var v = m.vertices, y = 0; y < f; y++) {
                        g[y] += (v[y] - g[y]) * o;
                      } else for (o = 1 - o, y = 0; y < f; y++) {
                        g[y] *= o;
                      }
                  }
                } else {
                  var x = t.Utils.setArraySize(c, f);

                  if (i >= p[p.length - 1]) {
                    var w = d[p.length - 1];
                    if (1 == o) {
                      if (l == e.add) {
                        if (null == (m = u).bones) {
                          v = m.vertices;

                          for (var E = 0; E < f; E++) {
                            x[E] += w[E] - v[E];
                          }
                        } else for (var M = 0; M < f; M++) {
                          x[M] += w[M];
                        }
                      } else t.Utils.arrayCopy(w, 0, x, 0, f);
                    } else switch (l) {
                      case e.setup:
                        var _ = u;

                        if (null == _.bones) {
                          v = _.vertices;

                          for (var T = 0; T < f; T++) {
                            var b = v[T];
                            x[T] = b + (w[T] - b) * o;
                          }
                        } else for (var A = 0; A < f; A++) {
                          x[A] = w[A] * o;
                        }

                        break;

                      case e.first:
                      case e.replace:
                        for (var C = 0; C < f; C++) {
                          x[C] += (w[C] - x[C]) * o;
                        }

                      case e.add:
                        if (null == (m = u).bones) {
                          v = m.vertices;

                          for (var S = 0; S < f; S++) {
                            x[S] += (w[S] - v[S]) * o;
                          }
                        } else for (var k = 0; k < f; k++) {
                          x[k] += w[k] * o;
                        }

                    }
                  } else {
                    var I = r.binarySearch(p, i),
                        R = d[I - 1],
                        P = d[I],
                        D = p[I],
                        V = this.getCurvePercent(I - 1, 1 - (i - D) / (p[I - 1] - D));
                    if (1 == o) {
                      if (l == e.add) {
                        if (null == (m = u).bones) {
                          v = m.vertices;

                          for (var N = 0; N < f; N++) {
                            var F = R[N];
                            x[N] += F + (P[N] - F) * V - v[N];
                          }
                        } else for (var O = 0; O < f; O++) {
                          F = R[O], x[O] += F + (P[O] - F) * V;
                        }
                      } else for (var L = 0; L < f; L++) {
                        F = R[L], x[L] = F + (P[L] - F) * V;
                      }
                    } else switch (l) {
                      case e.setup:
                        var U = u;

                        if (null == U.bones) {
                          v = U.vertices;

                          for (var B = 0; B < f; B++) {
                            F = R[B], b = v[B], x[B] = b + (F + (P[B] - F) * V - b) * o;
                          }
                        } else for (var Y = 0; Y < f; Y++) {
                          F = R[Y], x[Y] = (F + (P[Y] - F) * V) * o;
                        }

                        break;

                      case e.first:
                      case e.replace:
                        for (var X = 0; X < f; X++) {
                          F = R[X], x[X] += (F + (P[X] - F) * V - x[X]) * o;
                        }

                        break;

                      case e.add:
                        if (null == (m = u).bones) {
                          v = m.vertices;

                          for (var W = 0; W < f; W++) {
                            F = R[W], x[W] += (F + (P[W] - F) * V - v[W]) * o;
                          }
                        } else for (var q = 0; q < f; q++) {
                          F = R[q], x[q] += (F + (P[q] - F) * V) * o;
                        }

                    }
                  }
                }
              }
            }
          }, i;
        }(i);

        t.DeformTimeline = p;

        var m = function () {
          function e(e) {
            this.frames = t.Utils.newFloatArray(e), this.events = new Array(e);
          }

          return e.prototype.getPropertyId = function () {
            return a.event << 24;
          }, e.prototype.getFrameCount = function () {
            return this.frames.length;
          }, e.prototype.setFrame = function (t, e) {
            this.frames[t] = e.time, this.events[t] = e;
          }, e.prototype.apply = function (t, e, n, a, i, s, o) {
            if (null != a) {
              var l = this.frames,
                  h = this.frames.length;
              if (e > n) this.apply(t, e, Number.MAX_VALUE, a, i, s, o), e = -1;else if (e >= l[h - 1]) return;

              if (!(n < l[0])) {
                var u = 0;
                if (e < l[0]) u = 0;else for (var c = l[u = r.binarySearch(l, e)]; u > 0 && l[u - 1] == c;) {
                  u--;
                }

                for (; u < h && n >= l[u]; u++) {
                  a.push(this.events[u]);
                }
              }
            }
          }, e;
        }();

        t.EventTimeline = m;

        var g = function () {
          function i(e) {
            this.frames = t.Utils.newFloatArray(e), this.drawOrders = new Array(e);
          }

          return i.prototype.getPropertyId = function () {
            return a.drawOrder << 24;
          }, i.prototype.getFrameCount = function () {
            return this.frames.length;
          }, i.prototype.setFrame = function (t, e, n) {
            this.frames[t] = e, this.drawOrders[t] = n;
          }, i.prototype.apply = function (a, i, s, o, l, h, u) {
            var c = a.drawOrder,
                d = a.slots;

            if (u != n.mixOut || h != e.setup) {
              var f = this.frames;
              if (s < f[0]) h != e.setup && h != e.first || t.Utils.arrayCopy(a.slots, 0, a.drawOrder, 0, a.slots.length);else {
                var p;
                p = s >= f[f.length - 1] ? f.length - 1 : r.binarySearch(f, s) - 1;
                var m = this.drawOrders[p];
                if (null == m) t.Utils.arrayCopy(d, 0, c, 0, d.length);else for (var g = 0, v = m.length; g < v; g++) {
                  c[g] = d[m[g]];
                }
              }
            } else t.Utils.arrayCopy(a.slots, 0, a.drawOrder, 0, a.slots.length);
          }, i;
        }();

        t.DrawOrderTimeline = g;

        var v = function (i) {
          function s(e) {
            var n = i.call(this, e) || this;
            return n.frames = t.Utils.newFloatArray(e * s.ENTRIES), n;
          }

          return Q(s, i), s.prototype.getPropertyId = function () {
            return (a.ikConstraint << 24) + this.ikConstraintIndex;
          }, s.prototype.setFrame = function (t, e, n, a, r, i, o) {
            t *= s.ENTRIES, this.frames[t] = e, this.frames[t + s.MIX] = n, this.frames[t + s.SOFTNESS] = a, this.frames[t + s.BEND_DIRECTION] = r, this.frames[t + s.COMPRESS] = i ? 1 : 0, this.frames[t + s.STRETCH] = o ? 1 : 0;
          }, s.prototype.apply = function (t, a, i, o, l, h, u) {
            var c = this.frames,
                d = t.ikConstraints[this.ikConstraintIndex];
            if (d.active) if (i < c[0]) switch (h) {
              case e.setup:
                return d.mix = d.data.mix, d.softness = d.data.softness, d.bendDirection = d.data.bendDirection, d.compress = d.data.compress, void (d.stretch = d.data.stretch);

              case e.first:
                d.mix += (d.data.mix - d.mix) * l, d.softness += (d.data.softness - d.softness) * l, d.bendDirection = d.data.bendDirection, d.compress = d.data.compress, d.stretch = d.data.stretch;
            } else if (i >= c[c.length - s.ENTRIES]) h == e.setup ? (d.mix = d.data.mix + (c[c.length + s.PREV_MIX] - d.data.mix) * l, d.softness = d.data.softness + (c[c.length + s.PREV_SOFTNESS] - d.data.softness) * l, u == n.mixOut ? (d.bendDirection = d.data.bendDirection, d.compress = d.data.compress, d.stretch = d.data.stretch) : (d.bendDirection = c[c.length + s.PREV_BEND_DIRECTION], d.compress = 0 != c[c.length + s.PREV_COMPRESS], d.stretch = 0 != c[c.length + s.PREV_STRETCH])) : (d.mix += (c[c.length + s.PREV_MIX] - d.mix) * l, d.softness += (c[c.length + s.PREV_SOFTNESS] - d.softness) * l, u == n.mixIn && (d.bendDirection = c[c.length + s.PREV_BEND_DIRECTION], d.compress = 0 != c[c.length + s.PREV_COMPRESS], d.stretch = 0 != c[c.length + s.PREV_STRETCH]));else {
              var f = r.binarySearch(c, i, s.ENTRIES),
                  p = c[f + s.PREV_MIX],
                  m = c[f + s.PREV_SOFTNESS],
                  g = c[f],
                  v = this.getCurvePercent(f / s.ENTRIES - 1, 1 - (i - g) / (c[f + s.PREV_TIME] - g));
              h == e.setup ? (d.mix = d.data.mix + (p + (c[f + s.MIX] - p) * v - d.data.mix) * l, d.softness = d.data.softness + (m + (c[f + s.SOFTNESS] - m) * v - d.data.softness) * l, u == n.mixOut ? (d.bendDirection = d.data.bendDirection, d.compress = d.data.compress, d.stretch = d.data.stretch) : (d.bendDirection = c[f + s.PREV_BEND_DIRECTION], d.compress = 0 != c[f + s.PREV_COMPRESS], d.stretch = 0 != c[f + s.PREV_STRETCH])) : (d.mix += (p + (c[f + s.MIX] - p) * v - d.mix) * l, d.softness += (m + (c[f + s.SOFTNESS] - m) * v - d.softness) * l, u == n.mixIn && (d.bendDirection = c[f + s.PREV_BEND_DIRECTION], d.compress = 0 != c[f + s.PREV_COMPRESS], d.stretch = 0 != c[f + s.PREV_STRETCH]));
            }
          }, s.ENTRIES = 6, s.PREV_TIME = -6, s.PREV_MIX = -5, s.PREV_SOFTNESS = -4, s.PREV_BEND_DIRECTION = -3, s.PREV_COMPRESS = -2, s.PREV_STRETCH = -1, s.MIX = 1, s.SOFTNESS = 2, s.BEND_DIRECTION = 3, s.COMPRESS = 4, s.STRETCH = 5, s;
        }(i);

        t.IkConstraintTimeline = v;

        var y = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e * i.ENTRIES), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.transformConstraint << 24) + this.transformConstraintIndex;
          }, i.prototype.setFrame = function (t, e, n, a, r, s) {
            t *= i.ENTRIES, this.frames[t] = e, this.frames[t + i.ROTATE] = n, this.frames[t + i.TRANSLATE] = a, this.frames[t + i.SCALE] = r, this.frames[t + i.SHEAR] = s;
          }, i.prototype.apply = function (t, n, a, s, o, l) {
            var h = this.frames,
                u = t.transformConstraints[this.transformConstraintIndex];
            if (u.active) if (a < h[0]) {
              var c = u.data;

              switch (l) {
                case e.setup:
                  return u.rotateMix = c.rotateMix, u.translateMix = c.translateMix, u.scaleMix = c.scaleMix, void (u.shearMix = c.shearMix);

                case e.first:
                  u.rotateMix += (c.rotateMix - u.rotateMix) * o, u.translateMix += (c.translateMix - u.translateMix) * o, u.scaleMix += (c.scaleMix - u.scaleMix) * o, u.shearMix += (c.shearMix - u.shearMix) * o;
              }
            } else {
              var d = 0,
                  f = 0,
                  p = 0,
                  m = 0;

              if (a >= h[h.length - i.ENTRIES]) {
                var g = h.length;
                d = h[g + i.PREV_ROTATE], f = h[g + i.PREV_TRANSLATE], p = h[g + i.PREV_SCALE], m = h[g + i.PREV_SHEAR];
              } else {
                var v = r.binarySearch(h, a, i.ENTRIES);
                d = h[v + i.PREV_ROTATE], f = h[v + i.PREV_TRANSLATE], p = h[v + i.PREV_SCALE], m = h[v + i.PREV_SHEAR];
                var y = h[v],
                    x = this.getCurvePercent(v / i.ENTRIES - 1, 1 - (a - y) / (h[v + i.PREV_TIME] - y));
                d += (h[v + i.ROTATE] - d) * x, f += (h[v + i.TRANSLATE] - f) * x, p += (h[v + i.SCALE] - p) * x, m += (h[v + i.SHEAR] - m) * x;
              }

              l == e.setup ? (c = u.data, u.rotateMix = c.rotateMix + (d - c.rotateMix) * o, u.translateMix = c.translateMix + (f - c.translateMix) * o, u.scaleMix = c.scaleMix + (p - c.scaleMix) * o, u.shearMix = c.shearMix + (m - c.shearMix) * o) : (u.rotateMix += (d - u.rotateMix) * o, u.translateMix += (f - u.translateMix) * o, u.scaleMix += (p - u.scaleMix) * o, u.shearMix += (m - u.shearMix) * o);
            }
          }, i.ENTRIES = 5, i.PREV_TIME = -5, i.PREV_ROTATE = -4, i.PREV_TRANSLATE = -3, i.PREV_SCALE = -2, i.PREV_SHEAR = -1, i.ROTATE = 1, i.TRANSLATE = 2, i.SCALE = 3, i.SHEAR = 4, i;
        }(i);

        t.TransformConstraintTimeline = y;

        var x = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e * i.ENTRIES), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.pathConstraintPosition << 24) + this.pathConstraintIndex;
          }, i.prototype.setFrame = function (t, e, n) {
            t *= i.ENTRIES, this.frames[t] = e, this.frames[t + i.VALUE] = n;
          }, i.prototype.apply = function (t, n, a, s, o, l) {
            var h = this.frames,
                u = t.pathConstraints[this.pathConstraintIndex];
            if (u.active) if (a < h[0]) switch (l) {
              case e.setup:
                return void (u.position = u.data.position);

              case e.first:
                u.position += (u.data.position - u.position) * o;
            } else {
              var c = 0;
              if (a >= h[h.length - i.ENTRIES]) c = h[h.length + i.PREV_VALUE];else {
                var d = r.binarySearch(h, a, i.ENTRIES);
                c = h[d + i.PREV_VALUE];
                var f = h[d],
                    p = this.getCurvePercent(d / i.ENTRIES - 1, 1 - (a - f) / (h[d + i.PREV_TIME] - f));
                c += (h[d + i.VALUE] - c) * p;
              }
              l == e.setup ? u.position = u.data.position + (c - u.data.position) * o : u.position += (c - u.position) * o;
            }
          }, i.ENTRIES = 2, i.PREV_TIME = -2, i.PREV_VALUE = -1, i.VALUE = 1, i;
        }(i);

        t.PathConstraintPositionTimeline = x;

        var w = function (t) {
          function n(e) {
            return t.call(this, e) || this;
          }

          return Q(n, t), n.prototype.getPropertyId = function () {
            return (a.pathConstraintSpacing << 24) + this.pathConstraintIndex;
          }, n.prototype.apply = function (t, a, i, s, o, l) {
            var h = this.frames,
                u = t.pathConstraints[this.pathConstraintIndex];
            if (u.active) if (i < h[0]) switch (l) {
              case e.setup:
                return void (u.spacing = u.data.spacing);

              case e.first:
                u.spacing += (u.data.spacing - u.spacing) * o;
            } else {
              var c = 0;
              if (i >= h[h.length - n.ENTRIES]) c = h[h.length + n.PREV_VALUE];else {
                var d = r.binarySearch(h, i, n.ENTRIES);
                c = h[d + n.PREV_VALUE];
                var f = h[d],
                    p = this.getCurvePercent(d / n.ENTRIES - 1, 1 - (i - f) / (h[d + n.PREV_TIME] - f));
                c += (h[d + n.VALUE] - c) * p;
              }
              l == e.setup ? u.spacing = u.data.spacing + (c - u.data.spacing) * o : u.spacing += (c - u.spacing) * o;
            }
          }, n;
        }(x);

        t.PathConstraintSpacingTimeline = w;

        var E = function (n) {
          function i(e) {
            var a = n.call(this, e) || this;
            return a.frames = t.Utils.newFloatArray(e * i.ENTRIES), a;
          }

          return Q(i, n), i.prototype.getPropertyId = function () {
            return (a.pathConstraintMix << 24) + this.pathConstraintIndex;
          }, i.prototype.setFrame = function (t, e, n, a) {
            t *= i.ENTRIES, this.frames[t] = e, this.frames[t + i.ROTATE] = n, this.frames[t + i.TRANSLATE] = a;
          }, i.prototype.apply = function (t, n, a, s, o, l) {
            var h = this.frames,
                u = t.pathConstraints[this.pathConstraintIndex];
            if (u.active) if (a < h[0]) switch (l) {
              case e.setup:
                return u.rotateMix = u.data.rotateMix, void (u.translateMix = u.data.translateMix);

              case e.first:
                u.rotateMix += (u.data.rotateMix - u.rotateMix) * o, u.translateMix += (u.data.translateMix - u.translateMix) * o;
            } else {
              var c = 0,
                  d = 0;
              if (a >= h[h.length - i.ENTRIES]) c = h[h.length + i.PREV_ROTATE], d = h[h.length + i.PREV_TRANSLATE];else {
                var f = r.binarySearch(h, a, i.ENTRIES);
                c = h[f + i.PREV_ROTATE], d = h[f + i.PREV_TRANSLATE];
                var p = h[f],
                    m = this.getCurvePercent(f / i.ENTRIES - 1, 1 - (a - p) / (h[f + i.PREV_TIME] - p));
                c += (h[f + i.ROTATE] - c) * m, d += (h[f + i.TRANSLATE] - d) * m;
              }
              l == e.setup ? (u.rotateMix = u.data.rotateMix + (c - u.data.rotateMix) * o, u.translateMix = u.data.translateMix + (d - u.data.translateMix) * o) : (u.rotateMix += (c - u.rotateMix) * o, u.translateMix += (d - u.translateMix) * o);
            }
          }, i.ENTRIES = 3, i.PREV_TIME = -3, i.PREV_ROTATE = -2, i.PREV_TRANSLATE = -1, i.ROTATE = 1, i.TRANSLATE = 2, i;
        }(i);

        t.PathConstraintMixTimeline = E;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(e) {
            this.tracks = new Array(), this.timeScale = 1, this.events = new Array(), this.listeners = new Array(), this.queue = new r(this), this.propertyIDs = new t.IntSet(), this.animationsChanged = !1, this.trackEntryPool = new t.Pool(function () {
              return new n();
            }), this.data = e;
          }

          return e.prototype.update = function (t) {
            t *= this.timeScale;

            for (var e = this.tracks, n = 0, a = e.length; n < a; n++) {
              var r = e[n];

              if (null != r) {
                r.animationLast = r.nextAnimationLast, r.trackLast = r.nextTrackLast;
                var i = t * r.timeScale;

                if (r.delay > 0) {
                  if (r.delay -= i, r.delay > 0) continue;
                  i = -r.delay, r.delay = 0;
                }

                var s = r.next;

                if (null != s) {
                  var o = r.trackLast - s.delay;

                  if (o >= 0) {
                    for (s.delay = 0, s.trackTime += 0 == r.timeScale ? 0 : (o / r.timeScale + t) * s.timeScale, r.trackTime += i, this.setCurrent(n, s, !0); null != s.mixingFrom;) {
                      s.mixTime += t, s = s.mixingFrom;
                    }

                    continue;
                  }
                } else if (r.trackLast >= r.trackEnd && null == r.mixingFrom) {
                  e[n] = null, this.queue.end(r), this.disposeNext(r);
                  continue;
                }

                if (null != r.mixingFrom && this.updateMixingFrom(r, t)) {
                  var l = r.mixingFrom;

                  for (r.mixingFrom = null, null != l && (l.mixingTo = null); null != l;) {
                    this.queue.end(l), l = l.mixingFrom;
                  }
                }

                r.trackTime += i;
              }
            }

            this.queue.drain();
          }, e.prototype.updateMixingFrom = function (t, e) {
            var n = t.mixingFrom;
            if (null == n) return !0;
            var a = this.updateMixingFrom(n, e);
            return n.animationLast = n.nextAnimationLast, n.trackLast = n.nextTrackLast, t.mixTime > 0 && t.mixTime >= t.mixDuration ? (0 != n.totalAlpha && 0 != t.mixDuration || (t.mixingFrom = n.mixingFrom, null != n.mixingFrom && (n.mixingFrom.mixingTo = t), t.interruptAlpha = n.interruptAlpha, this.queue.end(n)), a) : (n.trackTime += e * n.timeScale, t.mixTime += e, !1);
          }, e.prototype.apply = function (n) {
            if (null == n) throw new Error("skeleton cannot be null.");
            this.animationsChanged && this._animationsChanged();

            for (var a = this.events, r = this.tracks, i = !1, s = 0, o = r.length; s < o; s++) {
              var l = r[s];

              if (!(null == l || l.delay > 0)) {
                i = !0;
                var h = 0 == s ? t.MixBlend.first : l.mixBlend,
                    u = l.alpha;
                null != l.mixingFrom ? u *= this.applyMixingFrom(l, n, h) : l.trackTime >= l.trackEnd && null == l.next && (u = 0);
                var c = l.animationLast,
                    d = l.getAnimationTime(),
                    f = l.animation.timelines.length,
                    p = l.animation.timelines;
                if (0 == s && 1 == u || h == t.MixBlend.add) for (var m = 0; m < f; m++) {
                  t.Utils.webkit602BugfixHelper(u, h), p[m].apply(n, c, d, a, u, h, t.MixDirection.mixIn);
                } else {
                  var g = l.timelineMode,
                      v = 0 == l.timelinesRotation.length;
                  v && t.Utils.setArraySize(l.timelinesRotation, f << 1, null);
                  var y = l.timelinesRotation;

                  for (m = 0; m < f; m++) {
                    var x = p[m],
                        w = (g[m] & e.NOT_LAST - 1) == e.SUBSEQUENT ? h : t.MixBlend.setup;
                    x instanceof t.RotateTimeline ? this.applyRotateTimeline(x, n, d, u, w, y, m << 1, v) : (t.Utils.webkit602BugfixHelper(u, h), x.apply(n, c, d, a, u, w, t.MixDirection.mixIn));
                  }
                }
                this.queueEvents(l, d), a.length = 0, l.nextAnimationLast = d, l.nextTrackLast = l.trackTime;
              }
            }

            return this.queue.drain(), i;
          }, e.prototype.applyMixingFrom = function (n, a, r) {
            var i = n.mixingFrom;
            null != i.mixingFrom && this.applyMixingFrom(i, a, r);
            var s = 0;
            0 == n.mixDuration ? (s = 1, r == t.MixBlend.first && (r = t.MixBlend.setup)) : ((s = n.mixTime / n.mixDuration) > 1 && (s = 1), r != t.MixBlend.first && (r = i.mixBlend));
            var o = s < i.eventThreshold ? this.events : null,
                l = s < i.attachmentThreshold,
                h = s < i.drawOrderThreshold,
                u = i.animationLast,
                c = i.getAnimationTime(),
                d = i.animation.timelines.length,
                f = i.animation.timelines,
                p = i.alpha * n.interruptAlpha,
                m = p * (1 - s);
            if (r == t.MixBlend.add) for (var g = 0; g < d; g++) {
              f[g].apply(a, u, c, o, m, r, t.MixDirection.mixOut);
            } else {
              var v = i.timelineMode,
                  y = i.timelineHoldMix,
                  x = 0 == i.timelinesRotation.length;
              x && t.Utils.setArraySize(i.timelinesRotation, d << 1, null);
              var w = i.timelinesRotation;

              for (i.totalAlpha = 0, g = 0; g < d; g++) {
                var E = f[g],
                    M = t.MixDirection.mixOut,
                    _ = void 0,
                    T = 0;

                switch (v[g] & e.NOT_LAST - 1) {
                  case e.SUBSEQUENT:
                    if (_ = r, !l && E instanceof t.AttachmentTimeline) {
                      if ((v[g] & e.NOT_LAST) == e.NOT_LAST) continue;
                      _ = t.MixBlend.setup;
                    }

                    if (!h && E instanceof t.DrawOrderTimeline) continue;
                    T = m;
                    break;

                  case e.FIRST:
                    _ = t.MixBlend.setup, T = m;
                    break;

                  case e.HOLD:
                    _ = t.MixBlend.setup, T = p;
                    break;

                  default:
                    _ = t.MixBlend.setup;
                    var b = y[g];
                    T = p * Math.max(0, 1 - b.mixTime / b.mixDuration);
                }

                i.totalAlpha += T, E instanceof t.RotateTimeline ? this.applyRotateTimeline(E, a, c, T, _, w, g << 1, x) : (t.Utils.webkit602BugfixHelper(T, r), _ == t.MixBlend.setup && (E instanceof t.AttachmentTimeline ? (l || (v[g] & e.NOT_LAST) == e.NOT_LAST) && (M = t.MixDirection.mixIn) : E instanceof t.DrawOrderTimeline && h && (M = t.MixDirection.mixIn)), E.apply(a, u, c, o, T, _, M));
              }
            }
            return n.mixDuration > 0 && this.queueEvents(i, c), this.events.length = 0, i.nextAnimationLast = c, i.nextTrackLast = i.trackTime, s;
          }, e.prototype.applyRotateTimeline = function (e, n, a, r, i, s, o, l) {
            if (l && (s[o] = 0), 1 != r) {
              var h = e,
                  u = h.frames,
                  c = n.bones[h.boneIndex];

              if (c.active) {
                var d = 0,
                    f = 0;
                if (a < u[0]) switch (i) {
                  case t.MixBlend.setup:
                    c.rotation = c.data.rotation;

                  default:
                    return;

                  case t.MixBlend.first:
                    d = c.rotation, f = c.data.rotation;
                } else if (d = i == t.MixBlend.setup ? c.data.rotation : c.rotation, a >= u[u.length - t.RotateTimeline.ENTRIES]) f = c.data.rotation + u[u.length + t.RotateTimeline.PREV_ROTATION];else {
                  var p = t.Animation.binarySearch(u, a, t.RotateTimeline.ENTRIES),
                      m = u[p + t.RotateTimeline.PREV_ROTATION],
                      g = u[p],
                      v = h.getCurvePercent((p >> 1) - 1, 1 - (a - g) / (u[p + t.RotateTimeline.PREV_TIME] - g));
                  f = u[p + t.RotateTimeline.ROTATION] - m, f = m + (f -= 360 * (16384 - (16384.499999999996 - f / 360 | 0))) * v + c.data.rotation, f -= 360 * (16384 - (16384.499999999996 - f / 360 | 0));
                }
                var y = 0,
                    x = f - d;
                if (0 == (x -= 360 * (16384 - (16384.499999999996 - x / 360 | 0)))) y = s[o];else {
                  var w = 0,
                      E = 0;
                  l ? (w = 0, E = x) : (w = s[o], E = s[o + 1]);

                  var M = x > 0,
                      _ = w >= 0;

                  t.MathUtils.signum(E) != t.MathUtils.signum(x) && Math.abs(E) <= 90 && (Math.abs(w) > 180 && (w += 360 * t.MathUtils.signum(w)), _ = M), y = x + w - w % 360, _ != M && (y += 360 * t.MathUtils.signum(w)), s[o] = y;
                }
                s[o + 1] = x, d += y * r, c.rotation = d - 360 * (16384 - (16384.499999999996 - d / 360 | 0));
              }
            } else e.apply(n, 0, a, null, 1, i, t.MixDirection.mixIn);
          }, e.prototype.queueEvents = function (t, e) {
            for (var n = t.animationStart, a = t.animationEnd, r = a - n, i = t.trackLast % r, s = this.events, o = 0, l = s.length; o < l; o++) {
              var h = s[o];
              if (h.time < i) break;
              h.time > a || this.queue.event(t, h);
            }

            for ((t.loop ? 0 == r || i > t.trackTime % r : e >= a && t.animationLast < a) && this.queue.complete(t); o < l; o++) {
              s[o].time < n || this.queue.event(t, s[o]);
            }
          }, e.prototype.clearTracks = function () {
            var t = this.queue.drainDisabled;
            this.queue.drainDisabled = !0;

            for (var e = 0, n = this.tracks.length; e < n; e++) {
              this.clearTrack(e);
            }

            this.tracks.length = 0, this.queue.drainDisabled = t, this.queue.drain();
          }, e.prototype.clearTrack = function (t) {
            if (!(t >= this.tracks.length)) {
              var e = this.tracks[t];

              if (null != e) {
                this.queue.end(e), this.disposeNext(e);

                for (var n = e;;) {
                  var a = n.mixingFrom;
                  if (null == a) break;
                  this.queue.end(a), n.mixingFrom = null, n.mixingTo = null, n = a;
                }

                this.tracks[e.trackIndex] = null, this.queue.drain();
              }
            }
          }, e.prototype.setCurrent = function (t, e, n) {
            var a = this.expandToIndex(t);
            this.tracks[t] = e, null != a && (n && this.queue.interrupt(a), e.mixingFrom = a, a.mixingTo = e, e.mixTime = 0, null != a.mixingFrom && a.mixDuration > 0 && (e.interruptAlpha *= Math.min(1, a.mixTime / a.mixDuration)), a.timelinesRotation.length = 0), this.queue.start(e);
          }, e.prototype.setAnimation = function (t, e, n) {
            var a = this.data.skeletonData.findAnimation(e);
            if (null == a) throw new Error("Animation not found: " + e);
            return this.setAnimationWith(t, a, n);
          }, e.prototype.setAnimationWith = function (t, e, n) {
            if (null == e) throw new Error("animation cannot be null.");
            var a = !0,
                r = this.expandToIndex(t);
            null != r && (-1 == r.nextTrackLast ? (this.tracks[t] = r.mixingFrom, this.queue.interrupt(r), this.queue.end(r), this.disposeNext(r), r = r.mixingFrom, a = !1) : this.disposeNext(r));
            var i = this.trackEntry(t, e, n, r);
            return this.setCurrent(t, i, a), this.queue.drain(), i;
          }, e.prototype.addAnimation = function (t, e, n, a) {
            var r = this.data.skeletonData.findAnimation(e);
            if (null == r) throw new Error("Animation not found: " + e);
            return this.addAnimationWith(t, r, n, a);
          }, e.prototype.addAnimationWith = function (t, e, n, a) {
            if (null == e) throw new Error("animation cannot be null.");
            var r = this.expandToIndex(t);
            if (null != r) for (; null != r.next;) {
              r = r.next;
            }
            var i = this.trackEntry(t, e, n, r);
            if (null == r) this.setCurrent(t, i, !0), this.queue.drain();else if (r.next = i, a <= 0) {
              var s = r.animationEnd - r.animationStart;
              0 != s ? (r.loop ? a += s * (1 + (r.trackTime / s | 0)) : a += Math.max(s, r.trackTime), a -= this.data.getMix(r.animation, e)) : a = r.trackTime;
            }
            return i.delay = a, i;
          }, e.prototype.setEmptyAnimation = function (t, n) {
            var a = this.setAnimationWith(t, e.emptyAnimation, !1);
            return a.mixDuration = n, a.trackEnd = n, a;
          }, e.prototype.addEmptyAnimation = function (t, n, a) {
            a <= 0 && (a -= n);
            var r = this.addAnimationWith(t, e.emptyAnimation, !1, a);
            return r.mixDuration = n, r.trackEnd = n, r;
          }, e.prototype.setEmptyAnimations = function (t) {
            var e = this.queue.drainDisabled;
            this.queue.drainDisabled = !0;

            for (var n = 0, a = this.tracks.length; n < a; n++) {
              var r = this.tracks[n];
              null != r && this.setEmptyAnimation(r.trackIndex, t);
            }

            this.queue.drainDisabled = e, this.queue.drain();
          }, e.prototype.expandToIndex = function (e) {
            return e < this.tracks.length ? this.tracks[e] : (t.Utils.ensureArrayCapacity(this.tracks, e + 1, null), this.tracks.length = e + 1, null);
          }, e.prototype.trackEntry = function (t, e, n, a) {
            var r = this.trackEntryPool.obtain();
            return r.trackIndex = t, r.animation = e, r.loop = n, r.holdPrevious = !1, r.eventThreshold = 0, r.attachmentThreshold = 0, r.drawOrderThreshold = 0, r.animationStart = 0, r.animationEnd = e.duration, r.animationLast = -1, r.nextAnimationLast = -1, r.delay = 0, r.trackTime = 0, r.trackLast = -1, r.nextTrackLast = -1, r.trackEnd = Number.MAX_VALUE, r.timeScale = 1, r.alpha = 1, r.interruptAlpha = 1, r.mixTime = 0, r.mixDuration = null == a ? 0 : this.data.getMix(a.animation, e), r;
          }, e.prototype.disposeNext = function (t) {
            for (var e = t.next; null != e;) {
              this.queue.dispose(e), e = e.next;
            }

            t.next = null;
          }, e.prototype._animationsChanged = function () {
            this.animationsChanged = !1, this.propertyIDs.clear();

            for (var e = 0, n = this.tracks.length; e < n; e++) {
              if (null != (a = this.tracks[e])) {
                for (; null != a.mixingFrom;) {
                  a = a.mixingFrom;
                }

                do {
                  null != a.mixingFrom && a.mixBlend == t.MixBlend.add || this.computeHold(a), a = a.mixingTo;
                } while (null != a);
              }
            }

            for (this.propertyIDs.clear(), e = this.tracks.length - 1; e >= 0; e--) {
              for (var a = this.tracks[e]; null != a;) {
                this.computeNotLast(a), a = a.mixingFrom;
              }
            }
          }, e.prototype.computeHold = function (n) {
            var a = n.mixingTo,
                r = n.animation.timelines,
                i = n.animation.timelines.length,
                s = t.Utils.setArraySize(n.timelineMode, i);
            n.timelineHoldMix.length = 0;
            var o = t.Utils.setArraySize(n.timelineHoldMix, i),
                l = this.propertyIDs;
            if (null != a && a.holdPrevious) for (var h = 0; h < i; h++) {
              l.add(r[h].getPropertyId()), s[h] = e.HOLD;
            } else t: for (h = 0; h < i; h++) {
              var u = r[h],
                  c = u.getPropertyId();
              if (l.add(c)) {
                if (null == a || u instanceof t.AttachmentTimeline || u instanceof t.DrawOrderTimeline || u instanceof t.EventTimeline || !a.animation.hasTimeline(c)) s[h] = e.FIRST;else {
                  for (var d = a.mixingTo; null != d; d = d.mixingTo) {
                    if (!d.animation.hasTimeline(c)) {
                      if (n.mixDuration > 0) {
                        s[h] = e.HOLD_MIX, o[h] = d;
                        continue t;
                      }

                      break;
                    }
                  }

                  s[h] = e.HOLD;
                }
              } else s[h] = e.SUBSEQUENT;
            }
          }, e.prototype.computeNotLast = function (n) {
            for (var a = n.animation.timelines, r = n.animation.timelines.length, i = n.timelineMode, s = this.propertyIDs, o = 0; o < r; o++) {
              if (a[o] instanceof t.AttachmentTimeline) {
                var l = a[o];
                s.add(l.slotIndex) || (i[o] |= e.NOT_LAST);
              }
            }
          }, e.prototype.getCurrent = function (t) {
            return t >= this.tracks.length ? null : this.tracks[t];
          }, e.prototype.addListener = function (t) {
            if (null == t) throw new Error("listener cannot be null.");
            this.listeners.push(t);
          }, e.prototype.removeListener = function (t) {
            var e = this.listeners.indexOf(t);
            e >= 0 && this.listeners.splice(e, 1);
          }, e.prototype.clearListeners = function () {
            this.listeners.length = 0;
          }, e.prototype.clearListenerNotifications = function () {
            this.queue.clear();
          }, e.emptyAnimation = new t.Animation("<empty>", [], 0), e.SUBSEQUENT = 0, e.FIRST = 1, e.HOLD = 2, e.HOLD_MIX = 3, e.NOT_LAST = 4, e;
        }();

        t.AnimationState = e;

        var n = function () {
          function e() {
            this.mixBlend = t.MixBlend.replace, this.timelineMode = new Array(), this.timelineHoldMix = new Array(), this.timelinesRotation = new Array();
          }

          return e.prototype.reset = function () {
            this.next = null, this.mixingFrom = null, this.mixingTo = null, this.animation = null, this.listener = null, this.timelineMode.length = 0, this.timelineHoldMix.length = 0, this.timelinesRotation.length = 0;
          }, e.prototype.getAnimationTime = function () {
            if (this.loop) {
              var t = this.animationEnd - this.animationStart;
              return 0 == t ? this.animationStart : this.trackTime % t + this.animationStart;
            }

            return Math.min(this.trackTime + this.animationStart, this.animationEnd);
          }, e.prototype.setAnimationLast = function (t) {
            this.animationLast = t, this.nextAnimationLast = t;
          }, e.prototype.isComplete = function () {
            return this.trackTime >= this.animationEnd - this.animationStart;
          }, e.prototype.resetRotationDirections = function () {
            this.timelinesRotation.length = 0;
          }, e;
        }();

        t.TrackEntry = n;

        var a,
            r = function () {
          function t(t) {
            this.objects = [], this.drainDisabled = !1, this.animState = t;
          }

          return t.prototype.start = function (t) {
            this.objects.push(a.start), this.objects.push(t), this.animState.animationsChanged = !0;
          }, t.prototype.interrupt = function (t) {
            this.objects.push(a.interrupt), this.objects.push(t);
          }, t.prototype.end = function (t) {
            this.objects.push(a.end), this.objects.push(t), this.animState.animationsChanged = !0;
          }, t.prototype.dispose = function (t) {
            this.objects.push(a.dispose), this.objects.push(t);
          }, t.prototype.complete = function (t) {
            this.objects.push(a.complete), this.objects.push(t);
          }, t.prototype.event = function (t, e) {
            this.objects.push(a.event), this.objects.push(t), this.objects.push(e);
          }, t.prototype.drain = function () {
            if (!this.drainDisabled) {
              this.drainDisabled = !0;

              for (var t = this.objects, e = this.animState.listeners, n = 0; n < t.length; n += 2) {
                var r = t[n],
                    i = t[n + 1];

                switch (r) {
                  case a.start:
                    null != i.listener && i.listener.start && i.listener.start(i);

                    for (var s = 0; s < e.length; s++) {
                      e[s].start && e[s].start(i);
                    }

                    break;

                  case a.interrupt:
                    for (null != i.listener && i.listener.interrupt && i.listener.interrupt(i), s = 0; s < e.length; s++) {
                      e[s].interrupt && e[s].interrupt(i);
                    }

                    break;

                  case a.end:
                    for (null != i.listener && i.listener.end && i.listener.end(i), s = 0; s < e.length; s++) {
                      e[s].end && e[s].end(i);
                    }

                  case a.dispose:
                    for (null != i.listener && i.listener.dispose && i.listener.dispose(i), s = 0; s < e.length; s++) {
                      e[s].dispose && e[s].dispose(i);
                    }

                    this.animState.trackEntryPool.free(i);
                    break;

                  case a.complete:
                    for (null != i.listener && i.listener.complete && i.listener.complete(i), s = 0; s < e.length; s++) {
                      e[s].complete && e[s].complete(i);
                    }

                    break;

                  case a.event:
                    var o = t[2 + n++];

                    for (null != i.listener && i.listener.event && i.listener.event(i, o), s = 0; s < e.length; s++) {
                      e[s].event && e[s].event(i, o);
                    }

                }
              }

              this.clear(), this.drainDisabled = !1;
            }
          }, t.prototype.clear = function () {
            this.objects.length = 0;
          }, t;
        }();

        t.EventQueue = r, function (t) {
          t[t.start = 0] = "start", t[t.interrupt = 1] = "interrupt", t[t.end = 2] = "end", t[t.dispose = 3] = "dispose", t[t.complete = 4] = "complete", t[t.event = 5] = "event";
        }(a = t.EventType || (t.EventType = {}));

        var i = function () {
          function t() {}

          return t.prototype.start = function () {}, t.prototype.interrupt = function () {}, t.prototype.end = function () {}, t.prototype.dispose = function () {}, t.prototype.complete = function () {}, t.prototype.event = function () {}, t;
        }();

        t.AnimationStateAdapter = i;
      }(J || (J = {})), function (t) {
        var e = function () {
          function t(t) {
            if (this.animationToMixTime = {}, this.defaultMix = 0, null == t) throw new Error("skeletonData cannot be null.");
            this.skeletonData = t;
          }

          return t.prototype.setMix = function (t, e, n) {
            var a = this.skeletonData.findAnimation(t);
            if (null == a) throw new Error("Animation not found: " + t);
            var r = this.skeletonData.findAnimation(e);
            if (null == r) throw new Error("Animation not found: " + e);
            this.setMixWith(a, r, n);
          }, t.prototype.setMixWith = function (t, e, n) {
            if (null == t) throw new Error("from cannot be null.");
            if (null == e) throw new Error("to cannot be null.");
            var a = t.name + "." + e.name;
            this.animationToMixTime[a] = n;
          }, t.prototype.getMix = function (t, e) {
            var n = t.name + "." + e.name,
                a = this.animationToMixTime[n];
            return void 0 === a ? this.defaultMix : a;
          }, t;
        }();

        t.AnimationStateData = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t, e) {
            void 0 === e && (e = ""), this.assets = {}, this.errors = {}, this.toLoad = 0, this.loaded = 0, this.textureLoader = t, this.pathPrefix = e;
          }

          return e.downloadText = function (t, e, n) {
            var a = new XMLHttpRequest();
            a.open("GET", t, !0), a.onload = function () {
              200 == a.status ? e(a.responseText) : n(a.status, a.responseText);
            }, a.onerror = function () {
              n(a.status, a.responseText);
            }, a.send();
          }, e.downloadBinary = function (t, e, n) {
            var a = new XMLHttpRequest();
            a.open("GET", t, !0), a.responseType = "arraybuffer", a.onload = function () {
              200 == a.status ? e(new Uint8Array(a.response)) : n(a.status, a.responseText);
            }, a.onerror = function () {
              n(a.status, a.responseText);
            }, a.send();
          }, e.prototype.loadBinary = function (t, n, a) {
            var r = this;
            void 0 === n && (n = null), void 0 === a && (a = null), t = this.pathPrefix + t, this.toLoad++, e.downloadBinary(t, function (e) {
              r.assets[t] = e, n && n(t, e), r.toLoad--, r.loaded++;
            }, function (e, n) {
              r.errors[t] = "Couldn't load binary " + t + ": status " + status + ", " + n, a && a(t, "Couldn't load binary " + t + ": status " + status + ", " + n), r.toLoad--, r.loaded++;
            });
          }, e.prototype.loadText = function (t, n, a) {
            var r = this;
            void 0 === n && (n = null), void 0 === a && (a = null), t = this.pathPrefix + t, this.toLoad++, e.downloadText(t, function (e) {
              r.assets[t] = e, n && n(t, e), r.toLoad--, r.loaded++;
            }, function (e, n) {
              r.errors[t] = "Couldn't load text " + t + ": status " + status + ", " + n, a && a(t, "Couldn't load text " + t + ": status " + status + ", " + n), r.toLoad--, r.loaded++;
            });
          }, e.prototype.loadTexture = function (t, e, n) {
            var a = this;
            void 0 === e && (e = null), void 0 === n && (n = null), t = this.pathPrefix + t, this.toLoad++;
            var r = new Image();
            r.crossOrigin = "anonymous", r.onload = function () {
              var n = a.textureLoader(r);
              a.assets[t] = n, a.toLoad--, a.loaded++, e && e(t, r);
            }, r.onerror = function () {
              a.errors[t] = "Couldn't load image " + t, a.toLoad--, a.loaded++, n && n(t, "Couldn't load image " + t);
            }, r.src = t;
          }, e.prototype.loadTextureData = function (t, e, n, a) {
            var r = this;
            void 0 === n && (n = null), void 0 === a && (a = null), t = this.pathPrefix + t, this.toLoad++;
            var i = new Image();
            i.onload = function () {
              var e = r.textureLoader(i);
              r.assets[t] = e, r.toLoad--, r.loaded++, n && n(t, i);
            }, i.onerror = function () {
              r.errors[t] = "Couldn't load image " + t, r.toLoad--, r.loaded++, a && a(t, "Couldn't load image " + t);
            }, i.src = e;
          }, e.prototype.loadTextureAtlas = function (n, a, r) {
            var i = this;
            void 0 === a && (a = null), void 0 === r && (r = null);
            var s = n.lastIndexOf("/") >= 0 ? n.substring(0, n.lastIndexOf("/")) : "";
            n = this.pathPrefix + n, this.toLoad++, e.downloadText(n, function (e) {
              var o = {
                count: 0
              },
                  l = new Array();

              try {
                new t.TextureAtlas(e, function (e) {
                  l.push(s + "/" + e);
                  var n = document.createElement("img");
                  return n.width = 16, n.height = 16, new t.FakeTexture(n);
                });
              } catch (t) {
                var h = t;
                return i.errors[n] = "Couldn't load texture atlas " + n + ": " + h.message, r && r(n, "Couldn't load texture atlas " + n + ": " + h.message), i.toLoad--, void i.loaded++;
              }

              for (var u = function u(h) {
                var u = !1;
                i.loadTexture(h, function (h) {
                  if (o.count++, o.count == l.length) if (u) i.errors[n] = "Couldn't load texture atlas page " + h + "} of atlas " + n, r && r(n, "Couldn't load texture atlas page " + h + " of atlas " + n), i.toLoad--, i.loaded++;else try {
                    var c = new t.TextureAtlas(e, function (t) {
                      return i.get(s + "/" + t);
                    });
                    i.assets[n] = c, a && a(n, c), i.toLoad--, i.loaded++;
                  } catch (t) {
                    var d = t;
                    i.errors[n] = "Couldn't load texture atlas " + n + ": " + d.message, r && r(n, "Couldn't load texture atlas " + n + ": " + d.message), i.toLoad--, i.loaded++;
                  }
                }, function (t) {
                  u = !0, o.count++, o.count == l.length && (i.errors[n] = "Couldn't load texture atlas page " + t + "} of atlas " + n, r && r(n, "Couldn't load texture atlas page " + t + " of atlas " + n), i.toLoad--, i.loaded++);
                });
              }, c = 0, d = l; c < d.length; c++) {
                u(d[c]);
              }
            }, function (t, e) {
              i.errors[n] = "Couldn't load texture atlas " + n + ": status " + status + ", " + e, r && r(n, "Couldn't load texture atlas " + n + ": status " + status + ", " + e), i.toLoad--, i.loaded++;
            });
          }, e.prototype.get = function (t) {
            return t = this.pathPrefix + t, this.assets[t];
          }, e.prototype.remove = function (t) {
            t = this.pathPrefix + t;
            var e = this.assets[t];
            e.dispose && e.dispose(), this.assets[t] = null;
          }, e.prototype.removeAll = function () {
            for (var t in this.assets) {
              var e = this.assets[t];
              e.dispose && e.dispose();
            }

            this.assets = {};
          }, e.prototype.isLoadingComplete = function () {
            return 0 == this.toLoad;
          }, e.prototype.getToLoad = function () {
            return this.toLoad;
          }, e.prototype.getLoaded = function () {
            return this.loaded;
          }, e.prototype.dispose = function () {
            this.removeAll();
          }, e.prototype.hasErrors = function () {
            return Object.keys(this.errors).length > 0;
          }, e.prototype.getErrors = function () {
            return this.errors;
          }, e;
        }();

        t.AssetManager = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t) {
            this.atlas = t;
          }

          return e.prototype.newRegionAttachment = function (e, n, a) {
            var r = this.atlas.findRegion(a);
            if (null == r) return null;
            r.renderObject = r;
            var i = new t.RegionAttachment(n);
            return i.setRegion(r), i;
          }, e.prototype.newMeshAttachment = function (e, n, a) {
            var r = this.atlas.findRegion(a);
            if (null == r) return null;
            r.renderObject = r;
            var i = new t.MeshAttachment(n);
            return i.region = r, i;
          }, e.prototype.newBoundingBoxAttachment = function (e, n) {
            return new t.BoundingBoxAttachment(n);
          }, e.prototype.newPathAttachment = function (e, n) {
            return new t.PathAttachment(n);
          }, e.prototype.newPointAttachment = function (e, n) {
            return new t.PointAttachment(n);
          }, e.prototype.newClippingAttachment = function (e, n) {
            return new t.ClippingAttachment(n);
          }, e;
        }();

        t.AtlasAttachmentLoader = e;
      }(J || (J = {})), function (t) {
        var e;
        (e = t.BlendMode || (t.BlendMode = {}))[e.Normal = 0] = "Normal", e[e.Additive = 1] = "Additive", e[e.Multiply = 2] = "Multiply", e[e.Screen = 3] = "Screen";
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t, e, n) {
            if (this.children = new Array(), this.x = 0, this.y = 0, this.rotation = 0, this.scaleX = 0, this.scaleY = 0, this.shearX = 0, this.shearY = 0, this.ax = 0, this.ay = 0, this.arotation = 0, this.ascaleX = 0, this.ascaleY = 0, this.ashearX = 0, this.ashearY = 0, this.appliedValid = !1, this.a = 0, this.b = 0, this.c = 0, this.d = 0, this.worldY = 0, this.worldX = 0, this.sorted = !1, this.active = !1, null == t) throw new Error("data cannot be null.");
            if (null == e) throw new Error("skeleton cannot be null.");
            this.data = t, this.skeleton = e, this.parent = n, this.setToSetupPose();
          }

          return e.prototype.isActive = function () {
            return this.active;
          }, e.prototype.update = function () {
            this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);
          }, e.prototype.updateWorldTransform = function () {
            this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);
          }, e.prototype.updateWorldTransformWith = function (e, n, a, r, i, s, o) {
            this.ax = e, this.ay = n, this.arotation = a, this.ascaleX = r, this.ascaleY = i, this.ashearX = s, this.ashearY = o, this.appliedValid = !0;
            var l = this.parent;

            if (null == l) {
              var h = this.skeleton,
                  u = a + 90 + o,
                  c = h.scaleX,
                  d = h.scaleY;
              return this.a = t.MathUtils.cosDeg(a + s) * r * c, this.b = t.MathUtils.cosDeg(u) * i * c, this.c = t.MathUtils.sinDeg(a + s) * r * d, this.d = t.MathUtils.sinDeg(u) * i * d, this.worldX = e * c + h.x, void (this.worldY = n * d + h.y);
            }

            var f = l.a,
                p = l.b,
                m = l.c,
                g = l.d;

            switch (this.worldX = f * e + p * n + l.worldX, this.worldY = m * e + g * n + l.worldY, this.data.transformMode) {
              case t.TransformMode.Normal:
                u = a + 90 + o;
                var v = t.MathUtils.cosDeg(a + s) * r,
                    y = t.MathUtils.cosDeg(u) * i,
                    x = t.MathUtils.sinDeg(a + s) * r,
                    w = t.MathUtils.sinDeg(u) * i;
                return this.a = f * v + p * x, this.b = f * y + p * w, this.c = m * v + g * x, void (this.d = m * y + g * w);

              case t.TransformMode.OnlyTranslation:
                u = a + 90 + o, this.a = t.MathUtils.cosDeg(a + s) * r, this.b = t.MathUtils.cosDeg(u) * i, this.c = t.MathUtils.sinDeg(a + s) * r, this.d = t.MathUtils.sinDeg(u) * i;
                break;

              case t.TransformMode.NoRotationOrReflection:
                var E = 0;
                (T = f * f + m * m) > 1e-4 ? (p = m * (T = Math.abs(f * g - p * m) / T), g = f * T, E = Math.atan2(m, f) * t.MathUtils.radDeg) : (f = 0, m = 0, E = 90 - Math.atan2(g, p) * t.MathUtils.radDeg);

                var M = a + s - E,
                    _ = a + o - E + 90;

                v = t.MathUtils.cosDeg(M) * r, y = t.MathUtils.cosDeg(_) * i, x = t.MathUtils.sinDeg(M) * r, w = t.MathUtils.sinDeg(_) * i, this.a = f * v - p * x, this.b = f * y - p * w, this.c = m * v + g * x, this.d = m * y + g * w;
                break;

              case t.TransformMode.NoScale:
              case t.TransformMode.NoScaleOrReflection:
                var T,
                    b = t.MathUtils.cosDeg(a),
                    A = t.MathUtils.sinDeg(a),
                    C = (f * b + p * A) / this.skeleton.scaleX,
                    S = (m * b + g * A) / this.skeleton.scaleY;
                (T = Math.sqrt(C * C + S * S)) > 1e-5 && (T = 1 / T), C *= T, S *= T, T = Math.sqrt(C * C + S * S), this.data.transformMode == t.TransformMode.NoScale && f * g - p * m < 0 != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0) && (T = -T);
                var k = Math.PI / 2 + Math.atan2(S, C),
                    I = Math.cos(k) * T,
                    R = Math.sin(k) * T;
                v = t.MathUtils.cosDeg(s) * r, y = t.MathUtils.cosDeg(90 + o) * i, x = t.MathUtils.sinDeg(s) * r, w = t.MathUtils.sinDeg(90 + o) * i, this.a = C * v + I * x, this.b = C * y + I * w, this.c = S * v + R * x, this.d = S * y + R * w;
            }

            this.a *= this.skeleton.scaleX, this.b *= this.skeleton.scaleX, this.c *= this.skeleton.scaleY, this.d *= this.skeleton.scaleY;
          }, e.prototype.setToSetupPose = function () {
            var t = this.data;
            this.x = t.x, this.y = t.y, this.rotation = t.rotation, this.scaleX = t.scaleX, this.scaleY = t.scaleY, this.shearX = t.shearX, this.shearY = t.shearY;
          }, e.prototype.getWorldRotationX = function () {
            return Math.atan2(this.c, this.a) * t.MathUtils.radDeg;
          }, e.prototype.getWorldRotationY = function () {
            return Math.atan2(this.d, this.b) * t.MathUtils.radDeg;
          }, e.prototype.getWorldScaleX = function () {
            return Math.sqrt(this.a * this.a + this.c * this.c);
          }, e.prototype.getWorldScaleY = function () {
            return Math.sqrt(this.b * this.b + this.d * this.d);
          }, e.prototype.updateAppliedTransform = function () {
            this.appliedValid = !0;
            var e = this.parent;
            if (null == e) return this.ax = this.worldX, this.ay = this.worldY, this.arotation = Math.atan2(this.c, this.a) * t.MathUtils.radDeg, this.ascaleX = Math.sqrt(this.a * this.a + this.c * this.c), this.ascaleY = Math.sqrt(this.b * this.b + this.d * this.d), this.ashearX = 0, void (this.ashearY = Math.atan2(this.a * this.b + this.c * this.d, this.a * this.d - this.b * this.c) * t.MathUtils.radDeg);
            var n = e.a,
                a = e.b,
                r = e.c,
                i = e.d,
                s = 1 / (n * i - a * r),
                o = this.worldX - e.worldX,
                l = this.worldY - e.worldY;
            this.ax = o * i * s - l * a * s, this.ay = l * n * s - o * r * s;
            var h = s * i,
                u = s * n,
                c = s * a,
                d = s * r,
                f = h * this.a - c * this.c,
                p = h * this.b - c * this.d,
                m = u * this.c - d * this.a,
                g = u * this.d - d * this.b;

            if (this.ashearX = 0, this.ascaleX = Math.sqrt(f * f + m * m), this.ascaleX > 1e-4) {
              var v = f * g - p * m;
              this.ascaleY = v / this.ascaleX, this.ashearY = Math.atan2(f * p + m * g, v) * t.MathUtils.radDeg, this.arotation = Math.atan2(m, f) * t.MathUtils.radDeg;
            } else this.ascaleX = 0, this.ascaleY = Math.sqrt(p * p + g * g), this.ashearY = 0, this.arotation = 90 - Math.atan2(g, p) * t.MathUtils.radDeg;
          }, e.prototype.worldToLocal = function (t) {
            var e = this.a,
                n = this.b,
                a = this.c,
                r = this.d,
                i = 1 / (e * r - n * a),
                s = t.x - this.worldX,
                o = t.y - this.worldY;
            return t.x = s * r * i - o * n * i, t.y = o * e * i - s * a * i, t;
          }, e.prototype.localToWorld = function (t) {
            var e = t.x,
                n = t.y;
            return t.x = e * this.a + n * this.b + this.worldX, t.y = e * this.c + n * this.d + this.worldY, t;
          }, e.prototype.worldToLocalRotation = function (e) {
            var n = t.MathUtils.sinDeg(e),
                a = t.MathUtils.cosDeg(e);
            return Math.atan2(this.a * n - this.c * a, this.d * a - this.b * n) * t.MathUtils.radDeg + this.rotation - this.shearX;
          }, e.prototype.localToWorldRotation = function (e) {
            e -= this.rotation - this.shearX;
            var n = t.MathUtils.sinDeg(e),
                a = t.MathUtils.cosDeg(e);
            return Math.atan2(a * this.c + n * this.d, a * this.a + n * this.b) * t.MathUtils.radDeg;
          }, e.prototype.rotateWorld = function (e) {
            var n = this.a,
                a = this.b,
                r = this.c,
                i = this.d,
                s = t.MathUtils.cosDeg(e),
                o = t.MathUtils.sinDeg(e);
            this.a = s * n - o * r, this.b = s * a - o * i, this.c = o * n + s * r, this.d = o * a + s * i, this.appliedValid = !1;
          }, e;
        }();

        t.Bone = e;
      }(J || (J = {})), function (t) {
        var e;
        t.BoneData = function (n, a, r) {
          if (this.x = 0, this.y = 0, this.rotation = 0, this.scaleX = 1, this.scaleY = 1, this.shearX = 0, this.shearY = 0, this.transformMode = e.Normal, this.skinRequired = !1, this.color = new t.Color(), n < 0) throw new Error("index must be >= 0.");
          if (null == a) throw new Error("name cannot be null.");
          this.index = n, this.name = a, this.parent = r;
        }, function (t) {
          t[t.Normal = 0] = "Normal", t[t.OnlyTranslation = 1] = "OnlyTranslation", t[t.NoRotationOrReflection = 2] = "NoRotationOrReflection", t[t.NoScale = 3] = "NoScale", t[t.NoScaleOrReflection = 4] = "NoScaleOrReflection";
        }(e = t.TransformMode || (t.TransformMode = {}));
      }(J || (J = {})), function (t) {
        t.ConstraintData = function (t, e, n) {
          this.name = t, this.order = e, this.skinRequired = n;
        };
      }(J || (J = {})), function (t) {
        t.Event = function (t, e) {
          if (null == e) throw new Error("data cannot be null.");
          this.time = t, this.data = e;
        };
      }(J || (J = {})), function (t) {
        t.EventData = function (t) {
          this.name = t;
        };
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t, e) {
            if (this.bendDirection = 0, this.compress = !1, this.stretch = !1, this.mix = 1, this.softness = 0, this.active = !1, null == t) throw new Error("data cannot be null.");
            if (null == e) throw new Error("skeleton cannot be null.");
            this.data = t, this.mix = t.mix, this.softness = t.softness, this.bendDirection = t.bendDirection, this.compress = t.compress, this.stretch = t.stretch, this.bones = new Array();

            for (var n = 0; n < t.bones.length; n++) {
              this.bones.push(e.findBone(t.bones[n].name));
            }

            this.target = e.findBone(t.target.name);
          }

          return e.prototype.isActive = function () {
            return this.active;
          }, e.prototype.apply = function () {
            this.update();
          }, e.prototype.update = function () {
            var t = this.target,
                e = this.bones;

            switch (e.length) {
              case 1:
                this.apply1(e[0], t.worldX, t.worldY, this.compress, this.stretch, this.data.uniform, this.mix);
                break;

              case 2:
                this.apply2(e[0], e[1], t.worldX, t.worldY, this.bendDirection, this.stretch, this.softness, this.mix);
            }
          }, e.prototype.apply1 = function (e, n, a, r, i, s, o) {
            e.appliedValid || e.updateAppliedTransform();
            var l = e.parent,
                h = 1 / (l.a * l.d - l.b * l.c),
                u = n - l.worldX,
                c = a - l.worldY,
                d = (u * l.d - c * l.b) * h - e.ax,
                f = (c * l.a - u * l.c) * h - e.ay,
                p = Math.atan2(f, d) * t.MathUtils.radDeg - e.ashearX - e.arotation;
            e.ascaleX < 0 && (p += 180), p > 180 ? p -= 360 : p < -180 && (p += 360);
            var m = e.ascaleX,
                g = e.ascaleY;

            if (r || i) {
              var v = e.data.length * m,
                  y = Math.sqrt(d * d + f * f);

              if (r && y < v || i && y > v && v > 1e-4) {
                var x = (y / v - 1) * o + 1;
                m *= x, s && (g *= x);
              }
            }

            e.updateWorldTransformWith(e.ax, e.ay, e.arotation + p * o, m, g, e.ashearX, e.ashearY);
          }, e.prototype.apply2 = function (e, n, a, r, i, s, o, l) {
            if (0 != l) {
              e.appliedValid || e.updateAppliedTransform(), n.appliedValid || n.updateAppliedTransform();
              var h = e.ax,
                  u = e.ay,
                  c = e.ascaleX,
                  d = c,
                  f = e.ascaleY,
                  p = n.ascaleX,
                  m = 0,
                  g = 0,
                  v = 0;
              c < 0 ? (c = -c, m = 180, v = -1) : (m = 0, v = 1), f < 0 && (f = -f, v = -v), p < 0 ? (p = -p, g = 180) : g = 0;
              var y = n.ax,
                  x = 0,
                  w = 0,
                  E = 0,
                  M = e.a,
                  _ = e.b,
                  T = e.c,
                  b = e.d,
                  A = Math.abs(c - f) <= 1e-4;
              A ? (w = M * y + _ * (x = n.ay) + e.worldX, E = T * y + b * x + e.worldY) : (x = 0, w = M * y + e.worldX, E = T * y + e.worldY);
              var C = e.parent;
              M = C.a, _ = C.b, T = C.c;
              var S,
                  k,
                  I = 1 / (M * (b = C.d) - _ * T),
                  R = w - C.worldX,
                  P = E - C.worldY,
                  D = (R * b - P * _) * I - h,
                  V = (P * M - R * T) * I - u,
                  N = Math.sqrt(D * D + V * V),
                  F = n.data.length * p;
              if (N < 1e-4) return this.apply1(e, a, r, !1, s, !1, l), void n.updateWorldTransformWith(y, x, 0, n.ascaleX, n.ascaleY, n.ashearX, n.ashearY);
              var O = ((R = a - C.worldX) * b - (P = r - C.worldY) * _) * I - h,
                  L = (P * M - R * T) * I - u,
                  U = O * O + L * L;

              if (0 != o) {
                o *= c * (p + 1) / 2;
                var B = Math.sqrt(U),
                    Y = B - N - F * c + o;

                if (Y > 0) {
                  var X = Math.min(1, Y / (2 * o)) - 1;
                  U = (O -= (X = (Y - o * (1 - X * X)) / B) * O) * O + (L -= X * L) * L;
                }
              }

              t: if (A) {
                var W = (U - N * N - (F *= c) * F) / (2 * N * F);
                W < -1 ? W = -1 : W > 1 && (W = 1, s && (d *= (Math.sqrt(U) / (N + F) - 1) * l + 1)), k = Math.acos(W) * i, M = N + F * W, _ = F * Math.sin(k), S = Math.atan2(L * M - O * _, O * M + L * _);
              } else {
                var q = (M = c * F) * M,
                    H = (_ = f * F) * _,
                    j = Math.atan2(L, O),
                    z = -2 * H * N,
                    G = H - q;

                if ((b = z * z - 4 * G * (T = H * N * N + q * U - q * H)) >= 0) {
                  var Z = Math.sqrt(b);
                  z < 0 && (Z = -Z);
                  var J = (Z = -(z + Z) / 2) / G,
                      Q = T / Z,
                      K = Math.abs(J) < Math.abs(Q) ? J : Q;

                  if (K * K <= U) {
                    P = Math.sqrt(U - K * K) * i, S = j - Math.atan2(P, K), k = Math.atan2(P / f, (K - N) / c);
                    break t;
                  }
                }

                var $ = t.MathUtils.PI,
                    tt = N - M,
                    et = tt * tt,
                    nt = 0,
                    at = 0,
                    rt = N + M,
                    it = rt * rt,
                    st = 0;
                (T = -M * N / (q - H)) >= -1 && T <= 1 && (T = Math.acos(T), (b = (R = M * Math.cos(T) + N) * R + (P = _ * Math.sin(T)) * P) < et && ($ = T, et = b, tt = R, nt = P), b > it && (at = T, it = b, rt = R, st = P)), U <= (et + it) / 2 ? (S = j - Math.atan2(nt * i, tt), k = $ * i) : (S = j - Math.atan2(st * i, rt), k = at * i);
              }

              var ot = Math.atan2(x, y) * v,
                  lt = e.arotation;
              (S = (S - ot) * t.MathUtils.radDeg + m - lt) > 180 ? S -= 360 : S < -180 && (S += 360), e.updateWorldTransformWith(h, u, lt + S * l, d, e.ascaleY, 0, 0), lt = n.arotation, (k = ((k + ot) * t.MathUtils.radDeg - n.ashearX) * v + g - lt) > 180 ? k -= 360 : k < -180 && (k += 360), n.updateWorldTransformWith(y, x, lt + k * l, n.ascaleX, n.ascaleY, n.ashearX, n.ashearY);
            } else n.updateWorldTransform();
          }, e;
        }();

        t.IkConstraint = e;
      }(J || (J = {})), function (t) {
        var e = function (t) {
          function e(e) {
            var n = t.call(this, e, 0, !1) || this;
            return n.bones = new Array(), n.bendDirection = 1, n.compress = !1, n.stretch = !1, n.uniform = !1, n.mix = 1, n.softness = 0, n;
          }

          return Q(e, t), e;
        }(t.ConstraintData);

        t.IkConstraintData = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t, e) {
            if (this.position = 0, this.spacing = 0, this.rotateMix = 0, this.translateMix = 0, this.spaces = new Array(), this.positions = new Array(), this.world = new Array(), this.curves = new Array(), this.lengths = new Array(), this.segments = new Array(), this.active = !1, null == t) throw new Error("data cannot be null.");
            if (null == e) throw new Error("skeleton cannot be null.");
            this.data = t, this.bones = new Array();

            for (var n = 0, a = t.bones.length; n < a; n++) {
              this.bones.push(e.findBone(t.bones[n].name));
            }

            this.target = e.findSlot(t.target.name), this.position = t.position, this.spacing = t.spacing, this.rotateMix = t.rotateMix, this.translateMix = t.translateMix;
          }

          return e.prototype.isActive = function () {
            return this.active;
          }, e.prototype.apply = function () {
            this.update();
          }, e.prototype.update = function () {
            var n = this.target.getAttachment();

            if (n instanceof t.PathAttachment) {
              var a = this.rotateMix,
                  r = this.translateMix,
                  i = a > 0;

              if (r > 0 || i) {
                var s = this.data,
                    o = s.spacingMode == t.SpacingMode.Percent,
                    l = s.rotateMode,
                    h = l == t.RotateMode.Tangent,
                    u = l == t.RotateMode.ChainScale,
                    c = this.bones.length,
                    d = h ? c : c + 1,
                    f = this.bones,
                    p = t.Utils.setArraySize(this.spaces, d),
                    m = null,
                    g = this.spacing;

                if (u || !o) {
                  u && (m = t.Utils.setArraySize(this.lengths, c));

                  for (var v = s.spacingMode == t.SpacingMode.Length, y = 0, x = d - 1; y < x;) {
                    var w = (R = f[y]).data.length;
                    if (w < e.epsilon) u && (m[y] = 0), p[++y] = 0;else if (o) {
                      if (u) {
                        var E = w * R.a,
                            M = w * R.c,
                            _ = Math.sqrt(E * E + M * M);

                        m[y] = _;
                      }

                      p[++y] = g;
                    } else {
                      E = w * R.a, M = w * R.c;
                      var T = Math.sqrt(E * E + M * M);
                      u && (m[y] = T), p[++y] = (v ? w + g : g) * T / w;
                    }
                  }
                } else for (y = 1; y < d; y++) {
                  p[y] = g;
                }

                var b = this.computeWorldPositions(n, d, h, s.positionMode == t.PositionMode.Percent, o),
                    A = b[0],
                    C = b[1],
                    S = s.offsetRotation,
                    k = !1;
                0 == S ? k = l == t.RotateMode.Chain : (k = !1, S *= (I = this.target.bone).a * I.d - I.b * I.c > 0 ? t.MathUtils.degRad : -t.MathUtils.degRad), y = 0;

                for (var I = 3; y < c; y++, I += 3) {
                  var R;
                  (R = f[y]).worldX += (A - R.worldX) * r, R.worldY += (C - R.worldY) * r;
                  var P = (E = b[I]) - A,
                      D = (M = b[I + 1]) - C;

                  if (u) {
                    var V = m[y];

                    if (0 != V) {
                      var N = (Math.sqrt(P * P + D * D) / V - 1) * a + 1;
                      R.a *= N, R.c *= N;
                    }
                  }

                  if (A = E, C = M, i) {
                    var F = R.a,
                        O = R.b,
                        L = R.c,
                        U = R.d,
                        B = 0,
                        Y = 0,
                        X = 0;

                    if (B = h ? b[I - 1] : 0 == p[y + 1] ? b[I + 2] : Math.atan2(D, P), B -= Math.atan2(L, F), k) {
                      Y = Math.cos(B), X = Math.sin(B);
                      var W = R.data.length;
                      A += (W * (Y * F - X * L) - P) * a, C += (W * (X * F + Y * L) - D) * a;
                    } else B += S;

                    B > t.MathUtils.PI ? B -= t.MathUtils.PI2 : B < -t.MathUtils.PI && (B += t.MathUtils.PI2), B *= a, Y = Math.cos(B), X = Math.sin(B), R.a = Y * F - X * L, R.b = Y * O - X * U, R.c = X * F + Y * L, R.d = X * O + Y * U;
                  }

                  R.appliedValid = !1;
                }
              }
            }
          }, e.prototype.computeWorldPositions = function (n, a, r, i, s) {
            var o = this.target,
                l = this.position,
                h = this.spaces,
                u = t.Utils.setArraySize(this.positions, 3 * a + 2),
                c = null,
                d = n.closed,
                f = n.worldVerticesLength,
                p = f / 6,
                m = e.NONE;

            if (!n.constantSpeed) {
              var g = n.lengths,
                  v = g[p -= d ? 1 : 2];
              if (i && (l *= v), s) for (var y = 1; y < a; y++) {
                h[y] *= v;
              }
              c = t.Utils.setArraySize(this.world, 8), y = 0;

              for (var x = 0, w = 0; y < a; y++, x += 3) {
                var E = l += H = h[y];
                if (d) (E %= v) < 0 && (E += v), w = 0;else {
                  if (E < 0) {
                    m != e.BEFORE && (m = e.BEFORE, n.computeWorldVertices(o, 2, 4, c, 0, 2)), this.addBeforePosition(E, c, 0, u, x);
                    continue;
                  }

                  if (E > v) {
                    m != e.AFTER && (m = e.AFTER, n.computeWorldVertices(o, f - 6, 4, c, 0, 2)), this.addAfterPosition(E - v, c, 0, u, x);
                    continue;
                  }
                }

                for (;; w++) {
                  var M = g[w];

                  if (!(E > M)) {
                    0 == w ? E /= M : E = (E - (Z = g[w - 1])) / (M - Z);
                    break;
                  }
                }

                w != m && (m = w, d && w == p ? (n.computeWorldVertices(o, f - 4, 4, c, 0, 2), n.computeWorldVertices(o, 0, 4, c, 4, 2)) : n.computeWorldVertices(o, 6 * w + 2, 8, c, 0, 2)), this.addCurvePosition(E, c[0], c[1], c[2], c[3], c[4], c[5], c[6], c[7], u, x, r || y > 0 && 0 == H);
              }

              return u;
            }

            d ? (f += 2, c = t.Utils.setArraySize(this.world, f), n.computeWorldVertices(o, 2, f - 4, c, 0, 2), n.computeWorldVertices(o, 0, 2, c, f - 4, 2), c[f - 2] = c[0], c[f - 1] = c[1]) : (p--, f -= 4, c = t.Utils.setArraySize(this.world, f), n.computeWorldVertices(o, 2, f, c, 0, 2));

            for (var _ = t.Utils.setArraySize(this.curves, p), T = 0, b = c[0], A = c[1], C = 0, S = 0, k = 0, I = 0, R = 0, P = 0, D = 0, V = 0, N = 0, F = 0, O = 0, L = 0, U = 0, B = 0, Y = (y = 0, 2); y < p; y++, Y += 6) {
              C = c[Y], S = c[Y + 1], k = c[Y + 2], I = c[Y + 3], O = 2 * (D = .1875 * (b - 2 * C + k)) + (N = .09375 * (3 * (C - k) - b + (R = c[Y + 4]))), L = 2 * (V = .1875 * (A - 2 * S + I)) + (F = .09375 * (3 * (S - I) - A + (P = c[Y + 5]))), U = .75 * (C - b) + D + .16666667 * N, B = .75 * (S - A) + V + .16666667 * F, T += Math.sqrt(U * U + B * B), U += O, B += L, O += N, L += F, T += Math.sqrt(U * U + B * B), U += O, B += L, T += Math.sqrt(U * U + B * B), U += O + N, B += L + F, T += Math.sqrt(U * U + B * B), _[y] = T, b = R, A = P;
            }

            if (l *= i ? T : T / n.lengths[p - 1], s) for (y = 1; y < a; y++) {
              h[y] *= T;
            }

            for (var X = this.segments, W = 0, q = (y = 0, x = 0, w = 0, 0); y < a; y++, x += 3) {
              var H;
              if (E = l += H = h[y], d) (E %= T) < 0 && (E += T), w = 0;else {
                if (E < 0) {
                  this.addBeforePosition(E, c, 0, u, x);
                  continue;
                }

                if (E > T) {
                  this.addAfterPosition(E - T, c, f - 4, u, x);
                  continue;
                }
              }

              for (;; w++) {
                var j = _[w];

                if (!(E > j)) {
                  0 == w ? E /= j : E = (E - (Z = _[w - 1])) / (j - Z);
                  break;
                }
              }

              if (w != m) {
                m = w;
                var z = 6 * w;

                for (b = c[z], A = c[z + 1], C = c[z + 2], S = c[z + 3], k = c[z + 4], I = c[z + 5], O = 2 * (D = .03 * (b - 2 * C + k)) + (N = .006 * (3 * (C - k) - b + (R = c[z + 6]))), L = 2 * (V = .03 * (A - 2 * S + I)) + (F = .006 * (3 * (S - I) - A + (P = c[z + 7]))), U = .3 * (C - b) + D + .16666667 * N, B = .3 * (S - A) + V + .16666667 * F, W = Math.sqrt(U * U + B * B), X[0] = W, z = 1; z < 8; z++) {
                  U += O, B += L, O += N, L += F, W += Math.sqrt(U * U + B * B), X[z] = W;
                }

                U += O, B += L, W += Math.sqrt(U * U + B * B), X[8] = W, U += O + N, B += L + F, W += Math.sqrt(U * U + B * B), X[9] = W, q = 0;
              }

              for (E *= W;; q++) {
                var G = X[q];

                if (!(E > G)) {
                  var Z;
                  0 == q ? E /= G : E = q + (E - (Z = X[q - 1])) / (G - Z);
                  break;
                }
              }

              this.addCurvePosition(.1 * E, b, A, C, S, k, I, R, P, u, x, r || y > 0 && 0 == H);
            }

            return u;
          }, e.prototype.addBeforePosition = function (t, e, n, a, r) {
            var i = e[n],
                s = e[n + 1],
                o = e[n + 2] - i,
                l = e[n + 3] - s,
                h = Math.atan2(l, o);
            a[r] = i + t * Math.cos(h), a[r + 1] = s + t * Math.sin(h), a[r + 2] = h;
          }, e.prototype.addAfterPosition = function (t, e, n, a, r) {
            var i = e[n + 2],
                s = e[n + 3],
                o = i - e[n],
                l = s - e[n + 1],
                h = Math.atan2(l, o);
            a[r] = i + t * Math.cos(h), a[r + 1] = s + t * Math.sin(h), a[r + 2] = h;
          }, e.prototype.addCurvePosition = function (t, e, n, a, r, i, s, o, l, h, u, c) {
            if (0 == t || isNaN(t)) return h[u] = e, h[u + 1] = n, void (h[u + 2] = Math.atan2(r - n, a - e));
            var d = t * t,
                f = d * t,
                p = 1 - t,
                m = p * p,
                g = m * p,
                v = p * t,
                y = 3 * v,
                x = p * y,
                w = y * t,
                E = e * g + a * x + i * w + o * f,
                M = n * g + r * x + s * w + l * f;
            h[u] = E, h[u + 1] = M, c && (h[u + 2] = t < .001 ? Math.atan2(r - n, a - e) : Math.atan2(M - (n * m + r * v * 2 + s * d), E - (e * m + a * v * 2 + i * d)));
          }, e.NONE = -1, e.BEFORE = -2, e.AFTER = -3, e.epsilon = 1e-5, e;
        }();

        t.PathConstraint = e;
      }(J || (J = {})), function (t) {
        var e,
            n,
            a,
            r = function (t) {
          function e(e) {
            var n = t.call(this, e, 0, !1) || this;
            return n.bones = new Array(), n;
          }

          return Q(e, t), e;
        }(t.ConstraintData);

        t.PathConstraintData = r, (a = t.PositionMode || (t.PositionMode = {}))[a.Fixed = 0] = "Fixed", a[a.Percent = 1] = "Percent", (n = t.SpacingMode || (t.SpacingMode = {}))[n.Length = 0] = "Length", n[n.Fixed = 1] = "Fixed", n[n.Percent = 2] = "Percent", (e = t.RotateMode || (t.RotateMode = {}))[e.Tangent = 0] = "Tangent", e[e.Chain = 1] = "Chain", e[e.ChainScale = 2] = "ChainScale";
      }(J || (J = {})), function (t) {
        var e = function () {
          function t(t) {
            this.toLoad = new Array(), this.assets = {}, this.clientId = t;
          }

          return t.prototype.loaded = function () {
            var t = 0;

            for (var e in this.assets) {
              t++;
            }

            return t;
          }, t;
        }(),
            n = function () {
          function t(t) {
            void 0 === t && (t = ""), this.clientAssets = {}, this.queuedAssets = {}, this.rawAssets = {}, this.errors = {}, this.pathPrefix = t;
          }

          return t.prototype.queueAsset = function (t, n, a) {
            var r = this.clientAssets[t];
            return null == r && (r = new e(t), this.clientAssets[t] = r), null !== n && (r.textureLoader = n), r.toLoad.push(a), this.queuedAssets[a] !== a && (this.queuedAssets[a] = a, !0);
          }, t.prototype.loadText = function (t, e) {
            var n = this;

            if (e = this.pathPrefix + e, this.queueAsset(t, null, e)) {
              var a = new XMLHttpRequest();
              a.onreadystatechange = function () {
                a.readyState == XMLHttpRequest.DONE && (a.status >= 200 && a.status < 300 ? n.rawAssets[e] = a.responseText : n.errors[e] = "Couldn't load text " + e + ": status " + a.status + ", " + a.responseText);
              }, a.open("GET", e, !0), a.send();
            }
          }, t.prototype.loadJson = function (t, e) {
            var n = this;

            if (e = this.pathPrefix + e, this.queueAsset(t, null, e)) {
              var a = new XMLHttpRequest();
              a.onreadystatechange = function () {
                a.readyState == XMLHttpRequest.DONE && (a.status >= 200 && a.status < 300 ? n.rawAssets[e] = JSON.parse(a.responseText) : n.errors[e] = "Couldn't load text " + e + ": status " + a.status + ", " + a.responseText);
              }, a.open("GET", e, !0), a.send();
            }
          }, t.prototype.loadTexture = function (t, e, n) {
            var a = this;

            if (n = this.pathPrefix + n, this.queueAsset(t, e, n)) {
              var r = new Image();
              r.src = n, r.crossOrigin = "anonymous", r.onload = function () {
                a.rawAssets[n] = r;
              }, r.onerror = function () {
                a.errors[n] = "Couldn't load image " + n;
              };
            }
          }, t.prototype.get = function (t, e) {
            e = this.pathPrefix + e;
            var n = this.clientAssets[t];
            return null == n || n.assets[e];
          }, t.prototype.updateClientAssets = function (t) {
            for (var e = 0; e < t.toLoad.length; e++) {
              var n = t.toLoad[e];

              if (null == t.assets[n]) {
                var a = this.rawAssets[n];
                if (null == a) continue;
                a instanceof HTMLImageElement ? t.assets[n] = t.textureLoader(a) : t.assets[n] = a;
              }
            }
          }, t.prototype.isLoadingComplete = function (t) {
            var e = this.clientAssets[t];
            return null == e || (this.updateClientAssets(e), e.toLoad.length == e.loaded());
          }, t.prototype.dispose = function () {}, t.prototype.hasErrors = function () {
            return Object.keys(this.errors).length > 0;
          }, t.prototype.getErrors = function () {
            return this.errors;
          }, t;
        }();

        t.SharedAssetManager = n;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(e) {
            if (this._updateCache = new Array(), this.updateCacheReset = new Array(), this.time = 0, this.scaleX = 1, this.scaleY = 1, this.x = 0, this.y = 0, null == e) throw new Error("data cannot be null.");
            this.data = e, this.bones = new Array();

            for (var n = 0; n < e.bones.length; n++) {
              var a = e.bones[n],
                  r = void 0;
              if (null == a.parent) r = new t.Bone(a, this, null);else {
                var i = this.bones[a.parent.index];
                r = new t.Bone(a, this, i), i.children.push(r);
              }
              this.bones.push(r);
            }

            for (this.slots = new Array(), this.drawOrder = new Array(), n = 0; n < e.slots.length; n++) {
              var s = e.slots[n],
                  o = (r = this.bones[s.boneData.index], new t.Slot(s, r));
              this.slots.push(o), this.drawOrder.push(o);
            }

            for (this.ikConstraints = new Array(), n = 0; n < e.ikConstraints.length; n++) {
              var l = e.ikConstraints[n];
              this.ikConstraints.push(new t.IkConstraint(l, this));
            }

            for (this.transformConstraints = new Array(), n = 0; n < e.transformConstraints.length; n++) {
              var h = e.transformConstraints[n];
              this.transformConstraints.push(new t.TransformConstraint(h, this));
            }

            for (this.pathConstraints = new Array(), n = 0; n < e.pathConstraints.length; n++) {
              var u = e.pathConstraints[n];
              this.pathConstraints.push(new t.PathConstraint(u, this));
            }

            this.color = new t.Color(1, 1, 1, 1), this.updateCache();
          }

          return e.prototype.updateCache = function () {
            this._updateCache.length = 0, this.updateCacheReset.length = 0;

            for (var t = this.bones, e = 0, n = t.length; e < n; e++) {
              (r = t[e]).sorted = r.data.skinRequired, r.active = !r.sorted;
            }

            if (null != this.skin) {
              var a = this.skin.bones;

              for (e = 0, n = this.skin.bones.length; e < n; e++) {
                var r = this.bones[a[e].index];

                do {
                  r.sorted = !1, r.active = !0, r = r.parent;
                } while (null != r);
              }
            }

            var i = this.ikConstraints,
                s = this.transformConstraints,
                o = this.pathConstraints,
                l = i.length,
                h = s.length,
                u = o.length,
                c = l + h + u;

            t: for (e = 0; e < c; e++) {
              for (var d = 0; d < l; d++) {
                if ((f = i[d]).data.order == e) {
                  this.sortIkConstraint(f);
                  continue t;
                }
              }

              for (d = 0; d < h; d++) {
                if ((f = s[d]).data.order == e) {
                  this.sortTransformConstraint(f);
                  continue t;
                }
              }

              for (d = 0; d < u; d++) {
                var f;

                if ((f = o[d]).data.order == e) {
                  this.sortPathConstraint(f);
                  continue t;
                }
              }
            }

            for (e = 0, n = t.length; e < n; e++) {
              this.sortBone(t[e]);
            }
          }, e.prototype.sortIkConstraint = function (e) {
            if (e.active = e.target.isActive() && (!e.data.skinRequired || null != this.skin && t.Utils.contains(this.skin.constraints, e.data, !0)), e.active) {
              var n = e.target;
              this.sortBone(n);
              var a = e.bones,
                  r = a[0];

              if (this.sortBone(r), a.length > 1) {
                var i = a[a.length - 1];
                this._updateCache.indexOf(i) > -1 || this.updateCacheReset.push(i);
              }

              this._updateCache.push(e), this.sortReset(r.children), a[a.length - 1].sorted = !0;
            }
          }, e.prototype.sortPathConstraint = function (e) {
            if (e.active = e.target.bone.isActive() && (!e.data.skinRequired || null != this.skin && t.Utils.contains(this.skin.constraints, e.data, !0)), e.active) {
              var n = e.target,
                  a = n.data.index,
                  r = n.bone;
              null != this.skin && this.sortPathConstraintAttachment(this.skin, a, r), null != this.data.defaultSkin && this.data.defaultSkin != this.skin && this.sortPathConstraintAttachment(this.data.defaultSkin, a, r);

              for (var i = 0, s = this.data.skins.length; i < s; i++) {
                this.sortPathConstraintAttachment(this.data.skins[i], a, r);
              }

              var o = n.getAttachment();
              o instanceof t.PathAttachment && this.sortPathConstraintAttachmentWith(o, r);
              var l = e.bones,
                  h = l.length;

              for (i = 0; i < h; i++) {
                this.sortBone(l[i]);
              }

              for (this._updateCache.push(e), i = 0; i < h; i++) {
                this.sortReset(l[i].children);
              }

              for (i = 0; i < h; i++) {
                l[i].sorted = !0;
              }
            }
          }, e.prototype.sortTransformConstraint = function (e) {
            if (e.active = e.target.isActive() && (!e.data.skinRequired || null != this.skin && t.Utils.contains(this.skin.constraints, e.data, !0)), e.active) {
              this.sortBone(e.target);
              var n = e.bones,
                  a = n.length;
              if (e.data.local) for (var r = 0; r < a; r++) {
                var i = n[r];
                this.sortBone(i.parent), this._updateCache.indexOf(i) > -1 || this.updateCacheReset.push(i);
              } else for (r = 0; r < a; r++) {
                this.sortBone(n[r]);
              }

              this._updateCache.push(e);

              for (var s = 0; s < a; s++) {
                this.sortReset(n[s].children);
              }

              for (s = 0; s < a; s++) {
                n[s].sorted = !0;
              }
            }
          }, e.prototype.sortPathConstraintAttachment = function (t, e, n) {
            var a = t.attachments[e];
            if (a) for (var r in a) {
              this.sortPathConstraintAttachmentWith(a[r], n);
            }
          }, e.prototype.sortPathConstraintAttachmentWith = function (e, n) {
            if (e instanceof t.PathAttachment) {
              var a = e.bones;
              if (null == a) this.sortBone(n);else for (var r = this.bones, i = 0; i < a.length;) {
                for (var s = a[i++], o = i + s; i < o; i++) {
                  var l = a[i];
                  this.sortBone(r[l]);
                }
              }
            }
          }, e.prototype.sortBone = function (t) {
            if (!t.sorted) {
              var e = t.parent;
              null != e && this.sortBone(e), t.sorted = !0, this._updateCache.push(t);
            }
          }, e.prototype.sortReset = function (t) {
            for (var e = 0, n = t.length; e < n; e++) {
              var a = t[e];
              a.active && (a.sorted && this.sortReset(a.children), a.sorted = !1);
            }
          }, e.prototype.updateWorldTransform = function () {
            for (var t = this.updateCacheReset, e = 0, n = t.length; e < n; e++) {
              var a = t[e];
              a.ax = a.x, a.ay = a.y, a.arotation = a.rotation, a.ascaleX = a.scaleX, a.ascaleY = a.scaleY, a.ashearX = a.shearX, a.ashearY = a.shearY, a.appliedValid = !0;
            }

            var r = this._updateCache;

            for (e = 0, n = r.length; e < n; e++) {
              r[e].update();
            }
          }, e.prototype.setToSetupPose = function () {
            this.setBonesToSetupPose(), this.setSlotsToSetupPose();
          }, e.prototype.setBonesToSetupPose = function () {
            for (var t = this.bones, e = 0, n = t.length; e < n; e++) {
              t[e].setToSetupPose();
            }

            var a = this.ikConstraints;

            for (e = 0, n = a.length; e < n; e++) {
              (o = a[e]).mix = o.data.mix, o.softness = o.data.softness, o.bendDirection = o.data.bendDirection, o.compress = o.data.compress, o.stretch = o.data.stretch;
            }

            var r = this.transformConstraints;

            for (e = 0, n = r.length; e < n; e++) {
              var i = (o = r[e]).data;
              o.rotateMix = i.rotateMix, o.translateMix = i.translateMix, o.scaleMix = i.scaleMix, o.shearMix = i.shearMix;
            }

            var s = this.pathConstraints;

            for (e = 0, n = s.length; e < n; e++) {
              var o;
              i = (o = s[e]).data, o.position = i.position, o.spacing = i.spacing, o.rotateMix = i.rotateMix, o.translateMix = i.translateMix;
            }
          }, e.prototype.setSlotsToSetupPose = function () {
            var e = this.slots;
            t.Utils.arrayCopy(e, 0, this.drawOrder, 0, e.length);

            for (var n = 0, a = e.length; n < a; n++) {
              e[n].setToSetupPose();
            }
          }, e.prototype.getRootBone = function () {
            return 0 == this.bones.length ? null : this.bones[0];
          }, e.prototype.findBone = function (t) {
            if (null == t) throw new Error("boneName cannot be null.");

            for (var e = this.bones, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.data.name == t) return r;
            }

            return null;
          }, e.prototype.findBoneIndex = function (t) {
            if (null == t) throw new Error("boneName cannot be null.");

            for (var e = this.bones, n = 0, a = e.length; n < a; n++) {
              if (e[n].data.name == t) return n;
            }

            return -1;
          }, e.prototype.findSlot = function (t) {
            if (null == t) throw new Error("slotName cannot be null.");

            for (var e = this.slots, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.data.name == t) return r;
            }

            return null;
          }, e.prototype.findSlotIndex = function (t) {
            if (null == t) throw new Error("slotName cannot be null.");

            for (var e = this.slots, n = 0, a = e.length; n < a; n++) {
              if (e[n].data.name == t) return n;
            }

            return -1;
          }, e.prototype.setSkinByName = function (t) {
            var e = this.data.findSkin(t);
            if (null == e) throw new Error("Skin not found: " + t);
            this.setSkin(e);
          }, e.prototype.setSkin = function (t) {
            if (t != this.skin) {
              if (null != t) if (null != this.skin) t.attachAll(this, this.skin);else for (var e = this.slots, n = 0, a = e.length; n < a; n++) {
                var r = e[n],
                    i = r.data.attachmentName;

                if (null != i) {
                  var s = t.getAttachment(n, i);
                  null != s && r.setAttachment(s);
                }
              }
              this.skin = t, this.updateCache();
            }
          }, e.prototype.getAttachmentByName = function (t, e) {
            return this.getAttachment(this.data.findSlotIndex(t), e);
          }, e.prototype.getAttachment = function (t, e) {
            if (null == e) throw new Error("attachmentName cannot be null.");

            if (null != this.skin) {
              var n = this.skin.getAttachment(t, e);
              if (null != n) return n;
            }

            return null != this.data.defaultSkin ? this.data.defaultSkin.getAttachment(t, e) : null;
          }, e.prototype.setAttachment = function (t, e) {
            if (null == t) throw new Error("slotName cannot be null.");

            for (var n = this.slots, a = 0, r = n.length; a < r; a++) {
              var i = n[a];

              if (i.data.name == t) {
                var s = null;
                if (null != e && null == (s = this.getAttachment(a, e))) throw new Error("Attachment not found: " + e + ", for slot: " + t);
                return void i.setAttachment(s);
              }
            }

            throw new Error("Slot not found: " + t);
          }, e.prototype.findIkConstraint = function (t) {
            if (null == t) throw new Error("constraintName cannot be null.");

            for (var e = this.ikConstraints, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.data.name == t) return r;
            }

            return null;
          }, e.prototype.findTransformConstraint = function (t) {
            if (null == t) throw new Error("constraintName cannot be null.");

            for (var e = this.transformConstraints, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.data.name == t) return r;
            }

            return null;
          }, e.prototype.findPathConstraint = function (t) {
            if (null == t) throw new Error("constraintName cannot be null.");

            for (var e = this.pathConstraints, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.data.name == t) return r;
            }

            return null;
          }, e.prototype.getBounds = function (e, n, a) {
            if (void 0 === a && (a = new Array(2)), null == e) throw new Error("offset cannot be null.");
            if (null == n) throw new Error("size cannot be null.");

            for (var r = this.drawOrder, i = Number.POSITIVE_INFINITY, s = Number.POSITIVE_INFINITY, o = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, h = 0, u = r.length; h < u; h++) {
              var c = r[h];

              if (c.bone.active) {
                var d = 0,
                    f = null,
                    p = c.getAttachment();
                if (p instanceof t.RegionAttachment) d = 8, f = t.Utils.setArraySize(a, d, 0), p.computeWorldVertices(c.bone, f, 0, 2);else if (p instanceof t.MeshAttachment) {
                  var m = p;
                  d = m.worldVerticesLength, f = t.Utils.setArraySize(a, d, 0), m.computeWorldVertices(c, 0, d, f, 0, 2);
                }
                if (null != f) for (var g = 0, v = f.length; g < v; g += 2) {
                  var y = f[g],
                      x = f[g + 1];
                  i = Math.min(i, y), s = Math.min(s, x), o = Math.max(o, y), l = Math.max(l, x);
                }
              }
            }

            e.set(i, s), n.set(o - i, l - s);
          }, e.prototype.update = function (t) {
            this.time += t;
          }, e;
        }();

        t.Skeleton = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t) {
            this.scale = 1, this.linkedMeshes = new Array(), this.attachmentLoader = t;
          }

          return e.prototype.readSkeletonData = function (a) {
            var r = this.scale,
                i = new t.SkeletonData();
            i.name = "";
            var s = new n(a);
            i.hash = s.readString(), i.version = s.readString(), i.x = s.readFloat(), i.y = s.readFloat(), i.width = s.readFloat(), i.height = s.readFloat();
            var o = s.readBoolean();
            o && (i.fps = s.readFloat(), i.imagesPath = s.readString(), i.audioPath = s.readString());
            var l = 0;
            l = s.readInt(!0);

            for (var h = 0; h < l; h++) {
              s.strings.push(s.readString());
            }

            for (l = s.readInt(!0), h = 0; h < l; h++) {
              var u = s.readString(),
                  c = 0 == h ? null : i.bones[s.readInt(!0)];
              (p = new t.BoneData(h, u, c)).rotation = s.readFloat(), p.x = s.readFloat() * r, p.y = s.readFloat() * r, p.scaleX = s.readFloat(), p.scaleY = s.readFloat(), p.shearX = s.readFloat(), p.shearY = s.readFloat(), p.length = s.readFloat() * r, p.transformMode = e.TransformModeValues[s.readInt(!0)], p.skinRequired = s.readBoolean(), o && t.Color.rgba8888ToColor(p.color, s.readInt32()), i.bones.push(p);
            }

            for (l = s.readInt(!0), h = 0; h < l; h++) {
              var d = s.readString(),
                  f = i.bones[s.readInt(!0)],
                  p = new t.SlotData(h, d, f);
              t.Color.rgba8888ToColor(p.color, s.readInt32());
              var m = s.readInt32();
              -1 != m && t.Color.rgb888ToColor(p.darkColor = new t.Color(), m), p.attachmentName = s.readStringRef(), p.blendMode = e.BlendModeValues[s.readInt(!0)], i.slots.push(p);
            }

            l = s.readInt(!0), h = 0;

            for (var g = void 0; h < l; h++) {
              (p = new t.IkConstraintData(s.readString())).order = s.readInt(!0), p.skinRequired = s.readBoolean(), g = s.readInt(!0);

              for (var v = 0; v < g; v++) {
                p.bones.push(i.bones[s.readInt(!0)]);
              }

              p.target = i.bones[s.readInt(!0)], p.mix = s.readFloat(), p.softness = s.readFloat() * r, p.bendDirection = s.readByte(), p.compress = s.readBoolean(), p.stretch = s.readBoolean(), p.uniform = s.readBoolean(), i.ikConstraints.push(p);
            }

            for (l = s.readInt(!0), h = 0, g = void 0; h < l; h++) {
              for ((p = new t.TransformConstraintData(s.readString())).order = s.readInt(!0), p.skinRequired = s.readBoolean(), g = s.readInt(!0), v = 0; v < g; v++) {
                p.bones.push(i.bones[s.readInt(!0)]);
              }

              p.target = i.bones[s.readInt(!0)], p.local = s.readBoolean(), p.relative = s.readBoolean(), p.offsetRotation = s.readFloat(), p.offsetX = s.readFloat() * r, p.offsetY = s.readFloat() * r, p.offsetScaleX = s.readFloat(), p.offsetScaleY = s.readFloat(), p.offsetShearY = s.readFloat(), p.rotateMix = s.readFloat(), p.translateMix = s.readFloat(), p.scaleMix = s.readFloat(), p.shearMix = s.readFloat(), i.transformConstraints.push(p);
            }

            for (l = s.readInt(!0), h = 0, g = void 0; h < l; h++) {
              for ((p = new t.PathConstraintData(s.readString())).order = s.readInt(!0), p.skinRequired = s.readBoolean(), g = s.readInt(!0), v = 0; v < g; v++) {
                p.bones.push(i.bones[s.readInt(!0)]);
              }

              p.target = i.slots[s.readInt(!0)], p.positionMode = e.PositionModeValues[s.readInt(!0)], p.spacingMode = e.SpacingModeValues[s.readInt(!0)], p.rotateMode = e.RotateModeValues[s.readInt(!0)], p.offsetRotation = s.readFloat(), p.position = s.readFloat(), p.positionMode == t.PositionMode.Fixed && (p.position *= r), p.spacing = s.readFloat(), p.spacingMode != t.SpacingMode.Length && p.spacingMode != t.SpacingMode.Fixed || (p.spacing *= r), p.rotateMix = s.readFloat(), p.translateMix = s.readFloat(), i.pathConstraints.push(p);
            }

            var y = this.readSkin(s, i, !0, o);

            for (null != y && (i.defaultSkin = y, i.skins.push(y)), h = i.skins.length, t.Utils.setArraySize(i.skins, l = h + s.readInt(!0)); h < l; h++) {
              i.skins[h] = this.readSkin(s, i, !1, o);
            }

            for (l = this.linkedMeshes.length, h = 0; h < l; h++) {
              var x = this.linkedMeshes[h],
                  w = null == x.skin ? i.defaultSkin : i.findSkin(x.skin);
              if (null == w) throw new Error("Skin not found: " + x.skin);
              var E = w.getAttachment(x.slotIndex, x.parent);
              if (null == E) throw new Error("Parent mesh not found: " + x.parent);
              x.mesh.deformAttachment = x.inheritDeform ? E : x.mesh, x.mesh.setParentMesh(E), x.mesh.updateUVs();
            }

            for (this.linkedMeshes.length = 0, l = s.readInt(!0), h = 0; h < l; h++) {
              (p = new t.EventData(s.readStringRef())).intValue = s.readInt(!1), p.floatValue = s.readFloat(), p.stringValue = s.readString(), p.audioPath = s.readString(), null != p.audioPath && (p.volume = s.readFloat(), p.balance = s.readFloat()), i.events.push(p);
            }

            for (l = s.readInt(!0), h = 0; h < l; h++) {
              i.animations.push(this.readAnimation(s, s.readString(), i));
            }

            return i;
          }, e.prototype.readSkin = function (e, n, a, r) {
            var i = null,
                s = 0;

            if (a) {
              if (0 == (s = e.readInt(!0))) return null;
              i = new t.Skin("default");
            } else {
              (i = new t.Skin(e.readStringRef())).bones.length = e.readInt(!0);

              for (var o = 0, l = i.bones.length; o < l; o++) {
                i.bones[o] = n.bones[e.readInt(!0)];
              }

              for (o = 0, l = e.readInt(!0); o < l; o++) {
                i.constraints.push(n.ikConstraints[e.readInt(!0)]);
              }

              for (o = 0, l = e.readInt(!0); o < l; o++) {
                i.constraints.push(n.transformConstraints[e.readInt(!0)]);
              }

              for (o = 0, l = e.readInt(!0); o < l; o++) {
                i.constraints.push(n.pathConstraints[e.readInt(!0)]);
              }

              s = e.readInt(!0);
            }

            for (o = 0; o < s; o++) {
              for (var h = e.readInt(!0), u = 0, c = e.readInt(!0); u < c; u++) {
                var d = e.readStringRef(),
                    f = this.readAttachment(e, n, i, h, d, r);
                null != f && i.setAttachment(h, d, f);
              }
            }

            return i;
          }, e.prototype.readAttachment = function (n, r, i, s, o, l) {
            var h = this.scale,
                u = n.readStringRef();
            null == u && (u = o);
            var c = n.readByte();

            switch (e.AttachmentTypeValues[c]) {
              case t.AttachmentType.Region:
                var d = n.readStringRef(),
                    f = n.readFloat(),
                    p = n.readFloat(),
                    m = n.readFloat(),
                    g = n.readFloat(),
                    v = n.readFloat(),
                    y = n.readFloat(),
                    x = n.readFloat(),
                    w = n.readInt32();
                null == d && (d = u);
                var E = this.attachmentLoader.newRegionAttachment(i, u, d);
                return null == E ? null : (E.path = d, E.x = p * h, E.y = m * h, E.scaleX = g, E.scaleY = v, E.rotation = f, E.width = y * h, E.height = x * h, t.Color.rgba8888ToColor(E.color, w), E.updateOffset(), E);

              case t.AttachmentType.BoundingBox:
                var M = n.readInt(!0),
                    _ = this.readVertices(n, M),
                    T = (w = l ? n.readInt32() : 0, this.attachmentLoader.newBoundingBoxAttachment(i, u));

                return null == T ? null : (T.worldVerticesLength = M << 1, T.vertices = _.vertices, T.bones = _.bones, l && t.Color.rgba8888ToColor(T.color, w), T);

              case t.AttachmentType.Mesh:
                d = n.readStringRef(), w = n.readInt32(), M = n.readInt(!0);
                var b = this.readFloatArray(n, M << 1, 1),
                    A = this.readShortArray(n),
                    C = (_ = this.readVertices(n, M), n.readInt(!0)),
                    S = null;
                return y = 0, x = 0, l && (S = this.readShortArray(n), y = n.readFloat(), x = n.readFloat()), null == d && (d = u), null == (k = this.attachmentLoader.newMeshAttachment(i, u, d)) ? null : (k.path = d, t.Color.rgba8888ToColor(k.color, w), k.bones = _.bones, k.vertices = _.vertices, k.worldVerticesLength = M << 1, k.triangles = A, k.regionUVs = b, k.updateUVs(), k.hullLength = C << 1, l && (k.edges = S, k.width = y * h, k.height = x * h), k);

              case t.AttachmentType.LinkedMesh:
                d = n.readStringRef(), w = n.readInt32();
                var k,
                    I = n.readStringRef(),
                    R = n.readStringRef(),
                    P = n.readBoolean();
                return y = 0, x = 0, l && (y = n.readFloat(), x = n.readFloat()), null == d && (d = u), null == (k = this.attachmentLoader.newMeshAttachment(i, u, d)) ? null : (k.path = d, t.Color.rgba8888ToColor(k.color, w), l && (k.width = y * h, k.height = x * h), this.linkedMeshes.push(new a(k, I, s, R, P)), k);

              case t.AttachmentType.Path:
                for (var D = n.readBoolean(), V = n.readBoolean(), N = (M = n.readInt(!0), _ = this.readVertices(n, M), t.Utils.newArray(M / 3, 0)), F = 0, O = N.length; F < O; F++) {
                  N[F] = n.readFloat() * h;
                }

                return w = l ? n.readInt32() : 0, null == (d = this.attachmentLoader.newPathAttachment(i, u)) ? null : (d.closed = D, d.constantSpeed = V, d.worldVerticesLength = M << 1, d.vertices = _.vertices, d.bones = _.bones, d.lengths = N, l && t.Color.rgba8888ToColor(d.color, w), d);

              case t.AttachmentType.Point:
                f = n.readFloat(), p = n.readFloat(), m = n.readFloat(), w = l ? n.readInt32() : 0;
                var L = this.attachmentLoader.newPointAttachment(i, u);
                return null == L ? null : (L.x = p * h, L.y = m * h, L.rotation = f, l && t.Color.rgba8888ToColor(L.color, w), L);

              case t.AttachmentType.Clipping:
                var U = n.readInt(!0),
                    B = (M = n.readInt(!0), _ = this.readVertices(n, M), w = l ? n.readInt32() : 0, this.attachmentLoader.newClippingAttachment(i, u));
                return null == B ? null : (B.endSlot = r.slots[U], B.worldVerticesLength = M << 1, B.vertices = _.vertices, B.bones = _.bones, l && t.Color.rgba8888ToColor(B.color, w), B);
            }

            return null;
          }, e.prototype.readVertices = function (e, n) {
            var a = n << 1,
                i = new r(),
                s = this.scale;
            if (!e.readBoolean()) return i.vertices = this.readFloatArray(e, a, s), i;

            for (var o = new Array(), l = new Array(), h = 0; h < n; h++) {
              var u = e.readInt(!0);
              l.push(u);

              for (var c = 0; c < u; c++) {
                l.push(e.readInt(!0)), o.push(e.readFloat() * s), o.push(e.readFloat() * s), o.push(e.readFloat());
              }
            }

            return i.vertices = t.Utils.toFloatArray(o), i.bones = l, i;
          }, e.prototype.readFloatArray = function (t, e, n) {
            var a = new Array(e);
            if (1 == n) for (var r = 0; r < e; r++) {
              a[r] = t.readFloat();
            } else for (r = 0; r < e; r++) {
              a[r] = t.readFloat() * n;
            }
            return a;
          }, e.prototype.readShortArray = function (t) {
            for (var e = t.readInt(!0), n = new Array(e), a = 0; a < e; a++) {
              n[a] = t.readShort();
            }

            return n;
          }, e.prototype.readAnimation = function (n, a, r) {
            for (var i = new Array(), s = this.scale, o = 0, l = new t.Color(), h = new t.Color(), u = 0, c = n.readInt(!0); u < c; u++) {
              for (var d = n.readInt(!0), f = 0, p = n.readInt(!0); f < p; f++) {
                var m = n.readByte(),
                    g = n.readInt(!0);

                switch (m) {
                  case e.SLOT_ATTACHMENT:
                    (w = new t.AttachmentTimeline(g)).slotIndex = d;

                    for (var v = 0; v < g; v++) {
                      w.setFrame(v, n.readFloat(), n.readStringRef());
                    }

                    i.push(w), o = Math.max(o, w.frames[g - 1]);
                    break;

                  case e.SLOT_COLOR:
                    for ((w = new t.ColorTimeline(g)).slotIndex = d, v = 0; v < g; v++) {
                      var y = n.readFloat();
                      t.Color.rgba8888ToColor(l, n.readInt32()), w.setFrame(v, y, l.r, l.g, l.b, l.a), v < g - 1 && this.readCurve(n, v, w);
                    }

                    i.push(w), o = Math.max(o, w.frames[(g - 1) * t.ColorTimeline.ENTRIES]);
                    break;

                  case e.SLOT_TWO_COLOR:
                    for ((w = new t.TwoColorTimeline(g)).slotIndex = d, v = 0; v < g; v++) {
                      y = n.readFloat(), t.Color.rgba8888ToColor(l, n.readInt32()), t.Color.rgb888ToColor(h, n.readInt32()), w.setFrame(v, y, l.r, l.g, l.b, l.a, h.r, h.g, h.b), v < g - 1 && this.readCurve(n, v, w);
                    }

                    i.push(w), o = Math.max(o, w.frames[(g - 1) * t.TwoColorTimeline.ENTRIES]);
                }
              }
            }

            for (u = 0, c = n.readInt(!0); u < c; u++) {
              var x = n.readInt(!0);

              for (f = 0, p = n.readInt(!0); f < p; f++) {
                switch (m = n.readByte(), g = n.readInt(!0), m) {
                  case e.BONE_ROTATE:
                    for ((w = new t.RotateTimeline(g)).boneIndex = x, v = 0; v < g; v++) {
                      w.setFrame(v, n.readFloat(), n.readFloat()), v < g - 1 && this.readCurve(n, v, w);
                    }

                    i.push(w), o = Math.max(o, w.frames[(g - 1) * t.RotateTimeline.ENTRIES]);
                    break;

                  case e.BONE_TRANSLATE:
                  case e.BONE_SCALE:
                  case e.BONE_SHEAR:
                    var w = void 0,
                        E = 1;

                    for (m == e.BONE_SCALE ? w = new t.ScaleTimeline(g) : m == e.BONE_SHEAR ? w = new t.ShearTimeline(g) : (w = new t.TranslateTimeline(g), E = s), w.boneIndex = x, v = 0; v < g; v++) {
                      w.setFrame(v, n.readFloat(), n.readFloat() * E, n.readFloat() * E), v < g - 1 && this.readCurve(n, v, w);
                    }

                    i.push(w), o = Math.max(o, w.frames[(g - 1) * t.TranslateTimeline.ENTRIES]);
                }
              }
            }

            for (u = 0, c = n.readInt(!0); u < c; u++) {
              var M = n.readInt(!0);

              for (g = n.readInt(!0), (w = new t.IkConstraintTimeline(g)).ikConstraintIndex = M, v = 0; v < g; v++) {
                w.setFrame(v, n.readFloat(), n.readFloat(), n.readFloat() * s, n.readByte(), n.readBoolean(), n.readBoolean()), v < g - 1 && this.readCurve(n, v, w);
              }

              i.push(w), o = Math.max(o, w.frames[(g - 1) * t.IkConstraintTimeline.ENTRIES]);
            }

            for (u = 0, c = n.readInt(!0); u < c; u++) {
              for (M = n.readInt(!0), g = n.readInt(!0), (w = new t.TransformConstraintTimeline(g)).transformConstraintIndex = M, v = 0; v < g; v++) {
                w.setFrame(v, n.readFloat(), n.readFloat(), n.readFloat(), n.readFloat(), n.readFloat()), v < g - 1 && this.readCurve(n, v, w);
              }

              i.push(w), o = Math.max(o, w.frames[(g - 1) * t.TransformConstraintTimeline.ENTRIES]);
            }

            for (u = 0, c = n.readInt(!0); u < c; u++) {
              M = n.readInt(!0);
              var _ = r.pathConstraints[M];

              for (f = 0, p = n.readInt(!0); f < p; f++) {
                switch (m = n.readByte(), g = n.readInt(!0), m) {
                  case e.PATH_POSITION:
                  case e.PATH_SPACING:
                    for (w = void 0, E = 1, m == e.PATH_SPACING ? (w = new t.PathConstraintSpacingTimeline(g), _.spacingMode != t.SpacingMode.Length && _.spacingMode != t.SpacingMode.Fixed || (E = s)) : (w = new t.PathConstraintPositionTimeline(g), _.positionMode == t.PositionMode.Fixed && (E = s)), w.pathConstraintIndex = M, v = 0; v < g; v++) {
                      w.setFrame(v, n.readFloat(), n.readFloat() * E), v < g - 1 && this.readCurve(n, v, w);
                    }

                    i.push(w), o = Math.max(o, w.frames[(g - 1) * t.PathConstraintPositionTimeline.ENTRIES]);
                    break;

                  case e.PATH_MIX:
                    for ((w = new t.PathConstraintMixTimeline(g)).pathConstraintIndex = M, v = 0; v < g; v++) {
                      w.setFrame(v, n.readFloat(), n.readFloat(), n.readFloat()), v < g - 1 && this.readCurve(n, v, w);
                    }

                    i.push(w), o = Math.max(o, w.frames[(g - 1) * t.PathConstraintMixTimeline.ENTRIES]);
                }
              }
            }

            for (u = 0, c = n.readInt(!0); u < c; u++) {
              var T = r.skins[n.readInt(!0)];

              for (f = 0, p = n.readInt(!0); f < p; f++) {
                d = n.readInt(!0);

                for (var b = 0, A = n.readInt(!0); b < A; b++) {
                  var C = T.getAttachment(d, n.readStringRef()),
                      S = null != C.bones,
                      k = C.vertices,
                      I = S ? k.length / 3 * 2 : k.length;

                  for (g = n.readInt(!0), (w = new t.DeformTimeline(g)).slotIndex = d, w.attachment = C, v = 0; v < g; v++) {
                    y = n.readFloat();
                    var R = void 0,
                        P = n.readInt(!0);
                    if (0 == P) R = S ? t.Utils.newFloatArray(I) : k;else {
                      R = t.Utils.newFloatArray(I);
                      var D = n.readInt(!0);
                      if (P += D, 1 == s) for (var V = D; V < P; V++) {
                        R[V] = n.readFloat();
                      } else for (V = D; V < P; V++) {
                        R[V] = n.readFloat() * s;
                      }

                      if (!S) {
                        V = 0;

                        for (var N = R.length; V < N; V++) {
                          R[V] += k[V];
                        }
                      }
                    }
                    w.setFrame(v, y, R), v < g - 1 && this.readCurve(n, v, w);
                  }

                  i.push(w), o = Math.max(o, w.frames[g - 1]);
                }
              }
            }

            var F = n.readInt(!0);

            if (F > 0) {
              w = new t.DrawOrderTimeline(F);
              var O = r.slots.length;

              for (u = 0; u < F; u++) {
                y = n.readFloat();
                var L = n.readInt(!0),
                    U = t.Utils.newArray(O, 0);

                for (f = O - 1; f >= 0; f--) {
                  U[f] = -1;
                }

                var B = t.Utils.newArray(O - L, 0),
                    Y = 0,
                    X = 0;

                for (f = 0; f < L; f++) {
                  for (d = n.readInt(!0); Y != d;) {
                    B[X++] = Y++;
                  }

                  U[Y + n.readInt(!0)] = Y++;
                }

                for (; Y < O;) {
                  B[X++] = Y++;
                }

                for (f = O - 1; f >= 0; f--) {
                  -1 == U[f] && (U[f] = B[--X]);
                }

                w.setFrame(u, y, U);
              }

              i.push(w), o = Math.max(o, w.frames[F - 1]);
            }

            var W = n.readInt(!0);

            if (W > 0) {
              for (w = new t.EventTimeline(W), u = 0; u < W; u++) {
                y = n.readFloat();
                var q = r.events[n.readInt(!0)],
                    H = new t.Event(y, q);
                H.intValue = n.readInt(!1), H.floatValue = n.readFloat(), H.stringValue = n.readBoolean() ? n.readString() : q.stringValue, null != H.data.audioPath && (H.volume = n.readFloat(), H.balance = n.readFloat()), w.setFrame(u, H);
              }

              i.push(w), o = Math.max(o, w.frames[W - 1]);
            }

            return new t.Animation(a, i, o);
          }, e.prototype.readCurve = function (t, n, a) {
            switch (t.readByte()) {
              case e.CURVE_STEPPED:
                a.setStepped(n);
                break;

              case e.CURVE_BEZIER:
                this.setCurve(a, n, t.readFloat(), t.readFloat(), t.readFloat(), t.readFloat());
            }
          }, e.prototype.setCurve = function (t, e, n, a, r, i) {
            t.setCurve(e, n, a, r, i);
          }, e.AttachmentTypeValues = [0, 1, 2, 3, 4, 5, 6], e.TransformModeValues = [t.TransformMode.Normal, t.TransformMode.OnlyTranslation, t.TransformMode.NoRotationOrReflection, t.TransformMode.NoScale, t.TransformMode.NoScaleOrReflection], e.PositionModeValues = [t.PositionMode.Fixed, t.PositionMode.Percent], e.SpacingModeValues = [t.SpacingMode.Length, t.SpacingMode.Fixed, t.SpacingMode.Percent], e.RotateModeValues = [t.RotateMode.Tangent, t.RotateMode.Chain, t.RotateMode.ChainScale], e.BlendModeValues = [t.BlendMode.Normal, t.BlendMode.Additive, t.BlendMode.Multiply, t.BlendMode.Screen], e.BONE_ROTATE = 0, e.BONE_TRANSLATE = 1, e.BONE_SCALE = 2, e.BONE_SHEAR = 3, e.SLOT_ATTACHMENT = 0, e.SLOT_COLOR = 1, e.SLOT_TWO_COLOR = 2, e.PATH_POSITION = 0, e.PATH_SPACING = 1, e.PATH_MIX = 2, e.CURVE_LINEAR = 0, e.CURVE_STEPPED = 1, e.CURVE_BEZIER = 2, e;
        }();

        t.SkeletonBinary = e;

        var n = function () {
          function t(t, e, n, a) {
            void 0 === e && (e = new Array()), void 0 === n && (n = 0), void 0 === a && (a = new DataView(t.buffer)), this.strings = e, this.index = n, this.buffer = a;
          }

          return t.prototype.readByte = function () {
            return this.buffer.getInt8(this.index++);
          }, t.prototype.readShort = function () {
            var t = this.buffer.getInt16(this.index);
            return this.index += 2, t;
          }, t.prototype.readInt32 = function () {
            var t = this.buffer.getInt32(this.index);
            return this.index += 4, t;
          }, t.prototype.readInt = function (t) {
            var e = this.readByte(),
                n = 127 & e;
            return 0 != (128 & e) && (n |= (127 & (e = this.readByte())) << 7, 0 != (128 & e) && (n |= (127 & (e = this.readByte())) << 14, 0 != (128 & e) && (n |= (127 & (e = this.readByte())) << 21, 0 != (128 & e) && (n |= (127 & (e = this.readByte())) << 28)))), t ? n : n >>> 1 ^ -(1 & n);
          }, t.prototype.readStringRef = function () {
            var t = this.readInt(!0);
            return 0 == t ? null : this.strings[t - 1];
          }, t.prototype.readString = function () {
            var t = this.readInt(!0);

            switch (t) {
              case 0:
                return null;

              case 1:
                return "";
            }

            t--;

            for (var e = "", n = 0; n < t;) {
              var a = this.readByte();

              switch (a >> 4) {
                case 12:
                case 13:
                  e += String.fromCharCode((31 & a) << 6 | 63 & this.readByte()), n += 2;
                  break;

                case 14:
                  e += String.fromCharCode((15 & a) << 12 | (63 & this.readByte()) << 6 | 63 & this.readByte()), n += 3;
                  break;

                default:
                  e += String.fromCharCode(a), n++;
              }
            }

            return e;
          }, t.prototype.readFloat = function () {
            var t = this.buffer.getFloat32(this.index);
            return this.index += 4, t;
          }, t.prototype.readBoolean = function () {
            return 0 != this.readByte();
          }, t;
        }(),
            a = function a(t, e, n, _a, r) {
          this.mesh = t, this.skin = e, this.slotIndex = n, this.parent = _a, this.inheritDeform = r;
        },
            r = function r(t, e) {
          void 0 === t && (t = null), void 0 === e && (e = null), this.bones = t, this.vertices = e;
        };
      }(J || (J = {})), function (t) {
        var e = function () {
          function e() {
            this.minX = 0, this.minY = 0, this.maxX = 0, this.maxY = 0, this.boundingBoxes = new Array(), this.polygons = new Array(), this.polygonPool = new t.Pool(function () {
              return t.Utils.newFloatArray(16);
            });
          }

          return e.prototype.update = function (e, n) {
            if (null == e) throw new Error("skeleton cannot be null.");
            var a = this.boundingBoxes,
                r = this.polygons,
                i = this.polygonPool,
                s = e.slots,
                o = s.length;
            a.length = 0, i.freeAll(r), r.length = 0;

            for (var l = 0; l < o; l++) {
              var h = s[l];

              if (h.bone.active) {
                var u = h.getAttachment();

                if (u instanceof t.BoundingBoxAttachment) {
                  var c = u;
                  a.push(c);
                  var d = i.obtain();
                  d.length != c.worldVerticesLength && (d = t.Utils.newFloatArray(c.worldVerticesLength)), r.push(d), c.computeWorldVertices(h, 0, c.worldVerticesLength, d, 0, 2);
                }
              }
            }

            n ? this.aabbCompute() : (this.minX = Number.POSITIVE_INFINITY, this.minY = Number.POSITIVE_INFINITY, this.maxX = Number.NEGATIVE_INFINITY, this.maxY = Number.NEGATIVE_INFINITY);
          }, e.prototype.aabbCompute = function () {
            for (var t = Number.POSITIVE_INFINITY, e = Number.POSITIVE_INFINITY, n = Number.NEGATIVE_INFINITY, a = Number.NEGATIVE_INFINITY, r = this.polygons, i = 0, s = r.length; i < s; i++) {
              for (var o = r[i], l = o, h = 0, u = o.length; h < u; h += 2) {
                var c = l[h],
                    d = l[h + 1];
                t = Math.min(t, c), e = Math.min(e, d), n = Math.max(n, c), a = Math.max(a, d);
              }
            }

            this.minX = t, this.minY = e, this.maxX = n, this.maxY = a;
          }, e.prototype.aabbContainsPoint = function (t, e) {
            return t >= this.minX && t <= this.maxX && e >= this.minY && e <= this.maxY;
          }, e.prototype.aabbIntersectsSegment = function (t, e, n, a) {
            var r = this.minX,
                i = this.minY,
                s = this.maxX,
                o = this.maxY;
            if (t <= r && n <= r || e <= i && a <= i || t >= s && n >= s || e >= o && a >= o) return !1;
            var l = (a - e) / (n - t),
                h = l * (r - t) + e;
            if (h > i && h < o) return !0;
            if ((h = l * (s - t) + e) > i && h < o) return !0;
            var u = (i - e) / l + t;
            return u > r && u < s || (u = (o - e) / l + t) > r && u < s;
          }, e.prototype.aabbIntersectsSkeleton = function (t) {
            return this.minX < t.maxX && this.maxX > t.minX && this.minY < t.maxY && this.maxY > t.minY;
          }, e.prototype.containsPoint = function (t, e) {
            for (var n = this.polygons, a = 0, r = n.length; a < r; a++) {
              if (this.containsPointPolygon(n[a], t, e)) return this.boundingBoxes[a];
            }

            return null;
          }, e.prototype.containsPointPolygon = function (t, e, n) {
            for (var a = t, r = t.length, i = r - 2, s = !1, o = 0; o < r; o += 2) {
              var l = a[o + 1],
                  h = a[i + 1];

              if (l < n && h >= n || h < n && l >= n) {
                var u = a[o];
                u + (n - l) / (h - l) * (a[i] - u) < e && (s = !s);
              }

              i = o;
            }

            return s;
          }, e.prototype.intersectsSegment = function (t, e, n, a) {
            for (var r = this.polygons, i = 0, s = r.length; i < s; i++) {
              if (this.intersectsSegmentPolygon(r[i], t, e, n, a)) return this.boundingBoxes[i];
            }

            return null;
          }, e.prototype.intersectsSegmentPolygon = function (t, e, n, a, r) {
            for (var i = t, s = t.length, o = e - a, l = n - r, h = e * r - n * a, u = i[s - 2], c = i[s - 1], d = 0; d < s; d += 2) {
              var f = i[d],
                  p = i[d + 1],
                  m = u * p - c * f,
                  g = u - f,
                  v = c - p,
                  y = o * v - l * g,
                  x = (h * g - o * m) / y;

              if ((x >= u && x <= f || x >= f && x <= u) && (x >= e && x <= a || x >= a && x <= e)) {
                var w = (h * v - l * m) / y;
                if ((w >= c && w <= p || w >= p && w <= c) && (w >= n && w <= r || w >= r && w <= n)) return !0;
              }

              u = f, c = p;
            }

            return !1;
          }, e.prototype.getPolygon = function (t) {
            if (null == t) throw new Error("boundingBox cannot be null.");
            var e = this.boundingBoxes.indexOf(t);
            return -1 == e ? null : this.polygons[e];
          }, e.prototype.getWidth = function () {
            return this.maxX - this.minX;
          }, e.prototype.getHeight = function () {
            return this.maxY - this.minY;
          }, e;
        }();

        t.SkeletonBounds = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e() {
            this.triangulator = new t.Triangulator(), this.clippingPolygon = new Array(), this.clipOutput = new Array(), this.clippedVertices = new Array(), this.clippedTriangles = new Array(), this.scratch = new Array();
          }

          return e.prototype.clipStart = function (n, a) {
            if (null != this.clipAttachment) return 0;
            this.clipAttachment = a;
            var r = a.worldVerticesLength,
                i = t.Utils.setArraySize(this.clippingPolygon, r);
            a.computeWorldVertices(n, 0, r, i, 0, 2);
            var s = this.clippingPolygon;
            e.makeClockwise(s);

            for (var o = this.clippingPolygons = this.triangulator.decompose(s, this.triangulator.triangulate(s)), l = 0, h = o.length; l < h; l++) {
              var u = o[l];
              e.makeClockwise(u), u.push(u[0]), u.push(u[1]);
            }

            return o.length;
          }, e.prototype.clipEndWithSlot = function (t) {
            null != this.clipAttachment && this.clipAttachment.endSlot == t.data && this.clipEnd();
          }, e.prototype.clipEnd = function () {
            null != this.clipAttachment && (this.clipAttachment = null, this.clippingPolygons = null, this.clippedVertices.length = 0, this.clippedTriangles.length = 0, this.clippingPolygon.length = 0);
          }, e.prototype.isClipping = function () {
            return null != this.clipAttachment;
          }, e.prototype.clipTriangles = function (e, n, a, r, i, s, o, l, h, u, c) {
            void 0 === h && (h = 2), void 0 === u && (u = 0), void 0 === c && (c = 0);
            var d = this.clipOutput,
                f = this.clippedVertices,
                p = this.clippedTriangles,
                m = this.clippingPolygons,
                g = this.clippingPolygons.length,
                v = l ? 12 : 8,
                y = 0;
            f.length = 0, p.length = 0;

            t: for (var x = 0; x < r; x += 3) {
              for (var w = a[x] * h, E = e[w + u], M = e[w + u + 1], _ = i[w + c], T = i[w + c + 1], b = e[(w = a[x + 1] * h) + u], A = e[w + u + 1], C = i[w + c], S = i[w + c + 1], k = e[(w = a[x + 2] * h) + u], I = e[w + u + 1], R = i[w + c], P = i[w + c + 1], D = 0; D < g; D++) {
                var V = f.length;

                if (!this.clip(E, M, b, A, k, I, m[D], d)) {
                  (W = t.Utils.setArraySize(f, V + 3 * v))[V] = E, W[V + 1] = M, W[V + 2] = s.r, W[V + 3] = s.g, W[V + 4] = s.b, W[V + 5] = s.a, l ? (W[V + 6] = _, W[V + 7] = T, W[V + 8] = o.r, W[V + 9] = o.g, W[V + 10] = o.b, W[V + 11] = o.a, W[V + 12] = b, W[V + 13] = A, W[V + 14] = s.r, W[V + 15] = s.g, W[V + 16] = s.b, W[V + 17] = s.a, W[V + 18] = C, W[V + 19] = S, W[V + 20] = o.r, W[V + 21] = o.g, W[V + 22] = o.b, W[V + 23] = o.a, W[V + 24] = k, W[V + 25] = I, W[V + 26] = s.r, W[V + 27] = s.g, W[V + 28] = s.b, W[V + 29] = s.a, W[V + 30] = R, W[V + 31] = P, W[V + 32] = o.r, W[V + 33] = o.g, W[V + 34] = o.b, W[V + 35] = o.a) : (W[V + 6] = _, W[V + 7] = T, W[V + 8] = b, W[V + 9] = A, W[V + 10] = s.r, W[V + 11] = s.g, W[V + 12] = s.b, W[V + 13] = s.a, W[V + 14] = C, W[V + 15] = S, W[V + 16] = k, W[V + 17] = I, W[V + 18] = s.r, W[V + 19] = s.g, W[V + 20] = s.b, W[V + 21] = s.a, W[V + 22] = R, W[V + 23] = P), V = p.length, (K = t.Utils.setArraySize(p, V + 3))[V] = y, K[V + 1] = y + 1, K[V + 2] = y + 2, y += 3;
                  continue t;
                }

                var N = d.length;

                if (0 != N) {
                  for (var F = A - I, O = k - b, L = E - k, U = I - M, B = 1 / (F * L + O * (M - I)), Y = N >> 1, X = this.clipOutput, W = t.Utils.setArraySize(f, V + Y * v), q = 0; q < N; q += 2) {
                    var H = X[q],
                        j = X[q + 1];
                    W[V] = H, W[V + 1] = j, W[V + 2] = s.r, W[V + 3] = s.g, W[V + 4] = s.b, W[V + 5] = s.a;
                    var z = H - k,
                        G = j - I,
                        Z = (F * z + O * G) * B,
                        J = (U * z + L * G) * B,
                        Q = 1 - Z - J;
                    W[V + 6] = _ * Z + C * J + R * Q, W[V + 7] = T * Z + S * J + P * Q, l && (W[V + 8] = o.r, W[V + 9] = o.g, W[V + 10] = o.b, W[V + 11] = o.a), V += v;
                  }

                  V = p.length;
                  var K = t.Utils.setArraySize(p, V + 3 * (Y - 2));

                  for (Y--, q = 1; q < Y; q++) {
                    K[V] = y, K[V + 1] = y + q, K[V + 2] = y + q + 1, V += 3;
                  }

                  y += Y + 1;
                }
              }
            }
          }, e.prototype.clip = function (t, e, n, a, r, i, s, o) {
            var l = o,
                h = !1,
                u = null;
            s.length % 4 >= 2 ? (u = o, o = this.scratch) : u = this.scratch, u.length = 0, u.push(t), u.push(e), u.push(n), u.push(a), u.push(r), u.push(i), u.push(t), u.push(e), o.length = 0;

            for (var c = s, d = s.length - 4, f = 0;; f += 2) {
              for (var p = c[f], m = c[f + 1], g = c[f + 2], v = c[f + 3], y = p - g, x = m - v, w = u, E = u.length - 2, M = o.length, _ = 0; _ < E; _ += 2) {
                var T = w[_],
                    b = w[_ + 1],
                    A = w[_ + 2],
                    C = w[_ + 3],
                    S = y * (C - v) - x * (A - g) > 0;

                if (y * (b - v) - x * (T - g) > 0) {
                  if (S) {
                    o.push(A), o.push(C);
                    continue;
                  }

                  var k = (R = C - b) * (g - p) - (P = A - T) * (v - m);

                  if (Math.abs(k) > 1e-6) {
                    var I = (P * (m - b) - R * (p - T)) / k;
                    o.push(p + (g - p) * I), o.push(m + (v - m) * I);
                  } else o.push(p), o.push(m);
                } else if (S) {
                  var R, P;
                  k = (R = C - b) * (g - p) - (P = A - T) * (v - m), Math.abs(k) > 1e-6 ? (I = (P * (m - b) - R * (p - T)) / k, o.push(p + (g - p) * I), o.push(m + (v - m) * I)) : (o.push(p), o.push(m)), o.push(A), o.push(C);
                }

                h = !0;
              }

              if (M == o.length) return l.length = 0, !0;
              if (o.push(o[0]), o.push(o[1]), f == d) break;
              var D = o;
              (o = u).length = 0, u = D;
            }

            if (l != o) {
              l.length = 0, f = 0;

              for (var V = o.length - 2; f < V; f++) {
                l[f] = o[f];
              }
            } else l.length = l.length - 2;

            return h;
          }, e.makeClockwise = function (t) {
            for (var e = t, n = t.length, a = e[n - 2] * e[1] - e[0] * e[n - 1], r = 0, i = 0, s = 0, o = 0, l = n - 3; o < l; o += 2) {
              r = e[o], i = e[o + 1], s = e[o + 2], a += r * e[o + 3] - s * i;
            }

            if (!(a < 0)) {
              o = 0;
              var h = n - 2;

              for (l = n >> 1; o < l; o += 2) {
                var u = e[o],
                    c = e[o + 1],
                    d = h - o;
                e[o] = e[d], e[o + 1] = e[d + 1], e[d] = u, e[d + 1] = c;
              }
            }
          }, e;
        }();

        t.SkeletonClipping = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function t() {
            this.bones = new Array(), this.slots = new Array(), this.skins = new Array(), this.events = new Array(), this.animations = new Array(), this.ikConstraints = new Array(), this.transformConstraints = new Array(), this.pathConstraints = new Array(), this.fps = 0;
          }

          return t.prototype.findBone = function (t) {
            if (null == t) throw new Error("boneName cannot be null.");

            for (var e = this.bones, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findBoneIndex = function (t) {
            if (null == t) throw new Error("boneName cannot be null.");

            for (var e = this.bones, n = 0, a = e.length; n < a; n++) {
              if (e[n].name == t) return n;
            }

            return -1;
          }, t.prototype.findSlot = function (t) {
            if (null == t) throw new Error("slotName cannot be null.");

            for (var e = this.slots, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findSlotIndex = function (t) {
            if (null == t) throw new Error("slotName cannot be null.");

            for (var e = this.slots, n = 0, a = e.length; n < a; n++) {
              if (e[n].name == t) return n;
            }

            return -1;
          }, t.prototype.findSkin = function (t) {
            if (null == t) throw new Error("skinName cannot be null.");

            for (var e = this.skins, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findEvent = function (t) {
            if (null == t) throw new Error("eventDataName cannot be null.");

            for (var e = this.events, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findAnimation = function (t) {
            if (null == t) throw new Error("animationName cannot be null.");

            for (var e = this.animations, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findIkConstraint = function (t) {
            if (null == t) throw new Error("constraintName cannot be null.");

            for (var e = this.ikConstraints, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findTransformConstraint = function (t) {
            if (null == t) throw new Error("constraintName cannot be null.");

            for (var e = this.transformConstraints, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findPathConstraint = function (t) {
            if (null == t) throw new Error("constraintName cannot be null.");

            for (var e = this.pathConstraints, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (r.name == t) return r;
            }

            return null;
          }, t.prototype.findPathConstraintIndex = function (t) {
            if (null == t) throw new Error("pathConstraintName cannot be null.");

            for (var e = this.pathConstraints, n = 0, a = e.length; n < a; n++) {
              if (e[n].name == t) return n;
            }

            return -1;
          }, t;
        }();

        t.SkeletonData = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t) {
            this.scale = 1, this.linkedMeshes = new Array(), this.attachmentLoader = t;
          }

          return e.prototype.readSkeletonData = function (n) {
            var a = this.scale,
                r = new t.SkeletonData(),
                i = "string" == typeof n ? JSON.parse(n) : n,
                s = i.skeleton;
            if (null != s && (r.hash = s.hash, r.version = s.spine, r.x = s.x, r.y = s.y, r.width = s.width, r.height = s.height, r.fps = s.fps, r.imagesPath = s.images), i.bones) for (var o = 0; o < i.bones.length; o++) {
              var l = i.bones[o],
                  h = null,
                  u = this.getValue(l, "parent", null);
              if (null != u && null == (h = r.findBone(u))) throw new Error("Parent bone not found: " + u);
              (p = new t.BoneData(r.bones.length, l.name, h)).length = this.getValue(l, "length", 0) * a, p.x = this.getValue(l, "x", 0) * a, p.y = this.getValue(l, "y", 0) * a, p.rotation = this.getValue(l, "rotation", 0), p.scaleX = this.getValue(l, "scaleX", 1), p.scaleY = this.getValue(l, "scaleY", 1), p.shearX = this.getValue(l, "shearX", 0), p.shearY = this.getValue(l, "shearY", 0), p.transformMode = e.transformModeFromString(this.getValue(l, "transform", "normal")), p.skinRequired = this.getValue(l, "skin", !1), r.bones.push(p);
            }
            if (i.slots) for (o = 0; o < i.slots.length; o++) {
              var c = (k = i.slots[o]).name,
                  d = k.bone,
                  f = r.findBone(d);
              if (null == f) throw new Error("Slot bone not found: " + d);
              var p = new t.SlotData(r.slots.length, c, f),
                  m = this.getValue(k, "color", null);
              null != m && p.color.setFromString(m);
              var g = this.getValue(k, "dark", null);
              null != g && (p.darkColor = new t.Color(1, 1, 1, 1), p.darkColor.setFromString(g)), p.attachmentName = this.getValue(k, "attachment", null), p.blendMode = e.blendModeFromString(this.getValue(k, "blend", "normal")), r.slots.push(p);
            }
            if (i.ik) for (o = 0; o < i.ik.length; o++) {
              var v = i.ik[o];
              (p = new t.IkConstraintData(v.name)).order = this.getValue(v, "order", 0), p.skinRequired = this.getValue(v, "skin", !1);

              for (var y = 0; y < v.bones.length; y++) {
                if (d = v.bones[y], null == (A = r.findBone(d))) throw new Error("IK bone not found: " + d);
                p.bones.push(A);
              }

              var x = v.target;
              if (p.target = r.findBone(x), null == p.target) throw new Error("IK target bone not found: " + x);
              p.mix = this.getValue(v, "mix", 1), p.softness = this.getValue(v, "softness", 0) * a, p.bendDirection = this.getValue(v, "bendPositive", !0) ? 1 : -1, p.compress = this.getValue(v, "compress", !1), p.stretch = this.getValue(v, "stretch", !1), p.uniform = this.getValue(v, "uniform", !1), r.ikConstraints.push(p);
            }
            if (i.transform) for (o = 0; o < i.transform.length; o++) {
              for (v = i.transform[o], (p = new t.TransformConstraintData(v.name)).order = this.getValue(v, "order", 0), p.skinRequired = this.getValue(v, "skin", !1), y = 0; y < v.bones.length; y++) {
                if (d = v.bones[y], null == (A = r.findBone(d))) throw new Error("Transform constraint bone not found: " + d);
                p.bones.push(A);
              }

              if (x = v.target, p.target = r.findBone(x), null == p.target) throw new Error("Transform constraint target bone not found: " + x);
              p.local = this.getValue(v, "local", !1), p.relative = this.getValue(v, "relative", !1), p.offsetRotation = this.getValue(v, "rotation", 0), p.offsetX = this.getValue(v, "x", 0) * a, p.offsetY = this.getValue(v, "y", 0) * a, p.offsetScaleX = this.getValue(v, "scaleX", 0), p.offsetScaleY = this.getValue(v, "scaleY", 0), p.offsetShearY = this.getValue(v, "shearY", 0), p.rotateMix = this.getValue(v, "rotateMix", 1), p.translateMix = this.getValue(v, "translateMix", 1), p.scaleMix = this.getValue(v, "scaleMix", 1), p.shearMix = this.getValue(v, "shearMix", 1), r.transformConstraints.push(p);
            }
            if (i.path) for (o = 0; o < i.path.length; o++) {
              for (v = i.path[o], (p = new t.PathConstraintData(v.name)).order = this.getValue(v, "order", 0), p.skinRequired = this.getValue(v, "skin", !1), y = 0; y < v.bones.length; y++) {
                if (d = v.bones[y], null == (A = r.findBone(d))) throw new Error("Transform constraint bone not found: " + d);
                p.bones.push(A);
              }

              if (x = v.target, p.target = r.findSlot(x), null == p.target) throw new Error("Path target slot not found: " + x);
              p.positionMode = e.positionModeFromString(this.getValue(v, "positionMode", "percent")), p.spacingMode = e.spacingModeFromString(this.getValue(v, "spacingMode", "length")), p.rotateMode = e.rotateModeFromString(this.getValue(v, "rotateMode", "tangent")), p.offsetRotation = this.getValue(v, "rotation", 0), p.position = this.getValue(v, "position", 0), p.positionMode == t.PositionMode.Fixed && (p.position *= a), p.spacing = this.getValue(v, "spacing", 0), p.spacingMode != t.SpacingMode.Length && p.spacingMode != t.SpacingMode.Fixed || (p.spacing *= a), p.rotateMix = this.getValue(v, "rotateMix", 1), p.translateMix = this.getValue(v, "translateMix", 1), r.pathConstraints.push(p);
            }

            if (i.skins) {
              var w = i.skins;

              if (!(w instanceof Array)) {
                var E = [];

                for (var M in w) {
                  E.push({
                    name: M,
                    attachments: w[M]
                  });
                }

                w = E;
              }

              for (o = 0; o < w.length; o++) {
                var _ = w[o],
                    T = new t.Skin(_.name);
                if (_.bones) for (var b = 0; b < _.bones.length; b++) {
                  var A;
                  if (null == (A = r.findBone(_.bones[b]))) throw new Error("Skin bone not found: " + _.bones[o]);
                  T.bones.push(A);
                }
                if (_.ik) for (b = 0; b < _.ik.length; b++) {
                  if (null == (C = r.findIkConstraint(_.ik[b]))) throw new Error("Skin IK constraint not found: " + _.ik[o]);
                  T.constraints.push(C);
                }
                if (_.transform) for (b = 0; b < _.transform.length; b++) {
                  if (null == (C = r.findTransformConstraint(_.transform[b]))) throw new Error("Skin transform constraint not found: " + _.transform[o]);
                  T.constraints.push(C);
                }
                if (_.path) for (b = 0; b < _.path.length; b++) {
                  var C;
                  if (null == (C = r.findPathConstraint(_.path[b]))) throw new Error("Skin path constraint not found: " + _.path[o]);
                  T.constraints.push(C);
                }

                for (var c in _.attachments) {
                  var S = r.findSlot(c);
                  if (null == S) throw new Error("Slot not found: " + c);
                  var k = _.attachments[c];

                  for (var I in k) {
                    var R = this.readAttachment(k[I], T, S.index, I, r);
                    null != R && T.setAttachment(S.index, I, R);
                  }
                }

                r.skins.push(T), "default" == T.name && (r.defaultSkin = T);
              }
            }

            o = 0;

            for (var P = this.linkedMeshes.length; o < P; o++) {
              var D = this.linkedMeshes[o];
              if (null == (T = null == D.skin ? r.defaultSkin : r.findSkin(D.skin))) throw new Error("Skin not found: " + D.skin);
              var V = T.getAttachment(D.slotIndex, D.parent);
              if (null == V) throw new Error("Parent mesh not found: " + D.parent);
              D.mesh.deformAttachment = D.inheritDeform ? V : D.mesh, D.mesh.setParentMesh(V), D.mesh.updateUVs();
            }

            if (this.linkedMeshes.length = 0, i.events) for (var N in i.events) {
              var F = i.events[N];
              (p = new t.EventData(N)).intValue = this.getValue(F, "int", 0), p.floatValue = this.getValue(F, "float", 0), p.stringValue = this.getValue(F, "string", ""), p.audioPath = this.getValue(F, "audio", null), null != p.audioPath && (p.volume = this.getValue(F, "volume", 1), p.balance = this.getValue(F, "balance", 0)), r.events.push(p);
            }
            if (i.animations) for (var O in i.animations) {
              var L = i.animations[O];
              this.readAnimation(L, O, r);
            }
            return r;
          }, e.prototype.readAttachment = function (e, a, r, i, s) {
            var o = this.scale;

            switch (i = this.getValue(e, "name", i), this.getValue(e, "type", "region")) {
              case "region":
                var l = this.getValue(e, "path", i),
                    h = this.attachmentLoader.newRegionAttachment(a, i, l);
                return null == h ? null : (h.path = l, h.x = this.getValue(e, "x", 0) * o, h.y = this.getValue(e, "y", 0) * o, h.scaleX = this.getValue(e, "scaleX", 1), h.scaleY = this.getValue(e, "scaleY", 1), h.rotation = this.getValue(e, "rotation", 0), h.width = e.width * o, h.height = e.height * o, null != (x = this.getValue(e, "color", null)) && h.color.setFromString(x), h.updateOffset(), h);

              case "boundingbox":
                var u = this.attachmentLoader.newBoundingBoxAttachment(a, i);
                return null == u ? null : (this.readVertices(e, u, e.vertexCount << 1), null != (x = this.getValue(e, "color", null)) && u.color.setFromString(x), u);

              case "mesh":
              case "linkedmesh":
                l = this.getValue(e, "path", i);
                var c = this.attachmentLoader.newMeshAttachment(a, i, l);
                if (null == c) return null;
                c.path = l, null != (x = this.getValue(e, "color", null)) && c.color.setFromString(x), c.width = this.getValue(e, "width", 0) * o, c.height = this.getValue(e, "height", 0) * o;
                var d = this.getValue(e, "parent", null);
                if (null != d) return this.linkedMeshes.push(new n(c, this.getValue(e, "skin", null), r, d, this.getValue(e, "deform", !0))), c;
                var f = e.uvs;
                return this.readVertices(e, c, f.length), c.triangles = e.triangles, c.regionUVs = f, c.updateUVs(), c.edges = this.getValue(e, "edges", null), c.hullLength = 2 * this.getValue(e, "hull", 0), c;

              case "path":
                if (null == (l = this.attachmentLoader.newPathAttachment(a, i))) return null;
                l.closed = this.getValue(e, "closed", !1), l.constantSpeed = this.getValue(e, "constantSpeed", !0);
                var p = e.vertexCount;
                this.readVertices(e, l, p << 1);

                for (var m = t.Utils.newArray(p / 3, 0), g = 0; g < e.lengths.length; g++) {
                  m[g] = e.lengths[g] * o;
                }

                return l.lengths = m, null != (x = this.getValue(e, "color", null)) && l.color.setFromString(x), l;

              case "point":
                var v = this.attachmentLoader.newPointAttachment(a, i);
                return null == v ? null : (v.x = this.getValue(e, "x", 0) * o, v.y = this.getValue(e, "y", 0) * o, v.rotation = this.getValue(e, "rotation", 0), null != (x = this.getValue(e, "color", null)) && v.color.setFromString(x), v);

              case "clipping":
                var y = this.attachmentLoader.newClippingAttachment(a, i);
                if (null == y) return null;
                var x,
                    w = this.getValue(e, "end", null);

                if (null != w) {
                  var E = s.findSlot(w);
                  if (null == E) throw new Error("Clipping end slot not found: " + w);
                  y.endSlot = E;
                }

                return p = e.vertexCount, this.readVertices(e, y, p << 1), null != (x = this.getValue(e, "color", null)) && y.color.setFromString(x), y;
            }

            return null;
          }, e.prototype.readVertices = function (e, n, a) {
            var r = this.scale;
            n.worldVerticesLength = a;
            var i = e.vertices;

            if (a != i.length) {
              var s = new Array(),
                  o = new Array();

              for (c = 0, d = i.length; c < d;) {
                var l = i[c++];
                o.push(l);

                for (var h = c + 4 * l; c < h; c += 4) {
                  o.push(i[c]), s.push(i[c + 1] * r), s.push(i[c + 2] * r), s.push(i[c + 3]);
                }
              }

              n.bones = o, n.vertices = t.Utils.toFloatArray(s);
            } else {
              var u = t.Utils.toFloatArray(i);
              if (1 != r) for (var c = 0, d = i.length; c < d; c++) {
                u[c] *= r;
              }
              n.vertices = u;
            }
          }, e.prototype.readAnimation = function (e, n, a) {
            var r = this.scale,
                i = new Array(),
                s = 0;
            if (e.slots) for (var o in e.slots) {
              var l = e.slots[o];
              if (-1 == (Q = a.findSlotIndex(o))) throw new Error("Slot not found: " + o);

              for (var h in l) {
                var u = l[h];

                if ("attachment" == h) {
                  (w = new t.AttachmentTimeline(u.length)).slotIndex = Q;

                  for (var c = 0, d = 0; d < u.length; d++) {
                    var f = u[d];
                    w.setFrame(c++, this.getValue(f, "time", 0), f.name);
                  }

                  i.push(w), s = Math.max(s, w.frames[w.getFrameCount() - 1]);
                } else if ("color" == h) {
                  for ((w = new t.ColorTimeline(u.length)).slotIndex = Q, c = 0, d = 0; d < u.length; d++) {
                    f = u[d];
                    var p = new t.Color();
                    p.setFromString(f.color), w.setFrame(c, this.getValue(f, "time", 0), p.r, p.g, p.b, p.a), this.readCurve(f, w, c), c++;
                  }

                  i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.ColorTimeline.ENTRIES]);
                } else {
                  if ("twoColor" != h) throw new Error("Invalid timeline type for a slot: " + h + " (" + o + ")");

                  for ((w = new t.TwoColorTimeline(u.length)).slotIndex = Q, c = 0, d = 0; d < u.length; d++) {
                    f = u[d];
                    var m = new t.Color(),
                        g = new t.Color();
                    m.setFromString(f.light), g.setFromString(f.dark), w.setFrame(c, this.getValue(f, "time", 0), m.r, m.g, m.b, m.a, g.r, g.g, g.b), this.readCurve(f, w, c), c++;
                  }

                  i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.TwoColorTimeline.ENTRIES]);
                }
              }
            }
            if (e.bones) for (var v in e.bones) {
              var y = e.bones[v],
                  x = a.findBoneIndex(v);
              if (-1 == x) throw new Error("Bone not found: " + v);

              for (var h in y) {
                if (u = y[h], "rotate" === h) {
                  for ((w = new t.RotateTimeline(u.length)).boneIndex = x, c = 0, d = 0; d < u.length; d++) {
                    f = u[d], w.setFrame(c, this.getValue(f, "time", 0), this.getValue(f, "angle", 0)), this.readCurve(f, w, c), c++;
                  }

                  i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.RotateTimeline.ENTRIES]);
                } else {
                  if ("translate" !== h && "scale" !== h && "shear" !== h) throw new Error("Invalid timeline type for a bone: " + h + " (" + v + ")");
                  var w = null,
                      E = 1,
                      M = 0;

                  for ("scale" === h ? (w = new t.ScaleTimeline(u.length), M = 1) : "shear" === h ? w = new t.ShearTimeline(u.length) : (w = new t.TranslateTimeline(u.length), E = r), w.boneIndex = x, c = 0, d = 0; d < u.length; d++) {
                    f = u[d];

                    var _ = this.getValue(f, "x", M),
                        T = this.getValue(f, "y", M);

                    w.setFrame(c, this.getValue(f, "time", 0), _ * E, T * E), this.readCurve(f, w, c), c++;
                  }

                  i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.TranslateTimeline.ENTRIES]);
                }
              }
            }
            if (e.ik) for (var b in e.ik) {
              var A = e.ik[b],
                  C = a.findIkConstraint(b);

              for ((w = new t.IkConstraintTimeline(A.length)).ikConstraintIndex = a.ikConstraints.indexOf(C), c = 0, d = 0; d < A.length; d++) {
                f = A[d], w.setFrame(c, this.getValue(f, "time", 0), this.getValue(f, "mix", 1), this.getValue(f, "softness", 0) * r, this.getValue(f, "bendPositive", !0) ? 1 : -1, this.getValue(f, "compress", !1), this.getValue(f, "stretch", !1)), this.readCurve(f, w, c), c++;
              }

              i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.IkConstraintTimeline.ENTRIES]);
            }
            if (e.transform) for (var b in e.transform) {
              for (A = e.transform[b], C = a.findTransformConstraint(b), (w = new t.TransformConstraintTimeline(A.length)).transformConstraintIndex = a.transformConstraints.indexOf(C), c = 0, d = 0; d < A.length; d++) {
                f = A[d], w.setFrame(c, this.getValue(f, "time", 0), this.getValue(f, "rotateMix", 1), this.getValue(f, "translateMix", 1), this.getValue(f, "scaleMix", 1), this.getValue(f, "shearMix", 1)), this.readCurve(f, w, c), c++;
              }

              i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.TransformConstraintTimeline.ENTRIES]);
            }
            var S = e.path || e.paths;
            if (S) for (var b in S) {
              A = S[b];
              var k = a.findPathConstraintIndex(b);
              if (-1 == k) throw new Error("Path constraint not found: " + b);
              var I = a.pathConstraints[k];

              for (var h in A) {
                if (u = A[h], "position" === h || "spacing" === h) {
                  for (w = null, E = 1, "spacing" === h ? (w = new t.PathConstraintSpacingTimeline(u.length), I.spacingMode != t.SpacingMode.Length && I.spacingMode != t.SpacingMode.Fixed || (E = r)) : (w = new t.PathConstraintPositionTimeline(u.length), I.positionMode == t.PositionMode.Fixed && (E = r)), w.pathConstraintIndex = k, c = 0, d = 0; d < u.length; d++) {
                    f = u[d], w.setFrame(c, this.getValue(f, "time", 0), this.getValue(f, h, 0) * E), this.readCurve(f, w, c), c++;
                  }

                  i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.PathConstraintPositionTimeline.ENTRIES]);
                } else if ("mix" === h) {
                  for ((w = new t.PathConstraintMixTimeline(u.length)).pathConstraintIndex = k, c = 0, d = 0; d < u.length; d++) {
                    f = u[d], w.setFrame(c, this.getValue(f, "time", 0), this.getValue(f, "rotateMix", 1), this.getValue(f, "translateMix", 1)), this.readCurve(f, w, c), c++;
                  }

                  i.push(w), s = Math.max(s, w.frames[(w.getFrameCount() - 1) * t.PathConstraintMixTimeline.ENTRIES]);
                }
              }
            }
            if (e.deform) for (var R in e.deform) {
              var P = e.deform[R],
                  D = a.findSkin(R);
              if (null == D) throw new Error("Skin not found: " + R);

              for (var o in P) {
                if (l = P[o], -1 == (Q = a.findSlotIndex(o))) throw new Error("Slot not found: " + l.name);

                for (var h in l) {
                  u = l[h];
                  var V = D.getAttachment(Q, h);

                  if (null != V) {
                    var N = null != V.bones,
                        F = V.vertices,
                        O = N ? F.length / 3 * 2 : F.length;
                    (w = new t.DeformTimeline(u.length)).slotIndex = Q, w.attachment = V, c = 0;

                    for (var L = 0; L < u.length; L++) {
                      f = u[L];
                      var U = void 0,
                          B = this.getValue(f, "vertices", null);
                      if (null == B) U = N ? t.Utils.newFloatArray(O) : F;else {
                        U = t.Utils.newFloatArray(O);
                        var Y = this.getValue(f, "offset", 0);
                        if (t.Utils.arrayCopy(B, 0, U, Y, B.length), 1 != r) for (var X = (d = Y) + B.length; d < X; d++) {
                          U[d] *= r;
                        }
                        if (!N) for (d = 0; d < O; d++) {
                          U[d] += F[d];
                        }
                      }
                      w.setFrame(c, this.getValue(f, "time", 0), U), this.readCurve(f, w, c), c++;
                    }

                    i.push(w), s = Math.max(s, w.frames[w.getFrameCount() - 1]);
                  }
                }
              }
            }
            var W = e.drawOrder;

            if (null == W && (W = e.draworder), null != W) {
              w = new t.DrawOrderTimeline(W.length);
              var q = a.slots.length;

              for (c = 0, L = 0; L < W.length; L++) {
                var H = W[L],
                    j = null,
                    z = this.getValue(H, "offsets", null);

                if (null != z) {
                  j = t.Utils.newArray(q, -1);
                  var G = t.Utils.newArray(q - z.length, 0),
                      Z = 0,
                      J = 0;

                  for (d = 0; d < z.length; d++) {
                    var Q,
                        K = z[d];
                    if (-1 == (Q = a.findSlotIndex(K.slot))) throw new Error("Slot not found: " + K.slot);

                    for (; Z != Q;) {
                      G[J++] = Z++;
                    }

                    j[Z + K.offset] = Z++;
                  }

                  for (; Z < q;) {
                    G[J++] = Z++;
                  }

                  for (d = q - 1; d >= 0; d--) {
                    -1 == j[d] && (j[d] = G[--J]);
                  }
                }

                w.setFrame(c++, this.getValue(H, "time", 0), j);
              }

              i.push(w), s = Math.max(s, w.frames[w.getFrameCount() - 1]);
            }

            if (e.events) {
              for (w = new t.EventTimeline(e.events.length), c = 0, d = 0; d < e.events.length; d++) {
                var $ = e.events[d],
                    tt = a.findEvent($.name);
                if (null == tt) throw new Error("Event not found: " + $.name);
                var et = new t.Event(t.Utils.toSinglePrecision(this.getValue($, "time", 0)), tt);
                et.intValue = this.getValue($, "int", tt.intValue), et.floatValue = this.getValue($, "float", tt.floatValue), et.stringValue = this.getValue($, "string", tt.stringValue), null != et.data.audioPath && (et.volume = this.getValue($, "volume", 1), et.balance = this.getValue($, "balance", 0)), w.setFrame(c++, et);
              }

              i.push(w), s = Math.max(s, w.frames[w.getFrameCount() - 1]);
            }

            if (isNaN(s)) throw new Error("Error while parsing animation, duration is NaN");
            a.animations.push(new t.Animation(n, i, s));
          }, e.prototype.readCurve = function (t, e, n) {
            var a = t.curve;
            a && ("stepped" == a ? e.setStepped(n) : "[object Array]" === Object.prototype.toString.call(a) ? e.setCurve(n, a[0], a[1], a[2], a[3]) : e.setCurve(n, a, this.getValue(t, "c2", 0), this.getValue(t, "c3", 1), this.getValue(t, "c4", 1)));
          }, e.prototype.getValue = function (t, e, n) {
            return void 0 !== t[e] ? t[e] : n;
          }, e.blendModeFromString = function (e) {
            if ("normal" == (e = e.toLowerCase())) return t.BlendMode.Normal;
            if ("additive" == e) return t.BlendMode.Additive;
            if ("multiply" == e) return t.BlendMode.Multiply;
            if ("screen" == e) return t.BlendMode.Screen;
            throw new Error("Unknown blend mode: " + e);
          }, e.positionModeFromString = function (e) {
            if ("fixed" == (e = e.toLowerCase())) return t.PositionMode.Fixed;
            if ("percent" == e) return t.PositionMode.Percent;
            throw new Error("Unknown position mode: " + e);
          }, e.spacingModeFromString = function (e) {
            if ("length" == (e = e.toLowerCase())) return t.SpacingMode.Length;
            if ("fixed" == e) return t.SpacingMode.Fixed;
            if ("percent" == e) return t.SpacingMode.Percent;
            throw new Error("Unknown position mode: " + e);
          }, e.rotateModeFromString = function (e) {
            if ("tangent" == (e = e.toLowerCase())) return t.RotateMode.Tangent;
            if ("chain" == e) return t.RotateMode.Chain;
            if ("chainscale" == e) return t.RotateMode.ChainScale;
            throw new Error("Unknown rotate mode: " + e);
          }, e.transformModeFromString = function (e) {
            if ("normal" == (e = e.toLowerCase())) return t.TransformMode.Normal;
            if ("onlytranslation" == e) return t.TransformMode.OnlyTranslation;
            if ("norotationorreflection" == e) return t.TransformMode.NoRotationOrReflection;
            if ("noscale" == e) return t.TransformMode.NoScale;
            if ("noscaleorreflection" == e) return t.TransformMode.NoScaleOrReflection;
            throw new Error("Unknown transform mode: " + e);
          }, e;
        }();

        t.SkeletonJson = e;

        var n = function n(t, e, _n2, a, r) {
          this.mesh = t, this.skin = e, this.slotIndex = _n2, this.parent = a, this.inheritDeform = r;
        };
      }(J || (J = {})), function (t) {
        var e = function e(t, _e2, n) {
          this.slotIndex = t, this.name = _e2, this.attachment = n;
        };

        t.SkinEntry = e;

        var n = function () {
          function n(t) {
            if (this.attachments = new Array(), this.bones = Array(), this.constraints = new Array(), null == t) throw new Error("name cannot be null.");
            this.name = t;
          }

          return n.prototype.setAttachment = function (t, e, n) {
            if (null == n) throw new Error("attachment cannot be null.");
            var a = this.attachments;
            t >= a.length && (a.length = t + 1), a[t] || (a[t] = {}), a[t][e] = n;
          }, n.prototype.addSkin = function (t) {
            for (var e = 0; e < t.bones.length; e++) {
              for (var n = t.bones[e], a = !1, r = 0; r < this.bones.length; r++) {
                if (this.bones[r] == n) {
                  a = !0;
                  break;
                }
              }

              a || this.bones.push(n);
            }

            for (e = 0; e < t.constraints.length; e++) {
              var i = t.constraints[e];

              for (a = !1, r = 0; r < this.constraints.length; r++) {
                if (this.constraints[r] == i) {
                  a = !0;
                  break;
                }
              }

              a || this.constraints.push(i);
            }

            var s = t.getAttachments();

            for (e = 0; e < s.length; e++) {
              var o = s[e];
              this.setAttachment(o.slotIndex, o.name, o.attachment);
            }
          }, n.prototype.copySkin = function (e) {
            for (var n = 0; n < e.bones.length; n++) {
              for (var a = e.bones[n], r = !1, i = 0; i < this.bones.length; i++) {
                if (this.bones[i] == a) {
                  r = !0;
                  break;
                }
              }

              r || this.bones.push(a);
            }

            for (n = 0; n < e.constraints.length; n++) {
              var s = e.constraints[n];

              for (r = !1, i = 0; i < this.constraints.length; i++) {
                if (this.constraints[i] == s) {
                  r = !0;
                  break;
                }
              }

              r || this.constraints.push(s);
            }

            var o = e.getAttachments();

            for (n = 0; n < o.length; n++) {
              var l = o[n];
              null != l.attachment && (l.attachment instanceof t.MeshAttachment ? (l.attachment = l.attachment.newLinkedMesh(), this.setAttachment(l.slotIndex, l.name, l.attachment)) : (l.attachment = l.attachment.copy(), this.setAttachment(l.slotIndex, l.name, l.attachment)));
            }
          }, n.prototype.getAttachment = function (t, e) {
            var n = this.attachments[t];
            return n ? n[e] : null;
          }, n.prototype.removeAttachment = function (t, e) {
            var n = this.attachments[t];
            n && (n[e] = null);
          }, n.prototype.getAttachments = function () {
            for (var t = new Array(), n = 0; n < this.attachments.length; n++) {
              var a = this.attachments[n];
              if (a) for (var r in a) {
                var i = a[r];
                i && t.push(new e(n, r, i));
              }
            }

            return t;
          }, n.prototype.getAttachmentsForSlot = function (t, n) {
            var a = this.attachments[t];
            if (a) for (var r in a) {
              var i = a[r];
              i && n.push(new e(t, r, i));
            }
          }, n.prototype.clear = function () {
            this.attachments.length = 0, this.bones.length = 0, this.constraints.length = 0;
          }, n.prototype.attachAll = function (t, e) {
            for (var n = 0, a = 0; a < t.slots.length; a++) {
              var r = t.slots[a],
                  i = r.getAttachment();

              if (i && n < e.attachments.length) {
                var s = e.attachments[n];

                for (var o in s) {
                  if (i == s[o]) {
                    var l = this.getAttachment(n, o);
                    null != l && r.setAttachment(l);
                    break;
                  }
                }
              }

              n++;
            }
          }, n;
        }();

        t.Skin = n;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(e, n) {
            if (this.deform = new Array(), null == e) throw new Error("data cannot be null.");
            if (null == n) throw new Error("bone cannot be null.");
            this.data = e, this.bone = n, this.color = new t.Color(), this.darkColor = null == e.darkColor ? null : new t.Color(), this.setToSetupPose();
          }

          return e.prototype.getSkeleton = function () {
            return this.bone.skeleton;
          }, e.prototype.getAttachment = function () {
            return this.attachment;
          }, e.prototype.setAttachment = function (t) {
            this.attachment != t && (this.attachment = t, this.attachmentTime = this.bone.skeleton.time, this.deform.length = 0);
          }, e.prototype.setAttachmentTime = function (t) {
            this.attachmentTime = this.bone.skeleton.time - t;
          }, e.prototype.getAttachmentTime = function () {
            return this.bone.skeleton.time - this.attachmentTime;
          }, e.prototype.setToSetupPose = function () {
            this.color.setFromColor(this.data.color), null != this.darkColor && this.darkColor.setFromColor(this.data.darkColor), null == this.data.attachmentName ? this.attachment = null : (this.attachment = null, this.setAttachment(this.bone.skeleton.getAttachment(this.data.index, this.data.attachmentName)));
          }, e;
        }();

        t.Slot = e;
      }(J || (J = {})), function (t) {
        t.SlotData = function (e, n, a) {
          if (this.color = new t.Color(1, 1, 1, 1), e < 0) throw new Error("index must be >= 0.");
          if (null == n) throw new Error("name cannot be null.");
          if (null == a) throw new Error("boneData cannot be null.");
          this.index = e, this.name = n, this.boneData = a;
        };
      }(J || (J = {})), function (t) {
        var e,
            n,
            a = function () {
          function t(t) {
            this._image = t;
          }

          return t.prototype.getImage = function () {
            return this._image;
          }, t.filterFromString = function (t) {
            switch (t.toLowerCase()) {
              case "nearest":
                return e.Nearest;

              case "linear":
                return e.Linear;

              case "mipmap":
                return e.MipMap;

              case "mipmapnearestnearest":
                return e.MipMapNearestNearest;

              case "mipmaplinearnearest":
                return e.MipMapLinearNearest;

              case "mipmapnearestlinear":
                return e.MipMapNearestLinear;

              case "mipmaplinearlinear":
                return e.MipMapLinearLinear;

              default:
                throw new Error("Unknown texture filter " + t);
            }
          }, t.wrapFromString = function (t) {
            switch (t.toLowerCase()) {
              case "mirroredtepeat":
                return n.MirroredRepeat;

              case "clamptoedge":
                return n.ClampToEdge;

              case "repeat":
                return n.Repeat;

              default:
                throw new Error("Unknown texture wrap " + t);
            }
          }, t;
        }();

        t.Texture = a, function (t) {
          t[t.Nearest = 9728] = "Nearest", t[t.Linear = 9729] = "Linear", t[t.MipMap = 9987] = "MipMap", t[t.MipMapNearestNearest = 9984] = "MipMapNearestNearest", t[t.MipMapLinearNearest = 9985] = "MipMapLinearNearest", t[t.MipMapNearestLinear = 9986] = "MipMapNearestLinear", t[t.MipMapLinearLinear = 9987] = "MipMapLinearLinear";
        }(e = t.TextureFilter || (t.TextureFilter = {})), function (t) {
          t[t.MirroredRepeat = 33648] = "MirroredRepeat", t[t.ClampToEdge = 33071] = "ClampToEdge", t[t.Repeat = 10497] = "Repeat";
        }(n = t.TextureWrap || (t.TextureWrap = {}));

        t.TextureRegion = function () {
          this.u = 0, this.v = 0, this.u2 = 0, this.v2 = 0, this.width = 0, this.height = 0, this.rotate = !1, this.offsetX = 0, this.offsetY = 0, this.originalWidth = 0, this.originalHeight = 0;
        };

        var r = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return Q(e, t), e.prototype.setFilters = function () {}, e.prototype.setWraps = function () {}, e.prototype.dispose = function () {}, e;
        }(a);

        t.FakeTexture = r;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t, e) {
            this.pages = new Array(), this.regions = new Array(), this.load(t, e);
          }

          return e.prototype.load = function (e, i) {
            if (null == i) throw new Error("textureLoader cannot be null.");

            for (var s = new n(e), o = new Array(4), l = null;;) {
              var h = s.readLine();
              if (null == h) break;
              if (0 == (h = h.trim()).length) l = null;else if (l) {
                var u = new r();
                u.name = h, u.page = l;
                var c = s.readValue();
                "true" == c.toLocaleLowerCase() ? u.degrees = 90 : "false" == c.toLocaleLowerCase() ? u.degrees = 0 : u.degrees = parseFloat(c), u.rotate = 90 == u.degrees, s.readTuple(o);
                var d = parseInt(o[0]),
                    f = parseInt(o[1]);
                s.readTuple(o);
                var p = parseInt(o[0]),
                    m = parseInt(o[1]);
                u.u = d / l.width, u.v = f / l.height, u.rotate ? (u.u2 = (d + m) / l.width, u.v2 = (f + p) / l.height) : (u.u2 = (d + p) / l.width, u.v2 = (f + m) / l.height), u.x = d, u.y = f, u.width = Math.abs(p), u.height = Math.abs(m), 4 == s.readTuple(o) && 4 == s.readTuple(o) && s.readTuple(o), u.originalWidth = parseInt(o[0]), u.originalHeight = parseInt(o[1]), s.readTuple(o), u.offsetX = parseInt(o[0]), u.offsetY = parseInt(o[1]), u.index = parseInt(s.readValue()), u.texture = l.texture, this.regions.push(u);
              } else {
                (l = new a()).name = h, 2 == s.readTuple(o) && (l.width = parseInt(o[0]), l.height = parseInt(o[1]), s.readTuple(o)), s.readTuple(o), l.minFilter = t.Texture.filterFromString(o[0]), l.magFilter = t.Texture.filterFromString(o[1]);
                var g = s.readValue();
                l.uWrap = t.TextureWrap.ClampToEdge, l.vWrap = t.TextureWrap.ClampToEdge, "x" == g ? l.uWrap = t.TextureWrap.Repeat : "y" == g ? l.vWrap = t.TextureWrap.Repeat : "xy" == g && (l.uWrap = l.vWrap = t.TextureWrap.Repeat), l.texture = i(h), l.texture.setFilters(l.minFilter, l.magFilter), l.texture.setWraps(l.uWrap, l.vWrap), l.width = l.texture.getImage().width, l.height = l.texture.getImage().height, this.pages.push(l);
              }
            }
          }, e.prototype.findRegion = function (t) {
            for (var e = 0; e < this.regions.length; e++) {
              if (this.regions[e].name == t) return this.regions[e];
            }

            return null;
          }, e.prototype.dispose = function () {
            for (var t = 0; t < this.pages.length; t++) {
              this.pages[t].texture.dispose();
            }
          }, e;
        }();

        t.TextureAtlas = e;

        var n = function () {
          function t(t) {
            this.index = 0, this.lines = t.split(/\r\n|\r|\n/);
          }

          return t.prototype.readLine = function () {
            return this.index >= this.lines.length ? null : this.lines[this.index++];
          }, t.prototype.readValue = function () {
            var t = this.readLine(),
                e = t.indexOf(":");
            if (-1 == e) throw new Error("Invalid line: " + t);
            return t.substring(e + 1).trim();
          }, t.prototype.readTuple = function (t) {
            var e = this.readLine(),
                n = e.indexOf(":");
            if (-1 == n) throw new Error("Invalid line: " + e);

            for (var a = 0, r = n + 1; a < 3; a++) {
              var i = e.indexOf(",", r);
              if (-1 == i) break;
              t[a] = e.substr(r, i - r).trim(), r = i + 1;
            }

            return t[a] = e.substring(r).trim(), a + 1;
          }, t;
        }(),
            a = function a() {};

        t.TextureAtlasPage = a;

        var r = function (t) {
          function e() {
            return null !== t && t.apply(this, arguments) || this;
          }

          return Q(e, t), e;
        }(t.TextureRegion);

        t.TextureAtlasRegion = r;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(e, n) {
            if (this.rotateMix = 0, this.translateMix = 0, this.scaleMix = 0, this.shearMix = 0, this.temp = new t.Vector2(), this.active = !1, null == e) throw new Error("data cannot be null.");
            if (null == n) throw new Error("skeleton cannot be null.");
            this.data = e, this.rotateMix = e.rotateMix, this.translateMix = e.translateMix, this.scaleMix = e.scaleMix, this.shearMix = e.shearMix, this.bones = new Array();

            for (var a = 0; a < e.bones.length; a++) {
              this.bones.push(n.findBone(e.bones[a].name));
            }

            this.target = n.findBone(e.target.name);
          }

          return e.prototype.isActive = function () {
            return this.active;
          }, e.prototype.apply = function () {
            this.update();
          }, e.prototype.update = function () {
            this.data.local ? this.data.relative ? this.applyRelativeLocal() : this.applyAbsoluteLocal() : this.data.relative ? this.applyRelativeWorld() : this.applyAbsoluteWorld();
          }, e.prototype.applyAbsoluteWorld = function () {
            for (var e = this.rotateMix, n = this.translateMix, a = this.scaleMix, r = this.shearMix, i = this.target, s = i.a, o = i.b, l = i.c, h = i.d, u = s * h - o * l > 0 ? t.MathUtils.degRad : -t.MathUtils.degRad, c = this.data.offsetRotation * u, d = this.data.offsetShearY * u, f = this.bones, p = 0, m = f.length; p < m; p++) {
              var g = f[p],
                  v = !1;

              if (0 != e) {
                var y = g.a,
                    x = g.b,
                    w = g.c,
                    E = g.d;
                (C = Math.atan2(l, s) - Math.atan2(w, y) + c) > t.MathUtils.PI ? C -= t.MathUtils.PI2 : C < -t.MathUtils.PI && (C += t.MathUtils.PI2), C *= e;

                var M = Math.cos(C),
                    _ = Math.sin(C);

                g.a = M * y - _ * w, g.b = M * x - _ * E, g.c = _ * y + M * w, g.d = _ * x + M * E, v = !0;
              }

              if (0 != n) {
                var T = this.temp;
                i.localToWorld(T.set(this.data.offsetX, this.data.offsetY)), g.worldX += (T.x - g.worldX) * n, g.worldY += (T.y - g.worldY) * n, v = !0;
              }

              if (a > 0) {
                var b = Math.sqrt(g.a * g.a + g.c * g.c),
                    A = Math.sqrt(s * s + l * l);
                b > 1e-5 && (b = (b + (A - b + this.data.offsetScaleX) * a) / b), g.a *= b, g.c *= b, b = Math.sqrt(g.b * g.b + g.d * g.d), A = Math.sqrt(o * o + h * h), b > 1e-5 && (b = (b + (A - b + this.data.offsetScaleY) * a) / b), g.b *= b, g.d *= b, v = !0;
              }

              if (r > 0) {
                x = g.b, E = g.d;
                var C,
                    S = Math.atan2(E, x);
                (C = Math.atan2(h, o) - Math.atan2(l, s) - (S - Math.atan2(g.c, g.a))) > t.MathUtils.PI ? C -= t.MathUtils.PI2 : C < -t.MathUtils.PI && (C += t.MathUtils.PI2), C = S + (C + d) * r, b = Math.sqrt(x * x + E * E), g.b = Math.cos(C) * b, g.d = Math.sin(C) * b, v = !0;
              }

              v && (g.appliedValid = !1);
            }
          }, e.prototype.applyRelativeWorld = function () {
            for (var e = this.rotateMix, n = this.translateMix, a = this.scaleMix, r = this.shearMix, i = this.target, s = i.a, o = i.b, l = i.c, h = i.d, u = s * h - o * l > 0 ? t.MathUtils.degRad : -t.MathUtils.degRad, c = this.data.offsetRotation * u, d = this.data.offsetShearY * u, f = this.bones, p = 0, m = f.length; p < m; p++) {
              var g,
                  v = f[p],
                  y = !1;

              if (0 != e) {
                var x = v.a,
                    w = v.b,
                    E = v.c,
                    M = v.d;
                (g = Math.atan2(l, s) + c) > t.MathUtils.PI ? g -= t.MathUtils.PI2 : g < -t.MathUtils.PI && (g += t.MathUtils.PI2), g *= e;

                var _ = Math.cos(g),
                    T = Math.sin(g);

                v.a = _ * x - T * E, v.b = _ * w - T * M, v.c = T * x + _ * E, v.d = T * w + _ * M, y = !0;
              }

              if (0 != n) {
                var b = this.temp;
                i.localToWorld(b.set(this.data.offsetX, this.data.offsetY)), v.worldX += b.x * n, v.worldY += b.y * n, y = !0;
              }

              if (a > 0) {
                var A = (Math.sqrt(s * s + l * l) - 1 + this.data.offsetScaleX) * a + 1;
                v.a *= A, v.c *= A, A = (Math.sqrt(o * o + h * h) - 1 + this.data.offsetScaleY) * a + 1, v.b *= A, v.d *= A, y = !0;
              }

              if (r > 0) (g = Math.atan2(h, o) - Math.atan2(l, s)) > t.MathUtils.PI ? g -= t.MathUtils.PI2 : g < -t.MathUtils.PI && (g += t.MathUtils.PI2), w = v.b, M = v.d, g = Math.atan2(M, w) + (g - t.MathUtils.PI / 2 + d) * r, A = Math.sqrt(w * w + M * M), v.b = Math.cos(g) * A, v.d = Math.sin(g) * A, y = !0;
              y && (v.appliedValid = !1);
            }
          }, e.prototype.applyAbsoluteLocal = function () {
            var t = this.rotateMix,
                e = this.translateMix,
                n = this.scaleMix,
                a = this.shearMix,
                r = this.target;
            r.appliedValid || r.updateAppliedTransform();

            for (var i = this.bones, s = 0, o = i.length; s < o; s++) {
              var l = i[s];
              l.appliedValid || l.updateAppliedTransform();
              var h = l.arotation;

              if (0 != t) {
                var u = r.arotation - h + this.data.offsetRotation;
                h += (u -= 360 * (16384 - (16384.499999999996 - u / 360 | 0))) * t;
              }

              var c = l.ax,
                  d = l.ay;
              0 != e && (c += (r.ax - c + this.data.offsetX) * e, d += (r.ay - d + this.data.offsetY) * e);
              var f = l.ascaleX,
                  p = l.ascaleY;
              0 != n && (f > 1e-5 && (f = (f + (r.ascaleX - f + this.data.offsetScaleX) * n) / f), p > 1e-5 && (p = (p + (r.ascaleY - p + this.data.offsetScaleY) * n) / p));
              var m = l.ashearY;
              0 != a && (u = r.ashearY - m + this.data.offsetShearY, u -= 360 * (16384 - (16384.499999999996 - u / 360 | 0)), l.shearY += u * a), l.updateWorldTransformWith(c, d, h, f, p, l.ashearX, m);
            }
          }, e.prototype.applyRelativeLocal = function () {
            var t = this.rotateMix,
                e = this.translateMix,
                n = this.scaleMix,
                a = this.shearMix,
                r = this.target;
            r.appliedValid || r.updateAppliedTransform();

            for (var i = this.bones, s = 0, o = i.length; s < o; s++) {
              var l = i[s];
              l.appliedValid || l.updateAppliedTransform();
              var h = l.arotation;
              0 != t && (h += (r.arotation + this.data.offsetRotation) * t);
              var u = l.ax,
                  c = l.ay;
              0 != e && (u += (r.ax + this.data.offsetX) * e, c += (r.ay + this.data.offsetY) * e);
              var d = l.ascaleX,
                  f = l.ascaleY;
              0 != n && (d > 1e-5 && (d *= (r.ascaleX - 1 + this.data.offsetScaleX) * n + 1), f > 1e-5 && (f *= (r.ascaleY - 1 + this.data.offsetScaleY) * n + 1));
              var p = l.ashearY;
              0 != a && (p += (r.ashearY + this.data.offsetShearY) * a), l.updateWorldTransformWith(u, c, h, d, f, l.ashearX, p);
            }
          }, e;
        }();

        t.TransformConstraint = e;
      }(J || (J = {})), function (t) {
        var e = function (t) {
          function e(e) {
            var n = t.call(this, e, 0, !1) || this;
            return n.bones = new Array(), n.rotateMix = 0, n.translateMix = 0, n.scaleMix = 0, n.shearMix = 0, n.offsetRotation = 0, n.offsetX = 0, n.offsetY = 0, n.offsetScaleX = 0, n.offsetScaleY = 0, n.offsetShearY = 0, n.relative = !1, n.local = !1, n;
          }

          return Q(e, t), e;
        }(t.ConstraintData);

        t.TransformConstraintData = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e() {
            this.convexPolygons = new Array(), this.convexPolygonsIndices = new Array(), this.indicesArray = new Array(), this.isConcaveArray = new Array(), this.triangles = new Array(), this.polygonPool = new t.Pool(function () {
              return new Array();
            }), this.polygonIndicesPool = new t.Pool(function () {
              return new Array();
            });
          }

          return e.prototype.triangulate = function (t) {
            var n = t,
                a = t.length >> 1,
                r = this.indicesArray;
            r.length = 0;

            for (var i = 0; i < a; i++) {
              r[i] = i;
            }

            var s = this.isConcaveArray;
            s.length = 0, i = 0;

            for (var o = a; i < o; ++i) {
              s[i] = e.isConcave(i, a, n, r);
            }

            var l = this.triangles;

            for (l.length = 0; a > 3;) {
              for (var h = a - 1, u = (i = 0, 1);;) {
                t: if (!s[i]) {
                  for (var c = r[h] << 1, d = r[i] << 1, f = r[u] << 1, p = n[c], m = n[c + 1], g = n[d], v = n[d + 1], y = n[f], x = n[f + 1], w = (u + 1) % a; w != h; w = (w + 1) % a) {
                    if (s[w]) {
                      var E = r[w] << 1,
                          M = n[E],
                          _ = n[E + 1];
                      if (e.positiveArea(y, x, p, m, M, _) && e.positiveArea(p, m, g, v, M, _) && e.positiveArea(g, v, y, x, M, _)) break t;
                    }
                  }

                  break;
                }

                if (0 == u) {
                  do {
                    if (!s[i]) break;
                    i--;
                  } while (i > 0);

                  break;
                }

                h = i, i = u, u = (u + 1) % a;
              }

              l.push(r[(a + i - 1) % a]), l.push(r[i]), l.push(r[(i + 1) % a]), r.splice(i, 1), s.splice(i, 1);
              var T = (--a + i - 1) % a,
                  b = i == a ? 0 : i;
              s[T] = e.isConcave(T, a, n, r), s[b] = e.isConcave(b, a, n, r);
            }

            return 3 == a && (l.push(r[2]), l.push(r[0]), l.push(r[1])), l;
          }, e.prototype.decompose = function (t, n) {
            var a = t,
                r = this.convexPolygons;
            this.polygonPool.freeAll(r), r.length = 0;
            var i = this.convexPolygonsIndices;
            this.polygonIndicesPool.freeAll(i), i.length = 0;
            var s = this.polygonIndicesPool.obtain();
            s.length = 0;
            var o = this.polygonPool.obtain();
            o.length = 0;

            for (var l = -1, h = 0, u = 0, c = n.length; u < c; u += 3) {
              var d = n[u] << 1,
                  f = n[u + 1] << 1,
                  p = n[u + 2] << 1,
                  m = a[d],
                  g = a[d + 1],
                  v = a[f],
                  y = a[f + 1],
                  x = a[p],
                  w = a[p + 1],
                  E = !1;

              if (l == d) {
                var M = o.length - 4,
                    _ = e.winding(o[M], o[M + 1], o[M + 2], o[M + 3], x, w),
                    T = e.winding(x, w, o[0], o[1], o[2], o[3]);

                _ == h && T == h && (o.push(x), o.push(w), s.push(p), E = !0);
              }

              E || (o.length > 0 ? (r.push(o), i.push(s)) : (this.polygonPool.free(o), this.polygonIndicesPool.free(s)), (o = this.polygonPool.obtain()).length = 0, o.push(m), o.push(g), o.push(v), o.push(y), o.push(x), o.push(w), (s = this.polygonIndicesPool.obtain()).length = 0, s.push(d), s.push(f), s.push(p), h = e.winding(m, g, v, y, x, w), l = d);
            }

            for (o.length > 0 && (r.push(o), i.push(s)), u = 0, c = r.length; u < c; u++) {
              if (0 != (s = i[u]).length) for (var b = s[0], A = s[s.length - 1], C = (o = r[u])[M = o.length - 4], S = o[M + 1], k = o[M + 2], I = o[M + 3], R = o[0], P = o[1], D = o[2], V = o[3], N = e.winding(C, S, k, I, R, P), F = 0; F < c; F++) {
                if (F != u) {
                  var O = i[F];

                  if (3 == O.length) {
                    var L = O[0],
                        U = O[1],
                        B = O[2],
                        Y = r[F];
                    x = Y[Y.length - 2], w = Y[Y.length - 1], L == b && U == A && (_ = e.winding(C, S, k, I, x, w), T = e.winding(x, w, R, P, D, V), _ == N && T == N && (Y.length = 0, O.length = 0, o.push(x), o.push(w), s.push(B), C = k, S = I, k = x, I = w, F = 0));
                  }
                }
              }
            }

            for (u = r.length - 1; u >= 0; u--) {
              0 == (o = r[u]).length && (r.splice(u, 1), this.polygonPool.free(o), s = i[u], i.splice(u, 1), this.polygonIndicesPool.free(s));
            }

            return r;
          }, e.isConcave = function (t, e, n, a) {
            var r = a[(e + t - 1) % e] << 1,
                i = a[t] << 1,
                s = a[(t + 1) % e] << 1;
            return !this.positiveArea(n[r], n[r + 1], n[i], n[i + 1], n[s], n[s + 1]);
          }, e.positiveArea = function (t, e, n, a, r, i) {
            return t * (i - a) + n * (e - i) + r * (a - e) >= 0;
          }, e.winding = function (t, e, n, a, r, i) {
            var s = n - t,
                o = a - e;
            return r * o - i * s + s * e - t * o >= 0 ? 1 : -1;
          }, e;
        }();

        t.Triangulator = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function t() {
            this.array = new Array();
          }

          return t.prototype.add = function (t) {
            var e = this.contains(t);
            return this.array[0 | t] = 0 | t, !e;
          }, t.prototype.contains = function (t) {
            return null != this.array[0 | t];
          }, t.prototype.remove = function (t) {
            this.array[0 | t] = void 0;
          }, t.prototype.clear = function () {
            this.array.length = 0;
          }, t;
        }();

        t.IntSet = e;

        var n = function () {
          function t(t, e, n, a) {
            void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === n && (n = 0), void 0 === a && (a = 0), this.r = t, this.g = e, this.b = n, this.a = a;
          }

          return t.prototype.set = function (t, e, n, a) {
            return this.r = t, this.g = e, this.b = n, this.a = a, this.clamp(), this;
          }, t.prototype.setFromColor = function (t) {
            return this.r = t.r, this.g = t.g, this.b = t.b, this.a = t.a, this;
          }, t.prototype.setFromString = function (t) {
            return t = "#" == t.charAt(0) ? t.substr(1) : t, this.r = parseInt(t.substr(0, 2), 16) / 255, this.g = parseInt(t.substr(2, 2), 16) / 255, this.b = parseInt(t.substr(4, 2), 16) / 255, this.a = (8 != t.length ? 255 : parseInt(t.substr(6, 2), 16)) / 255, this;
          }, t.prototype.add = function (t, e, n, a) {
            return this.r += t, this.g += e, this.b += n, this.a += a, this.clamp(), this;
          }, t.prototype.clamp = function () {
            return this.r < 0 ? this.r = 0 : this.r > 1 && (this.r = 1), this.g < 0 ? this.g = 0 : this.g > 1 && (this.g = 1), this.b < 0 ? this.b = 0 : this.b > 1 && (this.b = 1), this.a < 0 ? this.a = 0 : this.a > 1 && (this.a = 1), this;
          }, t.rgba8888ToColor = function (t, e) {
            t.r = ((4278190080 & e) >>> 24) / 255, t.g = ((16711680 & e) >>> 16) / 255, t.b = ((65280 & e) >>> 8) / 255, t.a = (255 & e) / 255;
          }, t.rgb888ToColor = function (t, e) {
            t.r = ((16711680 & e) >>> 16) / 255, t.g = ((65280 & e) >>> 8) / 255, t.b = (255 & e) / 255;
          }, t.WHITE = new t(1, 1, 1, 1), t.RED = new t(1, 0, 0, 1), t.GREEN = new t(0, 1, 0, 1), t.BLUE = new t(0, 0, 1, 1), t.MAGENTA = new t(1, 0, 1, 1), t;
        }();

        t.Color = n;

        var a = function () {
          function t() {}

          return t.clamp = function (t, e, n) {
            return t < e ? e : t > n ? n : t;
          }, t.cosDeg = function (e) {
            return Math.cos(e * t.degRad);
          }, t.sinDeg = function (e) {
            return Math.sin(e * t.degRad);
          }, t.signum = function (t) {
            return t > 0 ? 1 : t < 0 ? -1 : 0;
          }, t.toInt = function (t) {
            return t > 0 ? Math.floor(t) : Math.ceil(t);
          }, t.cbrt = function (t) {
            var e = Math.pow(Math.abs(t), 1 / 3);
            return t < 0 ? -e : e;
          }, t.randomTriangular = function (e, n) {
            return t.randomTriangularWith(e, n, .5 * (e + n));
          }, t.randomTriangularWith = function (t, e, n) {
            var a = Math.random(),
                r = e - t;
            return a <= (n - t) / r ? t + Math.sqrt(a * r * (n - t)) : e - Math.sqrt((1 - a) * r * (e - n));
          }, t.PI = 3.1415927, t.PI2 = 2 * t.PI, t.radiansToDegrees = 180 / t.PI, t.radDeg = t.radiansToDegrees, t.degreesToRadians = t.PI / 180, t.degRad = t.degreesToRadians, t;
        }();

        t.MathUtils = a;

        var r = function () {
          function t() {}

          return t.prototype.apply = function (t, e, n) {
            return t + (e - t) * this.applyInternal(n);
          }, t;
        }();

        t.Interpolation = r;

        var i = function (t) {
          function e(e) {
            var n = t.call(this) || this;
            return n.power = 2, n.power = e, n;
          }

          return Q(e, t), e.prototype.applyInternal = function (t) {
            return t <= .5 ? Math.pow(2 * t, this.power) / 2 : Math.pow(2 * (t - 1), this.power) / (this.power % 2 == 0 ? -2 : 2) + 1;
          }, e;
        }(r);

        t.Pow = i;

        var s = function (t) {
          function e(e) {
            return t.call(this, e) || this;
          }

          return Q(e, t), e.prototype.applyInternal = function (t) {
            return Math.pow(t - 1, this.power) * (this.power % 2 == 0 ? -1 : 1) + 1;
          }, e;
        }(i);

        t.PowOut = s;

        var o = function () {
          function t() {}

          return t.arrayCopy = function (t, e, n, a, r) {
            for (var i = e, s = a; i < e + r; i++, s++) {
              n[s] = t[i];
            }
          }, t.setArraySize = function (t, e, n) {
            void 0 === n && (n = 0);
            var a = t.length;
            if (a == e) return t;
            if (t.length = e, a < e) for (var r = a; r < e; r++) {
              t[r] = n;
            }
            return t;
          }, t.ensureArrayCapacity = function (e, n, a) {
            return void 0 === a && (a = 0), e.length >= n ? e : t.setArraySize(e, n, a);
          }, t.newArray = function (t, e) {
            for (var n = new Array(t), a = 0; a < t; a++) {
              n[a] = e;
            }

            return n;
          }, t.newFloatArray = function (e) {
            if (t.SUPPORTS_TYPED_ARRAYS) return new Float32Array(e);

            for (var n = new Array(e), a = 0; a < n.length; a++) {
              n[a] = 0;
            }

            return n;
          }, t.newShortArray = function (e) {
            if (t.SUPPORTS_TYPED_ARRAYS) return new Int16Array(e);

            for (var n = new Array(e), a = 0; a < n.length; a++) {
              n[a] = 0;
            }

            return n;
          }, t.toFloatArray = function (e) {
            return t.SUPPORTS_TYPED_ARRAYS ? new Float32Array(e) : e;
          }, t.toSinglePrecision = function (e) {
            return t.SUPPORTS_TYPED_ARRAYS ? Math.fround(e) : e;
          }, t.webkit602BugfixHelper = function () {}, t.contains = function (t, e) {
            for (var n = 0; n < t.length; n++) {
              if (t[n] == e) return !0;
            }

            return !1;
          }, t.SUPPORTS_TYPED_ARRAYS = "undefined" != typeof Float32Array, t;
        }();

        t.Utils = o;

        var l = function () {
          function t() {}

          return t.logBones = function (t) {
            for (var e = 0; e < t.bones.length; e++) {
              var n = t.bones[e];
              console.log(n.data.name + ", " + n.a + ", " + n.b + ", " + n.c + ", " + n.d + ", " + n.worldX + ", " + n.worldY);
            }
          }, t;
        }();

        t.DebugUtils = l;

        var h = function () {
          function t(t) {
            this.items = new Array(), this.instantiator = t;
          }

          return t.prototype.obtain = function () {
            return this.items.length > 0 ? this.items.pop() : this.instantiator();
          }, t.prototype.free = function (t) {
            t.reset && t.reset(), this.items.push(t);
          }, t.prototype.freeAll = function (t) {
            for (var e = 0; e < t.length; e++) {
              t[e].reset && t[e].reset(), this.items[e] = t[e];
            }
          }, t.prototype.clear = function () {
            this.items.length = 0;
          }, t;
        }();

        t.Pool = h;

        var u = function () {
          function t(t, e) {
            void 0 === t && (t = 0), void 0 === e && (e = 0), this.x = t, this.y = e;
          }

          return t.prototype.set = function (t, e) {
            return this.x = t, this.y = e, this;
          }, t.prototype.length = function () {
            var t = this.x,
                e = this.y;
            return Math.sqrt(t * t + e * e);
          }, t.prototype.normalize = function () {
            var t = this.length();
            return 0 != t && (this.x /= t, this.y /= t), this;
          }, t;
        }();

        t.Vector2 = u;

        var c = function () {
          function t() {
            this.maxDelta = .064, this.framesPerSecond = 0, this.delta = 0, this.totalTime = 0, this.lastTime = Date.now() / 1e3, this.frameCount = 0, this.frameTime = 0;
          }

          return t.prototype.update = function () {
            var t = Date.now() / 1e3;
            this.delta = t - this.lastTime, this.frameTime += this.delta, this.totalTime += this.delta, this.delta > this.maxDelta && (this.delta = this.maxDelta), this.lastTime = t, this.frameCount++, this.frameTime > 1 && (this.framesPerSecond = this.frameCount / this.frameTime, this.frameTime = 0, this.frameCount = 0);
          }, t;
        }();

        t.TimeKeeper = c;

        var d = function () {
          function t(t) {
            void 0 === t && (t = 32), this.addedValues = 0, this.lastValue = 0, this.mean = 0, this.dirty = !0, this.values = new Array(t);
          }

          return t.prototype.hasEnoughData = function () {
            return this.addedValues >= this.values.length;
          }, t.prototype.addValue = function (t) {
            this.addedValues < this.values.length && this.addedValues++, this.values[this.lastValue++] = t, this.lastValue > this.values.length - 1 && (this.lastValue = 0), this.dirty = !0;
          }, t.prototype.getMean = function () {
            if (this.hasEnoughData()) {
              if (this.dirty) {
                for (var t = 0, e = 0; e < this.values.length; e++) {
                  t += this.values[e];
                }

                this.mean = t / this.values.length, this.dirty = !1;
              }

              return this.mean;
            }

            return 0;
          }, t;
        }();

        t.WindowedMean = d;
      }(J || (J = {})), Math.fround || (Math.fround = (Z = new Float32Array(1), function (t) {
        return Z[0] = t, Z[0];
      })), function (t) {
        var e = function e(t) {
          if (null == t) throw new Error("name cannot be null.");
          this.name = t;
        };

        t.Attachment = e;

        var n = function (e) {
          function n(t) {
            var a = e.call(this, t) || this;
            return a.id = (65535 & n.nextID++) << 11, a.worldVerticesLength = 0, a.deformAttachment = a, a;
          }

          return Q(n, e), n.prototype.computeWorldVertices = function (t, e, n, a, r, i) {
            n = r + (n >> 1) * i;
            var s = t.bone.skeleton,
                o = t.deform,
                l = this.vertices,
                h = this.bones;

            if (null != h) {
              for (var u = 0, c = 0, d = 0; d < e; d += 2) {
                u += (g = h[u]) + 1, c += g;
              }

              var f = s.bones;
              if (0 == o.length) for (S = r, T = 3 * c; S < n; S += i) {
                var p = 0,
                    m = 0,
                    g = h[u++];

                for (g += u; u < g; u++, T += 3) {
                  w = f[h[u]], k = l[T], I = l[T + 1];
                  var v = l[T + 2];
                  p += (k * w.a + I * w.b + w.worldX) * v, m += (k * w.c + I * w.d + w.worldY) * v;
                }

                a[S] = p, a[S + 1] = m;
              } else for (var y = o, x = (S = r, T = 3 * c, c << 1); S < n; S += i) {
                for (p = 0, m = 0, g = h[u++], g += u; u < g; u++, T += 3, x += 2) {
                  w = f[h[u]], k = l[T] + y[x], I = l[T + 1] + y[x + 1], v = l[T + 2], p += (k * w.a + I * w.b + w.worldX) * v, m += (k * w.c + I * w.d + w.worldY) * v;
                }

                a[S] = p, a[S + 1] = m;
              }
            } else {
              o.length > 0 && (l = o);

              for (var w, E = (w = t.bone).worldX, M = w.worldY, _ = w.a, T = w.b, b = w.c, A = w.d, C = e, S = r; S < n; C += 2, S += i) {
                var k = l[C],
                    I = l[C + 1];
                a[S] = k * _ + I * T + E, a[S + 1] = k * b + I * A + M;
              }
            }
          }, n.prototype.copyTo = function (e) {
            null != this.bones ? (e.bones = new Array(this.bones.length), t.Utils.arrayCopy(this.bones, 0, e.bones, 0, this.bones.length)) : e.bones = null, null != this.vertices ? (e.vertices = t.Utils.newFloatArray(this.vertices.length), t.Utils.arrayCopy(this.vertices, 0, e.vertices, 0, this.vertices.length)) : e.vertices = null, e.worldVerticesLength = this.worldVerticesLength, e.deformAttachment = this.deformAttachment;
          }, n.nextID = 0, n;
        }(e);

        t.VertexAttachment = n;
      }(J || (J = {})), function (t) {
        var e;
        (e = t.AttachmentType || (t.AttachmentType = {}))[e.Region = 0] = "Region", e[e.BoundingBox = 1] = "BoundingBox", e[e.Mesh = 2] = "Mesh", e[e.LinkedMesh = 3] = "LinkedMesh", e[e.Path = 4] = "Path", e[e.Point = 5] = "Point", e[e.Clipping = 6] = "Clipping";
      }(J || (J = {})), function (t) {
        var e = function (e) {
          function n(n) {
            var a = e.call(this, n) || this;
            return a.color = new t.Color(1, 1, 1, 1), a;
          }

          return Q(n, e), n.prototype.copy = function () {
            var t = new n(name);
            return this.copyTo(t), t.color.setFromColor(this.color), t;
          }, n;
        }(t.VertexAttachment);

        t.BoundingBoxAttachment = e;
      }(J || (J = {})), function (t) {
        var e = function (e) {
          function n(n) {
            var a = e.call(this, n) || this;
            return a.color = new t.Color(.2275, .2275, .8078, 1), a;
          }

          return Q(n, e), n.prototype.copy = function () {
            var t = new n(name);
            return this.copyTo(t), t.endSlot = this.endSlot, t.color.setFromColor(this.color), t;
          }, n;
        }(t.VertexAttachment);

        t.ClippingAttachment = e;
      }(J || (J = {})), function (t) {
        var e = function (e) {
          function n(n) {
            var a = e.call(this, n) || this;
            return a.color = new t.Color(1, 1, 1, 1), a.tempColor = new t.Color(0, 0, 0, 0), a;
          }

          return Q(n, e), n.prototype.updateUVs = function () {
            var e = this.regionUVs;
            null != this.uvs && this.uvs.length == e.length || (this.uvs = t.Utils.newFloatArray(e.length));
            var n = this.uvs,
                a = this.uvs.length,
                r = this.region.u,
                i = this.region.v,
                s = 0,
                o = 0;

            if (this.region instanceof t.TextureAtlasRegion) {
              var l = this.region,
                  h = l.texture.getImage().width,
                  u = l.texture.getImage().height;

              switch (l.degrees) {
                case 90:
                  r -= (l.originalHeight - l.offsetY - l.height) / h, i -= (l.originalWidth - l.offsetX - l.width) / u, s = l.originalHeight / h, o = l.originalWidth / u;

                  for (var c = 0; c < a; c += 2) {
                    n[c] = r + e[c + 1] * s, n[c + 1] = i + (1 - e[c]) * o;
                  }

                  return;

                case 180:
                  for (r -= (l.originalWidth - l.offsetX - l.width) / h, i -= l.offsetY / u, s = l.originalWidth / h, o = l.originalHeight / u, c = 0; c < a; c += 2) {
                    n[c] = r + (1 - e[c]) * s, n[c + 1] = i + (1 - e[c + 1]) * o;
                  }

                  return;

                case 270:
                  for (r -= l.offsetY / h, i -= l.offsetX / u, s = l.originalHeight / h, o = l.originalWidth / u, c = 0; c < a; c += 2) {
                    n[c] = r + (1 - e[c + 1]) * s, n[c + 1] = i + e[c] * o;
                  }

                  return;
              }

              r -= l.offsetX / h, i -= (l.originalHeight - l.offsetY - l.height) / u, s = l.originalWidth / h, o = l.originalHeight / u;
            } else null == this.region ? (r = i = 0, s = o = 1) : (s = this.region.u2 - r, o = this.region.v2 - i);

            for (c = 0; c < a; c += 2) {
              n[c] = r + e[c] * s, n[c + 1] = i + e[c + 1] * o;
            }
          }, n.prototype.getParentMesh = function () {
            return this.parentMesh;
          }, n.prototype.setParentMesh = function (t) {
            this.parentMesh = t, null != t && (this.bones = t.bones, this.vertices = t.vertices, this.worldVerticesLength = t.worldVerticesLength, this.regionUVs = t.regionUVs, this.triangles = t.triangles, this.hullLength = t.hullLength, this.worldVerticesLength = t.worldVerticesLength);
          }, n.prototype.copy = function () {
            if (null != this.parentMesh) return this.newLinkedMesh();
            var e = new n(this.name);
            return e.region = this.region, e.path = this.path, e.color.setFromColor(this.color), this.copyTo(e), e.regionUVs = new Array(this.regionUVs.length), t.Utils.arrayCopy(this.regionUVs, 0, e.regionUVs, 0, this.regionUVs.length), e.uvs = new Array(this.uvs.length), t.Utils.arrayCopy(this.uvs, 0, e.uvs, 0, this.uvs.length), e.triangles = new Array(this.triangles.length), t.Utils.arrayCopy(this.triangles, 0, e.triangles, 0, this.triangles.length), e.hullLength = this.hullLength, null != this.edges && (e.edges = new Array(this.edges.length), t.Utils.arrayCopy(this.edges, 0, e.edges, 0, this.edges.length)), e.width = this.width, e.height = this.height, e;
          }, n.prototype.newLinkedMesh = function () {
            var t = new n(this.name);
            return t.region = this.region, t.path = this.path, t.color.setFromColor(this.color), t.deformAttachment = this.deformAttachment, t.setParentMesh(null != this.parentMesh ? this.parentMesh : this), t.updateUVs(), t;
          }, n;
        }(t.VertexAttachment);

        t.MeshAttachment = e;
      }(J || (J = {})), function (t) {
        var e = function (e) {
          function n(n) {
            var a = e.call(this, n) || this;
            return a.closed = !1, a.constantSpeed = !1, a.color = new t.Color(1, 1, 1, 1), a;
          }

          return Q(n, e), n.prototype.copy = function () {
            var e = new n(name);
            return this.copyTo(e), e.lengths = new Array(this.lengths.length), t.Utils.arrayCopy(this.lengths, 0, e.lengths, 0, this.lengths.length), e.closed = closed, e.constantSpeed = this.constantSpeed, e.color.setFromColor(this.color), e;
          }, n;
        }(t.VertexAttachment);

        t.PathAttachment = e;
      }(J || (J = {})), function (t) {
        var e = function (e) {
          function n(n) {
            var a = e.call(this, n) || this;
            return a.color = new t.Color(.38, .94, 0, 1), a;
          }

          return Q(n, e), n.prototype.computeWorldPosition = function (t, e) {
            return e.x = this.x * t.a + this.y * t.b + t.worldX, e.y = this.x * t.c + this.y * t.d + t.worldY, e;
          }, n.prototype.computeWorldRotation = function (e) {
            var n = t.MathUtils.cosDeg(this.rotation),
                a = t.MathUtils.sinDeg(this.rotation),
                r = n * e.a + a * e.b,
                i = n * e.c + a * e.d;
            return Math.atan2(i, r) * t.MathUtils.radDeg;
          }, n.prototype.copy = function () {
            var t = new n(name);
            return t.x = this.x, t.y = this.y, t.rotation = this.rotation, t.color.setFromColor(this.color), t;
          }, n;
        }(t.VertexAttachment);

        t.PointAttachment = e;
      }(J || (J = {})), function (t) {
        var e = function (e) {
          function n(n) {
            var a = e.call(this, n) || this;
            return a.x = 0, a.y = 0, a.scaleX = 1, a.scaleY = 1, a.rotation = 0, a.width = 0, a.height = 0, a.color = new t.Color(1, 1, 1, 1), a.offset = t.Utils.newFloatArray(8), a.uvs = t.Utils.newFloatArray(8), a.tempColor = new t.Color(1, 1, 1, 1), a;
          }

          return Q(n, e), n.prototype.updateOffset = function () {
            var t = this.width / this.region.originalWidth * this.scaleX,
                e = this.height / this.region.originalHeight * this.scaleY,
                a = -this.width / 2 * this.scaleX + this.region.offsetX * t,
                r = -this.height / 2 * this.scaleY + this.region.offsetY * e,
                i = a + this.region.width * t,
                s = r + this.region.height * e,
                o = this.rotation * Math.PI / 180,
                l = Math.cos(o),
                h = Math.sin(o),
                u = a * l + this.x,
                c = a * h,
                d = r * l + this.y,
                f = r * h,
                p = i * l + this.x,
                m = i * h,
                g = s * l + this.y,
                v = s * h,
                y = this.offset;
            y[n.OX1] = u - f, y[n.OY1] = d + c, y[n.OX2] = u - v, y[n.OY2] = g + c, y[n.OX3] = p - v, y[n.OY3] = g + m, y[n.OX4] = p - f, y[n.OY4] = d + m;
          }, n.prototype.setRegion = function (t) {
            this.region = t;
            var e = this.uvs;
            t.rotate ? (e[2] = t.u, e[3] = t.v2, e[4] = t.u, e[5] = t.v, e[6] = t.u2, e[7] = t.v, e[0] = t.u2, e[1] = t.v2) : (e[0] = t.u, e[1] = t.v2, e[2] = t.u, e[3] = t.v, e[4] = t.u2, e[5] = t.v, e[6] = t.u2, e[7] = t.v2);
          }, n.prototype.computeWorldVertices = function (t, e, a, r) {
            var i = this.offset,
                s = t.worldX,
                o = t.worldY,
                l = t.a,
                h = t.b,
                u = t.c,
                c = t.d,
                d = 0,
                f = 0;
            d = i[n.OX1], f = i[n.OY1], e[a] = d * l + f * h + s, e[a + 1] = d * u + f * c + o, a += r, d = i[n.OX2], f = i[n.OY2], e[a] = d * l + f * h + s, e[a + 1] = d * u + f * c + o, a += r, d = i[n.OX3], f = i[n.OY3], e[a] = d * l + f * h + s, e[a + 1] = d * u + f * c + o, a += r, d = i[n.OX4], f = i[n.OY4], e[a] = d * l + f * h + s, e[a + 1] = d * u + f * c + o;
          }, n.prototype.copy = function () {
            var e = new n(name);
            return e.region = this.region, e.rendererObject = this.rendererObject, e.path = this.path, e.x = this.x, e.y = this.y, e.scaleX = this.scaleX, e.scaleY = this.scaleY, e.rotation = this.rotation, e.width = this.width, e.height = this.height, t.Utils.arrayCopy(this.uvs, 0, e.uvs, 0, 8), t.Utils.arrayCopy(this.offset, 0, e.offset, 0, 8), e.color.setFromColor(this.color), e;
          }, n.OX1 = 0, n.OY1 = 1, n.OX2 = 2, n.OY2 = 3, n.OX3 = 4, n.OY3 = 5, n.OX4 = 6, n.OY4 = 7, n.X1 = 0, n.Y1 = 1, n.C1R = 2, n.C1G = 3, n.C1B = 4, n.C1A = 5, n.U1 = 6, n.V1 = 7, n.X2 = 8, n.Y2 = 9, n.C2R = 10, n.C2G = 11, n.C2B = 12, n.C2A = 13, n.U2 = 14, n.V2 = 15, n.X3 = 16, n.Y3 = 17, n.C3R = 18, n.C3G = 19, n.C3B = 20, n.C3A = 21, n.U3 = 22, n.V3 = 23, n.X4 = 24, n.Y4 = 25, n.C4R = 26, n.C4G = 27, n.C4B = 28, n.C4A = 29, n.U4 = 30, n.V4 = 31, n;
        }(t.Attachment);

        t.RegionAttachment = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t, e) {
            this.jitterX = 0, this.jitterY = 0, this.jitterX = t, this.jitterY = e;
          }

          return e.prototype.begin = function () {}, e.prototype.transform = function (e) {
            e.x += t.MathUtils.randomTriangular(-this.jitterX, this.jitterY), e.y += t.MathUtils.randomTriangular(-this.jitterX, this.jitterY);
          }, e.prototype.end = function () {}, e;
        }();

        t.JitterEffect = e;
      }(J || (J = {})), function (t) {
        var e = function () {
          function e(t, e) {
            this.centerX = 0, this.centerY = 0, this.radius = 0, this.angle = 0, this.worldX = 0, this.worldY = 0, this.radius = t, this.interpolation = e;
          }

          return e.prototype.begin = function (t) {
            this.worldX = t.x + this.centerX, this.worldY = t.y + this.centerY;
          }, e.prototype.transform = function (e) {
            var n = this.angle * t.MathUtils.degreesToRadians,
                a = e.x - this.worldX,
                r = e.y - this.worldY,
                i = Math.sqrt(a * a + r * r);

            if (i < this.radius) {
              var s = this.interpolation.apply(0, n, (this.radius - i) / this.radius),
                  o = Math.cos(s),
                  l = Math.sin(s);
              e.x = o * a - l * r + this.worldX, e.y = l * a + o * r + this.worldY;
            }
          }, e.prototype.end = function () {}, e.interpolation = new t.PowOut(2), e;
        }();

        t.SwirlEffect = e;
      }(J || (J = {}));

      var K,
          $,
          tt,
          et,
          nt,
          at,
          rt = J,
          it = function () {
        function t() {
          this.start = void 0, this.interrupt = void 0, this.end = void 0, this.dispose = void 0, this.complete = void 0, this.event = void 0;
        }

        return t.getListeners = function (e) {
          return e.listener || (e.listener = new t()), e.listener;
        }, t;
      }(),
          st = 1 / 60,
          ot = [],
          lt = [],
          ht = 0,
          ut = 0,
          ct = 0,
          dt = null,
          ft = null,
          pt = 0,
          mt = 0,
          gt = 0,
          vt = 0,
          yt = null,
          xt = null,
          wt = 0,
          Et = 0,
          Mt = new rt.Color(1, 1, 1, 1),
          _t = new rt.Color(1, 1, 1, 1),
          Tt = [0, 1, 2, 2, 3, 0],
          bt = function () {
        function t() {
          this.frames = [], this.totalTime = 0, this.isCompleted = !1, this._privateMode = !1, this._inited = !1, this._invalid = !0, this._enableCacheAttachedInfo = !1, this._frameIdx = -1, this._skeletonInfo = null, this._animationName = null, this._tempSegments = null, this._tempColors = null, this._tempBoneInfos = null, this._privateMode = !1, this._inited = !1, this._invalid = !0, this._enableCacheAttachedInfo = !1, this.frames = [], this.totalTime = 0, this._frameIdx = -1, this.isCompleted = !1, this._skeletonInfo = null, this._animationName = null, this._tempSegments = null, this._tempColors = null, this._tempBoneInfos = null;
        }

        var e = t.prototype;
        return e.init = function (t, e) {
          this._inited = !0, this._animationName = e, this._skeletonInfo = t;
        }, e.clear = function () {
          this._inited = !1;

          for (var t = 0, e = this.frames.length; t < e; t++) {
            this.frames[t].segments.length = 0;
          }

          this.invalidAllFrame();
        }, e.bind = function (t) {
          var e = this;

          t.complete = function (t) {
            t && t.animation.name === e._animationName && (e.isCompleted = !0);
          };
        }, e.unbind = function (t) {
          t.complete = null;
        }, e.begin = function () {
          if (this._invalid) {
            var t = this._skeletonInfo,
                e = null == t ? void 0 : t.curAnimationCache;
            e && e !== this && (this._privateMode ? e.invalidAllFrame() : e.updateToFrame());
            var n = null == t ? void 0 : t.skeleton,
                a = null == t ? void 0 : t.listener,
                r = null == t ? void 0 : t.state,
                i = null == n ? void 0 : n.data.findAnimation(this._animationName);
            null == r || r.setAnimationWith(0, i, !1), this.bind(a), t.curAnimationCache = this, this._frameIdx = -1, this.isCompleted = !1, this.totalTime = 0, this._invalid = !1;
          }
        }, e.end = function () {
          this.needToUpdate() || (this._skeletonInfo.curAnimationCache = null, this.frames.length = this._frameIdx + 1, this.isCompleted = !0, this.unbind(this._skeletonInfo.listener));
        }, e.updateToFrame = function (t) {
          if (this._inited && (this.begin(), this.needToUpdate(t))) {
            var e = this._skeletonInfo,
                n = null == e ? void 0 : e.skeleton,
                a = null == e ? void 0 : e.clipper,
                r = null == e ? void 0 : e.state;

            do {
              null == n || n.update(st), null == r || r.update(st), null == r || r.apply(n), null == n || n.updateWorldTransform(), this._frameIdx++, this.updateFrame(n, a, this._frameIdx), this.totalTime += st;
            } while (this.needToUpdate(t));

            this.end();
          }
        }, e.isInited = function () {
          return this._inited;
        }, e.isInvalid = function () {
          return this._invalid;
        }, e.invalidAllFrame = function () {
          this.isCompleted = !1, this._invalid = !0;
        }, e.updateAllFrame = function () {
          this.invalidAllFrame(), this.updateToFrame();
        }, e.enableCacheAttachedInfo = function () {
          this._enableCacheAttachedInfo || (this._enableCacheAttachedInfo = !0, this.invalidAllFrame());
        }, e.fillVertices = function (t, e, n, a, r) {
          if (et = n.a * e.a * t.a * 255, K = e.r * t.r * 255, $ = e.g * t.g * 255, tt = e.b * t.b * 255, Mt.r = K * n.r, Mt.g = $ * n.g, Mt.b = tt * n.b, Mt.a = et, null == r.darkColor ? _t.set(0, 0, 0, 1) : (_t.r = r.darkColor.r * K, _t.g = r.darkColor.g * $, _t.b = r.darkColor.b * tt), _t.a = 0, nt = (Mt.a << 24 >>> 0) + (Mt.b << 16) + (Mt.g << 8) + Mt.r, at = (_t.a << 24 >>> 0) + (_t.b << 16) + (_t.g << 8) + _t.r, yt !== nt || xt !== at) {
            var i = this._tempColors;
            yt = nt, xt = at, vt > 0 && (i[vt - 1].vfOffset = ct), i[vt++] = {
              fr: Mt.r,
              fg: Mt.g,
              fb: Mt.b,
              fa: Mt.a,
              dr: _t.r,
              dg: _t.g,
              db: _t.b,
              da: _t.a,
              vfOffset: 0
            };
          }

          if (a.isClipping()) {
            a.clipTriangles(ot, wt, lt, Et, ot, Mt, _t, !0, 6, ct, ct + 2);
            var s = a.clippedVertices,
                o = a.clippedTriangles;
            Et = o.length, wt = s.length / 12 * 6;

            for (var l = 0, h = ut, u = o.length; l < u;) {
              lt[h++] = o[l++];
            }

            for (var c = 0, d = s.length, f = ct; c < d; c += 12, f += 6) {
              ot[f] = s[c], ot[f + 1] = s[c + 1], ot[f + 2] = s[c + 6], ot[f + 3] = s[c + 7], ot[f + 4] = nt, ot[f + 5] = at;
            }
          } else for (var p = ct, m = ct + wt; p < m; p += 6) {
            ot[p + 4] = nt, ot[p + 5] = at;
          }
        }, e.updateFrame = function (t, e, n) {
          ct = 0, ht = 0, ut = 0, dt = null, ft = null, pt = 0, mt = 0, gt = 0, vt = 0, yt = null, xt = null, this.frames[n] = this.frames[n] || {
            segments: [],
            colors: [],
            boneInfos: [],
            vertices: null,
            uintVert: null,
            indices: null
          };
          var a = this.frames[n],
              r = this._tempSegments = a.segments,
              i = this._tempColors = a.colors,
              s = this._tempBoneInfos = a.boneInfos;
          this.traverseSkeleton(t, e), vt > 0 && (i[vt - 1].vfOffset = ct), i.length = vt, s.length = ht;
          var o = gt - 1;
          if (o >= 0) if (mt > 0) {
            var l = r[o];
            l.indexCount = mt, l.vfCount = 13 * pt, l.vertexCount = pt, r.length = gt;
          } else r.length = gt - 1;

          if (0 !== r.length) {
            var h = a.vertices,
                u = ct / 6 * 13;
            (!h || h.length < u) && (h = a.vertices = new Float32Array(u));

            for (var c = 0, d = 0; c < u;) {
              h[c] = ot[d++], h[c + 1] = ot[d++], h[c + 3] = ot[d++], h[c + 4] = ot[d++], this._setVerticeColor(ot[d++], h, c + 5), this._setVerticeColor(ot[d++], h, c + 9), c += 13;
            }

            var f = a.indices;
            (!f || f.length < ut) && (f = a.indices = new Uint16Array(ut));

            for (var p = 0; p < ut; p++) {
              f[p] = lt[p];
            }

            a.vertices = h, a.indices = f;
          }
        }, e.needToUpdate = function (t) {
          return !this.isCompleted && this.totalTime < 30 && (void 0 === t || this._frameIdx < t);
        }, e.traverseSkeleton = function (t, e) {
          var n,
              a,
              r,
              i,
              s,
              o,
              l,
              h,
              u,
              c,
              d,
              f,
              p = this._tempSegments,
              m = this._tempBoneInfos,
              g = t.color,
              v = t.bones;
          if (this._enableCacheAttachedInfo) for (var y = 0, x = v.length; y < x; y++, ht++) {
            var w = v[y],
                E = m[ht];
            E || (E = m[ht] = {}), E.a = w.a, E.b = w.b, E.c = w.c, E.d = w.d, E.worldX = w.worldX, E.worldY = w.worldY;
          }

          for (var M = 0, _ = t.drawOrder.length; M < _; M++) {
            if (f = t.drawOrder[M], wt = 0, Et = 0, n = f.getAttachment()) {
              if (o = n instanceof rt.RegionAttachment, l = n instanceof rt.MeshAttachment, n instanceof rt.ClippingAttachment) e.clipStart(f, n);else if (o || l) {
                if (h = n.region.texture.getRealTexture()) {
                  if (d = f.data.blendMode, dt === h.nativeUrl && ft === d || (dt = h.nativeUrl, ft = d, (u = gt - 1) >= 0 && (mt > 0 ? ((c = p[u]).indexCount = mt, c.vertexCount = pt, c.vfCount = 13 * pt) : gt--), p[gt] = {
                    tex: h,
                    blendMode: d,
                    indexCount: 0,
                    vertexCount: 0,
                    vfCount: 0
                  }, gt++, mt = 0, pt = 0), o) s = Tt, wt = 24, Et = 6, n.computeWorldVertices(f.bone, ot, ct, 6);else if (l) {
                    var T = n;
                    s = T.triangles, wt = 6 * (T.worldVerticesLength >> 1), Et = s.length, T.computeWorldVertices(f, 0, T.worldVerticesLength, ot, ct, 6);
                  }

                  if (0 !== wt && 0 !== Et) {
                    for (var b = 0, A = ut, C = s.length; b < C;) {
                      lt[A++] = s[b++];
                    }

                    i = n.uvs;

                    for (var S = ct, k = ct + wt, I = 0; S < k; S += 6, I += 2) {
                      ot[S + 2] = i[I], ot[S + 3] = i[I + 1];
                    }

                    if (a = n.color, r = f.color, this.fillVertices(g, a, r, e, f), Et > 0) {
                      for (var R = ut, P = ut + Et; R < P; R++) {
                        lt[R] += pt;
                      }

                      ut += Et, ct += wt, mt += Et, pt += wt / 6;
                    }

                    e.clipEndWithSlot(f);
                  } else e.clipEndWithSlot(f);
                } else e.clipEndWithSlot(f);
              } else e.clipEndWithSlot(f);
            } else e.clipEndWithSlot(f);
          }

          e.clipEnd();
        }, e._setVerticeColor = function (t, e, n) {
          e[n] = (255 & t) / 255, e[n + 1] = (t >> 8 & 255) / 255, e[n + 2] = (t >> 16 & 255) / 255, e[n + 3] = (t >> 24 & 255) / 255;
        }, t;
      }(),
          At = function () {
        function t() {
          this._privateMode = void 0, this._skeletonCache = void 0, this._animationPool = void 0, this._privateMode = !1, this._animationPool = {}, this._skeletonCache = {};
        }

        var e = t.prototype;
        return e.enablePrivateMode = function () {
          this._privateMode = !0;
        }, e.clear = function () {
          this._animationPool = {}, this._skeletonCache = {};
        }, e.removeSkeleton = function (t) {
          var e = this._skeletonCache[t];

          if (e) {
            var n = e.animationsCache;

            for (var a in n) {
              var r = n[a];
              r && (this._animationPool[t + "#" + a] = r, r.clear());
            }

            delete this._skeletonCache[t];
          }
        }, e.getSkeletonCache = function (t, e) {
          var n = this._skeletonCache[t];

          if (!n) {
            var a = new rt.Skeleton(e),
                r = new rt.SkeletonClipping(),
                i = new rt.AnimationStateData(a.data),
                s = new rt.AnimationState(i),
                o = new it();
            s.addListener(o), this._skeletonCache[t] = n = {
              skeleton: a,
              clipper: r,
              state: s,
              listener: o,
              animationsCache: {},
              curAnimationCache: null
            };
          }

          return n;
        }, e.getAnimationCache = function (t, e) {
          var n = this._skeletonCache[t];
          return n ? n.animationsCache[e] : null;
        }, e.invalidAnimationCache = function (t) {
          var e = this._skeletonCache[t];

          if (e && e.skeleton) {
            var n = e.animationsCache;

            for (var a in n) {
              n[a].invalidAllFrame();
            }
          }
        }, e.initAnimationCache = function (t, e) {
          if (!e) return null;
          var n = this._skeletonCache[t],
              a = n && n.skeleton;
          if (!a) return null;
          if (!a.data.findAnimation(e)) return null;
          var r = n.animationsCache,
              i = r[e];

          if (!i) {
            var s = t + "#" + e;
            (i = this._animationPool[s]) ? delete this._animationPool[s] : (i = new bt())._privateMode = this._privateMode, i.init(n, e), r[e] = i;
          }

          return i;
        }, e.updateAnimationCache = function (t, e) {
          if (e) {
            var n = this.initAnimationCache(t, e);
            if (!n) return null;
            n.updateAllFrame();
          } else {
            var a = this._skeletonCache[t];
            if (!a || !a.skeleton) return;
            var r = a.animationsCache;

            for (var i in r) {
              r[i].updateAllFrame();
            }
          }
        }, t;
      }();

      At.FrameTime = st, At.sharedCache = new At();

      var Ct,
          St,
          kt,
          It,
          Rt,
          Pt,
          Dt,
          Vt,
          Nt,
          Ft,
          Ot,
          Lt = new e(),
          Ut = new n(),
          Bt = function () {
        function t() {
          this._inited = !1, this._skeleton = null, this._skeletonNode = null, this._skeletonComp = null, this._inited = !1, this._skeleton = null, this._skeletonNode = null, this._skeletonComp = null;
        }

        var e = t.prototype;
        return e.init = function (t) {
          this._inited = !0, this._skeleton = t._skeleton, this._skeletonNode = t.node, this._skeletonComp = t;
        }, e.reset = function () {
          this._inited = !1, this._skeleton = null, this._skeletonNode = null, this._skeletonComp = null;
        }, e._syncAttachedNode = function () {
          if (this._inited) {
            var t = this._skeletonComp.socketNodes;

            if (0 !== t.size) {
              var e;
              if (e = this._skeletonComp.isAnimationCached() ? this._skeletonComp._curFrame && this._skeletonComp._curFrame.boneInfos : this._skeleton.bones) for (var n, r = function r(t, e) {
                Ut.set(t.scale);
                var n = Lt;
                n.m00 = e.a, n.m01 = e.c, n.m04 = e.b, n.m05 = e.d, n.m12 = e.worldX, n.m13 = e.worldY, t.matrix = Lt, t.scale = Ut;
              }, i = a(t.keys()); !(n = i()).done;) {
                var s = n.value,
                    o = t.get(s);

                if (o && o.isValid) {
                  var l = e[s];
                  l ? r(o, l) : (o.removeFromParent(), o.destroy(), t.delete(s));
                } else t.delete(s);
              }
            }
          }
        }, t;
      }(),
          Yt = function (t) {
        function e(e) {
          var n;
          return (n = t.call(this, e) || this).name = "sp.SkeletonTexture", n._texture = null, n._material = null, n;
        }

        r(e, t);
        var n = e.prototype;
        return n.setRealTexture = function (t) {
          this._texture = t;
        }, n.getRealTexture = function () {
          return this._texture;
        }, n.setFilters = function (t, e) {
          this._texture && this.getRealTexture().setFilters(Xt(t), Xt(e));
        }, n.setWraps = function (t, e) {
          this._texture && this.getRealTexture().setWrapMode(Wt(t), Wt(e));
        }, n.dispose = function () {}, e;
      }(rt.Texture);

      function Xt(t) {
        switch (t) {
          case rt.TextureFilter.Nearest:
          case rt.TextureFilter.MipMapNearestNearest:
          case rt.TextureFilter.MipMapLinearNearest:
            return i.NEAREST;

          case rt.TextureFilter.MipMap:
          case rt.TextureFilter.MipMapNearestLinear:
          case rt.TextureFilter.MipMapLinearLinear:
          case rt.TextureFilter.Linear:
          default:
            return i.LINEAR;
        }
      }

      function Wt(t) {
        switch (t) {
          case rt.TextureWrap.MirroredRepeat:
            return s.MIRRORED_REPEAT;

          case rt.TextureWrap.ClampToEdge:
            return s.CLAMP_TO_EDGE;

          case rt.TextureWrap.Repeat:
          default:
            return s.REPEAT;
        }
      }

      var qt = (Ct = o("sp.SkeletonData"), St = l([h]), kt = l([u]), Ct((Ot = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, v(e, "_skeletonJson", Pt, y(e)), v(e, "textures", Dt, y(e)), v(e, "textureNames", Vt, y(e)), v(e, "scale", Nt, y(e)), v(e, "_atlasText", Ft, y(e)), e._buffer = void 0, e._skeletonCache = null, e._atlasCache = null, e._skinsEnum = null, e._animsEnum = null, e.reset(), e;
        }

        r(e, t);
        var n = e.prototype;
        return n.createNode = function (t) {
          var e = new c(this.name);
          return e.addComponent("cc.Skeleton").skeletonData = this, t(null, e);
        }, n.reset = function () {
          this._skeletonCache = null, this._atlasCache = null;
        }, n.resetEnums = function () {}, n.getRuntimeData = function (t) {
          if (this._skeletonCache) return this._skeletonCache;
          if (!(this.textures && this.textures.length > 0) && this.textureNames && this.textureNames.length > 0) return t || console.error(this.name + " no textures found!"), null;

          var e = this._getAtlas(t);

          if (!e) return null;
          var n = new rt.AtlasAttachmentLoader(e),
              a = null,
              r = null;
          return this.skeletonJson ? (r = new rt.SkeletonJson(n), a = this.skeletonJson) : (r = new rt.SkeletonBinary(n), a = new Uint8Array(this._nativeAsset)), r.scale = this.scale, this._skeletonCache = r.readSkeletonData(a), e.dispose(), this._skeletonCache;
        }, n.getSkinsEnum = function () {
          if (this._skinsEnum) return this._skinsEnum;
          var t = this.getRuntimeData(!0);

          if (t) {
            for (var e = t.skins, n = {}, a = 0; a < e.length; a++) {
              n[e[a].name] = a;
            }

            return this._skinsEnum = d(n);
          }

          return null;
        }, n.getAnimsEnum = function () {
          if (this._animsEnum && Object.keys(this._animsEnum).length > 1) return this._animsEnum;
          var t = this.getRuntimeData(!0);

          if (t) {
            for (var e = {
              "<None>": 0
            }, n = t.animations, a = 0; a < n.length; a++) {
              e[n[a].name] = a + 1;
            }

            return this._animsEnum = d(e);
          }

          return null;
        }, n.destroy = function () {
          return At.sharedCache.removeSkeleton(this._uuid), t.prototype.destroy.call(this);
        }, n._getTexture = function (t) {
          for (var e = this.textureNames, n = 0; n < e.length; n++) {
            if (e[n] === t) {
              var a = this.textures[n],
                  r = new Yt({
                width: a.width,
                height: a.height
              });
              return r.setRealTexture(a), r;
            }
          }

          return console.error(this.name + " no textures found!"), null;
        }, n._getAtlas = function (t) {
          return this._atlasCache ? this._atlasCache : this.atlasText ? this._atlasCache = new rt.TextureAtlas(this.atlasText, this._getTexture.bind(this)) : (t || console.error(this.name + " no atlas found!"), null);
        }, f(e, [{
          key: "skeletonJsonStr",
          get: function get() {
            return this._skeletonJson ? JSON.stringify(this._skeletonJson) : "";
          }
        }, {
          key: "skeletonJson",
          get: function get() {
            return this._skeletonJson;
          },
          set: function set(t) {
            this.reset(), this._skeletonJson = "string" == typeof t ? JSON.parse(t) : t, !this._uuid && t.skeleton && (this._uuid = t.skeleton.hash);
          }
        }, {
          key: "atlasText",
          get: function get() {
            return this._atlasText;
          },
          set: function set(t) {
            this._atlasText = t, this.reset();
          }
        }, {
          key: "_nativeAsset",
          get: function get() {
            return this._buffer;
          },
          set: function set(t) {
            this._buffer = t, this.reset();
          }
        }]), e;
      }(p), Pt = m((Rt = Ot).prototype, "_skeletonJson", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Dt = m(Rt.prototype, "textures", [x, St], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Vt = m(Rt.prototype, "textureNames", [x, kt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Nt = m(Rt.prototype, "scale", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Ft = m(Rt.prototype, "_atlasText", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), It = Rt)) || It);
      g.internal.SpineSkeletonData = qt;

      var Ht,
          jt,
          zt,
          Gt,
          Zt,
          Jt,
          Qt,
          Kt,
          $t,
          te,
          ee,
          ne,
          ae,
          re,
          ie,
          se,
          oe,
          le,
          he,
          ue,
          ce,
          de,
          fe,
          pe,
          me,
          ge,
          ve,
          ye,
          xe,
          we,
          Ee,
          Me,
          _e,
          Te,
          be,
          Ae,
          Ce,
          Se,
          ke,
          Ie,
          Re,
          Pe,
          De,
          Ve,
          Ne,
          Fe,
          Oe,
          Le,
          Ue,
          Be,
          Ye,
          Xe,
          We,
          qe,
          He,
          je,
          ze,
          Ge = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._skeletons = new Set(), e;
        }

        r(e, t), e.getInstance = function () {
          return e._instance || (e._instance = new e(), B.registerSystem(e.ID, e._instance, Y.Priority.HIGH)), e._instance;
        };
        var n = e.prototype;
        return n.add = function (t) {
          t && (this._skeletons.has(t) || this._skeletons.add(t));
        }, n.remove = function (t) {
          t && this._skeletons.has(t) && this._skeletons.delete(t);
        }, n.postUpdate = function (t) {
          this._skeletons && this._skeletons.forEach(function (e) {
            e.updateAnimation(t);
          });
        }, e;
      }(Y);

      function Ze(t, e, n) {
        P.Attr.setClassAttr(t, e, "type", "Enum"), P.Attr.setClassAttr(t, e, "enumList", d.getList(n));
      }

      Ge.ID = "SKELETON", Ge._instance = void 0, function (t) {
        t[t.default = 0] = "default";
      }(qe || (qe = {})), w(qe), function (t) {
        t[t["<None>"] = 0] = "<None>";
      }(He || (He = {})), w(He), function (t) {
        t[t.REALTIME = 0] = "REALTIME", t[t.SHARED_CACHE = 1] = "SHARED_CACHE", t[t.PRIVATE_CACHE = 2] = "PRIVATE_CACHE";
      }(je || (je = {})), w(je), function (t) {
        t[t.COLORED_TEXTURED = 0] = "COLORED_TEXTURED", t[t.TWO_COLORED = 1] = "TWO_COLORED";
      }(ze || (ze = {}));
      var Je = (Ht = o("sp.Skeleton.SpineSocket"), jt = l(c), Ht((Zt = m((Gt = function Gt(t, e) {
        void 0 === t && (t = ""), void 0 === e && (e = null), v(this, "path", Zt, this), v(this, "target", Jt, this), this.path = t, this.target = e;
      }).prototype, "path", [x, R], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Jt = m(Gt.prototype, "target", [jt, R, x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), zt = Gt)) || zt);
      E.setClassAlias(Je, "sp.Skeleton.SpineSocket");
      var Qe = (Qt = o("sp.Skeleton"), Kt = D(), $t = V(), te = l(M), ee = N(), ne = F(), ae = L(), re = l(qt), ie = F(), se = l(qe), oe = O(), le = F(), he = l(He), ue = O(), ce = F(), de = O(), fe = l(je), pe = O(), me = O(), ge = O(), ve = O(), ye = O(), xe = O(), we = O(), Ee = l([Je]), Me = O(), _e = L(), Te = L(), Qt(be = Kt(be = $t(be = _((We = Xe = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, v(e, "paused", Ce, y(e)), v(e, "loop", Se, y(e)), v(e, "_premultipliedAlpha", ke, y(e)), v(e, "_timeScale", Ie, y(e)), e.enableBatch = !1, e._frameCache = null, e._curFrame = null, e._effectDelegate = null, e._skeleton = void 0, e._clipper = void 0, e._debugRenderer = void 0, e._startSlotIndex = void 0, e._endSlotIndex = void 0, e._startEntry = void 0, e._endEntry = void 0, e.attachUtil = void 0, e._materialCache = {}, e._enumSkins = d({}), e._enumAnimations = d({}), e._accTime = 0, e._playCount = 0, e._skeletonCache = null, e._animationName = "", e._animationQueue = [], e._headAniInfo = null, e._playTimes = 0, e._isAniComplete = !0, v(e, "_useTint", Re, y(e)), v(e, "_preCacheMode", Pe, y(e)), v(e, "_cacheMode", De, y(e)), v(e, "_defaultCacheMode", Ve, y(e)), v(e, "_debugBones", Ne, y(e)), v(e, "_debugSlots", Fe, y(e)), v(e, "_skeletonData", Oe, y(e)), v(e, "defaultSkin", Le, y(e)), v(e, "defaultAnimation", Ue, y(e)), v(e, "_sockets", Be, y(e)), e._meshRenderDataArray = [], v(e, "_debugMesh", Ye, y(e)), e._rootBone = void 0, e._state = void 0, e._listener = void 0, e._socketNodes = new Map(), e._cachedSockets = new Map(), e._meshRenderDataArrayIdx = 0, e._effectDelegate = null, e._skeleton = null, e._rootBone = null, e._listener = null, e._debugRenderer = null, e._startSlotIndex = -1, e._endSlotIndex = -1, e._startEntry = {
            animation: {
              name: ""
            },
            trackIndex: 0
          }, e._endEntry = {
            animation: {
              name: ""
            },
            trackIndex: 0
          }, e.attachUtil = new Bt(), Ze(y(e), "_defaultSkinIndex", e._enumSkins), Ze(y(e), "_animationIndex", e._enumAnimations), e;
        }

        r(e, t);
        var n = e.prototype;
        return n.disableRender = function () {
          this.destroyRenderData();
        }, n.setSkeletonData = function (t) {
          var e = this.node._uiProps.uiTransformComp;

          if (null != t.width && null != t.height && e.setContentSize(t.width, t.height), this._cacheMode === je.SHARED_CACHE ? this._skeletonCache = At.sharedCache : this._cacheMode === je.PRIVATE_CACHE && (this._skeletonCache = new At(), this._skeletonCache.enablePrivateMode()), this.isAnimationCached()) {
            (this.debugBones || this.debugSlots) && T("Debug bones or slots is invalid in cached mode");

            var n = this._skeletonCache.getSkeletonCache(this.skeletonData._uuid, t);

            this._skeleton = n.skeleton, this._clipper = n.clipper, this._rootBone = this._skeleton.getRootBone();
          } else this._skeleton = new rt.Skeleton(t), this._clipper = new rt.SkeletonClipping(), this._rootBone = this._skeleton.getRootBone();

          this.markForUpdateRenderData();
        }, n.setSlotsRange = function (t, e) {
          this.isAnimationCached() ? T("Slots visible range can not be modified in cached mode.") : (this._startSlotIndex = t, this._endSlotIndex = e);
        }, n.setAnimationStateData = function (t) {
          if (this.isAnimationCached()) T("'setAnimationStateData' interface can not be invoked in cached mode.");else {
            var e = new rt.AnimationState(t);
            this._listener && (this._state && this._state.removeListener(this._listener), e.addListener(this._listener)), this._state = e;
          }
        }, n.__preload = function () {
          t.prototype.__preload.call(this);

          for (var e = this.node.children, n = 0, a = e.length; n < a; n++) {
            var r = e[n];
            r && "DEBUG_DRAW_NODE" === r.name && r.destroy();
          }

          this._updateSkeletonData(), this._updateDebugDraw(), this._updateUseTint(), this._indexBoneSockets(), this._updateSocketBindings();
        }, n.setAnimationCacheMode = function (t) {
          this._preCacheMode !== t && (this._cacheMode = t, this._updateSkeletonData(), this._updateUseTint(), this._updateSocketBindings(), this.markForUpdateRenderData());
        }, n.isAnimationCached = function () {
          return this._cacheMode !== je.REALTIME;
        }, n.updateAnimation = function (t) {
          if (!this.paused) if (t *= 1 * this._timeScale, this.isAnimationCached()) {
            if (this._isAniComplete) {
              if (0 === this._animationQueue.length && !this._headAniInfo) {
                var e = this._frameCache;

                if (e && e.isInvalid()) {
                  e.updateToFrame();
                  var n = e.frames;
                  this._curFrame = n[n.length - 1];
                }

                return;
              }

              if (this._headAniInfo || (this._headAniInfo = this._animationQueue.shift()), this._accTime += t, this._accTime > this._headAniInfo.delay) {
                var a = this._headAniInfo;
                this._headAniInfo = null, this.setAnimation(0, a.animationName, a.loop);
              }

              return;
            }

            this._updateCache(t);
          } else this._updateRealtime(t);
        }, n.setVertexEffectDelegate = function (t) {
          this._effectDelegate = t;
        }, n.setToSetupPose = function () {
          this._skeleton && this._skeleton.setToSetupPose();
        }, n.setBonesToSetupPose = function () {
          this._skeleton && this._skeleton.setBonesToSetupPose();
        }, n.setSlotsToSetupPose = function () {
          this._skeleton && this._skeleton.setSlotsToSetupPose();
        }, n.updateAnimationCache = function (t) {
          if (this.isAnimationCached()) {
            var e = this._skeletonData._uuid;
            this._skeletonCache && this._skeletonCache.updateAnimationCache(e, t);
          }
        }, n.invalidAnimationCache = function () {
          this.isAnimationCached() && this._skeletonCache && this._skeletonCache.invalidAnimationCache(this._skeletonData._uuid);
        }, n.findBone = function (t) {
          return this._skeleton ? this._skeleton.findBone(t) : null;
        }, n.findSlot = function (t) {
          return this._skeleton ? this._skeleton.findSlot(t) : null;
        }, n.setSkin = function (t) {
          this._skeleton && (this._skeleton.setSkinByName(t), this._skeleton.setSlotsToSetupPose()), this.invalidAnimationCache();
        }, n.getAttachment = function (t, e) {
          return this._skeleton ? this._skeleton.getAttachmentByName(t, e) : null;
        }, n.setAttachment = function (t, e) {
          this._skeleton && this._skeleton.setAttachment(t, e), this.invalidAnimationCache();
        }, n.getTextureAtlas = function (t) {
          return t.region;
        }, n.setMix = function (t, e, n) {
          this._state && this._state.data.setMix(t, e, n);
        }, n.setAnimation = function (t, e, n) {
          if (this._playTimes = n ? 0 : 1, this._animationName = e, this.isAnimationCached()) {
            if (0 !== t && T("Track index can not greater than 0 in cached mode."), !this._skeletonCache) return null;

            var a = this._skeletonCache.getAnimationCache(this._skeletonData._uuid, e);

            a || (a = this._skeletonCache.initAnimationCache(this._skeletonData._uuid, e)), a && (this._isAniComplete = !1, this._accTime = 0, this._playCount = 0, this._frameCache = a, this._socketNodes.size > 0 && this._frameCache.enableCacheAttachedInfo(), this._frameCache.updateToFrame(0), this._curFrame = this._frameCache.frames[0]);
          } else if (this._skeleton) {
            var r = this._skeleton.data.findAnimation(e);

            if (!r) return b(7509, e), null;

            var i = this._state.setAnimationWith(t, r, n);

            return this._state.apply(this._skeleton), i;
          }

          return null;
        }, n.addAnimation = function (t, e, n, a) {
          if (a = a || 0, this.isAnimationCached()) 0 !== t && T("Track index can not greater than 0 in cached mode."), this._animationQueue.push({
            animationName: e,
            loop: n,
            delay: a
          });else if (this._skeleton) {
            var r,
                i = this._skeleton.data.findAnimation(e);

            return i ? null === (r = this._state) || void 0 === r ? void 0 : r.addAnimationWith(t, i, n, a) : (b(7510, e), null);
          }
          return null;
        }, n.findAnimation = function (t) {
          return this._skeleton ? this._skeleton.data.findAnimation(t) : null;
        }, n.getCurrent = function (t) {
          if (this.isAnimationCached()) T("'getCurrent' interface can not be invoked in cached mode.");else if (this._state) return this._state.getCurrent(t);
          return null;
        }, n.clearTracks = function () {
          this.isAnimationCached() ? T("'clearTracks' interface can not be invoked in cached mode.") : this._state && (this._state.clearTracks(), this.setToSetupPose());
        }, n.clearTrack = function (t) {
          this.isAnimationCached() ? T("'clearTrack' interface can not be invoked in cached mode.") : this._state && this._state.clearTrack(t);
        }, n.setStartListener = function (t) {
          this._ensureListener(), this._listener.start = t;
        }, n.setInterruptListener = function (t) {
          this._ensureListener(), this._listener.interrupt = t;
        }, n.setEndListener = function (t) {
          this._ensureListener(), this._listener.end = t;
        }, n.setDisposeListener = function (t) {
          this._ensureListener(), this._listener.dispose = t;
        }, n.setCompleteListener = function (t) {
          this._ensureListener(), this._listener.complete = t;
        }, n.setEventListener = function (t) {
          this._ensureListener(), this._listener.event = t;
        }, n.setTrackStartListener = function (t, e) {
          it.getListeners(t).start = e;
        }, n.setTrackInterruptListener = function (t, e) {
          it.getListeners(t).interrupt = e;
        }, n.setTrackEndListener = function (t, e) {
          it.getListeners(t).end = e;
        }, n.setTrackDisposeListener = function (t, e) {
          it.getListeners(t).dispose = e;
        }, n.setTrackCompleteListener = function (t, e) {
          it.getListeners(t).complete = function (t) {
            var n = Math.floor(t.trackTime / t.animationEnd);
            e(t, n);
          };
        }, n.setTrackEventListener = function (t, e) {
          it.getListeners(t).event = e;
        }, n.getState = function () {
          return this._state;
        }, n.onEnable = function () {
          t.prototype.onEnable.call(this), this._flushAssembler(), Ge.getInstance().add(this);
        }, n.onDisable = function () {
          t.prototype.onDisable.call(this), Ge.getInstance().remove(this);
        }, n.onDestroy = function () {
          this._cleanMaterialCache(), this.destroyRenderData(), t.prototype.onDestroy.call(this);
        }, n.requestMeshRenderData = function (t) {
          if (this._meshRenderDataArray.length > 0 && 0 === this._meshRenderDataArray[this._meshRenderDataArray.length - 1].renderData.vertexCount) return this._meshRenderDataArray[this._meshRenderDataArray.length - 1];
          var e = new W(t),
              n = {
            renderData: e
          };
          return e.material = null, this._meshRenderDataArray.push(n), n;
        }, n.destroyRenderData = function () {
          this._meshRenderDataArray.length > 0 && (this._meshRenderDataArray.forEach(function (t) {
            t.renderData.reset();
          }), this._meshRenderDataArray.length = 0);
        }, n.getMaterialForBlendAndTint = function (t, e, n) {
          var a = n + "/" + t + "/" + e,
              r = this._materialCache[a];
          if (r) return r;
          var i = this.customMaterial;
          null === i && (i = A.get("default-spine-material"));
          var s = !1;

          switch (n) {
            case ze.TWO_COLORED:
              s = !0;
              break;

            case ze.COLORED_TEXTURED:
          }

          return r = new X({
            parent: i,
            subModelIdx: 0,
            owner: this
          }), this._materialCache[a] = r, r.overridePipelineStates({
            blendState: {
              blendColor: C.WHITE,
              targets: [{
                blendEq: S.ADD,
                blendAlphaEq: S.ADD,
                blendSrc: t,
                blendDst: e,
                blendSrcAlpha: t,
                blendDstAlpha: e
              }]
            }
          }), r.recompileShaders({
            TWO_COLORED: s
          }), r;
        }, n.updateMaterial = function () {
          if (this._customMaterial) return this.setMaterial(this._customMaterial, 0), void (this._blendHash = -1);

          var t = this._updateBuiltinMaterial();

          this.setMaterial(t, 0), this._updateBlendFunc(), this._blendHash = -1;
        }, n.querySockets = function () {
          return this._skeleton ? (0 === this._cachedSockets.size && this._indexBoneSockets(), this._cachedSockets.size > 0 ? Array.from(this._cachedSockets.keys()).sort() : []) : [];
        }, n._render = function (t) {
          if (this._meshRenderDataArray) for (var e = 0; e < this._meshRenderDataArray.length; e++) {
            var n = this.material;
            this._meshRenderDataArrayIdx = e;
            var a = this._meshRenderDataArray[e];
            a.renderData.material && (this.material = a.renderData.material), a.texture && t.commitComp(this, a.texture, this._assembler, null), this.material = n;
          }
        }, n.updateWorldTransform = function () {
          this.isAnimationCached() && this._skeleton && this._skeleton.updateWorldTransform();
        }, n._emitCacheCompleteEvent = function () {
          this._listener && (this._endEntry.animation.name = this._animationName, this._listener.complete && this._listener.complete(this._endEntry), this._listener.end && this._listener.end(this._endEntry));
        }, n._updateCache = function (t) {
          var e = this._frameCache;

          if (e.isInited()) {
            var n = e.frames,
                a = At.FrameTime;
            0 === this._accTime && 0 === this._playCount && (this._startEntry.animation.name = this._animationName, this._listener && this._listener.start && this._listener.start(this._startEntry)), this._accTime += t;
            var r = Math.floor(this._accTime / a);

            if (e.isCompleted || e.updateToFrame(r), e.isCompleted && r >= n.length) {
              if (this._playCount++, this._playTimes > 0 && this._playCount >= this._playTimes) return this._curFrame = n[n.length - 1], this._accTime = 0, this._playCount = 0, this._isAniComplete = !0, this._emitCacheCompleteEvent(), void this.markForUpdateRenderData();
              this._accTime = 0, r = 0, this._emitCacheCompleteEvent();
            }

            this._curFrame = n[r], this.markForUpdateRenderData();
          }
        }, n._updateRealtime = function (t) {
          var e = this._skeleton,
              n = this._state;
          e && (e.update(t), n && (n.update(t), n.apply(e)), this.markForUpdateRenderData());
        }, n._indexBoneSockets = function () {
          if (this._skeleton) {
            this._cachedSockets.clear();

            for (var t = this._skeleton.bones, e = function e(n) {
              return null == n.parent ? n.data.name || "<Unamed>" : e(t[n.parent.data.index]) + "/" + n.data.name;
            }, n = 0, a = t.length; n < a; n++) {
              var r = t[n].data,
                  i = e(t[n]);

              this._cachedSockets.set(i, r.index);
            }
          }
        }, n._updateUseTint = function () {
          this._cleanMaterialCache(), this.destroyRenderData();
        }, n._updateBatch = function () {
          this.markForUpdateRenderData();
        }, n._validateRender = function () {
          this.skeletonData || this.disableRender();
        }, n._updateAnimEnum = function () {
          var t;
          t = this.skeletonData ? this.skeletonData.getAnimsEnum() : He, this._enumAnimations = d({}), Object.assign(this._enumAnimations, t), d.update(this._enumAnimations), Ze(this, "_animationIndex", this._enumAnimations);
        }, n._updateSkinEnum = function () {
          var t;
          t = this.skeletonData ? this.skeletonData.getSkinsEnum() : qe, this._enumSkins = d({}), Object.assign(this._enumSkins, t), d.update(this._enumSkins), Ze(this, "_defaultSkinIndex", this._enumSkins);
        }, n._ensureListener = function () {
          this._listener || (this._listener = new it(), this._state && this._state.addListener(this._listener));
        }, n._updateSkeletonData = function () {
          if (this.skeletonData) {
            var t = this.skeletonData.getRuntimeData();

            if (t) {
              try {
                this.setSkeletonData(t), this.isAnimationCached() || this.setAnimationStateData(new rt.AnimationStateData(this._skeleton.data)), this.defaultSkin && this.setSkin(this.defaultSkin);
              } catch (t) {
                T(t);
              }

              this._indexBoneSockets(), this.attachUtil.init(this), this._preCacheMode = this._cacheMode, this.animation = this.defaultAnimation;
            } else this.disableRender();
          } else this.disableRender();
        }, n._refreshInspector = function () {
          this._updateAnimEnum(), this._updateSkinEnum();
        }, n._updateDebugDraw = function () {
          if (this.debugBones || this.debugSlots || this.debugMesh) {
            if (!this._debugRenderer) {
              var t = new c("DEBUG_DRAW_NODE");
              t.hideFlags |= k.Flags.DontSave | k.Flags.HideInHierarchy;
              var e = t.addComponent(H);
              e.lineWidth = 1, e.strokeColor = new C(255, 0, 0, 255), this._debugRenderer = e, t.parent = this.node;
            }

            this.isAnimationCached() && T("Debug bones or slots is invalid in cached mode");
          } else this._debugRenderer && (this._debugRenderer.node.destroy(), this._debugRenderer = null);
        }, n._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this._assembler = t), 0 === this._meshRenderDataArray.length && this._assembler && this._assembler.createData && (this._assembler.createData(this), this.markForUpdateRenderData(), this._colorDirty = !0, this._updateColor());
        }, n._updateSocketBindings = function () {
          if (this._skeleton) {
            this._socketNodes.clear();

            for (var t = 0, e = this._sockets.length; t < e; t++) {
              var n = this._sockets[t];

              if (n.path && n.target) {
                var a = this._cachedSockets.get(n.path);

                if (!a) {
                  console.error("Skeleton data does not contain path " + n.path);
                  continue;
                }

                this._socketNodes.set(a, n.target);
              }
            }
          }
        }, n._verifySockets = function (t) {
          for (var e = 0, n = t.length; e < n; e++) {
            var a = t[e].target;
            !a || a.parent && a.parent === this.node || console.error("Target node " + a.name + " is expected to be a direct child of " + this.node.name);
          }

          var r = new Map();
          t.forEach(function (t) {
            t.target && (r.get(t.target) ? console.error("Target node " + t.target.name + " has existed.") : r.set(t.target, !0));
          });
        }, n._cleanMaterialCache = function () {
          for (var t in this._materialCache) {
            this._materialCache[t].destroy();
          }

          this._materialCache = {};
        }, f(e, [{
          key: "meshRenderDataArray",
          get: function get() {
            return this._meshRenderDataArray;
          }
        }, {
          key: "customMaterial",
          get: function get() {
            return this._customMaterial;
          },
          set: function set(t) {
            this._customMaterial = t, this._cleanMaterialCache();
          }
        }, {
          key: "skeletonData",
          get: function get() {
            return this._skeletonData;
          },
          set: function set(t) {
            t && t.resetEnums(), this._skeletonData !== t && (this._skeletonData = t, this.defaultSkin = "", this.defaultAnimation = "", this._updateSkeletonData());
          }
        }, {
          key: "animation",
          get: function get() {
            if (this.isAnimationCached()) return this._animationName;
            var t = this.getCurrent(0);
            return t && t.animation.name || "";
          },
          set: function set(t) {
            t ? (this.setAnimation(0, t, this.loop), this.destroyRenderData(), this.markForUpdateRenderData()) : this.isAnimationCached() || (this.clearTrack(0), this.setToSetupPose());
          }
        }, {
          key: "_defaultSkinIndex",
          get: function get() {
            if (this.skeletonData) {
              var t = this.skeletonData.getSkinsEnum();
              if (t) if ("" === this.defaultSkin) {
                if (t.hasOwnProperty(0)) return this._defaultSkinIndex = 0, 0;
              } else {
                var e = t[this.defaultSkin];
                if (void 0 !== e) return e;
              }
            }

            return 0;
          },
          set: function set(t) {
            var e;

            if (this.skeletonData && (e = this.skeletonData.getSkinsEnum()), e) {
              var n = e[t];
              void 0 !== n ? (this.defaultSkin = n, this.setSkin(this.defaultSkin)) : console.error(this.name + " skin enums are invalid");
            } else console.error(this.name + " skin enums are invalid");
          }
        }, {
          key: "_animationIndex",
          get: function get() {
            var t = this.animation;
            if (this.skeletonData) if (t) {
              var e = this.skeletonData.getAnimsEnum();

              if (e) {
                var n = e[t];
                if (void 0 !== n) return n;
              }
            } else this._refreshInspector();
            return 0;
          },
          set: function set(t) {
            var e;

            if (this.skeletonData && (e = this.skeletonData.getAnimsEnum()), e) {
              var n = e[t];
              void 0 !== n ? (this.animation = n, this.animation = n) : console.error(this.name + " animation enums are invalid");
            } else console.error(this.name + " animation enums are invalid");
          }
        }, {
          key: "defaultCacheMode",
          get: function get() {
            return this._defaultCacheMode;
          },
          set: function set(t) {
            this._defaultCacheMode = t, this.setAnimationCacheMode(this._defaultCacheMode);
          }
        }, {
          key: "premultipliedAlpha",
          get: function get() {
            return this._premultipliedAlpha;
          },
          set: function set(t) {
            t !== this._premultipliedAlpha && (this._premultipliedAlpha = t, this.markForUpdateRenderData());
          }
        }, {
          key: "timeScale",
          get: function get() {
            return this._timeScale;
          },
          set: function set(t) {
            t !== this._timeScale && (this._timeScale = t);
          }
        }, {
          key: "debugSlots",
          get: function get() {
            return this._debugSlots;
          },
          set: function set(t) {
            t !== this._debugSlots && (this._debugSlots = t, this._updateDebugDraw(), this.markForUpdateRenderData());
          }
        }, {
          key: "debugBones",
          get: function get() {
            return this._debugBones;
          },
          set: function set(t) {
            t !== this._debugBones && (this._debugBones = t, this._updateDebugDraw(), this.markForUpdateRenderData());
          }
        }, {
          key: "debugMesh",
          get: function get() {
            return this._debugMesh;
          },
          set: function set(t) {
            t !== this._debugMesh && (this._debugMesh = t, this._updateDebugDraw(), this.markForUpdateRenderData());
          }
        }, {
          key: "useTint",
          get: function get() {
            return this._useTint;
          },
          set: function set(t) {
            t !== this._useTint && (this._useTint = t, this._updateUseTint(), this.markForUpdateRenderData());
          }
        }, {
          key: "sockets",
          get: function get() {
            return this._sockets;
          },
          set: function set(t) {
            this._sockets = t, this._updateSocketBindings(), this.attachUtil._syncAttachedNode();
          }
        }, {
          key: "socketNodes",
          get: function get() {
            return this._socketNodes;
          }
        }]), e;
      }(q), Xe.SpineSocket = Je, Xe.AnimationCacheMode = je, m((Ae = We).prototype, "customMaterial", [I, te, ee, ne], Object.getOwnPropertyDescriptor(Ae.prototype, "customMaterial"), Ae.prototype), Ce = m(Ae.prototype, "paused", [ae], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), m(Ae.prototype, "skeletonData", [R, re], Object.getOwnPropertyDescriptor(Ae.prototype, "skeletonData"), Ae.prototype), m(Ae.prototype, "_defaultSkinIndex", [ie, se, oe], Object.getOwnPropertyDescriptor(Ae.prototype, "_defaultSkinIndex"), Ae.prototype), m(Ae.prototype, "_animationIndex", [le, he, ue], Object.getOwnPropertyDescriptor(Ae.prototype, "_animationIndex"), Ae.prototype), m(Ae.prototype, "defaultCacheMode", [ce, de, R, fe], Object.getOwnPropertyDescriptor(Ae.prototype, "defaultCacheMode"), Ae.prototype), Se = m(Ae.prototype, "loop", [x, pe], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), ke = m(Ae.prototype, "_premultipliedAlpha", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), m(Ae.prototype, "premultipliedAlpha", [R, me], Object.getOwnPropertyDescriptor(Ae.prototype, "premultipliedAlpha"), Ae.prototype), Ie = m(Ae.prototype, "_timeScale", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), m(Ae.prototype, "timeScale", [ge, R], Object.getOwnPropertyDescriptor(Ae.prototype, "timeScale"), Ae.prototype), m(Ae.prototype, "debugSlots", [R, ve], Object.getOwnPropertyDescriptor(Ae.prototype, "debugSlots"), Ae.prototype), m(Ae.prototype, "debugBones", [R, ye], Object.getOwnPropertyDescriptor(Ae.prototype, "debugBones"), Ae.prototype), m(Ae.prototype, "debugMesh", [R, xe], Object.getOwnPropertyDescriptor(Ae.prototype, "debugMesh"), Ae.prototype), m(Ae.prototype, "useTint", [R, we], Object.getOwnPropertyDescriptor(Ae.prototype, "useTint"), Ae.prototype), m(Ae.prototype, "sockets", [Ee, Me], Object.getOwnPropertyDescriptor(Ae.prototype, "sockets"), Ae.prototype), Re = m(Ae.prototype, "_useTint", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Pe = m(Ae.prototype, "_preCacheMode", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), De = m(Ae.prototype, "_cacheMode", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return je.REALTIME;
        }
      }), Ve = m(Ae.prototype, "_defaultCacheMode", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return je.REALTIME;
        }
      }), Ne = m(Ae.prototype, "_debugBones", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Fe = m(Ae.prototype, "_debugSlots", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Oe = m(Ae.prototype, "_skeletonData", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Le = m(Ae.prototype, "defaultSkin", [x, _e], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Ue = m(Ae.prototype, "defaultAnimation", [Te, x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Be = m(Ae.prototype, "_sockets", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ye = m(Ae.prototype, "_debugMesh", [x], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), be = Ae)) || be) || be) || be) || be);
      g.internal.SpineSkeleton = Qe;

      var Ke,
          $e,
          tn,
          en,
          nn,
          an,
          rn,
          sn,
          on,
          ln,
          hn,
          un,
          cn,
          dn,
          fn,
          pn,
          mn,
          gn,
          vn,
          yn,
          xn,
          wn,
          En,
          Mn,
          _n,
          Tn,
          bn,
          An,
          Cn,
          Sn,
          kn,
          In,
          Rn,
          Pn,
          Dn,
          Vn,
          Nn,
          Fn,
          On,
          Ln,
          Un,
          Bn,
          Yn = function () {
        function t() {
          this.name = "sp.VertexEffectDelegate", this._vertexEffect = null, this._interpolation = null, this._effectType = void 0, this._vertexEffect = null, this._interpolation = null, this._effectType = "none";
        }

        var e = t.prototype;
        return e.clear = function () {
          this._vertexEffect = null, this._interpolation = null, this._effectType = "none";
        }, e.initJitter = function (t, e) {
          return this._effectType = "jitter", this._vertexEffect = new rt.JitterEffect(t, e), this._vertexEffect;
        }, e.initSwirlWithPow = function (t, e) {
          return this._interpolation = new rt.Pow(e), this._vertexEffect = new rt.SwirlEffect(t, this._interpolation), this._vertexEffect;
        }, e.initSwirlWithPowOut = function (t, e) {
          return this._interpolation = new rt.PowOut(e), this._vertexEffect = new rt.SwirlEffect(t, this._interpolation), this._vertexEffect;
        }, e.getJitterVertexEffect = function () {
          return this._vertexEffect;
        }, e.getSwirlVertexEffect = function () {
          return this._vertexEffect;
        }, e.getVertexEffect = function () {
          return this._vertexEffect;
        }, e.getEffectType = function () {
          return this._effectType;
        }, t;
      }(),
          Xn = 0,
          Wn = [0, 1, 2, 2, 3, 0],
          qn = new C(0, 0, 255, 255),
          Hn = new C(255, 0, 0, 255),
          jn = new C(0, 255, 0, 255),
          zn = new C(255, 255, 0, 255),
          Gn = new rt.Color(1, 1, 1, 1),
          Zn = new rt.Color(1, 1, 1, 1),
          Jn = new rt.Vector2(),
          Qn = new rt.Vector2(),
          Kn = new Float32Array(4),
          $n = new Float32Array(4),
          ta = new n(),
          ea = 0,
          na = 0,
          aa = 0,
          ra = 0,
          ia = 0,
          sa = 0,
          oa = 0,
          la = null,
          ha = null,
          ua = null;

      function ca(t) {
        var e, n;

        switch (t) {
          case rt.BlendMode.Additive:
            e = Ke ? U.ONE : U.SRC_ALPHA, n = U.ONE;
            break;

          case rt.BlendMode.Multiply:
            e = U.DST_COLOR, n = U.ONE_MINUS_SRC_ALPHA;
            break;

          case rt.BlendMode.Screen:
            e = U.ONE, n = U.ONE_MINUS_SRC_COLOR;
            break;

          case rt.BlendMode.Normal:
          default:
            e = Ke ? U.ONE : U.SRC_ALPHA, n = U.ONE_MINUS_SRC_ALPHA;
        }

        return On.getMaterialForBlendAndTint(e, n, nn ? ze.TWO_COLORED : ze.COLORED_TEXTURED);
      }

      function da(t) {
        Pn = t.fa * un, An = on * ($e = Ke ? Pn / 255 : 1), Cn = ln * $e, Sn = hn * $e, kn = t.fr * An, In = t.fg * Cn, Rn = t.fb * Sn, Kn[0] = kn / 255, Kn[1] = In / 255, Kn[2] = Rn / 255, Kn[3] = Pn / 255, Dn = t.dr * An, Vn = t.dg * Cn, Nn = t.db * Sn, Fn = Ke ? 255 : 0, $n[0] = Dn / 255, $n[1] = Vn / 255, $n[2] = Nn / 255, $n[3] = Fn / 255;
      }

      var fa = new Float32Array(4);

      function pa(t) {
        return fa[0] = t.r / 255, fa[1] = t.g / 255, fa[2] = t.b / 255, fa[3] = t.a / 255, fa;
      }

      function ma(t) {
        return t ? 13 : 9;
      }

      var ga = {
        createData: function createData() {},
        updateRenderData: function updateRenderData(t) {
          On = t;
          var e = t._skeleton;
          !t.isAnimationCached() && e && e.updateWorldTransform(), e && function (t) {
            if (t._skeleton) {
              var e,
                  n = t.color;
              on = n.r / 255, ln = n.g / 255, hn = n.b / 255, un = n.a / 255, nn = t.useTint || t.isAnimationCached(), cn = ma(nn), Un = t.node, t.destroyRenderData(), Ln = t.requestMeshRenderData(cn), On = t, ha = null, vn = !0, Ke = t.premultipliedAlpha, $e = 1, Xn = 0, Bn = !1, la = t._effectDelegate && t._effectDelegate._vertexEffect, (4294967295 !== n._val || Ke) && (Bn = !0), nn && (Xn |= 1), On.enableBatch && (e = Un.worldMatrix, vn = !1, Xn |= 16), t.isAnimationCached() ? function (t) {
                var e = On._curFrame;

                if (e) {
                  var n,
                      a,
                      r = e.segments;

                  if (0 !== r.length) {
                    dn = 12;
                    var i = null,
                        s = e.vertices,
                        o = e.indices,
                        l = 0,
                        h = 0,
                        u = 0;
                    t && (wn = t.m00, _n = t.m01, En = t.m04, Tn = t.m05, Mn = t.m12, bn = t.m13);
                    var c = 16 & Xn,
                        d = c && 1 === wn && 0 === _n && 0 === En && 1 === Tn,
                        f = 0,
                        p = e.colors,
                        m = p[f++],
                        g = m.vfOffset;
                    da(m);

                    for (var v = 0, y = r.length; v < y; v++) {
                      var x = r[v];

                      if (i = ca(x.blendMode)) {
                        ha || (ha = i), ua || (ua = x.tex), Ln.renderData.material && (Ln.renderData.material = ha), (vn || i.hash !== ha.hash || x.tex && x.tex !== ua) && (vn = !1, Ln.texture || (Ln.texture = x.tex), Ln = On.requestMeshRenderData(ma(nn)), ha = i, ua = x.tex, Ln.texture = x.tex, Ln.renderData.material = ha), na = x.vertexCount, ia = x.indexCount, Ln.renderData.reserve(na, ia), sa = Ln.renderData.indicesCount, aa = Ln.renderData.vertexCount, oa = Ln.renderData.vDataOffset, n = Ln.renderData.vData, a = Ln.renderData.iData;

                        for (var w = sa, E = sa + ia; w < E; w++) {
                          a[w] = aa + o[h++];
                        }

                        u = x.vfCount;
                        var M = s.subarray(l, l + u);
                        l += u;
                        var _ = oa;
                        cn = ma(nn);

                        for (var T = 0; T < M.length;) {
                          n[_ + 0] = M[T + 0], n[_ + 1] = M[T + 1], n[_ + 3] = M[T + 3], n[_ + 4] = M[T + 4], n[_ + 5] = M[T + 5], n[_ + 6] = M[T + 6], n[_ + 7] = M[T + 7], n[_ + 8] = M[T + 8], nn && (n[_ + 9] = M[T + 9], n[_ + 10] = M[T + 10], n[_ + 11] = M[T + 11], n[_ + 12] = M[T + 12]), _ += cn, T += 13;
                        }

                        if (d) for (var b = oa, A = oa + u; b < A; b += cn) {
                          n[b] += Mn, n[b + 1] += bn;
                        } else if (c) for (var C = oa, S = oa + u; C < S; C += cn) {
                          yn = n[C], xn = n[C + 1], n[C] = yn * wn + xn * En + Mn, n[C + 1] = yn * _n + xn * Tn + bn;
                        }
                        if (Ln.renderData.advance(na, ia), Bn) for (var k = l - u, I = oa, R = oa + u; I < R; I += cn, k += 6) {
                          k >= g && (da(m = p[f++]), g = m.vfOffset), n.set(Kn, I + 5), n.set($n, I + 9);
                        }
                      }
                    }
                  }
                }
              }(e) : (la && la.begin(t._skeleton), function (t) {
                var e,
                    n,
                    a,
                    r,
                    i,
                    s,
                    o,
                    l,
                    h = On._skeleton,
                    u = h.color,
                    c = On._debugRenderer,
                    d = On._clipper,
                    f = null;
                tn = On._startSlotIndex, en = On._endSlotIndex, gn = !1, -1 === tn && (gn = !0), an = On.debugSlots, rn = On.debugBones, sn = On.debugMesh, c && (rn || an || sn) && (c.clear(), c.lineWidth = 5), dn = 12, ea = 0, aa = 0, ra = 0, ia = 0, sa = 0;

                for (var p = 0, m = h.drawOrder.length; p < m; p++) {
                  var g;
                  if (void 0 !== (l = h.drawOrder[p])) if (tn >= 0 && tn === l.data.index && (gn = !0), gn) {
                    if (en >= 0 && en === l.data.index && (gn = !1), ea = 0, ia = 0, a = l.getAttachment()) {
                      if (s = a instanceof rt.RegionAttachment, o = a instanceof rt.MeshAttachment, a instanceof rt.ClippingAttachment) d.clipStart(l, a);else if (s || o) {
                        var v = a.region.texture.getRealTexture();

                        if (f = ca(l.data.blendMode)) {
                          if (ha || (ha = f), (null === (g = Ln) || void 0 === g ? void 0 : g.renderData.material) || (Ln.renderData.material = ha), (vn || f.hash !== ha.hash || v && ua !== v) && (vn = !1, Ln = On.requestMeshRenderData(cn), ha = f, ua = v, Ln.texture = v, Ln.renderData.material = ha), s) {
                            if (i = Wn, ea = 4 * cn, ia = 6, Ln.renderData.reserve(4, 6), sa = Ln.renderData.indicesCount, aa = Ln.renderData.vertexCount, ra = Ln.renderData.vDataOffset, e = Ln.renderData.vData, n = Ln.renderData.iData, a.computeWorldVertices(l.bone, e, ra, cn), c && an) {
                              c.strokeColor = qn, c.moveTo(e[ra], e[ra + 1]);

                              for (var y = ra + cn, x = ra + ea; y < x; y += cn) {
                                c.lineTo(e[y], e[y + 1]);
                              }

                              c.close(), c.stroke();
                            }
                          } else if (o) {
                            var w = a;

                            if (i = w.triangles, ea = (w.worldVerticesLength >> 1) * cn, ia = i.length, Ln.renderData.reserve(w.worldVerticesLength >> 1, ia), sa = Ln.renderData.indicesCount, aa = Ln.renderData.vertexCount, ra = Ln.renderData.vDataOffset, e = Ln.renderData.vData, n = Ln.renderData.iData, w.computeWorldVertices(l, 0, w.worldVerticesLength, e, ra, cn), c && sn) {
                              c.strokeColor = zn;

                              for (var E = 0, M = i.length; E < M; E += 3) {
                                var _ = i[E] * cn + ra,
                                    T = i[E + 1] * cn + ra,
                                    b = i[E + 2] * cn + ra;

                                c.moveTo(e[_], e[_ + 1]), c.lineTo(e[T], e[T + 1]), c.lineTo(e[b], e[b + 1]), c.close(), c.stroke();
                              }
                            }
                          }

                          if (0 !== ea && 0 !== ia) {
                            var A = a;
                            n.set(i, sa), r = A.uvs;

                            for (var C = ra, S = ra + ea, k = 0; C < S; C += cn, k += 2) {
                              e[C + 3] = r[k], e[C + 4] = r[k + 1];
                            }

                            if (va(u, A.color, l.color, d, l), e = Ln.renderData.vData, n = Ln.renderData.iData, ia > 0) {
                              for (var I = sa, R = sa + ia; I < R; I++) {
                                n[I] += aa;
                              }

                              if (t) {
                                wn = t.m00, En = t.m04, Mn = t.m12, _n = t.m01, Tn = t.m05, bn = t.m13;

                                for (var P = ra, D = ra + ea; P < D; P += cn) {
                                  yn = e[P], xn = e[P + 1], e[P] = yn * wn + xn * En + Mn, e[P + 1] = yn * _n + xn * Tn + bn;
                                }
                              }

                              Ln.renderData.advance(ea / cn, ia);
                            }

                            d.clipEndWithSlot(l);
                          } else d.clipEndWithSlot(l);
                        } else d.clipEndWithSlot(l);
                      } else d.clipEndWithSlot(l);
                    } else d.clipEndWithSlot(l);
                  } else d.clipEndWithSlot(l);
                }

                if (d.clipEnd(), c && rn) {
                  var V;
                  c.strokeColor = Hn, c.fillColor = qn;

                  for (var N = 0, F = h.bones.length; N < F; N++) {
                    var O = (V = h.bones[N]).data.length * V.a + V.worldX,
                        L = V.data.length * V.c + V.worldY;
                    c.moveTo(V.worldX, V.worldY), c.lineTo(O, L), c.stroke(), c.circle(V.worldX, V.worldY, 1.5 * Math.PI), c.fill(), 0 === N && (c.fillColor = jn);
                  }
                }
              }(e), la && la.end()), t.attachUtil._syncAttachedNode(), Un = void 0, Ln = void 0, On = void 0, la = null;
            }
          }(t);
        },
        updateColor: function updateColor(t) {
          t && (On = t).markForUpdateRenderData();
        },
        fillBuffers: function fillBuffers(t, e) {
          if (t && t.meshRenderDataArray) {
            On = t;
            var n = t.meshRenderDataArray,
                a = t.node,
                r = n[t._meshRenderDataArrayIdx].renderData,
                i = e.acquireBufferBatch(9 === r.floatStride ? j : z),
                s = i.byteOffset >> 2,
                o = i.indicesOffset,
                l = i.vertexOffset;
            i.request(r.vertexCount, r.indicesCount) || (i = e.currBufferBatch, s = 0, o = 0, l = 0);
            var h = i.vData,
                u = i.iData,
                c = a.worldMatrix,
                d = r.vData,
                f = r.vertexStart,
                p = r.iData,
                m = r.floatStride;
            h.set(d.subarray(f, f + r.vertexCount * m), s);

            for (var g = 0; g < r.vertexCount; g++) {
              var v = s + g * m;
              ta.set(h[v], h[v + 1], h[v + 2]), ta.transformMat4(c), h[v] = ta.x, h[v + 1] = ta.y, h[v + 2] = ta.z;
            }

            for (var y = r.indicesStart, x = 0; x < r.indicesCount; x += 1) {
              u[x + o] = p[x + y] + l;
            }
          }
        }
      };

      function va(t, e, n, a, r) {
        var i = Ln.renderData.vData,
            s = Ln.renderData.iData;

        if (Gn.a = n.a * e.a * t.a * un * 255, $e = Ke ? Gn.a : 255, fn = on * e.r * t.r * $e, pn = ln * e.g * t.g * $e, mn = hn * e.b * t.b * $e, Gn.r = fn * n.r, Gn.g = pn * n.g, Gn.b = mn * n.b, null == r.darkColor ? Zn.set(0, 0, 0, 1) : (Zn.r = r.darkColor.r * fn, Zn.g = r.darkColor.g * pn, Zn.b = r.darkColor.b * mn), Zn.a = Ke ? 255 : 0, a.isClipping()) {
          dn = nn ? 12 : 8;
          var o = i.subarray(ra),
              l = i.subarray(ra + 3);
          a.clipTriangles(o, ea, s.subarray(sa), ia, l, Gn, Zn, nn, cn);
          var h = new Float32Array(a.clippedVertices),
              u = a.clippedTriangles;
          if (ia = u.length, ea = h.length / dn * cn, Ln.renderData.reserve(ea / cn, ia), sa = Ln.renderData.indicesCount, aa = Ln.renderData.vertexCount, ra = Ln.renderData.vDataOffset, i = Ln.renderData.vData, s = Ln.renderData.iData, u.length > 0 && s.set(u, sa), la) for (var c = 0, d = h.length, f = ra; c < d; c += dn, f += cn) {
            Jn.x = h[c], Jn.y = h[c + 1], Gn.set(h[c + 2], h[c + 3], h[c + 4], h[c + 5]), Qn.x = h[c + 6], Qn.y = h[c + 7], nn ? Zn.set(h[c + 8], h[c + 9], h[c + 10], h[c + 11]) : Zn.set(0, 0, 0, 0), la.transform(Jn, Qn, Gn, Zn), i[f] = Jn.x, i[f + 1] = Jn.y, i[f + 3] = Qn.x, i[f + 4] = Qn.y, i.set(pa(Gn), f + 5), nn && i.set(pa(Zn), f + 9);
          } else for (var p = 0, m = h.length, g = ra; p < m; p += dn, g += cn) {
            i[g] = h[p], i[g + 1] = h[p + 1], i[g + 3] = h[p + 6], i[g + 4] = h[p + 7], i[g + 5] = h[p + 2] / 255, i[g + 6] = h[p + 3] / 255, i[g + 7] = h[p + 4] / 255, i[g + 8] = h[p + 5] / 255, nn && (i[g + 9] = h[p + 8] / 255, i[g + 10] = h[p + 9] / 255, i[g + 11] = h[p + 10] / 255, i[g + 12] = h[p + 11] / 255);
          }
        } else if (la) for (var v = ra, y = ra + ea; v < y; v += cn) {
          Jn.x = i[v], Jn.y = i[v + 1], Qn.x = i[v + 3], Qn.y = i[v + 4], la.transform(Jn, Qn, Gn, Zn), i[v] = Jn.x, i[v + 1] = Jn.y, i[v + 3] = Qn.x, i[v + 4] = Qn.y, i.set(pa(Gn), v + 5), nn && i.set(pa(Zn), v + 9);
        } else {
          Kn.set(pa(Gn)), $n.set(pa(Zn));

          for (var x = ra, w = ra + ea; x < w; x += cn) {
            i.set(Kn, x + 5), nn && i.set($n, x + 9);
          }
        }
      }

      g.internal.SpineAssembler = ga;
      var ya,
          xa,
          wa = {
        getAssembler: function getAssembler() {
          return ga;
        }
      };
      Qe.Assembler = wa, function (t) {
        t[t.REGION = 0] = "REGION", t[t.BOUNDING_BOX = 1] = "BOUNDING_BOX", t[t.MESH = 2] = "MESH", t[t.SKINNED_MESH = 3] = "SKINNED_MESH";
      }(ya || (ya = {})), w(ya), function (t) {
        t[t.START = 0] = "START", t[t.INTERRUPT = 1] = "INTERRUPT", t[t.END = 2] = "END", t[t.DISPOSE = 3] = "DISPOSE", t[t.COMPLETE = 4] = "COMPLETE", t[t.EVENT = 5] = "EVENT";
      }(xa || (xa = {})), w(xa), t("sp", Object.freeze({
        __proto__: null,
        spine: rt,

        get ATTACHMENT_TYPE() {
          return ya;
        },

        get AnimationEventType() {
          return xa;
        },

        timeScale: 1,

        get DefaultSkinsEnum() {
          return qe;
        },

        get DefaultAnimsEnum() {
          return He;
        },

        get AnimationCacheMode() {
          return je;
        },

        get SpineMaterialType() {
          return ze;
        },

        SpineSocket: Je,
        Skeleton: Qe,
        SkeletonData: qt,
        SkeletonTexture: Yt,
        convertFilter: Xt,
        convertWraps: Wt,
        VertexEffectDelegate: Yn,
        simpleSpineAssembler: wa
      }));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/sprite-723e419c.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./sprite-frame-1c023836.js", "./renderable-2d-f6cb180f.js"], function (t) {
  "use strict";

  var e, i, r, n, a, s, o, l, h, u, f, p, c, _, y, d, g, m, D, b, v, F, A, x, T, w, R, S, O, z, E, M, C, P, I, L, k, H, U, j, B, N, G, W, V, X;

  return {
    setters: [function (t) {
      e = t.ef, i = t.ec, r = t.fg, n = t.gx, a = t.eg, s = t.l, o = t.eh, l = t.ed, h = t.df, u = t.ei, f = t.eu, p = t.e2, c = t.gn, _ = t.gy, y = t.i, d = t.ek, g = t.w, m = t.fw, D = t.gz, b = t.dC, v = t.cj, F = t.fJ, A = t.d, x = t.am, T = t.dn, w = t.dm, R = t.cK, S = t.fV, O = t.gA, z = t.fZ, E = t.ga, M = t.f_, C = t.ej, P = t.fU, I = t.go, L = t.ds, k = t.fq, H = t.dr, U = t.gf, j = t.co, B = t.c3;
    }, function (t) {
      N = t.d, G = t.D;
    }, function (t) {
      W = t.S;
    }, function (t) {
      V = t.I, X = t.R;
    }],
    execute: function execute() {
      var Y, Z, $, K;
      t({
        H: void 0,
        O: void 0,
        V: void 0,
        b: void 0,
        e: function e(t) {
          var e = t.charCodeAt(0);
          return e >= 9 && e <= 13 || 32 === e || 133 === e || 160 === e || 5760 === e || e >= 8192 && e <= 8202 || 8232 === e || 8233 === e || 8239 === e || 8287 === e || 12288 === e;
        },
        f: function f(t, e, i, r) {
          var n = [];
          if (0 === t.length || i < 0) return n.push(""), n;

          for (var a = t; e > i && a.length > 1;) {
            for (var s = a.length * (i / e) | 0, o = zt(a, s), l = e - r(o), h = o, u = 0, f = 0; l > i && f++ < 10;) {
              s *= i / l, l = e - r(o = zt(a, s |= 0));
            }

            for (f = 0; l <= i && f++ < 10;) {
              if (o) {
                var p = xt.exec(o);
                u = p ? p[0].length : 1, h = o;
              }

              l = e - r(o = zt(a, s += u));
            }

            0 == (s -= u) ? (s = 1, h = zt(a, 1)) : 1 === s && a[0] >= "\uD800" && a[0] <= "\uDBFF" && (s = 2, h = zt(a, 2));

            var c = zt(a, 0, s),
                _ = void 0;

            Tt.test(h || o) && (0 == (s -= (_ = wt.exec(c)) ? _[0].length : 0) && (s = 1), h = zt(a, s), c = zt(a, 0, s)), St.test(h) && (_ = Rt.exec(c)) && c !== _[0] && (h = zt(a, s -= _[0].length), c = zt(a, 0, s)), (0 === n.length || (c = c.trim()).length > 0) && n.push(c), e = r(a = h || o);
          }

          return (0 === n.length || (a = a.trim()).length > 0) && n.push(a), n;
        },
        g: function g() {
          return 0;
        },
        i: function i(t) {
          return /^[\u4E00-\u9FFF\u3400-\u4DFF]+$/.test(t) || /[\u3000-\u303F]|[\u3040-\u309F]|[\u30A0-\u30FF]|[\uFF00-\uFFEF]|[\u4E00-\u9FAF]|[\u2605-\u2606]|[\u2190-\u2195]|\u203B/g.test(t) || /^[\u1100-\u11FF]|[\u3130-\u318F]|[\uA960-\uA97F]|[\uAC00-\uD7AF]|[\uD7B0-\uD7FF]+$/.test(t);
        },
        k: function k(t) {
          var e = t.color.toHEX(),
              i = "";
          return t.isOutlined && t.margin > 0 && (i = i + t.margin + t.out.toHEX()), "" + t.fontSize + t.fontFamily + e + i;
        },
        s: Ot
      });
      var J,
          q = t("S", e("cc.SpriteAtlas")((K = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), n = 0; n < i; n++) {
            r[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, o(e, "spriteFrames", $, l(e)), e;
        }

        i(e, t);
        var a = e.prototype;
        return a.getTexture = function () {
          var t = Object.keys(this.spriteFrames);

          if (t.length > 0) {
            var e = this.spriteFrames[t[0]];
            return e && e.texture;
          }

          return null;
        }, a.getSpriteFrame = function (t) {
          var e = this.spriteFrames[t];
          return e ? (e.name || (e.name = t), e) : null;
        }, a.getSpriteFrames = function () {
          for (var t = [], e = this.spriteFrames, i = 0, r = Object.keys(e); i < r.length; i++) {
            var n = r[i];
            t.push(e[n]);
          }

          return t;
        }, a._serialize = function () {}, a._deserialize = function (t, e) {
          var i = t;
          this._name = i.name;
          var a = i.spriteFrames;
          this.spriteFrames = r();

          for (var s = 0; s < a.length; s += 2) {
            e.result.push(this.spriteFrames, a[s], a[s + 1], n(W));
          }
        }, e;
      }(h), $ = a((Z = K).prototype, "spriteFrames", [u, f], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return r();
        }
      }), Y = Z)) || Y);
      s.SpriteAtlas = q;
      var Q,
          tt,
          et,
          it,
          rt = t("F", e("cc.Font")(J = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        return i(e, t), e;
      }(h)) || J);
      s.Font = rt;
      var nt,
          at,
          st,
          ot,
          lt,
          ht,
          ut,
          ft,
          pt,
          ct = t("T", e("cc.TTFFont")((it = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), n = 0; n < i; n++) {
            r[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, o(e, "_fontFamily", et, l(e)), e;
        }

        return i(e, t), e.prototype.initDefault = function (e) {
          this._fontFamily = "Arial", t.prototype.initDefault.call(this, e);
        }, p(e, [{
          key: "_nativeAsset",
          get: function get() {
            return this._fontFamily;
          },
          set: function set(t) {
            this._fontFamily = t || "Arial";
          }
        }, {
          key: "_nativeDep",
          get: function get() {
            return {
              uuid: this._uuid,
              __nativeName__: this._native,
              ext: y(this._native),
              __isNative__: !0
            };
          }
        }]), e;
      }(rt), et = a((tt = it).prototype, "_fontFamily", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), a(tt.prototype, "_nativeAsset", [c, _], Object.getOwnPropertyDescriptor(tt.prototype, "_nativeAsset"), tt.prototype), a(tt.prototype, "_nativeDep", [c], Object.getOwnPropertyDescriptor(tt.prototype, "_nativeDep"), tt.prototype), Q = tt)) || Q);
      s.TTFFont = ct;

      var _t,
          yt = function yt() {
        this.u = 0, this.v = 0, this.w = 0, this.h = 0, this.offsetX = 0, this.offsetY = 0, this.textureID = 0, this.valid = !1, this.xAdvance = 0;
      },
          dt = function () {
        function t(t) {
          this.letterDefinitions = {}, this.texture = t;
        }

        var e = t.prototype;
        return e.addLetterDefinitions = function (t, e) {
          this.letterDefinitions[t] = e;
        }, e.cloneLetterDefinition = function () {
          for (var t = {}, e = 0, i = Object.keys(this.letterDefinitions); e < i.length; e++) {
            var r = i[e],
                n = new yt();
            m(n, this.letterDefinitions[r]), t[r] = n;
          }

          return t;
        }, e.getTexture = function () {
          return this.texture;
        }, e.getLetter = function (t) {
          return this.letterDefinitions[t];
        }, e.getLetterDefinitionForChar = function (t) {
          var e = t.charCodeAt(0);
          return this.letterDefinitions.hasOwnProperty(e) ? this.letterDefinitions[e] : null;
        }, e.clear = function () {
          this.letterDefinitions = {};
        }, t;
      }(),
          gt = t("B", (nt = e("cc.BitmapFont"), at = d(W), nt((pt = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), n = 0; n < i; n++) {
            r[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, o(e, "fntDataStr", lt, l(e)), o(e, "spriteFrame", ht, l(e)), o(e, "fontSize", ut, l(e)), o(e, "fntConfig", ft, l(e)), e;
        }

        return i(e, t), e.prototype.onLoaded = function () {
          var t = this.spriteFrame;
          !this.fontDefDictionary && t && (this.fontDefDictionary = new dt(t.texture));
          var e = this.fntConfig;

          if (e) {
            var i = e.fontDefDictionary;

            for (var r in i) {
              var n = new yt(),
                  a = i[r].rect;
              n.offsetX = i[r].xOffset, n.offsetY = i[r].yOffset, n.w = a.width, n.h = a.height, n.u = a.x, n.v = a.y, n.textureID = 0, n.valid = !0, n.xAdvance = i[r].xAdvance, this.fontDefDictionary.addLetterDefinitions(r, n);
            }
          } else g("The fnt config is not exists!");
        }, e;
      }(rt), lt = a((ot = pt).prototype, "fntDataStr", [u, f], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), ht = a(ot.prototype, "spriteFrame", [at], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ut = a(ot.prototype, "fontSize", [u, f], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), ft = a(ot.prototype, "fntConfig", [u, f], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), st = ot)) || st));

      s.BitmapFont = gt;
      var mt = t("L", e("cc.LabelAtlas")(_t = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        return i(e, t), e;
      }(gt)) || _t);
      s.LabelAtlas = mt;
      var Dt = t("d", .26),
          bt = t("M", (Dt + 1) / 2 - Dt);
      var vt = new D(2);

      vt.get = function () {
        return this._get() || {
          key: "",
          value: 0,
          prev: null,
          next: null
        };
      };

      var Ft,
          At = new (function () {
        function t(t) {
          this.count = 0, this.limit = 0, this.datas = {}, this.limit = t;
        }

        var e = t.prototype;
        return e.moveToHead = function (t) {
          t.next = this.head, t.prev = null, this.head && (this.head.prev = t), this.head = t, this.tail || (this.tail = t), this.count++, this.datas[t.key] = t;
        }, e.put = function (t, e) {
          var i = vt.get();

          if (i.key = t, i.value = e, this.count >= this.limit) {
            var r = this.tail;
            delete this.datas[r.key], this.count--, this.tail = r.prev, this.tail.next = null, r.prev = null, r.next = null, vt.put(r);
          }

          this.moveToHead(i);
        }, e.remove = function (t) {
          t.prev ? t.prev.next = t.next : this.head = t.next, t.next ? t.next.prev = t.prev : this.tail = t.prev, delete this.datas[t.key], this.count--;
        }, e.get = function (t) {
          var e = this.datas[t];
          return e ? (this.remove(e), this.moveToHead(e), e.value) : null;
        }, e.clear = function () {
          this.count = 0, this.datas = {}, this.head = null, this.tail = null;
        }, e.has = function (t) {
          return !!this.datas[t];
        }, e.delete = function (t) {
          var e = this.datas[t];
          this.remove(e);
        }, t;
      }())(100),
          xt = /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûа-яА-ЯЁё]+|\S)/,
          Tt = /^[!,.:;'}\]%\?>、‘“》？。，！]/,
          wt = /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+|\S)$/,
          Rt = /[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+$/,
          St = /^[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]/;

      function Ot(t, e, i) {
        var r = (i || t.font) + "🎮" + e,
            n = At.get(r);
        if (null !== n) return n;
        var a = t.measureText(e),
            s = a && a.width || 0;
        return At.put(r, s), s;
      }

      function zt(t, e, i) {
        var r = e,
            n = i,
            a = t[e];
        if (a >= "\uDC00" && a <= "\uDFFF" && r--, void 0 !== i) if (i - 1 !== e) {
          var s = t[i - 1];
          s >= "\uD800" && s <= "\uDBFF" && n--;
        } else a >= "\uD800" && a <= "\uDBFF" && n++;
        return t.substring(r, n);
      }

      var Et,
          Mt,
          Ct,
          Pt,
          It,
          Lt,
          kt,
          Ht,
          Ut,
          jt,
          Bt,
          Nt,
          Gt,
          Wt,
          Vt,
          Xt,
          Yt,
          Zt,
          $t,
          Kt,
          Jt,
          qt,
          Qt,
          te,
          ee,
          ie,
          re,
          ne,
          ae,
          se,
          oe,
          le,
          he,
          ue,
          fe,
          pe,
          ce,
          _e,
          ye,
          de,
          ge,
          me,
          De,
          be,
          ve,
          Fe,
          Ae,
          xe,
          Te,
          we,
          Re,
          Se,
          Oe,
          ze,
          Ee,
          Me,
          Ce,
          Pe,
          Ie,
          Le,
          ke,
          He,
          Ue,
          je,
          Be,
          Ne,
          Ge,
          We,
          Ve,
          Xe,
          Ye,
          Ze,
          $e,
          Ke,
          Je,
          qe,
          Qe,
          ti,
          ei,
          ii,
          ri,
          ni,
          ai,
          si,
          oi,
          li,
          hi,
          ui,
          fi,
          pi,
          ci,
          _i,
          yi,
          di,
          gi,
          mi,
          Di,
          bi,
          vi,
          Fi,
          Ai,
          xi,
          Ti,
          wi,
          Ri,
          Si,
          Oi,
          zi = t("C", function () {
        function t() {
          this.pool = [];
        }

        t.getInstance = function () {
          return Ft || (Ft = new t()), Ft;
        };

        var e = t.prototype;
        return e.get = function () {
          var t = this.pool.pop();

          if (!t) {
            var e = document.createElement("canvas"),
                i = e.getContext("2d");
            t = {
              canvas: e,
              context: i
            };
          }

          return t;
        }, e.put = function (t) {
          this.pool.length >= b.MAX_LABEL_CANVAS_POOL_SIZE || this.pool.push(t);
        }, t;
      }()),
          Ei = v.WHITE.clone(),
          Mi = function Mi() {
        this.u = 0, this.v = 0, this.w = 0, this.h = 0, this.texture = null, this.offsetX = 0, this.offsetY = 0, this.valid = !1, this.xAdvance = 0;
      },
          Ci = "rgba(255, 255, 255, " + (1 / 255).toFixed(3) + ")",
          Pi = function () {
        function t(t, e) {
          this.image = null, this.labelInfo = void 0, this.char = void 0, this.data = null, this.canvas = null, this.context = null, this.width = 0, this.height = 0, this.offsetY = 0, this.hash = void 0, this.char = t, this.labelInfo = e, this.hash = t.charCodeAt(0) + e.hash;
        }

        var e = t.prototype;
        return e.updateRenderData = function () {
          this._updateProperties(), this._updateTexture();
        }, e.destroy = function () {
          this.image = null;
        }, e._updateProperties = function () {
          if (this.data = zi.getInstance().get(), this.canvas = this.data.canvas, this.context = this.data.context, this.context) {
            this.context.font = this.labelInfo.fontDesc;
            var t = Ot(this.context, this.char, this.labelInfo.fontDesc),
                e = 2 * this.labelInfo.margin + 2;
            this.width = parseFloat(t.toFixed(2)) + e, this.height = (1 + Dt) * this.labelInfo.fontSize + e, this.offsetY = -this.labelInfo.fontSize * Dt / 2;
          }

          this.canvas.width !== this.width && (this.canvas.width = this.width), this.canvas.height !== this.height && (this.canvas.height = this.height), this.image || (this.image = new w()), this.image.reset(this.canvas);
        }, e._updateTexture = function () {
          if (this.context && this.canvas) {
            var t = this.context,
                e = this.labelInfo,
                i = this.canvas.width,
                r = this.canvas.height;
            t.textAlign = "center", t.textBaseline = "alphabetic", t.clearRect(0, 0, i, r), t.fillStyle = Ci, t.fillRect(0, 0, i, r), t.font = e.fontDesc;
            var n = e.fontSize,
                a = i / 2,
                s = r / 2 + n * bt + 0 * n,
                o = e.color;

            if (t.lineJoin = "round", t.fillStyle = "rgba(" + o.r + ", " + o.g + ", " + o.b + ", 1)", e.isOutlined) {
              var l = e.out || Ei;
              t.strokeStyle = "rgba(" + l.r + ", " + l.g + ", " + l.b + ", " + l.a / 255 + ")", t.lineWidth = 2 * e.margin, t.strokeText(this.char, a, s);
            }

            t.fillText(this.char, a, s);
          }
        }, t;
      }(),
          Ii = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        i(e, t);
        var r = e.prototype;
        return r.initWithSize = function (t, e, i) {
          void 0 === i && (i = F.RGBA8888), this.reset({
            width: t,
            height: e,
            format: i
          });
        }, r.drawTextureAt = function (t, e, i) {
          var r = this.getGFXTexture();

          if (t && r) {
            var n = this._getGFXDevice();

            if (n) {
              var a = new x();
              a.texOffset.x = e, a.texOffset.y = i, a.texExtent.width = t.width, a.texExtent.height = t.height, n.copyTexImagesToTexture([t.data], r, [a]);
            } else console.warn("Unable to get device");
          }
        }, e;
      }(T);

      t("j", function () {
        function t(t, e) {
          this._x = 0, this._y = 0, this._nextY = 0, this._width = 0, this._height = 0, this._halfBleed = 0, this._dirty = !1;
          var i = new Ii();
          i.initWithSize(t, e), this.fontDefDictionary = new dt(i), this._halfBleed = 1, this._width = t, this._height = e, N.on(G.EVENT_BEFORE_SCENE_LAUNCH, this.beforeSceneLoad, this);
        }

        var e = t.prototype;
        return e.insertLetterTexture = function (t) {
          var e = t.image,
              i = N.root.device;
          if (!e || !this.fontDefDictionary || !i) return null;
          var r = e.width,
              n = e.height;
          if (this._x + r + 0 > this._width && (this._x = 0, this._y = this._nextY), this._y + n > this._nextY && (this._nextY = this._y + n + 0), this._nextY > this._height) return A(12100), null;
          this.fontDefDictionary.texture.drawTextureAt(e, this._x, this._y), this._dirty = !0;
          var a = new Mi();
          return a.u = this._x + this._halfBleed, a.v = this._y + this._halfBleed, a.texture = this.fontDefDictionary.texture, a.valid = !0, a.w = t.width - 2, a.h = t.height - 2, a.xAdvance = a.w, a.offsetY = t.offsetY, this._x += r + 0, this.fontDefDictionary.addLetterDefinitions(t.hash, a), a;
        }, e.update = function () {
          this._dirty && (this._dirty = !1);
        }, e.reset = function () {
          this._x = 0, this._y = 0, this._nextY = 0, this.fontDefDictionary.clear();
        }, e.destroy = function () {
          this.reset(), this.fontDefDictionary && (this.fontDefDictionary.texture.destroy(), this.fontDefDictionary.texture = null);
        }, e.getTexture = function () {
          return this.fontDefDictionary.getTexture();
        }, e.beforeSceneLoad = function () {
          this.clearAllCache();
        }, e.clearAllCache = function () {
          this.destroy();
          var t = new Ii();
          t.initWithSize(this._width, this._height), this.fontDefDictionary.texture = t;
        }, e.getLetter = function (t) {
          return this.fontDefDictionary.letterDefinitions[t];
        }, e.getLetterDefinitionForChar = function (t, e) {
          var i = t.charCodeAt(0) + e.hash,
              r = this.fontDefDictionary.letterDefinitions[i];

          if (!r) {
            var n = new Pi(t, e);
            n.updateRenderData(), r = this.insertLetterTexture(n), n.destroy();
          }

          return r;
        }, p(t, [{
          key: "width",
          get: function get() {
            return this._width;
          }
        }, {
          key: "height",
          get: function get() {
            return this._height;
          }
        }]), t;
      }()), t("h", {
        fontAtlas: null,
        fontSize: 0,
        lineHeight: 0,
        hAlign: 0,
        vAlign: 0,
        hash: "",
        fontFamily: "",
        fontDesc: "Arial",
        color: v.WHITE.clone(),
        isOutlined: !1,
        out: v.WHITE.clone(),
        margin: 0
      }), function (t) {
        t[t.LEFT = 0] = "LEFT", t[t.CENTER = 1] = "CENTER", t[t.RIGHT = 2] = "RIGHT";
      }(ke || (ke = t("H", {}))), R(ke), function (t) {
        t[t.TOP = 0] = "TOP", t[t.CENTER = 1] = "CENTER", t[t.BOTTOM = 2] = "BOTTOM";
      }(He || (He = t("V", {}))), R(He), function (t) {
        t[t.NONE = 0] = "NONE", t[t.CLAMP = 1] = "CLAMP", t[t.SHRINK = 2] = "SHRINK", t[t.RESIZE_HEIGHT = 3] = "RESIZE_HEIGHT";
      }(Ue || (Ue = t("O", {}))), R(Ue), function (t) {
        t[t.NONE = 0] = "NONE", t[t.BITMAP = 1] = "BITMAP", t[t.CHAR = 2] = "CHAR";
      }(je || (je = t("b", {}))), R(je), t("c", (Et = e("cc.Label"), Mt = z(), Ct = E(110), Pt = M(), It = C(), Lt = P(), kt = d(ke), Ht = C(), Ut = P(), jt = d(He), Bt = C(), Nt = P(), Gt = C(), Wt = P(), Vt = C(), Xt = I(), Yt = P(), Zt = C(), $t = P(), Kt = d(Ue), Jt = C(), qt = P(), Qt = C(), te = P(), ee = d(rt), ie = C(), re = I(), ne = P(), ae = C(), se = P(), oe = d(je), le = C(), he = P(), ue = C(), fe = P(), pe = C(), ce = P(), _e = C(), ye = P(), de = I(), Et(ge = Mt(ge = Ct(ge = Pt((Le = Ie = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, o(e, "_string", De, l(e)), o(e, "_horizontalAlign", be, l(e)), o(e, "_verticalAlign", ve, l(e)), o(e, "_actualFontSize", Fe, l(e)), o(e, "_fontSize", Ae, l(e)), o(e, "_fontFamily", xe, l(e)), o(e, "_lineHeight", Te, l(e)), o(e, "_overflow", we, l(e)), o(e, "_enableWrapText", Re, l(e)), o(e, "_font", Se, l(e)), o(e, "_isSystemFontUsed", Oe, l(e)), e._spacingX = 0, o(e, "_isItalic", ze, l(e)), o(e, "_isBold", Ee, l(e)), o(e, "_isUnderline", Me, l(e)), o(e, "_underlineHeight", Ce, l(e)), o(e, "_cacheMode", Pe, l(e)), e._N$file = null, e._texture = null, e._ttfSpriteFrame = null, e._userDefinedFont = null, e._assemblerData = null, e._fontAtlas = null, e._letterTexture = null, e._ttfSpriteFrame = null, e;
        }

        i(e, t);
        var r = e.prototype;
        return r.onEnable = function () {
          t.prototype.onEnable.call(this), this._font || this._isSystemFontUsed || (this.useSystemFont = !0), this._isSystemFontUsed && !this._fontFamily && (this.fontFamily = "Arial"), this._applyFontTexture();
        }, r.onDisable = function () {
          t.prototype.onDisable.call(this);
        }, r.onDestroy = function () {
          if (this._assembler && this._assembler.resetAssemblerData && this._assembler.resetAssemblerData(this._assemblerData), this._assemblerData = null, this._ttfSpriteFrame) {
            var e = this._ttfSpriteFrame.texture;

            if (e && null === this._ttfSpriteFrame.original) {
              var i = e;
              i.image && i.image.destroy(), e.destroy();
            }

            this._ttfSpriteFrame = null;
          }

          this._letterTexture = null, t.prototype.onDestroy.call(this);
        }, r.updateRenderData = function (t) {
          void 0 === t && (t = !1), this.markForUpdateRenderData(), t && (this._flushAssembler(), this.renderData && (this.renderData.vertDirty = !0), this._applyFontTexture(), this._assembler && this._assembler.updateRenderData(this));
        }, r._render = function (t) {
          t.commitComp(this, this._texture, this._assembler, null);
        }, r._updateColor = function () {
          this._updateWorldAlpha(), this._colorDirty && (this.updateRenderData(!1), this._colorDirty = !1);
        }, r._canRender = function () {
          if (!t.prototype._canRender.call(this) || !this._string) return !1;
          var e = this._font;

          if (e && e instanceof gt) {
            var i = e.spriteFrame;
            if (!i || !i.texture) return !1;
          }

          return !0;
        }, r._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this.destroyRenderData(), this._assembler = t), this._renderData || this._assembler && this._assembler.createData && (this._renderData = this._assembler.createData(this), this._renderData.material = this.material);
        }, r._applyFontTexture = function () {
          this.markForUpdateRenderData();
          var t = this._font;

          if (t instanceof gt) {
            var e = t.spriteFrame;
            e && e.texture && (this._texture = e, this.changeMaterialForDefine(), this._assembler && this._assembler.updateRenderData(this));
          } else {
            if (this.cacheMode === je.CHAR) this._letterTexture = this._assembler.getAssemblerData(), this._texture = this._letterTexture;else if (!this._ttfSpriteFrame) {
              this._ttfSpriteFrame = new W(), this._assemblerData = this._assembler.getAssemblerData();
              var i = new w(this._assemblerData.canvas),
                  r = new T();
              r.image = i, this._ttfSpriteFrame.texture = r;
            }
            this.cacheMode !== je.CHAR && (this._texture = this._ttfSpriteFrame), this.changeMaterialForDefine();
          }
        }, r.changeMaterialForDefine = function () {
          if (this._texture) {
            var t = !1;

            if (this.cacheMode !== je.CHAR) {
              var e = this._texture.texture;

              if (e instanceof S) {
                var i = e.getPixelFormat();
                t = i === F.RGBA_ETC1 || i === F.RGB_A_PVRTC_4BPPV1 || i === F.RGB_A_PVRTC_2BPPV1;
              }
            }

            this._instanceMaterialType = t ? V.USE_ALPHA_SEPARATED : V.ADD_COLOR_AND_TEXTURE, this.updateMaterial();
          }
        }, p(e, [{
          key: "string",
          get: function get() {
            return this._string;
          },
          set: function set(t) {
            t ? t += "" : t = "", this._string !== t && (this._string = t, this.updateRenderData());
          }
        }, {
          key: "horizontalAlign",
          get: function get() {
            return this._horizontalAlign;
          },
          set: function set(t) {
            this._horizontalAlign !== t && (this._horizontalAlign = t, this.updateRenderData());
          }
        }, {
          key: "verticalAlign",
          get: function get() {
            return this._verticalAlign;
          },
          set: function set(t) {
            this._verticalAlign !== t && (this._verticalAlign = t, this.updateRenderData());
          }
        }, {
          key: "actualFontSize",
          get: function get() {
            return this._actualFontSize;
          },
          set: function set(t) {
            this._actualFontSize = t;
          }
        }, {
          key: "fontSize",
          get: function get() {
            return this._fontSize;
          },
          set: function set(t) {
            this._fontSize !== t && (this._fontSize = t, this.updateRenderData());
          }
        }, {
          key: "fontFamily",
          get: function get() {
            return this._fontFamily;
          },
          set: function set(t) {
            this._fontFamily !== t && (this._fontFamily = t, this.updateRenderData());
          }
        }, {
          key: "lineHeight",
          get: function get() {
            return this._lineHeight;
          },
          set: function set(t) {
            this._lineHeight !== t && (this._lineHeight = t, this.updateRenderData());
          }
        }, {
          key: "overflow",
          get: function get() {
            return this._overflow;
          },
          set: function set(t) {
            this._overflow !== t && (this._overflow = t, this.updateRenderData());
          }
        }, {
          key: "enableWrapText",
          get: function get() {
            return this._enableWrapText;
          },
          set: function set(t) {
            this._enableWrapText !== t && (this._enableWrapText = t, this.updateRenderData());
          }
        }, {
          key: "font",
          get: function get() {
            return this._font;
          },
          set: function set(t) {
            this._font !== t && (this._isSystemFontUsed = !t, this._font = t, this._renderData && (this.destroyRenderData(), this._renderData = null), this._fontAtlas = null, this.updateRenderData(!0));
          }
        }, {
          key: "useSystemFont",
          get: function get() {
            return this._isSystemFontUsed;
          },
          set: function set(t) {
            this._isSystemFontUsed !== t && (this.destroyRenderData(), this._renderData = null, this._isSystemFontUsed = !!t, t && (this.font = null), this._flushAssembler(), this.updateRenderData());
          }
        }, {
          key: "cacheMode",
          get: function get() {
            return this._cacheMode;
          },
          set: function set(t) {
            this._cacheMode !== t && (this._cacheMode !== je.BITMAP || this._font instanceof gt || !this._ttfSpriteFrame || this._ttfSpriteFrame._resetDynamicAtlasFrame(), this._cacheMode === je.CHAR && (this._ttfSpriteFrame = null), this._cacheMode = t, this.updateRenderData(!0));
          }
        }, {
          key: "spriteFrame",
          get: function get() {
            return this._texture;
          }
        }, {
          key: "ttfSpriteFrame",
          get: function get() {
            return this._ttfSpriteFrame;
          }
        }, {
          key: "isBold",
          get: function get() {
            return this._isBold;
          },
          set: function set(t) {
            this._isBold !== t && (this._isBold = t, this.updateRenderData());
          }
        }, {
          key: "isItalic",
          get: function get() {
            return this._isItalic;
          },
          set: function set(t) {
            this._isItalic !== t && (this._isItalic = t, this.updateRenderData());
          }
        }, {
          key: "isUnderline",
          get: function get() {
            return this._isUnderline;
          },
          set: function set(t) {
            this._isUnderline !== t && (this._isUnderline = t, this.updateRenderData());
          }
        }, {
          key: "underlineHeight",
          get: function get() {
            return this._underlineHeight;
          },
          set: function set(t) {
            this._underlineHeight !== t && (this._underlineHeight = t, this.updateRenderData());
          }
        }, {
          key: "assemblerData",
          get: function get() {
            return this._assemblerData;
          }
        }, {
          key: "fontAtlas",
          get: function get() {
            return this._fontAtlas;
          },
          set: function set(t) {
            this._fontAtlas = t;
          }
        }, {
          key: "spacingX",
          get: function get() {
            return this._spacingX;
          },
          set: function set(t) {
            this._spacingX !== t && (this._spacingX = t, this.updateRenderData());
          }
        }, {
          key: "_bmFontOriginalSize",
          get: function get() {
            return this._font instanceof gt ? this._font.fontSize : -1;
          }
        }]), e;
      }(X), Ie.HorizontalAlign = ke, Ie.VerticalAlign = He, Ie.Overflow = Ue, Ie.CacheMode = je, Ie._canvasPool = zi.getInstance(), a((me = Le).prototype, "string", [It, Lt, O], Object.getOwnPropertyDescriptor(me.prototype, "string"), me.prototype), a(me.prototype, "horizontalAlign", [kt, Ht, Ut], Object.getOwnPropertyDescriptor(me.prototype, "horizontalAlign"), me.prototype), a(me.prototype, "verticalAlign", [jt, Bt, Nt], Object.getOwnPropertyDescriptor(me.prototype, "verticalAlign"), me.prototype), a(me.prototype, "fontSize", [Gt, Wt], Object.getOwnPropertyDescriptor(me.prototype, "fontSize"), me.prototype), a(me.prototype, "fontFamily", [Vt, Xt, Yt], Object.getOwnPropertyDescriptor(me.prototype, "fontFamily"), me.prototype), a(me.prototype, "lineHeight", [Zt, $t], Object.getOwnPropertyDescriptor(me.prototype, "lineHeight"), me.prototype), a(me.prototype, "overflow", [Kt, Jt, qt], Object.getOwnPropertyDescriptor(me.prototype, "overflow"), me.prototype), a(me.prototype, "enableWrapText", [Qt, te], Object.getOwnPropertyDescriptor(me.prototype, "enableWrapText"), me.prototype), a(me.prototype, "font", [ee, ie, re, ne], Object.getOwnPropertyDescriptor(me.prototype, "font"), me.prototype), a(me.prototype, "useSystemFont", [ae, se], Object.getOwnPropertyDescriptor(me.prototype, "useSystemFont"), me.prototype), a(me.prototype, "cacheMode", [oe, le, he], Object.getOwnPropertyDescriptor(me.prototype, "cacheMode"), me.prototype), a(me.prototype, "isBold", [ue, fe], Object.getOwnPropertyDescriptor(me.prototype, "isBold"), me.prototype), a(me.prototype, "isItalic", [pe, ce], Object.getOwnPropertyDescriptor(me.prototype, "isItalic"), me.prototype), a(me.prototype, "isUnderline", [_e, ye], Object.getOwnPropertyDescriptor(me.prototype, "isUnderline"), me.prototype), a(me.prototype, "underlineHeight", [de, f], Object.getOwnPropertyDescriptor(me.prototype, "underlineHeight"), me.prototype), De = a(me.prototype, "_string", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "label";
        }
      }), be = a(me.prototype, "_horizontalAlign", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return ke.CENTER;
        }
      }), ve = a(me.prototype, "_verticalAlign", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return He.CENTER;
        }
      }), Fe = a(me.prototype, "_actualFontSize", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ae = a(me.prototype, "_fontSize", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 40;
        }
      }), xe = a(me.prototype, "_fontFamily", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "Arial";
        }
      }), Te = a(me.prototype, "_lineHeight", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 40;
        }
      }), we = a(me.prototype, "_overflow", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ue.NONE;
        }
      }), Re = a(me.prototype, "_enableWrapText", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Se = a(me.prototype, "_font", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Oe = a(me.prototype, "_isSystemFontUsed", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), ze = a(me.prototype, "_isItalic", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Ee = a(me.prototype, "_isBold", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Me = a(me.prototype, "_isUnderline", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Ce = a(me.prototype, "_underlineHeight", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 2;
        }
      }), Pe = a(me.prototype, "_cacheMode", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return je.NONE;
        }
      }), ge = me)) || ge) || ge) || ge) || ge)), function (t) {
        t[t.SIMPLE = 0] = "SIMPLE", t[t.SLICED = 1] = "SLICED", t[t.TILED = 2] = "TILED", t[t.FILLED = 3] = "FILLED";
      }(wi || (wi = {})), R(wi), function (t) {
        t[t.HORIZONTAL = 0] = "HORIZONTAL", t[t.VERTICAL = 1] = "VERTICAL", t[t.RADIAL = 2] = "RADIAL";
      }(Ri || (Ri = {})), R(Ri), function (t) {
        t[t.CUSTOM = 0] = "CUSTOM", t[t.TRIMMED = 1] = "TRIMMED", t[t.RAW = 2] = "RAW";
      }(Si || (Si = {})), R(Si), function (t) {
        t.SPRITE_FRAME_CHANGED = "spriteframe-changed";
      }(Oi || (Oi = {})), t("a", (Be = e("cc.Sprite"), Ne = z(), Ge = E(110), We = M(), Ve = d(q), Xe = C(), Ye = P(), Ze = d(W), $e = C(), Ke = P(), Je = d(wi), qe = C(), Qe = P(), ti = d(Ri), ei = P(), ii = P(), ri = U(), ni = P(), ai = U(), si = P(), oi = C(), li = P(), hi = d(Si), ui = C(), fi = P(), Be(pi = Ne(pi = Ge(pi = We((Ti = xi = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), n = 0; n < i; n++) {
            r[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, o(e, "_spriteFrame", _i, l(e)), o(e, "_type", yi, l(e)), o(e, "_fillType", di, l(e)), o(e, "_sizeMode", gi, l(e)), o(e, "_fillCenter", mi, l(e)), o(e, "_fillStart", Di, l(e)), o(e, "_fillRange", bi, l(e)), o(e, "_isTrimmedMode", vi, l(e)), o(e, "_useGrayscale", Fi, l(e)), o(e, "_atlas", Ai, l(e)), e;
        }

        i(e, t);
        var r = e.prototype;
        return r.__preload = function () {
          this.changeMaterialForDefine(), t.prototype.__preload.call(this);
        }, r.onEnable = function () {
          t.prototype.onEnable.call(this), this._activateMaterial(), this._markForUpdateUvDirty();
        }, r.onDestroy = function () {
          this.destroyRenderData(), t.prototype.onDestroy.call(this);
        }, r.changeSpriteFrameFromAtlas = function (t) {
          if (this._atlas) {
            var e = this._atlas.getSpriteFrame(t);

            this.spriteFrame = e;
          } else console.warn("SpriteAtlas is null.");
        }, r.changeMaterialForDefine = function () {
          var t,
              e = this._instanceMaterialType;
          this._spriteFrame && (t = this._spriteFrame.texture);
          var i = !1;

          if (t instanceof S) {
            var r = t.getPixelFormat();
            i = r === F.RGBA_ETC1 || r === F.RGB_A_PVRTC_4BPPV1 || r === F.RGB_A_PVRTC_2BPPV1;
          }

          i && this.grayscale ? this._instanceMaterialType = V.USE_ALPHA_SEPARATED_AND_GRAY : i ? this._instanceMaterialType = V.USE_ALPHA_SEPARATED : this.grayscale ? this._instanceMaterialType = V.GRAYSCALE : this._instanceMaterialType = V.ADD_COLOR_AND_TEXTURE, e !== this._instanceMaterialType && this.updateMaterial();
        }, r._updateBuiltinMaterial = function () {
          var e = t.prototype._updateBuiltinMaterial.call(this);

          if (this.spriteFrame && this.spriteFrame.texture instanceof L) {
            var i = k({
              SAMPLE_FROM_RT: !0
            }, e.passes[0].defines),
                r = new H();
            r.initialize({
              effectAsset: e.effectAsset,
              defines: i
            }), e = r;
          }

          return e;
        }, r._render = function (t) {
          t.commitComp(this, this._spriteFrame, this._assembler, null);
        }, r._canRender = function () {
          if (!t.prototype._canRender.call(this)) return !1;
          var e = this._spriteFrame;
          return !(!e || !e.texture);
        }, r._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this.destroyRenderData(), this._assembler = t), this._renderData || this._assembler && this._assembler.createData && (this._renderData = this._assembler.createData(this), this._renderData.material = this.getRenderMaterial(0), this.markForUpdateRenderData(), this._colorDirty = !0, this._updateColor());
        }, r._applySpriteSize = function () {
          if (this._spriteFrame) {
            if (!this._spriteFrame.isDefault) if (Si.RAW === this._sizeMode) {
              var t = this._spriteFrame.originalSize;

              this.node._uiProps.uiTransformComp.setContentSize(t);
            } else if (Si.TRIMMED === this._sizeMode) {
              var e = this._spriteFrame.getRect();

              this.node._uiProps.uiTransformComp.setContentSize(e.width, e.height);
            }

            this._activateMaterial();
          }
        }, r._resized = function () {}, r._activateMaterial = function () {
          var t = this._spriteFrame,
              e = this.getRenderMaterial(0);
          t && e && this.markForUpdateRenderData(), this._renderData && (this._renderData.material = e);
        }, r._applySpriteFrame = function (t) {
          var e = this._spriteFrame;
          this._renderData && (this._renderData.uvDirty || (this._renderData.uvDirty = !t || !e || t.uvHash !== e.uvHash), this._renderDataFlag = this._renderData.uvDirty);
          var i = !1;
          e && (t && t.texture === e.texture || (i = !0), i && this.changeMaterialForDefine(), this._applySpriteSize());
        }, r._markForUpdateUvDirty = function () {
          this._renderData && (this._renderData.uvDirty = !0, this._renderDataFlag = !0);
        }, p(e, [{
          key: "spriteAtlas",
          get: function get() {
            return this._atlas;
          },
          set: function set(t) {
            this._atlas !== t && (this._atlas = t);
          }
        }, {
          key: "spriteFrame",
          get: function get() {
            return this._spriteFrame;
          },
          set: function set(t) {
            if (this._spriteFrame !== t) {
              var e = this._spriteFrame;
              this._spriteFrame = t, this.markForUpdateRenderData(!1), this._applySpriteFrame(e);
            }
          }
        }, {
          key: "type",
          get: function get() {
            return this._type;
          },
          set: function set(t) {
            this._type !== t && (this._type = t, this._flushAssembler());
          }
        }, {
          key: "fillType",
          get: function get() {
            return this._fillType;
          },
          set: function set(t) {
            this._fillType !== t && (t === Ri.RADIAL || this._fillType === Ri.RADIAL ? (this.destroyRenderData(), this._renderData = null) : this._renderData && this.markForUpdateRenderData(!0)), this._fillType = t, this._flushAssembler();
          }
        }, {
          key: "fillCenter",
          get: function get() {
            return this._fillCenter;
          },
          set: function set(t) {
            this._fillCenter.x = t.x, this._fillCenter.y = t.y, this._type === wi.FILLED && this._renderData && this.markForUpdateRenderData();
          }
        }, {
          key: "fillStart",
          get: function get() {
            return this._fillStart;
          },
          set: function set(t) {
            this._fillStart = j(t, -1, 1), this._type === wi.FILLED && this._renderData && (this.markForUpdateRenderData(), this._renderData.uvDirty = !0);
          }
        }, {
          key: "fillRange",
          get: function get() {
            return this._fillRange;
          },
          set: function set(t) {
            this._fillRange = j(t, -1, 1), this._type === wi.FILLED && this._renderData && (this.markForUpdateRenderData(), this._renderData.uvDirty = !0);
          }
        }, {
          key: "trim",
          get: function get() {
            return this._isTrimmedMode;
          },
          set: function set(t) {
            this._isTrimmedMode !== t && (this._isTrimmedMode = t, this._type === wi.SIMPLE && this._renderData && this.markForUpdateRenderData(!0));
          }
        }, {
          key: "grayscale",
          get: function get() {
            return this._useGrayscale;
          },
          set: function set(t) {
            this._useGrayscale !== t && (this._useGrayscale = t, this._instanceMaterialType = !0 === t ? V.GRAYSCALE : V.ADD_COLOR_AND_TEXTURE, this.updateMaterial());
          }
        }, {
          key: "sizeMode",
          get: function get() {
            return this._sizeMode;
          },
          set: function set(t) {
            this._sizeMode !== t && (this._sizeMode = t, t !== Si.CUSTOM && this._applySpriteSize());
          }
        }]), e;
      }(X), xi.FillType = Ri, xi.Type = wi, xi.SizeMode = Si, xi.EventType = Oi, a((ci = Ti).prototype, "spriteAtlas", [Ve, Xe, Ye], Object.getOwnPropertyDescriptor(ci.prototype, "spriteAtlas"), ci.prototype), a(ci.prototype, "spriteFrame", [Ze, $e, Ke], Object.getOwnPropertyDescriptor(ci.prototype, "spriteFrame"), ci.prototype), a(ci.prototype, "type", [Je, qe, Qe], Object.getOwnPropertyDescriptor(ci.prototype, "type"), ci.prototype), a(ci.prototype, "fillType", [ti, ei], Object.getOwnPropertyDescriptor(ci.prototype, "fillType"), ci.prototype), a(ci.prototype, "fillCenter", [ii], Object.getOwnPropertyDescriptor(ci.prototype, "fillCenter"), ci.prototype), a(ci.prototype, "fillStart", [ri, ni], Object.getOwnPropertyDescriptor(ci.prototype, "fillStart"), ci.prototype), a(ci.prototype, "fillRange", [ai, si], Object.getOwnPropertyDescriptor(ci.prototype, "fillRange"), ci.prototype), a(ci.prototype, "trim", [oi, li], Object.getOwnPropertyDescriptor(ci.prototype, "trim"), ci.prototype), a(ci.prototype, "grayscale", [f], Object.getOwnPropertyDescriptor(ci.prototype, "grayscale"), ci.prototype), a(ci.prototype, "sizeMode", [hi, ui, fi], Object.getOwnPropertyDescriptor(ci.prototype, "sizeMode"), ci.prototype), _i = a(ci.prototype, "_spriteFrame", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), yi = a(ci.prototype, "_type", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return wi.SIMPLE;
        }
      }), di = a(ci.prototype, "_fillType", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ri.HORIZONTAL;
        }
      }), gi = a(ci.prototype, "_sizeMode", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Si.TRIMMED;
        }
      }), mi = a(ci.prototype, "_fillCenter", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new B(0, 0);
        }
      }), Di = a(ci.prototype, "_fillStart", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), bi = a(ci.prototype, "_fillRange", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), vi = a(ci.prototype, "_isTrimmedMode", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Fi = a(ci.prototype, "_useGrayscale", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Ai = a(ci.prototype, "_atlas", [u], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), pi = ci)) || pi) || pi) || pi) || pi));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/sprite-frame-1c023836.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js"], function (t) {
  "use strict";

  var e, i, s, r, n, h, a, u, _, c, o, l, f, x;

  return {
    setters: [function (t) {
      e = t.ec, i = t.fJ, s = t.am, r = t.dn, n = t.l, h = t.e2, a = t.ef, u = t.f, _ = t.cU, c = t.ch, o = t.c3, l = t.cf, f = t.df, x = t.dm;
    }],
    execute: function execute() {
      var d = function () {
        function t(t, e) {
          this._texture = void 0, this._width = void 0, this._height = void 0, this._x = void 0, this._y = void 0, this._nexty = void 0, this._innerTextureInfos = {}, this._innerSpriteFrames = void 0, this._count = void 0;
          var i = new g();
          i.initWithSize(t, e), this._texture = i, this._width = t, this._height = e, this._x = 2, this._y = 2, this._nexty = 2, this._innerTextureInfos = {}, this._innerSpriteFrames = [], this._count = 0;
        }

        var e = t.prototype;
        return e.insertSpriteFrame = function (t) {
          var e = t.rect,
              i = t.texture,
              s = this._innerTextureInfos[i.getId()],
              r = e.x,
              h = e.y;

          if (s) r += s.x, h += s.y;else {
            var a = i.width,
                u = i.height;
            if (this._x + a + 2 > this._width && (this._x = 2, this._y = this._nexty), this._y + u + 2 > this._nexty && (this._nexty = this._y + u + 2), this._nexty > this._height) return null;
            n.internal.dynamicAtlasManager.textureBleeding && ((a <= 8 || u <= 8) && (this._texture.drawTextureAt(i.image, this._x - 1, this._y - 1), this._texture.drawTextureAt(i.image, this._x - 1, this._y + 1), this._texture.drawTextureAt(i.image, this._x + 1, this._y - 1), this._texture.drawTextureAt(i.image, this._x + 1, this._y + 1)), this._texture.drawTextureAt(i.image, this._x - 1, this._y), this._texture.drawTextureAt(i.image, this._x + 1, this._y), this._texture.drawTextureAt(i.image, this._x, this._y - 1), this._texture.drawTextureAt(i.image, this._x, this._y + 1)), this._texture.drawTextureAt(i.image, this._x, this._y), this._innerTextureInfos[i.getId()] = {
              x: this._x,
              y: this._y,
              texture: i
            }, this._count++, r += this._x, h += this._y, this._x += a + 2;
          }
          var _ = {
            x: r,
            y: h,
            texture: this._texture
          };
          return this._innerSpriteFrames.push(t), _;
        }, e.deleteInnerTexture = function (t) {
          t && this._innerTextureInfos[t.getId()] && (delete this._innerTextureInfos[t.getId()], this._count--);
        }, e.isEmpty = function () {
          return this._count <= 0;
        }, e.reset = function () {
          this._x = 2, this._y = 2, this._nexty = 2;

          for (var t = this._innerSpriteFrames, e = 0, i = t.length; e < i; e++) {
            var s = t[e];
            s.isValid && s._resetDynamicAtlasFrame();
          }

          this._innerSpriteFrames.length = 0, this._innerTextureInfos = {};
        }, e.destroy = function () {
          this.reset(), this._texture.destroy();
        }, t;
      }(),
          g = function (t) {
        function r() {
          return t.apply(this, arguments) || this;
        }

        e(r, t);
        var n = r.prototype;
        return n.initWithSize = function (t, e, s) {
          void 0 === s && (s = i.RGBA8888), this.reset({
            width: t,
            height: e,
            format: s
          });
        }, n.drawTextureAt = function (t, e, i) {
          var r = this.getGFXTexture();

          if (t && r) {
            var n = this._getGFXDevice();

            if (n) {
              var h = new s();
              h.texOffset.x = e, h.texOffset.y = i, h.texExtent.width = t.width, h.texExtent.height = t.height, n.copyTexImagesToTexture([t.data], r, [h]);
            } else console.warn("Unable to get device");
          }
        }, r;
      }(r),
          v = function () {
        function t() {
          this._atlases = [], this._atlasIndex = -1, this._maxAtlasCount = 5, this._textureSize = 2048, this._maxFrameSize = 512, this._textureBleeding = !0, this._enabled = !1;
        }

        var e = t.prototype;
        return e.newAtlas = function () {
          var t = this._atlases[++this._atlasIndex];
          return t || (t = new d(this._textureSize, this._textureSize), this._atlases.push(t)), t;
        }, e.beforeSceneLoad = function () {
          this.reset();
        }, e.insertSpriteFrame = function (t) {
          if (!this._enabled || this._atlasIndex === this._maxAtlasCount || !t || t._original) return null;
          if (!t.packable) return null;
          var e = this._atlases[this._atlasIndex];
          e || (e = this.newAtlas());
          var i = e.insertSpriteFrame(t);
          return i || this._atlasIndex === this._maxAtlasCount ? i : (e = this.newAtlas()).insertSpriteFrame(t);
        }, e.reset = function () {
          for (var t = 0, e = this._atlases.length; t < e; t++) {
            this._atlases[t].destroy();
          }

          this._atlases.length = 0, this._atlasIndex = -1;
        }, e.deleteAtlasSpriteFrame = function (t) {
          if (t._original) {
            var e = t._original._texture;
            this.deleteAtlasTexture(e);
          }
        }, e.deleteAtlasTexture = function (t) {
          if (t) for (var e = this._atlases.length - 1; e >= 0; e--) {
            this._atlases[e].deleteInnerTexture(t), this._atlases[e].isEmpty() && (this._atlases[e].destroy(), this._atlases.splice(e, 1), this._atlasIndex--);
          }
        }, e.packToDynamicAtlas = function (t, e) {
          if (!e._original && e.packable) {
            var i = this.insertSpriteFrame(e);
            i && e._setDynamicAtlasFrame(i);
          }
        }, h(t, [{
          key: "enabled",
          get: function get() {
            return this._enabled;
          },
          set: function set(t) {
            this._enabled !== t && (t ? (this.reset(), n.director.on(n.Director.EVENT_BEFORE_SCENE_LAUNCH, this.beforeSceneLoad, this)) : (this.reset(), n.director.off(n.Director.EVENT_BEFORE_SCENE_LAUNCH, this.beforeSceneLoad, this)), this._enabled = t);
          }
        }, {
          key: "maxAtlasCount",
          get: function get() {
            return this._maxAtlasCount;
          },
          set: function set(t) {
            this._maxAtlasCount = t;
          }
        }, {
          key: "atlasCount",
          get: function get() {
            return this._atlases.length;
          }
        }, {
          key: "textureBleeding",
          get: function get() {
            return this._textureBleeding;
          },
          set: function set(t) {
            this._textureBleeding = t;
          }
        }, {
          key: "textureSize",
          get: function get() {
            return this._textureSize;
          },
          set: function set(t) {
            this._textureSize = t;
          }
        }, {
          key: "maxFrameSize",
          get: function get() {
            return this._maxFrameSize;
          },
          set: function set(t) {
            this._maxFrameSize = t;
          }
        }]), t;
      }();

      v.instance = void 0;
      var p,
          y = t("d", v.instance = new v());
      n.internal.dynamicAtlasManager = y;
      var m = [{
        u: 0,
        v: 0
      }, {
        u: 0,
        v: 0
      }, {
        u: 0,
        v: 0
      }, {
        u: 0,
        v: 0
      }],
          S = t("S", a("cc.SpriteFrame")(p = function (t) {
        function i() {
          var e;
          return (e = t.call(this) || this).vertices = null, e.uv = [], e.uvHash = 0, e.unbiasUV = [], e.uvSliced = [], e._rect = new c(), e._offset = new o(), e._originalSize = new l(), e._rotated = !1, e._capInsets = [0, 0, 0, 0], e._atlasUuid = "", e._texture = void 0, e._isFlipUVY = !1, e._isFlipUVX = !1, e._original = null, e._packable = !0, e;
        }

        e(i, t), i.createWithImage = function (t) {
          var e = t instanceof x ? t : new x(t),
              s = new r();
          s.image = e;
          var n = new i();
          return n.texture = s, n;
        };
        var s = i.prototype;
        return s.textureLoaded = function () {
          return !!this.texture;
        }, s.isRotated = function () {
          return this._rotated;
        }, s.setRotated = function (t) {
          this.rotated = t;
        }, s.getRect = function (t) {
          return t ? (t.set(this._rect), t) : this._rect.clone();
        }, s.setRect = function (t) {
          this.rect = t;
        }, s.getOriginalSize = function (t) {
          return t ? (t.set(this._originalSize), t) : this._originalSize.clone();
        }, s.setOriginalSize = function (t) {
          this.originalSize = t;
        }, s.getOffset = function (t) {
          return t ? (t.set(this._offset), t) : this._offset.clone();
        }, s.setOffset = function (t) {
          this.offset = t;
        }, s.getGFXTexture = function () {
          return this._texture.getGFXTexture();
        }, s.getGFXSampler = function () {
          return this._texture.getGFXSampler();
        }, s.getHash = function () {
          return this._texture.getHash();
        }, s.getSamplerHash = function () {
          return this._texture.getSamplerHash();
        }, s.reset = function (t, e) {
          void 0 === e && (e = !1);
          var i = !1;
          e && (this._originalSize.set(0, 0), this._rect.set(0, 0, 0, 0), this._offset.set(0, 0), this._capInsets = [0, 0, 0, 0], this._rotated = !1, i = !0), t && (t.texture && (this._rect.x = this._rect.y = 0, this._rect.width = t.texture.width, this._rect.height = t.texture.height, this._refreshTexture(t.texture), this.checkRect(this._texture)), t.originalSize && this._originalSize.set(t.originalSize), t.rect && this._rect.set(t.rect), t.offset && this._offset.set(t.offset), void 0 !== t.borderTop && (this._capInsets[1] = t.borderTop), void 0 !== t.borderBottom && (this._capInsets[3] = t.borderBottom), void 0 !== t.borderLeft && (this._capInsets[0] = t.borderLeft), void 0 !== t.borderRight && (this._capInsets[2] = t.borderRight), void 0 !== t.isRotate && (this._rotated = !!t.isRotate), void 0 !== t.isFlipUv && (this._isFlipUVY = !!t.isFlipUv), i = !0), i && this.texture && this._calculateUV();
        }, s.checkRect = function (t) {
          var e = this._rect,
              i = e.x,
              s = e.y;
          return this._rotated ? (i += e.height, s += e.width) : (i += e.width, s += e.height), i > t.width ? (u(3300, this.name + "/" + t.name, i, t.width), !1) : !(s > t.height && (u(3301, this.name + "/" + t.name, s, t.height), 1));
        }, s.destroy = function () {
          return this._packable && y && y.deleteAtlasSpriteFrame(this), t.prototype.destroy.call(this);
        }, s._calculateSlicedUV = function () {
          var t = this._rect,
              e = this.texture,
              i = e.width,
              s = e.height,
              r = this._capInsets[0],
              n = this._capInsets[2],
              h = t.width - r - n,
              a = this._capInsets[1],
              u = this._capInsets[3],
              _ = t.height - a - u,
              c = this.uvSliced;

          if (c.length = 0, this._rotated) {
            m[0].u = t.x / i, m[1].u = (t.x + u) / i, m[2].u = (t.x + u + _) / i, m[3].u = (t.x + t.height) / i, m[3].v = t.y / s, m[2].v = (t.y + r) / s, m[1].v = (t.y + r + h) / s, m[0].v = (t.y + t.width) / s;

            for (var o = 0; o < 4; ++o) {
              for (var l = m[o], f = 0; f < 4; ++f) {
                var x = m[3 - f];
                c.push({
                  u: l.u,
                  v: x.v
                });
              }
            }
          } else {
            m[0].u = t.x / i, m[1].u = (t.x + r) / i, m[2].u = (t.x + r + h) / i, m[3].u = (t.x + t.width) / i, m[3].v = t.y / s, m[2].v = (t.y + a) / s, m[1].v = (t.y + a + _) / s, m[0].v = (t.y + t.height) / s;

            for (var d = 0; d < 4; ++d) {
              for (var g = m[d], v = 0; v < 4; ++v) {
                var p = m[v];
                c.push({
                  u: p.u,
                  v: g.v
                });
              }
            }
          }
        }, s._calculateUV = function () {
          var t = this._rect,
              e = this.uv,
              i = this.unbiasUV,
              s = this.texture,
              r = s.width,
              n = s.height;

          if (this._rotated) {
            var h = 0 === r ? 0 : t.x / r,
                a = 0 === r ? 1 : (t.x + t.height) / r,
                u = 0 === n ? 0 : t.y / n,
                c = 0 === n ? 1 : (t.y + t.width) / n;
            this._isFlipUVX && this._isFlipUVY ? (e[0] = a, e[1] = c, e[2] = a, e[3] = u, e[4] = h, e[5] = c, e[6] = h, e[7] = u) : this._isFlipUVX ? (e[0] = a, e[1] = u, e[2] = a, e[3] = c, e[4] = h, e[5] = u, e[6] = h, e[7] = c) : this._isFlipUVY ? (e[0] = h, e[1] = c, e[2] = h, e[3] = u, e[4] = a, e[5] = c, e[6] = a, e[7] = u) : (e[0] = h, e[1] = u, e[2] = h, e[3] = c, e[4] = a, e[5] = u, e[6] = a, e[7] = c);
            var o = 0 === r ? 0 : t.x / r,
                l = 0 === r ? 1 : (t.x + t.height) / r,
                f = 0 === n ? 0 : t.y / n,
                x = 0 === n ? 1 : (t.y + t.width) / n;
            this._isFlipUVX && this._isFlipUVY ? (i[0] = l, i[1] = x, i[2] = l, i[3] = f, i[4] = o, i[5] = x, i[6] = o, i[7] = f) : this._isFlipUVX ? (i[0] = l, i[1] = f, i[2] = l, i[3] = x, i[4] = o, i[5] = f, i[6] = o, i[7] = x) : this._isFlipUVY ? (i[0] = o, i[1] = x, i[2] = o, i[3] = f, i[4] = l, i[5] = x, i[6] = l, i[7] = f) : (i[0] = o, i[1] = f, i[2] = o, i[3] = x, i[4] = l, i[5] = f, i[6] = l, i[7] = x);
          } else {
            var d = 0 === r ? 0 : t.x / r,
                g = 0 === r ? 1 : (t.x + t.width) / r,
                v = 0 === n ? 1 : (t.y + t.height) / n,
                p = 0 === n ? 0 : t.y / n;
            this._isFlipUVX && this._isFlipUVY ? (e[0] = g, e[1] = p, e[2] = d, e[3] = p, e[4] = g, e[5] = v, e[6] = d, e[7] = v) : this._isFlipUVX ? (e[0] = g, e[1] = v, e[2] = d, e[3] = v, e[4] = g, e[5] = p, e[6] = d, e[7] = p) : this._isFlipUVY ? (e[0] = d, e[1] = p, e[2] = g, e[3] = p, e[4] = d, e[5] = v, e[6] = g, e[7] = v) : (e[0] = d, e[1] = v, e[2] = g, e[3] = v, e[4] = d, e[5] = p, e[6] = g, e[7] = p);
            var y = 0 === r ? 0 : t.x / r,
                m = 0 === r ? 1 : (t.x + t.width) / r,
                S = 0 === n ? 1 : (t.y + t.height) / n,
                w = 0 === n ? 0 : t.y / n;
            this._isFlipUVX && this._isFlipUVY ? (i[0] = m, i[1] = w, i[2] = y, i[3] = w, i[4] = m, i[5] = S, i[6] = y, i[7] = S) : this._isFlipUVX ? (i[0] = m, i[1] = S, i[2] = y, i[3] = S, i[4] = m, i[5] = w, i[6] = y, i[7] = w) : this._isFlipUVY ? (i[0] = y, i[1] = w, i[2] = m, i[3] = w, i[4] = y, i[5] = S, i[6] = m, i[7] = S) : (i[0] = y, i[1] = S, i[2] = m, i[3] = S, i[4] = y, i[5] = w, i[6] = m, i[7] = w);
          }

          for (var U = "", F = 0; F < e.length; F++) {
            U += e[F];
          }

          this.uvHash = _(U, 666);
          var V = this.vertices;

          if (V) {
            V.nu.length = 0, V.nv.length = 0;

            for (var I = 0; I < V.u.length; I++) {
              V.nu[I] = V.u[I] / r, V.nv[I] = V.v[I] / n;
            }
          }

          this._calculateSlicedUV();
        }, s._setDynamicAtlasFrame = function (t) {
          t && (this._original = {
            _texture: this._texture,
            _x: this._rect.x,
            _y: this._rect.y
          }, this._texture = t.texture, this._rect.x = t.x, this._rect.y = t.y, this._calculateUV());
        }, s._resetDynamicAtlasFrame = function () {
          this._original && (this._rect.x = this._original._x, this._rect.y = this._original._y, this._texture = this._original._texture, this._original = null, this._calculateUV());
        }, s._checkPackable = function () {
          var t = y;

          if (t) {
            var e = this._texture;

            if (e instanceof r && !e.isCompressed) {
              var i = this.width,
                  s = this.height;
              !e.image || i > t.maxFrameSize || s > t.maxFrameSize ? this._packable = !1 : e.image && e.image instanceof HTMLCanvasElement && (this._packable = !0);
            } else this._packable = !1;
          }
        }, s._serialize = function () {
          return null;
        }, s._deserialize = function (t) {
          var e = t,
              i = e.rect;
          i && (this._rect = new c(i.x, i.y, i.width, i.height));
          var s = e.offset;
          e.offset && (this._offset = new o(s.x, s.y));
          var r = e.originalSize;
          e.originalSize && (this._originalSize = new l(r.width, r.height)), this._rotated = !!e.rotated, this._name = e.name, this._packable = !!e.packable;
          var n = e.capInsets;
          n && (this._capInsets[0] = n[0], this._capInsets[1] = n[1], this._capInsets[2] = n[2], this._capInsets[3] = n[3]), this.vertices = e.vertices, this.vertices && (this.vertices.nu = [], this.vertices.nv = []);
        }, s.clone = function () {
          var t,
              e,
              s,
              r,
              n,
              h,
              a,
              u,
              _ = new i(),
              c = this.vertices;

          return _.vertices = c ? {
            x: c.x,
            y: c.y,
            triangles: c.triangles,
            nu: null === (t = c.nu) || void 0 === t ? void 0 : t.slice(0),
            u: null === (e = c.u) || void 0 === e ? void 0 : e.slice(0),
            nv: null === (s = c.nv) || void 0 === s ? void 0 : s.slice(0),
            v: null === (r = c.v) || void 0 === r ? void 0 : r.slice(0)
          } : null, (n = _.uv).splice.apply(n, [0, _.uv.length].concat(this.uv)), _.uvHash = this.uvHash, (h = _.unbiasUV).splice.apply(h, [0, _.unbiasUV.length].concat(this.unbiasUV)), (a = _.uvSliced).splice.apply(a, [0, _.uvSliced.length].concat(this.uvSliced)), _._rect.set(this._rect), _._offset.set(this._offset), _._originalSize.set(this._originalSize), _._rotated = this._rotated, (u = _._capInsets).splice.apply(u, [0, _._capInsets.length].concat(this._capInsets)), _._atlasUuid = this._atlasUuid, _._texture = this._texture, _._isFlipUVX = this._isFlipUVX, _._isFlipUVY = this._isFlipUVY, _;
        }, s._refreshTexture = function (t) {
          this._texture = t;
          var e = this._texture,
              i = {},
              s = !1;
          0 !== this._rect.width && 0 !== this._rect.height && this.checkRect(e) || (i.rect = new c(0, 0, e.width, e.height), s = !0), (0 === this._originalSize.width || 0 === this._originalSize.height || s) && (i.originalSize = new l(e.width, e.height), s = !0), s && (this.reset(i), this.onLoaded()), this._checkPackable();
        }, s.initDefault = function (e) {
          t.prototype.initDefault.call(this, e);
          var i = new r();
          i.initDefault(), this._refreshTexture(i), this._calculateUV();
        }, s.validate = function () {
          return this._texture && this._rect && 0 !== this._rect.width && 0 !== this._rect.height;
        }, h(i, [{
          key: "insetTop",
          get: function get() {
            return this._capInsets[1];
          },
          set: function set(t) {
            this._capInsets[1] !== t && (this._capInsets[1] = t, this._texture && this._calculateSlicedUV());
          }
        }, {
          key: "insetBottom",
          get: function get() {
            return this._capInsets[3];
          },
          set: function set(t) {
            this._capInsets[3] !== t && (this._capInsets[3] = t, this._texture && this._calculateSlicedUV());
          }
        }, {
          key: "insetLeft",
          get: function get() {
            return this._capInsets[0];
          },
          set: function set(t) {
            this._capInsets[0] !== t && (this._capInsets[0] = t, this._texture && this._calculateSlicedUV());
          }
        }, {
          key: "insetRight",
          get: function get() {
            return this._capInsets[2];
          },
          set: function set(t) {
            this._capInsets[2] !== t && (this._capInsets[2] = t, this._texture && this._calculateSlicedUV());
          }
        }, {
          key: "rect",
          get: function get() {
            return this._rect;
          },
          set: function set(t) {
            this._rect.equals(t) || (this._rect.set(t), this._texture && this._calculateUV());
          }
        }, {
          key: "originalSize",
          get: function get() {
            return this._originalSize;
          },
          set: function set(t) {
            this._originalSize.equals(t) || (this._originalSize.set(t), this._texture && this._calculateUV());
          }
        }, {
          key: "offset",
          get: function get() {
            return this._offset;
          },
          set: function set(t) {
            this._offset.set(t);
          }
        }, {
          key: "rotated",
          get: function get() {
            return this._rotated;
          },
          set: function set(t) {
            this._rotated !== t && (this._rotated = t, this._texture && this._calculateUV());
          }
        }, {
          key: "texture",
          get: function get() {
            return this._texture;
          },
          set: function set(t) {
            t ? this.reset({
              texture: t
            }, !0) : console.warn("Error Texture in " + this.name);
          }
        }, {
          key: "atlasUuid",
          get: function get() {
            return this._atlasUuid;
          },
          set: function set(t) {
            this._atlasUuid = t;
          }
        }, {
          key: "width",
          get: function get() {
            return this._texture.width;
          }
        }, {
          key: "height",
          get: function get() {
            return this._texture.height;
          }
        }, {
          key: "_textureSource",
          set: function set(t) {
            window.Build ? this._texture = t : t && (this._refreshTexture(t), this._calculateUV());
          }
        }, {
          key: "flipUVX",
          get: function get() {
            return this._isFlipUVX;
          },
          set: function set(t) {
            this._isFlipUVX = t, this._calculateUV();
          }
        }, {
          key: "flipUVY",
          get: function get() {
            return this._isFlipUVY;
          },
          set: function set(t) {
            this._isFlipUVY = t, this._calculateUV();
          }
        }, {
          key: "packable",
          get: function get() {
            return this._packable;
          },
          set: function set(t) {
            this._packable = t;
          }
        }, {
          key: "original",
          get: function get() {
            return this._original;
          }
        }]), i;
      }(f)) || p);
      n.SpriteFrame = S;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/terrain-asset-42611908.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js"], function (t) {
  "use strict";

  var e, i, n, r, s, h, a, o;
  return {
    setters: [function (t) {
      e = t.ef, i = t.eg, n = t.ec, r = t.e2, s = t.ei, h = t.eh, a = t.ed, o = t.df;
    }],
    execute: function execute() {
      t("l", 4), t("i", 4), t("k", 256);

      var l,
          f,
          u,
          g,
          _,
          c,
          y,
          w,
          I,
          b,
          v,
          d,
          p,
          k = t("b", 32),
          S = (t("a", 33), t("c", 8), t("g", 32768)),
          z = t("h", 1 / 512),
          M = (t("f", -S * z), t("e", (65535 - S) * z), t("m", 0), t("n", 1), t("o", 2), t("p", 3), t("q", 16842753)),
          m = t("r", 16842754),
          B = t("s", 16842755),
          V = t("t", 16842756),
          A = t("j", 16842757),
          C = t("u", 16843025),
          F = function () {
        function t() {
          this.length = 0, this.buffer = new Uint8Array(2048), this._buffView = new DataView(this.buffer.buffer), this._seekPos = 0;
        }

        var e = t.prototype;
        return e.reserve = function (t) {
          if (!(this.buffer.byteLength > t)) {
            for (var e = this.buffer.byteLength; e < t;) {
              e += e;
            }

            for (var i = new Uint8Array(e), n = 0; n < this.length; ++n) {
              i[n] = this.buffer[n];
            }

            this.buffer = i, this._buffView = new DataView(this.buffer.buffer);
          }
        }, e.assign = function (t) {
          this.buffer = t, this.length = t.length, this._seekPos = t.byteOffset, this._buffView = new DataView(t.buffer);
        }, e.writeInt8 = function (t) {
          this.reserve(this.length + 1), this._buffView.setInt8(this.length, t), this.length += 1;
        }, e.writeInt16 = function (t) {
          this.reserve(this.length + 2), this._buffView.setInt16(this.length, t, !0), this.length += 2;
        }, e.writeInt32 = function (t) {
          this.reserve(this.length + 4), this._buffView.setInt32(this.length, t, !0), this.length += 4;
        }, e.writeIntArray = function (t) {
          this.reserve(this.length + 4 * t.length);

          for (var e = 0; e < t.length; ++e) {
            this._buffView.setInt32(this.length + 4 * e, t[e], !0);
          }

          this.length += 4 * t.length;
        }, e.writeFloat = function (t) {
          this.reserve(this.length + 4), this._buffView.setFloat32(this.length, t, !0), this.length += 4;
        }, e.writeFloatArray = function (t) {
          this.reserve(this.length + 4 * t.length);

          for (var e = 0; e < t.length; ++e) {
            this._buffView.setFloat32(this.length + 4 * e, t[e], !0);
          }

          this.length += 4 * t.length;
        }, e.writeString = function (t) {
          this.reserve(this.length + t.length + 4), this._buffView.setInt32(this.length, t.length, !0);

          for (var e = 0; e < t.length; ++e) {
            this._buffView.setInt8(this.length + 4 + e, t.charCodeAt(e));
          }

          this.length += t.length + 4;
        }, e.readInt8 = function () {
          var t = this._buffView.getInt8(this._seekPos);

          return this._seekPos += 1, t;
        }, e.readInt16 = function () {
          var t = this._buffView.getInt16(this._seekPos, !0);

          return this._seekPos += 2, t;
        }, e.readInt = function () {
          var t = this._buffView.getInt32(this._seekPos, !0);

          return this._seekPos += 4, t;
        }, e.readIntArray = function (t) {
          for (var e = 0; e < t.length; ++e) {
            t[e] = this._buffView.getInt32(this._seekPos + 4 * e, !0);
          }

          return this._seekPos += 4 * t.length, t;
        }, e.readFloat = function () {
          var t = this._buffView.getFloat32(this._seekPos, !0);

          return this._seekPos += 4, t;
        }, e.readFloatArray = function (t) {
          for (var e = 0; e < t.length; ++e) {
            t[e] = this._buffView.getFloat32(this._seekPos + 4 * e, !0);
          }

          return this._seekPos += 4 * t.length, t;
        }, e.readString = function () {
          for (var t = this.readInt(), e = "", i = 0; i < t; ++i) {
            e += String.fromCharCode(this.readInt8());
          }

          return e;
        }, t;
      }(),
          P = (t("d", e("cc.TerrainLayerInfo")((u = i((f = function f() {
        h(this, "slot", u, this), h(this, "tileSize", g, this), h(this, "detailMap", _, this), h(this, "normalMap", c, this), h(this, "roughness", y, this), h(this, "metallic", w, this);
      }).prototype, "slot", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), g = i(f.prototype, "tileSize", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), _ = i(f.prototype, "detailMap", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), c = i(f.prototype, "normalMap", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), y = i(f.prototype, "roughness", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), w = i(f.prototype, "metallic", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), l = f)) || l), t("v", e("cc.TerrainLayerBinaryInfo")(I = function I() {
        this.slot = 0, this.tileSize = 1, this.roughness = 1, this.metallic = 0, this.detailMapId = "", this.normalMapId = "";
      }) || I));

      t("T", e("cc.TerrainAsset")((p = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._version = 0, e._data = null, e._tileSize = 1, e._blockCount = [1, 1], e._weightMapSize = 128, e._lightMapSize = 128, e._heights = new Uint16Array(), e._weights = new Uint8Array(), e._layerBuffer = [-1, -1, -1, -1], e._layerBinaryInfos = [], h(e, "_layerInfos", d, a(e)), e;
        }

        n(e, t);
        var i = e.prototype;
        return i.getLayer = function (t, e, i) {
          var n = 4 * (e * this.blockCount[0] + t) + i;
          return t < this.blockCount[0] && e < this.blockCount[1] && n < this._layerBuffer.length ? this._layerBuffer[n] : -1;
        }, i.getHeight = function (t, e) {
          var i = this._blockCount[0] * k + 1;
          return (this._heights[e * i + t] - S) * z;
        }, i.getVertexCountI = function () {
          return this._blockCount.length < 1 ? 0 : this._blockCount[0] * k + 1;
        }, i.getVertexCountJ = function () {
          return this._blockCount.length < 2 ? 0 : this._blockCount[1] * k + 1;
        }, i._setNativeData = function (t) {
          this._data = t;
        }, i._loadNativeData = function (t) {
          if (!t || 0 === t.length) return !1;
          var e = new F();
          if (e.assign(t), this._version = e.readInt(), this._version === C) return !0;
          if (this._version !== M && this._version !== m && this._version !== B && this._version !== V && this._version !== A) return !1;
          this.tileSize = e.readFloat(), e.readIntArray(this._blockCount), this.weightMapSize = e.readInt16(), this.lightMapSize = e.readInt16();
          var i = e.readInt();
          this.heights = new Uint16Array(i);

          for (var n = 0; n < this.heights.length; ++n) {
            this.heights[n] = e.readInt16();
          }

          var r = e.readInt();
          this.weights = new Uint8Array(r);

          for (var s = 0; s < this.weights.length; ++s) {
            this.weights[s] = e.readInt8();
          }

          if (this._version >= m) {
            var h = e.readInt();
            this.layerBuffer = new Array(h);

            for (var a = 0; a < this.layerBuffer.length; ++a) {
              this.layerBuffer[a] = e.readInt16();
            }
          }

          if (this._version >= B) {
            var o = e.readInt();
            this._layerBinaryInfos = new Array(o);

            for (var l = 0; l < this._layerBinaryInfos.length; ++l) {
              this._layerBinaryInfos[l] = new P(), this._layerBinaryInfos[l].slot = e.readInt(), this._layerBinaryInfos[l].tileSize = e.readFloat(), this._layerBinaryInfos[l].detailMapId = e.readString(), this._version >= V && (this._layerBinaryInfos[l].normalMapId = e.readString(), this._layerBinaryInfos[l].roughness = e.readFloat(), this._layerBinaryInfos[l].metallic = e.readFloat());
            }
          }

          return !0;
        }, i._exportNativeData = function () {
          var t = new F();
          t.writeInt32(A), t.writeFloat(this.tileSize), t.writeIntArray(this._blockCount), t.writeInt16(this.weightMapSize), t.writeInt16(this.lightMapSize), t.writeInt32(this.heights.length);

          for (var e = 0; e < this.heights.length; ++e) {
            t.writeInt16(this.heights[e]);
          }

          t.writeInt32(this.weights.length);

          for (var i = 0; i < this.weights.length; ++i) {
            t.writeInt8(this.weights[i]);
          }

          t.writeInt32(this.layerBuffer.length);

          for (var n = 0; n < this.layerBuffer.length; ++n) {
            t.writeInt16(this.layerBuffer[n]);
          }

          var r = [];
          r.length = this.layerInfos.length;

          for (var s = 0; s < r.length; ++s) {
            var h = this.layerInfos[s],
                a = new P();
            a.slot = s, a.tileSize = h.tileSize, a.detailMapId = h.detailMap ? h.detailMap._uuid : "", a.normalMapId = h.normalMap ? h.normalMap._uuid : "", a.metallic = h.metallic, a.roughness = h.roughness, r[s] = a;
          }

          t.writeInt32(r.length);

          for (var o = 0; o < r.length; ++o) {
            t.writeInt32(r[o].slot), t.writeFloat(r[o].tileSize), t.writeString(r[o].detailMapId), t.writeString(r[o].normalMapId), t.writeFloat(r[o].roughness), t.writeFloat(r[o].metallic);
          }

          return t.buffer;
        }, i._exportDefaultNativeData = function () {
          var t = new F();
          return t.writeInt32(C), t.buffer;
        }, r(e, [{
          key: "_nativeAsset",
          get: function get() {
            return this._data.buffer;
          },
          set: function set(t) {
            this._data && this._data.byteLength === t.byteLength ? this._data.set(new Uint8Array(t)) : this._data = new Uint8Array(t), this._loadNativeData(this._data);
          }
        }, {
          key: "version",
          get: function get() {
            return this._version;
          }
        }, {
          key: "tileSize",
          get: function get() {
            return this._tileSize;
          },
          set: function set(t) {
            this._tileSize = t;
          }
        }, {
          key: "blockCount",
          get: function get() {
            return this._blockCount;
          },
          set: function set(t) {
            this._blockCount = t;
          }
        }, {
          key: "lightMapSize",
          get: function get() {
            return this._lightMapSize;
          },
          set: function set(t) {
            this._lightMapSize = t;
          }
        }, {
          key: "weightMapSize",
          get: function get() {
            return this._weightMapSize;
          },
          set: function set(t) {
            this._weightMapSize = t;
          }
        }, {
          key: "heights",
          get: function get() {
            return this._heights;
          },
          set: function set(t) {
            this._heights = t;
          }
        }, {
          key: "weights",
          get: function get() {
            return this._weights;
          },
          set: function set(t) {
            this._weights = t;
          }
        }, {
          key: "layerBuffer",
          get: function get() {
            return this._layerBuffer;
          },
          set: function set(t) {
            this._layerBuffer = t;
          }
        }, {
          key: "layerInfos",
          get: function get() {
            return this._layerInfos;
          },
          set: function set(t) {
            this._layerInfos = t;
          }
        }, {
          key: "layerBinaryInfos",
          get: function get() {
            return this._layerBinaryInfos;
          }
        }]), e;
      }(o), d = i((v = p).prototype, "_layerInfos", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), b = v)) || b);
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/terrain.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./texture-buffer-pool-32e209c1.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./terrain-asset-42611908.js"], function (t) {
  "use strict";

  var e, i, r, n, a, s, l, o, h, u, _, f, c, g, p, d, y, b, M, v, w, m, S, k, z, C, A, x, E, I, L, R, N, T, B, P, O, U, H, D, V, F, X, W, j, G, Y, q, K, Z, J, Q, $, tt, et, it;

  return {
    setters: [function (t) {
      e = t.co, i = t.c5, r = t.ef, n = t.e2, a = t.eg, s = t.ec, l = t.l, o = t.dr, h = t.dQ, u = t.c3, _ = t.aq, f = t.z, c = t.G, g = t.aH, p = t.b3, d = t.x, y = t.di, b = t.a3, M = t.c7, v = t.ch, w = t.dn, m = t.fJ, S = t.gm, k = t.gP, z = t.ek, C = t.dq, A = t.d6, x = t.fY, E = t.gB, I = t.c$, L = t.eu, R = t.eh, N = t.cf, T = t.ei, B = t.dH, P = t.c_, O = t.fZ, U = t.go, H = t.ed, D = t.dO, V = t.gw;
    }, function (t) {
      F = t.d;
    }, function (t) {
      X = t.i;
    }, function () {}, function () {}, function () {}, function (t) {
      W = t.R;
    }, function () {}, function (e) {
      j = e.a, G = e.b, Y = e.c, q = e.T, K = e.d, Z = e.e, J = e.f, Q = e.g, $ = e.h, tt = e.i, et = e.j, it = e.k;
      var i = {};
      i.TERRAIN_BLOCK_TILE_COMPLEXITY = e.b, i.TERRAIN_BLOCK_VERTEX_COMPLEXITY = e.a, i.TERRAIN_BLOCK_VERTEX_SIZE = e.c, i.TERRAIN_DATA_VERSION = e.q, i.TERRAIN_DATA_VERSION2 = e.r, i.TERRAIN_DATA_VERSION3 = e.s, i.TERRAIN_DATA_VERSION4 = e.t, i.TERRAIN_DATA_VERSION5 = e.j, i.TERRAIN_DATA_VERSION_DEFAULT = e.u, i.TERRAIN_EAST_INDEX = e.p, i.TERRAIN_HEIGHT_BASE = e.g, i.TERRAIN_HEIGHT_FACTORY = e.h, i.TERRAIN_HEIGHT_FMAX = e.e, i.TERRAIN_HEIGHT_FMIN = e.f, i.TERRAIN_MAX_BLEND_LAYERS = e.i, i.TERRAIN_MAX_LAYER_COUNT = e.k, i.TERRAIN_MAX_LEVELS = e.l, i.TERRAIN_NORTH_INDEX = e.m, i.TERRAIN_SOUTH_INDEX = e.n, i.TERRAIN_WEST_INDEX = e.o, i.TerrainAsset = e.T, i.TerrainLayerBinaryInfo = e.v, i.TerrainLayerInfo = e.d, t(i);
    }],
    execute: function execute() {
      t("HeightField", function () {
        function t(t, e) {
          this.data = new Uint16Array(), this.w = 0, this.h = 0, this.w = t, this.h = e, this.data = new Uint16Array(t * e);

          for (var i = 0; i < t * e; ++i) {
            this.data[i] = 0;
          }
        }

        var i = t.prototype;
        return i.set = function (t, e, i) {
          this.data[e * this.w + t] = i;
        }, i.get = function (t, e) {
          return this.data[e * this.w + t];
        }, i.getClamp = function (t, i) {
          return t = e(t, 0, this.w - 1), i = e(i, 0, this.h - 1), this.get(t, i);
        }, i.getAt = function (t, i) {
          var r = t,
              n = i,
              a = Math.floor(r),
              s = Math.floor(n),
              l = a + 1,
              o = s + 1,
              h = r - a,
              u = n - s;
          a = e(a, 0, this.w - 1), s = e(s, 0, this.h - 1), l = e(l, 0, this.w - 1), o = e(o, 0, this.h - 1);

          var _ = this.get(a, s),
              f = this.get(l, s),
              c = this.get(a, o),
              g = this.get(l, o),
              p = .5 * (f + c);

          return h + u <= 1 ? g = p + (p - _) : _ = p + (p - g), (_ * (1 - h) + f * h) * (1 - u) + (c * (1 - h) + g * h) * u;
        }, t;
      }());

      var rt,
          nt,
          at,
          st,
          lt,
          ot,
          ht,
          ut,
          _t,
          ft,
          ct,
          gt,
          pt,
          dt,
          yt,
          bt,
          Mt,
          vt,
          wt,
          mt,
          St,
          kt,
          zt,
          Ct,
          At,
          xt,
          Et,
          It,
          Lt,
          Rt,
          Nt,
          Tt,
          Bt,
          Pt,
          Ot,
          Ut,
          Ht,
          Dt,
          Vt,
          Ft,
          Xt,
          Wt,
          jt,
          Gt,
          Yt = new i(),
          qt = new i(),
          Kt = t("TerrainInfo", r("cc.TerrainInfo")((ht = function () {
        function t() {
          R(this, "tileSize", at, this), R(this, "blockCount", st, this), R(this, "weightMapSize", lt, this), R(this, "lightMapSize", ot, this);
        }

        return n(t, [{
          key: "size",
          get: function get() {
            var t = new N(0, 0);
            return t.width = this.blockCount[0] * G * this.tileSize, t.height = this.blockCount[1] * G * this.tileSize, t;
          }
        }, {
          key: "tileCount",
          get: function get() {
            var t = [0, 0];
            return t[0] = this.blockCount[0] * G, t[1] = this.blockCount[1] * G, t;
          }
        }, {
          key: "vertexCount",
          get: function get() {
            var t = this.tileCount;
            return t[0] += 1, t[1] += 1, t;
          }
        }]), t;
      }(), at = a((nt = ht).prototype, "tileSize", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), st = a(nt.prototype, "blockCount", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [1, 1];
        }
      }), lt = a(nt.prototype, "weightMapSize", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 128;
        }
      }), ot = a(nt.prototype, "lightMapSize", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 128;
        }
      }), rt = nt)) || rt),
          Zt = t("TerrainLayer", r("cc.TerrainLayer")((ft = a((_t = function _t() {
        R(this, "detailMap", ft, this), R(this, "normalMap", ct, this), R(this, "tileSize", gt, this), R(this, "metallic", pt, this), R(this, "roughness", dt, this);
      }).prototype, "detailMap", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ct = a(_t.prototype, "normalMap", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), gt = a(_t.prototype, "tileSize", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), pt = a(_t.prototype, "metallic", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), dt = a(_t.prototype, "roughness", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), ut = _t)) || ut),
          Jt = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), n = 0; n < i; n++) {
            r[n] = arguments[n];
          }

          return (e = t.call.apply(t, [this].concat(r)) || this)._model = null, e._meshData = null, e._brushMaterial = null, e._currentMaterial = null, e._currentMaterialLayers = 0, e;
        }

        s(e, t);
        var i = e.prototype;
        return i.destroy = function () {
          return null != this._model && (l.director.root.destroyModel(this._model), this._model = null), t.prototype.destroy.call(this);
        }, i._destroyModel = function () {
          null != this._model && (l.director.root.destroyModel(this._model), this._model = null);
        }, i._invalidMaterial = function () {
          if (null != this._currentMaterial) {
            if (null !== this._brushMaterial && null !== this._brushMaterial.passes && this._brushMaterial.passes.length > 0) for (var t = this._currentMaterial.passes, e = 0; e < t.length; ++e) {
              if (t[e] === this._brushMaterial.passes[0]) {
                t.pop();
                break;
              }
            }
            this._clearMaterials(), this._currentMaterial = null, null != this._model && (this._model.enabled = !1);
          }
        }, i._updateMaterial = function (t, e) {
          if (null != this._meshData && null != this._model) {
            var i = t.getMaxLayer();
            null != this._currentMaterial && i === this._currentMaterialLayers || (this._currentMaterial = new o(), this._currentMaterial.initialize({
              effectAsset: t.getTerrain().getEffectAsset(),
              defines: t._getMaterialDefines(i)
            }), null !== this._brushMaterial && null !== this._brushMaterial.passes && this._brushMaterial.passes.length > 0 && this._currentMaterial.passes.push(this._brushMaterial.passes[0]), e && this._model.initSubModel(0, this._meshData, this._currentMaterial), this.setMaterial(this._currentMaterial, 0), this._currentMaterialLayers = i, this._model.enabled = !0, this._model.receiveShadow = t.getTerrain().receiveShadow);
          }
        }, i._onMaterialModified = function (t, e) {
          null != this._model && this._onRebuildPSO(t, e || this._getBuiltinMaterial());
        }, i._onRebuildPSO = function (t, e) {
          this._model && this._model.setSubModelMaterial(t, e);
        }, i._clearMaterials = function () {
          null != this._model && this._onMaterialModified(0, null);
        }, i._getBuiltinMaterial = function () {
          return h.get("missing-material");
        }, e;
      }(W),
          Qt = t("TerrainBlockLightmapInfo", r("cc.TerrainBlockLightmapInfo")((Mt = a((bt = function bt() {
        R(this, "texture", Mt, this), R(this, "UOff", vt, this), R(this, "VOff", wt, this), R(this, "UScale", mt, this), R(this, "VScale", St, this);
      }).prototype, "texture", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), vt = a(bt.prototype, "UOff", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), wt = a(bt.prototype, "VOff", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), mt = a(bt.prototype, "UScale", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), St = a(bt.prototype, "VScale", [T, L], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), yt = bt)) || yt),
          $t = t("TerrainBlock", function () {
        function t(t, e, i) {
          this._terrain = void 0, this._node = void 0, this._renderable = void 0, this._index = [1, 1], this._weightMap = null, this._lightmapInfo = null, this._terrain = t, this._index[0] = e, this._index[1] = i, this._lightmapInfo = t._getLightmapInfo(e, i), this._node = new B(), this._node.setParent(this._terrain.node), this._node.hideFlags |= P.Flags.DontSave | P.Flags.HideInHierarchy, this._node.layer = this._terrain.node.layer, this._renderable = this._node.addComponent(Jt);
        }

        var e = t.prototype;
        return e.build = function () {
          var t = F.root.device,
              e = new Float32Array(Y * j * j),
              r = 0;
          Yt.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), qt.set(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE);

          for (var n = 0; n < j; ++n) {
            for (var a = 0; a < j; ++a) {
              var s = this._index[0] * G + a,
                  o = this._index[1] * G + n,
                  h = this._terrain.getPosition(s, o),
                  M = this._terrain.getNormal(s, o),
                  v = new u(a / G, n / G);

              e[r++] = h.x, e[r++] = h.y, e[r++] = h.z, e[r++] = M.x, e[r++] = M.y, e[r++] = M.z, e[r++] = v.x, e[r++] = v.y, i.min(Yt, Yt, h), i.max(qt, qt, h);
            }
          }

          var w = t.createBuffer(new _(f.VERTEX | f.TRANSFER_DST, c.HOST | c.DEVICE, Y * Float32Array.BYTES_PER_ELEMENT * j * j, Y * Float32Array.BYTES_PER_ELEMENT));
          w.update(e);
          var m = [new g(p.ATTR_POSITION, d.RGB32F), new g(p.ATTR_NORMAL, d.RGB32F), new g(p.ATTR_TEX_COORD, d.RG32F)];
          this._renderable._meshData = new y([w], m, b.TRIANGLE_LIST, this._terrain._getSharedIndexBuffer());
          var S = this._renderable._model = l.director.root.createModel(X);
          S.createBoundingShape(Yt, qt), S.node = S.transform = this._node, this._renderable._getRenderScene().addModel(S), this._updateWeightMap(), this._updateMaterial(!0);
        }, e.rebuild = function () {
          this._updateHeight(), this._updateWeightMap(), this._renderable._invalidMaterial(), this._updateMaterial(!1);
        }, e.destroy = function () {
          this._renderable._destroyModel(), null != this._node && this._node.destroy(), null != this._weightMap && this._weightMap.destroy();
        }, e.update = function () {
          this._updateMaterial(!1);

          var t = this._terrain.useNormalMap,
              e = this._terrain.usePBR,
              i = function i(t) {
            return null !== t ? t.detailMap : null;
          },
              r = function r(t) {
            var e = null !== t ? t.normalMap : null;
            return null === e && (e = l.builtinResMgr.get("normal-texture")), e;
          },
              n = this._renderable._currentMaterial;

          if (null !== n) {
            var a = this.getMaxLayer(),
                s = new M(1, 1, 1, 1),
                o = new M(1, 1, 1, 1),
                h = new M(0, 0, 0, 0);
            if (0 === a) {
              if (-1 !== this.layers[0]) {
                var u = this._terrain.getLayer(this.layers[0]);

                null !== u && (s.x = 1 / u.tileSize, o.x = u.roughness, h.x = u.metallic), n.setProperty("detailMap0", i(u)), t && n.setProperty("normalMap0", r(u));
              } else n.setProperty("detailMap0", l.builtinResMgr.get("default-texture")), t && n.setProperty("normalMap0", l.builtinResMgr.get("normal-texture"));
            } else if (1 === a) {
              var _ = this._terrain.getLayer(this.layers[0]),
                  f = this._terrain.getLayer(this.layers[1]);

              null !== _ && (s.x = 1 / _.tileSize, o.x = _.roughness, h.x = _.metallic), null !== f && (s.y = 1 / f.tileSize, o.y = f.roughness, h.y = f.metallic), n.setProperty("weightMap", this._weightMap), n.setProperty("detailMap0", i(_)), n.setProperty("detailMap1", i(f)), t && (n.setProperty("normalMap0", r(_)), n.setProperty("normalMap1", r(f)));
            } else if (2 === a) {
              var c = this._terrain.getLayer(this.layers[0]),
                  g = this._terrain.getLayer(this.layers[1]),
                  p = this._terrain.getLayer(this.layers[2]);

              null !== c && (s.x = 1 / c.tileSize, o.x = c.roughness, h.x = c.metallic), null !== g && (s.y = 1 / g.tileSize, o.y = g.roughness, h.y = g.metallic), null !== p && (s.z = 1 / p.tileSize, o.z = p.roughness, h.z = p.metallic), n.setProperty("weightMap", this._weightMap), n.setProperty("detailMap0", i(c)), n.setProperty("detailMap1", i(g)), n.setProperty("detailMap2", i(p)), t && (n.setProperty("normalMap0", r(c)), n.setProperty("normalMap1", r(g)), n.setProperty("normalMap2", r(p)));
            } else if (3 === a) {
              var d = this._terrain.getLayer(this.layers[0]),
                  y = this._terrain.getLayer(this.layers[1]),
                  b = this._terrain.getLayer(this.layers[2]),
                  v = this._terrain.getLayer(this.layers[3]);

              null !== d && (s.x = 1 / d.tileSize, o.x = d.roughness, h.x = d.metallic), null !== y && (s.y = 1 / y.tileSize, o.y = y.roughness, h.y = y.metallic), null !== b && (s.z = 1 / b.tileSize, o.z = b.roughness, h.z = b.metallic), null !== v && (s.w = 1 / v.tileSize, o.w = v.roughness, h.w = v.metallic), n.setProperty("weightMap", this._weightMap), n.setProperty("detailMap0", i(d)), n.setProperty("detailMap1", i(y)), n.setProperty("detailMap2", i(b)), n.setProperty("detailMap3", i(v)), t && (n.setProperty("normalMap0", r(d)), n.setProperty("normalMap1", r(y)), n.setProperty("normalMap2", r(b)), n.setProperty("normalMap3", r(v)));
            }
            n.setProperty("UVScale", s), e && (n.setProperty("roughness", o), n.setProperty("metallic", h)), null !== this.lightmap && (n.setProperty("lightMap", this.lightmap), n.setProperty("lightMapUVParam", this.lightmapUVParam));
          }
        }, e.setBrushMaterial = function (t) {
          this._renderable._brushMaterial !== t && (this._renderable._invalidMaterial(), this._renderable._brushMaterial = t);
        }, e.getTerrain = function () {
          return this._terrain;
        }, e.getIndex = function () {
          return this._index;
        }, e.getRect = function () {
          var t = new v();
          return t.x = this._index[0] * G, t.y = this._index[1] * G, t.width = G, t.height = G, t;
        }, e.setLayer = function (t, e) {
          this.layers[t] !== e && (this._terrain.setBlockLayer(this._index[0], this._index[1], t, e), this._renderable._invalidMaterial(), this._updateMaterial(!1));
        }, e.getLayer = function (t) {
          return this.layers[t];
        }, e.getMaxLayer = function () {
          return this.layers[3] >= 0 ? 3 : this.layers[2] >= 0 ? 2 : this.layers[1] >= 0 ? 1 : 0;
        }, e._getMaterialDefines = function (t) {
          return {
            LAYERS: t + 1,
            USE_LIGHTMAP: null !== this.lightmap ? 1 : 0,
            USE_NORMALMAP: this._terrain.useNormalMap ? 1 : 0,
            USE_PBR: this._terrain.usePBR ? 1 : 0
          };
        }, e._invalidMaterial = function () {
          this._renderable._invalidMaterial();
        }, e._updateMaterial = function (t) {
          this._renderable._updateMaterial(this, t);
        }, e._updateHeight = function () {
          if (null != this._renderable._meshData) {
            var t = new Float32Array(Y * j * j),
                e = 0;
            Yt.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), qt.set(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE);

            for (var r = 0; r < j; ++r) {
              for (var n = 0; n < j; ++n) {
                var a = this._index[0] * G + n,
                    s = this._index[1] * G + r,
                    l = this._terrain.getPosition(a, s),
                    o = this._terrain.getNormal(a, s),
                    h = new u(n / j, r / j);

                t[e++] = l.x, t[e++] = l.y, t[e++] = l.z, t[e++] = o.x, t[e++] = o.y, t[e++] = o.z, t[e++] = h.x, t[e++] = h.y, i.min(Yt, Yt, l), i.max(qt, qt, l);
              }
            }

            this._renderable._meshData.vertexBuffers[0].update(t), this._renderable._model.createBoundingShape(Yt, qt), this._renderable._model.updateWorldBound();
          }
        }, e._updateWeightMap = function () {
          if (0 !== this.getMaxLayer()) {
            null == this._weightMap && (this._weightMap = new w(), this._weightMap.create(this._terrain.weightMapSize, this._terrain.weightMapSize, m.RGBA8888), this._weightMap.setFilters(S.LINEAR, S.LINEAR), this._weightMap.setWrapMode(k.CLAMP_TO_EDGE, k.CLAMP_TO_EDGE));

            for (var t = new Uint8Array(this._terrain.weightMapSize * this._terrain.weightMapSize * 4), e = 0, i = 0; i < this._terrain.weightMapSize; ++i) {
              for (var r = 0; r < this._terrain.weightMapSize; ++r) {
                var n = this._index[0] * this._terrain.weightMapSize + r,
                    a = this._index[1] * this._terrain.weightMapSize + i,
                    s = this._terrain.getWeight(n, a);

                t[4 * e + 0] = Math.floor(255 * s.x), t[4 * e + 1] = Math.floor(255 * s.y), t[4 * e + 2] = Math.floor(255 * s.z), t[4 * e + 3] = Math.floor(255 * s.w), e += 1;
              }
            }

            this._weightMap.uploadData(t);
          } else null != this._weightMap && (this._weightMap.destroy(), this._weightMap = null);
        }, e._updateLightmap = function (t) {
          this._lightmapInfo = t, this._invalidMaterial();
        }, n(t, [{
          key: "valid",
          get: function get() {
            if (null === this._terrain) return !1;

            for (var t = this._terrain.getBlocks(), e = 0; e < t.length; ++e) {
              if (t[e] === this) return !0;
            }

            return !1;
          }
        }, {
          key: "layers",
          get: function get() {
            return this._terrain.getBlockLayers(this._index[0], this._index[1]);
          }
        }, {
          key: "lightmap",
          get: function get() {
            return this._lightmapInfo ? this._lightmapInfo.texture : null;
          }
        }, {
          key: "lightmapUVParam",
          get: function get() {
            return null != this._lightmapInfo ? new M(this._lightmapInfo.UOff, this._lightmapInfo.VOff, this._lightmapInfo.UScale, this._lightmapInfo.VScale) : new M(0, 0, 0, 0);
          }
        }]), t;
      }());

      t("Terrain", (kt = r("cc.Terrain"), zt = O(), Ct = z(q), At = z(C), xt = U(), Et = z(Qt), It = z(A), Lt = z(A), Rt = z(A), Nt = z(q), Tt = U(), Bt = z(C), Pt = U(), Ot = z(Kt), kt(Ut = zt(Ut = x(Ut = E((Gt = function (t) {
        function r() {
          var e;
          e = t.call(this) || this, R(e, "__asset", Dt, H(e)), R(e, "_effectAsset", Vt, H(e)), R(e, "_lightmapInfos", Ft, H(e)), R(e, "_receiveShadow", Xt, H(e)), R(e, "_useNormalmap", Wt, H(e)), R(e, "_usePBR", jt, H(e)), e._tileSize = 1, e._blockCount = [1, 1], e._weightMapSize = 128, e._lightMapSize = 128, e._heights = new Uint16Array(), e._weights = new Uint8Array(), e._normals = [], e._layerList = [], e._layerBuffer = [], e._blocks = [], e._sharedIndexBuffer = null;

          for (var i = 0; i < it; ++i) {
            e._layerList.push(null);
          }

          return e;
        }

        s(r, t);
        var a = r.prototype;
        return a.build = function (t) {
          return this._tileSize = t.tileSize, this._blockCount[0] = t.blockCount[0], this._blockCount[1] = t.blockCount[1], this._weightMapSize = t.weightMapSize, this._lightMapSize = t.lightMapSize, this._buildImp();
        }, a.rebuild = function (t) {
          for (var e = 0; e < this._blocks.length; ++e) {
            this._blocks[e].destroy();
          }

          this._blocks = [], this._rebuildLayerBuffer(t), this._rebuildHeights(t), this._rebuildWeights(t), this._tileSize = t.tileSize, this._blockCount[0] = t.blockCount[0], this._blockCount[1] = t.blockCount[1], this._weightMapSize = t.weightMapSize, this._lightMapSize = t.lightMapSize, this._buildNormals();

          for (var i = 0; i < this._blockCount[1]; ++i) {
            for (var r = 0; r < this._blockCount[0]; ++r) {
              this._blocks.push(new $t(this, r, i));
            }
          }

          for (var n = 0; n < this._blocks.length; ++n) {
            this._blocks[n].build();
          }
        }, a.importHeightField = function (t, e) {
          for (var i = 0, r = 0; r < this.vertexCount[1]; ++r) {
            for (var n = 0; n < this.vertexCount[0]; ++n) {
              var a = n / this.tileCount[0],
                  s = r / this.tileCount[1],
                  l = t.getAt(a * t.w, s * t.h) * e;
              this._heights[i++] = l;
            }
          }

          this._buildNormals();

          for (var o = 0; o < this._blocks.length; ++o) {
            this._blocks[o]._updateHeight();
          }
        }, a.exportHeightField = function (t, e) {
          for (var i = 0, r = 0; r < t.h; ++r) {
            for (var n = 0; n < t.w; ++n) {
              var a = n / (t.w - 1),
                  s = r / (t.h - 1),
                  l = a * this.size.width,
                  o = s * this.size.height,
                  h = this.getHeightAt(l, o);
              null != h && (t.data[i++] = h * e);
            }
          }
        }, a.exportAsset = function () {
          var t = new q();
          t.tileSize = this.tileSize, t.blockCount = this.blockCount, t.lightMapSize = this.lightMapSize, t.weightMapSize = this.weightMapSize, t.heights = this.heights, t.weights = this.weights, t.layerBuffer = new Array(4 * this._blocks.length);

          for (var e = 0; e < this._blocks.length; ++e) {
            t.layerBuffer[4 * e + 0] = this._blocks[e].layers[0], t.layerBuffer[4 * e + 1] = this._blocks[e].layers[1], t.layerBuffer[4 * e + 2] = this._blocks[e].layers[2], t.layerBuffer[4 * e + 3] = this._blocks[e].layers[3];
          }

          for (var i = 0; i < this._layerList.length; ++i) {
            var r = this._layerList[i];

            if (r && r.detailMap && I(r.detailMap)) {
              var n = new K();
              n.slot = i, n.tileSize = r.tileSize, n.detailMap = r.detailMap, n.normalMap = r.normalMap, n.metallic = r.metallic, n.roughness = r.roughness, t.layerInfos.push(n);
            }
          }

          return t;
        }, a.getEffectAsset = function () {
          return null === this._effectAsset ? l.EffectAsset.get("terrain") : this._effectAsset;
        }, a.onLoad = function () {
          for (var t = l.director.root.device, e = new Uint16Array(G * G * 6), i = 0, r = 0; r < G; ++r) {
            for (var n = 0; n < G; ++n) {
              var a = r * j + n,
                  s = r * j + n + 1,
                  o = (r + 1) * j + n,
                  h = (r + 1) * j + n + 1;
              e[i++] = a, e[i++] = o, e[i++] = s, e[i++] = s, e[i++] = o, e[i++] = h;
            }
          }

          this._sharedIndexBuffer = t.createBuffer(new _(f.INDEX | f.TRANSFER_DST, c.HOST | c.DEVICE, Uint16Array.BYTES_PER_ELEMENT * G * G * 6, Uint16Array.BYTES_PER_ELEMENT)), this._sharedIndexBuffer.update(e);
        }, a.onEnable = function () {
          0 === this._blocks.length && this._buildImp();
        }, a.onDisable = function () {
          for (var t = 0; t < this._blocks.length; ++t) {
            this._blocks[t].destroy();
          }

          this._blocks = [];
        }, a.onDestroy = function () {
          for (var t = 0; t < this._blocks.length; ++t) {
            this._blocks[t].destroy();
          }

          this._blocks = [];

          for (var e = 0; e < this._layerList.length; ++e) {
            this._layerList[e] = null;
          }

          null != this._sharedIndexBuffer && this._sharedIndexBuffer.destroy();
        }, a.onRestore = function () {
          this.onDisable(), this.onLoad(), this._buildImp(!0);
        }, a.update = function () {
          for (var t = 0; t < this._blocks.length; ++t) {
            this._blocks[t].update();
          }
        }, a.addLayer = function (t) {
          for (var e = 0; e < this._layerList.length; ++e) {
            var i;
            if (null === this._layerList[e] || this._layerList[e] && null === (null === (i = this._layerList[e]) || void 0 === i ? void 0 : i.detailMap)) return this._layerList[e] = t, e;
          }

          return -1;
        }, a.setLayer = function (t, e) {
          this._layerList[t] = e;
        }, a.removeLayer = function (t) {
          this._layerList[t] = null;
        }, a.getLayer = function (t) {
          return -1 === t ? null : this._layerList[t];
        }, a.getPosition = function (t, e) {
          var r = t * this._tileSize,
              n = e * this._tileSize,
              a = this.getHeight(t, e);
          return new i(r, a, n);
        }, a.getHeightField = function () {
          return this._heights;
        }, a.setHeight = function (t, i, r) {
          r = e(r, J, Z), this._heights[i * this.vertexCount[0] + t] = Q + r / $;
        }, a.getHeight = function (t, e) {
          return (this._heights[e * this.vertexCount[0] + t] - Q) * $;
        }, a.getHeightClamp = function (t, i) {
          return t = e(t, 0, this.vertexCount[0] - 1), i = e(i, 0, this.vertexCount[1] - 1), this.getHeight(t, i);
        }, a.getHeightAt = function (t, i) {
          var r = t / this.tileSize,
              n = i / this.tileSize,
              a = Math.floor(r),
              s = Math.floor(n),
              l = a + 1,
              o = s + 1,
              h = r - a,
              u = n - s;
          if (a < 0 || a > this.vertexCount[0] - 1 || s < 0 || s > this.vertexCount[1] - 1) return null;
          a = e(a, 0, this.vertexCount[0] - 1), s = e(s, 0, this.vertexCount[1] - 1), l = e(l, 0, this.vertexCount[0] - 1), o = e(o, 0, this.vertexCount[1] - 1);

          var _ = this.getHeight(a, s),
              f = this.getHeight(l, s),
              c = this.getHeight(a, o),
              g = this.getHeight(l, o),
              p = .5 * (f + c);

          return h + u <= 1 ? g = p + (p - _) : _ = p + (p - g), (_ * (1 - h) + f * h) * (1 - u) + (c * (1 - h) + g * h) * u;
        }, a._setNormal = function (t, e, i) {
          var r = e * this.vertexCount[0] + t;
          this._normals[3 * r + 0] = i.x, this._normals[3 * r + 1] = i.y, this._normals[3 * r + 2] = i.z;
        }, a.getNormal = function (t, e) {
          var r = e * this.vertexCount[0] + t,
              n = new i();
          return n.x = this._normals[3 * r + 0], n.y = this._normals[3 * r + 1], n.z = this._normals[3 * r + 2], n;
        }, a.getNormalAt = function (t, r) {
          var n = t / this.tileSize,
              a = r / this.tileSize,
              s = Math.floor(n),
              l = Math.floor(a),
              o = s + 1,
              h = l + 1,
              u = n - s,
              _ = a - l;

          if (s < 0 || s > this.vertexCount[0] - 1 || l < 0 || l > this.vertexCount[1] - 1) return null;
          s = e(s, 0, this.vertexCount[0] - 1), l = e(l, 0, this.vertexCount[1] - 1), o = e(o, 0, this.vertexCount[0] - 1), h = e(h, 0, this.vertexCount[1] - 1);
          var f = this.getNormal(s, l),
              c = this.getNormal(o, l),
              g = this.getNormal(s, h),
              p = this.getNormal(o, h),
              d = new i();
          i.add(d, c, g).multiplyScalar(.5), u + _ <= 1 ? (p.set(d), p.subtract(f), p.add(d)) : (f.set(d), f.subtract(p), f.add(d));
          var y = new i(),
              b = new i(),
              M = new i();
          return i.lerp(y, f, c, u), i.lerp(b, g, p, u), i.lerp(M, y, b, _), M;
        }, a.setWeight = function (t, e, i) {
          var r = e * this._weightMapSize * this._blockCount[0] + t;
          this._weights[4 * r + 0] = 255 * i.x, this._weights[4 * r + 1] = 255 * i.y, this._weights[4 * r + 2] = 255 * i.z, this._weights[4 * r + 3] = 255 * i.w;
        }, a.getWeight = function (t, e) {
          var i = e * this._weightMapSize * this._blockCount[0] + t,
              r = new M();
          return r.x = this._weights[4 * i + 0] / 255, r.y = this._weights[4 * i + 1] / 255, r.z = this._weights[4 * i + 2] / 255, r.w = this._weights[4 * i + 3] / 255, r;
        }, a.getWeightAt = function (t, i) {
          var r = this.weightMapSize * this.blockCount[0],
              n = this.weightMapSize * this.blockCount[1];
          if (0 === r || 0 === n) return null;

          var a = t / r,
              s = i / n,
              l = Math.floor(a),
              o = Math.floor(s),
              h = l + 1,
              u = o + 1,
              _ = a - l,
              f = s - o;

          if (l < 0 || l > r - 1 || o < 0 || o > n - 1) return null;
          l = e(l, 0, r - 1), o = e(o, 0, n - 1), h = e(h, 0, r - 1), u = e(u, 0, n - 1);
          var c = this.getWeight(l, o),
              g = this.getWeight(h, o),
              p = this.getWeight(l, u),
              d = this.getWeight(h, u),
              y = new M();
          M.add(y, g, p).multiplyScalar(.5), _ + f <= 1 ? (d = new M(), M.subtract(d, y, c).add(y)) : (c = new M(), M.subtract(c, y, d).add(y));
          var b = new M(),
              v = new M(),
              w = new M();
          return M.lerp(b, c, g, _), M.lerp(v, p, d, _), M.lerp(w, b, v, f), w;
        }, a.getMaxWeightLayerAt = function (t, e) {
          var i = this.weightMapSize * this.blockCount[0],
              r = this.weightMapSize * this.blockCount[1];
          if (0 === i || 0 === r) return null;
          var n = t / i,
              a = e / r,
              s = Math.floor(n),
              l = Math.floor(a);
          if (s < 0 || s > i - 1 || l < 0 || l > r - 1) return null;

          var o = this.getWeight(s, l),
              h = Math.floor(t / this.weightMapSize),
              u = Math.floor(e / this.weightMapSize),
              _ = this.getBlock(h, u),
              f = 0;

          return o.y > o[f] && -1 !== _.getLayer(1) && (f = 1), o.y > o[f] && -1 !== _.getLayer(2) && (f = 2), o.z > o[f] && -1 !== _.getLayer(3) && (f = 3), f = _.getLayer(f), this.getLayer(f);
        }, a.getBlockLayers = function (t, e) {
          var i = (e * this._blockCount[0] + t) * tt;
          return [this._layerBuffer[i], this._layerBuffer[i + 1], this._layerBuffer[i + 2], this._layerBuffer[i + 3]];
        }, a.getBlockLayer = function (t, e, i) {
          var r = (e * this._blockCount[0] + t) * tt;
          return this._layerBuffer[r + i];
        }, a.setBlockLayer = function (t, e, i, r) {
          var n = (e * this._blockCount[0] + t) * tt;
          this._layerBuffer[n + i] = r;
        }, a.getBlock = function (t, e) {
          return this._blocks[e * this._blockCount[0] + t];
        }, a.getBlocks = function () {
          return this._blocks;
        }, a.rayCheck = function (t, e, r, n) {
          void 0 === n && (n = !0);
          var a = t;
          n && i.subtract(a, t, this.node.getWorldPosition());
          var s = new i();
          s.set(e), s.multiplyScalar(r);
          var l = null;

          if (e.equals(new i(0, 1, 0))) {
            var o = this.getHeightAt(a.x, a.z);
            null != o && a.y <= o && (l = new i(a.x, o, a.z));
          } else if (e.equals(new i(0, -1, 0))) {
            var h = this.getHeightAt(a.x, a.z);
            null != h && a.y >= h && (l = new i(a.x, h, a.z));
          } else {
            for (var u = 0; u++ < 2e3;) {
              var _ = this.getHeightAt(a.x, a.z);

              if (null != _ && a.y <= _) break;
              a.add(e);
            }

            for (; u++ < 2e3;) {
              var f = this.getHeightAt(a.x, a.z);

              if (null != f && a.y <= f) {
                l = new i(a.x, f, a.z);
                break;
              }

              a.add(s);
            }
          }

          return l;
        }, a._getSharedIndexBuffer = function () {
          return this._sharedIndexBuffer;
        }, a._resetLightmap = function (t) {
          if (this._lightmapInfos.length = 0, t) for (var e = 0; e < this._blockCount[0] * this._blockCount[1]; ++e) {
            this._lightmapInfos.push(new Qt());
          }
        }, a._updateLightmap = function (t, e, i, r, n, a) {
          this._lightmapInfos[t].texture = e, this._lightmapInfos[t].UOff = i, this._lightmapInfos[t].VOff = r, this._lightmapInfos[t].UScale = n, this._lightmapInfos[t].VScale = a, this._blocks[t]._updateLightmap(this._lightmapInfos[t]);
        }, a._getLightmapInfo = function (t, e) {
          var i = e * this._blockCount[0] + t;
          return i < this._lightmapInfos.length ? this._lightmapInfos[i] : null;
        }, a._calcNormal = function (t, e) {
          var r,
              n,
              a = 1,
              s = this.getPosition(t, e);
          t < this.vertexCount[0] - 1 ? r = this.getPosition(t + 1, e) : (a *= -1, r = this.getPosition(t - 1, e)), e < this.vertexCount[1] - 1 ? n = this.getPosition(t, e + 1) : (a *= -1, n = this.getPosition(t, e - 1)), r.subtract(s), n.subtract(s);
          var l = new i();
          return l.set(n), l.cross(r), l.multiplyScalar(a), l.normalize(), l;
        }, a._buildNormals = function () {
          for (var t = 0, e = 0; e < this.vertexCount[1]; ++e) {
            for (var i = 0; i < this.vertexCount[0]; ++i) {
              var r = this._calcNormal(i, e);

              this._normals[3 * t + 0] = r.x, this._normals[3 * t + 1] = r.y, this._normals[3 * t + 2] = r.z, t += 1;
            }
          }
        }, a._buildImp = function (t) {
          var e = this;

          if (void 0 === t && (t = !1), !this.valid) {
            var i = this.__asset;

            if (!t && null !== i) {
              this._tileSize = i.tileSize, this._blockCount = i.blockCount, this._weightMapSize = i.weightMapSize, this._lightMapSize = i.lightMapSize, this._heights = i.heights, this._weights = i.weights, this._layerBuffer = i.layerBuffer;

              for (var r = 0; r < this._layerList.length; ++r) {
                this._layerList[r] = null;
              }

              if (i.version < et) for (var n = function n(t) {
                var r = new Zt(),
                    n = i.layerBinaryInfos[t];
                r.tileSize = n.tileSize, l.assetManager.loadAny(n.detailMapId, function (t, e) {
                  r.detailMap = e;
                }), "" !== n.normalMapId && l.assetManager.loadAny(n.normalMapId, function (t, e) {
                  r.normalMap = e;
                }), r.roughness = n.roughness, r.metallic = n.metallic, e._layerList[n.slot] = r;
              }, a = 0; a < i.layerBinaryInfos.length; ++a) {
                n(a);
              } else for (var s = 0; s < i.layerInfos.length; ++s) {
                var o = new Zt(),
                    h = i.layerInfos[s];
                o.tileSize = h.tileSize, o.detailMap = h.detailMap, o.normalMap = h.normalMap, o.roughness = h.roughness, o.metallic = h.metallic, this._layerList[h.slot] = o;
              }
            }

            if (0 !== this._blockCount[0] && 0 !== this._blockCount[1]) {
              var u = this.vertexCount[0] * this.vertexCount[1];

              if (null === this._heights || this._heights.length !== u) {
                this._heights = new Uint16Array(u), this._normals = new Array(3 * u);

                for (var _ = 0; _ < u; ++_) {
                  this._heights[_] = Q, this._normals[3 * _ + 0] = 0, this._normals[3 * _ + 1] = 1, this._normals[3 * _ + 2] = 0;
                }
              } else this._normals = new Array(3 * u), this._buildNormals();

              var f = this.blockCount[0] * this.blockCount[1] * tt;

              if (null === this._layerBuffer || this._layerBuffer.length !== f) {
                this._layerBuffer = new Array(f);

                for (var c = 0; c < f; ++c) {
                  this._layerBuffer[c] = -1;
                }
              }

              var g = this._weightMapSize * this._blockCount[0],
                  p = this._weightMapSize * this._blockCount[1];

              if (this._weights.length !== g * p * 4) {
                this._weights = new Uint8Array(g * p * 4);

                for (var d = 0; d < g * p; ++d) {
                  this._weights[4 * d + 0] = 255, this._weights[4 * d + 1] = 0, this._weights[4 * d + 2] = 0, this._weights[4 * d + 3] = 0;
                }
              }

              for (var y = 0; y < this._blockCount[1]; ++y) {
                for (var b = 0; b < this._blockCount[0]; ++b) {
                  this._blocks.push(new $t(this, b, y));
                }
              }

              for (var M = 0; M < this._blocks.length; ++M) {
                this._blocks[M].build();
              }
            }
          }
        }, a._rebuildHeights = function (t) {
          if (this.vertexCount[0] === t.vertexCount[0] && this.vertexCount[1] === t.vertexCount[1]) return !1;

          for (var e = new Uint16Array(t.vertexCount[0] * t.vertexCount[1]), i = 0; i < e.length; ++i) {
            e[i] = Q;
          }

          for (var r = Math.min(this.vertexCount[0], t.vertexCount[0]), n = Math.min(this.vertexCount[1], t.vertexCount[1]), a = 0; a < n; ++a) {
            for (var s = 0; s < r; ++s) {
              var l = a * t.vertexCount[0] + s,
                  o = a * this.vertexCount[0] + s;
              e[l] = this._heights[o];
            }
          }

          return this._heights = e, !0;
        }, a._rebuildLayerBuffer = function (t) {
          if (this.blockCount[0] === t.blockCount[0] && this.blockCount[1] === t.blockCount[1]) return !1;
          var e = [];
          e.length = t.blockCount[0] * t.blockCount[1] * tt;

          for (var i = 0; i < e.length; ++i) {
            e[i] = -1;
          }

          for (var r = Math.min(this.blockCount[0], t.blockCount[0]), n = Math.min(this.blockCount[1], t.blockCount[1]), a = 0; a < n; ++a) {
            for (var s = 0; s < r; ++s) {
              for (var l = a * t.blockCount[0] + s, o = a * this.blockCount[0] + s, h = 0; h < tt; ++h) {
                e[l * tt + h] = this._layerBuffer[o * tt + h];
              }
            }
          }

          return this._layerBuffer = e, !0;
        }, a._rebuildWeights = function (t) {
          var e = this,
              i = this._weightMapSize,
              r = this._weightMapSize * this._blockCount[0],
              n = this._weightMapSize * this._blockCount[1],
              a = t.weightMapSize * t.blockCount[0],
              s = t.weightMapSize * t.blockCount[1];
          if (a === r && s === n) return !1;

          for (var l = new Uint8Array(a * s * 4), o = 0; o < a * s; ++o) {
            l[4 * o + 0] = 255, l[4 * o + 1] = 0, l[4 * o + 2] = 0, l[4 * o + 3] = 0;
          }

          for (var h = Math.min(t.blockCount[0], this._blockCount[0]), u = Math.min(t.blockCount[1], this._blockCount[1]), _ = function _(t, e, i) {
            var n = e * r + t,
                a = new M();
            return a.x = i[4 * n + 0] / 255, a.y = i[4 * n + 1] / 255, a.z = i[4 * n + 2] / 255, a.w = i[4 * n + 3] / 255, a;
          }, f = function f(t, i, r, n) {
            var a = Math.floor(t),
                s = Math.floor(i),
                l = a + 1,
                o = s + 1,
                h = t - a,
                u = i - s,
                f = _(a + r, s + n, e._weights),
                c = _(l + r, s + n, e._weights),
                g = _(a + r, o + n, e._weights),
                p = _(l + r, o + n, e._weights),
                d = new M();

            M.add(d, c, g).multiplyScalar(.5), h + u <= 1 ? (p.set(d), p.subtract(f), p.add(d)) : (f.set(d), f.subtract(p), f.add(d));
            var y = new M(),
                b = new M(),
                v = new M();
            return M.lerp(y, f, c, h), M.lerp(b, g, p, h), M.lerp(v, y, b, u), v;
          }, c = 0; c < u; ++c) {
            for (var g = 0; g < h; ++g) {
              for (var p = g * i, d = c * i, y = 0; y < t.weightMapSize; ++y) {
                for (var b = 0; b < t.weightMapSize; ++b) {
                  var v = void 0;
                  v = t.weightMapSize === i ? _(b + p, y + d, this._weights) : f(b / (t.weightMapSize - 1) * (i - 1), y / (t.weightMapSize - 1) * (i - 1), p, d, this._weights);
                  var w = g * t.weightMapSize + b,
                      m = (c * t.weightMapSize + y) * a + w;
                  l[4 * m + 0] = 255 * v.x, l[4 * m + 1] = 255 * v.y, l[4 * m + 2] = 255 * v.z, l[4 * m + 3] = 255 * v.w;
                }
              }
            }
          }

          return this._weights = l, !0;
        }, n(r, [{
          key: "_asset",
          get: function get() {
            return this.__asset;
          },
          set: function set(t) {
            if (this.__asset !== t && (this.__asset = t, null != this.__asset && this.valid)) {
              for (var e = 0; e < this._blocks.length; ++e) {
                this._blocks[e].destroy();
              }

              this._blocks = [], this._buildImp();
            }
          }
        }, {
          key: "effectAsset",
          get: function get() {
            return this._effectAsset;
          },
          set: function set(t) {
            if (this._effectAsset !== t) {
              this._effectAsset = t;

              for (var e = 0; e < this._blocks.length; ++e) {
                this._blocks[e]._invalidMaterial();
              }
            }
          }
        }, {
          key: "receiveShadow",
          get: function get() {
            return this._receiveShadow;
          },
          set: function set(t) {
            this._receiveShadow = t;

            for (var e = 0; e < this._blocks.length; e++) {
              this._blocks[e]._invalidMaterial();
            }
          }
        }, {
          key: "useNormalMap",
          get: function get() {
            return this._useNormalmap;
          },
          set: function set(t) {
            this._useNormalmap = t;

            for (var e = 0; e < this._blocks.length; e++) {
              this._blocks[e]._invalidMaterial();
            }
          }
        }, {
          key: "usePBR",
          get: function get() {
            return this._usePBR;
          },
          set: function set(t) {
            this._usePBR = t;

            for (var e = 0; e < this._blocks.length; e++) {
              this._blocks[e]._invalidMaterial();
            }
          }
        }, {
          key: "size",
          get: function get() {
            var t = new N(0, 0);
            return t.width = this.blockCount[0] * G * this.tileSize, t.height = this.blockCount[1] * G * this.tileSize, t;
          }
        }, {
          key: "tileSize",
          get: function get() {
            return this._tileSize;
          }
        }, {
          key: "tileCount",
          get: function get() {
            return [this.blockCount[0] * G, this.blockCount[1] * G];
          }
        }, {
          key: "vertexCount",
          get: function get() {
            var t = this.tileCount;
            return t[0] += 1, t[1] += 1, t;
          }
        }, {
          key: "blockCount",
          get: function get() {
            return this._blockCount;
          }
        }, {
          key: "lightMapSize",
          get: function get() {
            return this._lightMapSize;
          }
        }, {
          key: "weightMapSize",
          get: function get() {
            return this._weightMapSize;
          }
        }, {
          key: "heights",
          get: function get() {
            return this._heights;
          }
        }, {
          key: "weights",
          get: function get() {
            return this._weights;
          }
        }, {
          key: "valid",
          get: function get() {
            return this._blocks.length > 0;
          }
        }, {
          key: "info",
          get: function get() {
            var t = new Kt();
            return t.tileSize = this.tileSize, t.blockCount[0] = this.blockCount[0], t.blockCount[1] = this.blockCount[1], t.weightMapSize = this.weightMapSize, t.lightMapSize = this.lightMapSize, t;
          }
        }]), r;
      }(D), Dt = a((Ht = Gt).prototype, "__asset", [Ct, T, V], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Vt = a(Ht.prototype, "_effectAsset", [At, T, V, xt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ft = a(Ht.prototype, "_lightmapInfos", [Et, T, V], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Xt = a(Ht.prototype, "_receiveShadow", [It, T, V], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Wt = a(Ht.prototype, "_useNormalmap", [Lt, T, V], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), jt = a(Ht.prototype, "_usePBR", [Rt, T, V], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), a(Ht.prototype, "_asset", [Nt, Tt], Object.getOwnPropertyDescriptor(Ht.prototype, "_asset"), Ht.prototype), a(Ht.prototype, "effectAsset", [Bt, Pt], Object.getOwnPropertyDescriptor(Ht.prototype, "effectAsset"), Ht.prototype), a(Ht.prototype, "receiveShadow", [L], Object.getOwnPropertyDescriptor(Ht.prototype, "receiveShadow"), Ht.prototype), a(Ht.prototype, "useNormalMap", [L], Object.getOwnPropertyDescriptor(Ht.prototype, "useNormalMap"), Ht.prototype), a(Ht.prototype, "usePBR", [L], Object.getOwnPropertyDescriptor(Ht.prototype, "usePBR"), Ht.prototype), a(Ht.prototype, "info", [Ot], Object.getOwnPropertyDescriptor(Ht.prototype, "info"), Ht.prototype), Ut = Ht)) || Ut) || Ut) || Ut) || Ut));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/texture-buffer-pool-32e209c1.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js"], function (t) {
  "use strict";

  var e, i, n, h, s, r, u, a, o;
  return {
    setters: [function (t) {
      e = t.b4, i = t.bd, n = t.dw, h = t.av, s = t.H, r = t.I, u = t.J, a = t.x, o = t.am;
    }],
    execute: function execute() {
      var _, f;

      function c(t) {
        return --t, t |= t >> 16, t |= t >> 8, t |= t >> 4, t |= t >> 2, t |= t >> 1, ++t;
      }

      function d(t, e) {
        return Math.ceil(t / e) * e;
      }

      t({
        P: void 0,
        R: void 0,
        n: c
      }), function (t) {
        t[t.OPAQUE = 0] = "OPAQUE", t[t.TRANSPARENT = 1] = "TRANSPARENT", t[t.OVERLAY = 2] = "OVERLAY";
      }(_ || (_ = t("R", {}))), function (t) {
        t[t.DEFAULT = 1] = "DEFAULT", t[t.FORWARD = 2] = "FORWARD", t[t.SHADOWCAST = 4] = "SHADOWCAST";
      }(f || (f = t("P", {}))), t("T", function () {
        function t(t) {
          this._device = void 0, this._format = a.UNKNOWN, this._formatSize = 0, this._chunks = [], this._chunkCount = 0, this._handles = [], this._region0 = new o(), this._region1 = new o(), this._region2 = new o(), this._roundUpFn = null, this._bufferViewCtor = Uint8Array, this._channels = 4, this._alignment = 1, this._device = t;
        }

        var _ = t.prototype;
        return _.initialize = function (t) {
          var n = e[t.format];
          this._format = t.format, this._formatSize = n.size, this._channels = n.count, this._bufferViewCtor = i(n), this._roundUpFn = t.roundUpFn || null, this._alignment = t.alignment || 1, t.inOrderFree && (this.alloc = this._McDonaldAlloc);
        }, _.destroy = function () {
          for (var t = 0; t < this._chunkCount; ++t) {
            this._chunks[t].texture.destroy();
          }

          this._chunks.length = 0, this._handles.length = 0;
        }, _.alloc = function (t, e) {
          t = d(t, this._alignment);
          var i = -1,
              n = -1;
          if (void 0 !== e && (i = e, n = this._findAvailableSpace(t, i)), n < 0) for (var h = 0; h < this._chunkCount && (i = h, !((n = this._findAvailableSpace(t, i)) >= 0)); ++h) {
            ;
          }

          if (n >= 0) {
            var s = this._chunks[i];
            s.start += t;
            var r = {
              chunkIdx: i,
              start: n,
              end: n + t,
              texture: s.texture
            };
            return this._handles.push(r), r;
          }

          var u = Math.sqrt(t / this._formatSize),
              a = this._roundUpFn && this._roundUpFn(u, this._formatSize) || Math.max(1024, c(u)),
              o = this._chunks[this.createChunk(a)];

          o.start += t;
          var _ = {
            chunkIdx: this._chunkCount - 1,
            start: 0,
            end: t,
            texture: o.texture
          };
          return this._handles.push(_), _;
        }, _.free = function (t) {
          for (var e = 0; e < this._handles.length; ++e) {
            if (this._handles[e] === t) return this._chunks[t.chunkIdx].end = t.end, void this._handles.splice(e, 1);
          }
        }, _.createChunk = function (t) {
          var e = t * t * this._formatSize;
          n("TextureBufferPool: Allocate chunk " + this._chunkCount + ", size: " + e + ", format: " + this._format);
          var i = {
            texture: this._device.createTexture(new h(s.TEX2D, r.SAMPLED | r.TRANSFER_DST, this._format, t, t, u.IMMUTABLE)),
            size: e,
            start: 0,
            end: e
          };
          return this._chunks[this._chunkCount] = i, this._chunkCount++;
        }, _.update = function (t, e) {
          var i = [],
              n = [],
              h = t.start / this._formatSize,
              s = e.byteLength / this._formatSize,
              r = h % t.texture.width,
              u = Math.floor(h / t.texture.width),
              a = Math.min(t.texture.width - r, s),
              o = 0;
          r > 0 && (this._region0.texOffset.x = r, this._region0.texOffset.y = u, this._region0.texExtent.width = a, this._region0.texExtent.height = 1, i.push(new this._bufferViewCtor(e, o * this._formatSize, a * this._channels)), n.push(this._region0), r = 0, u += 1, s -= a, o += a), s > 0 && (this._region1.texOffset.x = r, this._region1.texOffset.y = u, s > t.texture.width ? (this._region1.texExtent.width = t.texture.width, this._region1.texExtent.height = Math.floor(s / t.texture.width), a = this._region1.texExtent.width * this._region1.texExtent.height) : (a = s, this._region1.texExtent.width = a, this._region1.texExtent.height = 1), i.push(new this._bufferViewCtor(e, o * this._formatSize, a * this._channels)), n.push(this._region1), r = 0, u += this._region1.texExtent.height, s -= a, o += a), s > 0 && (this._region2.texOffset.x = r, this._region2.texOffset.y = u, this._region2.texExtent.width = s, this._region2.texExtent.height = 1, i.push(new this._bufferViewCtor(e, o * this._formatSize, s * this._channels)), n.push(this._region2)), this._device.copyBuffersToTexture(i, t.texture, n);
        }, _._findAvailableSpace = function (t, e) {
          var i = this._chunks[e],
              n = !1,
              h = i.start;
          if (h + t <= i.size) n = !0;else {
            h = 0;

            for (var s = this._handles.filter(function (t) {
              return t.chunkIdx === e;
            }).sort(function (t, e) {
              return t.start - e.start;
            }), r = 0; r < s.length; r++) {
              var u = s[r];

              if (h + t <= u.start) {
                n = !0;
                break;
              }

              h = u.end;
            }

            !n && h + t <= i.size && (n = !0);
          }
          return n ? h : -1;
        }, _._McDonaldAlloc = function (t) {
          t = d(t, this._alignment);

          for (var e = 0; e < this._chunkCount; ++e) {
            var i = this._chunks[e],
                n = !1,
                h = i.start;

            if (h + t <= i.end ? n = !0 : h > i.end ? h + t <= i.size ? n = !0 : t <= i.end && (i.start = h = 0, n = !0) : h === i.end && (i.start = h = 0, i.end = i.size, t <= i.end && (n = !0)), n) {
              i.start += t;
              var s = {
                chunkIdx: e,
                start: h,
                end: h + t,
                texture: i.texture
              };
              return this._handles.push(s), s;
            }
          }

          var r = Math.sqrt(t / this._formatSize),
              u = this._roundUpFn && this._roundUpFn(r, this._formatSize) || Math.max(1024, c(r)),
              a = this._chunks[this.createChunk(u)];

          a.start += t;
          var o = {
            chunkIdx: this._chunkCount,
            start: 0,
            end: t,
            texture: a.texture
          };
          return this._handles.push(o), o;
        }, t;
      }());
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/tiled-map.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./sprite-frame-1c023836.js", "./sprite-723e419c.js", "./renderable-2d-f6cb180f.js", "./deprecated-ddee6a28.js", "./ZipUtils-3ae2be0b.js"], function (t) {
  "use strict";

  var e, i, r, s, n, o, a, h, l, u, g, f, d, _, p, c, m, y, v, A, w, b, S, T, x, I, C, D, N, O, P, E, G, z, L, R, F, M, X, U, j, H, B, k, Y, V, Z;

  return {
    setters: [function (t) {
      e = t.cK, i = t.c3, r = t.cj, s = t.cf, n = t.ch, o = t.c, a = t.f, h = t.e2, l = t.ef, u = t.ek, g = t.d4, f = t.fY, d = t.ec, _ = t.w, p = t.eg, c = t.fZ, m = t.f_, y = t.gC, v = t.eh, A = t.ed, w = t.dO, b = t.cc, S = t.c5, T = t.gD, x = t.dH, I = t.d6, C = t.c_, D = t.V, N = t.dk, O = t.d7, P = t.df, E = t.ei, G = t.t, z = t.dB, L = t.eu, R = t.ej, F = t.eR;
    }, function (t) {
      M = t.v, X = t.d;
    }, function () {}, function () {}, function () {}, function () {}, function () {}, function (t) {
      U = t.S;
    }, function (t) {
      j = t.c, H = t.a;
    }, function (t) {
      B = t.U, k = t.M, Y = t.R;
    }, function () {}, function (t) {
      V = t.c, Z = t._;
    }],
    execute: function execute() {
      var K, W, q, J, $, Q, tt;
      !function (t) {
        t[t.ORTHO = 0] = "ORTHO", t[t.HEX = 1] = "HEX", t[t.ISO = 2] = "ISO";
      }(K || (K = {})), e(K), function (t) {
        t[t.NONE = 0] = "NONE", t[t.MAP = 1] = "MAP", t[t.LAYER = 2] = "LAYER", t[t.OBJECTGROUP = 3] = "OBJECTGROUP", t[t.OBJECT = 4] = "OBJECT", t[t.TILE = 5] = "TILE";
      }(W || (W = {})), e(W), function (t) {
        t[t.HORIZONTAL = 2147483648] = "HORIZONTAL", t[t.VERTICAL = 1073741824] = "VERTICAL", t[t.DIAGONAL = 536870912] = "DIAGONAL", t[t.FLIPPED_ALL = 4026531840] = "FLIPPED_ALL", t[t.FLIPPED_MASK = 268435455] = "FLIPPED_MASK";
      }(q || (q = {})), e(q), function (t) {
        t[t.STAGGERAXIS_X = 0] = "STAGGERAXIS_X", t[t.STAGGERAXIS_Y = 1] = "STAGGERAXIS_Y";
      }(J || (J = {})), e(J), function (t) {
        t[t.STAGGERINDEX_ODD = 0] = "STAGGERINDEX_ODD", t[t.STAGGERINDEX_EVEN = 1] = "STAGGERINDEX_EVEN";
      }($ || ($ = {})), e($), function (t) {
        t[t.RightDown = 0] = "RightDown", t[t.RightUp = 1] = "RightUp", t[t.LeftDown = 2] = "LeftDown", t[t.LeftUp = 3] = "LeftUp";
      }(Q || (Q = {})), e(Q), function (t) {
        t[t.RECT = 0] = "RECT", t[t.ELLIPSE = 1] = "ELLIPSE", t[t.POLYGON = 2] = "POLYGON", t[t.POLYLINE = 3] = "POLYLINE", t[t.IMAGE = 4] = "IMAGE", t[t.TEXT = 5] = "TEXT";
      }(tt || (tt = {})), e(tt);

      var et = function () {
        function t() {
          this.name = "", this.firstGid = 0, this.spacing = 0, this.margin = 0, this.sourceImage = void 0, this.imageName = null, this.imageSize = new s(0, 0), this.tileOffset = new i(0, 0), this._tileSize = new s(0, 0), this.collection = !1;
        }

        return t.prototype.rectForGID = function (t, e) {
          var i = e || new n(0, 0, 0, 0);
          i.width = this._tileSize.width, i.height = this._tileSize.height;
          var r = t;
          r &= q.FLIPPED_MASK, r -= this.firstGid;
          var s = Math.floor((this.imageSize.width - 2 * this.margin + this.spacing) / (this._tileSize.width + this.spacing));
          return i.x = Math.round(r % s * (this._tileSize.width + this.spacing) + this.margin), i.y = Math.round(Math.floor(r / s) * (this._tileSize.height + this.spacing) + this.margin), i;
        }, t;
      }(),
          it = function () {
        function t() {
          this.properties = {}, this.name = "", this.objects = [], this.visible = !0, this.opacity = 0, this.color = new r(255, 255, 255, 255), this.offset = new i(0, 0), this.draworder = "topdown", this.tintColor = null;
        }

        var e = t.prototype;
        return e.getProperties = function () {
          return this.properties;
        }, e.setProperties = function (t) {
          this.properties = t;
        }, t;
      }(),
          rt = function () {
        function t() {
          this.properties = {}, this.name = "", this.layerSize = null, this.tiles = [], this.visible = !0, this.opacity = 0, this.ownTiles = !0, this.minGID = 1e5, this.maxGID = 0, this.offset = new i(0, 0), this.tintColor = null;
        }

        var e = t.prototype;
        return e.getProperties = function () {
          return this.properties;
        }, e.setProperties = function (t) {
          this.properties = t;
        }, t;
      }();

      rt.ATTRIB_NONE = 1, rt.ATTRIB_BASE64 = 2, rt.ATTRIB_GZIP = 4, rt.ATTRIB_ZLIB = 8;

      var st = function st() {
        this.name = "", this.visible = !0, this.width = 0, this.height = 0, this.offset = new i(0, 0), this.opacity = 0, this.trans = new r(255, 255, 255, 255), this.sourceImage = void 0, this.tintColor = null;
      };

      function nt(t) {
        var e = j.HorizontalAlign;

        switch (t) {
          case "center":
            return e.CENTER;

          case "right":
            return e.RIGHT;

          default:
            return e.LEFT;
        }
      }

      function ot(t) {
        var e = j.VerticalAlign;

        switch (t) {
          case "center":
            return e.CENTER;

          case "bottom":
            return e.BOTTOM;

          default:
            return e.TOP;
        }
      }

      function at(t) {
        if (!t) return new r(0, 0, 0, 255);

        if (8 === (t = -1 !== t.indexOf("#") ? t.substring(1) : t).length) {
          var e = parseInt(t.substr(0, 2), 16) || 255,
              i = parseInt(t.substr(2, 2), 16) || 0,
              s = parseInt(t.substr(4, 2), 16) || 0,
              n = parseInt(t.substr(6, 2), 16) || 0;
          return new r(i, s, n, e);
        }

        var o = parseInt(t.substr(0, 2), 16) || 0,
            a = parseInt(t.substr(2, 2), 16) || 0,
            h = parseInt(t.substr(4, 2), 16) || 0;
        return new r(o, a, h, 255);
      }

      function ht(t, e) {
        for (var i = [], r = t.getElementsByTagName("properties"), s = 0; s < r.length; ++s) {
          for (var n = r[s].getElementsByTagName("property"), o = 0; o < n.length; ++o) {
            i.push(n[o]);
          }
        }

        e = e || {};

        for (var a = 0; a < i.length; a++) {
          var h = i[a],
              l = h.getAttribute("name"),
              u = h.getAttribute("type") || "string",
              g = h.getAttribute("value");
          "int" === u ? g = parseInt(g) : "float" === u ? g = parseFloat(g) : "bool" === u ? g = "true" === g : "color" === u && (g = at(g)), e[l] = g;
        }

        return e;
      }

      var lt,
          ut,
          gt,
          ft,
          dt,
          _t,
          pt,
          ct,
          mt,
          yt,
          vt,
          At,
          wt,
          bt,
          St,
          Tt,
          xt = function () {
        function t(t, e, i, r, n) {
          this.properties = {}, this.orientation = null, this.parentElement = null, this.parentGID = 0, this.layerAttrs = 0, this.storingCharacters = !1, this.currentString = null, this.renderOrder = Q.RightDown, this._supportVersion = [1, 4, 0], this._objectGroups = [], this._allChildren = [], this._mapSize = new s(0, 0), this._tileSize = new s(0, 0), this._layers = [], this._tilesets = [], this._imageLayers = [], this._tileProperties = new Map(), this._tileAnimations = {}, this._tsxContentMap = null, this._spriteFrameMap = null, this._spfSizeMap = {}, this._staggerAxis = null, this._staggerIndex = null, this._hexSideLength = 0, this._imageLayerSPF = null, this.initWithXML(t, e, i, r, n);
        }

        var e = t.prototype;
        return e.getOrientation = function () {
          return this.orientation;
        }, e.setOrientation = function (t) {
          this.orientation = t;
        }, e.getStaggerAxis = function () {
          return this._staggerAxis;
        }, e.setStaggerAxis = function (t) {
          this._staggerAxis = t;
        }, e.getStaggerIndex = function () {
          return this._staggerIndex;
        }, e.setStaggerIndex = function (t) {
          this._staggerIndex = t;
        }, e.getHexSideLength = function () {
          return this._hexSideLength;
        }, e.setHexSideLength = function (t) {
          this._hexSideLength = t;
        }, e.getMapSize = function () {
          return new s(this._mapSize.width, this._mapSize.height);
        }, e.setMapSize = function (t) {
          this._mapSize.width = t.width, this._mapSize.height = t.height;
        }, e.getTileSize = function () {
          return new s(this._tileSize.width, this._tileSize.height);
        }, e.setTileSize = function (t) {
          this._tileSize.width = t.width, this._tileSize.height = t.height;
        }, e.getLayers = function () {
          return this._layers;
        }, e.setLayers = function (t) {
          this._allChildren.push(t), this._layers.push(t);
        }, e.getImageLayers = function () {
          return this._imageLayers;
        }, e.setImageLayers = function (t) {
          this._allChildren.push(t), this._imageLayers.push(t);
        }, e.getTilesets = function () {
          return this._tilesets;
        }, e.setTilesets = function (t) {
          this._tilesets.push(t);
        }, e.getObjectGroups = function () {
          return this._objectGroups;
        }, e.setObjectGroups = function (t) {
          this._allChildren.push(t), this._objectGroups.push(t);
        }, e.getAllChildren = function () {
          return this._allChildren;
        }, e.getParentElement = function () {
          return this.parentElement;
        }, e.setParentElement = function (t) {
          this.parentElement = t;
        }, e.getParentGID = function () {
          return this.parentGID;
        }, e.setParentGID = function (t) {
          this.parentGID = t;
        }, e.getLayerAttribs = function () {
          return this.layerAttrs;
        }, e.setLayerAttribs = function (t) {
          this.layerAttrs = t;
        }, e.getStoringCharacters = function () {
          return this.storingCharacters;
        }, e.setStoringCharacters = function (t) {
          this.storingCharacters = t;
        }, e.getProperties = function () {
          return this.properties;
        }, e.setProperties = function (t) {
          this.properties = t;
        }, e.initWithXML = function (t, e, i, r, s) {
          return this._tilesets.length = 0, this._layers.length = 0, this._imageLayers.length = 0, this._tsxContentMap = e, this._spriteFrameMap = i, this._imageLayerSPF = s, this._spfSizeMap = r, this._objectGroups.length = 0, this._allChildren.length = 0, this.properties = {}, this._tileProperties = new Map(), this._tileAnimations = new Map(), this.currentString = "", this.storingCharacters = !1, this.layerAttrs = rt.ATTRIB_NONE, this.parentElement = null, this.parseXMLString(t);
        }, e.parseXMLString = function (e, i) {
          var r,
              n = new M().parse(e).documentElement,
              h = n.getAttribute("orientation"),
              l = n.getAttribute("staggeraxis"),
              u = n.getAttribute("staggerindex"),
              g = n.getAttribute("hexsidelength"),
              f = n.getAttribute("renderorder"),
              d = n.getAttribute("version") || "1.0.0";

          if ("map" === n.nodeName) {
            var _ = d.split("."),
                p = this._supportVersion;

            for (r = 0; r < p.length; r++) {
              var c = parseInt(_[r]) || 0;

              if (p[r] < c) {
                o(7216, d);
                break;
              }
            }

            "orthogonal" === h ? this.orientation = K.ORTHO : "isometric" === h ? this.orientation = K.ISO : "hexagonal" === h ? this.orientation = K.HEX : null !== h && o(7217, h), this.renderOrder = "right-up" === f ? Q.RightUp : "left-up" === f ? Q.LeftUp : "left-down" === f ? Q.LeftDown : Q.RightDown, "x" === l ? this.setStaggerAxis(J.STAGGERAXIS_X) : "y" === l && this.setStaggerAxis(J.STAGGERAXIS_Y), "odd" === u ? this.setStaggerIndex($.STAGGERINDEX_ODD) : "even" === u && this.setStaggerIndex($.STAGGERINDEX_EVEN), g && this.setHexSideLength(parseFloat(g));
            var m = new s(0, 0);
            m.width = parseFloat(n.getAttribute("width")), m.height = parseFloat(n.getAttribute("height")), this.setMapSize(m), (m = new s(0, 0)).width = parseFloat(n.getAttribute("tilewidth")), m.height = parseFloat(n.getAttribute("tileheight")), this.setTileSize(m), this.properties = ht(n);
          }

          var y = n.getElementsByTagName("tileset");

          for ("map" !== n.nodeName && (y = []).push(n), r = 0; r < y.length; r++) {
            var v = y[r],
                A = v.getAttribute("source");

            if (A) {
              var w = parseInt(v.getAttribute("firstgid")),
                  b = this._tsxContentMap[A];
              b && this.parseXMLString(b, w);
            } else {
              var S = v.getElementsByTagName("image"),
                  T = S.length > 1,
                  x = S[0],
                  I = x.getAttribute("source");
              I = I.replace(/\\/g, "/");
              var C = v.getElementsByTagName("tile"),
                  D = C && C.length || 1,
                  N = null,
                  O = v.getAttribute("name") || "",
                  P = parseInt(v.getAttribute("spacing")) || 0,
                  E = parseInt(v.getAttribute("margin")) || 0,
                  G = i || parseInt(v.getAttribute("firstgid")) || 0,
                  z = new s(0, 0);
              z.width = parseFloat(v.getAttribute("tilewidth")), z.height = parseFloat(v.getAttribute("tileheight"));
              var L = v.getElementsByTagName("tileoffset")[0],
                  R = 0,
                  F = 0;
              L && (R = parseFloat(L.getAttribute("x")) || 0, F = parseFloat(L.getAttribute("y")) || 0);

              for (var X = null, U = 0; U < D; U++) {
                var j = S[U] ? S[U] : x;

                if (j) {
                  var H = j.getAttribute("source");

                  if (H = H.replace(/\\/g, "/"), !X || T) {
                    if ((X = new et()).name = O, X.firstGid = G & q.FLIPPED_MASK, X.tileOffset.x = R, X.tileOffset.y = F, X.collection = T, !T && (X.imageName = H, X.imageSize.width = parseFloat(j.getAttribute("width")) || 0, X.imageSize.height = parseFloat(j.getAttribute("height")) || 0, X.sourceImage = this._spriteFrameMap[H], !X.sourceImage)) {
                      var B = t.getNameWithPostfix(H);

                      if (X.imageName = B, X.sourceImage = this._spriteFrameMap[B], !X.sourceImage) {
                        var k = t.getShortName(H);
                        X.imageName = k, X.sourceImage = this._spriteFrameMap[k], X.sourceImage || (console.error("[error]: " + k + " not find in [" + Object.keys(this._spriteFrameMap).join(", ") + "]"), a(7221, H), console.warn("Please try asset type of " + H + " to 'sprite-frame'"));
                      }
                    }

                    X.spacing = P, X.margin = E, X._tileSize.width = z.width, X._tileSize.height = z.height, this.setTilesets(X);
                  }

                  if (N = C && C[U]) {
                    this.parentGID = G + (parseInt(N.getAttribute("id")) || 0);
                    var Y = N.getElementsByTagName("image");

                    if (Y && Y.length > 0) {
                      var V = Y[0],
                          Z = V.getAttribute("source");

                      if (Z = Z.replace(/\\/g, "/"), X.imageName = Z, X.imageSize.width = parseFloat(V.getAttribute("width")) || 0, X.imageSize.height = parseFloat(V.getAttribute("height")) || 0, X._tileSize.width = X.imageSize.width, X._tileSize.height = X.imageSize.height, X.sourceImage = this._spriteFrameMap[Z], !X.sourceImage) {
                        var W = t.getNameWithPostfix(Z);

                        if (X.imageName = W, X.sourceImage = this._spriteFrameMap[W], !X.sourceImage) {
                          var tt = t.getShortName(Z);
                          X.imageName = tt, X.sourceImage = this._spriteFrameMap[tt], X.sourceImage || (a(7221, Z), console.warn("Please try asset type of " + Z + " to 'sprite-frame'"));
                        }
                      }

                      X.firstGid = this.parentGID & q.FLIPPED_MASK;
                    }

                    var it = (q.FLIPPED_MASK & this.parentGID) >>> 0;

                    this._tileProperties.set(it, ht(N));

                    var rt = N.getElementsByTagName("animation");

                    if (rt && rt.length > 0) {
                      var st = rt[0].getElementsByTagName("frame"),
                          nt = {
                        frames: [],
                        dt: 0,
                        frameIdx: 0
                      };

                      this._tileAnimations.set(it, nt);

                      for (var ot = nt.frames, at = 0; at < st.length; at++) {
                        var lt = st[at],
                            ut = G + (parseInt(lt.getAttribute("tileid")) || 0),
                            gt = parseFloat(lt.getAttribute("duration")) || 0;
                        ot.push({
                          tileid: ut,
                          duration: gt / 1e3,
                          grid: null
                        });
                      }
                    }
                  }
                }
              }
            }
          }

          var ft = n.childNodes;

          for (r = 0; r < ft.length; r++) {
            var dt = ft[r];

            if (!this._shouldIgnoreNode(dt)) {
              if ("imagelayer" === dt.nodeName) {
                var _t = this._parseImageLayer(dt);

                _t && this.setImageLayers(_t);
              }

              if ("layer" === dt.nodeName) {
                var pt = this._parseLayer(dt);

                this.setLayers(pt);
              }

              if ("objectgroup" === dt.nodeName) {
                var ct = this._parseObjectGroup(dt);

                this.setObjectGroups(ct);
              }
            }
          }

          return n;
        }, e._shouldIgnoreNode = function (t) {
          return 3 === t.nodeType || 8 === t.nodeType || 4 === t.nodeType;
        }, e._parseImageLayer = function (t) {
          var e = t.getElementsByTagName("image");
          if (!e || 0 === e.length) return null;
          var i = new st();
          i.name = t.getAttribute("name"), i.offset.x = parseFloat(t.getAttribute("offsetx")) || 0, i.offset.y = parseFloat(t.getAttribute("offsety")) || 0;
          var r = t.getAttribute("visible");
          i.visible = !("0" === r);
          var s = t.getAttribute("opacity");
          i.opacity = s ? Math.round(255 * parseFloat(s)) : 255;
          var n = t.getAttribute("tintcolor");
          i.tintColor = n ? at(n) : null;
          var o = e[0],
              h = o.getAttribute("source");
          return i.sourceImage = this._imageLayerSPF[h], i.width = parseInt(o.getAttribute("width")) || 0, i.height = parseInt(o.getAttribute("height")) || 0, i.trans = at(o.getAttribute("trans")), i.sourceImage ? i : (a(7221, h), console.warn("Please try asset type of " + h + " to 'sprite-frame'"), null);
        }, e._parseLayer = function (t) {
          var e = t.getElementsByTagName("data")[0],
              r = new rt();
          r.name = t.getAttribute("name");
          var n = new s(0, 0);
          n.width = parseFloat(t.getAttribute("width")), n.height = parseFloat(t.getAttribute("height")), r.layerSize = n;
          var a = t.getAttribute("visible");
          r.visible = !("0" === a);
          var h = t.getAttribute("opacity");
          r.opacity = h ? Math.round(255 * parseFloat(h)) : 255, r.offset = new i(parseFloat(t.getAttribute("offsetx")) || 0, parseFloat(t.getAttribute("offsety")) || 0);
          var l = t.getAttribute("tintcolor");
          r.tintColor = l ? at(l) : null;

          for (var u = "", g = 0; g < e.childNodes.length; g++) {
            u += e.childNodes[g].nodeValue;
          }

          u = u.trim();

          var f,
              d = e.getAttribute("compression"),
              _ = e.getAttribute("encoding");

          if (d && "gzip" !== d && "zlib" !== d) return o(7218), null;

          switch (d) {
            case "gzip":
              f = V.unzipBase64AsArray(u, 4);
              break;

            case "zlib":
              f = function (t) {
                if (t.length % 4 != 0) return null;

                for (var e = t.length / 4, i = window.Uint32Array ? new Uint32Array(e) : [], r = 0; r < e; r++) {
                  var s = 4 * r;
                  i[r] = t[s] + 256 * t[s + 1] + 65536 * t[s + 2] + t[s + 3] * (1 << 24);
                }

                return i;
              }(new Z.Inflate(V.Base64.decodeAsArray(u, 1)).decompress());

              break;

            case null:
            case "":
              if ("base64" === _) f = V.Base64.decodeAsArray(u, 4);else if ("csv" === _) {
                f = [];

                for (var p = u.split(","), c = 0; c < p.length; c++) {
                  f.push(parseInt(p[c]));
                }
              } else {
                var m = e.getElementsByTagName("tile");
                f = [];

                for (var y = 0; y < m.length; y++) {
                  f.push(parseInt(m[y].getAttribute("gid")));
                }
              }
              break;

            default:
              this.layerAttrs === rt.ATTRIB_NONE && o(7219);
          }

          return f && (r.tiles = new Uint32Array(f)), r.properties = ht(t), r;
        }, e._parseObjectGroup = function (t) {
          var e = new it();
          e.name = t.getAttribute("name") || "", e.offset = new i(parseFloat(t.getAttribute("offsetx")), parseFloat(t.getAttribute("offsety")));
          var r = t.getAttribute("opacity");
          e.opacity = r ? Math.round(255 * parseFloat(r)) : 255;
          var s = t.getAttribute("tintcolor");
          e.tintColor = s ? at(s) : null;
          var n = t.getAttribute("visible");
          n && 0 === parseInt(n) && (e.visible = !1);
          var o = t.getAttribute("color");
          o && e.color.fromHEX(o);
          var a = t.getAttribute("draworder");
          a && (e.draworder = a), e.setProperties(ht(t));
          var h = t.getElementsByTagName("object");

          if (h) {
            for (var l = 0; l < h.length; l++) {
              var u = h[l],
                  g = {};
              g.id = u.getAttribute("id") || l, g.name = u.getAttribute("name") || "", g.width = parseFloat(u.getAttribute("width")) || 0, g.height = parseFloat(u.getAttribute("height")) || 0, g.x = parseFloat(u.getAttribute("x")) || 0, g.y = parseFloat(u.getAttribute("y")) || 0, g.rotation = parseFloat(u.getAttribute("rotation")) || 0, ht(u, g);
              var f = u.getAttribute("visible");
              g.visible = !(f && 0 === parseInt(f));
              var d = u.getElementsByTagName("text");

              if (d && d.length > 0) {
                var _ = d[0];
                g.type = tt.TEXT, g.wrap = "1" === _.getAttribute("wrap"), g.color = at(_.getAttribute("color")), g.halign = nt(_.getAttribute("halign")), g.valign = ot(_.getAttribute("valign")), g.pixelsize = parseInt(_.getAttribute("pixelsize")) || 16, g.text = _.childNodes[0].nodeValue;
              }

              var p = u.getAttribute("gid");
              p && (g.gid = parseInt(p), g.type = tt.IMAGE);
              var c = u.getElementsByTagName("ellipse");
              c && c.length > 0 && (g.type = tt.ELLIPSE);
              var m = u.getElementsByTagName("polygon");

              if (m && m.length > 0) {
                g.type = tt.POLYGON;
                var y = m[0].getAttribute("points");
                y && (g.points = this._parsePointsString(y));
              }

              var v = u.getElementsByTagName("polyline");

              if (v && v.length > 0) {
                g.type = tt.POLYLINE;
                var A = v[0].getAttribute("points");
                A && (g.polylinePoints = this._parsePointsString(A));
              }

              g.type || (g.type = tt.RECT), e.objects.push(g);
            }

            "index" !== a && e.objects.sort(function (t, e) {
              return t.y - e.y;
            });
          }

          return e;
        }, e._parsePointsString = function (t) {
          if (!t) return null;

          for (var e = [], i = t.split(" "), r = 0; r < i.length; r++) {
            var s = i[r].split(",");
            e.push({
              x: parseFloat(s[0]),
              y: parseFloat(s[1])
            });
          }

          return e;
        }, e.setTileAnimations = function (t) {
          this._tileAnimations = t;
        }, e.getTileAnimations = function () {
          return this._tileAnimations;
        }, e.getTileProperties = function () {
          return this._tileProperties;
        }, e.setTileProperties = function (t) {
          this._tileProperties = t;
        }, e.getCurrentString = function () {
          return this.currentString;
        }, e.setCurrentString = function (t) {
          this.currentString = t;
        }, t.getNameWithPostfix = function (t) {
          var e = (t = t.replace(/\\/g, "/")).lastIndexOf("/") + 1,
              i = t.length;
          return t.substring(e, i);
        }, t.getShortName = function (t) {
          var e = (t = t.replace(/\\/g, "/")).lastIndexOf("/") + 1,
              i = t.lastIndexOf(".");
          return i = i < 0 ? t.length : i, t.substring(e, i);
        }, h(t, [{
          key: "mapSize",
          get: function get() {
            return this._mapSize;
          }
        }, {
          key: "tileSize",
          get: function get() {
            return this._tileSize;
          }
        }, {
          key: "mapWidth",
          get: function get() {
            return this._mapSize.width;
          },
          set: function set(t) {
            this._mapSize.width = t;
          }
        }, {
          key: "mapHeight",
          get: function get() {
            return this._mapSize.height;
          },
          set: function set(t) {
            this._mapSize.height = t;
          }
        }, {
          key: "tileWidth",
          get: function get() {
            return this._tileSize.width;
          },
          set: function set(t) {
            this._tileSize.width = t;
          }
        }, {
          key: "tileHeight",
          get: function get() {
            return this._tileSize.height;
          },
          set: function set(t) {
            this._tileSize.height = t;
          }
        }]), t;
      }(),
          It = t("TiledTile", (lt = l("cc.TiledTile"), ut = c(), gt = m(), ft = y(B), dt = u(g), _t = u(g), pt = u(g), ct = u(g), mt = u(g), lt(yt = ut(yt = gt(yt = ft(yt = f((bt = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._layer = null, v(e, "_x", At, A(e)), v(e, "_y", wt, A(e)), e;
        }

        d(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          var t = this.node.parent;
          this._layer = t.getComponent("cc.TiledLayer"), this._resetTile(), this.updateInfo();
        }, i.onDisable = function () {
          this._resetTile();
        }, i._resetTile = function () {
          this._layer && this._layer.getTiledTileAt(this._x, this._y) === this && this._layer.setTiledTileAt(this._x, this._y, null);
        }, i.updateInfo = function () {
          if (this._layer) {
            var t = this._x,
                e = this._y;
            if (this._layer.getTiledTileAt(t, e)) _("There is already a TiledTile at [%s, %s]", t, e);else {
              var i = this._layer.getPositionAt(t, e);

              this.node.setPosition(i.x, i.y), this._layer.setTiledTileAt(t, e, this);
            }
          }
        }, h(e, [{
          key: "x",
          get: function get() {
            return this._x;
          },
          set: function set(t) {
            t !== this._x && (this._layer && this._layer.isInvalidPosition(t, this._y) ? _("Invalid x, the valid value is between [%s] ~ [%s]", 0, this._layer.layerSize.width) : (this._resetTile(), this._x = t, this.updateInfo()));
          }
        }, {
          key: "y",
          get: function get() {
            return this._y;
          },
          set: function set(t) {
            t !== this._y && (this._layer && this._layer.isInvalidPosition(this._x, t) ? _("Invalid y, the valid value is between [%s] ~ [%s]", 0, this._layer.layerSize.height) : (this._resetTile(), this._y = t, this.updateInfo()));
          }
        }, {
          key: "grid",
          get: function get() {
            return this._layer ? this._layer.getTileGIDAt(this._x, this._y) : 0;
          },
          set: function set(t) {
            this._layer && this._layer.setTileGIDAt(t, this._x, this._y);
          }
        }]), e;
      }(w), At = p((vt = bt).prototype, "_x", [dt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), wt = p(vt.prototype, "_y", [_t], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), p(vt.prototype, "x", [pt], Object.getOwnPropertyDescriptor(vt.prototype, "x"), vt.prototype), p(vt.prototype, "y", [ct], Object.getOwnPropertyDescriptor(vt.prototype, "y"), vt.prototype), p(vt.prototype, "grid", [mt], Object.getOwnPropertyDescriptor(vt.prototype, "grid"), vt.prototype), yt = vt)) || yt) || yt) || yt) || yt) || yt));

      function Ct(t, e, i) {
        var r = i || t.sourceImage,
            s = r.texture,
            o = t.collection;

        if (!t.imageSize.width || !t.imageSize.height) {
          var a = t.sourceImage;
          t.imageSize.width = a.width, t.imageSize.height = a.height;
        }

        var h = t.imageSize.width,
            l = t.imageSize.height,
            u = t._tileSize.width,
            g = t._tileSize.height,
            f = r.width,
            d = r.height,
            _ = t.spacing,
            p = t.margin,
            c = 1;

        if (!o) {
          var m = Math.floor((h - 2 * p + _) / (u + _)),
              y = Math.floor((l - 2 * p + _) / (g + _));
          c = Math.max(1, y * m);
        }

        for (var v = t.firstGid, A = null, w = !!e.get(v), b = t.firstGid + c, S = v; S < b && (w && !e.get(S) && (w = !1), w || !e.get(S)); ++S) {
          if (A = {
            tileset: t,
            x: 0,
            y: 0,
            width: u,
            height: g,
            t: 0,
            l: 0,
            r: 0,
            b: 0,
            cx: 0,
            cy: 0,
            offsetX: 0,
            offsetY: 0,
            rotated: !1,
            gid: S,
            spriteFrame: r,
            texture: s
          }, t.rectForGID(S, A), !i || c > 1) {
            if (i) {
              A._name = i.name;
              var T = i.unbiasUV[0],
                  x = i.rotated ? i.unbiasUV[1] : i.unbiasUV[5];
              A.l = T + (A.x + .5) / f, A.t = x + (A.y + .5) / d, A.r = T + (A.x + A.width - .5) / f, A.b = x + (A.y + A.height - .5) / d, A._rect = new n(A.x, A.y, A.width, A.height);
            } else A.l = A.x / f, A.t = A.y / d, A.r = (A.x + A.width) / f, A.b = (A.y + A.height) / d, A._rect = new n(A.x, A.y, A.width, A.height);
          } else i.rotated ? (A._rotated = !0, A._name = i.name, A._rect = i.getRect(), A.l = i.unbiasUV[0], A.t = i.unbiasUV[1], A.r = i.unbiasUV[4], A.b = i.unbiasUV[3]) : (A._name = i.name, A._rect = i.getRect(), A.l = i.unbiasUV[0], A.t = i.unbiasUV[5], A.r = i.unbiasUV[2], A.b = i.unbiasUV[1]);
          A.cx = (A.l + A.r) / 2, A.cy = (A.t + A.b) / 2, e.set(S, A);
        }
      }

      for (var Dt, Nt, Ot, Pt, Et, Gt, zt, Lt, Rt, Ft, Mt, Xt, Ut, jt, Ht, Bt, kt, Yt, Vt, Zt, Kt, Wt, qt, Jt, $t, Qt, te, ee, ie, re, se, ne, oe, ae, he, le, ue, ge, fe, de = new b(), _e = new i(), pe = new S(), ce = new S(), me = {
        row: 0,
        col: 0
      }, ye = t("TiledUserNodeData", l("cc.TiledUserNodeData")(St = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._index = -1, e._row = -1, e._col = -1, e._tiledLayer = null, e;
        }

        return d(e, t), e;
      }(w)) || St), ve = t("TiledLayer", l("cc.TiledLayer")(Tt = function (t) {
        function e() {
          var e;
          return (e = t.call(this) || this)._userNodeGrid = {}, e._userNodeMap = {}, e._userNodeDirty = !1, e.tiledTiles = [], e._viewPort = {
            x: -1,
            y: -1,
            width: -1,
            height: -1
          }, e._cullingRect = {
            leftDown: {
              row: -1,
              col: -1
            },
            rightTop: {
              row: -1,
              col: -1
            }
          }, e._cullingDirty = !0, e._rightTop = {
            row: -1,
            col: -1
          }, e._layerInfo = null, e._mapInfo = null, e._topOffset = 0, e._downOffset = 0, e._leftOffset = 0, e._rightOffset = 0, e.tiles = [], e.vertices = [], e._verticesDirty = !0, e._layerName = "", e._layerSize = void 0, e._minGID = void 0, e._maxGID = void 0, e._layerOrientation = null, e._opacity = void 0, e._tintColor = void 0, e.texGrids = null, e._textures = [], e._tilesets = [], e._leftDownToCenterX = 0, e._leftDownToCenterY = 0, e._hasTiledNodeGrid = !1, e._hasAniGrid = !1, e._animations = null, e._enableCulling = void 0, e.colorChanged = !1, e._properties = void 0, e.renderOrder = void 0, e._staggerAxis = void 0, e._staggerIndex = void 0, e._hexSideLength = void 0, e._mapTileSize = void 0, e._odd_even = void 0, e._diffX1 = void 0, e._diffY1 = void 0, e._useAutomaticVertexZ = void 0, e._vertexZvalue = void 0, e._offset = void 0, e._meshRenderDataArray = null, e._meshRenderDataArrayIdx = 0, e;
        }

        d(e, t);
        var r = e.prototype;
        return r.hasTiledNode = function () {
          return this._hasTiledNodeGrid;
        }, r.hasAnimation = function () {
          return this._hasAniGrid;
        }, r.addUserNode = function (t) {
          var e = t.getComponent(ye);
          return e ? (_("CCTiledLayer:addUserNode node has been added"), !1) : (e = t.addComponent(ye), t.parent = this.node, this._userNodeMap[t.uuid] = e, e._row = -1, e._col = -1, e._tiledLayer = this, this._nodeLocalPosToLayerPos(t.getPosition(), _e), this._positionToRowCol(_e.x, _e.y, me), this._addUserNodeToGrid(e, me), this._updateCullingOffsetByUserNode(t), t.on(T.TRANSFORM_CHANGED, this._userNodePosChange, e), t.on(T.SIZE_CHANGED, this._userNodeSizeChange, e), !0);
        }, r.removeUserNode = function (t) {
          var e = t.getComponent(ye);
          return e ? (t.off(T.TRANSFORM_CHANGED, this._userNodePosChange, e), t.off(T.SIZE_CHANGED, this._userNodeSizeChange, e), this._removeUserNodeFromGrid(e), delete this._userNodeMap[t.uuid], t._removeComponent(e), e.destroy(), t.removeFromParent(), !0) : (_("CCTiledLayer:removeUserNode node is not exist"), !1);
        }, r.destroyUserNode = function (t) {
          this.removeUserNode(t), t.destroy();
        }, r._nodeLocalPosToLayerPos = function (t, e) {
          e.x = t.x + this._leftDownToCenterX, e.y = t.y + this._leftDownToCenterY;
        }, r.getNodesByRowCol = function (t, e) {
          var i = this._userNodeGrid[t];
          return i ? i[e] : null;
        }, r.getNodesCountByRow = function (t) {
          var e = this._userNodeGrid[t];
          return e ? e.count : 0;
        }, r._updateAllUserNode = function () {
          for (var t in this._userNodeGrid = {}, this._userNodeMap) {
            var e = this._userNodeMap[t];
            this._nodeLocalPosToLayerPos(e.node.getPosition(), _e), this._positionToRowCol(_e.x, _e.y, me), this._addUserNodeToGrid(e, me), this._updateCullingOffsetByUserNode(e.node);
          }
        }, r._updateCullingOffsetByUserNode = function (t) {
          var e = t._uiProps.uiTransformComp.contentSize;
          this._topOffset < e.height && (this._topOffset = e.height), this._downOffset < e.height && (this._downOffset = e.height), this._leftOffset < e.width && (this._leftOffset = e.width), this._rightOffset < e.width && (this._rightOffset = e.width);
        }, r._userNodeSizeChange = function () {
          var t = this.node,
              e = this._tiledLayer;
          e._updateCullingOffsetByUserNode(t), e._userNodeDirty = !0, e.markForUpdateRenderData();
        }, r._userNodePosChange = function () {
          var t = this,
              e = t.node,
              i = t._tiledLayer;
          i._nodeLocalPosToLayerPos(e.getPosition(), _e), i._positionToRowCol(_e.x, _e.y, me), i._limitInLayer(me), me.row === t._row && me.col === t._col || (i._removeUserNodeFromGrid(t), i._addUserNodeToGrid(t, me));
        }, r._removeUserNodeFromGrid = function (t) {
          var e = t._row,
              i = t._col,
              r = t._index,
              s = this._userNodeGrid[e],
              n = s && s[i];
          n && (s.count--, n.count--, n.list[r] = null, n.count <= 0 && (n.list.length = 0, n.count = 0)), t._row = -1, t._col = -1, t._index = -1, this._userNodeDirty = !0, this.markForUpdateRenderData();
        }, r._limitInLayer = function (t) {
          var e = t.row,
              i = t.col;
          e < 0 && (t.row = 0), e > this._rightTop.row && (t.row = this._rightTop.row), i < 0 && (t.col = 0), i > this._rightTop.col && (t.col = this._rightTop.col);
        }, r._addUserNodeToGrid = function (t, e) {
          var i = e.row,
              r = e.col,
              s = this._userNodeGrid[i] = this._userNodeGrid[i] || {
            count: 0
          },
              n = s[r] = s[r] || {
            count: 0,
            list: []
          };
          t._row = i, t._col = r, t._index = n.list.length, s.count++, n.count++, n.list.push(t), this._userNodeDirty = !0;
        }, r.isUserNodeDirty = function () {
          return this._userNodeDirty;
        }, r.setUserNodeDirty = function (t) {
          this._userNodeDirty = t;
        }, r.onEnable = function () {
          t.prototype.onEnable.call(this), this.node.on(T.ANCHOR_CHANGED, this._syncAnchorPoint, this), this.node.on(T.TRANSFORM_CHANGED, this.updateCulling, this), this.node.on(T.SIZE_CHANGED, this.updateCulling, this), this.node.parent.on(T.TRANSFORM_CHANGED, this.updateCulling, this), this.node.parent.on(T.SIZE_CHANGED, this.updateCulling, this), this.markForUpdateRenderData(), this.scheduleOnce(this.updateCulling.bind(this));
        }, r.onDisable = function () {
          t.prototype.onDisable.call(this), this.node.parent.off(T.SIZE_CHANGED, this.updateCulling, this), this.node.parent.off(T.TRANSFORM_CHANGED, this.updateCulling, this), this.node.off(T.SIZE_CHANGED, this.updateCulling, this), this.node.off(T.TRANSFORM_CHANGED, this.updateCulling, this), this.node.off(T.ANCHOR_CHANGED, this._syncAnchorPoint, this);
        }, r._syncAnchorPoint = function () {
          var t = this.node,
              e = t._uiProps.uiTransformComp,
              i = t.getScale();
          this._leftDownToCenterX = e.width * e.anchorX * i.x, this._leftDownToCenterY = e.height * e.anchorY * i.y, this._cullingDirty = !0, this.markForUpdateRenderData();
        }, r.onDestroy = function () {
          t.prototype.onDestroy.call(this);
        }, r.getLayerName = function () {
          return this._layerName;
        }, r.setLayerName = function (t) {
          this._layerName = t;
        }, r.getProperty = function (t) {
          return this._properties[t];
        }, r.getPositionAt = function (t, e) {
          var i;

          switch (void 0 !== e ? (i = Math.floor(t), e = Math.floor(e)) : (i = Math.floor(t.x), e = Math.floor(t.y)), this._layerOrientation) {
            case K.ORTHO:
              return this._positionForOrthoAt(i, e);

            case K.ISO:
              return this._positionForIsoAt(i, e);

            case K.HEX:
              return this._positionForHexAt(i, e);
          }

          return null;
        }, r.isInvalidPosition = function (t, e) {
          return t >= this._layerSize.width || e >= this._layerSize.height || t < 0 || e < 0;
        }, r._positionForIsoAt = function (t, e) {
          var r = 0,
              s = 0,
              n = Math.floor(t) + Math.floor(e) * this._layerSize.width,
              o = this.tiles[n];

          if (o) {
            var a = (o & q.FLIPPED_MASK) >>> 0,
                h = this.texGrids.get(a).tileset.tileOffset;
            r = h.x, s = h.y;
          }

          return new i(.5 * this._mapTileSize.width * (this._layerSize.height + t - e - 1) + r, .5 * this._mapTileSize.height * (this._layerSize.width - t + this._layerSize.height - e - 2) - s);
        }, r._positionForOrthoAt = function (t, e) {
          var r = 0,
              s = 0,
              n = Math.floor(t) + Math.floor(e) * this._layerSize.width,
              o = this.tiles[n];

          if (o) {
            var a = (o & q.FLIPPED_MASK) >>> 0,
                h = this.texGrids.get(a).tileset.tileOffset;
            r = h.x, s = h.y;
          }

          return new i(t * this._mapTileSize.width + r, (this._layerSize.height - e - 1) * this._mapTileSize.height - s);
        }, r._positionForHexAt = function (t, e) {
          var r,
              s = this._mapTileSize.width,
              n = this._mapTileSize.height,
              o = this._layerSize.height,
              a = Math.floor(t) + Math.floor(e) * this._layerSize.width,
              h = (this.tiles[a] & q.FLIPPED_MASK) >>> 0;

          r = this.texGrids.get(h) ? this.texGrids.get(h).tileset.tileOffset : {
            x: 0,
            y: 0
          };
          var l = this._staggerIndex === $.STAGGERINDEX_ODD ? 1 : -1,
              u = 0,
              g = 0,
              f = 0,
              d = 0;

          switch (this._staggerAxis) {
            case J.STAGGERAXIS_Y:
              f = 0, e % 2 == 1 && (f = s / 2 * l), u = t * s + f + r.x, g = (o - e - 1) * (n - (n - this._hexSideLength) / 2) - r.y;
              break;

            case J.STAGGERAXIS_X:
              d = 0, t % 2 == 1 && (d = n / 2 * -l), u = t * (s - (s - this._hexSideLength) / 2) + r.x, g = (o - e - 1) * n + d - r.y;
          }

          return new i(u, g);
        }, r.setTilesGIDAt = function (t, e, i, r) {
          if (t && 0 !== t.length && !(r <= 0)) {
            i < 0 && (i = 0), e < 0 && (e = 0);

            for (var s = 0, n = e + r, o = i;; o++) {
              for (var a = e; a < n; a++) {
                if (s >= t.length) return;
                this._updateTileForGID(t[s], a, o), s++;
              }
            }
          }
        }, r.setTileGIDAt = function (t, e, i, r) {
          var s = (t & q.FLIPPED_MASK) >>> 0;
          if (e = Math.floor(e), i = Math.floor(i), this.isInvalidPosition(e, i)) throw new Error("cc.TiledLayer.setTileGIDAt(): invalid position");
          this.tiles && this._tilesets && 0 !== this._tilesets.length ? 0 !== s && s < this._tilesets[0].firstGid ? o(7239, t) : (r = r || 0, this._updateTileForGID((s | r) >>> 0, e, i)) : o(7238);
        }, r._updateTileForGID = function (t, e, i) {
          var r = 0 | e + i * this._layerSize.width;

          if (!(r >= this.tiles.length) && t !== this.tiles[r]) {
            var s = (t & q.FLIPPED_MASK) >>> 0;
            this.texGrids.get(s) ? (this.tiles[r] = t, this._updateVertex(e, i)) : this.tiles[r] = 0, this._cullingDirty = !0;
          }
        }, r.getTileGIDAt = function (t, e) {
          if (this.isInvalidPosition(t, e)) throw new Error("cc.TiledLayer.getTileGIDAt(): invalid position");
          if (!this.tiles) return o(7237), null;

          var i = Math.floor(t) + Math.floor(e) * this._layerSize.width;

          return (this.tiles[i] & q.FLIPPED_MASK) >>> 0;
        }, r.getTileFlagsAt = function (t, e) {
          if (this.isInvalidPosition(t, e)) throw new Error("TiledLayer.getTileFlagsAt: invalid position");
          if (!this.tiles) return o(7240), null;

          var i = Math.floor(t) + Math.floor(e) * this._layerSize.width;

          return (this.tiles[i] & q.FLIPPED_ALL) >>> 0;
        }, r.setCullingDirty = function (t) {
          this._cullingDirty = t;
        }, r.isCullingDirty = function () {
          return this._cullingDirty;
        }, r.updateViewPort = function (t, e, i, r) {
          if (this._viewPort.width !== i || this._viewPort.height !== r || this._viewPort.x !== t || this._viewPort.y !== e) {
            this._viewPort.x = t, this._viewPort.y = e, this._viewPort.width = i, this._viewPort.height = r;
            var s = 1;
            this._layerOrientation === K.ISO && (s = 2);
            var n = this._viewPort.x - this._offset.x + this._leftDownToCenterX,
                o = this._viewPort.y - this._offset.y + this._leftDownToCenterY,
                a = n - this._leftOffset,
                h = o - this._downOffset,
                l = n + i + this._rightOffset,
                u = o + r + this._topOffset,
                g = this._cullingRect.leftDown,
                f = this._cullingRect.rightTop;
            a < 0 && (a = 0), h < 0 && (h = 0), this._positionToRowCol(a, h, me), me.row -= s, me.col -= s, me.row = me.row > 0 ? me.row : 0, me.col = me.col > 0 ? me.col : 0, me.row === g.row && me.col === g.col || (g.row = me.row, g.col = me.col, this._cullingDirty = !0), l < 0 || u < 0 ? (me.row = -1, me.col = -1) : (this._positionToRowCol(l, u, me), me.row++, me.col++), me.row > this._rightTop.row && (me.row = this._rightTop.row), me.col > this._rightTop.col && (me.col = this._rightTop.col), me.row === f.row && me.col === f.col || (f.row = me.row, f.col = me.col, this._cullingDirty = !0, this.markForUpdateRenderData());
          }
        }, r._positionToRowCol = function (t, e, i) {
          var r = this._mapTileSize.width,
              s = this._mapTileSize.height,
              n = .5 * r,
              o = .5 * s,
              a = 0,
              h = 0,
              l = 0,
              u = 0,
              g = this._staggerAxis;

          switch (this._layerOrientation) {
            case K.ORTHO:
              h = Math.floor(t / r), a = Math.floor(e / s);
              break;

            case K.ISO:
              h = Math.floor(t / n), a = Math.floor(e / o);
              break;

            case K.HEX:
              g === J.STAGGERAXIS_Y ? (l = (a = Math.floor(e / (s - this._diffY1))) % 2 == 1 ? n * this._odd_even : 0, h = Math.floor((t - l) / r)) : (u = (h = Math.floor(t / (r - this._diffX1))) % 2 == 1 ? o * -this._odd_even : 0, a = Math.floor((e - u) / s));
          }

          return i.row = a, i.col = h, i;
        }, r.updateCulling = function () {
          if (this._enableCulling) {
            this.node.updateWorldTransform(), b.invert(de, this.node.getWorldMatrix());
            var t = X.root.batcher2D.getFirstRenderCamera(this.node);
            t && (pe.x = 0, pe.y = 0, pe.z = 0, ce.x = t.width, ce.y = t.height, ce.z = 0, t.screenToWorld(pe, pe), t.screenToWorld(ce, ce), S.transformMat4(pe, pe, de), S.transformMat4(ce, ce, de), this.updateViewPort(pe.x, pe.y, ce.x - pe.x, ce.y - pe.y));
          }
        }, r.getLayerOrientation = function () {
          return this._layerOrientation;
        }, r.getProperties = function () {
          return this._properties;
        }, r._updateVertex = function (t, e) {
          var i = q.FLIPPED_MASK,
              r = this.vertices,
              s = this._layerOrientation,
              n = this.tiles;

          if (n) {
            var o,
                a,
                h,
                l,
                u = this._rightTop,
                g = this._mapTileSize.width,
                f = this._mapTileSize.height,
                d = .5 * g,
                _ = .5 * f,
                p = this._layerSize.height,
                c = this._layerSize.width,
                m = this.texGrids,
                y = 0,
                v = 0;

            s === K.HEX && (o = this._staggerAxis, a = this._diffX1, h = this._diffY1, l = this._odd_even);
            var A,
                w,
                b,
                S = 0,
                T = 0,
                x = 0,
                I = 0,
                C = e * c + t;
            A = (n[C] & i) >>> 0;
            var D = m.get(A);

            if (D) {
              switch (this._animations.get(A) && (this._hasAniGrid = this._hasAniGrid || !0), s) {
                case K.ORTHO:
                  y = (S = t) * g, v = (T = p - e - 1) * f;
                  break;

                case K.ISO:
                  y = d * (S = p + t - e - 1), v = _ * (T = p + c - t - e - 2);
                  break;

                case K.HEX:
                  y = t * (g - a) + (o === J.STAGGERAXIS_Y && e % 2 == 1 ? d * l : 0), v = (p - e - 1) * (f - h) + (o === J.STAGGERAXIS_X && t % 2 == 1 ? _ * -l : 0), S = t, T = p - e - 1;
              }

              var N = r[T] = r[T] || {
                minCol: 0,
                maxCol: 0
              },
                  O = N[S] = N[S] || {};
              N.minCol > S && (N.minCol = S), N.maxCol < S && (N.maxCol = S), u.row < T && (u.row = T), u.col < S && (u.col = S);
              var P = D.tileset.tileOffset;
              y += this._offset.x + P.x + D.offsetX, v += this._offset.y - P.y - D.offsetY, x = (x = -P.y + D.tileset._tileSize.height - f) < 0 ? 0 : x, w = P.y < 0 ? 0 : P.y, b = -P.x < 0 ? 0 : -P.x, I = (I = P.x + D.tileset._tileSize.width - g) < 0 ? 0 : I, this._rightOffset < b && (this._rightOffset = b), this._leftOffset < I && (this._leftOffset = I), this._topOffset < w && (this._topOffset = w), this._downOffset < x && (this._downOffset = x), O.left = y, O.bottom = v, O.index = C, this._cullingDirty = !0;
            }
          }
        }, r._updateVertices = function () {
          if (this.vertices.length = 0, this.tiles) {
            var t = this._rightTop;
            t.row = -1, t.col = -1;
            var e = this._layerSize.height,
                i = this._layerSize.width;
            this._topOffset = 0, this._downOffset = 0, this._leftOffset = 0, this._rightOffset = 0, this._hasAniGrid = !1;

            for (var r = 0; r < e; ++r) {
              for (var s = 0; s < i; ++s) {
                this._updateVertex(s, r);
              }
            }

            this._verticesDirty = !1;
          }
        }, r.getTiledTileAt = function (t, e, i) {
          if (this.isInvalidPosition(t, e)) throw new Error("TiledLayer.getTiledTileAt: invalid position");
          if (!this.tiles) return o(7236), null;

          var r = Math.floor(t) + Math.floor(e) * this._layerSize.width,
              s = this.tiledTiles[r];

          if (!s && i) {
            var n = new x();
            return (s = n.addComponent(It))._x = t, s._y = e, s._layer = this, s.updateInfo(), n.parent = this.node, s;
          }

          return s;
        }, r.setTiledTileAt = function (t, e, i) {
          if (this.isInvalidPosition(t, e)) throw new Error("TiledLayer.setTiledTileAt: invalid position");
          if (!this.tiles) return o(7236), null;

          var r = Math.floor(t) + Math.floor(e) * this._layerSize.width;

          return this.tiledTiles[r] = i, this._cullingDirty = !0, this._hasTiledNodeGrid = !!i || this.tiledTiles.some(function (t) {
            return !!t;
          }), i;
        }, r.getTexture = function (t) {
          return t = t || 0, this._textures && t >= 0 && this._textures.length > t ? this._textures[t] : null;
        }, r.getTextures = function () {
          return this._textures;
        }, r.setTexture = function (t) {
          this.setTextures([t]);
        }, r.setTextures = function (t) {
          this._textures = t, this.markForUpdateRenderData();
        }, r.getLayerSize = function () {
          return this._layerSize;
        }, r.getMapTileSize = function () {
          return this._mapTileSize;
        }, r.getTileSet = function (t) {
          return t = t || 0, this._tilesets && t >= 0 && this._tilesets.length > t ? this._tilesets[t] : null;
        }, r.getTileSets = function () {
          return this._tilesets;
        }, r.setTileSet = function (t) {
          this.setTileSets([t]);
        }, r.setTileSets = function (t) {
          this._tilesets = t;
          var e = this._textures = [],
              i = this.texGrids;
          i.clear();

          for (var r = 0; r < t.length; r++) {
            var s = t[r];
            s && (e[r] = s.sourceImage);
          }

          for (var n = 0, o = t.length; n < o; ++n) {
            var a = t[n];
            a && Ct(a, i, a.sourceImage);
          }

          this._prepareToRender();
        }, r.init = function (t, e, r, s, n) {
          this._cullingDirty = !0, this._layerInfo = t, this._mapInfo = e;
          var o = t.layerSize;
          this._layerName = t.name, this.tiles = t.tiles, this._properties = t.properties, this._layerSize = o, this._minGID = t.minGID, this._maxGID = t.maxGID, this._opacity = t.opacity, t.tintColor && (this._tintColor = t.tintColor), this.renderOrder = e.renderOrder, this._staggerAxis = e.getStaggerAxis(), this._staggerIndex = e.getStaggerIndex(), this._hexSideLength = e.getHexSideLength(), this._animations = e.getTileAnimations(), this._tilesets = r, this._textures = s, this.texGrids = n, this._layerOrientation = e.orientation, this._mapTileSize = e.getTileSize();
          var a = this._mapTileSize.width,
              h = this._mapTileSize.height,
              l = this._layerSize.width,
              u = this._layerSize.height;

          if (this._layerOrientation === K.HEX) {
            var g = 0,
                f = 0;
            this._odd_even = this._staggerIndex === $.STAGGERINDEX_ODD ? 1 : -1, this._staggerAxis === J.STAGGERAXIS_X ? (this._diffX1 = (a - this._hexSideLength) / 2, this._diffY1 = 0, f = h * (u + .5), g = (a + this._hexSideLength) * Math.floor(l / 2) + a * (l % 2)) : (this._diffX1 = 0, this._diffY1 = (h - this._hexSideLength) / 2, g = a * (l + .5), f = (h + this._hexSideLength) * Math.floor(u / 2) + h * (u % 2)), this.node._uiProps.uiTransformComp.setContentSize(g, f);
          } else if (this._layerOrientation === K.ISO) {
            var d = l + u;

            this.node._uiProps.uiTransformComp.setContentSize(.5 * a * d, .5 * h * d);
          } else this.node._uiProps.uiTransformComp.setContentSize(l * a, u * h);

          this._offset = new i(t.offset.x, -t.offset.y), this._useAutomaticVertexZ = !1, this._vertexZvalue = 0, this._syncAnchorPoint(), this._prepareToRender();
        }, r._prepareToRender = function () {
          this._updateVertices(), this._updateAllUserNode();
        }, r.requestMeshRenderData = function () {
          var t = this;
          this._meshRenderDataArray || (this._meshRenderDataArray = []);

          for (var e = this._meshRenderDataArray; e.length > 0 && e[e.length - 1].subNodes && 0 === e[e.length - 1].subNodes.length;) {
            e.pop();
          }

          if (e.length > 0) {
            var i = e[e.length - 1];
            if (i.renderData && 0 === i.renderData.byteCount) return i;
          }

          var r = new k(),
              s = {
            renderData: r,
            texture: null
          };
          return Object.defineProperty(r, "material", {
            get: function get() {
              return t.getRenderMaterial(0);
            }
          }), this._meshRenderDataArray.push(s), s;
        }, r.requestSubNodesData = function () {
          this._meshRenderDataArray || (this._meshRenderDataArray = []);

          for (var t = this._meshRenderDataArray; t.length > 0 && t[t.length - 1].renderData && 0 === t[t.length - 1].renderData.byteCount;) {
            t.pop();
          }

          if (t.length > 0 && t[t.length - 1].subNodes && 0 === t[t.length - 1].subNodes.length) return t[t.length - 1];
          var e = {
            subNodes: []
          };
          return this._meshRenderDataArray.push(e), e;
        }, r.destroyRenderData = function () {
          this._meshRenderDataArray && (this._meshRenderDataArray.forEach(function (t) {
            t.renderData && t.renderData.reset();
          }), this._meshRenderDataArray.length = 0);
        }, r._flushAssembler = function () {
          var t = e.Assembler.getAssembler(this);
          this._assembler !== t && (this._assembler = t), this._meshRenderDataArray || this._assembler && this._assembler.createData && (this._assembler.createData(this), this.markForUpdateRenderData(), this._updateColor());
        }, r._render = function (t) {
          if (this._meshRenderDataArray) {
            for (var e = 0; e < this._meshRenderDataArray.length; e++) {
              this._meshRenderDataArrayIdx = e;
              var i = this._meshRenderDataArray[e];
              i.subNodes ? i.subNodes.forEach(function (e) {
                e && t.walk(e.node);
              }) : i.texture && t.commitComp(this, i.texture, this._assembler, null);
            }

            this.node._static = !0;
          }
        }, h(e, [{
          key: "cullingRect",
          get: function get() {
            return this._cullingRect;
          }
        }, {
          key: "rightTop",
          get: function get() {
            return this._rightTop;
          }
        }, {
          key: "layerSize",
          get: function get() {
            return this._layerSize;
          }
        }, {
          key: "meshRenderDataArray",
          get: function get() {
            return this._meshRenderDataArray;
          }
        }, {
          key: "leftDownToCenterX",
          get: function get() {
            return this._leftDownToCenterX;
          }
        }, {
          key: "leftDownToCenterY",
          get: function get() {
            return this._leftDownToCenterY;
          }
        }, {
          key: "enableCulling",
          get: function get() {
            return this._enableCulling;
          },
          set: function set(t) {
            this._enableCulling !== t && (this._enableCulling = t, this._cullingDirty = !0, this.markForUpdateRenderData());
          }
        }]), e;
      }(Y)) || Tt), Ae = t("TiledObjectGroup", (Dt = l("cc.TiledObjectGroup"), Nt = c(), Ot = y(B), Pt = u(I), Dt(Et = Nt(Et = Ot((zt = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), s = 0; s < i; s++) {
            r[s] = arguments[s];
          }

          return (e = t.call.apply(t, [this].concat(r)) || this)._premultiplyAlpha = !1, e._groupName = void 0, e._positionOffset = void 0, e._mapInfo = void 0, e._properties = void 0, e._offset = void 0, e._opacity = void 0, e._tintColor = null, e._animations = void 0, e._hasAniObj = void 0, e._texGrids = void 0, e.aniObjects = void 0, e._objects = [], e;
        }

        d(e, t);
        var s = e.prototype;
        return s.getPositionOffset = function () {
          return this._positionOffset;
        }, s.getProperties = function () {
          return this._properties;
        }, s.getGroupName = function () {
          return this._groupName;
        }, s.getProperty = function (t) {
          return this._properties[t.toString()];
        }, s.getObject = function (t) {
          for (var e = 0, i = this._objects.length; e < i; e++) {
            var r = this._objects[e];
            if (r && r.name === t) return r;
          }

          return null;
        }, s.getObjects = function () {
          return this._objects;
        }, s._init = function (t, e, s) {
          var n = q.FLIPPED_MASK,
              o = q.HORIZONTAL,
              a = q.VERTICAL;
          this._groupName = t.name, this._positionOffset = t.offset, this._mapInfo = e, this._properties = t.getProperties(), this._offset = new i(t.offset.x, -t.offset.y), this._opacity = t.opacity, t.tintColor && (this._tintColor = t.tintColor), this._texGrids = s, this._animations = e.getTileAnimations(), this.aniObjects = [], this._hasAniObj = !1;
          var h = e.mapSize,
              l = e.tileSize,
              u = 0,
              g = 0,
              f = new r(),
              d = K.ISO === e.orientation;
          if (e.orientation === K.HEX) e.getStaggerAxis() === J.STAGGERAXIS_X ? (g = l.height * (h.height + .5), u = (l.width + e.getHexSideLength()) * Math.floor(h.width / 2) + l.width * (h.width % 2)) : (u = l.width * (h.width + .5), g = (l.height + e.getHexSideLength()) * Math.floor(h.height / 2) + l.height * (h.height % 2));else if (d) {
            var _ = h.width + h.height;

            u = .5 * l.width * _, g = .5 * l.height * _;
          } else u = h.width * l.width, g = h.height * l.height;
          var p = this.node._uiProps.uiTransformComp;
          p.setContentSize(u, g);

          for (var c = u * p.anchorX, m = g * (1 - p.anchorY), y = t.objects, v = {}, A = 0, w = y.length; A < w; A++) {
            var b = y[A],
                S = b.type;
            b.offset = new i(b.x, b.y);
            var T = b.points || b.polylinePoints;
            if (T) for (var I = 0; I < T.length; I++) {
              T[I].y *= -1;
            }

            if (d) {
              var N = b.x / l.height,
                  O = b.y / l.height;
              b.x = .5 * l.width * (h.height + N - O), b.y = .5 * l.height * (h.width + h.height - N - O);
            } else b.y = g - b.y;

            if (S === tt.TEXT) {
              var P = "text" + b.id;
              v[P] = !0;
              var E = this.node.getChildByName(P);
              E || (E = new x()), E.setRotationFromEuler(0, 0, -b.rotation), E.setPosition(b.x - c, b.y - m), E.name = P, E.parent = this.node, E.setSiblingIndex(A);
              var G = E.getComponent(j);
              G || (G = E.addComponent(j));
              var z = E._uiProps.uiTransformComp;
              E.active = b.visible, z.anchorX = 0, z.anchorY = 1, this._tintColor ? (f.set(this._tintColor), f.a *= this._opacity / 255, G.color.set(f)) : G.color.a *= this._opacity / 255, G.overflow = j.Overflow.SHRINK, G.lineHeight = b.height, G.string = b.text, G.horizontalAlign = b.halign, G.verticalAlign = b.valign, G.fontSize = b.pixelsize, z.setContentSize(b.width, b.height);
            } else if (S === tt.IMAGE) {
              var L = b.gid,
                  R = (L & n) >>> 0,
                  F = s.get(R);
              if (!F) continue;
              var M = F.tileset,
                  X = "img" + b.id;
              v[X] = !0;
              var B = this.node.getChildByName(X);
              b.width = b.width || F.width, b.height = b.height || F.height, B && B._objFlags & C.Flags.HideInHierarchy && (B.removeFromParent(), B.hideFlags |= C.Flags.DontSave, B.destroy(), B = null), B || (B = new x()), this._animations.get(R) && (this.aniObjects.push({
                object: b,
                imgNode: B,
                gridGID: R
              }), this._hasAniObj = !0);
              var k = M.tileOffset.x,
                  Y = M.tileOffset.y;
              B.active = b.visible, B.setRotationFromEuler(0, 0, -b.rotation), B.setPosition(b.x - c, b.y - m), B.name = X, B.parent = this.node, B.setSiblingIndex(A);
              var V = B.getComponent(H);
              V || (V = B.addComponent(H));
              var Z = B._uiProps.uiTransformComp;
              d ? (Z.anchorX = .5 + k / b.width, Z.anchorY = Y / b.height) : (Z.anchorX = k / b.width, Z.anchorY = Y / b.height), this._tintColor ? (f.set(this._tintColor), f.a *= this._opacity / 255, V.color.set(f)) : V.color.a *= this._opacity / 255, V.sizeMode = H.SizeMode.CUSTOM, V._srcBlendFactor = this._premultiplyAlpha ? D.ONE : D.SRC_ALPHA, V._dstBlendFactor = D.ONE_MINUS_SRC_ALPHA, V._updateBlendFunc();
              var W = F.spriteFrame;
              W = W ? W.clone() : new U(), (L & o) >>> 0 && (W.flipUVX = !W.flipUVX), (L & a) >>> 0 && (W.flipUVY = !W.flipUVY), W.rotated = F._rotated, W.rect = F._rect, V.spriteFrame = W, Z.setContentSize(b.width, b.height), V.markForUpdateRenderData();
            }
          }

          this._objects = y;

          for (var $ = this.node.children, Q = /^(?:img|text)\d+$/, et = 0, it = $.length; et < it; et++) {
            var rt = $[et],
                st = rt.name;
            Q.test(st) && !v[st] && rt.destroy();
          }
        }, s.update = function () {
          if (this._hasAniObj) for (var t = this.aniObjects, e = this._texGrids, i = K.ISO === this._mapInfo.orientation, r = 0, s = t.length; r < s; r++) {
            var n = t[r],
                o = n.gridGID,
                a = e.get(o);

            if (a) {
              var h = a.tileset,
                  l = n.object,
                  u = n.imgNode,
                  g = h.tileOffset.x,
                  f = h.tileOffset.y,
                  d = u._uiProps.uiTransformComp;
              i ? (d.anchorX = .5 + g / l.width, d.anchorY = f / l.height) : (d.anchorX = g / l.width, d.anchorY = f / l.height);

              var _ = u.getComponent(H),
                  p = _.spriteFrame;

              p.rotated = a._rotated, p.rect = a._rect, _.spriteFrame = p, _.markForUpdateRenderData();
            }
          }
        }, h(e, [{
          key: "premultiplyAlpha",
          get: function get() {
            return this._premultiplyAlpha;
          },
          set: function set(t) {
            this._premultiplyAlpha = t;
          }
        }, {
          key: "offset",
          get: function get() {
            return this._offset;
          }
        }]), e;
      }(w), p((Gt = zt).prototype, "premultiplyAlpha", [Pt], Object.getOwnPropertyDescriptor(Gt.prototype, "premultiplyAlpha"), Gt.prototype), Et = Gt)) || Et) || Et) || Et)), we = t("TiledMapAsset", (Lt = l("cc.TiledMapAsset"), Rt = u([N]), Ft = u([O]), Mt = u([U]), Xt = u([U]), Ut = u([O]), jt = u([O]), Ht = u([s]), Lt((Qt = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), s = 0; s < i; s++) {
            r[s] = arguments[s];
          }

          return e = t.call.apply(t, [this].concat(r)) || this, v(e, "tmxXmlStr", Yt, A(e)), v(e, "tsxFiles", Vt, A(e)), v(e, "tsxFileNames", Zt, A(e)), v(e, "spriteFrames", Kt, A(e)), v(e, "imageLayerSpriteFrame", Wt, A(e)), v(e, "imageLayerSpriteFrameNames", qt, A(e)), v(e, "spriteFrameNames", Jt, A(e)), v(e, "spriteFrameSizes", $t, A(e)), e;
        }

        return d(e, t), e;
      }(P), Yt = p((kt = Qt).prototype, "tmxXmlStr", [E], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Vt = p(kt.prototype, "tsxFiles", [E, Rt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Zt = p(kt.prototype, "tsxFileNames", [E, Ft], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Kt = p(kt.prototype, "spriteFrames", [E, Mt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Wt = p(kt.prototype, "imageLayerSpriteFrame", [E, Xt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), qt = p(kt.prototype, "imageLayerSpriteFrameNames", [E, Ut], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Jt = p(kt.prototype, "spriteFrameNames", [E, jt], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), $t = p(kt.prototype, "spriteFrameSizes", [E, Ht], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Bt = kt)) || Bt)), be = (t("TiledMap", (te = l("cc.TiledMap"), ee = c(), ie = m(), re = y(B), se = u(we), ne = R(), te(oe = ee(oe = ie(oe = re(oe = f((fe = ge = function (t) {
        function e() {
          for (var e, i = arguments.length, r = new Array(i), n = 0; n < i; n++) {
            r[n] = arguments[n];
          }

          return (e = t.call.apply(t, [this].concat(r)) || this)._texGrids = new Map(), e._textures = [], e._tilesets = [], e._animations = new Map(), e._imageLayers = [], e._layers = [], e._groups = [], e._images = [], e._properties = {}, e._tileProperties = new Map(), e._mapInfo = null, e._mapSize = new s(0, 0), e._tileSize = new s(0, 0), e._preloaded = !1, e._mapOrientation = K.ORTHO, v(e, "_tmxFile", he, A(e)), v(e, "_enableCulling", le, A(e)), v(e, "cleanupImageCache", ue, A(e)), e;
        }

        d(e, t);
        var r = e.prototype;
        return r.getMapSize = function () {
          return this._mapSize;
        }, r.getTileSize = function () {
          return this._tileSize;
        }, r.getMapOrientation = function () {
          return this._mapOrientation;
        }, r.getObjectGroups = function () {
          return this._groups;
        }, r.getObjectGroup = function (t) {
          for (var e = this._groups, i = 0, r = e.length; i < r; i++) {
            var s = e[i];
            if (s && s.getGroupName() === t) return s;
          }

          return null;
        }, r.getProperties = function () {
          return this._properties;
        }, r.getLayers = function () {
          return this._layers;
        }, r.getLayer = function (t) {
          for (var e = this._layers, i = 0, r = e.length; i < r; i++) {
            var s = e[i];
            if (s && s.getLayerName() === t) return s;
          }

          return null;
        }, r._changeLayer = function (t, e) {
          for (var i = this._layers, r = 0, s = i.length; r < s; r++) {
            var n = i[r];
            if (n && n.getLayerName() === t) return void (i[r] = e);
          }
        }, r.getProperty = function (t) {
          return this._properties[t.toString()];
        }, r.getPropertiesForGID = function (t) {
          return this._tileProperties.get(t);
        }, r.__preload = function () {
          this._preloaded = !0, this._tmxFile && this._applyFile();
        }, r.onEnable = function () {
          this.node.on(T.ANCHOR_CHANGED, this._syncAnchorPoint, this);
        }, r.onDisable = function () {
          this.node.off(T.ANCHOR_CHANGED, this._syncAnchorPoint, this);
        }, r._applyFile = function () {
          var t = [],
              e = {},
              i = this._tmxFile;

          if (i) {
            for (var r = i.spriteFrameNames, s = i.spriteFrameSizes, n = i.spriteFrames, a = {}, h = {}, l = 0; l < r.length; ++l) {
              var u = r[l];
              h[u] = s[l], t[l] = n[l];
              var g = t[l];
              g && (e[g.name] = g, a[u] = g);
            }

            var f = {},
                d = i.imageLayerSpriteFrame;
            r = i.imageLayerSpriteFrameNames;

            for (var _ = 0; _ < d.length; ++_) {
              f[r[_]] = d[_];
            }

            for (var p = i.tsxFileNames, c = i.tsxFiles, m = {}, y = 0; y < p.length; ++y) {
              p[y].length > 0 && (m[p[y]] = c[y].text);
            }

            var v = new xt(i.tmxXmlStr, m, a, h, f),
                A = v.getTilesets();
            A && 0 !== A.length || o(7241), this._buildWithMapInfo(v);
          } else this._releaseMapInfo();
        }, r._releaseMapInfo = function () {
          for (var t = this._layers, e = 0, i = t.length; e < i; e++) {
            t[e].node.removeFromParent(), t[e].node.destroy();
          }

          t.length = 0;

          for (var r = this._groups, s = 0, n = r.length; s < n; s++) {
            r[s].node.removeFromParent(), r[s].node.destroy();
          }

          r.length = 0;

          for (var o = this._images, a = 0, h = o.length; a < h; a++) {
            o[a].removeFromParent(), o[a].destroy();
          }

          o.length = 0;
        }, r._syncAnchorPoint = function () {
          var t,
              e,
              i = this.node._uiProps.uiTransformComp.anchorPoint,
              r = this.node._uiProps.uiTransformComp.width * i.x,
              s = this.node._uiProps.uiTransformComp.height * (1 - i.y);

          for (t = 0, e = this._layers.length; t < e; t++) {
            this._layers[t].node._uiProps.uiTransformComp.setAnchorPoint(i);
          }

          for (t = 0, e = this._groups.length; t < e; t++) {
            var n = this._groups[t],
                o = n.node._uiProps.uiTransformComp;
            o.anchorX = .5, o.anchorY = .5;
            var a = n.offset.x - r + o.width * o.anchorX,
                h = n.offset.y + s - o.height * o.anchorY;
            n.node.setPosition(a, h);
          }

          for (t = 0, e = this._images.length; t < e; t++) {
            var l = this._images[t]._uiProps.uiTransformComp;
            l.anchorX = .5, l.anchorY = .5;
            var u = this._images[t]._offset.x - r + l.width * l.anchorX,
                g = this._images[t]._offset.y + s - l.height * l.anchorY;

            this._images[t].setPosition(u, g);
          }
        }, r._fillAniGrids = function (t, e) {
          for (var i, r = G(e.keys()); !(i = r()).done;) {
            var s = i.value,
                n = e.get(s);
            if (n) for (var o = n.frames, a = 0; a < o.length; a++) {
              var h = o[a];
              h.grid = t.get(h.tileid);
            }
          }
        }, r._buildLayerAndGroup = function () {
          var t = this._tilesets,
              e = this._texGrids,
              r = this._animations;
          e.clear();

          for (var s = 0, n = t.length; s < n; ++s) {
            var o = t[s];
            o && (o.sourceImage ? Ct(o, e, o.sourceImage) : console.warn("Can't find the spriteFrame of tilesets " + s));
          }

          this._fillAniGrids(e, r);

          for (var a = this._layers, h = this._groups, l = this._images, u = {}, g = 0, f = a.length; g < f; g++) {
            u[a[g].node.name] = !0;
          }

          for (var d = 0, _ = h.length; d < _; d++) {
            u[h[d].node.name] = !0;
          }

          for (var p = 0, c = l.length; p < c; p++) {
            u[l[p].name] = !0;
          }

          a = this._layers = [], h = this._groups = [], l = this._images = [];
          var m = this._mapInfo,
              y = this.node,
              v = m.getAllChildren(),
              A = this._textures,
              w = 0,
              b = 0;
          if (v && v.length > 0) for (var S = 0, T = v.length; S < T; S++) {
            var I = v[S],
                C = I.name,
                D = this.node.getChildByName(C);

            if (u[C] = !1, D || ((D = new x()).name = C, D.layer = y.layer, y.addChild(D)), D.setSiblingIndex(S), D.active = I.visible, I instanceof rt) {
              var N = D.getComponent(ve);
              N || (N = D.addComponent(ve)), N.init(I, m, t, A, e), N.enableCulling = this._enableCulling, I.ownTiles = !1, a.push(N);
            } else if (I instanceof it) {
              var O = D.getComponent(Ae);
              O || (O = D.addComponent(Ae)), O._init(I, m, e), h.push(O);
            } else if (I instanceof st) {
              var P = I.sourceImage;
              D.layerInfo = I, D._offset = new i(I.offset.x, -I.offset.y);
              var E = D.getComponent(H);
              E || (E = D.addComponent(H)), E.color.a *= I.opacity, E.spriteFrame = P, D._uiProps.uiTransformComp.setContentSize(P.width, P.height), l.push(D);
            }

            w = Math.max(w, D._uiProps.uiTransformComp.width), b = Math.max(b, D._uiProps.uiTransformComp.height);
          }

          for (var G = y.children, z = 0, L = G.length; z < L; z++) {
            var R = G[z];
            u[R.name] && R.destroy();
          }

          this.node._uiProps.uiTransformComp.setContentSize(w, b), this._syncAnchorPoint();
        }, r._buildWithMapInfo = function (t) {
          var e = this;
          this._mapInfo = t, this._mapSize = t.getMapSize(), this._tileSize = t.getTileSize(), this._mapOrientation = t.orientation, this._properties = t.properties, this._tileProperties = t.getTileProperties(), this._imageLayers = t.getImageLayers(), this._animations = t.getTileAnimations(), this._tilesets = t.getTilesets();
          var i = this._tilesets;
          this._textures.length = 0;

          for (var r = [], s = 0, n = i.length; s < n; ++s) {
            var o = i[s];
            o && o.sourceImage && (this._textures[s] = o.sourceImage, r.push(o.sourceImage));
          }

          for (var a = 0; a < this._imageLayers.length; a++) {
            var h = this._imageLayers[a];
            h && h.sourceImage && r.push(h.sourceImage);
          }

          this._buildLayerAndGroup(), this.cleanupImageCache && this._textures.forEach(function (t) {
            e.doCleanupImageCache(t);
          });
        }, r.doCleanupImageCache = function (t) {
          t._image instanceof HTMLImageElement ? t._image.src = "" : z.capabilities.imageBitmap && t._image instanceof ImageBitmap && t._image.close && t._image.close(), t._image = null;
        }, r.update = function (t) {
          for (var e, i = this._animations, r = this._texGrids, s = G(i.keys()); !(e = s()).done;) {
            var n = e.value,
                o = i.get(n),
                a = o.frames,
                h = a[o.frameIdx];
            o.dt += t, h.duration < o.dt && (o.dt = 0, o.frameIdx++, o.frameIdx >= a.length && (o.frameIdx = 0), h = a[o.frameIdx]), r.set(n, h.grid);
          }

          for (var l, u = G(this.getLayers()); !(l = u()).done;) {
            var g = l.value;
            g.hasAnimation() && g.markForUpdateRenderData();
          }
        }, h(e, [{
          key: "tmxAsset",
          get: function get() {
            return this._tmxFile;
          },
          set: function set(t) {
            (this._tmxFile !== t || F) && (this._tmxFile = t, (this._preloaded || F) && this._applyFile());
          }
        }, {
          key: "enableCulling",
          get: function get() {
            return this._enableCulling;
          },
          set: function set(t) {
            this._enableCulling = t;

            for (var e = this._layers, i = 0; i < e.length; ++i) {
              e[i].enableCulling = t;
            }
          }
        }]), e;
      }(w), ge.Orientation = K, ge.Property = W, ge.TileFlag = q, ge.StaggerAxis = J, ge.StaggerIndex = $, ge.TMXObjectType = tt, ge.RenderOrder = Q, he = p((ae = fe).prototype, "_tmxFile", [E], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), p(ae.prototype, "tmxAsset", [se, ne], Object.getOwnPropertyDescriptor(ae.prototype, "tmxAsset"), ae.prototype), le = p(ae.prototype, "_enableCulling", [E], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), p(ae.prototype, "enableCulling", [L], Object.getOwnPropertyDescriptor(ae.prototype, "enableCulling"), ae.prototype), ue = p(ae.prototype, "cleanupImageCache", [E], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), oe = ae)) || oe) || oe) || oe) || oe) || oe)), Math.ceil(10922.5)), Se = [], Te = 0; Te < 4; Te++) {
        Se.push(new S());
      }

      var xe,
          Ie,
          Ce = new b(),
          De = new S(),
          Ne = {
        row: 0,
        col: 0
      },
          Oe = {
        x: 0,
        y: 0
      },
          Pe = {
        x: 0,
        y: 0
      },
          Ee = {
        x: 0,
        y: 0
      },
          Ge = {
        x: 0,
        y: 0
      },
          ze = 0,
          Le = 0,
          Re = 0,
          Fe = 0,
          Me = {
        createData: function createData(t) {
          var e = t.requestMeshRenderData();
          return t.rightTop.col * t.rightTop.row * 4 > 65535 && console.error("Vertex count exceeds 65535"), e;
        },
        updateRenderData: function updateRenderData(t) {
          t.updateCulling();
          var e = t.requestMeshRenderData();

          if (Re = t.leftDownToCenterX, Fe = t.leftDownToCenterY, xe = e, t.colorChanged || t.isCullingDirty() || t.isUserNodeDirty() || t.hasAnimation() || t.hasTiledNode()) {
            var i, r;

            if (t.colorChanged = !1, t.destroyRenderData(), t.enableCulling) {
              var s = t.cullingRect;
              i = s.leftDown, r = s.rightTop;
            } else i = Ne, r = t.rightTop;

            switch (t.renderOrder) {
              case Q.RightDown:
                je(i, r, -1, 1, t);
                break;

              case Q.LeftDown:
                je(i, r, -1, -1, t);
                break;

              case Q.RightUp:
                je(i, r, 1, 1, t);
                break;

              case Q.LeftUp:
              default:
                je(i, r, 1, -1, t);
            }

            t.setCullingDirty(!1), t.setUserNodeDirty(!1);
          }

          xe = null;
        },
        updateColor: function updateColor(t) {
          var e = t.color,
              i = new Float32Array(4);
          i[0] = e.r / 255, i[1] = e.g / 255, i[2] = e.b / 255, i[0] = e.a / 255;
          var r = t.meshRenderDataArray;
          if (r) for (var s, n = G(r); !(s = n()).done;) {
            var o = s.value;
            if (o.renderData) for (var a = o.renderData, h = a.vData, l = a.vertexStart, u = a.vertexCount; l < u; l++) {
              h.set(i, 9 * l + 5);
            }
          }
        },
        fillBuffers: function fillBuffers(t, e) {
          if (t && t.meshRenderDataArray) {
            var i = t.meshRenderDataArray,
                r = t.node,
                s = e.acquireBufferBatch(),
                n = s.byteOffset >> 2,
                o = s.indicesOffset,
                a = s.vertexOffset,
                h = i[t._meshRenderDataArrayIdx].renderData;
            s.request(h.vertexCount, h.indicesCount) || (s = e.currBufferBatch, n = 0, o = 0, a = 0);
            var l = s.vData,
                u = s.iData,
                g = r.worldMatrix,
                f = h.vData,
                d = h.vertexStart;
            l.set(f.slice(d, d + 9 * h.vertexCount), n);

            for (var _ = 0; _ < h.vertexCount; _++) {
              var p = n + 9 * _;
              De.set(l[p], l[p + 1], l[p + 2]), De.transformMat4(g), l[p] = De.x, l[p + 1] = De.y, l[p + 2] = De.z;
            }

            for (var c = h.vertexCount / 4, m = 0; m < c; m += 1) {
              u[o] = a, u[o + 1] = a + 1, u[o + 2] = a + 2, u[o + 3] = a + 2, u[o + 4] = a + 1, u[o + 5] = a + 3, o += 6, a += 4;
            }
          }
        }
      };

      function Xe(t, e) {
        var i;
        t._rotated ? (Oe.x = t.r, Oe.y = t.t, Pe.x = t.l, Pe.y = t.t, Ee.x = t.r, Ee.y = t.b, Ge.x = t.l, Ge.y = t.b) : (Oe.x = t.l, Oe.y = t.t, Pe.x = t.l, Pe.y = t.b, Ee.x = t.r, Ee.y = t.t, Ge.x = t.r, Ge.y = t.b), (e & q.DIAGONAL) >>> 0 && (i = Pe, Pe = Ee, Ee = i), (e & q.HORIZONTAL) >>> 0 && (i = Oe, Oe = Ee, Ee = i, i = Pe, Pe = Ge, Ge = i), (e & q.VERTICAL) >>> 0 && (i = Oe, Oe = Pe, Pe = i, i = Ee, Ee = Ge, Ge = i);
      }

      function Ue(t, e, i) {
        t || (t = e.texture), xe.texture || (xe.texture = t), (xe = i.requestMeshRenderData()).texture = e.texture;
      }

      function je(t, e, i, r, s) {
        if (!(!xe || e.row < 0 || e.col < 0)) {
          xe.renderData || (xe = s.requestMeshRenderData());
          var n = xe.renderData.vData;
          ze = 0, Le = 0;

          var o,
              a,
              h,
              l,
              u,
              g,
              f,
              d,
              _,
              p = s.tiledTiles,
              c = s.texGrids,
              m = s.tiles,
              y = s.vertices,
              v = 0,
              A = 0,
              w = 0,
              b = 0,
              S = 0,
              T = null,
              x = 0,
              I = !0;

          Ie = Xe;
          var C = new Float32Array(4);

          for (C[0] = s.color.r / 255, C[1] = s.color.g / 255, C[2] = s.color.b / 255, C[3] = s.color.a / 255, -1 === i ? (l = e.row, u = t.row) : (l = t.row, u = e.row); (u - l) * i >= 0; l += i) {
            for (o = y[l], x = s.getNodesCountByRow(l), I = o && 0 === x, 1 === r ? (a = I && t.col < o.minCol ? o.minCol : t.col, h = I && e.col > o.maxCol ? o.maxCol : e.col) : (a = I && e.col > o.maxCol ? o.maxCol : e.col, h = I && t.col < o.minCol ? o.minCol : t.col); (h - a) * r >= 0; a += r) {
              if (g = o && o[a], x > 0) {
                var D = s.requestSubNodesData(),
                    N = s.getNodesByRowCol(l, a);
                N && N.count > 0 && (D.subNodes = s.getNodesByRowCol(l, a).list, T = null, xe = s.requestMeshRenderData());
              }

              g && (v = m[g.index], (d = c.get((v & q.FLIPPED_MASK) >>> 0)) && (T !== d.texture && (Ue(T, d, s), T = d.texture), f = d.tileset._tileSize, A = g.left - Re, w = g.bottom - Fe, b = A + f.width, S = w + f.height, _ = p[g.index], xe.renderData.reserve(4, 0), Le = 9 * xe.renderData.vertexCount, n = xe.renderData.vData, _ ? _.node.active && He(_.node, C, n, A, b, S, w, !1) : (n[Le] = A, n[Le + 1] = S, n[Le + 9] = A, n[Le + 9 + 1] = w, n[Le + 18] = b, n[Le + 18 + 1] = S, n[Le + 27] = b, n[Le + 27 + 1] = w, n.set(C, Le + 5), n.set(C, Le + 9 + 5), n.set(C, Le + 18 + 5), n.set(C, Le + 27 + 5)), Ie(d, v), n[Le + 3] = Oe.x, n[Le + 4] = Oe.y, n[Le + 9 + 3] = Pe.x, n[Le + 9 + 4] = Pe.y, n[Le + 18 + 3] = Ee.x, n[Le + 18 + 4] = Ee.y, n[Le + 27 + 3] = Ge.x, n[Le + 27 + 4] = Ge.y, ze++, xe.renderData.advance(4, 6), ze >= be && (Ue(T, d, s), T = d.texture)));
            }
          }
        }
      }

      function He(t, e, i, r, s, n, o, a) {
        var h = 18,
            l = 27;
        t.updateWorldTransform(), b.fromRTS(Ce, t.getRotation(), t.getPosition(), t.getScale()), S.set(De, -(r + Re), -(o + Fe), 0), b.transform(Ce, Ce, De);
        var u = Ce,
            g = u.m12,
            f = u.m13,
            d = u.m00,
            _ = u.m01,
            p = u.m04,
            c = u.m05,
            m = 1 === d && 0 === _ && 0 === p && 1 === c;

        if (a) {
          var y = (r + s) / 2,
              v = (n + o) / 2;
          m ? (i[Le] = y + g, i[Le + 1] = n + f, i[Le + 9] = r + g, i[Le + 9 + 1] = v + f, i[Le + h] = s + g, i[Le + h + 1] = v + f, i[Le + l] = y + g, i[Le + l + 1] = o + f) : (i[Le] = y * d + n * p + g, i[Le + 1] = y * _ + n * c + f, i[Le + 9] = r * d + v * p + g, i[Le + 9 + 1] = r * _ + v * c + f, i[Le + h] = s * d + v * p + g, i[Le + h + 1] = s * _ + v * c + f, i[Le + l] = y * d + o * p + g, i[Le + l + 1] = y * _ + o * c + f);
        } else m ? (i[Le] = r + g, i[Le + 1] = n + f, i[Le + 9] = r + g, i[Le + 9 + 1] = o + f, i[Le + h] = s + g, i[Le + h + 1] = n + f, i[Le + l] = s + g, i[Le + l + 1] = o + f) : (i[Le] = r * d + n * p + g, i[Le + 1] = r * _ + n * c + f, i[Le + 9] = r * d + o * p + g, i[Le + 9 + 1] = r * _ + o * c + f, i[Le + h] = s * d + n * p + g, i[Le + h + 1] = s * _ + n * c + f, i[Le + l] = s * d + o * p + g, i[Le + l + 1] = s * _ + o * c + f);

        i.set(e, Le + 5), i.set(e, Le + 9 + 5), i.set(e, Le + h + 5), i.set(e, Le + l + 5);
      }

      var Be = t("tiledLayerAssembler", {
        getAssembler: function getAssembler() {
          return Me;
        }
      });
      ve.Assembler = Be;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/transform-utils-65bf8251.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("@babel/runtime/helpers/Arrayincludes");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js"], function (t) {
  "use strict";

  var e, n, i, r, a, s, o, u, h, c, l, f, p, _, v, d, m, g, y, w, T, b, A, S, E, C, k, I, P, x, O, N, M, L, R, z, F, V, D, U, B, W, Q, H, j, q, K, G, Y, X, J, Z, $, tt, et, nt, it;

  return {
    setters: [function (t) {
      e = t.ef, n = t.dH, i = t.d, r = t.eg, a = t.eh, s = t.ei, o = t.l, u = t.c9, h = t.c3, c = t.c5, l = t.c7, f = t.eM, p = t.g0, _ = t.e2, v = t.g1, d = t.f, m = t.t, g = t.ec, y = t.ed, w = t.dU, T = t.dY, b = t.cj, A = t.cf, S = t.d_, E = t.dR, C = t.dT, k = t.g2, I = t.cq, P = t.cL, x = t.g3, O = t.dz, N = t.g4, M = t.dV, L = t.dX, R = t.dZ, z = t.co, F = t.cc, V = t.fi, D = t.df, U = t.g5, B = t.cU, W = t.g6, Q = t.cK, H = t.g7, j = t.dw, q = t.cp, K = t.g8, G = t.ek, Y = t.fY, X = t.fg, J = t.g9, Z = t.de, $ = t.fZ, tt = t.ga, et = t.f_, nt = t.fU, it = t.dO;
    }, function () {}, function () {}],
    execute: function execute() {
      var rt, at, st, ot, ut, ht, ct, lt;

      function ft(t) {
        return "string" == typeof t || "number" == typeof t;
      }

      t({
        b: function b(t, e) {
          return t instanceof e;
        },
        i: ft,
        n: Be,
        o: function o(t, e) {
          for (var n = t, i = ""; null !== n && n !== e;) {
            i = n.name + "/" + i, n = n.parent;
          }

          return i.slice(0, -1);
        },
        p: function p(t, e, n) {
          for (F.identity(n); t !== e;) {
            F.fromRTS($i, t.rotation, t.position, t.scale), F.multiply(n, $i, n), t = t.parent;
          }

          return n;
        },
        q: function q(t, e) {
          for (var n = 0, i = F.IDENTITY; t;) {
            if (t.stamp === e || t.stamp + 1 === e && !t.node.hasChangedFlags) {
              i = t.world, t.stamp = e;
              break;
            }

            t.stamp = e, Ji[n++] = t, t = t.parent;
          }

          for (; n > 0;) {
            t = Ji[--n], Ji[n] = null;
            var r = t.node;
            F.fromRTS(t.local, r.rotation, r.position, r.scale), i = F.multiply(t.world, i, t.local);
          }

          return i;
        },
        r: function r(t) {
          for (var e = Zi.get(t.uuid) || null; e;) {
            Zi.delete(e.node.uuid), e = e.parent;
          }
        },
        s: Ue,
        t: function t(_t2, e) {
          for (var n, i = null, r = 0; _t2 !== e;) {
            var a = _t2.uuid;

            if (Zi.has(a)) {
              i = Zi.get(a);
              break;
            }

            i = {
              node: _t2,
              local: new F(),
              world: new F(),
              stamp: -1,
              parent: null
            }, Zi.set(a, i), Ji[r++] = i, _t2 = _t2.parent, i = null;
          }

          for (; r > 0;) {
            n = Ji[--r], Ji[r] = null, n.parent = i, i = n;
          }

          return i;
        }
      });

      var pt,
          _t,
          vt,
          dt,
          mt,
          gt,
          yt = t("H", e("cc.animation.HierarchyPath")((ot = function () {
        function t(t) {
          a(this, "path", st, this), this.path = t || "";
        }

        return t.prototype.get = function (t) {
          return t instanceof n ? t.getChildByPath(this.path) || (i(3926, t.name, this.path), null) : (i(3925), null);
        }, t;
      }(), st = r((at = ot).prototype, "path", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), rt = at)) || rt),
          wt = t("c", e("cc.animation.ComponentPath")((lt = function () {
        function t(t) {
          a(this, "component", ct, this), this.component = t || "";
        }

        return t.prototype.get = function (t) {
          return t instanceof n ? t.getComponent(this.component) || (i(3928, t.name, this.component), null) : (i(3927), null);
        }, t;
      }(), ct = r((ht = lt).prototype, "component", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), ut = ht)) || ut);

      function Tt(t, n, i, o) {
        var h,
            c,
            l,
            f,
            p,
            _,
            v = new n(),
            d = new n(),
            m = new n(),
            g = e(t)((_ = function () {
          function t(t, e, i) {
            a(this, "dataPoint", l, this), a(this, "inTangent", f, this), a(this, "outTangent", p, this), this.dataPoint = t || new n(), this.inTangent = e || new n(), this.outTangent = i || new n();
          }

          var e = t.prototype;
          return e.lerp = function (t, e, n) {
            var r = this.dataPoint,
                a = t.dataPoint;
            d = i(d, this.inTangent, n), m = i(m, t.outTangent, n);
            var s = e * e * e,
                u = e * e,
                h = s - 2 * u + e,
                c = -2 * s + 3 * u,
                l = s - u;
            return v = i(v, r, 2 * s - 3 * u + 1), v = o(v, v, d, h), v = o(v, v, a, c), v = o(v, v, m, l);
          }, e.getNoLerp = function () {
            return this.dataPoint;
          }, t;
        }(), l = r((c = _).prototype, "dataPoint", [s], {
          configurable: !0,
          enumerable: !0,
          writable: !0,
          initializer: function initializer() {
            return new n();
          }
        }), f = r(c.prototype, "inTangent", [s], {
          configurable: !0,
          enumerable: !0,
          writable: !0,
          initializer: function initializer() {
            return new n();
          }
        }), p = r(c.prototype, "outTangent", [s], {
          configurable: !0,
          enumerable: !0,
          writable: !0,
          initializer: function initializer() {
            return new n();
          }
        }), h = c)) || h;

        if (n === u) {
          var y = g.prototype.lerp;

          g.prototype.lerp = function (t, e, n) {
            var i = y.call(this, t, e, n);
            return u.normalize(i, i), i;
          };
        }

        return g;
      }

      var bt = t("d", Tt("cc.CubicSplineVec2Value", h, h.multiplyScalar, h.scaleAndAdd));
      o.CubicSplineVec2Value = bt;
      var At = t("e", Tt("cc.CubicSplineVec3Value", c, c.multiplyScalar, c.scaleAndAdd));
      o.CubicSplineVec3Value = At;
      var St = t("f", Tt("cc.CubicSplineVec4Value", l, l.multiplyScalar, l.scaleAndAdd));
      o.CubicSplineVec4Value = St;
      var Et = t("g", Tt("cc.CubicSplineQuatValue", u, u.multiplyScalar, u.scaleAndAdd));
      o.CubicSplineQuatValue = Et;
      var Ct = t("h", e("cc.CubicSplineNumberValue")((gt = function () {
        function t(t, e, n) {
          a(this, "dataPoint", vt, this), a(this, "inTangent", dt, this), a(this, "outTangent", mt, this), this.dataPoint = t, this.inTangent = e, this.outTangent = n;
        }

        var e = t.prototype;
        return e.lerp = function (t, e, n) {
          var i = this.dataPoint,
              r = t.dataPoint,
              a = e * e * e,
              s = e * e;
          return i * (2 * a - 3 * s + 1) + this.outTangent * n * (a - 2 * s + e) + r * (-2 * a + 3 * s) + t.inTangent * n * (a - s);
        }, e.getNoLerp = function () {
          return this.dataPoint;
        }, t;
      }(), vt = r((_t = gt).prototype, "dataPoint", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), dt = r(_t.prototype, "inTangent", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), mt = r(_t.prototype, "outTangent", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), pt = _t)) || pt);
      o.CubicSplineNumberValue = Ct;

      var kt,
          It,
          Pt,
          xt,
          Ot,
          Nt,
          Mt,
          Lt,
          Rt,
          zt,
          Ft,
          Vt,
          Dt,
          Ut,
          Bt,
          Wt,
          Qt,
          Ht,
          jt,
          qt,
          Kt,
          Gt,
          Yt,
          Xt,
          Jt,
          Zt,
          $t,
          te = Symbol("CreateEval"),
          ee = Symbol("NormalizedFollow"),
          ne = Symbol("ConvertAsTrsPath"),
          ie = Symbol("TrackBinding"),
          re = t("a", e("cc.animation.TrackPath")((xt = function () {
        function t() {
          a(this, "_paths", Pt, this);
        }

        var e = t.prototype;
        return e.toProperty = function (t) {
          return this._paths.push(t), this;
        }, e.toElement = function (t) {
          return this._paths.push(t), this;
        }, e.toHierarchy = function (t) {
          return this._paths.push(new yt(t)), this;
        }, e.toComponent = function (t) {
          var e = new wt("string" == typeof t ? t : f.getClassName(t));
          return this._paths.push(e), this;
        }, e.toCustomized = function (t) {
          return this._paths.push(t), this;
        }, e.append = function () {
          for (var t, e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
            n[i] = arguments[i];
          }

          var r = (t = this._paths).concat.apply(t, n.map(function (t) {
            return t._paths;
          }));

          return this._paths = r, this;
        }, e.isPropertyAt = function (t) {
          return "string" == typeof this._paths[t];
        }, e.parsePropertyAt = function (t) {
          return this._paths[t];
        }, e.isElementAt = function (t) {
          return "number" == typeof this._paths[t];
        }, e.parseElementAt = function (t) {
          return this._paths[t];
        }, e.isHierarchyAt = function (t) {
          return this._paths[t] instanceof yt;
        }, e.parseHierarchyAt = function (t) {
          return p(this.isHierarchyAt(t)), this._paths[t].path;
        }, e.isComponentAt = function (t) {
          return this._paths[t] instanceof wt;
        }, e.parseComponentAt = function (t) {
          return p(this.isComponentAt(t)), this._paths[t].component;
        }, e.slice = function (e, n) {
          var i = new t();
          return i._paths = this._paths.slice(e, n), i;
        }, e.trace = function (t, e, n) {
          var i, r;
          return null !== (i = e) && void 0 !== i || (e = 0), null !== (r = n) && void 0 !== r || (n = this._paths.length), this[ee](t, e, n);
        }, e[ne] = function () {
          for (var t, e = this._paths, n = e.length, i = 0, r = ""; i < n; ++i) {
            var a = e[i];
            if (!(a instanceof yt)) break;
            a.path && (r ? r += "/" + a.path : r = a.path);
          }

          if (i === n) return null;
          if (i !== n - 1) return null;

          switch (e[i]) {
            case "position":
            case "scale":
            case "rotation":
            case "eulerAngles":
              t = e[i];
              break;

            default:
              return null;
          }

          return {
            node: r,
            property: t
          };
        }, e[ee] = function (t, e, n) {
          for (var r = this._paths, a = t, s = e; s < n; ++s) {
            var o = r[s];

            if (ft(o)) {
              if (!(o in a)) return i(3929, o), null;
              a = a[o];
            } else a = o.get(a);

            if (null === a) break;
          }

          return a;
        }, _(t, [{
          key: "length",
          get: function get() {
            return this._paths.length;
          }
        }]), t;
      }(), Pt = r((It = xt).prototype, "_paths", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), kt = It)) || kt),
          ae = e("cc.animation.TrackBinding")(Ot = v((Rt = function () {
        function t() {
          a(this, "path", Mt, this), a(this, "proxy", Lt, this);
        }

        var e = t.prototype;
        return e.parseTrsPath = function () {
          return this.proxy ? null : this.path[ne]();
        }, e.createRuntimeBinding = function (t, e, i) {
          var r = this.path,
              a = this.proxy,
              s = r.length,
              o = s - 1;

          if (0 === s || !r.isPropertyAt(o) && !r.isElementAt(o) || a) {
            if (a) {
              var u = r[ee](t, 0, s);
              if (null === u) return null;
              var h = a.forTarget(u),
                  c = {
                setValue: function setValue(t) {
                  h.set(t);
                }
              },
                  l = h.get;
              return l && (c.getValue = function () {
                return l.call(h);
              }), c;
            }

            return d(3921), null;
          }

          var f,
              p = r.isPropertyAt(o) ? r.parsePropertyAt(o) : r.parseElementAt(o),
              _ = r[ee](t, 0, s - 1);

          return null === _ ? null : e && _ instanceof n && ("position" === (f = p) || "rotation" === f || "scale" === f || "eulerAngles" === f) ? e.createPoseWriter(_, p, i) : {
            setValue: function setValue(t) {
              _[p] = t;
            },
            getValue: function getValue() {
              return _[p];
            }
          };
        }, t;
      }(), Mt = r((Nt = Rt).prototype, "path", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new re();
        }
      }), Lt = r(Nt.prototype, "proxy", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), Ot = Nt)) || Ot) || Ot,
          se = t("T", e("cc.animation.Track")((Dt = function () {
        function t() {
          a(this, "_binding", Vt, this);
        }

        var e = t.prototype;
        return e.channels = function () {
          return [];
        }, e.range = function () {
          for (var t, e = {
            min: 1 / 0,
            max: -1 / 0
          }, n = m(this.channels()); !(t = n()).done;) {
            var i = t.value;
            e.min = Math.min(e.min, i.curve.rangeMin), e.max = Math.max(e.max, i.curve.rangeMax);
          }

          return e;
        }, e[te] = function () {
          throw new Error("No Impl");
        }, _(t, [{
          key: "path",
          get: function get() {
            return this._binding.path;
          },
          set: function set(t) {
            this._binding.path = t;
          }
        }, {
          key: "proxy",
          get: function get() {
            return this._binding.proxy;
          },
          set: function set(t) {
            this._binding.proxy = t;
          }
        }, {
          key: ie,
          get: function get() {
            return this._binding;
          }
        }]), t;
      }(), Vt = r((Ft = Dt).prototype, "_binding", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new ae();
        }
      }), zt = Ft)) || zt),
          oe = e("cc.animation.Channel")((Qt = function () {
        function t(t) {
          this.name = "", a(this, "_curve", Wt, this), this._curve = t;
        }

        return _(t, [{
          key: "curve",
          get: function get() {
            return this._curve;
          }
        }]), t;
      }(), Wt = r((Bt = Qt).prototype, "_curve", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), Ut = Bt)) || Ut,
          ue = e("cc.animation.SingleChannelTrack")((Kt = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, a(e, "_channel", qt, y(e)), e._channel = new oe(e.createCurve()), e;
        }

        g(e, t);
        var n = e.prototype;
        return n.channels = function () {
          return [this._channel];
        }, n.createCurve = function () {
          throw new Error("Not impl");
        }, n[te] = function () {
          var t = this._channel.curve;
          return new he(t);
        }, _(e, [{
          key: "channel",
          get: function get() {
            return this._channel;
          }
        }]), e;
      }(se), qt = r((jt = Kt).prototype, "_channel", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), Ht = jt)) || Ht,
          he = function () {
        function t(t) {
          this._curve = t;
        }

        return t.prototype.evaluate = function (t) {
          return this._curve.evaluate(t);
        }, t;
      }(),
          ce = t("R", e("cc.animation.RealTrack")(Gt = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        return g(e, t), e.prototype.createCurve = function () {
          return new w();
        }, e;
      }(ue)) || Gt);

      function le(t) {
        return 0 === t.keyFramesCount ? void 0 : t;
      }

      var fe,
          pe,
          _e,
          ve,
          de,
          me,
          ge,
          ye,
          we,
          Te,
          be = ["X", "Y", "Z", "W"],
          Ae = t("V", e("cc.animation.VectorTrack")(($t = function (t) {
        function e() {
          var e;
          e = t.call(this) || this, a(e, "_channels", Jt, y(e)), a(e, "_nComponents", Zt, y(e)), e._channels = new Array(4);

          for (var n = 0; n < e._channels.length; ++n) {
            var i = new oe(new w());
            i.name = be[n], e._channels[n] = i;
          }

          return e;
        }

        g(e, t);
        var n = e.prototype;
        return n.channels = function () {
          return this._channels;
        }, n[te] = function () {
          switch (this._nComponents) {
            default:
            case 2:
              return new Se(le(this._channels[0].curve), le(this._channels[1].curve));

            case 3:
              return new Ee(le(this._channels[0].curve), le(this._channels[1].curve), le(this._channels[2].curve));

            case 4:
              return new Ce(le(this._channels[0].curve), le(this._channels[1].curve), le(this._channels[2].curve), le(this._channels[3].curve));
          }
        }, _(e, [{
          key: "componentsCount",
          get: function get() {
            return this._nComponents;
          },
          set: function set(t) {
            this._nComponents = t;
          }
        }]), e;
      }(se), Jt = r((Xt = $t).prototype, "_channels", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), Zt = r(Xt.prototype, "_nComponents", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 4;
        }
      }), Yt = Xt)) || Yt),
          Se = function () {
        function t(t, e) {
          this._result = new h(), this._x = t, this._y = e;
        }

        return t.prototype.evaluate = function (t, e) {
          return this._x && this._y || !e.getValue || h.copy(this._result, e.getValue()), this._x && (this._result.x = this._x.evaluate(t)), this._y && (this._result.y = this._y.evaluate(t)), this._result;
        }, t;
      }(),
          Ee = function () {
        function t(t, e, n) {
          this._result = new c(), this._x = t, this._y = e, this._z = n;
        }

        return t.prototype.evaluate = function (t, e) {
          return this._x && this._y && this._z || !e.getValue || c.copy(this._result, e.getValue()), this._x && (this._result.x = this._x.evaluate(t)), this._y && (this._result.y = this._y.evaluate(t)), this._z && (this._result.z = this._z.evaluate(t)), this._result;
        }, t;
      }(),
          Ce = function () {
        function t(t, e, n, i) {
          this._result = new l(), this._x = t, this._y = e, this._z = n, this._w = i;
        }

        return t.prototype.evaluate = function (t, e) {
          return this._x && this._y && this._z && this._w || !e.getValue || l.copy(this._result, e.getValue()), this._x && (this._result.x = this._x.evaluate(t)), this._y && (this._result.y = this._y.evaluate(t)), this._z && (this._result.z = this._z.evaluate(t)), this._w && (this._result.w = this._w.evaluate(t)), this._result;
        }, t;
      }(),
          ke = t("Q", e("cc.animation.QuatTrack")(fe = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        g(e, t);
        var n = e.prototype;
        return n.createCurve = function () {
          return new T();
        }, n[te] = function () {
          return new Ie(this.channels()[0].curve);
        }, e;
      }(ue)) || fe),
          Ie = function () {
        function t(t) {
          this._result = new u(), this._curve = t;
        }

        return t.prototype.evaluate = function (t) {
          return this._curve.evaluate(t, this._result), this._result;
        }, t;
      }(),
          Pe = ["Red", "Green", "Blue", "Alpha"],
          xe = t("C", e("cc.animation.ColorTrack")((de = function (t) {
        function e() {
          var e;
          e = t.call(this) || this, a(e, "_channels", ve, y(e)), e._channels = new Array(4);

          for (var n = 0; n < e._channels.length; ++n) {
            var i = new oe(new w());
            i.name = Pe[n], e._channels[n] = i;
          }

          return e;
        }

        g(e, t);
        var n = e.prototype;
        return n.channels = function () {
          return this._channels;
        }, n[te] = function () {
          return new Oe(le(this._channels[0].curve), le(this._channels[1].curve), le(this._channels[2].curve), le(this._channels[3].curve));
        }, e;
      }(se), ve = r((_e = de).prototype, "_channels", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), pe = _e)) || pe),
          Oe = function () {
        function t(t, e, n, i) {
          this._result = new b(), this._x = t, this._y = e, this._z = n, this._w = i;
        }

        return t.prototype.evaluate = function (t, e) {
          return this._x && this._y && this._z && this._w || !e.getValue || b.copy(this._result, e.getValue()), this._x && (this._result.r = this._x.evaluate(t)), this._y && (this._result.g = this._y.evaluate(t)), this._z && (this._result.b = this._z.evaluate(t)), this._w && (this._result.a = this._w.evaluate(t)), this._result;
        }, t;
      }(),
          Ne = ["Width", "Height"],
          Me = t("S", e("cc.animation.SizeTrack")((we = function (t) {
        function e() {
          var e;
          e = t.call(this) || this, a(e, "_channels", ye, y(e)), e._channels = new Array(2);

          for (var n = 0; n < e._channels.length; ++n) {
            var i = new oe(new w());
            i.name = Ne[n], e._channels[n] = i;
          }

          return e;
        }

        g(e, t);
        var n = e.prototype;
        return n.channels = function () {
          return this._channels;
        }, n[te] = function () {
          return new Le(le(this._channels[0].curve), le(this._channels[1].curve));
        }, e;
      }(se), ye = r((ge = we).prototype, "_channels", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), me = ge)) || me),
          Le = function () {
        function t(t, e) {
          this._result = new A(), this._width = t, this._height = e;
        }

        return t.prototype.evaluate = function (t, e) {
          if ((!this._width || !this._height) && e.getValue) {
            var n = e.getValue();
            this._result.x = n.x, this._result.y = n.y;
          }

          return this._width && (this._result.width = this._width.evaluate(t)), this._height && (this._result.height = this._height.evaluate(t)), this._result;
        }, t;
      }(),
          Re = t("O", e("cc.animation.ObjectTrack")(Te = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        return g(e, t), e.prototype.createCurve = function () {
          return new S();
        }, e;
      }(ue)) || Te),
          ze = Symbol("BakeNodeCurves"),
          Fe = t("u", function () {
        function t() {}

        return t.getOrExtract = function (e) {
          var n = t.pool.get(e);

          if (!n || n.samples !== e.sample) {
            n && o.director.root.dataPoolManager.releaseAnimationClip(e);
            var i = Math.ceil(e.sample * e.duration) + 1,
                r = e.sample;
            n = e[ze](0, r, i), t.pool.set(e, n);
          }

          return n;
        }, t.destroy = function (e) {
          t.pool.delete(e);
        }, t;
      }());

      Fe.pool = new Map();
      var Ve = t("l", function () {
        function t(t) {
          var e, n;
          this.ratios = void 0, this._findRatio = void 0, this.ratios = t;

          for (var i = !0, r = 1, a = t.length; r < a; r++) {
            if (e = t[r] - t[r - 1], 1 === r) n = e;else if (Math.abs(e - n) > 1e-6) {
              i = !1;
              break;
            }
          }

          this._findRatio = i ? We : k;
        }

        return t.prototype.sample = function (t) {
          return this._findRatio(this.ratios, t);
        }, t;
      }());
      o.RatioSampler = Ve;
      var De = t("m", function () {
        function t(e, n) {
          this.types = void 0, this.type = null, this._values = [], this._lerp = void 0, this._duration = void 0, this._array = void 0, this._duration = n, this._values = e.values;

          var i = function i(e) {
            return "string" == typeof e ? e : Array.isArray(e) ? e[0] === e[1] && e[2] === e[3] ? t.Linear : t.Bezier(e) : t.Linear;
          };

          if (void 0 !== e.easingMethod) this.type = i(e.easingMethod);else if (Array.isArray(e.easingMethods)) this.types = e.easingMethods.map(i);else if (void 0 !== e.easingMethods) {
            this.types = new Array(this._values.length).fill(null);

            for (var r = 0, a = Object.keys(e.easingMethods); r < a.length; r++) {
              var s = a[r];
              this.types[s] = i(e.easingMethods[s]);
            }
          } else this.type = null;
          var o = e.values[0];
          (void 0 === e.interpolate || e.interpolate) && (this._lerp = Je(o)), void 0 !== e._arrayLength && (this._array = new Array(e._arrayLength));
        }

        t.Bezier = function (t) {
          return t;
        };

        var e = t.prototype;
        return e.hasLerp = function () {
          return !!this._lerp;
        }, e.valueAt = function (t) {
          if (void 0 === this._array) {
            var e = this._values[t];
            return e && e.getNoLerp ? e.getNoLerp() : e;
          }

          for (var n = 0; n < this._array.length; ++n) {
            this._array[n] = this._values[this._array.length * t + n];
          }

          return this._array;
        }, e.valueBetween = function (t, e, n, i, r) {
          if (this._lerp) {
            var a = this.types ? this.types[e] : this.type,
                s = r - n,
                o = (t - n) / s;

            if (a && (o = Be(o, a)), void 0 === this._array) {
              var u = this._values[e],
                  h = this._values[i];
              return this._lerp(u, h, o, s * this._duration);
            }

            for (var c = 0; c < this._array.length; ++c) {
              var l = this._values[this._array.length * e + c],
                  f = this._values[this._array.length * i + c];
              this._array[c] = this._lerp(l, f, o, s * this._duration);
            }

            return this._array;
          }

          if (void 0 === this._array) return this.valueAt(e);

          for (var p = 0; p < this._array.length; ++p) {
            this._array[p] = this._values[this._array.length * e + p];
          }

          return this._array;
        }, e.empty = function () {
          return 0 === this._values.length;
        }, e.constant = function () {
          return 1 === this._values.length;
        }, t;
      }());

      function Ue(t, e, n) {
        var i = e.sample(n);
        if (i < 0) if ((i = ~i) <= 0) i = 0;else {
          if (!(i >= e.ratios.length)) return t.valueBetween(n, i - 1, e.ratios[i - 1], i, e.ratios[i]);
          i = e.ratios.length - 1;
        }
        return t.valueAt(i);
      }

      function Be(t, e) {
        if ("string" == typeof e) {
          var n = E[e];
          n ? t = n(t) : d(3906, e);
        } else Array.isArray(e) && (t = C(e, t));

        return t;
      }

      function We(t, e) {
        var n = t.length - 1;
        if (0 === n) return 0;
        var i = t[0];
        if (e < i) return 0;
        var r = t[n];
        if (e > r) return n;
        var a = (e = (e - i) / (r - i)) / (1 / n),
            s = 0 | a,
            o = 1e-6;
        return a - s < o ? s : s + 1 - a < o ? s + 1 : ~(s + 1);
      }

      De.Linear = null, o.AnimCurve = De, t("E", function () {
        function t() {
          this.events = [];
        }

        return t.prototype.add = function (t, e) {
          this.events.push({
            func: t || "",
            params: e || []
          });
        }, t;
      }()), o.sampleAnimationCurve = Ue;

      var Qe,
          He,
          je,
          qe,
          Ke,
          Ge,
          Ye,
          Xe,
          Je = function () {
        function t(t, e, n, i) {
          return t.lerp(e, n, i);
        }

        return function (e) {
          if (null !== e) {
            if ("number" == typeof e) return I;

            if ("object" == (0, _typeof2.default)(e) && e.constructor) {
              if (e instanceof u) return n = new u(), function (t, e, i) {
                return u.slerp(n, t, e, i);
              };
              if (e instanceof P) return function (t) {
                var e = new t();
                return function (n, i, r) {
                  return t.lerp(e, n, i, r), e;
                };
              }(e.constructor);
              if (e.constructor === Number) return I;
              if (x(e)) return t;
            }

            var n;
          }
        };
      }(),
          Ze = e("cc.animation.UntypedTrackChannel")((qe = function (t) {
        function e() {
          var e;
          return e = t.call(this, new w()) || this, a(e, "property", je, y(e)), e;
        }

        return g(e, t), e;
      }(oe), je = r((He = qe).prototype, "property", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Qe = He)) || Qe,
          $e = e("cc.animation.UntypedTrack")((Xe = function (t) {
        function e() {
          for (var e, n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
            i[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(i)) || this, a(e, "_channels", Ye, y(e)), e;
        }

        g(e, t);
        var n = e.prototype;
        return n.channels = function () {
          return this._channels;
        }, n[te] = function (t) {
          var e = this;
          if (!t.getValue) throw new Error(O(3930));

          var n = function n(t) {
            var n;
            return null === (n = e._channels.find(function (e) {
              return e.property === t;
            })) || void 0 === n ? void 0 : n.curve;
          },
              i = t.getValue();

          switch (!0) {
            default:
              throw new Error(O(3931));

            case i instanceof h:
              return new Se(n("x"), n("y"));

            case i instanceof c:
              return new Ee(n("x"), n("y"), n("z"));

            case i instanceof l:
              return new Ce(n("x"), n("y"), n("z"), n("w"));

            case i instanceof b:
              return new Oe(n("r"), n("g"), n("b"), n("a"));

            case i instanceof A:
              return new Le(n("width"), n("height"));
          }
        }, n.addChannel = function (t) {
          var e = new Ze();
          return e.property = t, this._channels.push(e), e;
        }, n.upgrade = function (t) {
          var e = this,
              n = function n(t, _n2) {
            var i = e.channels().find(function (e) {
              return e.property === t;
            });
            i && (_n2.name = i.name, _n2.curve.assignSorted(Array.from(i.curve.times()), Array.from(i.curve.values())));
          },
              i = t(this.path, this.proxy);

          switch (i) {
            default:
              break;

            case "vec2":
            case "vec3":
            case "vec4":
              var r = new Ae();
              r.path = this.path, r.proxy = this.proxy, r.componentsCount = "vec2" === i ? 2 : "vec3" === i ? 3 : 4;
              var a = r.channels(),
                  s = a[0],
                  o = a[1],
                  u = a[2],
                  h = a[3];

              switch (i) {
                case "vec4":
                  n("w", h);

                case "vec3":
                  n("z", u);

                default:
                case "vec2":
                  n("x", s), n("y", o);
              }

              return r;

            case "color":
              var c = new xe(),
                  l = c.channels(),
                  f = l[0],
                  p = l[1],
                  _ = l[2],
                  v = l[3];
              return n("r", f), n("g", p), n("b", _), n("a", v), n("x", f), n("y", p), n("z", _), n("w", v), c;

            case "size":
          }

          return null;
        }, e;
      }(se), Ye = r((Ge = Xe).prototype, "_channels", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ke = Ge)) || Ke,
          tn = function () {
        function t(t) {
          this._keys = [], this._curves = [], this._commonTargets = [], this._ratioSamplers = [], this._runtimeCurves = void 0, this._data = null, this._duration = void 0, this._duration = t;
        }

        var e = t.prototype;
        return e.getPropertyCurves = function () {
          return this._runtimeCurves || this._createPropertyCurves(), this._runtimeCurves;
        }, e.toTracks = function () {
          for (var t, e = [], n = this.keys, r = this.curves, a = this.commonTargets, s = function s(t, e, n) {
            for (var i, r = new re(), a = m(e); !(i = a()).done;) {
              var s = i.value;
              "string" == typeof s ? r.toProperty(s) : "number" == typeof s ? r.toElement(s) : s instanceof yt ? r.toHierarchy(s.path) : s instanceof wt ? r.toComponent(s.component) : r.toCustomized(s);
            }

            t.path = r, t.proxy = n;
          }, o = a.map(function (t) {
            var n = new $e();
            return s(n, t.modifiers, t.valueAdapter), e.push(n), n;
          }), f = function f() {
            var r,
                a = t.value,
                f = a.data,
                _ = f.values;
            if (0 === _.length) return "continue";
            var v = f.keys < 0 ? [0] : n[f.keys],
                d = _[0],
                m = null === (r = f.interpolate) || void 0 === r || r;
            p("number" != typeof f._arrayLength || "number" == typeof d);

            var g = new nn(f, v.length),
                y = function y(t) {
              s(t, a.modifiers, a.valueAdapter);
            },
                w = void 0;

            if ("number" == typeof a.commonTarget) {
              if (!_.every(function (t) {
                return "number" == typeof t;
              })) return i(3932), "continue";
              if (a.valueAdapter || 1 !== a.modifiers.length || "string" != typeof a.modifiers[0]) return i(3933), "continue";
              var T = a.modifiers[0],
                  S = o[a.commonTarget].addChannel(T).curve;
              w = S;
            }

            !function () {
              if ("number" == typeof d) {
                if (!_.every(function (t) {
                  return "number" == typeof t;
                })) return void i(3934);
                var t;
                if (w) t = w;else {
                  var n = new ce();
                  y(n), e.push(n), t = n.channel.curve;
                }
                var r = m ? M.LINEAR : M.CONSTANT;
                return t.assignSorted(v, _.map(function (t) {
                  return {
                    value: t,
                    interpolationMode: r
                  };
                })), void g.convert(t);
              }

              if ("object" == (0, _typeof2.default)(d)) switch (!0) {
                default:
                  break;

                case en(_, h):
                case en(_, c):
                case en(_, l):
                  var a = d instanceof h ? 2 : d instanceof c ? 3 : 4,
                      s = new Ae();
                  y(s), s.componentsCount = a;

                  var o = s.channels(),
                      f = o[0].curve,
                      p = o[1].curve,
                      T = o[2].curve,
                      S = o[3].curve,
                      E = m ? M.LINEAR : M.CONSTANT,
                      C = function C(t) {
                    return {
                      value: t,
                      interpolationMode: E
                    };
                  };

                  switch (a) {
                    case 4:
                      S.assignSorted(v, _.map(function (t) {
                        return C(t.w);
                      })), g.convert(S);

                    case 3:
                      T.assignSorted(v, _.map(function (t) {
                        return C(t.z);
                      })), g.convert(T);

                    default:
                      f.assignSorted(v, _.map(function (t) {
                        return C(t.x);
                      })), g.convert(f), p.assignSorted(v, _.map(function (t) {
                        return C(t.y);
                      })), g.convert(p);
                  }

                  return void e.push(s);

                case en(_, u):
                  var k = new ke();
                  y(k);
                  var I = m ? R.SLERP : R.CONSTANT;
                  return k.channel.curve.assignSorted(v, _.map(function (t) {
                    return {
                      value: u.clone(t),
                      interpolationMode: I
                    };
                  })), g.convertQuatCurve(k.channel.curve), void e.push(k);

                case en(_, b):
                  var P = new xe();
                  y(P);

                  var x = P.channels(),
                      O = x[0].curve,
                      N = x[1].curve,
                      L = x[2].curve,
                      z = x[3].curve,
                      F = m ? M.LINEAR : M.CONSTANT,
                      V = function V(t) {
                    return {
                      value: t,
                      interpolationMode: F
                    };
                  };

                  return O.assignSorted(v, _.map(function (t) {
                    return V(t.r);
                  })), g.convert(O), N.assignSorted(v, _.map(function (t) {
                    return V(t.g);
                  })), g.convert(N), L.assignSorted(v, _.map(function (t) {
                    return V(t.b);
                  })), g.convert(L), z.assignSorted(v, _.map(function (t) {
                    return V(t.a);
                  })), g.convert(z), void e.push(P);

                case en(_, A):
                  var D = new Me();
                  y(D);

                  var U = D.channels(),
                      B = U[0].curve,
                      W = U[1].curve,
                      Q = m ? M.LINEAR : M.CONSTANT,
                      H = function H(t) {
                    return {
                      value: t,
                      interpolationMode: Q
                    };
                  };

                  return B.assignSorted(v, _.map(function (t) {
                    return H(t.width);
                  })), g.convert(B), W.assignSorted(v, _.map(function (t) {
                    return H(t.height);
                  })), g.convert(W), void e.push(D);

                case en(_, Ct):
                  var j = new ce();
                  y(j);
                  var q = m ? M.CUBIC : M.CONSTANT;
                  return j.channel.curve.assignSorted(v, _.map(function (t) {
                    return {
                      value: t.dataPoint,
                      leftTangent: t.inTangent,
                      rightTangent: t.outTangent,
                      interpolationMode: q
                    };
                  })), void e.push(j);

                case en(_, bt):
                case en(_, At):
                case en(_, St):
                  var K = d instanceof bt ? 2 : d instanceof At ? 3 : 4,
                      G = new Ae();
                  y(G), G.componentsCount = K;

                  var Y = G.channels(),
                      X = Y[0],
                      J = Y[1],
                      Z = Y[2],
                      $ = Y[3],
                      tt = m ? M.LINEAR : M.CONSTANT,
                      et = function et(t, e, n) {
                    return {
                      value: t,
                      leftTangent: e,
                      rightTangent: n,
                      interpolationMode: tt
                    };
                  };

                  switch (K) {
                    case 4:
                      $.curve.assignSorted(v, _.map(function (t) {
                        return et(t.dataPoint.w, t.inTangent.w, t.outTangent.w);
                      }));

                    case 3:
                      Z.curve.assignSorted(v, _.map(function (t) {
                        return et(t.dataPoint.z, t.inTangent.z, t.outTangent.z);
                      }));

                    default:
                      X.curve.assignSorted(v, _.map(function (t) {
                        return et(t.dataPoint.y, t.inTangent.y, t.outTangent.y);
                      })), J.curve.assignSorted(v, _.map(function (t) {
                        return et(t.dataPoint.x, t.inTangent.x, t.outTangent.x);
                      }));
                  }

                  return void e.push(G);

                case _.every(function (t) {
                  return t instanceof Et;
                }):
                  i(3935);
              }
              var nt = new Re();
              y(nt), nt.channel.curve.assignSorted(v, _), e.push(nt);
            }();
          }, _ = m(r); !(t = _()).done;) {
            f();
          }

          return e;
        }, e._createPropertyCurves = function () {
          var t = this;
          this._ratioSamplers = this._keys.map(function (e) {
            return new Ve(e.map(function (e) {
              return e / t._duration;
            }));
          }), this._runtimeCurves = this._curves.map(function (e) {
            return {
              curve: new De(e.data, t._duration),
              modifiers: e.modifiers,
              valueAdapter: e.valueAdapter,
              sampler: t._ratioSamplers[e.data.keys],
              commonTarget: e.commonTarget
            };
          });
        }, _(t, [{
          key: "keys",
          get: function get() {
            return this._keys;
          },
          set: function set(t) {
            this._keys = t;
          }
        }, {
          key: "curves",
          get: function get() {
            return this._curves;
          },
          set: function set(t) {
            this._curves = t, delete this._runtimeCurves;
          }
        }, {
          key: "commonTargets",
          get: function get() {
            return this._commonTargets;
          },
          set: function set(t) {
            this._commonTargets = t;
          }
        }, {
          key: "data",
          get: function get() {
            return this._data;
          }
        }]), t;
      }();

      function en(t, e) {
        return t.every(function (t) {
          return t instanceof e;
        });
      }

      var nn = function () {
        function t(t, e) {
          this._easingMethods = void 0;
          var n = t.easingMethods;
          Array.isArray(n) ? 0 === n.length && 0 !== e ? this._easingMethods = new Array(e).fill(null) : this._easingMethods = n : this._easingMethods = void 0 === n ? new Array(e).fill(t.easingMethod) : Array.from({
            length: e
          }, function (t, e) {
            var i;
            return null !== (i = n[e]) && void 0 !== i ? i : null;
          });
        }

        var e = t.prototype;
        return e.convert = function (t) {
          var e,
              n,
              i,
              r,
              a,
              s,
              o,
              u,
              h,
              c,
              l,
              f,
              _,
              v,
              d,
              m,
              g,
              y,
              w,
              T,
              b,
              A,
              S = this._easingMethods;

          if (S) {
            var E = t.keyFramesCount;

            if (!(t.keyFramesCount < 2)) {
              Array.isArray(S) && p(E === S.length);

              for (var C = E - 1, k = 0; k < C; ++k) {
                var I = S[k];
                I && (Array.isArray(I) ? (e = I, n = t.getKeyframeTime(k), i = t.getKeyframeValue(k), r = t.getKeyframeTime(k + 1), a = t.getKeyframeValue(k + 1), s = void 0, o = void 0, u = void 0, h = void 0, c = void 0, l = void 0, f = void 0, _ = void 0, v = void 0, d = void 0, m = void 0, g = void 0, y = void 0, w = void 0, T = void 0, b = void 0, A = void 0, o = e[0], u = e[1], h = e[2], c = e[3], l = i.value, f = 3 * (r - n), _ = 3 * (a.value - l), m = (1 - h) * f, g = (1 - c) * _, y = 1 / 3, w = (d = u * _) / (v = o * f), T = Math.sqrt(v * v + d * d) * y, b = g / m, A = Math.sqrt(m * m + g * g) * y, i.interpolationMode = M.CUBIC, i.tangentWeightMode = (s = i.tangentWeightMode) === L.NONE ? L.RIGHT : s === L.LEFT ? L.BOTH : s, i.rightTangent = w, i.rightTangentWeight = T, a.tangentWeightMode = function (t) {
                  return t === L.NONE ? L.LEFT : t === L.RIGHT ? L.BOTH : t;
                }(a.tangentWeightMode), a.leftTangent = b, a.leftTangentWeight = A) : rn(I, t, k));
              }
            }
          }
        }, e.convertQuatCurve = function (t) {
          var e = this._easingMethods;

          if (e) {
            var n = t.keyFramesCount;

            if (!(t.keyFramesCount < 2)) {
              Array.isArray(e) && p(n === e.length);

              for (var i = n - 1, r = 0; r < i; ++r) {
                var a = e[r];
                a && (Array.isArray(a) ? t.getKeyframeValue(r).easingMethod = a.slice() : an(a, t, r));
              }
            }
          }
        }, _(t, [{
          key: "nil",
          get: function get() {
            return !this._easingMethods || this._easingMethods.every(function (t) {
              return null == t;
            });
          }
        }]), t;
      }();

      function rn(t, e, n) {
        p(n !== e.keyFramesCount - 1);
        var i = e.getKeyframeValue(n),
            r = Rn[t];
        r === N.CONSTANT ? i.interpolationMode = M.CONSTANT : (i.interpolationMode = M.LINEAR, i.easingMethod = r);
      }

      function an(t, e, n) {
        p(n !== e.keyFramesCount - 1);
        var i = e.getKeyframeValue(n),
            r = Rn[t];
        i.easingMethod = r;
      }

      var sn,
          on,
          un,
          hn,
          cn,
          ln,
          fn,
          pn,
          _n,
          vn,
          dn,
          mn,
          gn,
          yn,
          wn,
          Tn,
          bn,
          An,
          Sn,
          En,
          Cn,
          kn,
          In,
          Pn,
          xn,
          On,
          Nn,
          Mn,
          Ln,
          Rn = {
        constant: N.CONSTANT,
        linear: N.LINEAR,
        quadIn: N.QUAD_IN,
        quadOut: N.QUAD_OUT,
        quadInOut: N.QUAD_IN_OUT,
        quadOutIn: N.QUAD_OUT_IN,
        cubicIn: N.CUBIC_IN,
        cubicOut: N.CUBIC_OUT,
        cubicInOut: N.CUBIC_IN_OUT,
        cubicOutIn: N.CUBIC_OUT_IN,
        quartIn: N.QUART_IN,
        quartOut: N.QUART_OUT,
        quartInOut: N.QUART_IN_OUT,
        quartOutIn: N.QUART_OUT_IN,
        quintIn: N.QUINT_IN,
        quintOut: N.QUINT_OUT,
        quintInOut: N.QUINT_IN_OUT,
        quintOutIn: N.QUINT_OUT_IN,
        sineIn: N.SINE_IN,
        sineOut: N.SINE_OUT,
        sineInOut: N.SINE_IN_OUT,
        sineOutIn: N.SINE_OUT_IN,
        expoIn: N.EXPO_IN,
        expoOut: N.EXPO_OUT,
        expoInOut: N.EXPO_IN_OUT,
        expoOutIn: N.EXPO_OUT_IN,
        circIn: N.CIRC_IN,
        circOut: N.CIRC_OUT,
        circInOut: N.CIRC_IN_OUT,
        circOutIn: N.CIRC_OUT_IN,
        elasticIn: N.ELASTIC_IN,
        elasticOut: N.ELASTIC_OUT,
        elasticInOut: N.ELASTIC_IN_OUT,
        elasticOutIn: N.ELASTIC_OUT_IN,
        backIn: N.BACK_IN,
        backOut: N.BACK_OUT,
        backInOut: N.BACK_IN_OUT,
        backOutIn: N.BACK_OUT_IN,
        bounceIn: N.BOUNCE_IN,
        bounceOut: N.BOUNCE_OUT,
        bounceInOut: N.BOUNCE_IN_OUT,
        bounceOutIn: N.BOUNCE_OUT_IN,
        smooth: N.SMOOTH,
        fade: N.FADE
      };

      function zn() {
        throw new Error("split() only valid in Editor.");
      }

      e("cc.animation.ExoticAnimation")((un = function () {
        function t() {
          a(this, "_nodeAnimations", on, this);
        }

        var e = t.prototype;
        return e.createEvaluator = function (t) {
          return new qn(this._nodeAnimations, t);
        }, e.addNodeAnimation = function (t) {
          var e = new Fn(t);
          return this._nodeAnimations.push(e), e;
        }, e.collectAnimatedJoints = function () {
          return Array.from(new Set(this._nodeAnimations.map(function (t) {
            return t.path;
          })));
        }, e.split = function () {
          return zn();
        }, e.toHashString = function () {
          return this._nodeAnimations.map(function (t) {
            return t.toHashString();
          }).join("\n");
        }, t;
      }(), on = r((sn = un).prototype, "_nodeAnimations", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), sn));
      var Fn = e("cc.animation.ExoticNodeAnimation")((vn = function () {
        function t(t) {
          a(this, "_path", ln, this), a(this, "_position", fn, this), a(this, "_rotation", pn, this), a(this, "_scale", _n, this), this._path = t;
        }

        var e = t.prototype;
        return e.createPosition = function (t, e) {
          this._position = new Qn(t, new Bn(e));
        }, e.createRotation = function (t, e) {
          this._rotation = new Qn(t, new Wn(e));
        }, e.createScale = function (t, e) {
          this._scale = new Qn(t, new Bn(e));
        }, e.createEvaluator = function (t) {
          return new Kn(this._path, this._position, this._rotation, this._scale, t);
        }, e.split = function () {
          return zn();
        }, e.toHashString = function () {
          var t, e, n, i, r, a;
          return this._path + "\n" + (null !== (t = null === (e = this._position) || void 0 === e ? void 0 : e.toHashString()) && void 0 !== t ? t : "") + (null !== (n = null === (i = this._scale) || void 0 === i ? void 0 : i.toHashString()) && void 0 !== n ? n : "") + (null !== (r = null === (a = this._rotation) || void 0 === a ? void 0 : a.toHashString()) && void 0 !== r ? r : "");
        }, _(t, [{
          key: "path",
          get: function get() {
            return this._path;
          }
        }]), t;
      }(), ln = r((cn = vn).prototype, "_path", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), fn = r(cn.prototype, "_position", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), pn = r(cn.prototype, "_rotation", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), _n = r(cn.prototype, "_scale", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), hn = cn)) || hn;

      function Vn(t) {
        return t.toPrecision(2);
      }

      function Dn(t) {
        return t.map(Vn).join(" ");
      }

      var Un = e("cc.animation.ExoticVectorLikeTrackValues")((wn = function () {
        function t(t) {
          a(this, "_values", gn, this), a(this, "_isQuantized", yn, this), this._values = t, this._isQuantized = !1;
        }

        var e = t.prototype;
        return e.quantize = function (t) {
          p(!this._isQuantized), this._values = function (t, e) {
            var n = Yn[e],
                i = 1 << n.BYTES_PER_ELEMENT,
                r = Number.POSITIVE_INFINITY,
                a = Number.NEGATIVE_INFINITY;
            t.forEach(function (t) {
              r = Math.min(t, r), a = Math.max(t, a);
            });
            var s = a - r,
                o = n.from(t, function (t) {
              return (t - r) / s * i;
            });
            return new ci(Xn(t), o, s, r);
          }(this._values, t), this._isQuantized = !0;
        }, e.toHashString = function () {
          var t = this._isQuantized,
              e = this._values;
          return t + " " + (t ? e.toHashString() : Dn(e));
        }, _(t, [{
          key: "precision",
          get: function get() {
            return this._isQuantized ? this._values.originalPrecision : Xn(this._values);
          }
        }]), t;
      }(), gn = r((mn = wn).prototype, "_values", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), yn = r(mn.prototype, "_isQuantized", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), dn = mn)) || dn,
          Bn = e("cc.animation.ExoticVec3TrackValues")(Tn = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        g(e, t), e.imitate = function (t, n) {
          var i = new e(t);
          return n._isQuantized && i.quantize(n._values.quantizationType), i;
        };
        var n = e.prototype;
        return n.get = function (t, e) {
          var n = this._values;
          this._isQuantized ? pi(n, t, e) : c.fromArray(e, n, 3 * t);
        }, n.lerp = function (t, e, n, i, r, a) {
          var s = this._values;
          this._isQuantized ? (pi(s, t, i), pi(s, e, r)) : (c.fromArray(i, s, 3 * t), c.fromArray(r, s, 3 * e)), c.lerp(a, i, r, n);
        }, e;
      }(Un)) || Tn,
          Wn = e("cc.animation.ExoticQuatTrackValues")(bn = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        g(e, t), e.imitate = function (t, n) {
          var i = new e(t);
          return n._isQuantized && i.quantize(n._values.quantizationType), i;
        };
        var n = e.prototype;
        return n.get = function (t, e) {
          var n = this._values;
          this._isQuantized ? _i(n, t, e) : u.fromArray(e, n, 4 * t);
        }, n.lerp = function (t, e, n, i, r, a) {
          var s = this._values;
          this._isQuantized ? (_i(s, t, i), _i(s, e, r)) : (u.fromArray(i, s, 4 * t), u.fromArray(r, s, 4 * e)), u.slerp(a, i, r, n);
        }, e;
      }(Un)) || bn,
          Qn = e("cc.animation.ExoticTrack")((kn = function () {
        function t(t, e) {
          a(this, "times", En, this), a(this, "values", Cn, this), this.times = t, this.values = e;
        }

        return t.prototype.toHashString = function () {
          var t = this.times,
              e = this.values;
          return "times: " + Dn(t) + "; values: " + e.toHashString();
        }, t;
      }(), En = r((Sn = kn).prototype, "times", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), Cn = r(Sn.prototype, "values", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), An = Sn)) || An;

      function Hn(t, e) {
        t.length, p(0 !== t.length);
        var n = 0,
            i = 0,
            r = k(t, e);
        if (r >= 0) n = r;else {
          var a = ~r,
              s = a - 1;
          n = s;
          var o = t[a],
              u = t[s];
          i = (e - u) / (o - u);
        }
        return {
          index: n,
          ratio: i
        };
      }

      !function () {
        function t() {
          this._reset();
        }

        var e = t.prototype;
        e.transformTime = function (t) {
          return t - this._timeOffset;
        }, e.calculate = function (t, e, n) {
          this._reset();

          var i = t.length;

          if (i) {
            var r = t[0],
                a = t[i - 1],
                s = z(e, r, a),
                o = z(n, r, a);
            this._timeOffset = s;

            var u = function (t, e, n) {
              var i = t.length;
              p(n >= e && e >= t[0] && n <= t[i - 1]);
              var r = Hn(t, e),
                  a = r.index,
                  s = r.ratio,
                  o = Hn(t, n);
              return {
                fromIndex: a,
                fromRatio: s,
                toIndex: o.index,
                toRatio: o.ratio
              };
            }(t, s, o),
                h = u.fromIndex,
                c = u.fromRatio,
                l = u.toIndex,
                f = u.toRatio,
                _ = !c,
                v = !f;

            h !== l || c !== f ? (_ || (this.preLerpIndex = h, this.preLerpRatio = c), this.directKeyframesBegin = _ ? h : h + 1, this.directKeyframesEnd = l + 1, v || (this.postLerpIndex = l, this.postLerpRatio = f)) : _ ? (this.directKeyframesBegin = h, this.directKeyframesEnd = h + 1) : (this.preLerpIndex = h, this.preLerpRatio = c);
          }
        }, e._reset = function () {
          this.preLerpIndex = -1, this.preLerpRatio = 0, this.directKeyframesBegin = 0, this.directKeyframesEnd = 0, this.postLerpIndex = -1, this.postLerpRatio = 0, this._timeOffset = 0;
        }, _(t, [{
          key: "keyframesCount",
          get: function get() {
            var t = this.preLerpIndex,
                e = this.directKeyframesBegin;
            return 0 + (t < 0 ? 0 : 1) + (this.directKeyframesEnd - e) + (this.postLerpIndex < 0 ? 0 : 1);
          }
        }]);
      }();

      var jn,
          qn = function () {
        function t(t, e) {
          this._nodeEvaluations = void 0, this._nodeEvaluations = t.map(function (t) {
            return t.createEvaluator(e);
          });
        }

        return t.prototype.evaluate = function (t) {
          this._nodeEvaluations.forEach(function (e) {
            e.evaluate(t);
          });
        }, t;
      }(),
          Kn = function () {
        function t(t, e, n, i, r) {
          this._position = null, this._rotation = null, this._scale = null, e && (this._position = fi(e.times, e.values, c, t, "position", r)), n && (this._rotation = fi(n.times, n.values, u, t, "rotation", r)), i && (this._scale = fi(i.times, i.values, c, t, "scale", r));
        }

        return t.prototype.evaluate = function (t) {
          if (this._position) {
            var e = this._position.evaluator.evaluate(t);

            this._position.runtimeBinding.setValue(e);
          }

          if (this._rotation) {
            var n = this._rotation.evaluator.evaluate(t);

            this._rotation.runtimeBinding.setValue(n);
          }

          if (this._scale) {
            var i = this._scale.evaluator.evaluate(t);

            this._scale.runtimeBinding.setValue(i);
          }
        }, t;
      }(),
          Gn = function () {
        function t(t, e, n) {
          this._times = void 0, this._inputSampleResultCache = {
            just: !1,
            index: -1,
            nextIndex: -1,
            ratio: 0
          }, this._values = void 0, this._prevValue = void 0, this._nextValue = void 0, this._resultValue = void 0, this._times = t, this._values = e, this._prevValue = new n(), this._nextValue = new n(), this._resultValue = new n();
        }

        return t.prototype.evaluate = function (t) {
          var e = this._times,
              n = this._values,
              i = this._resultValue;
          if (0 === e.length) return i;

          var r = function (t, e, n) {
            var i = t.length,
                r = t[0],
                a = t[i - 1];
            if (e < r) n.just = !0, n.index = 0;else if (e > a) n.just = !0, n.index = i - 1;else {
              var s = k(t, e);
              if (s >= 0) n.just = !0, n.index = s;else {
                var o = ~s,
                    u = o - 1,
                    h = t[u],
                    c = t[o],
                    l = (e - t[u]) / (c - h);
                n.just = !1, n.index = u, n.nextIndex = o, n.ratio = l;
              }
            }
            return n;
          }(e, t, this._inputSampleResultCache);

          return r.just ? n.get(r.index, i) : n.lerp(r.index, r.nextIndex, r.ratio, this._prevValue, this._nextValue, i), i;
        }, t;
      }(),
          Yn = {
        uint8: Uint8Array,
        uint16: Uint16Array
      };

      function Xn(t) {
        switch (t.BYTES_PER_ELEMENT) {
          default:
          case 4:
            return jn.FLOAT_32;

          case 8:
            return jn.FLOAT_64;
        }
      }

      !function (t) {
        t[t.FLOAT_32 = 0] = "FLOAT_32", t[t.FLOAT_64 = 1] = "FLOAT_64";
      }(jn || (jn = {}));
      var Jn,
          Zn,
          $n,
          ti,
          ei,
          ni,
          ii,
          ri,
          ai,
          si,
          oi,
          ui,
          hi,
          ci = e("cc.animation.QuantizedFloatArray")((Ln = function () {
        function t(t, e, n, i) {
          void 0 === i && (i = 0), a(this, "originalPrecision", xn, this), a(this, "min", On, this), a(this, "extent", Nn, this), a(this, "values", Mn, this), this.originalPrecision = t, this.values = e, this.extent = n, this.min = i;
        }

        return t.prototype.toHashString = function () {
          var t = this.originalPrecision,
              e = this.min,
              n = this.extent,
              i = this.values;
          return t + " " + Vn(e) + " " + Vn(n) + " " + i.join(" ");
        }, _(t, [{
          key: "quantizationType",
          get: function get() {
            switch (this.values.BYTES_PER_ELEMENT) {
              default:
              case 1:
                return "uint8";

              case 2:
                return "uint16";
            }
          }
        }]), t;
      }(), xn = r((Pn = Ln).prototype, "originalPrecision", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), On = r(Pn.prototype, "min", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), Nn = r(Pn.prototype, "extent", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), Mn = r(Pn.prototype, "values", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: null
      }), In = Pn)) || In;

      function li(t, e) {
        return t.values[e] / (1 << t.values.BYTES_PER_ELEMENT) * t.extent + t.min;
      }

      function fi(t, e, n, i, r, a) {
        var s = new ae();
        s.path = new re().toHierarchy(i).toProperty(r);
        var o = a(s);
        return o ? {
          runtimeBinding: o,
          evaluator: new Gn(t, e, n)
        } : null;
      }

      function pi(t, e, n) {
        c.set(n, li(t, 3 * e + 0), li(t, 3 * e + 1), li(t, 3 * e + 2));
      }

      function _i(t, e, n) {
        u.set(n, li(t, 4 * e + 0), li(t, 4 * e + 1), li(t, 4 * e + 2), li(t, 4 * e + 3));
      }

      var vi = Symbol("SearchForRootBonePath"),
          di = Symbol("ExoticAnimation"),
          mi = t("A", e("cc.AnimationClip")((hi = ui = function (t) {
        function e() {
          for (var e, n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
            i[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(i)) || this, a(e, "sample", $n, y(e)), a(e, "speed", ti, y(e)), a(e, "wrapMode", ei, y(e)), a(e, "enableTrsBlending", ni, y(e)), a(e, "_duration", ii, y(e)), a(e, "_hash", ri, y(e)), e.frameRate = 0, a(e, "_tracks", ai, y(e)), a(e, "_exoticAnimation", si, y(e)), e._legacyData = void 0, e._legacyDataDirty = !1, a(e, "_events", oi, y(e)), e._runtimeEvents = {
            ratios: [],
            eventGroups: []
          }, e;
        }

        g(e, t), e.createWithSpriteFrames = function (t, n) {
          var i = new e();
          i.sample = n || i.sample, i.duration = t.length / i.sample;
          var r = 1 / i.sample,
              a = new Re();
          return a.path = new re().toComponent("cc.Sprite").toProperty("spriteFrame"), a.channels()[0].curve.assignSorted(t.map(function (t, e) {
            return [r * e, t];
          })), i.addTrack(a), i;
        };
        var r = e.prototype;
        return r.onLoaded = function () {
          this.frameRate = this.sample, this.events = this._events;
        }, r.range = function () {
          for (var t = {
            min: 1 / 0,
            max: -1 / 0
          }, e = this._tracks, n = e.length, i = 0; i < n; ++i) {
            var r = e[i].range();
            t.min = Math.min(t.min, r.min), t.max = Math.max(t.max, r.max);
          }

          return t;
        }, r.getTrack = function (t) {
          return this._tracks[t];
        }, r.addTrack = function (t) {
          var e = this._tracks.length;
          return this._tracks.push(t), e;
        }, r.removeTrack = function (t) {
          this._tracks.splice(t, 1);
        }, r.clearTracks = function () {
          this._tracks.length = 0;
        }, r.createEventEvaluator = function (t) {
          return new Ei(t, this._runtimeEvents.ratios, this._runtimeEvents.eventGroups, this.wrapMode);
        }, r.createEvaluator = function (t) {
          var e = this,
              n = t.target;
          return this._createEvalWithBinder(n, function (i) {
            var r = i.createRuntimeBinding(n, e.enableTrsBlending ? t.pose : void 0, !1);
            return null != r ? r : void 0;
          }, t.rootMotion);
        }, r.destroy = function () {
          var e;
          return (null === (e = o.director.root) || void 0 === e ? void 0 : e.dataPoolManager) && o.director.root.dataPoolManager.releaseAnimationClip(this), Fe.destroy(this), t.prototype.destroy.call(this);
        }, r[ze] = function (t, e, n) {
          for (var i = 1 / e, r = this._collectAnimatedJoints(), a = r.length, s = {}, o = 0; o < a; ++o) {
            s[r[o]] = {
              transforms: Array.from({
                length: n
              }, function () {
                return new F();
              })
            };
          }

          var u = r.reduce(function (t, e) {
            return t[e] = new wi(), t;
          }, {});

          for (var h in u) {
            var c = u[h],
                l = h.lastIndexOf("/");

            if (l >= 0) {
              var f = h.substring(0, l),
                  p = u[f];
              p && (c.parent = p);
            }
          }

          for (var _ = this._createEvalWithBinder(void 0, function (t) {
            var e = t.parseTrsPath();

            if (e) {
              var n = u[e.node];
              if (n) return Si(n, e.property);
            }
          }, void 0), v = 0; v < n; ++v) {
            var d = t + i * v;

            _.evaluate(d);

            for (var m = 0; m < a; ++m) {
              var g = r[m];
              F.copy(s[g].transforms[v], u[g].globalTransform);
            }

            for (var y = 0; y < a; ++y) {
              var w = r[y];
              u[w].invalidate();
            }
          }

          return {
            samples: e,
            frames: n,
            joints: s
          };
        }, r.upgradeUntypedTracks = function (t) {
          for (var e = [], n = [], i = this._tracks, r = i.length, a = 0; a < r; ++a) {
            var s = i[a];

            if (s instanceof $e) {
              var o = s.upgrade(t);
              o && (e.push(o), n.push(s));
            }
          }

          for (var u = n.length, h = 0; h < u; ++h) {
            V.remove(i, n[h]);
          }

          i.push.apply(i, e);
        }, r[vi] = function () {
          return this._searchForRootBonePath();
        }, r.getPropertyCurves = function () {
          return this._getLegacyData().getPropertyCurves();
        }, r.updateEventDatas = function () {
          this.events = this._events;
        }, r.hasEvents = function () {
          return 0 !== this.events.length;
        }, r.syncLegacyData = function () {
          this._legacyData && (this._fromLegacy(this._legacyData), this._legacyData = void 0);
        }, r._createEvalWithBinder = function (t, e, n) {
          this._legacyDataDirty && (this._legacyDataDirty = !1, this.syncLegacyData());
          var i,
              r = [];
          n && (i = this._createRootMotionEvaluation(t, n, r));

          for (var a, s = [], o = this._tracks, u = o.length, h = 0; h < u; ++h) {
            var c = o[h];

            if (!r.includes(c)) {
              var l = e(c[ie]);

              if (l) {
                var f = c[te](l);
                s.push({
                  binding: l,
                  trackEval: f
                });
              }
            }
          }

          return this._exoticAnimation && (a = this._exoticAnimation.createEvaluator(e)), new gi(s, a, i);
        }, r._createRootMotionEvaluation = function (t, e, r) {
          if (t instanceof n) {
            var a = this._searchForRootBonePath();

            if (a) {
              var s = t.getChildByPath(a);

              if (s) {
                for (var o = new yi(), u = [], h = this._tracks, c = h.length, l = 0; l < c; ++l) {
                  var f = h[l],
                      p = f[ie].parseTrsPath();

                  if (p && p.node === a) {
                    r.push(f);

                    var _ = Si(o, p.property);

                    if (_) {
                      var v = f[te](_);
                      u.push({
                        binding: _,
                        trackEval: v
                      });
                    }
                  }
                }

                return new bi(s, this._duration, o, u);
              }

              i(3924);
            } else i(3923);
          } else d(3920);
        }, r._searchForRootBonePath = function () {
          var t = this._tracks.map(function (t) {
            var e = t[ie].parseTrsPath();

            if (e) {
              var n = e.node;
              return {
                path: n,
                rank: n.split("/").length
              };
            }

            return {
              path: "",
              rank: 0
            };
          });

          t.sort(function (t, e) {
            return t.rank - e.rank;
          });
          var e = t.findIndex(function (t) {
            return 0 !== t.rank;
          });
          if (e < 0) return "";

          for (var n = t.length, i = t[e], r = !0, a = e + 1; a < n; ++a) {
            var s = t[a];
            if (s.rank !== i.rank) break;

            if (s.path !== i.path) {
              r = !1;
              break;
            }
          }

          return r ? i.path : "";
        }, r._getLegacyData = function () {
          return this._legacyData || (this._legacyData = this._toLegacy()), this._legacyData;
        }, r._toLegacy = function () {
          var t = new tn(this._duration);
          return t.keys = [], t.curves = [], t.commonTargets = [], t;
        }, r._fromLegacy = function (t) {
          for (var e = t.toTracks(), n = e.length, i = 0; i < n; ++i) {
            this.addTrack(e[i]);
          }
        }, r._collectAnimatedJoints = function () {
          for (var t = new Set(), e = this._tracks, n = e.length, i = 0; i < n; ++i) {
            var r = e[i][ie].parseTrsPath();
            r && t.add(r.node);
          }

          if (this._exoticAnimation) for (var a = this._exoticAnimation.collectAnimatedJoints(), s = a.length, o = 0; o < s; ++o) {
            t.add(a[o]);
          }
          return Array.from(t);
        }, _(e, [{
          key: "duration",
          get: function get() {
            return this._duration;
          },
          set: function set(t) {
            this._duration = t;
          }
        }, {
          key: "tracksCount",
          get: function get() {
            return this._tracks.length;
          }
        }, {
          key: "tracks",
          get: function get() {
            return this._tracks;
          }
        }, {
          key: "hash",
          get: function get() {
            var t, e;
            if (this._hash) return this._hash;
            var n = "Exotic:" + (null !== (t = null === (e = this._exoticAnimation) || void 0 === e ? void 0 : e.toHashString()) && void 0 !== t ? t : "");
            return this._hash = B(n, 666);
          }
        }, {
          key: "events",
          get: function get() {
            return this._events;
          },
          set: function set(t) {
            var e = this;
            this._events = t;

            for (var n = [], i = [], r = this.events.sort(function (t, e) {
              return t.frame - e.frame;
            }), a = r.length, s = function s(t) {
              var a = r[t],
                  s = a.frame / e._duration,
                  o = n.findIndex(function (t) {
                return t === s;
              });
              o < 0 && (o = n.length, n.push(s), i.push({
                events: []
              })), i[o].events.push({
                functionName: a.func,
                parameters: a.params
              });
            }, o = 0; o < a; ++o) {
              s(o);
            }

            this._runtimeEvents = {
              ratios: n,
              eventGroups: i
            };
          }
        }, {
          key: di,
          get: function get() {
            return this._exoticAnimation;
          }
        }, {
          key: di,
          set: function set(t) {
            this._exoticAnimation = t;
          }
        }, {
          key: "keys",
          get: function get() {
            return this._getLegacyData().keys;
          }
        }, {
          key: "keys",
          set: function set(t) {
            this._legacyDataDirty = !0, this._getLegacyData().keys = t;
          }
        }, {
          key: "curves",
          get: function get() {
            return this._legacyDataDirty = !0, this._getLegacyData().curves;
          }
        }, {
          key: "curves",
          set: function set(t) {
            this._getLegacyData().curves = t;
          }
        }, {
          key: "commonTargets",
          get: function get() {
            return this._getLegacyData().commonTargets;
          }
        }, {
          key: "commonTargets",
          set: function set(t) {
            this._legacyDataDirty = !0, this._getLegacyData().commonTargets = t;
          }
        }, {
          key: "data",
          get: function get() {
            return this._getLegacyData().data;
          }
        }, {
          key: "eventGroups",
          get: function get() {
            return this._runtimeEvents.eventGroups;
          }
        }]), e;
      }(D), ui.WrapMode = U, $n = r((Zn = hi).prototype, "sample", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 60;
        }
      }), ti = r(Zn.prototype, "speed", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), ei = r(Zn.prototype, "wrapMode", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return U.Normal;
        }
      }), ni = r(Zn.prototype, "enableTrsBlending", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), ii = r(Zn.prototype, "_duration", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ri = r(Zn.prototype, "_hash", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ai = r(Zn.prototype, "_tracks", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), si = r(Zn.prototype, "_exoticAnimation", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), oi = r(Zn.prototype, "_events", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Jn = Zn)) || Jn);
      o.AnimationClip = mi;

      var gi = function () {
        function t(t, e, n) {
          this._exoticAnimationEvaluator = void 0, this._trackEvalStatues = [], this._rootMotionEvaluation = void 0, this._trackEvalStatues = t, this._exoticAnimationEvaluator = e, this._rootMotionEvaluation = n;
        }

        var e = t.prototype;
        return e.evaluate = function (t) {
          for (var e = this._trackEvalStatues, n = this._exoticAnimationEvaluator, i = e.length, r = 0; r < i; ++r) {
            var a = e[r],
                s = a.trackEval,
                o = a.binding,
                u = s.evaluate(t, o);
            o.setValue(u);
          }

          n && n.evaluate(t);
        }, e.evaluateRootMotion = function (t, e) {
          var n = this._rootMotionEvaluation;
          n && n.evaluate(t, e);
        }, t;
      }(),
          yi = function () {
        function t() {
          this.position = new c(), this.scale = new c(1, 1, 1), this.rotation = new u(), this.eulerAngles = new c();
        }

        return t.prototype.getTransform = function (t) {
          F.fromRTS(t, this.rotation, this.position, this.scale);
        }, t;
      }(),
          wi = function (t) {
        function e() {
          for (var e, n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
            i[r] = arguments[r];
          }

          return (e = t.call.apply(t, [this].concat(i)) || this).parent = null, e._dirty = !0, e._transform = new F(), e;
        }

        return g(e, t), e.prototype.invalidate = function () {
          this._dirty = !0;
        }, _(e, [{
          key: "globalTransform",
          get: function get() {
            var t = this._transform;
            return this._dirty && (this._dirty = !1, F.fromRTS(t, this.rotation, this.position, this.scale), this.parent && F.multiply(t, this.parent.globalTransform, t)), this._transform;
          }
        }]), e;
      }(yi),
          Ti = new F(),
          bi = function () {
        function t(t, e, n, i) {
          this._initialTransformCache = new F(), this._clipEndTransformCache = new F(), this._startTransformCache = new F(), this._endTransformCache = new F(), this._motionTransformCache = new F(), this._translationMotionCache = new c(), this._rotationMotionCache = new u(), this._scaleMotionCache = new c(), this._rootBone = t, this._duration = e, this._boneTransform = n, this._trackEvalStatuses = i;
        }

        var e = t.prototype;
        return e.evaluate = function (t, e) {
          var n = this._calcMotionTransform(t, e, this._motionTransformCache),
              i = this._translationMotionCache,
              r = this._rotationMotionCache,
              a = this._scaleMotionCache,
              s = this._rootBone;

          F.toRTS(n, r, i, a), c.add(i, i, s.position), s.setPosition(i), u.multiply(r, r, s.rotation), s.setRotation(r), c.multiply(a, a, s.scale), s.setScale(a);
        }, e._calcMotionTransform = function (t, e, n) {
          var i = this._duration,
              r = i - t,
              a = this._evaluateAt(t, this._startTransformCache);

          if (e < r) {
            var s = this._evaluateAt(t + e, this._endTransformCache);

            Ai(n, a, s);
          } else {
            F.identity(n);

            var o = function o(t, e) {
              Ai(Ti, t, e), F.multiply(n, n, Ti);
            },
                u = e - r,
                h = Math.floor(u / i),
                c = u - h * i,
                l = this._evaluateAt(0, this._initialTransformCache),
                f = this._evaluateAt(i, this._clipEndTransformCache),
                p = this._evaluateAt(c, this._endTransformCache);

            o(a, f), Ai(Ti, l, f);

            for (var _ = 0; _ < h; ++_) {
              F.multiply(n, n, Ti);
            }

            o(l, p);
          }

          return n;
        }, e._evaluateAt = function (t, e) {
          for (var n = this._trackEvalStatuses, i = n.length, r = 0; r < i; ++r) {
            var a = n[r],
                s = a.trackEval,
                o = a.binding,
                u = s.evaluate(t, o);
            o.setValue(u);
          }

          return this._boneTransform.getTransform(e), e;
        }, t;
      }();

      function Ai(t, e, n) {
        F.invert(t, e), F.multiply(t, n, t);
      }

      function Si(t, e) {
        switch (e) {
          default:
            return;

          case "position":
            return {
              setValue: function setValue(e) {
                c.copy(t.position, e);
              }
            };

          case "rotation":
            return {
              setValue: function setValue(e) {
                u.copy(t.rotation, e);
              }
            };

          case "scale":
            return {
              setValue: function setValue(e) {
                c.copy(t.scale, e);
              }
            };

          case "eulerAngles":
            return {
              setValue: function setValue(e) {
                c.copy(t.eulerAngles, e);
              }
            };
        }
      }

      var Ei = function () {
        function t(t, e, n, i) {
          this._lastFrameIndex = -1, this._lastIterations = 0, this._lastDirection = 0, this._ignoreIndex = -1, this._sampled = !1, this._targetNode = t, this._ratios = e, this._eventGroups = n, this._wrapMode = i;
        }

        var e = t.prototype;
        return e.setWrapMode = function (t) {
          this._wrapMode = t;
        }, e.ignore = function (t, e) {
          this._ignoreIndex = -1, this._sampled = !1;
          var n = ki(t, this._ratios);
          n < 0 && (n = ~n - 1, e < 0 && (n += 1), this._ignoreIndex = n);
        }, e.sample = function (t, e, n) {
          var i = this._eventGroups.length,
              r = ki(t, this._ratios);
          if (r < 0 && (r = ~r - 1, e < 0 && (r += 1)), this._ignoreIndex !== r && (this._ignoreIndex = -1), !this._sampled) return this._sampled = !0, this._doFire(r, !1), this._lastFrameIndex = r, this._lastIterations = n, void (this._lastDirection = e);
          var a = this._wrapMode,
              s = Ci(n),
              o = Ci(this._lastIterations),
              u = this._lastFrameIndex,
              h = this._lastDirection,
              c = -1 !== o && s !== o;
          if (u === r && c && 1 === i) this._doFire(0, !1);else if (u !== r || c) {
            e = h;

            do {
              if (u !== r) {
                if (-1 === e && 0 === u && r > 0 ? ((a & W.PingPong) === W.PingPong ? e *= -1 : u = i, o++) : 1 === e && u === i - 1 && r < i - 1 && ((a & W.PingPong) === W.PingPong ? e *= -1 : u = -1, o++), u === r) break;
                if (o > s) break;
              }

              u += e, this._doFire(u, !0);
            } while (u !== r && u > -1 && u < i);
          }
          this._lastFrameIndex = r, this._lastIterations = n, this._lastDirection = e;
        }, e._doFire = function (t, e) {
          e ? o.director.getAnimationManager().pushDelayEvent(this._checkAndFire, this, [t]) : this._checkAndFire(t);
        }, e._checkAndFire = function (t) {
          if (this._targetNode && this._targetNode.isValid) {
            var e = this._eventGroups;
            if (!(t < 0 || t >= e.length || this._ignoreIndex === t)) for (var n = e[t], i = this._targetNode.components, r = n.events.length, a = 0; a < r; ++a) {
              for (var s = n.events[a], o = s.functionName, u = i.length, h = 0; h < u; ++h) {
                var c = i[h],
                    l = c[o];
                "function" == typeof l && l.apply(c, s.parameters);
              }
            }
          }
        }, t;
      }();

      function Ci(t) {
        return t - (0 | t) == 0 && (t -= 1), 0 | t;
      }

      function ki(t, e) {
        return k(e, t);
      }

      var Ii,
          Pi = function () {
        function t() {
          this._isPlaying = !1, this._isPaused = !1, this._stepOnce = !1;
        }

        var e = t.prototype;
        return e.play = function () {
          this._isPlaying ? this._isPaused ? (this._isPaused = !1, this.onResume()) : this.onError(O(3912)) : (this._isPlaying = !0, this.onPlay());
        }, e.stop = function () {
          this._isPlaying && (this._isPlaying = !1, this.onStop(), this._isPaused = !1);
        }, e.pause = function () {
          this._isPlaying && !this._isPaused && (this._isPaused = !0, this.onPause());
        }, e.resume = function () {
          this._isPlaying && this._isPaused && (this._isPaused = !1, this.onResume());
        }, e.step = function () {
          this.pause(), this._stepOnce = !0, this._isPlaying || this.play();
        }, e.update = function () {}, e.onPlay = function () {}, e.onPause = function () {}, e.onResume = function () {}, e.onStop = function () {}, e.onError = function () {}, _(t, [{
          key: "isPlaying",
          get: function get() {
            return this._isPlaying;
          }
        }, {
          key: "isPaused",
          get: function get() {
            return this._isPaused;
          }
        }, {
          key: "isMotionless",
          get: function get() {
            return !this.isPlaying || this.isPaused;
          }
        }]), t;
      }(),
          xi = function () {
        function t(t) {
          this.weight = 0, this._pose = void 0, this._blendStateWriters = [], this._pose = t;
        }

        var e = t.prototype;
        return e.destroy = function () {
          for (var t = 0; t < this._blendStateWriters.length; ++t) {
            this._pose.destroyWriter(this._blendStateWriters[t]);
          }

          this._blendStateWriters.length = 0;
        }, e.createPoseWriter = function (t, e, n) {
          var i = this._pose.createWriter(t, e, this, n);

          return this._blendStateWriters.push(i), i;
        }, t;
      }();

      !function (t) {
        t.PLAY = "play", t.STOP = "stop", t.PAUSE = "pause", t.RESUME = "resume", t.LASTFRAME = "lastframe", t.FINISHED = "finished";
      }(Ii || (Ii = {})), Q(Ii);
      var Oi = t("j", function (t) {
        function e(e, n) {
          var i;
          return void 0 === n && (n = ""), (i = t.call(this) || this).duration = 1, i.speed = 1, i.time = 0, i.frameRate = 0, i._targetNode = null, i._curveLoaded = !1, i._clip = void 0, i._useSimpleProcess = !1, i._target = null, i._wrapMode = U.Normal, i._repeatCount = 1, i._delay = 0, i._delayTime = 0, i._currentFramePlayed = !1, i._name = void 0, i._lastIterations = NaN, i._lastWrapInfo = null, i._wrappedInfo = new H(), i._allowLastFrame = !1, i._blendStateWriterHost = {
            weight: 0
          }, i._playbackDuration = 0, i._invDuration = 1, i._poseOutput = null, i._weight = 0, i._clipEval = void 0, i._clipEventEval = void 0, i._doNotCreateEval = !1, i._clip = e, i._name = n || e && e.name, i._playbackRange = {
            min: 0,
            max: e.duration
          }, i._playbackDuration = e.duration, e.duration || j("Clip " + e.name + " has zero duration."), i;
        }

        g(e, t);
        var n = e.prototype;
        return n.initialize = function (t) {
          if (!this._curveLoaded) {
            this._curveLoaded = !0, this._poseOutput && (this._poseOutput.destroy(), this._poseOutput = null), this._clipEval && (this._clipEval = void 0), this._targetNode = t;
            var e = this._clip;

            if (this.duration = e.duration, this._invDuration = 1 / this.duration, this.speed = e.speed, this.wrapMode = e.wrapMode, this.frameRate = e.sample, this._playbackRange.min = 0, this._playbackRange.max = e.duration, this._playbackDuration = e.duration, (this.wrapMode & W.Loop) === W.Loop ? this.repeatCount = 1 / 0 : this.repeatCount = 1, !this._doNotCreateEval) {
              var n,
                  i,
                  r,
                  a = null !== (n = null === (i = o.director.getAnimationManager()) || void 0 === i ? void 0 : i.blendState) && void 0 !== n ? n : null;
              a && (this._poseOutput = new xi(a)), this._clipEval = e.createEvaluator({
                target: t,
                pose: null !== (r = this._poseOutput) && void 0 !== r ? r : void 0
              });
            }

            this._clipEventEval = e.createEventEvaluator(this._targetNode);
          }
        }, n.destroy = function () {
          this.isMotionless || o.director.getAnimationManager().removeAnimation(this), this._poseOutput && (this._poseOutput.destroy(), this._poseOutput = null), this._clipEval = void 0;
        }, n.emit = function () {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
            e[n] = arguments[n];
          }

          o.director.getAnimationManager().pushDelayEvent(this._emit, this, e);
        }, n.on = function (t, e, n) {
          return this._target && this._target.isValid ? this._target.on(t, e, n) : null;
        }, n.once = function (t, e, n) {
          return this._target && this._target.isValid ? this._target.once(t, e, n) : null;
        }, n.off = function (t, e, n) {
          this._target && this._target.isValid && this._target.off(t, e, n);
        }, n.allowLastFrameEvent = function (t) {
          this._allowLastFrame = t;
        }, n._setEventTarget = function (t) {
          this._target = t;
        }, n.setTime = function (t) {
          this._currentFramePlayed = !1, this.time = t || 0;
          var e,
              n = this.getWrappedInfo(t, this._wrappedInfo);
          null === (e = this._clipEventEval) || void 0 === e || e.ignore(n.ratio, n.direction);
        }, n.update = function (t) {
          this._delayTime > 0 && (this._delayTime -= t, this._delayTime > 0) || (this._currentFramePlayed ? this.time += t * this.speed : this._currentFramePlayed = !0, this._process());
        }, n.sample = function () {
          var t = this.getWrappedInfo(this.time, this._wrappedInfo);
          return this._sampleCurves(t.time), this._sampleEvents(t), t;
        }, n.onPlay = function () {
          this.setTime(this._getPlaybackStart()), this._delayTime = this._delay, this._onReplayOrResume(), this.emit(Ii.PLAY, this);
        }, n.onStop = function () {
          this.isPaused || this._onPauseOrStop(), this.emit(Ii.STOP, this);
        }, n.onResume = function () {
          this._onReplayOrResume(), this.emit(Ii.RESUME, this);
        }, n.onPause = function () {
          this._onPauseOrStop(), this.emit(Ii.PAUSE, this);
        }, n._sampleCurves = function (t) {
          var e = this._poseOutput,
              n = this._clipEval;
          e && (e.weight = this.weight), n && n.evaluate(t);
        }, n._process = function () {
          this._useSimpleProcess ? this.simpleProcess() : this.process();
        }, n.process = function () {
          var t,
              e = this.sample();
          this._allowLastFrame && (t = this._lastWrapInfo ? this._lastWrapInfo : this._lastWrapInfo = new H(e), this.repeatCount > 1 && (0 | e.iterations) > (0 | t.iterations) && this.emit(Ii.LASTFRAME, this), t.set(e)), e.stopped && (this.stop(), this.emit(Ii.FINISHED, this));
        }, n.simpleProcess = function () {
          var t = this._playbackRange.min,
              e = this._playbackDuration,
              n = this.time % e;
          n < 0 && (n += e);
          var i = (t + n) * this._invDuration;
          this._sampleCurves(t + n), this._sampleEvents(this.getWrappedInfo(this.time, this._wrappedInfo)), this._allowLastFrame && (Number.isNaN(this._lastIterations) && (this._lastIterations = i), (this.time > 0 && this._lastIterations > i || this.time < 0 && this._lastIterations < i) && this.emit(Ii.LASTFRAME, this), this._lastIterations = i);
        }, n._needReverse = function (t) {
          var e = this.wrapMode,
              n = !1;
          return (e & W.PingPong) === W.PingPong && (t - (0 | t) == 0 && t > 0 && (t -= 1), 1 & t && (n = !n)), (e & W.Reverse) === W.Reverse && (n = !n), n;
        }, n.getWrappedInfo = function (t, e) {
          e = e || new H();

          var n = this._getPlaybackStart(),
              i = this._getPlaybackEnd() - n,
              r = !1,
              a = this.repeatCount,
              s = (t -= n) > 0 ? t / i : -t / i;

          if (s >= a) {
            s = a, r = !0;
            var o = a - (0 | a);
            0 === o && (o = 1), t = o * i * (t > 0 ? 1 : -1);
          }

          if (t > i) {
            var u = t % i;
            t = 0 === u ? i : u;
          } else t < 0 && 0 != (t %= i) && (t += i);

          var h = !1,
              c = this._wrapMode & W.ShouldWrap;
          c && (h = this._needReverse(s));
          var l = h ? -1 : 1;
          return this.speed < 0 && (l *= -1), c && h && (t = i - t), e.time = n + t, e.ratio = e.time / this.duration, e.direction = l, e.stopped = r, e.iterations = s, e;
        }, n._getPlaybackStart = function () {
          return this._playbackRange.min;
        }, n._getPlaybackEnd = function () {
          return this._playbackRange.max;
        }, n._sampleEvents = function (t) {
          var e;
          null === (e = this._clipEventEval) || void 0 === e || e.sample(t.ratio, t.direction, t.iterations);
        }, n._emit = function (t, e) {
          this._target && this._target.isValid && this._target.emit(t, t, e);
        }, n._onReplayOrResume = function () {
          o.director.getAnimationManager().addAnimation(this);
        }, n._onPauseOrStop = function () {
          o.director.getAnimationManager().removeAnimation(this);
        }, _(e, [{
          key: "clip",
          get: function get() {
            return this._clip;
          }
        }, {
          key: "name",
          get: function get() {
            return this._name;
          }
        }, {
          key: "length",
          get: function get() {
            return this.duration;
          }
        }, {
          key: "wrapMode",
          get: function get() {
            return this._wrapMode;
          },
          set: function set(t) {
            var e;
            this._wrapMode = t, this.time = 0, t & W.Loop ? this.repeatCount = 1 / 0 : this.repeatCount = 1, null === (e = this._clipEventEval) || void 0 === e || e.setWrapMode(t);
          }
        }, {
          key: "repeatCount",
          get: function get() {
            return this._repeatCount;
          },
          set: function set(t) {
            this._repeatCount = t;
            var e = this._wrapMode & W.ShouldWrap,
                n = (this.wrapMode & W.Reverse) === W.Reverse;
            this._useSimpleProcess = t === 1 / 0 && !e && !n;
          }
        }, {
          key: "delay",
          get: function get() {
            return this._delay;
          },
          set: function set(t) {
            this._delayTime = this._delay = t;
          }
        }, {
          key: "playbackRange",
          get: function get() {
            return this._playbackRange;
          },
          set: function set(t) {
            p(t.max > t.min), this._playbackRange.min = Math.max(t.min, 0), this._playbackRange.max = Math.min(t.max, this.duration), this._playbackDuration = this._playbackRange.max - this._playbackRange.min, this.setTime(0);
          }
        }, {
          key: "current",
          get: function get() {
            return this.getWrappedInfo(this.time).time;
          }
        }, {
          key: "ratio",
          get: function get() {
            return this.current / this.duration;
          }
        }, {
          key: "weight",
          get: function get() {
            return this._weight;
          },
          set: function set(t) {
            this._weight = t, this._poseOutput && (this._poseOutput.weight = t);
          }
        }, {
          key: "curveLoaded",
          get: function get() {
            return this._curveLoaded;
          }
        }]), e;
      }(Pi));
      o.AnimationState = Oi;

      var Ni,
          Mi,
          Li,
          Ri,
          zi,
          Fi,
          Vi,
          Di,
          Ui,
          Bi,
          Wi,
          Qi,
          Hi,
          ji,
          qi,
          Ki,
          Gi,
          Yi = function (t) {
        function e(e) {
          var n;
          return (n = t.call(this) || this)._managedStates = [], n._fadings = [], n._scheduled = !1, n._scheduler = null != e ? e : o.director.getAnimationManager(), n;
        }

        g(e, t);
        var n = e.prototype;
        return n.update = function (t) {
          if (!this.isMotionless) {
            var e = this._managedStates,
                n = this._fadings;

            if (1 === e.length && 1 === n.length) {
              var i = e[0].state;
              i && (i.weight = 1);
            } else this._calculateWeights(t);

            1 === e.length && 1 === n.length && this._unscheduleThis();
          }
        }, n.crossFade = function (t, e) {
          var n;
          0 === this._managedStates.length && (e = 0), 0 === e && this.clear();

          var i = this._managedStates.find(function (e) {
            return e.state === t;
          });

          i ? (null === (n = i.state) || void 0 === n ? void 0 : n.isMotionless) && i.state.play() : (i = {
            state: t,
            reference: 0
          }, t && t.play(), this._managedStates.push(i)), ++i.reference, this._fadings.unshift({
            easeDuration: e,
            easeTime: 0,
            target: i
          }), this.isMotionless || this._scheduleThis();
        }, n.clear = function () {
          for (var t = 0; t < this._managedStates.length; ++t) {
            var e = this._managedStates[t].state;
            e && e.stop();
          }

          this._managedStates.length = 0, this._fadings.length = 0;
        }, n.onPlay = function () {
          t.prototype.onPlay.call(this), this._scheduleThis();
        }, n.onPause = function () {
          t.prototype.onPause.call(this);

          for (var e = 0; e < this._managedStates.length; ++e) {
            var n = this._managedStates[e].state;
            n && n.pause();
          }

          this._unscheduleThis();
        }, n.onResume = function () {
          t.prototype.onResume.call(this);

          for (var e = 0; e < this._managedStates.length; ++e) {
            var n = this._managedStates[e].state;
            n && n.resume();
          }

          this._scheduleThis();
        }, n.onStop = function () {
          t.prototype.onStop.call(this), this.clear();
        }, n._calculateWeights = function (t) {
          for (var e = this._managedStates, n = this._fadings, i = 0; i < e.length; ++i) {
            var r = e[i].state;
            r && (r.weight = 0);
          }

          for (var a = 1, s = n.length, o = 0; o < n.length; ++o) {
            var u = n[o];
            u.easeTime += t;
            var h = 0 === u.easeDuration ? 1 : q(u.easeTime / u.easeDuration),
                c = h * a;

            if (a *= 1 - h, u.target.state && (u.target.state.weight += c), u.easeTime >= u.easeDuration) {
              s = o + 1, u.easeTime = u.easeDuration;
              break;
            }
          }

          if (s !== n.length) {
            for (var l = s; l < n.length; ++l) {
              var f = n[l];
              --f.target.reference, f.target.reference <= 0 && (f.target.state && f.target.state.stop(), K(this._managedStates, f.target));
            }

            n.splice(s);
          }
        }, n._scheduleThis = function () {
          this._scheduled || (this._scheduler.addCrossFade(this), this._scheduled = !0);
        }, n._unscheduleThis = function () {
          this._scheduled && (this._scheduler.removeCrossFade(this), this._scheduled = !1);
        }, e;
      }(Pi);

      function Xi(t, e) {
        return t === e || !!t && !!e && t._uuid === e._uuid && t._uuid;
      }

      t("k", (Ni = e("cc.Animation"), Mi = $(), Li = tt(99), Ri = et(), zi = G([mi]), Fi = nt(), Vi = G(mi), Di = nt(), Ui = nt(), Bi = G([mi]), Ni(Wi = Mi(Wi = Li(Wi = Y(Wi = Ri((Gi = Ki = function (t) {
        function e() {
          for (var e, n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
            i[r] = arguments[r];
          }

          return e = t.call.apply(t, [this].concat(i)) || this, a(e, "playOnLoad", Hi, y(e)), e._crossFade = new Yi(), e._nameToState = X(!0), a(e, "_clips", ji, y(e)), a(e, "_defaultClip", qi, y(e)), e._hasBeenPlayed = !1, e;
        }

        g(e, t);
        var n = e.prototype;
        return n.onLoad = function () {
          for (var t in this.clips = this._clips, this._nameToState) {
            this._nameToState[t].initialize(this.node);
          }
        }, n.start = function () {
          this.playOnLoad && !this._hasBeenPlayed && this._defaultClip && this.crossFade(this._defaultClip.name, 0);
        }, n.onEnable = function () {
          this._crossFade.resume();
        }, n.onDisable = function () {
          this._crossFade.pause();
        }, n.onDestroy = function () {
          for (var t in this._crossFade.stop(), this._nameToState) {
            this._nameToState[t].destroy();
          }

          this._nameToState = X(!0);
        }, n.play = function (t) {
          if (this._hasBeenPlayed = !0, !t) {
            if (!this._defaultClip) return;
            t = this._defaultClip.name;
          }

          this.crossFade(t, 0);
        }, n.crossFade = function (t, e) {
          void 0 === e && (e = .3), this._hasBeenPlayed = !0;
          var n = this._nameToState[t];
          n && (this._crossFade.play(), this._crossFade.crossFade(n, e));
        }, n.pause = function () {
          this._crossFade.pause();
        }, n.resume = function () {
          this._crossFade.resume();
        }, n.stop = function () {
          this._crossFade.stop();
        }, n.getAnimationState = function (t) {
          return this.getState(t);
        }, n.getState = function (t) {
          var e = this._nameToState[t];
          return e && !e.curveLoaded && e.initialize(this.node), e || null;
        }, n.createState = function (t, e) {
          return e = e || t.name, this.removeState(e), this._doCreateState(t, e);
        }, n.removeState = function (t) {
          var e = this._nameToState[t];
          e && (e.allowLastFrameEvent(!1), e.stop(), delete this._nameToState[t]);
        }, n.addClip = function (t, e) {
          return J(this._clips, t) || this._clips.push(t), this.createState(t, e);
        }, n.removeClip = function (t, e) {
          var n;

          for (var r in this._nameToState) {
            var a = this._nameToState[r];

            if (a.clip === t) {
              n = a;
              break;
            }
          }

          if (t === this._defaultClip) {
            if (!e) return void i(3902);
            this._defaultClip = null;
          }

          if (n && n.isPlaying) {
            if (!e) return void i(3903);
            n.stop();
          }

          this._clips = this._clips.filter(function (e) {
            return e !== t;
          }), n && delete this._nameToState[n.name];
        }, n.on = function (e, n, i, r) {
          var a = t.prototype.on.call(this, e, n, i, r);
          return e === Ii.LASTFRAME && this._syncAllowLastFrameEvent(), a;
        }, n.once = function (e, n, i) {
          var r = t.prototype.once.call(this, e, n, i);
          return e === Ii.LASTFRAME && this._syncAllowLastFrameEvent(), r;
        }, n.off = function (e, n, i) {
          t.prototype.off.call(this, e, n, i), e === Ii.LASTFRAME && this._syncDisallowLastFrameEvent();
        }, n._createState = function (t, e) {
          return new Oi(t, e);
        }, n._doCreateState = function (t, e) {
          var n = this._createState(t, e);

          return n._setEventTarget(this), n.allowLastFrameEvent(this.hasEventListener(Ii.LASTFRAME)), this.node && n.initialize(this.node), this._nameToState[n.name] = n, n;
        }, n._getStateByNameOrDefaultClip = function (t) {
          if (!t) {
            if (!this._defaultClip) return null;
            t = this._defaultClip.name;
          }

          return this._nameToState[t] || null;
        }, n._removeStateOfAutomaticClip = function (t) {
          for (var e in this._nameToState) {
            var n = this._nameToState[e];
            Xi(t, n.clip) && (n.stop(), delete this._nameToState[e]);
          }
        }, n._syncAllowLastFrameEvent = function () {
          if (this.hasEventListener(Ii.LASTFRAME)) for (var t in this._nameToState) {
            this._nameToState[t].allowLastFrameEvent(!0);
          }
        }, n._syncDisallowLastFrameEvent = function () {
          if (!this.hasEventListener(Ii.LASTFRAME)) for (var t in this._nameToState) {
            this._nameToState[t].allowLastFrameEvent(!1);
          }
        }, _(e, [{
          key: "clips",
          get: function get() {
            return this._clips;
          },
          set: function set(t) {
            var e = this;
            this._crossFade && this._crossFade.clear();

            for (var n, i = m(this._clips); !(n = i()).done;) {
              var r = n.value;
              r && this._removeStateOfAutomaticClip(r);
            }

            for (var a, s = m(t); !(a = s()).done;) {
              var o = a.value;
              o && this.createState(o);
            }

            var u = t.find(function (t) {
              return Xi(t, e._defaultClip);
            });
            this._defaultClip = u || null, this._clips = t;
          }
        }, {
          key: "defaultClip",
          get: function get() {
            return this._defaultClip;
          },
          set: function set(t) {
            this._defaultClip = t, t && (this._clips.findIndex(function (e) {
              return Xi(e, t);
            }) >= 0 || (this._clips.push(t), this.createState(t)));
          }
        }]), e;
      }(Z(it)), Ki.EventType = Ii, r((Qi = Gi).prototype, "clips", [zi, Fi], Object.getOwnPropertyDescriptor(Qi.prototype, "clips"), Qi.prototype), r(Qi.prototype, "defaultClip", [Vi, Di], Object.getOwnPropertyDescriptor(Qi.prototype, "defaultClip"), Qi.prototype), Hi = r(Qi.prototype, "playOnLoad", [s, Ui], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), ji = r(Qi.prototype, "_clips", [Bi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), qi = r(Qi.prototype, "_defaultClip", [s], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Wi = Qi)) || Wi) || Wi) || Wi) || Wi) || Wi));
      var Ji = [],
          Zi = new Map(),
          $i = new F();
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/tween.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js"], function (t) {
  "use strict";

  var n, e, i, r, s, o, a, c, u, h, l, _, p, f, g, v;

  return {
    setters: [function (t) {
      n = t.c, e = t.ec, i = t.f, r = t.l, s = t.c_, o = t.e2, a = t.dC, c = t.ed, u = t.dR, h = t.d, l = t.w, _ = t.c1;
    }, function (t) {
      p = t.d, f = t.D, g = t.h;
    }, function () {}, function () {}, function () {}, function (t) {
      v = t.R;
    }, function () {}],
    execute: function execute() {
      t({
        tween: q,
        tweenUtil: B
      });

      var d = function () {
        function t() {
          this.originalTarget = null, this.target = null, this.tag = t.TAG_INVALID;
        }

        var e = t.prototype;
        return e.clone = function () {
          var n = new t();
          return n.originalTarget = null, n.target = null, n.tag = this.tag, n;
        }, e.isDone = function () {
          return !0;
        }, e.startWithTarget = function (t) {
          this.originalTarget = t, this.target = t;
        }, e.stop = function () {
          this.target = null;
        }, e.step = function () {
          n(1006);
        }, e.update = function () {
          n(1007);
        }, e.getTarget = function () {
          return this.target;
        }, e.setTarget = function (t) {
          this.target = t;
        }, e.getOriginalTarget = function () {
          return this.originalTarget;
        }, e.setOriginalTarget = function (t) {
          this.originalTarget = t;
        }, e.getTag = function () {
          return this.tag;
        }, e.setTag = function (t) {
          this.tag = t;
        }, e.reverse = function () {
          return n(1008), null;
        }, e.retain = function () {}, e.release = function () {}, t;
      }();

      d.TAG_INVALID = -1;

      var A = function (t) {
        function n() {
          for (var n, e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
            i[r] = arguments[r];
          }

          return (n = t.call.apply(t, [this].concat(i)) || this)._duration = 0, n._timesForRepeat = 1, n;
        }

        e(n, t);
        var i = n.prototype;
        return i.getDuration = function () {
          return this._duration * (this._timesForRepeat || 1);
        }, i.setDuration = function (t) {
          this._duration = t;
        }, i.clone = function () {
          return new n();
        }, n;
      }(d),
          T = (function (t) {
        function n(n, e) {
          var i;
          return void 0 === e && (e = 1), (i = t.call(this) || this)._speed = 0, i._innerAction = null, n && i.initWithAction(n, e), i;
        }

        e(n, t);
        var r = n.prototype;
        r.getSpeed = function () {
          return this._speed;
        }, r.setSpeed = function (t) {
          this._speed = t;
        }, r.initWithAction = function (t, n) {
          return t ? (this._innerAction = t, this._speed = n, !0) : (i(1021), !1);
        }, r.clone = function () {
          var t = new n();
          return t.initWithAction(this._innerAction.clone(), this._speed), t;
        }, r.startWithTarget = function (t) {
          d.prototype.startWithTarget.call(this, t), this._innerAction.startWithTarget(t);
        }, r.stop = function () {
          this._innerAction.stop(), d.prototype.stop.call(this);
        }, r.step = function (t) {
          this._innerAction.step(t * this._speed);
        }, r.isDone = function () {
          return this._innerAction.isDone();
        }, r.reverse = function () {
          return new n(this._innerAction.reverse(), this._speed);
        }, r.setInnerAction = function (t) {
          this._innerAction !== t && (this._innerAction = t);
        }, r.getInnerAction = function () {
          return this._innerAction;
        };
      }(d), 0),
          w = function w() {
        this.actions = [], this.target = null, this.actionIndex = 0, this.currentAction = null, this.paused = !1, this.lock = !1;
      },
          y = function () {
        function t() {
          this._hashTargets = new Map(), this._arrayTargets = [], this._elementPool = [];
        }

        var e = t.prototype;
        return e._searchElementByTarget = function (t, n) {
          for (var e = 0; e < t.length; e++) {
            if (n === t[e].target) return t[e];
          }

          return null;
        }, e._getElement = function (t, n) {
          var e = this._elementPool.pop();

          return e || (e = new w()), e.target = t, e.paused = !!n, e;
        }, e._putElement = function (t) {
          t.actions.length = 0, t.actionIndex = 0, t.currentAction = null, t.paused = !1, t.target = null, t.lock = !1, this._elementPool.push(t);
        }, e.addAction = function (t, n, e) {
          if (t && n) {
            null == n.uuid && (n.uuid = "_TWEEN_UUID_" + T++);

            var r = this._hashTargets.get(n);

            r ? r.actions || (r.actions = []) : (r = this._getElement(n, e), this._hashTargets.set(n, r), this._arrayTargets.push(r)), r.target = n, r.actions.push(t), t.startWithTarget(n);
          } else i(1e3);
        }, e.removeAllActions = function () {
          for (var t = this._arrayTargets, n = 0; n < t.length; n++) {
            var e = t[n];
            e && this._putElement(e);
          }

          this._arrayTargets.length = 0, this._hashTargets = new Map();
        }, e.removeAllActionsFromTarget = function (t) {
          if (null != t) {
            var n = this._hashTargets.get(t);

            n && (n.actions.length = 0, this._deleteHashElement(n));
          }
        }, e.removeAction = function (t) {
          if (null != t) {
            var n = t.getOriginalTarget(),
                e = this._hashTargets.get(n);

            if (e) for (var i = 0; i < e.actions.length; i++) {
              if (e.actions[i] === t) {
                e.actions.splice(i, 1), e.actionIndex >= i && e.actionIndex--;
                break;
              }
            }
          }
        }, e._removeActionByTag = function (t, n, e) {
          for (var i = 0, r = n.actions.length; i < r; ++i) {
            var s = n.actions[i];

            if (s && s.getTag() === t) {
              if (e && s.getOriginalTarget() !== e) continue;

              this._removeActionAtIndex(i, n);

              break;
            }
          }
        }, e.removeActionByTag = function (t, e) {
          var i = this;
          t === d.TAG_INVALID && n(1002);
          var r = this._hashTargets;

          if (e) {
            var s = r.get(e);
            s && this._removeActionByTag(t, s, e);
          } else r.forEach(function (n) {
            i._removeActionByTag(t, n);
          });
        }, e.getActionByTag = function (t, e) {
          t === d.TAG_INVALID && n(1004);

          var i = this._hashTargets.get(e);

          if (i) {
            if (null != i.actions) for (var r = 0; r < i.actions.length; ++r) {
              var s = i.actions[r];
              if (s && s.getTag() === t) return s;
            }
            n(1005, t);
          }

          return null;
        }, e.getNumberOfRunningActionsInTarget = function (t) {
          var n = this._hashTargets.get(t);

          return n && n.actions ? n.actions.length : 0;
        }, e.pauseTarget = function (t) {
          var n = this._hashTargets.get(t);

          n && (n.paused = !0);
        }, e.resumeTarget = function (t) {
          var n = this._hashTargets.get(t);

          n && (n.paused = !1);
        }, e.pauseAllRunningActions = function () {
          for (var t = [], n = this._arrayTargets, e = 0; e < n.length; e++) {
            var i = n[e];
            i && !i.paused && (i.paused = !0, t.push(i.target));
          }

          return t;
        }, e.resumeTargets = function (t) {
          if (t) for (var n = 0; n < t.length; n++) {
            t[n] && this.resumeTarget(t[n]);
          }
        }, e.pauseTargets = function (t) {
          if (t) for (var n = 0; n < t.length; n++) {
            t[n] && this.pauseTarget(t[n]);
          }
        }, e.purgeSharedManager = function () {
          r.director.getScheduler().unscheduleUpdate(this);
        }, e._removeActionAtIndex = function (t, n) {
          n.actions[t], n.actions.splice(t, 1), n.actionIndex >= t && n.actionIndex--, 0 === n.actions.length && this._deleteHashElement(n);
        }, e._deleteHashElement = function (t) {
          var n = !1;

          if (t && !t.lock && this._hashTargets.get(t.target)) {
            this._hashTargets.delete(t.target);

            for (var e = this._arrayTargets, i = 0, r = e.length; i < r; i++) {
              if (e[i] === t) {
                e.splice(i, 1);
                break;
              }
            }

            this._putElement(t), n = !0;
          }

          return n;
        }, e.update = function (t) {
          for (var n, e = this._arrayTargets, i = 0; i < e.length; i++) {
            this._currentTarget = e[i];
            var r = (n = this._currentTarget).target;
            if (r instanceof s && !r.isValid) this.removeAllActionsFromTarget(r), i--;else {
              if (!n.paused && n.actions) {
                for (n.lock = !0, n.actionIndex = 0; n.actionIndex < n.actions.length; n.actionIndex++) {
                  if (n.currentAction = n.actions[n.actionIndex], n.currentAction) {
                    if (n.currentAction.step(t * (n.currentAction._speedMethod ? n.currentAction._speed : 1)), n.currentAction && n.currentAction.isDone()) {
                      n.currentAction.stop();
                      var o = n.currentAction;
                      n.currentAction = null, this.removeAction(o);
                    }

                    n.currentAction = null;
                  }
                }

                n.lock = !1;
              }

              0 === n.actions.length && this._deleteHashElement(n) && i--;
            }
          }
        }, t;
      }(),
          m = t("TweenSystem", function (t) {
        function n() {
          for (var n, e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
            i[r] = arguments[r];
          }

          return (n = t.call.apply(t, [this].concat(i)) || this).actionMgr = new y(), n;
        }

        return e(n, t), n.prototype.update = function (t) {
          this.actionMgr.update(t);
        }, o(n, [{
          key: "ActionManager",
          get: function get() {
            return this.actionMgr;
          }
        }]), n;
      }(g));

      m.ID = "TWEEN", m.instance = void 0, p.on(f.EVENT_INIT, function () {
        var t = new m();
        m.instance = t, p.registerSystem(m.ID, t, g.Priority.MEDIUM);
      });

      var W = function (t) {
        function n() {
          return t.apply(this, arguments) || this;
        }

        e(n, t);
        var i = n.prototype;
        return i.isDone = function () {
          return !0;
        }, i.step = function () {
          this.update(1);
        }, i.update = function () {}, i.reverse = function () {
          return this.clone();
        }, i.clone = function () {
          return new n();
        }, n;
      }(A),
          D = function (t) {
        function n() {
          return t.apply(this, arguments) || this;
        }

        e(n, t);
        var i = n.prototype;
        return i.update = function () {
          for (var t = this.target.getComponentsInChildren(v), n = 0; n < t.length; ++n) {
            t[n].enabled = !0;
          }
        }, i.reverse = function () {
          return new I();
        }, i.clone = function () {
          return new n();
        }, n;
      }(W),
          I = function (t) {
        function n() {
          return t.apply(this, arguments) || this;
        }

        e(n, t);
        var i = n.prototype;
        return i.update = function () {
          for (var t = this.target.getComponentsInChildren(v), n = 0; n < t.length; ++n) {
            t[n].enabled = !1;
          }
        }, i.reverse = function () {
          return new D();
        }, i.clone = function () {
          return new n();
        }, n;
      }(W);

      !function (t) {
        function n() {
          return t.apply(this, arguments) || this;
        }

        e(n, t);
        var i = n.prototype;
        i.update = function () {
          for (var t = this.target.getComponentsInChildren(v), n = 0; n < t.length; ++n) {
            var e = t[n];
            e.enabled = !e.enabled;
          }
        }, i.reverse = function () {
          return new n();
        }, i.clone = function () {
          return new n();
        };
      }(W);

      var E = function (t) {
        function n(n) {
          var e;
          return (e = t.call(this) || this)._isNeedCleanUp = !0, void 0 !== n && e.init(n), e;
        }

        e(n, t);
        var i = n.prototype;
        return i.update = function () {
          this.target.removeFromParent(), this._isNeedCleanUp && this.target.destroy();
        }, i.init = function (t) {
          return this._isNeedCleanUp = t, !0;
        }, i.reverse = function () {
          return new n(this._isNeedCleanUp);
        }, i.clone = function () {
          return new n(this._isNeedCleanUp);
        }, n;
      }(W),
          M = function (t) {
        function n(n, e, i) {
          var r;
          return (r = t.call(this) || this)._selectorTarget = null, r._function = null, r._data = null, r.initWithFunction(n, e, i), r;
        }

        e(n, t);
        var i = n.prototype;
        return i.initWithFunction = function (t, n, e) {
          return t && (this._function = t), n && (this._selectorTarget = n), void 0 !== e && (this._data = e), !0;
        }, i.execute = function () {
          this._function && this._function.call(this._selectorTarget, this.target, this._data);
        }, i.update = function () {
          this.execute();
        }, i.getTargetCallback = function () {
          return this._selectorTarget;
        }, i.setTargetCallback = function (t) {
          t !== this._selectorTarget && (this._selectorTarget && (this._selectorTarget = null), this._selectorTarget = t);
        }, i.clone = function () {
          var t = new n();
          return t.initWithFunction(this._function, this._selectorTarget, this._data), t;
        }, n;
      }(W),
          b = function (t) {
        function i(n) {
          var e;
          return (e = t.call(this) || this).MAX_VALUE = 2, e._elapsed = 0, e._firstTick = !1, e._easeList = [], e._speed = 1, e._repeatForever = !1, e._repeatMethod = !1, e._speedMethod = !1, void 0 === n || isNaN(n) || e.initWithDuration(n), e;
        }

        e(i, t);
        var r = i.prototype;
        return r.getElapsed = function () {
          return this._elapsed;
        }, r.initWithDuration = function (t) {
          return this._duration = 0 === t ? a.FLT_EPSILON : t, this._elapsed = 0, this._firstTick = !0, !0;
        }, r.isDone = function () {
          return this._elapsed >= this._duration;
        }, r._cloneDecoration = function (t) {
          t._repeatForever = this._repeatForever, t._speed = this._speed, t._timesForRepeat = this._timesForRepeat, t._easeList = this._easeList, t._speedMethod = this._speedMethod, t._repeatMethod = this._repeatMethod;
        }, r._reverseEaseList = function (t) {
          if (this._easeList) {
            t._easeList = [];

            for (var n = 0; n < this._easeList.length; n++) {
              t._easeList.push(this._easeList[n]);
            }
          }
        }, r.clone = function () {
          var t = new i(this._duration);
          return this._cloneDecoration(t), t;
        }, r.easing = function (t) {
          this._easeList ? this._easeList.length = 0 : this._easeList = [];

          for (var n = 0; n < arguments.length; n++) {
            this._easeList.push(arguments[n]);
          }

          return this;
        }, r._computeEaseTime = function (t) {
          return t;
        }, r.step = function (t) {
          this._firstTick ? (this._firstTick = !1, this._elapsed = 0) : this._elapsed += t;
          var n = this._elapsed / (this._duration > 1.192092896e-7 ? this._duration : 1.192092896e-7);
          n = n < 1 ? n : 1, this.update(n > 0 ? n : 0), this._repeatMethod && this._timesForRepeat > 1 && this.isDone() && (this._repeatForever || this._timesForRepeat--, this.startWithTarget(this.target), this.step(this._elapsed - this._duration));
        }, r.startWithTarget = function (t) {
          d.prototype.startWithTarget.call(this, t), this._elapsed = 0, this._firstTick = !0;
        }, r.reverse = function () {
          return n(1010), this;
        }, r.setAmplitudeRate = function () {
          n(1011);
        }, r.getAmplitudeRate = function () {
          return n(1012), 0;
        }, r.speed = function (t) {
          return t <= 0 ? (n(1013), this) : (this._speedMethod = !0, this._speed *= t, this);
        }, r.getSpeed = function () {
          return this._speed;
        }, r.setSpeed = function (t) {
          return this._speed = t, this;
        }, r.repeat = function (t) {
          return t = Math.round(t), isNaN(t) || t < 1 ? (n(1014), this) : (this._repeatMethod = !0, this._timesForRepeat *= t, this);
        }, r.repeatForever = function () {
          return this._repeatMethod = !0, this._timesForRepeat = this.MAX_VALUE, this._repeatForever = !0, this;
        }, i;
      }(A),
          F = function (t) {
        function r(e) {
          var s;
          (s = t.call(this) || this)._actions = [], s._split = 0, s._last = 0, s._reversed = !1;
          var o = e instanceof Array ? e : arguments;
          if (1 === o.length) return i(1019), c(s);
          var a = o.length - 1;

          if (a >= 0 && null == o[a] && n(1015), a >= 0) {
            for (var u, h = o[0], l = 1; l < a; l++) {
              o[l] && (u = h, h = r._actionOneTwo(u, o[l]));
            }

            s.initWithTwoActions(h, o[a]);
          }

          return s;
        }

        e(r, t);
        var s = r.prototype;
        return s.initWithTwoActions = function (t, n) {
          if (!t || !n) return i(1025), !1;
          var e = t._duration,
              r = n._duration,
              s = (e *= t._repeatMethod ? t._timesForRepeat : 1) + (r *= n._repeatMethod ? n._timesForRepeat : 1);
          return this.initWithDuration(s), this._actions[0] = t, this._actions[1] = n, !0;
        }, s.clone = function () {
          var t = new r();
          return this._cloneDecoration(t), t.initWithTwoActions(this._actions[0].clone(), this._actions[1].clone()), t;
        }, s.startWithTarget = function (t) {
          b.prototype.startWithTarget.call(this, t), this._split = this._actions[0]._duration / this._duration, this._split *= this._actions[0]._repeatMethod ? this._actions[0]._timesForRepeat : 1, this._last = -1;
        }, s.stop = function () {
          -1 !== this._last && this._actions[this._last].stop(), d.prototype.stop.call(this);
        }, s.update = function (t) {
          var n,
              e,
              i = 0,
              r = this._split,
              s = this._actions,
              o = this._last;
          (t = this._computeEaseTime(t)) < r ? (n = 0 !== r ? t / r : 1, 0 === i && 1 === o && this._reversed && (s[1].update(0), s[1].stop())) : (i = 1, n = 1 === r ? 1 : (t - r) / (1 - r), -1 === o && (s[0].startWithTarget(this.target), s[0].update(1), s[0].stop()), 0 === o && (s[0].update(1), s[0].stop())), e = s[i], o === i && e.isDone() || (o !== i && e.startWithTarget(this.target), n *= e._timesForRepeat, e.update(n > 1 ? n % 1 : n), this._last = i);
        }, s.reverse = function () {
          var t = r._actionOneTwo(this._actions[1].reverse(), this._actions[0].reverse());

          return this._cloneDecoration(t), this._reverseEaseList(t), t._reversed = !0, t;
        }, r;
      }(b);

      function L(t) {
        var e = t instanceof Array ? t : arguments;
        if (1 === e.length) return i(1019), null;
        var r = e.length - 1;
        r >= 0 && null == e[r] && n(1015);
        var s = null;

        if (r >= 0) {
          s = e[0];

          for (var o = 1; o <= r; o++) {
            e[o] && (s = F._actionOneTwo(s, e[o]));
          }
        }

        return s;
      }

      F._actionOneTwo = function (t, n) {
        var e = new F();
        return e.initWithTwoActions(t, n), e;
      };

      var x = function (t) {
        function n(n, e) {
          var i;
          return (i = t.call(this) || this)._times = 0, i._total = 0, i._nextDt = 0, i._actionInstant = !1, i._innerAction = null, void 0 !== e && i.initWithAction(n, e), i;
        }

        e(n, t);
        var i = n.prototype;
        return i.initWithAction = function (t, n) {
          var e = t._duration * n;
          return !!this.initWithDuration(e) && (this._times = n, this._innerAction = t, t instanceof W && (this._actionInstant = !0, this._times -= 1), this._total = 0, !0);
        }, i.clone = function () {
          var t = new n();
          return this._cloneDecoration(t), t.initWithAction(this._innerAction.clone(), this._times), t;
        }, i.startWithTarget = function (t) {
          this._total = 0, this._nextDt = this._innerAction._duration / this._duration, b.prototype.startWithTarget.call(this, t), this._innerAction.startWithTarget(t);
        }, i.stop = function () {
          this._innerAction.stop(), d.prototype.stop.call(this);
        }, i.update = function (t) {
          t = this._computeEaseTime(t);
          var n = this._innerAction,
              e = this._duration,
              i = this._times,
              r = this._nextDt;

          if (t >= r) {
            for (; t > r && this._total < i;) {
              n.update(1), this._total++, n.stop(), n.startWithTarget(this.target), r += n._duration / e, this._nextDt = r > 1 ? 1 : r;
            }

            t >= 1 && this._total < i && (n.update(1), this._total++), this._actionInstant || (this._total === i ? n.stop() : n.update(t - (r - n._duration / e)));
          } else n.update(t * i % 1);
        }, i.isDone = function () {
          return this._total === this._times;
        }, i.reverse = function () {
          var t = new n(this._innerAction.reverse(), this._times);
          return this._cloneDecoration(t), this._reverseEaseList(t), t;
        }, i.setInnerAction = function (t) {
          this._innerAction !== t && (this._innerAction = t);
        }, i.getInnerAction = function () {
          return this._innerAction;
        }, n;
      }(b),
          k = function (t) {
        function n(n) {
          var e;
          return (e = t.call(this) || this)._innerAction = null, n && e.initWithAction(n), e;
        }

        e(n, t);
        var r = n.prototype;
        return r.initWithAction = function (t) {
          return t ? (this._innerAction = t, !0) : (i(1026), !1);
        }, r.clone = function () {
          var t = new n();
          return this._cloneDecoration(t), t.initWithAction(this._innerAction.clone()), t;
        }, r.startWithTarget = function (t) {
          b.prototype.startWithTarget.call(this, t), this._innerAction.startWithTarget(t);
        }, r.step = function (t) {
          var n = this._innerAction;
          n.step(t), n.isDone() && (n.startWithTarget(this.target), n.step(n.getElapsed() - n._duration));
        }, r.isDone = function () {
          return !1;
        }, r.reverse = function () {
          var t = new n(this._innerAction.reverse());
          return this._cloneDecoration(t), this._reverseEaseList(t), t;
        }, r.setInnerAction = function (t) {
          this._innerAction !== t && (this._innerAction = t);
        }, r.getInnerAction = function () {
          return this._innerAction;
        }, n;
      }(b),
          N = function (t) {
        function r(e) {
          var s;
          (s = t.call(this) || this)._one = null, s._two = null;
          var o = e instanceof Array ? e : arguments;
          if (1 === o.length) return i(1020), c(s);
          var a = o.length - 1;

          if (a >= 0 && null == o[a] && n(1015), a >= 0) {
            for (var u, h = o[0], l = 1; l < a; l++) {
              o[l] && (u = h, h = r._actionOneTwo(u, o[l]));
            }

            s.initWithTwoActions(h, o[a]);
          }

          return s;
        }

        e(r, t);
        var s = r.prototype;
        return s.initWithTwoActions = function (t, n) {
          if (!t || !n) return i(1027), !1;
          var e = !1,
              r = t._duration,
              s = n._duration;
          return this.initWithDuration(Math.max(r, s)) && (this._one = t, this._two = n, r > s ? this._two = F._actionOneTwo(n, C(r - s)) : r < s && (this._one = F._actionOneTwo(t, C(s - r))), e = !0), e;
        }, s.clone = function () {
          var t = new r();
          return this._cloneDecoration(t), t.initWithTwoActions(this._one.clone(), this._two.clone()), t;
        }, s.startWithTarget = function (t) {
          b.prototype.startWithTarget.call(this, t), this._one.startWithTarget(t), this._two.startWithTarget(t);
        }, s.stop = function () {
          this._one.stop(), this._two.stop(), d.prototype.stop.call(this);
        }, s.update = function (t) {
          t = this._computeEaseTime(t), this._one && this._one.update(t), this._two && this._two.update(t);
        }, s.reverse = function () {
          var t = r._actionOneTwo(this._one.reverse(), this._two.reverse());

          return this._cloneDecoration(t), this._reverseEaseList(t), t;
        }, r;
      }(b);

      function O(t) {
        var e = t instanceof Array ? t : arguments;
        if (1 === e.length) return i(1020), null;
        e.length > 0 && null == e[e.length - 1] && n(1015);

        for (var r = e[0], s = 1; s < e.length; s++) {
          null != e[s] && (r = N._actionOneTwo(r, e[s]));
        }

        return r;
      }

      N._actionOneTwo = function (t, n) {
        var e = new N();
        return e.initWithTwoActions(t, n), e;
      };

      var R = function (t) {
        function n() {
          return t.apply(this, arguments) || this;
        }

        e(n, t);
        var i = n.prototype;
        return i.update = function () {}, i.reverse = function () {
          var t = new n(this._duration);
          return this._cloneDecoration(t), this._reverseEaseList(t), t;
        }, i.clone = function () {
          var t = new n();
          return this._cloneDecoration(t), t.initWithDuration(this._duration), t;
        }, n;
      }(b);

      function C(t) {
        return new R(t);
      }

      var S = function (t) {
        function n(n) {
          var e;
          return (e = t.call(this) || this)._other = null, n && e.initWithAction(n), e;
        }

        e(n, t);
        var r = n.prototype;
        return r.initWithAction = function (t) {
          return t ? t === this._other ? (i(1029), !1) : !!b.prototype.initWithDuration.call(this, t._duration) && (this._other = t, !0) : (i(1028), !1);
        }, r.clone = function () {
          var t = new n();
          return this._cloneDecoration(t), t.initWithAction(this._other.clone()), t;
        }, r.startWithTarget = function (t) {
          b.prototype.startWithTarget.call(this, t), this._other.startWithTarget(t);
        }, r.update = function (t) {
          t = this._computeEaseTime(t), this._other && this._other.update(1 - t);
        }, r.reverse = function () {
          return this._other.clone();
        }, r.stop = function () {
          this._other.stop(), d.prototype.stop.call(this);
        }, n;
      }(b),
          U = function (t) {
        function n(n, e, i) {
          var r;
          if ((r = t.call(this) || this)._opts = void 0, r._props = void 0, r._originProps = void 0, null == i) i = Object.create(null);else if (function (t) {
            var n = " [Tween:] ",
                e = " option is not support in v + " + _,
                i = t;
            i.delay && l(n + "delay" + e), i.repeat && l(n + "repeat" + e), i.repeatDelay && l(n + "repeatDelay" + e), i.interpolation && l(n + "interpolation" + e), i.onStop && l(n + "onStop" + e);
          }(i), i.easing && "string" == typeof i.easing && (i.easing = function (t) {
            var n = t.charAt(0);

            if (/[A-Z]/.test(n)) {
              var e = (t = t.replace(n, n.toLowerCase())).split("-");

              if (2 === e.length) {
                var i = e[0];
                if ("linear" === i) t = "linear";else {
                  var r = e[1];

                  switch (i) {
                    case "quadratic":
                      t = "quad" + r;
                      break;

                    case "quartic":
                      t = "quart" + r;
                      break;

                    case "quintic":
                      t = "quint" + r;
                      break;

                    case "sinusoidal":
                      t = "sine" + r;
                      break;

                    case "exponential":
                      t = "expo" + r;
                      break;

                    case "circular":
                      t = "circ" + r;
                      break;

                    default:
                      t = i + r;
                  }
                }
              }
            }

            return t;
          }(i.easing)), i.progress || (i.progress = r.progress), i.easing && "string" == typeof i.easing) {
            var s = i.easing;
            i.easing = u[s], i.easing || h(1031, s);
          }

          for (var o in r._opts = i, r._props = Object.create(null), e) {
            if (e.hasOwnProperty(o)) {
              var a = e[o];

              if ("function" == typeof a && (a = a()), null != a && "string" != typeof a) {
                var c = void 0,
                    p = void 0;
                void 0 !== a.value && (a.easing || a.progress) && ("string" == typeof a.easing ? (c = u[a.easing]) || h(1031, a.easing) : c = a.easing, p = a.progress, a = a.value);
                var f = Object.create(null);
                f.value = a, f.easing = c, f.progress = p, r._props[o] = f;
              }
            }
          }

          return r._originProps = e, r.initWithDuration(n), r;
        }

        e(n, t);
        var i = n.prototype;
        return i.clone = function () {
          var t = new n(this._duration, this._originProps, this._opts);
          return this._cloneDecoration(t), t;
        }, i.startWithTarget = function (t) {
          b.prototype.startWithTarget.call(this, t);
          var n = !!this._opts.relative,
              e = this._props;

          for (var i in e) {
            var r = t[i];

            if (void 0 !== r) {
              var s = e[i],
                  o = s.value;
              if ("number" == typeof r) s.start = r, s.current = r, s.end = n ? r + o : o;else if ("object" == (0, _typeof2.default)(r)) for (var a in null == s.start && (s.start = {}, s.current = {}, s.end = {}), o) {
                isNaN(r[a]) || (s.start[a] = r[a], s.current[a] = r[a], s.end[a] = n ? r[a] + o[a] : o[a]);
              }
            }
          }

          this._opts.onStart && this._opts.onStart(this.target);
        }, i.update = function (t) {
          var n = this.target;

          if (n) {
            var e = this._props,
                i = this._opts,
                r = t;
            i.easing && (r = i.easing(t));
            var s = i.progress;

            for (var o in e) {
              var a = e[o],
                  c = a.easing ? a.easing(t) : r,
                  u = a.progress ? a.progress : s,
                  h = a.start,
                  l = a.end;
              if ("number" == typeof h) a.current = u(h, l, a.current, c);else if ("object" == (0, _typeof2.default)(h)) for (var _ in h) {
                a.current[_] = u(h[_], l[_], a.current[_], c);
              }
              n[o] = a.current;
            }

            i.onUpdate && i.onUpdate(this.target, t), 1 === t && i.onComplete && i.onComplete(this.target);
          }
        }, i.progress = function (t, n, e, i) {
          return t + (n - t) * i;
        }, n;
      }(b),
          j = function (t) {
        function n(n) {
          var e;
          return (e = t.call(this) || this)._props = void 0, e._props = {}, void 0 !== n && e.init(n), e;
        }

        e(n, t);
        var i = n.prototype;
        return i.init = function (t) {
          for (var n in t) {
            this._props[n] = t[n];
          }

          return !0;
        }, i.update = function () {
          var t = this._props,
              n = this.target;

          for (var e in t) {
            n[e] = t[e];
          }
        }, i.clone = function () {
          var t = new n();
          return t.init(this._props), t;
        }, n;
      }(W),
          P = t("Tween", function () {
        function t(t) {
          this._actions = [], this._finalAction = null, this._target = null, this._tag = d.TAG_INVALID, this._target = void 0 === t ? null : t;
        }

        var n = t.prototype;
        return n.tag = function (t) {
          return this._tag = t, this;
        }, n.then = function (t) {
          return t instanceof d ? this._actions.push(t.clone()) : this._actions.push(t._union()), this;
        }, n.target = function (t) {
          return this._target = t, this;
        }, n.start = function () {
          return this._target ? (this._finalAction && m.instance.ActionManager.removeAction(this._finalAction), this._finalAction = this._union(), this._finalAction.setTag(this._tag), m.instance.ActionManager.addAction(this._finalAction, this._target, !1), this) : (l("Please set target to tween first"), this);
        }, n.stop = function () {
          return this._finalAction && m.instance.ActionManager.removeAction(this._finalAction), this;
        }, n.clone = function (t) {
          var n = this._union();

          return q(t).then(n.clone());
        }, n.union = function () {
          var t = this._union();

          return this._actions.length = 0, this._actions.push(t), this;
        }, n.to = function (t, n, e) {
          (e = e || Object.create(null)).relative = !1;
          var i = new U(t, n, e);
          return this._actions.push(i), this;
        }, n.by = function (t, n, e) {
          (e = e || Object.create(null)).relative = !0;
          var i = new U(t, n, e);
          return this._actions.push(i), this;
        }, n.set = function (t) {
          var n = new j(t);
          return this._actions.push(n), this;
        }, n.delay = function (t) {
          var n = C(t);
          return this._actions.push(n), this;
        }, n.call = function (t) {
          var n = new M(t, undefined, undefined);
          return this._actions.push(n), this;
        }, n.sequence = function () {
          var n = t._wrappedSequence.apply(t, arguments);

          return this._actions.push(n), this;
        }, n.parallel = function () {
          var n = t._wrappedParallel.apply(t, arguments);

          return this._actions.push(n), this;
        }, n.repeat = function (n, e) {
          if (n == 1 / 0) return this.repeatForever(e);
          var i,
              r = this._actions;
          return i = e instanceof t ? e._union() : r.pop(), r.push(function (t, n) {
            return new x(t, n);
          }(i, n)), this;
        }, n.repeatForever = function (n) {
          var e,
              i = this._actions;
          return e = n instanceof t ? n._union() : i.pop(), i.push(function (t) {
            return new k(t);
          }(e)), this;
        }, n.reverseTime = function (n) {
          var e,
              i = this._actions;
          return e = n instanceof t ? n._union() : i.pop(), i.push(function (t) {
            return new S(t);
          }(e)), this;
        }, n.hide = function () {
          var t = new I();
          return this._actions.push(t), this;
        }, n.show = function () {
          var t = new D();
          return this._actions.push(t), this;
        }, n.removeSelf = function () {
          var t = new E(!1);
          return this._actions.push(t), this;
        }, t.stopAll = function () {
          m.instance.ActionManager.removeAllActions();
        }, t.stopAllByTag = function (t, n) {
          m.instance.ActionManager.removeActionByTag(t, n);
        }, t.stopAllByTarget = function (t) {
          m.instance.ActionManager.removeAllActionsFromTarget(t);
        }, n._union = function () {
          var t = this._actions;
          return 1 === t.length ? t[0] : L(t);
        }, n._destroy = function () {
          this.stop();
        }, t._wrappedSequence = function () {
          var n = t._tmp_args;
          n.length = 0;

          for (var e = arguments.length, i = 0; i < e; i++) {
            var r = n[i] = i < 0 || arguments.length <= i ? void 0 : arguments[i];
            r instanceof t && (n[i] = r._union());
          }

          return L.apply(L, n);
        }, t._wrappedParallel = function () {
          var n = t._tmp_args;
          n.length = 0;

          for (var e = arguments.length, i = 0; i < e; i++) {
            var r = n[i] = i < 0 || arguments.length <= i ? void 0 : arguments[i];
            r instanceof t && (n[i] = r._union());
          }

          return O.apply(O, n);
        }, t;
      }());

      function q(t) {
        return new P(t);
      }

      function B(t) {
        return l("tweenUtil' is deprecated, please use 'tween' instead "), new P(t);
      }

      P._tmp_args = [], r.Tween = P, r.tween = q, r.tweenUtil = B;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/ui.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./sprite-frame-1c023836.js", "./sprite-723e419c.js", "./renderable-2d-f6cb180f.js", "./deprecated-ddee6a28.js"], function (t) {
  "use strict";

  var e, i, o, n, r, s, a, h, l, c, u, _, p, d, g, f, y, b, m, T, v, C, S, E, O, A, w, L, D, P, z, I, R, x, B, N, H, M, k, V, F, G, j, U, W, Z, Y, X, q, K, J, Q, $, tt, et, it, ot, nt, rt, st, at, ht, lt, ct, ut, _t, pt, dt, gt, ft, yt, bt, mt, Tt, vt, Ct;

  return {
    setters: [function (t) {
      e = t.cj, i = t.cK, o = t.ef, n = t.ek, r = t.dH, s = t.fY, a = t.ec, h = t.cq, l = t.gD, c = t.c5, u = t.eb, _ = t.e2, p = t.eg, d = t.fZ, g = t.ga, f = t.f_, y = t.gC, b = t.ej, m = t.fU, T = t.gH, v = t.gI, C = t.eh, S = t.ed, E = t.dO, O = t.ei, A = t.cJ, w = t.cc, L = t.l, D = t.gJ, P = t.dB, z = t.eW, I = t.eU, R = t.gK, x = t.gL, B = t.gM, N = t.cf, H = t.go, M = t.w, k = t.c3, V = t.cp, F = t.ge, G = t.gf, j = t.dD, U = t.dc, W = t.t, Z = t.c, Y = t.eR, X = t.eu, q = t.dI, K = t.gN, J = t.d, Q = t.gn, $ = t.fi, tt = t.eV, et = t.eL, it = t.c_, ot = t.dm, nt = t.dn, rt = t.eM;
    }, function (t) {
      st = t.E, at = t.d, ht = t.D;
    }, function (t) {
      lt = t.v, ct = t.w, ut = t.K, _t = t._, pt = t.r, dt = t.p;
    }, function () {}, function (t) {
      gt = t.C;
    }, function () {}, function () {}, function (t) {
      ft = t.S;
    }, function (t) {
      yt = t.a, bt = t.B, mt = t.c, Tt = t.V;
    }, function (t) {
      vt = t.R, Ct = t.U;
    }, function () {}],
    execute: function execute() {
      var St,
          Et,
          Ot,
          At,
          wt,
          Lt,
          Dt,
          Pt,
          zt,
          It,
          Rt,
          xt,
          Bt,
          Nt,
          Ht,
          Mt,
          kt,
          Vt,
          Ft,
          Gt,
          jt,
          Ut,
          Wt,
          Zt,
          Yt,
          Xt,
          qt,
          Kt,
          Jt,
          Qt,
          $t,
          te,
          ee,
          ie,
          oe,
          ne,
          re,
          se,
          ae,
          he,
          le,
          ce,
          ue,
          _e,
          pe,
          de,
          ge,
          fe,
          ye,
          be,
          me,
          Te,
          ve,
          Ce = new e();

      !function (t) {
        t[t.NONE = 0] = "NONE", t[t.COLOR = 1] = "COLOR", t[t.SPRITE = 2] = "SPRITE", t[t.SCALE = 3] = "SCALE";
      }(me || (me = {})), i(me), function (t) {
        t.NORMAL = "normal", t.HOVER = "hover", t.PRESSED = "pressed", t.DISABLED = "disabled";
      }(Te || (Te = {})), function (t) {
        t.CLICK = "click";
      }(ve || (ve = {}));

      var Se,
          Ee,
          Oe,
          Ae,
          we = (St = o("cc.Button"), Et = d(), Ot = g(110), At = f(), wt = y(Ct), Lt = n(r), Dt = b(), Pt = m(), zt = b(), It = m(), Rt = n(me), xt = b(), Bt = m(), Nt = m(), Ht = m(), Mt = m(), kt = m(), Vt = T(), Ft = v(), Gt = m(), jt = m(), Ut = n(ft), Wt = m(), Zt = n(ft), Yt = m(), Xt = n(ft), qt = m(), Kt = n(ft), Jt = m(), Qt = n([st]), $t = b(), te = m(), Se = St(ee = Et(ee = Ot(ee = At(ee = wt(ee = s((be = ye = function (t) {
        function i() {
          for (var i, o = arguments.length, n = new Array(o), r = 0; r < o; r++) {
            n[r] = arguments[r];
          }

          return i = t.call.apply(t, [this].concat(n)) || this, C(i, "clickEvents", oe, S(i)), C(i, "_interactable", ne, S(i)), C(i, "_transition", re, S(i)), C(i, "_normalColor", se, S(i)), C(i, "_hoverColor", ae, S(i)), C(i, "_pressedColor", he, S(i)), C(i, "_disabledColor", le, S(i)), C(i, "_normalSprite", ce, S(i)), C(i, "_hoverSprite", ue, S(i)), C(i, "_pressedSprite", _e, S(i)), C(i, "_disabledSprite", pe, S(i)), C(i, "_duration", de, S(i)), C(i, "_zoomScale", ge, S(i)), C(i, "_target", fe, S(i)), i._pressed = !1, i._hovered = !1, i._fromColor = new e(), i._toColor = new e(), i._time = 0, i._transitionFinished = !0, i._fromScale = new c(), i._toScale = new c(), i._originalScale = null, i._sprite = null, i._targetScale = new c(), i;
        }

        a(i, t);
        var o = i.prototype;
        return o.__preload = function () {
          this.target || (this.target = this.node);
          var t = this.node.getComponent(yt);
          t && (this._normalSprite = t.spriteFrame), this._applyTarget(), this._resetState();
        }, o.onEnable = function () {
          this._registerNodeEvent();
        }, o.onDisable = function () {
          this._resetState(), this._unregisterNodeEvent();
        }, o.onDestroy = function () {
          this.target.isValid && this._unregisterTargetEvent(this.target);
        }, o.update = function (t) {
          var i = this.target;

          if (!this._transitionFinished && i && (this._transition === me.COLOR || this._transition === me.SCALE)) {
            this._time += t;
            var o = 1;

            if (this._duration > 0 && (o = this._time / this._duration), o >= 1 && (o = 1), this._transition === me.COLOR) {
              var n = i._uiProps.uiComp;
              e.lerp(Ce, this._fromColor, this._toColor, o), n && (n.color = Ce);
            } else this.transition === me.SCALE && (i.getScale(this._targetScale), this._targetScale.x = h(this._fromScale.x, this._toScale.x, o), this._targetScale.y = h(this._fromScale.y, this._toScale.y, o), i.setScale(this._targetScale));

            1 === o && (this._transitionFinished = !0);
          }
        }, o._resizeNodeToTargetNode = function () {
          this.target && this.target._uiProps.uiTransformComp;
        }, o._resetState = function () {
          this._pressed = !1, this._hovered = !1;
          var t = this.target;

          if (t) {
            var e = this._transition;

            if (e === me.COLOR && this._interactable) {
              var i = t.getComponent(vt);
              i && (i.color = this._normalColor);
            } else e === me.SCALE && this._originalScale && t.setScale(this._originalScale);

            this._transitionFinished = !0;
          }
        }, o._registerNodeEvent = function () {
          this.node.on(l.TOUCH_START, this._onTouchBegan, this), this.node.on(l.TOUCH_MOVE, this._onTouchMove, this), this.node.on(l.TOUCH_END, this._onTouchEnded, this), this.node.on(l.TOUCH_CANCEL, this._onTouchCancel, this), this.node.on(l.MOUSE_ENTER, this._onMouseMoveIn, this), this.node.on(l.MOUSE_LEAVE, this._onMouseMoveOut, this);
        }, o._registerTargetEvent = function (t) {
          t.on(l.TRANSFORM_CHANGED, this._onTargetTransformChanged, this);
        }, o._unregisterNodeEvent = function () {
          this.node.off(l.TOUCH_START, this._onTouchBegan, this), this.node.off(l.TOUCH_MOVE, this._onTouchMove, this), this.node.off(l.TOUCH_END, this._onTouchEnded, this), this.node.off(l.TOUCH_CANCEL, this._onTouchCancel, this), this.node.off(l.MOUSE_ENTER, this._onMouseMoveIn, this), this.node.off(l.MOUSE_LEAVE, this._onMouseMoveOut, this);
        }, o._unregisterTargetEvent = function (t) {
          t.off(l.TRANSFORM_CHANGED);
        }, o._getTargetSprite = function (t) {
          var e = null;
          return t && (e = t.getComponent(yt)), e;
        }, o._applyTarget = function () {
          this.target && (this._sprite = this._getTargetSprite(this.target), this._originalScale || (this._originalScale = new c()), c.copy(this._originalScale, this.target.getScale()), this._registerTargetEvent(this.target));
        }, o._onTargetSpriteFrameChanged = function (t) {
          this._transition === me.SPRITE && this._setCurrentStateSpriteFrame(t.spriteFrame);
        }, o._setCurrentStateSpriteFrame = function (t) {
          if (t) switch (this._getButtonState()) {
            case Te.NORMAL:
              this._normalSprite = t;
              break;

            case Te.HOVER:
              this._hoverSprite = t;
              break;

            case Te.PRESSED:
              this._pressedSprite = t;
              break;

            case Te.DISABLED:
              this._disabledSprite = t;
          }
        }, o._onTargetColorChanged = function (t) {
          this._transition === me.COLOR && this._setCurrentStateColor(t);
        }, o._setCurrentStateColor = function (t) {
          switch (this._getButtonState()) {
            case Te.NORMAL:
              this._normalColor = t;
              break;

            case Te.HOVER:
              this._hoverColor = t;
              break;

            case Te.PRESSED:
              this._pressedColor = t;
              break;

            case Te.DISABLED:
              this._disabledColor = t;
          }
        }, o._onTargetTransformChanged = function (t) {
          t & u.SCALE && this._originalScale && this._transition === me.SCALE && this._transitionFinished && c.copy(this._originalScale, this.target.getScale());
        }, o._onTouchBegan = function (t) {
          this._interactable && this.enabledInHierarchy && (this._pressed = !0, this._updateState(), t && (t.propagationStopped = !0));
        }, o._onTouchMove = function (t) {
          if (this._interactable && this.enabledInHierarchy && this._pressed && t) {
            var e = t.touch;

            if (e) {
              var i,
                  o = this.node._uiProps.uiTransformComp.isHit(e.getUILocation());

              this._transition === me.SCALE && this.target && this._originalScale ? o ? (c.copy(this._fromScale, this._originalScale), c.multiplyScalar(this._toScale, this._originalScale, this._zoomScale), this._transitionFinished = !1) : (this._time = 0, this._transitionFinished = !0, this.target.setScale(this._originalScale)) : (i = o ? Te.PRESSED : Te.NORMAL, this._applyTransition(i)), t && (t.propagationStopped = !0);
            }
          }
        }, o._onTouchEnded = function (t) {
          this._interactable && this.enabledInHierarchy && (this._pressed && (st.emitEvents(this.clickEvents, t), this.node.emit(ve.CLICK, this)), this._pressed = !1, this._updateState(), t && (t.propagationStopped = !0));
        }, o._onTouchCancel = function () {
          this._interactable && this.enabledInHierarchy && (this._pressed = !1, this._updateState());
        }, o._onMouseMoveIn = function () {
          !this._pressed && this.interactable && this.enabledInHierarchy && (this._transition !== me.SPRITE || this._hoverSprite) && (this._hovered || (this._hovered = !0, this._updateState()));
        }, o._onMouseMoveOut = function () {
          this._hovered && (this._hovered = !1, this._updateState());
        }, o._updateState = function () {
          var t = this._getButtonState();

          this._applyTransition(t);
        }, o._getButtonState = function () {
          var t = Te.NORMAL;
          return this._interactable ? this._pressed ? t = Te.PRESSED : this._hovered && (t = Te.HOVER) : t = Te.DISABLED, t.toString();
        }, o._updateColorTransition = function (t) {
          var e,
              i = this[t + "Color"],
              o = null === (e = this.target) || void 0 === e ? void 0 : e.getComponent(vt);
          o && (t === Te.DISABLED ? o.color = i : (this._fromColor = o.color.clone(), this._toColor = i, this._time = 0, this._transitionFinished = !1));
        }, o._updateSpriteTransition = function (t) {
          var e = this[t + "Sprite"];
          this._sprite && e && (this._sprite.spriteFrame = e);
        }, o._updateScaleTransition = function (t) {
          this._interactable && (t === Te.PRESSED ? this._zoomUp() : this._zoomBack());
        }, o._zoomUp = function () {
          this._originalScale && (c.copy(this._fromScale, this._originalScale), c.multiplyScalar(this._toScale, this._originalScale, this._zoomScale), this._time = 0, this._transitionFinished = !1);
        }, o._zoomBack = function () {
          this.target && this._originalScale && (c.copy(this._fromScale, this.target.getScale()), c.copy(this._toScale, this._originalScale), this._time = 0, this._transitionFinished = !1);
        }, o._applyTransition = function (t) {
          var e = this._transition;
          e === me.COLOR ? this._updateColorTransition(t) : e === me.SPRITE ? this._updateSpriteTransition(t) : e === me.SCALE && this._updateScaleTransition(t);
        }, _(i, [{
          key: "target",
          get: function get() {
            return this._target || this.node;
          },
          set: function set(t) {
            this._target !== t && (this._target && this._unregisterTargetEvent(this._target), this._target = t, this._applyTarget());
          }
        }, {
          key: "interactable",
          get: function get() {
            return this._interactable;
          },
          set: function set(t) {
            this._interactable = t, this._updateState(), this._interactable || this._resetState();
          }
        }, {
          key: "_resizeToTarget",
          set: function set(t) {
            t && this._resizeNodeToTargetNode();
          }
        }, {
          key: "transition",
          get: function get() {
            return this._transition;
          },
          set: function set(t) {
            this._transition !== t && (this._transition === me.COLOR ? this._updateColorTransition(Te.NORMAL) : this._transition === me.SPRITE && this._updateSpriteTransition(Te.NORMAL), this._transition = t, this._updateState());
          }
        }, {
          key: "normalColor",
          get: function get() {
            return this._normalColor;
          },
          set: function set(t) {
            this._normalColor !== t && (this._normalColor.set(t), this._updateState());
          }
        }, {
          key: "pressedColor",
          get: function get() {
            return this._pressedColor;
          },
          set: function set(t) {
            this._pressedColor !== t && this._pressedColor.set(t);
          }
        }, {
          key: "hoverColor",
          get: function get() {
            return this._hoverColor;
          },
          set: function set(t) {
            this._hoverColor !== t && this._hoverColor.set(t);
          }
        }, {
          key: "disabledColor",
          get: function get() {
            return this._disabledColor;
          },
          set: function set(t) {
            this._disabledColor !== t && (this._disabledColor.set(t), this._updateState());
          }
        }, {
          key: "duration",
          get: function get() {
            return this._duration;
          },
          set: function set(t) {
            this._duration !== t && (this._duration = t);
          }
        }, {
          key: "zoomScale",
          get: function get() {
            return this._zoomScale;
          },
          set: function set(t) {
            this._zoomScale !== t && (this._zoomScale = t);
          }
        }, {
          key: "normalSprite",
          get: function get() {
            return this._normalSprite;
          },
          set: function set(t) {
            if (this._normalSprite !== t) {
              this._normalSprite = t;
              var e = this.node.getComponent(yt);
              e && (e.spriteFrame = t), this._updateState();
            }
          }
        }, {
          key: "pressedSprite",
          get: function get() {
            return this._pressedSprite;
          },
          set: function set(t) {
            this._pressedSprite !== t && (this._pressedSprite = t, this._updateState());
          }
        }, {
          key: "hoverSprite",
          get: function get() {
            return this._hoverSprite;
          },
          set: function set(t) {
            this._hoverSprite !== t && (this._hoverSprite = t, this._updateState());
          }
        }, {
          key: "disabledSprite",
          get: function get() {
            return this._disabledSprite;
          },
          set: function set(t) {
            this._disabledSprite !== t && (this._disabledSprite = t, this._updateState());
          }
        }]), i;
      }(E), ye.Transition = me, ye.EventType = ve, p((ie = be).prototype, "target", [Lt, Dt, Pt], Object.getOwnPropertyDescriptor(ie.prototype, "target"), ie.prototype), p(ie.prototype, "interactable", [zt, It], Object.getOwnPropertyDescriptor(ie.prototype, "interactable"), ie.prototype), p(ie.prototype, "transition", [Rt, xt, Bt], Object.getOwnPropertyDescriptor(ie.prototype, "transition"), ie.prototype), p(ie.prototype, "normalColor", [Nt], Object.getOwnPropertyDescriptor(ie.prototype, "normalColor"), ie.prototype), p(ie.prototype, "pressedColor", [Ht], Object.getOwnPropertyDescriptor(ie.prototype, "pressedColor"), ie.prototype), p(ie.prototype, "hoverColor", [Mt], Object.getOwnPropertyDescriptor(ie.prototype, "hoverColor"), ie.prototype), p(ie.prototype, "disabledColor", [kt], Object.getOwnPropertyDescriptor(ie.prototype, "disabledColor"), ie.prototype), p(ie.prototype, "duration", [Vt, Ft, Gt], Object.getOwnPropertyDescriptor(ie.prototype, "duration"), ie.prototype), p(ie.prototype, "zoomScale", [jt], Object.getOwnPropertyDescriptor(ie.prototype, "zoomScale"), ie.prototype), p(ie.prototype, "normalSprite", [Ut, Wt], Object.getOwnPropertyDescriptor(ie.prototype, "normalSprite"), ie.prototype), p(ie.prototype, "pressedSprite", [Zt, Yt], Object.getOwnPropertyDescriptor(ie.prototype, "pressedSprite"), ie.prototype), p(ie.prototype, "hoverSprite", [Xt, qt], Object.getOwnPropertyDescriptor(ie.prototype, "hoverSprite"), ie.prototype), p(ie.prototype, "disabledSprite", [Kt, Jt], Object.getOwnPropertyDescriptor(ie.prototype, "disabledSprite"), ie.prototype), oe = p(ie.prototype, "clickEvents", [Qt, O, $t, te], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), ne = p(ie.prototype, "_interactable", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), re = p(ie.prototype, "_transition", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return me.NONE;
        }
      }), se = p(ie.prototype, "_normalColor", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return e.WHITE.clone();
        }
      }), ae = p(ie.prototype, "_hoverColor", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new e(211, 211, 211, 255);
        }
      }), he = p(ie.prototype, "_pressedColor", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return e.WHITE.clone();
        }
      }), le = p(ie.prototype, "_disabledColor", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new e(124, 124, 124, 255);
        }
      }), ce = p(ie.prototype, "_normalSprite", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ue = p(ie.prototype, "_hoverSprite", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), _e = p(ie.prototype, "_pressedSprite", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), pe = p(ie.prototype, "_disabledSprite", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), de = p(ie.prototype, "_duration", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .1;
        }
      }), ge = p(ie.prototype, "_zoomScale", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1.2;
        }
      }), fe = p(ie.prototype, "_target", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), ee = ie)) || ee) || ee) || ee) || ee) || ee) || ee, t({
        Button: Se,
        ButtonComponent: Se
      }), Se),
          Le = function () {
        function t() {}

        return t.add = function (t) {
          var e = this._tabIndexList;
          -1 === e.indexOf(t) && e.push(t);
        }, t.remove = function (t) {
          var e = this._tabIndexList,
              i = e.indexOf(t);
          -1 !== i && e.splice(i, 1);
        }, t.resort = function () {
          this._tabIndexList.sort(function (t, e) {
            return t._delegate.tabIndex - e._delegate.tabIndex;
          });
        }, t.next = function (t) {
          var e = this._tabIndexList,
              i = e.indexOf(t);

          if (t.setFocus(!1), -1 !== i) {
            var o = e[i + 1];
            o && o._delegate.tabIndex >= 0 && o.setFocus(!0);
          }
        }, t;
      }();

      Le._tabIndexList = [], function (t) {
        t[t.DEFAULT = 0] = "DEFAULT", t[t.DONE = 1] = "DONE", t[t.SEND = 2] = "SEND", t[t.SEARCH = 3] = "SEARCH", t[t.GO = 4] = "GO", t[t.NEXT = 5] = "NEXT";
      }(Ee || (Ee = {})), A(Ee), function (t) {
        t[t.ANY = 0] = "ANY", t[t.EMAIL_ADDR = 1] = "EMAIL_ADDR", t[t.NUMERIC = 2] = "NUMERIC", t[t.PHONE_NUMBER = 3] = "PHONE_NUMBER", t[t.URL = 4] = "URL", t[t.DECIMAL = 5] = "DECIMAL", t[t.SINGLE_LINE = 6] = "SINGLE_LINE";
      }(Oe || (Oe = {})), A(Oe), function (t) {
        t[t.PASSWORD = 0] = "PASSWORD", t[t.SENSITIVE = 1] = "SENSITIVE", t[t.INITIAL_CAPS_WORD = 2] = "INITIAL_CAPS_WORD", t[t.INITIAL_CAPS_SENTENCE = 3] = "INITIAL_CAPS_SENTENCE", t[t.INITIAL_CAPS_ALL_CHARACTERS = 4] = "INITIAL_CAPS_ALL_CHARACTERS", t[t.DEFAULT = 5] = "DEFAULT";
      }(Ae || (Ae = {})), A(Ae);

      var De,
          Pe,
          ze,
          Ie,
          Re,
          xe,
          Be,
          Ne,
          He,
          Me,
          ke,
          Ve,
          Fe,
          Ge,
          je,
          Ue,
          We,
          Ze,
          Ye,
          Xe,
          qe,
          Ke,
          Je,
          Qe,
          $e,
          ti,
          ei,
          ii,
          oi,
          ni,
          ri,
          si,
          ai,
          hi,
          li,
          ci,
          ui,
          _i,
          pi,
          di,
          gi,
          fi,
          yi,
          bi,
          mi,
          Ti,
          vi,
          Ci,
          Si,
          Ei,
          Oi,
          Ai,
          wi,
          Li,
          Di,
          Pi,
          zi,
          Ii,
          Ri,
          xi,
          Bi,
          Ni = function () {
        function t() {
          this._editing = !1, this._delegate = null;
        }

        var e = t.prototype;
        return e.init = function () {}, e.onEnable = function () {}, e.update = function () {}, e.onDisable = function () {
          this._editing && this.endEditing();
        }, e.clear = function () {
          this._delegate = null;
        }, e.setTabIndex = function () {}, e.setSize = function () {}, e.setFocus = function (t) {
          t ? this.beginEditing() : this.endEditing();
        }, e.isFocused = function () {
          return this._editing;
        }, e.beginEditing = function () {}, e.endEditing = function () {}, t;
      }(),
          Hi = new w(),
          Mi = new w(),
          ki = new c(),
          Vi = null,
          Fi = 0,
          Gi = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return (e = t.call.apply(t, [this].concat(o)) || this)._delegate = null, e._inputMode = -1, e._inputFlag = -1, e._returnType = -1, e.__eventListeners = {}, e.__autoResize = !1, e.__orientationChanged = void 0, e._edTxt = null, e._isTextArea = !1, e._textLabelFont = null, e._textLabelFontSize = null, e._textLabelFontColor = null, e._textLabelAlign = null, e._placeholderLabelFont = null, e._placeholderLabelFontSize = null, e._placeholderLabelFontColor = null, e._placeholderLabelAlign = null, e._placeholderLineHeight = null, e._placeholderStyleSheet = null, e._domId = "EditBoxId_" + ++Fi, e;
        }

        a(e, t);
        var i = e.prototype;
        return i.init = function (t) {
          t && (this._delegate = t, t.inputMode === Oe.ANY ? this._createTextArea() : this._createInput(), Le.add(this), this.setTabIndex(t.tabIndex), this._initStyleSheet(), this._registerEventListeners(), this._addDomToGameContainer(), this.__autoResize = lt._resizeWithBrowserSize);
        }, i.clear = function () {
          this._removeEventListeners(), this._removeDomFromGameContainer(), Le.remove(this), Vi === this && (Vi = null), this._delegate = null;
        }, i.update = function () {
          this._updateMatrix();
        }, i.setTabIndex = function (t) {
          this._edTxt.tabIndex = t, Le.resort();
        }, i.setSize = function (t, e) {
          var i = this._edTxt;
          i && (i.style.width = t + "px", i.style.height = e + "px");
        }, i.beginEditing = function () {
          Vi && Vi !== this && Vi.setFocus(!1), this._editing = !0, Vi = this, this._delegate._editBoxEditingDidBegan(), this._showDom(), this._edTxt.focus();
        }, i.endEditing = function () {
          this._edTxt.blur();
        }, i._createInput = function () {
          this._isTextArea = !1, this._edTxt = document.createElement("input");
        }, i._createTextArea = function () {
          this._isTextArea = !0, this._edTxt = document.createElement("textarea");
        }, i._addDomToGameContainer = function () {
          L.GAME_VIEW && this._edTxt ? (L.gameView.container.appendChild(this._edTxt), L.gameView.head.appendChild(this._placeholderStyleSheet)) : ct.container && this._edTxt && (ct.container.appendChild(this._edTxt), document.head.appendChild(this._placeholderStyleSheet));
        }, i._removeDomFromGameContainer = function () {
          (L.GAME_VIEW ? D(L.gameView.container, this._edTxt) : D(ct.container, this._edTxt)) && this._edTxt && (L.GAME_VIEW ? L.gameView.container.removeChild(this._edTxt) : ct.container.removeChild(this._edTxt)), (L.GAME_VIEW ? D(L.gameView.head, this._placeholderStyleSheet) : D(document.head, this._placeholderStyleSheet)) && (L.GAME_VIEW ? L.gameView.head.removeChild(this._placeholderStyleSheet) : document.head.removeChild(this._placeholderStyleSheet)), this._edTxt = null, this._placeholderStyleSheet = null;
        }, i._showDom = function () {
          this._updateMaxLength(), this._updateInputType(), this._updateStyleSheet(), this._edTxt && this._delegate && (this._edTxt.style.display = "", this._delegate._hideLabels()), P.isMobile && this._showDomOnMobile();
        }, i._hideDom = function () {
          var t = this._edTxt;
          t && this._delegate && (t.style.display = "none", this._delegate._showLabels()), P.isMobile && this._hideDomOnMobile();
        }, i._showDomOnMobile = function () {
          P.os !== z.ANDROID && P.os !== z.OHOS || (this.__autoResize && lt.resizeWithBrowserSize(!1), this._adjustWindowScroll());
        }, i._hideDomOnMobile = function () {
          P.os !== z.ANDROID && P.os !== z.OHOS || this.__autoResize && lt.resizeWithBrowserSize(!0), this._scrollBackWindow();
        }, i._adjustWindowScroll = function () {
          var t = this;
          setTimeout(function () {
            window.scrollY < 40 && t._edTxt.scrollIntoView({
              block: "start",
              inline: "nearest",
              behavior: "smooth"
            });
          }, 400);
        }, i._scrollBackWindow = function () {
          setTimeout(function () {
            P.browserType !== I.WECHAT || P.os !== z.IOS ? window.scrollTo(0, 0) : window.top && window.top.scrollTo(0, 0);
          }, 400);
        }, i._updateMatrix = function () {
          if (this._edTxt) {
            var t = this._delegate.node,
                e = lt.getScaleX(),
                i = lt.getScaleY(),
                o = 1,
                n = 1;
            L.GAME_VIEW && (o = L.gameView.canvas.width / L.game.canvas.width, n = L.gameView.canvas.height / L.game.canvas.height), e *= o, i *= n;
            var r = lt.getViewportRect(),
                s = lt.getDevicePixelRatio();
            t.getWorldMatrix(Hi);
            var a = t._uiProps.uiTransformComp;

            if (a && c.set(ki, -a.anchorX * a.width, -a.anchorY * a.height, ki.z), w.transform(Hi, Hi, ki), t._uiProps.uiTransformComp) {
              var h = at.root.batcher2D.getFirstRenderCamera(t);

              if (h) {
                h.node.getWorldRT(Mi);
                var l = Mi.m12,
                    u = Mi.m13,
                    _ = _t.center;
                Mi.m12 = _.x - (Mi.m00 * l + Mi.m04 * u), Mi.m13 = _.y - (Mi.m01 * l + Mi.m05 * u), w.multiply(Mi, Mi, Hi), e /= s, i /= s;
                var p = L.GAME_VIEW ? L.gameView.container : ct.container,
                    d = Mi.m00 * e,
                    g = Hi.m01,
                    f = Hi.m04,
                    y = Mi.m05 * i,
                    b = parseInt(p && p.style.paddingLeft || "0");
                b += r.x * o / s;
                var m = parseInt(p && p.style.paddingBottom || "0");
                m += r.y / s;
                var T = "matrix(" + d + "," + -g + "," + -f + "," + y + "," + (Mi.m12 * e + b) + "," + -(Mi.m13 * i + m) + ")";
                this._edTxt.style.transform = T, this._edTxt.style["-webkit-transform"] = T, this._edTxt.style["transform-origin"] = "0px 100% 0px", this._edTxt.style["-webkit-transform-origin"] = "0px 100% 0px";
              }
            }
          }
        }, i._updateInputType = function () {
          var t = this._delegate,
              e = t.inputMode,
              i = t.inputFlag,
              o = t.returnType,
              n = this._edTxt;

          if (this._inputMode !== e || this._inputFlag !== i || this._returnType !== o) {
            if (this._inputMode = e, this._inputFlag = i, this._returnType = o, this._isTextArea) {
              var r = "none";
              return i === Ae.INITIAL_CAPS_ALL_CHARACTERS ? r = "uppercase" : i === Ae.INITIAL_CAPS_WORD && (r = "capitalize"), void (n.style.textTransform = r);
            }

            if (n = n, i === Ae.PASSWORD) return n.type = "password", void (n.style.textTransform = "none");
            var s = n.type;
            e === Oe.EMAIL_ADDR ? s = "email" : e === Oe.NUMERIC || e === Oe.DECIMAL ? s = "number" : e === Oe.PHONE_NUMBER ? (s = "number", n.pattern = "[0-9]*") : e === Oe.URL ? s = "url" : (s = "text", o === Ee.SEARCH && (s = "search")), n.type = s;
            var a = "none";
            i === Ae.INITIAL_CAPS_ALL_CHARACTERS ? a = "uppercase" : i === Ae.INITIAL_CAPS_WORD && (a = "capitalize"), n.style.textTransform = a;
          }
        }, i._updateMaxLength = function () {
          var t = this._delegate.maxLength;
          t < 0 && (t = 65535), this._edTxt.maxLength = t;
        }, i._initStyleSheet = function () {
          if (this._edTxt) {
            var t = this._edTxt;
            t.style.color = "#000000", t.style.border = "0px", t.style.background = "transparent", t.style.width = "100%", t.style.height = "100%", t.style.outline = "medium", t.style.padding = "0", t.style.textTransform = "none", t.style.display = "none", t.style.position = "absolute", t.style.bottom = "0px", t.style.left = "2px", t.className = "cocosEditBox", t.style.fontFamily = "Arial", t.id = this._domId, this._isTextArea ? (t.style.resize = "none", t.style.overflowY = "scroll") : ((t = t).type = "text", t.style["-moz-appearance"] = "textfield"), this._placeholderStyleSheet = document.createElement("style");
          }
        }, i._updateStyleSheet = function () {
          var t = this._delegate,
              e = this._edTxt;
          e && t && (e.value = t.string, e.placeholder = t.placeholder, this._updateTextLabel(t.textLabel), this._updatePlaceholderLabel(t.placeholderLabel));
        }, i._updateTextLabel = function (t) {
          if (t) {
            var e = t.font;
            e = !e || e instanceof bt ? t.fontFamily : e._fontFamily;
            var i = t.fontSize * t.node.scale.y;

            if ((this._textLabelFont !== e || this._textLabelFontSize !== i || this._textLabelFontColor !== t.fontColor || this._textLabelAlign !== t.horizontalAlign) && (this._textLabelFont = e, this._textLabelFontSize = i, this._textLabelFontColor = t.fontColor, this._textLabelAlign = t.horizontalAlign, this._edTxt)) {
              var o = this._edTxt;

              switch (o.style.fontSize = i + "px", o.style.color = t.color.toCSS(), o.style.fontFamily = e, t.horizontalAlign) {
                case mt.HorizontalAlign.LEFT:
                  o.style.textAlign = "left";
                  break;

                case mt.HorizontalAlign.CENTER:
                  o.style.textAlign = "center";
                  break;

                case mt.HorizontalAlign.RIGHT:
                  o.style.textAlign = "right";
              }
            }
          }
        }, i._updatePlaceholderLabel = function (t) {
          if (t) {
            var e = t.font;
            e = !e || e instanceof bt ? t.fontFamily : t.font._fontFamily;
            var i = t.fontSize * t.node.scale.y;

            if (this._placeholderLabelFont !== e || this._placeholderLabelFontSize !== i || this._placeholderLabelFontColor !== t.fontColor || this._placeholderLabelAlign !== t.horizontalAlign || this._placeholderLineHeight !== t.fontSize) {
              this._placeholderLabelFont = e, this._placeholderLabelFontSize = i, this._placeholderLabelFontColor = t.fontColor, this._placeholderLabelAlign = t.horizontalAlign, this._placeholderLineHeight = t.fontSize;
              var o = this._placeholderStyleSheet,
                  n = t.color.toCSS(),
                  r = t.fontSize,
                  s = "";

              switch (t.horizontalAlign) {
                case mt.HorizontalAlign.LEFT:
                  s = "left";
                  break;

                case mt.HorizontalAlign.CENTER:
                  s = "center";
                  break;

                case mt.HorizontalAlign.RIGHT:
                  s = "right";
              }

              o.innerHTML = "#" + this._domId + "::-webkit-input-placeholder{text-transform: initial;-family: " + e + ";font-size: " + i + "px;color: " + n + ";line-height: " + r + "px;text-align: " + s + ";}#" + this._domId + "::-moz-placeholder{text-transform: initial;-family: " + e + ";font-size: " + i + "px;color: " + n + ";line-height: " + r + "px;text-align: " + s + ";}#" + this._domId + "::-ms-input-placeholder{text-transform: initial;-family: " + e + ";font-size: " + i + "px;color: " + n + ";line-height: " + r + "px;text-align: " + s + ";}", P.browserType === I.EDGE && (o.innerHTML += "#" + this._domId + "::-ms-clear{display: none;}");
            }
          }
        }, i._registerEventListeners = function () {
          var t = this;

          if (this._edTxt) {
            var e = this._edTxt,
                i = !1,
                o = this.__eventListeners;
            o.compositionStart = function () {
              i = !0;
            }, o.compositionEnd = function () {
              i = !1, t._delegate._editBoxTextChanged(e.value);
            }, o.onInput = function () {
              if (!i) {
                var o = t._delegate,
                    n = o.maxLength;
                n >= 0 && (e.value = e.value.slice(0, n)), o._editBoxTextChanged(e.value);
              }
            }, o.onClick = function () {
              t._editing && P.isMobile && t._adjustWindowScroll();
            }, o.onKeydown = function (i) {
              i.keyCode === ut.ENTER ? (i.propagationStopped = !0, t._delegate._editBoxEditingReturn(), t._isTextArea || e.blur()) : i.keyCode === ut.TAB && (i.propagationStopped = !0, i.preventDefault(), Le.next(t));
            }, o.onBlur = function () {
              P.isMobile && i && o.compositionEnd(), t._editing = !1, Vi = null, t._hideDom(), t._delegate._editBoxEditingDidEnded();
            }, e.addEventListener("compositionstart", o.compositionStart), e.addEventListener("compositionend", o.compositionEnd), e.addEventListener("input", o.onInput), e.addEventListener("keydown", o.onKeydown), e.addEventListener("blur", o.onBlur), e.addEventListener("touchstart", o.onClick);
          }
        }, i._removeEventListeners = function () {
          if (this._edTxt) {
            var t = this._edTxt,
                e = this.__eventListeners;
            t.removeEventListener("compositionstart", e.compositionStart), t.removeEventListener("compositionend", e.compositionEnd), t.removeEventListener("input", e.onInput), t.removeEventListener("keydown", e.onKeydown), t.removeEventListener("blur", e.onBlur), t.removeEventListener("touchstart", e.onClick), e.compositionStart = null, e.compositionEnd = null, e.onInput = null, e.onKeydown = null, e.onBlur = null, e.onClick = null;
          }
        }, e;
      }(Ni);

      !function (t) {
        t.EDITING_DID_BEGAN = "editing-did-began", t.EDITING_DID_ENDED = "editing-did-ended", t.TEXT_CHANGED = "text-changed", t.EDITING_RETURN = "editing-return";
      }(Bi || (Bi = {}));

      var ji,
          Ui,
          Wi,
          Zi,
          Yi,
          Xi,
          qi,
          Ki,
          Ji,
          Qi,
          $i,
          to,
          eo,
          io,
          oo,
          no,
          ro,
          so,
          ao,
          ho,
          lo,
          co,
          uo,
          _o,
          po,
          go,
          fo,
          yo,
          bo,
          mo,
          To,
          vo,
          Co,
          So,
          Eo,
          Oo,
          Ao,
          wo,
          Lo,
          Do,
          Po,
          zo,
          Io,
          Ro,
          xo,
          Bo,
          No,
          Ho,
          Mo,
          ko,
          Vo,
          Fo,
          Go,
          jo,
          Uo,
          Wo,
          Zo,
          Yo,
          Xo,
          qo,
          Ko = function (e) {
        return t({
          EditBox: e,
          EditBoxComponent: e
        }), e;
      }((De = o("cc.EditBox"), Pe = d(), ze = g(110), Ie = f(), Re = y(Ct), xe = b(), Be = m(), Ne = b(), He = m(), Me = n(mt), ke = b(), Ve = m(), Fe = n(mt), Ge = b(), je = m(), Ue = n(ft), We = b(), Ze = m(), Ye = n(Ae), Xe = b(), qe = m(), Ke = n(Oe), Je = b(), Qe = m(), $e = n(Ee), ti = b(), ei = m(), ii = b(), oi = m(), ni = b(), ri = m(), si = n([st]), ai = b(), hi = m(), li = n([st]), ci = b(), ui = m(), _i = n([st]), pi = b(), di = m(), gi = n([st]), fi = b(), yi = m(), De(bi = Pe(bi = ze(bi = Ie(bi = Re(bi = s((xi = Ri = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "editingDidBegan", Ti, S(e)), C(e, "textChanged", vi, S(e)), C(e, "editingDidEnded", Ci, S(e)), C(e, "editingReturn", Si, S(e)), e._impl = null, e._background = null, C(e, "_textLabel", Ei, S(e)), C(e, "_placeholderLabel", Oi, S(e)), C(e, "_returnType", Ai, S(e)), C(e, "_string", wi, S(e)), C(e, "_tabIndex", Li, S(e)), C(e, "_backgroundImage", Di, S(e)), C(e, "_inputFlag", Pi, S(e)), C(e, "_inputMode", zi, S(e)), C(e, "_maxLength", Ii, S(e)), e._isLabelVisible = !1, e;
        }

        a(e, t);
        var i = e.prototype;
        return i.__preload = function () {
          this._init();
        }, i.onEnable = function () {
          this._registerEvent(), this._ensureBackgroundSprite(), this._impl && this._impl.onEnable();
        }, i.update = function () {
          this._impl && this._impl.update();
        }, i.onDisable = function () {
          this._unregisterEvent(), this._unregisterBackgroundEvent(), this._impl && this._impl.onDisable();
        }, i.onDestroy = function () {
          this._impl && this._impl.clear();
        }, i.setFocus = function () {
          this._impl && this._impl.setFocus(!0);
        }, i.focus = function () {
          this._impl && this._impl.setFocus(!0);
        }, i.blur = function () {
          this._impl && this._impl.setFocus(!1);
        }, i.isFocused = function () {
          return !!this._impl && this._impl.isFocused();
        }, i._editBoxEditingDidBegan = function () {
          st.emitEvents(this.editingDidBegan, this), this.node.emit(Bi.EDITING_DID_BEGAN, this);
        }, i._editBoxEditingDidEnded = function () {
          st.emitEvents(this.editingDidEnded, this), this.node.emit(Bi.EDITING_DID_ENDED, this);
        }, i._editBoxTextChanged = function (t) {
          t = this._updateLabelStringStyle(t, !0), this.string = t, st.emitEvents(this.textChanged, t, this), this.node.emit(Bi.TEXT_CHANGED, this);
        }, i._editBoxEditingReturn = function () {
          st.emitEvents(this.editingReturn, this), this.node.emit(Bi.EDITING_RETURN, this);
        }, i._showLabels = function () {
          this._isLabelVisible = !0, this._updateLabels();
        }, i._hideLabels = function () {
          this._isLabelVisible = !1, this._textLabel && (this._textLabel.node.active = !1), this._placeholderLabel && (this._placeholderLabel.node.active = !1);
        }, i._onTouchBegan = function (t) {
          t.propagationStopped = !0;
        }, i._onTouchCancel = function (t) {
          t.propagationStopped = !0;
        }, i._onTouchEnded = function (t) {
          this._impl && this._impl.beginEditing(), t.propagationStopped = !0;
        }, i._init = function () {
          this._updatePlaceholderLabel(), this._updateTextLabel(), this._isLabelVisible = !0, this.node.on(l.SIZE_CHANGED, this._resizeChildNodes, this), (this._impl = new e._EditBoxImpl()).init(this), this._updateString(this._string), this._syncSize();
        }, i._ensureBackgroundSprite = function () {
          if (!this._background) {
            var t = this.node.getComponent(yt);
            t || (t = this.node.addComponent(yt)), t !== this._background && (t.type = yt.Type.SLICED, t.spriteFrame = this._backgroundImage, this._background = t, this._registerBackgroundEvent());
          }
        }, i._updateTextLabel = function () {
          var t = this._textLabel;

          if (!t) {
            var e = this.node.getChildByName("TEXT_LABEL");
            e || (e = new r("TEXT_LABEL")), (t = e.getComponent(mt)) || (t = e.addComponent(mt)), e.parent = this.node, this._textLabel = t;
          }

          this._textLabel.node._uiProps.uiTransformComp.setAnchorPoint(0, 1), t.overflow = mt.Overflow.CLAMP, this._inputMode === Oe.ANY ? (t.verticalAlign = Tt.TOP, t.enableWrapText = !0) : t.enableWrapText = !1, t.string = this._updateLabelStringStyle(this._string);
        }, i._updatePlaceholderLabel = function () {
          var t = this._placeholderLabel;

          if (!t) {
            var e = this.node.getChildByName("PLACEHOLDER_LABEL");
            e || (e = new r("PLACEHOLDER_LABEL")), (t = e.getComponent(mt)) || (t = e.addComponent(mt)), e.parent = this.node, this._placeholderLabel = t;
          }

          this._placeholderLabel.node._uiProps.uiTransformComp.setAnchorPoint(0, 1), t.overflow = mt.Overflow.CLAMP, this._inputMode === Oe.ANY ? (t.verticalAlign = Tt.TOP, t.enableWrapText = !0) : t.enableWrapText = !1, t.string = this.placeholder;
        }, i._syncSize = function () {
          var t = this.node._uiProps.uiTransformComp,
              e = t.contentSize;

          if (this._background) {
            var i = this._background.node._uiProps.uiTransformComp;
            i.anchorPoint = t.anchorPoint, i.setContentSize(e);
          }

          this._updateLabelPosition(e), this._impl && this._impl.setSize(e.width, e.height);
        }, i._updateLabels = function () {
          if (this._isLabelVisible) {
            var t = this._string;
            this._textLabel && (this._textLabel.node.active = "" !== t), this._placeholderLabel && (this._placeholderLabel.node.active = "" === t);
          }
        }, i._updateString = function (t) {
          var e = this._textLabel;

          if (e) {
            var i = t;
            i && (i = this._updateLabelStringStyle(i)), e.string = i, this._updateLabels();
          }
        }, i._updateLabelStringStyle = function (t, e) {
          void 0 === e && (e = !1);
          var i,
              o = this._inputFlag;
          if (e || o !== Ae.PASSWORD) o === Ae.INITIAL_CAPS_ALL_CHARACTERS ? t = t.toUpperCase() : o === Ae.INITIAL_CAPS_WORD ? t = t.replace(/(?:^|\s)\S/g, function (t) {
            return t.toUpperCase();
          }) : o === Ae.INITIAL_CAPS_SENTENCE && (t = (i = t).charAt(0).toUpperCase() + i.slice(1));else {
            for (var n = "", r = t.length, s = 0; s < r; ++s) {
              n += "●";
            }

            t = n;
          }
          return t;
        }, i._registerEvent = function () {
          this.node.on(l.TOUCH_START, this._onTouchBegan, this), this.node.on(l.TOUCH_END, this._onTouchEnded, this);
        }, i._unregisterEvent = function () {
          this.node.off(l.TOUCH_START, this._onTouchBegan, this), this.node.off(l.TOUCH_END, this._onTouchEnded, this);
        }, i._onBackgroundSpriteFrameChanged = function () {
          this._background && (this.backgroundImage = this._background.spriteFrame);
        }, i._registerBackgroundEvent = function () {
          var t = this._background && this._background.node;
          null == t || t.on(yt.EventType.SPRITE_FRAME_CHANGED, this._onBackgroundSpriteFrameChanged, this);
        }, i._unregisterBackgroundEvent = function () {
          var t = this._background && this._background.node;
          null == t || t.off(yt.EventType.SPRITE_FRAME_CHANGED, this._onBackgroundSpriteFrameChanged, this);
        }, i._updateLabelPosition = function (t) {
          var e = this.node._uiProps.uiTransformComp,
              i = -e.anchorX * e.width,
              o = -e.anchorY * e.height,
              n = this._placeholderLabel,
              r = this._textLabel;
          r && (r.node._uiProps.uiTransformComp.setContentSize(t.width - 2, t.height), r.node.setPosition(i + 2, o + t.height, r.node.position.z), this._inputMode === Oe.ANY && (r.verticalAlign = Tt.TOP), r.enableWrapText = this._inputMode === Oe.ANY), n && (n.node._uiProps.uiTransformComp.setContentSize(t.width - 2, t.height), n.lineHeight = t.height, n.node.setPosition(i + 2, o + t.height, n.node.position.z), this._inputMode === Oe.ANY && (n.verticalAlign = Tt.TOP), n.enableWrapText = this._inputMode === Oe.ANY);
        }, i._resizeChildNodes = function () {
          var t = this.node._uiProps.uiTransformComp,
              e = this._textLabel && this._textLabel.node;
          e && (e.setPosition(-t.width / 2, t.height / 2, e.position.z), e._uiProps.uiTransformComp.setContentSize(t.contentSize));
          var i = this._placeholderLabel && this._placeholderLabel.node;
          i && (i.setPosition(-t.width / 2, t.height / 2, i.position.z), i._uiProps.uiTransformComp.setContentSize(t.contentSize));
          var o = this._background && this._background.node;
          o && o._uiProps.uiTransformComp.setContentSize(t.contentSize);
        }, _(e, [{
          key: "string",
          get: function get() {
            return this._string;
          },
          set: function set(t) {
            this._maxLength >= 0 && t.length >= this._maxLength && (t = t.slice(0, this._maxLength)), this._string = t, this._updateString(t);
          }
        }, {
          key: "placeholder",
          get: function get() {
            return this._placeholderLabel ? this._placeholderLabel.string : "";
          },
          set: function set(t) {
            this._placeholderLabel && (this._placeholderLabel.string = t);
          }
        }, {
          key: "textLabel",
          get: function get() {
            return this._textLabel;
          },
          set: function set(t) {
            this._textLabel !== t && (this._textLabel = t, this._textLabel && (this._updateTextLabel(), this._updateLabels()));
          }
        }, {
          key: "placeholderLabel",
          get: function get() {
            return this._placeholderLabel;
          },
          set: function set(t) {
            this._placeholderLabel !== t && (this._placeholderLabel = t, this._placeholderLabel && (this._updatePlaceholderLabel(), this._updateLabels()));
          }
        }, {
          key: "backgroundImage",
          get: function get() {
            return this._backgroundImage;
          },
          set: function set(t) {
            this._backgroundImage !== t && (this._backgroundImage = t, this._ensureBackgroundSprite(), this._background.spriteFrame = t);
          }
        }, {
          key: "inputFlag",
          get: function get() {
            return this._inputFlag;
          },
          set: function set(t) {
            this._inputFlag = t, this._updateString(this._string);
          }
        }, {
          key: "inputMode",
          get: function get() {
            return this._inputMode;
          },
          set: function set(t) {
            this._inputMode !== t && (this._inputMode = t, this._updateTextLabel(), this._updatePlaceholderLabel());
          }
        }, {
          key: "returnType",
          get: function get() {
            return this._returnType;
          },
          set: function set(t) {
            this._returnType = t;
          }
        }, {
          key: "maxLength",
          get: function get() {
            return this._maxLength;
          },
          set: function set(t) {
            this._maxLength = t;
          }
        }, {
          key: "tabIndex",
          get: function get() {
            return this._tabIndex;
          },
          set: function set(t) {
            this._tabIndex !== t && (this._tabIndex = t, this._impl && this._impl.setTabIndex(t));
          }
        }]), e;
      }(E), Ri._EditBoxImpl = Ni, Ri.KeyboardReturnType = Ee, Ri.InputFlag = Ae, Ri.InputMode = Oe, Ri.EventType = Bi, p((mi = xi).prototype, "string", [xe, Be], Object.getOwnPropertyDescriptor(mi.prototype, "string"), mi.prototype), p(mi.prototype, "placeholder", [Ne, He], Object.getOwnPropertyDescriptor(mi.prototype, "placeholder"), mi.prototype), p(mi.prototype, "textLabel", [Me, ke, Ve], Object.getOwnPropertyDescriptor(mi.prototype, "textLabel"), mi.prototype), p(mi.prototype, "placeholderLabel", [Fe, Ge, je], Object.getOwnPropertyDescriptor(mi.prototype, "placeholderLabel"), mi.prototype), p(mi.prototype, "backgroundImage", [Ue, We, Ze], Object.getOwnPropertyDescriptor(mi.prototype, "backgroundImage"), mi.prototype), p(mi.prototype, "inputFlag", [Ye, Xe, qe], Object.getOwnPropertyDescriptor(mi.prototype, "inputFlag"), mi.prototype), p(mi.prototype, "inputMode", [Ke, Je, Qe], Object.getOwnPropertyDescriptor(mi.prototype, "inputMode"), mi.prototype), p(mi.prototype, "returnType", [$e, ti, ei], Object.getOwnPropertyDescriptor(mi.prototype, "returnType"), mi.prototype), p(mi.prototype, "maxLength", [ii, oi], Object.getOwnPropertyDescriptor(mi.prototype, "maxLength"), mi.prototype), p(mi.prototype, "tabIndex", [ni, ri], Object.getOwnPropertyDescriptor(mi.prototype, "tabIndex"), mi.prototype), Ti = p(mi.prototype, "editingDidBegan", [si, O, ai, hi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), vi = p(mi.prototype, "textChanged", [li, O, ci, ui], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ci = p(mi.prototype, "editingDidEnded", [_i, O, pi, di], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Si = p(mi.prototype, "editingReturn", [gi, O, fi, yi], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ei = p(mi.prototype, "_textLabel", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Oi = p(mi.prototype, "_placeholderLabel", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ai = p(mi.prototype, "_returnType", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ee.DEFAULT;
        }
      }), wi = p(mi.prototype, "_string", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Li = p(mi.prototype, "_tabIndex", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Di = p(mi.prototype, "_backgroundImage", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Pi = p(mi.prototype, "_inputFlag", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ae.DEFAULT;
        }
      }), zi = p(mi.prototype, "_inputMode", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Oe.ANY;
        }
      }), Ii = p(mi.prototype, "_maxLength", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 20;
        }
      }), bi = mi)) || bi) || bi) || bi) || bi) || bi) || bi));

      "object" != (typeof window === "undefined" ? "undefined" : (0, _typeof2.default)(window)) || "object" != (typeof document === "undefined" ? "undefined" : (0, _typeof2.default)(document)) || R || x || B || (Ko._EditBoxImpl = Gi), function (t) {
        t[t.NONE = 0] = "NONE", t[t.HORIZONTAL = 1] = "HORIZONTAL", t[t.VERTICAL = 2] = "VERTICAL", t[t.GRID = 3] = "GRID";
      }(Uo || (Uo = {})), i(Uo), function (t) {
        t[t.NONE = 0] = "NONE", t[t.CONTAINER = 1] = "CONTAINER", t[t.CHILDREN = 2] = "CHILDREN";
      }(Wo || (Wo = {})), i(Wo), function (t) {
        t[t.HORIZONTAL = 0] = "HORIZONTAL", t[t.VERTICAL = 1] = "VERTICAL";
      }(Zo || (Zo = {})), i(Zo), function (t) {
        t[t.BOTTOM_TO_TOP = 0] = "BOTTOM_TO_TOP", t[t.TOP_TO_BOTTOM = 1] = "TOP_TO_BOTTOM";
      }(Yo || (Yo = {})), i(Yo), function (t) {
        t[t.LEFT_TO_RIGHT = 0] = "LEFT_TO_RIGHT", t[t.RIGHT_TO_LEFT = 1] = "RIGHT_TO_LEFT";
      }(Xo || (Xo = {})), i(Xo), function (t) {
        t[t.NONE = 0] = "NONE", t[t.FIXED_ROW = 1] = "FIXED_ROW", t[t.FIXED_COL = 2] = "FIXED_COL";
      }(qo || (qo = {})), i(qo);

      var Jo,
          Qo,
          $o,
          tn,
          en,
          on,
          nn,
          rn,
          sn,
          an,
          hn,
          ln,
          cn,
          un,
          _n,
          pn,
          dn,
          gn,
          fn,
          yn,
          bn,
          mn,
          Tn,
          vn = new c(),
          Cn = function (e) {
        return t({
          Layout: e,
          LayoutComponent: e
        }), e;
      }((ji = o("cc.Layout"), Ui = d(), Wi = g(110), Zi = f(), Yi = y(Ct), Xi = H(), qi = m(), Ki = H(), Ji = m(), Qi = n(Uo), $i = m(), to = n(Wo), eo = H(), io = m(), oo = H(), no = m(), ro = n(Zo), so = m(), ao = m(), ho = m(), lo = m(), co = m(), uo = m(), _o = m(), po = n(Yo), go = m(), fo = n(Xo), yo = m(), bo = n(qo), mo = H(), To = m(), vo = H(), Co = m(), So = m(), ji(Eo = Ui(Eo = Wi(Eo = Zi(Eo = Yi(Eo = s((jo = Go = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "_resizeMode", Ao, S(e)), C(e, "_layoutType", wo, S(e)), C(e, "_cellSize", Lo, S(e)), C(e, "_startAxis", Do, S(e)), C(e, "_paddingLeft", Po, S(e)), C(e, "_paddingRight", zo, S(e)), C(e, "_paddingTop", Io, S(e)), C(e, "_paddingBottom", Ro, S(e)), C(e, "_spacingX", xo, S(e)), C(e, "_spacingY", Bo, S(e)), C(e, "_verticalDirection", No, S(e)), C(e, "_horizontalDirection", Ho, S(e)), C(e, "_constraint", Mo, S(e)), C(e, "_constraintNum", ko, S(e)), C(e, "_affectedByScale", Vo, S(e)), C(e, "_isAlign", Fo, S(e)), e._layoutSize = new N(300, 200), e._layoutDirty = !0, e._childrenDirty = !1, e._usefulLayoutObj = [], e._init = !1, e;
        }

        a(e, t);
        var i = e.prototype;
        return i.updateLayout = function (t) {
          void 0 === t && (t = !1), (this._layoutDirty || t) && this.node.children.length > 0 && (this._doLayout(), this._layoutDirty = !1);
        }, i.onEnable = function () {
          this._addEventListeners();

          var t = this.node._uiProps.uiTransformComp;
          t.contentSize.equals(N.ZERO) && t.setContentSize(this._layoutSize), this._childrenChanged();
        }, i.onDisable = function () {
          this._usefulLayoutObj.length = 0, this._removeEventListeners();
        }, i._checkUsefulObj = function () {
          this._usefulLayoutObj.length = 0;

          for (var t = this.node.children, e = 0; e < t.length; ++e) {
            var i = t[e],
                o = i._uiProps.uiTransformComp;
            i.activeInHierarchy && o && this._usefulLayoutObj.push(o);
          }
        }, i._addEventListeners = function () {
          at.on(ht.EVENT_AFTER_UPDATE, this.updateLayout, this), this.node.on(l.SIZE_CHANGED, this._resized, this), this.node.on(l.ANCHOR_CHANGED, this._doLayoutDirty, this), this.node.on(l.CHILD_ADDED, this._childAdded, this), this.node.on(l.CHILD_REMOVED, this._childRemoved, this), this.node.on(l.SIBLING_ORDER_CHANGED, this._childrenChanged, this), this.node.on("childrenSiblingOrderChanged", this.updateLayout, this), this._addChildrenEventListeners();
        }, i._removeEventListeners = function () {
          at.off(ht.EVENT_AFTER_UPDATE, this.updateLayout, this), this.node.off(l.SIZE_CHANGED, this._resized, this), this.node.off(l.ANCHOR_CHANGED, this._doLayoutDirty, this), this.node.off(l.CHILD_ADDED, this._childAdded, this), this.node.off(l.CHILD_REMOVED, this._childRemoved, this), this.node.off(l.SIBLING_ORDER_CHANGED, this._childrenChanged, this), this.node.off("childrenSiblingOrderChanged", this.updateLayout, this), this._removeChildrenEventListeners();
        }, i._addChildrenEventListeners = function () {
          for (var t = this.node.children, e = 0; e < t.length; ++e) {
            var i = t[e];
            i.on(l.SIZE_CHANGED, this._doLayoutDirty, this), i.on(l.TRANSFORM_CHANGED, this._transformDirty, this), i.on(l.ANCHOR_CHANGED, this._doLayoutDirty, this), i.on("active-in-hierarchy-changed", this._childrenChanged, this);
          }
        }, i._removeChildrenEventListeners = function () {
          for (var t = this.node.children, e = 0; e < t.length; ++e) {
            var i = t[e];
            i.off(l.SIZE_CHANGED, this._doLayoutDirty, this), i.off(l.TRANSFORM_CHANGED, this._transformDirty, this), i.off(l.ANCHOR_CHANGED, this._doLayoutDirty, this), i.off("active-in-hierarchy-changed", this._childrenChanged, this);
          }
        }, i._childAdded = function (t) {
          t.on(l.SIZE_CHANGED, this._doLayoutDirty, this), t.on(l.TRANSFORM_CHANGED, this._transformDirty, this), t.on(l.ANCHOR_CHANGED, this._doLayoutDirty, this), t.on("active-in-hierarchy-changed", this._childrenChanged, this), this._childrenChanged();
        }, i._childRemoved = function (t) {
          t.off(l.SIZE_CHANGED, this._doLayoutDirty, this), t.off(l.TRANSFORM_CHANGED, this._transformDirty, this), t.off(l.ANCHOR_CHANGED, this._doLayoutDirty, this), t.off("active-in-hierarchy-changed", this._childrenChanged, this), this._childrenChanged();
        }, i._resized = function () {
          this._layoutSize.set(this.node._uiProps.uiTransformComp.contentSize), this._doLayoutDirty();
        }, i._doLayoutHorizontally = function (t, e, i, o) {
          var n = this.node._uiProps.uiTransformComp.anchorPoint,
              r = this._getFixedBreakingNum(),
              s = 1,
              a = this._paddingLeft;

          this._horizontalDirection === Xo.RIGHT_TO_LEFT && (s = -1, a = this._paddingRight);

          var h = (this._horizontalDirection - n.x) * t + s * a,
              l = h - s * this._spacingX,
              c = 0,
              u = 0,
              _ = 0,
              p = 0,
              d = !1,
              g = this._usefulLayoutObj.length,
              f = this._cellSize.width,
              y = this._getPaddingH();

          this._layoutType !== Uo.GRID && this._resizeMode === Wo.CHILDREN && (f = (t - y - (g - 1) * this._spacingX) / g);

          for (var b = this._usefulLayoutObj, m = 0; m < b.length; ++m) {
            var T = b[m],
                v = T.node,
                C = v.scale,
                S = this._getUsedScaleValue(C.x),
                E = this._getUsedScaleValue(C.y);

            this._resizeMode === Wo.CHILDREN && (T.width = f / S, this._layoutType === Uo.GRID && (T.height = this._cellSize.height / E));
            var O = Math.abs(this._horizontalDirection - T.anchorX),
                A = T.width * S,
                w = T.height * E;
            w > _ && (p = Math.max(_, p), u = _ || w, _ = w), l += s * (O * A + this._spacingX);
            var L = s * (1 - O) * A;

            if (e) {
              if (r > 0) (d = m / r > 0 && m % r == 0) && (u = _ > w ? _ : u);else if (A > t - y) l > h + s * O * A && (d = !0);else {
                var D = (1 - this._horizontalDirection - n.x) * t,
                    P = l + L + s * (s > 0 ? this._paddingRight : this._paddingLeft);
                d = Math.abs(P) > Math.abs(D);
              }
              d && (l = h + s * O * A, w !== _ && (u = _), c += u + this._spacingY, u = _ = w);
            }

            var z = i(v, T, c);
            o && v.setPosition(l, z), l += L;
          }

          return u = Math.max(u, _), Math.max(p, c + u) + this._getPaddingV();
        }, i._doLayoutVertically = function (t, e, i, o) {
          var n = this.node._uiProps.uiTransformComp.anchorPoint,
              r = this._getFixedBreakingNum(),
              s = 1,
              a = this._paddingBottom;

          this._verticalDirection === Yo.TOP_TO_BOTTOM && (s = -1, a = this._paddingTop);

          var h = (this._verticalDirection - n.y) * t + s * a,
              l = h - s * this._spacingY,
              c = 0,
              u = 0,
              _ = 0,
              p = 0,
              d = !1,
              g = this._usefulLayoutObj.length,
              f = this._cellSize.height,
              y = this._getPaddingV();

          this._layoutType !== Uo.GRID && this._resizeMode === Wo.CHILDREN && (f = (t - y - (g - 1) * this._spacingY) / g);

          for (var b = this._usefulLayoutObj, m = 0; m < b.length; ++m) {
            var T = b[m],
                v = T.node,
                C = v.scale,
                S = this._getUsedScaleValue(C.x),
                E = this._getUsedScaleValue(C.y);

            this._resizeMode === Wo.CHILDREN && (T.height = f / E, this._layoutType === Uo.GRID && (T.width = this._cellSize.width / S));
            var O = Math.abs(this._verticalDirection - T.anchorY),
                A = T.width * S,
                w = T.height * E;
            A > c && (u = Math.max(c, u), _ = c || A, c = A), l += s * (O * w + this._spacingY);
            var L = s * (1 - O) * w;

            if (e) {
              if (r > 0) (d = m / r > 0 && m % r == 0) && (_ = c > w ? c : _);else if (w > t - y) l > h + s * O * w && (d = !0);else {
                var D = (1 - this._verticalDirection - n.y) * t,
                    P = l + L + s * (s > 0 ? this._paddingTop : this._paddingBottom);
                d = Math.abs(P) > Math.abs(D);
              }
              d && (l = h + s * O * w, A !== c && (_ = c), p += _ + this._spacingX, _ = c = A);
            }

            var z = i(v, T, p);
            o && (v.getPosition(vn), v.setPosition(z, l, vn.z)), l += L;
          }

          return _ = Math.max(_, c), Math.max(u, p + _) + this._getPaddingH();
        }, i._doLayoutGridAxisHorizontal = function (t, e) {
          var i = this,
              o = e.width,
              n = 1,
              r = -t.y * e.height,
              s = this._paddingBottom;
          this._verticalDirection === Yo.TOP_TO_BOTTOM && (n = -1, r = (1 - t.y) * e.height, s = this._paddingTop);

          var a = function a(t, e, o) {
            return r + n * (o + (1 - e.anchorY) * e.height * i._getUsedScaleValue(t.scale.y) + s);
          },
              h = 0;

          this._resizeMode === Wo.CONTAINER && (h = this._doLayoutHorizontally(o, !0, a, !1), r = -t.y * h, this._verticalDirection === Yo.TOP_TO_BOTTOM && (n = -1, r = (1 - t.y) * h)), this._doLayoutHorizontally(o, !0, a, !0), this._resizeMode === Wo.CONTAINER && this.node._uiProps.uiTransformComp.setContentSize(o, h);
        }, i._doLayoutGridAxisVertical = function (t, e) {
          var i = this,
              o = e.height,
              n = 1,
              r = -t.x * e.width,
              s = this._paddingLeft;
          this._horizontalDirection === Xo.RIGHT_TO_LEFT && (n = -1, r = (1 - t.x) * e.width, s = this._paddingRight);

          var a = function a(t, e, o) {
            return r + n * (o + (1 - e.anchorX) * e.width * i._getUsedScaleValue(t.scale.x) + s);
          },
              h = 0;

          this._resizeMode === Wo.CONTAINER && (h = this._doLayoutVertically(o, !0, a, !1), r = -t.x * h, this._horizontalDirection === Xo.RIGHT_TO_LEFT && (n = -1, r = (1 - t.x) * h)), this._doLayoutVertically(o, !0, a, !0), this._resizeMode === Wo.CONTAINER && this.node._uiProps.uiTransformComp.setContentSize(h, o);
        }, i._doLayoutGrid = function () {
          var t = this.node._uiProps.uiTransformComp,
              e = t.anchorPoint,
              i = t.contentSize;
          this.startAxis === Zo.HORIZONTAL ? this._doLayoutGridAxisHorizontal(e, i) : this.startAxis === Zo.VERTICAL && this._doLayoutGridAxisVertical(e, i);
        }, i._getHorizontalBaseWidth = function () {
          var t = this._usefulLayoutObj,
              e = 0,
              i = t.length;

          if (this._resizeMode === Wo.CONTAINER) {
            for (var o = 0; o < t.length; ++o) {
              var n = t[o],
                  r = n.node.scale;
              e += n.width * this._getUsedScaleValue(r.x);
            }

            e += (i - 1) * this._spacingX + this._getPaddingH();
          } else e = this.node._uiProps.uiTransformComp.width;

          return e;
        }, i._getVerticalBaseHeight = function () {
          var t = this._usefulLayoutObj,
              e = 0,
              i = t.length;

          if (this._resizeMode === Wo.CONTAINER) {
            for (var o = 0; o < t.length; ++o) {
              var n = t[o],
                  r = n.node.scale;
              e += n.height * this._getUsedScaleValue(r.y);
            }

            e += (i - 1) * this._spacingY + this._getPaddingV();
          } else e = this.node._uiProps.uiTransformComp.height;

          return e;
        }, i._doLayout = function () {
          var t = this;

          if (this._init && !this._childrenDirty || (this._checkUsefulObj(), this._init = !0, this._childrenDirty = !1), this._layoutType === Uo.HORIZONTAL) {
            var e = this._getHorizontalBaseWidth();

            this._doLayoutHorizontally(e, !1, function (e) {
              return (t._isAlign ? c.ZERO : e.position).y;
            }, !0), this.node._uiProps.uiTransformComp.width = e;
          } else if (this._layoutType === Uo.VERTICAL) {
            var i = this._getVerticalBaseHeight();

            this._doLayoutVertically(i, !1, function (e) {
              return (t._isAlign ? c.ZERO : e.position).x;
            }, !0), this.node._uiProps.uiTransformComp.height = i;
          } else this._layoutType === Uo.GRID && this._doLayoutGrid();
        }, i._getUsedScaleValue = function (t) {
          return this._affectedByScale ? Math.abs(t) : 1;
        }, i._transformDirty = function (t) {
          t & u.SCALE && t & u.POSITION && this._affectedByScale && this._doLayoutDirty();
        }, i._doLayoutDirty = function () {
          this._layoutDirty = !0;
        }, i._childrenChanged = function () {
          this._childrenDirty = !0, this._doLayoutDirty();
        }, i._getPaddingH = function () {
          return this._paddingLeft + this._paddingRight;
        }, i._getPaddingV = function () {
          return this._paddingTop + this._paddingBottom;
        }, i._getFixedBreakingNum = function () {
          if (this._layoutType !== Uo.GRID || this._constraint === qo.NONE || this._constraintNum <= 0) return 0;
          var t = this._constraint === qo.FIXED_ROW ? Math.ceil(this._usefulLayoutObj.length / this._constraintNum) : this._constraintNum;
          return this._startAxis === Zo.VERTICAL && (t = this._constraint === qo.FIXED_COL ? Math.ceil(this._usefulLayoutObj.length / this._constraintNum) : this._constraintNum), t;
        }, _(e, [{
          key: "alignHorizontal",
          get: function get() {
            return this._isAlign;
          },
          set: function set(t) {
            this._layoutType === Uo.HORIZONTAL && (this._isAlign = t, this._doLayoutDirty());
          }
        }, {
          key: "alignVertical",
          get: function get() {
            return this._isAlign;
          },
          set: function set(t) {
            this._layoutType === Uo.VERTICAL && (this._isAlign = t, this._doLayoutDirty());
          }
        }, {
          key: "type",
          get: function get() {
            return this._layoutType;
          },
          set: function set(t) {
            this._layoutType = t, this._doLayoutDirty();
          }
        }, {
          key: "resizeMode",
          get: function get() {
            return this._resizeMode;
          },
          set: function set(t) {
            this._layoutType !== Uo.NONE && (this._resizeMode = t, this._doLayoutDirty());
          }
        }, {
          key: "cellSize",
          get: function get() {
            return this._cellSize;
          },
          set: function set(t) {
            this._cellSize !== t && (this._cellSize.set(t), this._doLayoutDirty());
          }
        }, {
          key: "startAxis",
          get: function get() {
            return this._startAxis;
          },
          set: function set(t) {
            this._startAxis !== t && (this._startAxis = t, this._doLayoutDirty());
          }
        }, {
          key: "paddingLeft",
          get: function get() {
            return this._paddingLeft;
          },
          set: function set(t) {
            this._paddingLeft !== t && (this._paddingLeft = t, this._doLayoutDirty());
          }
        }, {
          key: "paddingRight",
          get: function get() {
            return this._paddingRight;
          },
          set: function set(t) {
            this._paddingRight !== t && (this._paddingRight = t, this._doLayoutDirty());
          }
        }, {
          key: "paddingTop",
          get: function get() {
            return this._paddingTop;
          },
          set: function set(t) {
            this._paddingTop !== t && (this._paddingTop = t, this._doLayoutDirty());
          }
        }, {
          key: "paddingBottom",
          get: function get() {
            return this._paddingBottom;
          },
          set: function set(t) {
            this._paddingBottom !== t && (this._paddingBottom = t, this._doLayoutDirty());
          }
        }, {
          key: "spacingX",
          get: function get() {
            return this._spacingX;
          },
          set: function set(t) {
            this._spacingX !== t && (this._spacingX = t, this._doLayoutDirty());
          }
        }, {
          key: "spacingY",
          get: function get() {
            return this._spacingY;
          },
          set: function set(t) {
            this._spacingY !== t && (this._spacingY = t, this._doLayoutDirty());
          }
        }, {
          key: "verticalDirection",
          get: function get() {
            return this._verticalDirection;
          },
          set: function set(t) {
            this._verticalDirection !== t && (this._verticalDirection = t, this._doLayoutDirty());
          }
        }, {
          key: "horizontalDirection",
          get: function get() {
            return this._horizontalDirection;
          },
          set: function set(t) {
            this._horizontalDirection !== t && (this._horizontalDirection = t, this._doLayoutDirty());
          }
        }, {
          key: "padding",
          get: function get() {
            return this._paddingLeft;
          },
          set: function set(t) {
            this.paddingLeft === t && this._paddingRight === t && this._paddingTop === t && this._paddingBottom === t || (this._paddingLeft = this._paddingRight = this._paddingTop = this._paddingBottom = t, this._doLayoutDirty());
          }
        }, {
          key: "constraint",
          get: function get() {
            return this._constraint;
          },
          set: function set(t) {
            this._layoutType !== Uo.NONE && this._constraint !== t && (this._constraint = t, this._doLayoutDirty());
          }
        }, {
          key: "constraintNum",
          get: function get() {
            return this._constraintNum;
          },
          set: function set(t) {
            this._constraint !== qo.NONE && this._constraintNum !== t && (t <= 0 && M("Limit values to be greater than 0"), this._constraintNum = t, this._doLayoutDirty());
          }
        }, {
          key: "affectedByScale",
          get: function get() {
            return this._affectedByScale;
          },
          set: function set(t) {
            this._affectedByScale = t, this._doLayoutDirty();
          }
        }]), e;
      }(E), Go.Type = Uo, Go.VerticalDirection = Yo, Go.HorizontalDirection = Xo, Go.ResizeMode = Wo, Go.AxisDirection = Zo, Go.Constraint = qo, p((Oo = jo).prototype, "alignHorizontal", [Xi, qi], Object.getOwnPropertyDescriptor(Oo.prototype, "alignHorizontal"), Oo.prototype), p(Oo.prototype, "alignVertical", [Ki, Ji], Object.getOwnPropertyDescriptor(Oo.prototype, "alignVertical"), Oo.prototype), p(Oo.prototype, "type", [Qi, $i], Object.getOwnPropertyDescriptor(Oo.prototype, "type"), Oo.prototype), p(Oo.prototype, "resizeMode", [to, eo, io], Object.getOwnPropertyDescriptor(Oo.prototype, "resizeMode"), Oo.prototype), p(Oo.prototype, "cellSize", [oo, no], Object.getOwnPropertyDescriptor(Oo.prototype, "cellSize"), Oo.prototype), p(Oo.prototype, "startAxis", [ro, so], Object.getOwnPropertyDescriptor(Oo.prototype, "startAxis"), Oo.prototype), p(Oo.prototype, "paddingLeft", [ao], Object.getOwnPropertyDescriptor(Oo.prototype, "paddingLeft"), Oo.prototype), p(Oo.prototype, "paddingRight", [ho], Object.getOwnPropertyDescriptor(Oo.prototype, "paddingRight"), Oo.prototype), p(Oo.prototype, "paddingTop", [lo], Object.getOwnPropertyDescriptor(Oo.prototype, "paddingTop"), Oo.prototype), p(Oo.prototype, "paddingBottom", [co], Object.getOwnPropertyDescriptor(Oo.prototype, "paddingBottom"), Oo.prototype), p(Oo.prototype, "spacingX", [uo], Object.getOwnPropertyDescriptor(Oo.prototype, "spacingX"), Oo.prototype), p(Oo.prototype, "spacingY", [_o], Object.getOwnPropertyDescriptor(Oo.prototype, "spacingY"), Oo.prototype), p(Oo.prototype, "verticalDirection", [po, go], Object.getOwnPropertyDescriptor(Oo.prototype, "verticalDirection"), Oo.prototype), p(Oo.prototype, "horizontalDirection", [fo, yo], Object.getOwnPropertyDescriptor(Oo.prototype, "horizontalDirection"), Oo.prototype), p(Oo.prototype, "constraint", [bo, mo, To], Object.getOwnPropertyDescriptor(Oo.prototype, "constraint"), Oo.prototype), p(Oo.prototype, "constraintNum", [vo, Co], Object.getOwnPropertyDescriptor(Oo.prototype, "constraintNum"), Oo.prototype), p(Oo.prototype, "affectedByScale", [So], Object.getOwnPropertyDescriptor(Oo.prototype, "affectedByScale"), Oo.prototype), Ao = p(Oo.prototype, "_resizeMode", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Wo.NONE;
        }
      }), wo = p(Oo.prototype, "_layoutType", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Uo.NONE;
        }
      }), Lo = p(Oo.prototype, "_cellSize", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new N(40, 40);
        }
      }), Do = p(Oo.prototype, "_startAxis", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Zo.HORIZONTAL;
        }
      }), Po = p(Oo.prototype, "_paddingLeft", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), zo = p(Oo.prototype, "_paddingRight", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Io = p(Oo.prototype, "_paddingTop", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ro = p(Oo.prototype, "_paddingBottom", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), xo = p(Oo.prototype, "_spacingX", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Bo = p(Oo.prototype, "_spacingY", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), No = p(Oo.prototype, "_verticalDirection", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Yo.TOP_TO_BOTTOM;
        }
      }), Ho = p(Oo.prototype, "_horizontalDirection", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Xo.LEFT_TO_RIGHT;
        }
      }), Mo = p(Oo.prototype, "_constraint", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return qo.NONE;
        }
      }), ko = p(Oo.prototype, "_constraintNum", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 2;
        }
      }), Vo = p(Oo.prototype, "_affectedByScale", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Fo = p(Oo.prototype, "_isAlign", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Eo = Oo)) || Eo) || Eo) || Eo) || Eo) || Eo) || Eo));

      !function (t) {
        t[t.HORIZONTAL = 0] = "HORIZONTAL", t[t.VERTICAL = 1] = "VERTICAL", t[t.FILLED = 2] = "FILLED";
      }(Tn || (Tn = {})), A(Tn);

      var Sn,
          En,
          On,
          An,
          wn,
          Ln,
          Dn,
          Pn,
          zn,
          In,
          Rn,
          xn,
          Bn,
          Nn,
          Hn,
          Mn,
          kn,
          Vn,
          Fn,
          Gn,
          jn,
          Un,
          Wn,
          Zn,
          Yn,
          Xn = function (e) {
        return t({
          ProgressBar: e,
          ProgressBarComponent: e
        }), e;
      }((Jo = o("cc.ProgressBar"), Qo = d(), $o = g(110), tn = f(), en = y(Ct), on = n(yt), nn = m(), rn = n(Tn), sn = m(), an = m(), hn = G(), ln = m(), cn = m(), Jo(un = Qo(un = $o(un = tn(un = en((mn = bn = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "_barSprite", pn, S(e)), C(e, "_mode", dn, S(e)), C(e, "_totalLength", gn, S(e)), C(e, "_progress", fn, S(e)), C(e, "_reverse", yn, S(e)), e;
        }

        a(e, t);
        var i = e.prototype;
        return i._initBarSprite = function () {
          if (this._barSprite) {
            var t = this._barSprite.node;
            if (!t) return;
            var e = this.node._uiProps.uiTransformComp,
                i = e.contentSize,
                o = e.anchorPoint,
                n = t._uiProps.uiTransformComp.contentSize;

            if (this._barSprite.fillType === yt.FillType.RADIAL && (this._mode = Tn.FILLED), this._mode === Tn.HORIZONTAL ? this.totalLength = n.width : this._mode === Tn.VERTICAL ? this.totalLength = n.height : this.totalLength = this._barSprite.fillRange, t.parent === this.node) {
              var r = -i.width * o.x;
              t.setPosition(r, 0, 0);
            }
          }
        }, i._updateBarStatus = function () {
          if (this._barSprite) {
            var t = this._barSprite.node;
            if (!t) return;
            var e = t._uiProps.uiTransformComp,
                i = e.anchorPoint,
                o = e.contentSize,
                n = t.getPosition(),
                r = new k(0, .5),
                s = V(this._progress),
                a = this._totalLength * s,
                h = o,
                l = 0,
                u = 0;

            switch (this._mode) {
              case Tn.HORIZONTAL:
                this._reverse && (r = new k(1, .5)), h = new N(a, o.height), l = this._totalLength, u = o.height;
                break;

              case Tn.VERTICAL:
                r = this._reverse ? new k(.5, 1) : new k(.5, 0), h = new N(o.width, a), l = o.width, u = this._totalLength;
            }

            if (this._mode === Tn.FILLED) this._barSprite.type !== yt.Type.FILLED ? M("ProgressBar FILLED mode only works when barSprite's Type is FILLED!") : (this._reverse && (a *= -1), this._barSprite.fillRange = a);else if (this._barSprite.type !== yt.Type.FILLED) {
              var _ = r.x - i.x,
                  p = r.y - i.y,
                  d = new c(l * _, u * p, 0);

              t.setPosition(n.x + d.x, n.y + d.y, n.z), e.setAnchorPoint(r), e.setContentSize(h);
            } else M("ProgressBar non-FILLED mode only works when barSprite's Type is non-FILLED!");
          }
        }, _(e, [{
          key: "barSprite",
          get: function get() {
            return this._barSprite;
          },
          set: function set(t) {
            this._barSprite !== t && (this._barSprite = t, this._initBarSprite());
          }
        }, {
          key: "mode",
          get: function get() {
            return this._mode;
          },
          set: function set(t) {
            if (this._mode !== t && (this._mode = t, this._barSprite)) {
              var e = this._barSprite.node;
              if (!e) return;
              var i = e._uiProps.uiTransformComp.contentSize;
              this._mode === Tn.HORIZONTAL ? this.totalLength = i.width : this._mode === Tn.VERTICAL ? this.totalLength = i.height : this._mode === Tn.FILLED && (this.totalLength = this._barSprite.fillRange);
            }
          }
        }, {
          key: "totalLength",
          get: function get() {
            return this._totalLength;
          },
          set: function set(t) {
            this._mode === Tn.FILLED && (t = V(t)), this._totalLength = t, this._updateBarStatus();
          }
        }, {
          key: "progress",
          get: function get() {
            return this._progress;
          },
          set: function set(t) {
            this._progress !== t && (this._progress = t, this._updateBarStatus());
          }
        }, {
          key: "reverse",
          get: function get() {
            return this._reverse;
          },
          set: function set(t) {
            this._reverse !== t && (this._reverse = t, this._barSprite && (this._barSprite.fillStart = 1 - this._barSprite.fillStart), this._updateBarStatus());
          }
        }]), e;
      }(E), bn.Mode = Tn, p((_n = mn).prototype, "barSprite", [on, nn], Object.getOwnPropertyDescriptor(_n.prototype, "barSprite"), _n.prototype), p(_n.prototype, "mode", [rn, sn], Object.getOwnPropertyDescriptor(_n.prototype, "mode"), _n.prototype), p(_n.prototype, "totalLength", [an], Object.getOwnPropertyDescriptor(_n.prototype, "totalLength"), _n.prototype), p(_n.prototype, "progress", [hn, F, ln], Object.getOwnPropertyDescriptor(_n.prototype, "progress"), _n.prototype), p(_n.prototype, "reverse", [cn], Object.getOwnPropertyDescriptor(_n.prototype, "reverse"), _n.prototype), pn = p(_n.prototype, "_barSprite", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), dn = p(_n.prototype, "_mode", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Tn.HORIZONTAL;
        }
      }), gn = p(_n.prototype, "_totalLength", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), fn = p(_n.prototype, "_progress", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .1;
        }
      }), yn = p(_n.prototype, "_reverse", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), un = _n)) || un) || un) || un) || un) || un)),
          qn = new c(),
          Kn = new c(),
          Jn = new c(),
          Qn = new k(),
          $n = new e(),
          tr = new k();

      !function (t) {
        t[t.HORIZONTAL = 0] = "HORIZONTAL", t[t.VERTICAL = 1] = "VERTICAL";
      }(Yn || (Yn = {})), i(Yn);

      var er,
          ir,
          or,
          nr,
          rr,
          sr,
          ar,
          hr,
          lr,
          cr,
          ur,
          _r,
          pr,
          dr,
          gr,
          fr,
          yr,
          br,
          mr,
          Tr,
          vr,
          Cr,
          Sr,
          Er,
          Or,
          Ar,
          wr,
          Lr,
          Dr,
          Pr,
          zr,
          Ir,
          Rr,
          xr,
          Br,
          Nr,
          Hr,
          Mr,
          kr,
          Vr,
          Fr,
          Gr,
          jr,
          Ur,
          Wr,
          Zr,
          Yr,
          Xr,
          qr,
          Kr = function (e) {
        return t({
          ScrollBar: e,
          ScrollBarComponent: e
        }), e;
      }((Sn = o("cc.ScrollBar"), En = d(), On = g(110), An = f(), wn = y(Ct), Ln = n(yt), Dn = b(), Pn = m(), zn = n(Yn), In = b(), Rn = m(), xn = b(), Bn = m(), Nn = b(), Hn = m(), Sn(Mn = En(Mn = On(Mn = An(Mn = wn((Zn = Wn = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "_scrollView", Vn, S(e)), C(e, "_handle", Fn, S(e)), C(e, "_direction", Gn, S(e)), C(e, "_enableAutoHide", jn, S(e)), C(e, "_autoHideTime", Un, S(e)), e._touching = !1, e._opacity = 255, e._autoHideRemainingTime = 0, e;
        }

        a(e, t);
        var i = e.prototype;
        return i.hide = function () {
          this._autoHideRemainingTime = 0, this._setOpacity(0);
        }, i.show = function () {
          this._autoHideRemainingTime = this._autoHideTime, this._setOpacity(this._opacity);
        }, i.onScroll = function (t) {
          if (this._scrollView) {
            var e = this._scrollView.content;

            if (e) {
              var i = e._uiProps.uiTransformComp.contentSize,
                  o = this._scrollView.node._uiProps.uiTransformComp.contentSize,
                  n = this.node._uiProps.uiTransformComp.contentSize;

              if (!this._conditionalDisableScrollBar(i, o)) {
                this._enableAutoHide && (this._autoHideRemainingTime = this._autoHideTime, this._setOpacity(this._opacity));
                var r = 0,
                    s = 0,
                    a = 0,
                    h = 0,
                    l = 0,
                    c = tr;
                c.set(0, 0), this._direction === Yn.HORIZONTAL ? (r = i.width, s = o.width, l = n.width, a = t.x, this._convertToScrollViewSpace(c, e), h = -c.x) : this._direction === Yn.VERTICAL && (r = i.height, s = o.height, l = n.height, a = t.y, this._convertToScrollViewSpace(c, e), h = -c.y);

                var u = this._calculateLength(r, s, l, a),
                    _ = tr;

                this._calculatePosition(_, r, s, l, h, a, u), this._updateLength(u), this._updateHandlerPosition(_);
              }
            }
          }
        }, i.setScrollView = function (t) {
          this._scrollView = t;
        }, i.onTouchBegan = function () {
          this._enableAutoHide && (this._touching = !0);
        }, i.onTouchEnded = function () {
          if (this._enableAutoHide && (this._touching = !1, !(this._autoHideTime <= 0))) {
            if (this._scrollView) {
              var t = this._scrollView.content;

              if (t) {
                var e = t._uiProps.uiTransformComp.contentSize,
                    i = this._scrollView.node._uiProps.uiTransformComp.contentSize;
                if (this._conditionalDisableScrollBar(e, i)) return;
              }
            }

            this._autoHideRemainingTime = this._autoHideTime;
          }
        }, i.onEnable = function () {
          var t = this.node.getComponent(yt);
          t && (this._opacity = t.color.a);
        }, i.start = function () {
          this._enableAutoHide && this._setOpacity(0);
        }, i.update = function (t) {
          this._processAutoHide(t);
        }, i._convertToScrollViewSpace = function (t, e) {
          var i = this._scrollView && this._scrollView.node._uiProps.uiTransformComp,
              o = e._uiProps.uiTransformComp;

          if (i && o) {
            qn.set(-o.anchorX * o.width, -o.anchorY * o.height, 0), o.convertToWorldSpaceAR(qn, Kn);
            var n = i.convertToNodeSpaceAR(Kn);
            n.x += i.anchorX * i.width, n.y += i.anchorY * i.height, t.set(n.x, n.y);
          } else t.set(k.ZERO);
        }, i._setOpacity = function (t) {
          if (this._handle) {
            var e = this.node.getComponent(yt);
            e && ($n.set(e.color), $n.a = t, e.color = $n), (e = this._handle.getComponent(yt)) && ($n.set(e.color), $n.a = t, e.color = $n);
          }
        }, i._updateHandlerPosition = function (t) {
          if (this._handle) {
            var e = Jn;
            this._fixupHandlerPosition(e), this._handle.node.setPosition(t.x + e.x, t.y + e.y, e.z);
          }
        }, i._fixupHandlerPosition = function (t) {
          var e = this.node._uiProps.uiTransformComp,
              i = e.contentSize,
              o = e.anchorPoint,
              n = this.handle.node._uiProps.uiTransformComp.contentSize,
              r = this.handle.node.parent;
          c.set(qn, -i.width * o.x, -i.height * o.y, 0);

          var s = this.node._uiProps.uiTransformComp.convertToWorldSpaceAR(qn, Kn),
              a = t;

          a.set(0, 0, 0), r._uiProps.uiTransformComp.convertToNodeSpaceAR(s, a), this.direction === Yn.HORIZONTAL ? a.set(a.x, a.y + (i.height - n.height) / 2, a.z) : this.direction === Yn.VERTICAL && a.set(a.x + (i.width - n.width) / 2, a.y, a.z), this.handle.node.setPosition(a);
        }, i._conditionalDisableScrollBar = function (t, e) {
          return t.width <= e.width && this._direction === Yn.HORIZONTAL || t.height <= e.height && this._direction === Yn.VERTICAL;
        }, i._calculateLength = function (t, e, i, o) {
          var n = t;
          return o && (n += 20 * (o > 0 ? o : -o)), i * (e / n);
        }, i._calculatePosition = function (t, e, i, o, n, r, s) {
          var a = e - i;
          r && (a += Math.abs(r));
          var h = 0;
          a && (h = V(h = n / a));
          var l = (o - s) * h;
          this._direction === Yn.VERTICAL ? t.set(0, l) : t.set(l, 0);
        }, i._updateLength = function (t) {
          if (this._handle) {
            var e = this._handle.node._uiProps.uiTransformComp,
                i = e.contentSize,
                o = e.anchorPoint;
            o.x === Qn.x && o.y === Qn.y || e.setAnchorPoint(Qn), this._direction === Yn.HORIZONTAL ? e.setContentSize(t, i.height) : e.setContentSize(i.width, t);
          }
        }, i._processAutoHide = function (t) {
          if (this._enableAutoHide && !(this._autoHideRemainingTime <= 0) && !this._touching && (this._autoHideRemainingTime -= t, this._autoHideRemainingTime <= this._autoHideTime)) {
            this._autoHideRemainingTime = Math.max(0, this._autoHideRemainingTime);
            var e = this._opacity * (this._autoHideRemainingTime / this._autoHideTime);

            this._setOpacity(e);
          }
        }, _(e, [{
          key: "handle",
          get: function get() {
            return this._handle;
          },
          set: function set(t) {
            this._handle !== t && (this._handle = t, this.onScroll(k.ZERO));
          }
        }, {
          key: "direction",
          get: function get() {
            return this._direction;
          },
          set: function set(t) {
            this._direction !== t && (this._direction = t, this.onScroll(k.ZERO));
          }
        }, {
          key: "enableAutoHide",
          get: function get() {
            return this._enableAutoHide;
          },
          set: function set(t) {
            this._enableAutoHide !== t && (this._enableAutoHide = t, this._enableAutoHide && this._setOpacity(0));
          }
        }, {
          key: "autoHideTime",
          get: function get() {
            return this._autoHideTime;
          },
          set: function set(t) {
            this._autoHideTime !== t && (this._autoHideTime = t);
          }
        }]), e;
      }(E), Wn.Direction = Yn, p((kn = Zn).prototype, "handle", [Ln, Dn, Pn], Object.getOwnPropertyDescriptor(kn.prototype, "handle"), kn.prototype), p(kn.prototype, "direction", [zn, In, Rn], Object.getOwnPropertyDescriptor(kn.prototype, "direction"), kn.prototype), p(kn.prototype, "enableAutoHide", [xn, Bn], Object.getOwnPropertyDescriptor(kn.prototype, "enableAutoHide"), kn.prototype), p(kn.prototype, "autoHideTime", [Nn, Hn], Object.getOwnPropertyDescriptor(kn.prototype, "autoHideTime"), kn.prototype), Vn = p(kn.prototype, "_scrollView", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Fn = p(kn.prototype, "_handle", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Gn = p(kn.prototype, "_direction", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Yn.HORIZONTAL;
        }
      }), jn = p(kn.prototype, "_enableAutoHide", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Un = p(kn.prototype, "_autoHideTime", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Mn = kn)) || Mn) || Mn) || Mn) || Mn) || Mn)),
          Jr = t("ViewGroup", o("cc.ViewGroup")(er = g(110)(er = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        return a(e, t), e;
      }(E)) || er) || er);

      L.ViewGroup = Jr;

      var Qr,
          $r = 1e-4,
          ts = new c(),
          es = new c(),
          is = new k(),
          os = new k(),
          ns = function ns() {
        return new Date().getMilliseconds();
      },
          rs = {
        "scroll-to-top": 0,
        "scroll-to-bottom": 1,
        "scroll-to-left": 2,
        "scroll-to-right": 3,
        scrolling: 4,
        "bounce-bottom": 6,
        "bounce-left": 7,
        "bounce-right": 8,
        "bounce-top": 5,
        "scroll-ended": 9,
        "touch-up": 10,
        "scroll-ended-with-threshold": 11,
        "scroll-began": 12
      };

      !function (t) {
        t.SCROLL_TO_TOP = "scroll-to-top", t.SCROLL_TO_BOTTOM = "scroll-to-bottom", t.SCROLL_TO_LEFT = "scroll-to-left", t.SCROLL_TO_RIGHT = "scroll-to-right", t.SCROLL_BEGAN = "scroll-began", t.SCROLL_ENDED = "scroll-ended", t.BOUNCE_TOP = "bounce-top", t.BOUNCE_BOTTOM = "bounce-bottom", t.BOUNCE_LEFT = "bounce-left", t.BOUNCE_RIGHT = "bounce-right", t.SCROLLING = "scrolling", t.SCROLL_ENG_WITH_THRESHOLD = "scroll-ended-with-threshold", t.TOUCH_UP = "touch-up";
      }(Qr || (Qr = {}));

      var ss,
          as,
          hs,
          ls,
          cs,
          us,
          _s,
          ps,
          ds,
          gs,
          fs,
          ys,
          bs,
          ms,
          Ts,
          vs,
          Cs,
          Ss,
          Es,
          Os,
          As,
          ws,
          Ls = function (e) {
        return t({
          ScrollView: e,
          ScrollViewComponent: e
        }), e;
      }((ir = o("cc.ScrollView"), or = d(), nr = g(110), rr = f(), sr = y(Ct), ar = G(), hr = b(), lr = m(), cr = G(), ur = b(), _r = m(), pr = b(), dr = m(), gr = b(), fr = m(), yr = n(r), br = b(), mr = m(), Tr = b(), vr = m(), Cr = n(Kr), Sr = b(), Er = m(), Or = b(), Ar = m(), wr = n(Kr), Lr = b(), Dr = m(), Pr = b(), zr = m(), Ir = n([st]), Rr = b(), xr = m(), ir(Br = or(Br = nr(Br = rr(Br = sr((qr = Xr = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "bounceDuration", Hr, S(e)), C(e, "brake", Mr, S(e)), C(e, "elastic", kr, S(e)), C(e, "inertia", Vr, S(e)), C(e, "horizontal", Fr, S(e)), C(e, "vertical", Gr, S(e)), C(e, "cancelInnerEvents", jr, S(e)), C(e, "scrollEvents", Ur, S(e)), e._autoScrolling = !1, e._scrolling = !1, C(e, "_content", Wr, S(e)), C(e, "_horizontalScrollBar", Zr, S(e)), C(e, "_verticalScrollBar", Yr, S(e)), e._topBoundary = 0, e._bottomBoundary = 0, e._leftBoundary = 0, e._rightBoundary = 0, e._touchMoveDisplacements = [], e._touchMoveTimeDeltas = [], e._touchMovePreviousTimestamp = 0, e._touchMoved = !1, e._autoScrollAttenuate = !1, e._autoScrollStartPosition = new c(), e._autoScrollTargetDelta = new c(), e._autoScrollTotalTime = 0, e._autoScrollAccumulatedTime = 0, e._autoScrollCurrentlyOutOfBoundary = !1, e._autoScrollBraking = !1, e._autoScrollBrakingStartPosition = new c(), e._outOfBoundaryAmount = new c(), e._outOfBoundaryAmountDirty = !0, e._stopMouseWheel = !1, e._mouseWheelEventElapsedTime = 0, e._isScrollEndedWithThresholdEventFired = !1, e._scrollEventEmitMask = 0, e._isBouncing = !1, e._contentPos = new c(), e._deltaPos = new c(), e;
        }

        a(e, t);
        var i = e.prototype;
        return i.scrollToBottom = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(0, 0),
            applyToHorizontal: !1,
            applyToVertical: !0
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i, !0);
        }, i.scrollToTop = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(0, 1),
            applyToHorizontal: !1,
            applyToVertical: !0
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
        }, i.scrollToLeft = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(0, 0),
            applyToHorizontal: !0,
            applyToVertical: !1
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
        }, i.scrollToRight = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(1, 0),
            applyToHorizontal: !0,
            applyToVertical: !1
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
        }, i.scrollToTopLeft = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(0, 1),
            applyToHorizontal: !0,
            applyToVertical: !0
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
        }, i.scrollToTopRight = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(1, 1),
            applyToHorizontal: !0,
            applyToVertical: !0
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
        }, i.scrollToBottomLeft = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(0, 0),
            applyToHorizontal: !0,
            applyToVertical: !0
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
        }, i.scrollToBottomRight = function (t, e) {
          void 0 === e && (e = !0);

          var i = this._calculateMovePercentDelta({
            anchor: new k(1, 0),
            applyToHorizontal: !0,
            applyToVertical: !0
          });

          t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
        }, i.scrollToOffset = function (t, e, i) {
          void 0 === i && (i = !0);
          var o = this.getMaxScrollOffset(),
              n = new k(0, 0);
          0 === o.x ? n.x = 0 : n.x = t.x / o.x, 0 === o.y ? n.y = 1 : n.y = (o.y - t.y) / o.y, this.scrollTo(n, e, i);
        }, i.getScrollOffset = function () {
          var t = this._getContentTopBoundary() - this._topBoundary,
              e = this._getContentLeftBoundary() - this._leftBoundary;

          return new k(e, t);
        }, i.getMaxScrollOffset = function () {
          if (!this._content || !this.view) return k.ZERO;
          var t = this._content._uiProps.uiTransformComp.contentSize,
              e = t.width - this.view.width,
              i = t.height - this.view.height;
          return new k(e = e >= 0 ? e : 0, i = i >= 0 ? i : 0);
        }, i.scrollToPercentHorizontal = function (t, e, i) {
          var o = this._calculateMovePercentDelta({
            anchor: new k(t, 0),
            applyToHorizontal: !0,
            applyToVertical: !1
          });

          e ? this._startAutoScroll(o, e, !1 !== i) : this._moveContent(o);
        }, i.scrollTo = function (t, e, i) {
          var o = this._calculateMovePercentDelta({
            anchor: new k(t),
            applyToHorizontal: !0,
            applyToVertical: !0
          });

          e ? this._startAutoScroll(o, e, i) : this._moveContent(o);
        }, i.scrollToPercentVertical = function (t, e, i) {
          var o = this._calculateMovePercentDelta({
            anchor: new k(0, t),
            applyToHorizontal: !1,
            applyToVertical: !0
          });

          e ? this._startAutoScroll(o, e, i) : this._moveContent(o);
        }, i.stopAutoScroll = function () {
          this._autoScrolling = !1, this._autoScrollAccumulatedTime = this._autoScrollTotalTime;
        }, i.setContentPosition = function (t) {
          this._setContentPosition(t);
        }, i._setContentPosition = function (t) {
          if (this._content) {
            var e = this._getContentPosition();

            Math.abs(t.x - e.x) < $r && Math.abs(t.y - e.y) < $r || (this._content.setPosition(t), this._outOfBoundaryAmountDirty = !0);
          }
        }, i.getContentPosition = function () {
          return this._getContentPosition();
        }, i._getContentPosition = function () {
          return this._content ? (this._contentPos.set(this._content.position), this._contentPos) : c.ZERO.clone();
        }, i.isScrolling = function () {
          return this._scrolling;
        }, i.isAutoScrolling = function () {
          return this._autoScrolling;
        }, i.getScrollEndedEventTiming = function () {
          return $r;
        }, i.start = function () {
          this._calculateBoundary(), this._content && at.once(ht.EVENT_BEFORE_DRAW, this._adjustContentOutOfBoundary, this);
        }, i.onEnable = function () {
          this._registerEvent(), this._content && (this._content.on(l.SIZE_CHANGED, this._calculateBoundary, this), this._content.on(l.TRANSFORM_CHANGED, this._scaleChanged, this), this.view && (this.view.node.on(l.TRANSFORM_CHANGED, this._scaleChanged, this), this.view.node.on(l.SIZE_CHANGED, this._calculateBoundary, this))), this._calculateBoundary(), this._updateScrollBarState();
        }, i.update = function (t) {
          this._autoScrolling && this._processAutoScrolling(t);
        }, i.onDisable = function () {
          this._unregisterEvent(), this._content && (this._content.off(l.SIZE_CHANGED, this._calculateBoundary, this), this._content.off(l.TRANSFORM_CHANGED, this._scaleChanged, this), this.view && (this.view.node.off(l.TRANSFORM_CHANGED, this._scaleChanged, this), this.view.node.off(l.SIZE_CHANGED, this._calculateBoundary, this))), this._hideScrollBar(), this.stopAutoScroll();
        }, i._registerEvent = function () {
          this.node.on(l.TOUCH_START, this._onTouchBegan, this, !0), this.node.on(l.TOUCH_MOVE, this._onTouchMoved, this, !0), this.node.on(l.TOUCH_END, this._onTouchEnded, this, !0), this.node.on(l.TOUCH_CANCEL, this._onTouchCancelled, this, !0), this.node.on(l.MOUSE_WHEEL, this._onMouseWheel, this, !0);
        }, i._unregisterEvent = function () {
          this.node.off(l.TOUCH_START, this._onTouchBegan, this, !0), this.node.off(l.TOUCH_MOVE, this._onTouchMoved, this, !0), this.node.off(l.TOUCH_END, this._onTouchEnded, this, !0), this.node.off(l.TOUCH_CANCEL, this._onTouchCancelled, this, !0), this.node.off(l.MOUSE_WHEEL, this._onMouseWheel, this, !0);
        }, i._onMouseWheel = function (t, e) {
          if (this.enabledInHierarchy && !this._hasNestedViewGroup(t, e)) {
            var i = new c(),
                o = t.getScrollY();
            this.vertical ? i.set(0, -.1 * o, 0) : this.horizontal && i.set(-.1 * o, 0, 0), this._mouseWheelEventElapsedTime = 0, this._processDeltaMove(i), this._stopMouseWheel || (this._handlePressLogic(), this.schedule(this._checkMouseWheel, 1 / 60, NaN, 0), this._stopMouseWheel = !0), this._stopPropagationIfTargetIsMe(t);
          }
        }, i._onTouchBegan = function (t, e) {
          this.enabledInHierarchy && this._content && (this._hasNestedViewGroup(t, e) || (this._handlePressLogic(), this._touchMoved = !1, this._stopPropagationIfTargetIsMe(t)));
        }, i._onTouchMoved = function (t, e) {
          if (this.enabledInHierarchy && this._content && !this._hasNestedViewGroup(t, e)) {
            var i = t.touch;

            if (this._handleMoveLogic(i), this.cancelInnerEvents) {
              var o = i.getUILocation(is);

              if (o.subtract(i.getUIStartLocation(os)), o.length() > 7 && !this._touchMoved && t.target !== this.node) {
                var n = new pt(t.getTouches(), t.bubbles, j.TOUCH_CANCEL);
                n.touch = t.touch, n.simulate = !0, t.target.dispatchEvent(n), this._touchMoved = !0;
              }

              this._stopPropagationIfTargetIsMe(t);
            }
          }
        }, i._onTouchEnded = function (t, e) {
          if (this.enabledInHierarchy && this._content && t && !this._hasNestedViewGroup(t, e)) {
            this._dispatchEvent(Qr.TOUCH_UP);

            var i = t.touch;
            this._handleReleaseLogic(i), this._touchMoved ? t.propagationStopped = !0 : this._stopPropagationIfTargetIsMe(t);
          }
        }, i._onTouchCancelled = function (t, e) {
          if (this.enabledInHierarchy && this._content && !this._hasNestedViewGroup(t, e)) {
            if (t && !t.simulate) {
              var i = t.touch;

              this._handleReleaseLogic(i);
            }

            this._stopPropagationIfTargetIsMe(t);
          }
        }, i._calculateBoundary = function () {
          if (this._content && this.view) {
            var t = this._content.getComponent(Cn);

            t && t.enabledInHierarchy && t.updateLayout();
            var e = this.view,
                i = e.width * e.anchorX,
                o = e.height * e.anchorY;
            this._leftBoundary = -i, this._bottomBoundary = -o, this._rightBoundary = this._leftBoundary + e.width, this._topBoundary = this._bottomBoundary + e.height, this._moveContentToTopLeft(e.contentSize);
          }
        }, i._hasNestedViewGroup = function (t, e) {
          if (!t || t.eventPhase !== U.CAPTURING_PHASE) return !1;
          if (e) for (var i, o = W(e); !(i = o()).done;) {
            var n = i.value;
            if (this.node === n) return !(!t.target || !t.target.getComponent(Jr));
            if (n.getComponent(Jr)) return !0;
          }
          return !1;
        }, i._startInertiaScroll = function (t) {
          var e = new c(t);
          e.multiplyScalar(.7), this._startAttenuatingAutoScroll(e, t);
        }, i._calculateAttenuatedFactor = function (t) {
          return this.brake <= 0 ? 1 - this.brake : (1 - this.brake) * (1 / (1 + 14e-6 * t + t * t * 8e-9));
        }, i._startAttenuatingAutoScroll = function (t, e) {
          var i = t.clone();

          if (i.normalize(), this._content && this.view) {
            var o = this._content._uiProps.uiTransformComp.contentSize,
                n = this.view.contentSize,
                r = o.width - n.width,
                s = o.height - n.height,
                a = this._calculateAttenuatedFactor(r),
                h = this._calculateAttenuatedFactor(s);

            i.x = i.x * r * (1 - this.brake) * a, i.y = i.y * s * h * (1 - this.brake), i.z = 0;
          }

          var l = t.length(),
              c = i.length() / l;

          if (i.add(t), this.brake > 0 && c > 7) {
            c = Math.sqrt(c);
            var u = t.clone();
            u.multiplyScalar(c), i.set(u), i.add(t);
          }

          var _ = this._calculateAutoScrollTimeByInitialSpeed(e.length());

          this.brake > 0 && c > 3 && (_ *= c = 3), 0 === this.brake && c > 1 && (_ *= c), this._startAutoScroll(i, _, !0);
        }, i._calculateAutoScrollTimeByInitialSpeed = function (t) {
          return Math.sqrt(Math.sqrt(t / 5));
        }, i._startAutoScroll = function (t, e, i) {
          void 0 === i && (i = !1);

          var o = this._flattenVectorByDirection(t);

          this._autoScrolling = !0, this._autoScrollTargetDelta = o, this._autoScrollAttenuate = i, c.copy(this._autoScrollStartPosition, this._getContentPosition()), this._autoScrollTotalTime = e, this._autoScrollAccumulatedTime = 0, this._autoScrollBraking = !1, this._isScrollEndedWithThresholdEventFired = !1, this._autoScrollBrakingStartPosition.set(0, 0, 0), this._getHowMuchOutOfBoundary().equals(c.ZERO, $r) || (this._autoScrollCurrentlyOutOfBoundary = !0);
        }, i._calculateTouchMoveVelocity = function () {
          var t = new c(),
              e = 0;
          if ((e = this._touchMoveTimeDeltas.reduce(function (t, e) {
            return t + e;
          }, e)) <= 0 || e >= .5) t.set(c.ZERO);else {
            var i = new c();
            i = this._touchMoveDisplacements.reduce(function (t, e) {
              return t.add(e), t;
            }, i), t.set(i.x * (1 - this.brake) / e, i.y * (1 - this.brake) / e, i.z);
          }
          return t;
        }, i._flattenVectorByDirection = function (t) {
          var e = t;
          return e.x = this.horizontal ? e.x : 0, e.y = this.vertical ? e.y : 0, e;
        }, i._moveContent = function (t, e) {
          var i = this._flattenVectorByDirection(t);

          ts.set(this._getContentPosition()), ts.add(i), ts.set(Math.floor(1e4 * ts.x) * $r, Math.floor(1e4 * ts.y) * $r, ts.z), this._setContentPosition(ts);

          var o = this._getHowMuchOutOfBoundary();

          is.set(o.x, o.y), this._updateScrollBar(is), this.elastic && e && this._startBounceBackIfNeeded();
        }, i._getContentLeftBoundary = function () {
          if (!this._content) return -1;

          var t = this._getContentPosition(),
              e = this._content._uiProps.uiTransformComp;

          return t.x - e.anchorX * e.width;
        }, i._getContentRightBoundary = function () {
          if (!this._content) return -1;
          var t = this._content._uiProps.uiTransformComp;
          return this._getContentLeftBoundary() + t.width;
        }, i._getContentTopBoundary = function () {
          if (!this._content) return -1;
          var t = this._content._uiProps.uiTransformComp;
          return this._getContentBottomBoundary() + t.height;
        }, i._getContentBottomBoundary = function () {
          if (!this._content) return -1;

          var t = this._getContentPosition(),
              e = this._content._uiProps.uiTransformComp;

          return t.y - e.anchorY * e.height;
        }, i._getHowMuchOutOfBoundary = function (t) {
          if ((t = t || new c()).equals(c.ZERO, $r) && !this._outOfBoundaryAmountDirty) return this._outOfBoundaryAmount;
          var e = new c();
          return this._getContentLeftBoundary() + t.x > this._leftBoundary ? e.x = this._leftBoundary - (this._getContentLeftBoundary() + t.x) : this._getContentRightBoundary() + t.x < this._rightBoundary && (e.x = this._rightBoundary - (this._getContentRightBoundary() + t.x)), this._getContentTopBoundary() + t.y < this._topBoundary ? e.y = this._topBoundary - (this._getContentTopBoundary() + t.y) : this._getContentBottomBoundary() + t.y > this._bottomBoundary && (e.y = this._bottomBoundary - (this._getContentBottomBoundary() + t.y)), t.equals(c.ZERO, $r) && (this._outOfBoundaryAmount = e, this._outOfBoundaryAmountDirty = !1), this._clampDelta(e), e;
        }, i._updateScrollBar = function (t) {
          this._horizontalScrollBar && this._horizontalScrollBar.onScroll(t), this.verticalScrollBar && this.verticalScrollBar.onScroll(t);
        }, i._onScrollBarTouchBegan = function () {
          this._horizontalScrollBar && this._horizontalScrollBar.onTouchBegan(), this.verticalScrollBar && this.verticalScrollBar.onTouchBegan();
        }, i._onScrollBarTouchEnded = function () {
          this._horizontalScrollBar && this._horizontalScrollBar.onTouchEnded(), this.verticalScrollBar && this.verticalScrollBar.onTouchEnded();
        }, i._dispatchEvent = function (t) {
          if (t === Qr.SCROLL_ENDED) this._scrollEventEmitMask = 0;else if (t === Qr.SCROLL_TO_TOP || t === Qr.SCROLL_TO_BOTTOM || t === Qr.SCROLL_TO_LEFT || t === Qr.SCROLL_TO_RIGHT) {
            var e = 1 << rs[t];
            if (this._scrollEventEmitMask & e) return;
            this._scrollEventEmitMask |= e;
          }
          st.emitEvents(this.scrollEvents, this, rs[t]), this.node.emit(t, this);
        }, i._adjustContentOutOfBoundary = function () {
          if (this._content && (this._outOfBoundaryAmountDirty = !0, this._isOutOfBoundary())) {
            var t = this._getHowMuchOutOfBoundary();

            ts.set(this._getContentPosition()), ts.add(t), this._content.setPosition(ts), this._updateScrollBar(k.ZERO);
          }
        }, i._hideScrollBar = function () {
          this._horizontalScrollBar && this._horizontalScrollBar.hide(), this._verticalScrollBar && this._verticalScrollBar.hide();
        }, i._updateScrollBarState = function () {
          if (this._content && this.view) {
            var t = this.view,
                e = this._content._uiProps.uiTransformComp;
            this.verticalScrollBar && (e.height < t.height ? this.verticalScrollBar.hide() : this.verticalScrollBar.show()), this.horizontalScrollBar && (e.width < t.width ? this.horizontalScrollBar.hide() : this.horizontalScrollBar.show());
          }
        }, i._stopPropagationIfTargetIsMe = function (t) {
          t.eventPhase === U.AT_TARGET && t.target === this.node && (t.propagationStopped = !0);
        }, i._processDeltaMove = function (t) {
          this._scrollChildren(t), this._gatherTouchMove(t);
        }, i._handleMoveLogic = function (t) {
          this._getLocalAxisAlignDelta(this._deltaPos, t), this._processDeltaMove(this._deltaPos);
        }, i._handleReleaseLogic = function (t) {
          this._getLocalAxisAlignDelta(this._deltaPos, t), this._gatherTouchMove(this._deltaPos), this._processInertiaScroll(), this._scrolling && (this._scrolling = !1, this._autoScrolling || this._dispatchEvent(Qr.SCROLL_ENDED));
        }, i._getLocalAxisAlignDelta = function (t, e) {
          var i = this.node._uiProps.uiTransformComp,
              o = new c();
          i && (e.getUILocation(is), e.getUIPreviousLocation(os), ts.set(is.x, is.y, 0), es.set(os.x, os.y, 0), i.convertToNodeSpaceAR(ts, ts), i.convertToNodeSpaceAR(es, es), c.subtract(o, ts, es)), t.set(o);
        }, i._scrollChildren = function (t) {
          this._clampDelta(t);

          var e,
              i,
              o = t;

          if (this.elastic && (e = this._getHowMuchOutOfBoundary(), o.x *= 0 === e.x ? 1 : .5, o.y *= 0 === e.y ? 1 : .5), this.elastic || (e = this._getHowMuchOutOfBoundary(o), o.add(e)), this._content) {
            var n = this._content._uiProps.uiTransformComp,
                r = n.anchorX,
                s = n.anchorY,
                a = n.width,
                h = n.height,
                l = this._content.position || c.ZERO;
            o.y > 0 ? l.y - s * h + o.y >= this._bottomBoundary && (i = Qr.SCROLL_TO_BOTTOM) : o.y < 0 && l.y - s * h + h + o.y <= this._topBoundary && (i = Qr.SCROLL_TO_TOP), o.x < 0 ? l.x - r * a + a + o.x <= this._rightBoundary && (i = Qr.SCROLL_TO_RIGHT) : o.x > 0 && l.x - r * a + o.x >= this._leftBoundary && (i = Qr.SCROLL_TO_LEFT);
          }

          this._moveContent(o, !1), 0 === o.x && 0 === o.y || (this._scrolling || (this._scrolling = !0, this._dispatchEvent(Qr.SCROLL_BEGAN)), this._dispatchEvent(Qr.SCROLLING)), i && i.length > 0 && this._dispatchEvent(i);
        }, i._handlePressLogic = function () {
          this._autoScrolling && this._dispatchEvent(Qr.SCROLL_ENDED), this._autoScrolling = !1, this._isBouncing = !1, this._touchMovePreviousTimestamp = ns(), this._touchMoveDisplacements.length = 0, this._touchMoveTimeDeltas.length = 0, this._onScrollBarTouchBegan();
        }, i._clampDelta = function (t) {
          if (this._content && this.view) {
            var e = this.view.contentSize,
                i = this._content._uiProps.uiTransformComp;
            i.width < e.width && (t.x = 0), i.height < e.height && (t.y = 0);
          }
        }, i._gatherTouchMove = function (t) {
          var e = t.clone();

          for (this._clampDelta(e); this._touchMoveDisplacements.length >= 5;) {
            this._touchMoveDisplacements.shift(), this._touchMoveTimeDeltas.shift();
          }

          this._touchMoveDisplacements.push(e);

          var i = ns();
          this._touchMoveTimeDeltas.push((i - this._touchMovePreviousTimestamp) / 1e3), this._touchMovePreviousTimestamp = i;
        }, i._startBounceBackIfNeeded = function () {
          if (!this.elastic) return !1;

          var t = this._getHowMuchOutOfBoundary();

          if (this._clampDelta(t), t.equals(c.ZERO, $r)) return !1;
          var e = Math.max(this.bounceDuration, 0);
          return this._startAutoScroll(t, e, !0), this._isBouncing || (t.y > 0 && this._dispatchEvent(Qr.BOUNCE_TOP), t.y < 0 && this._dispatchEvent(Qr.BOUNCE_BOTTOM), t.x > 0 && this._dispatchEvent(Qr.BOUNCE_RIGHT), t.x < 0 && this._dispatchEvent(Qr.BOUNCE_LEFT), this._isBouncing = !0), !0;
        }, i._processInertiaScroll = function () {
          if (!this._startBounceBackIfNeeded() && this.inertia) {
            var t = this._calculateTouchMoveVelocity();

            !t.equals(ts, $r) && this.brake < 1 && this._startInertiaScroll(t);
          }

          this._onScrollBarTouchEnded();
        }, i._isOutOfBoundary = function () {
          return !this._getHowMuchOutOfBoundary().equals(c.ZERO, $r);
        }, i._isNecessaryAutoScrollBrake = function () {
          if (this._autoScrollBraking) return !0;

          if (this._isOutOfBoundary()) {
            if (!this._autoScrollCurrentlyOutOfBoundary) return this._autoScrollCurrentlyOutOfBoundary = !0, this._autoScrollBraking = !0, this._autoScrollBrakingStartPosition = this._getContentPosition(), !0;
          } else this._autoScrollCurrentlyOutOfBoundary = !1;

          return !1;
        }, i._processAutoScrolling = function (t) {
          var e = this._isNecessaryAutoScrollBrake(),
              i = e ? .05 : 1;

          this._autoScrollAccumulatedTime += t * (1 / i);
          var o,
              n = Math.min(1, this._autoScrollAccumulatedTime / this._autoScrollTotalTime);
          this._autoScrollAttenuate && (o = n, n = (o -= 1) * o * o * o * o + 1);

          var r = this._autoScrollTargetDelta.clone();

          r.multiplyScalar(n);

          var s = this._autoScrollStartPosition.clone();

          s.add(r);
          var a = Math.abs(n - 1) <= $r;

          if (Math.abs(n - 1) <= this.getScrollEndedEventTiming() && !this._isScrollEndedWithThresholdEventFired && (this._dispatchEvent(Qr.SCROLL_ENG_WITH_THRESHOLD), this._isScrollEndedWithThresholdEventFired = !0), this.elastic) {
            var h = s.clone();
            h.subtract(this._autoScrollBrakingStartPosition), e && h.multiplyScalar(i), s.set(this._autoScrollBrakingStartPosition), s.add(h);
          } else {
            var l = s.clone();
            l.subtract(this.getContentPosition());

            var u = this._getHowMuchOutOfBoundary(l);

            u.equals(c.ZERO, $r) || (s.add(u), a = !0);
          }

          a && (this._autoScrolling = !1);

          var _ = s.clone();

          _.subtract(this._getContentPosition()), this._clampDelta(_), this._moveContent(_, a), this._dispatchEvent(Qr.SCROLLING), this._autoScrolling || (this._isBouncing = !1, this._scrolling = !1, this._dispatchEvent(Qr.SCROLL_ENDED));
        }, i._checkMouseWheel = function (t) {
          if (!this._getHowMuchOutOfBoundary().equals(c.ZERO, $r)) return this._processInertiaScroll(), this.unschedule(this._checkMouseWheel), this._dispatchEvent(Qr.SCROLL_ENDED), void (this._stopMouseWheel = !1);
          this._mouseWheelEventElapsedTime += t, this._mouseWheelEventElapsedTime > .1 && (this._onScrollBarTouchEnded(), this.unschedule(this._checkMouseWheel), this._dispatchEvent(Qr.SCROLL_ENDED), this._stopMouseWheel = !1);
        }, i._calculateMovePercentDelta = function (t) {
          var e = t.anchor,
              i = t.applyToHorizontal,
              o = t.applyToVertical;
          this._calculateBoundary(), e.clampf(k.ZERO, k.ONE);

          var n = this._getContentBottomBoundary() - this._bottomBoundary;

          n = -n;

          var r = this._getContentLeftBoundary() - this._leftBoundary;

          r = -r;
          var s = new c();

          if (this._content && this.view) {
            var a = 0,
                h = this._content._uiProps.uiTransformComp.contentSize,
                l = this.view.contentSize;
            i && (a = h.width - l.width, s.x = r - a * e.x), o && (a = h.height - l.height, s.y = n - a * e.y);
          }

          return s;
        }, i._moveContentToTopLeft = function (t) {
          var e = this._getContentBottomBoundary() - this._bottomBoundary;

          e = -e;

          var i = new c(),
              o = 0,
              n = this._getContentLeftBoundary() - this._leftBoundary;

          if (n = -n, this._content) {
            var r = this._content._uiProps.uiTransformComp.contentSize;
            r.height < t.height && (o = r.height - t.height, i.y = e - o), r.width < t.width && (o = r.width - t.width, i.x = n);
          }

          this._updateScrollBarState(), this._moveContent(i), this._adjustContentOutOfBoundary();
        }, i._scaleChanged = function (t) {
          t === u.SCALE && this._calculateBoundary();
        }, _(e, [{
          key: "content",
          get: function get() {
            return this._content;
          },
          set: function set(t) {
            if (this._content !== t) {
              var e = t && t.parent && t.parent._uiProps.uiTransformComp;
              !t || t && e ? (this._content = t, this._calculateBoundary()) : Z(4302);
            }
          }
        }, {
          key: "horizontalScrollBar",
          get: function get() {
            return this._horizontalScrollBar;
          },
          set: function set(t) {
            this._horizontalScrollBar !== t && (this._horizontalScrollBar = t, this._horizontalScrollBar && (this._horizontalScrollBar.setScrollView(this), this._updateScrollBar(k.ZERO)));
          }
        }, {
          key: "verticalScrollBar",
          get: function get() {
            return this._verticalScrollBar;
          },
          set: function set(t) {
            this._verticalScrollBar !== t && (this._verticalScrollBar = t, this._verticalScrollBar && (this._verticalScrollBar.setScrollView(this), this._updateScrollBar(k.ZERO)));
          }
        }, {
          key: "view",
          get: function get() {
            var t = this._content && this._content.parent;
            return t ? t._uiProps.uiTransformComp : null;
          }
        }]), e;
      }(Jr), Xr.EventType = Qr, Hr = p((Nr = qr).prototype, "bounceDuration", [O, ar, hr, lr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Mr = p(Nr.prototype, "brake", [O, cr, ur, _r], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .5;
        }
      }), kr = p(Nr.prototype, "elastic", [O, pr, dr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Vr = p(Nr.prototype, "inertia", [O, gr, fr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), p(Nr.prototype, "content", [yr, br, mr], Object.getOwnPropertyDescriptor(Nr.prototype, "content"), Nr.prototype), Fr = p(Nr.prototype, "horizontal", [O, Tr, vr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), p(Nr.prototype, "horizontalScrollBar", [Cr, Sr, Er], Object.getOwnPropertyDescriptor(Nr.prototype, "horizontalScrollBar"), Nr.prototype), Gr = p(Nr.prototype, "vertical", [O, Or, Ar], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), p(Nr.prototype, "verticalScrollBar", [wr, Lr, Dr], Object.getOwnPropertyDescriptor(Nr.prototype, "verticalScrollBar"), Nr.prototype), jr = p(Nr.prototype, "cancelInnerEvents", [O, Pr, zr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Ur = p(Nr.prototype, "scrollEvents", [Ir, O, Rr, xr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Wr = p(Nr.prototype, "_content", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Zr = p(Nr.prototype, "_horizontalScrollBar", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Yr = p(Nr.prototype, "_verticalScrollBar", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Br = Nr)) || Br) || Br) || Br) || Br) || Br)),
          Ds = new c();

      !function (t) {
        t[t.Horizontal = 0] = "Horizontal", t[t.Vertical = 1] = "Vertical";
      }(ws || (ws = {})), i(ws);

      var Ps,
          zs,
          Is,
          Rs,
          xs,
          Bs,
          Ns,
          Hs,
          Ms,
          ks,
          Vs,
          Fs,
          Gs,
          js,
          Us,
          Ws,
          Zs,
          Ys,
          Xs,
          qs,
          Ks = function (e) {
        return t({
          Slider: e,
          SliderComponent: e
        }), e;
      }((ss = o("cc.Slider"), as = d(), hs = g(110), ls = f(), cs = y(Ct), us = n(yt), _s = m(), ps = n(ws), ds = m(), gs = G(), fs = m(), ys = n([st]), bs = m(), ss(ms = as(ms = hs(ms = ls(ms = cs((As = Os = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "slideEvents", vs, S(e)), C(e, "_handle", Cs, S(e)), C(e, "_direction", Ss, S(e)), C(e, "_progress", Es, S(e)), e._offset = new c(), e._dragging = !1, e._touchHandle = !1, e._handleLocalPos = new c(), e._touchPos = new c(), e;
        }

        a(e, t);
        var i = e.prototype;
        return i.__preload = function () {
          this._updateHandlePosition();
        }, i.onEnable = function () {
          this._updateHandlePosition(), this.node.on(l.TOUCH_START, this._onTouchBegan, this), this.node.on(l.TOUCH_MOVE, this._onTouchMoved, this), this.node.on(l.TOUCH_END, this._onTouchEnded, this), this.node.on(l.TOUCH_CANCEL, this._onTouchCancelled, this), this._handle && this._handle.isValid && (this._handle.node.on(l.TOUCH_START, this._onHandleDragStart, this), this._handle.node.on(l.TOUCH_MOVE, this._onTouchMoved, this), this._handle.node.on(l.TOUCH_END, this._onTouchEnded, this));
        }, i.onDisable = function () {
          this.node.off(l.TOUCH_START, this._onTouchBegan, this), this.node.off(l.TOUCH_MOVE, this._onTouchMoved, this), this.node.off(l.TOUCH_END, this._onTouchEnded, this), this.node.off(l.TOUCH_CANCEL, this._onTouchCancelled, this), this._handle && this._handle.isValid && (this._handle.node.off(l.TOUCH_START, this._onHandleDragStart, this), this._handle.node.off(l.TOUCH_MOVE, this._onTouchMoved, this), this._handle.node.off(l.TOUCH_END, this._onTouchEnded, this));
        }, i._onHandleDragStart = function (t) {
          if (t && this._handle && this._handle.node._uiProps.uiTransformComp) {
            this._dragging = !0, this._touchHandle = !0;
            var e = t.touch.getUILocation();
            c.set(this._touchPos, e.x, e.y, 0), this._handle.node._uiProps.uiTransformComp.convertToNodeSpaceAR(this._touchPos, this._offset), t.propagationStopped = !0;
          }
        }, i._onTouchBegan = function (t) {
          this._handle && t && (this._dragging = !0, this._touchHandle || this._handleSliderLogic(t.touch), t.propagationStopped = !0);
        }, i._onTouchMoved = function (t) {
          this._dragging && t && (this._handleSliderLogic(t.touch), t.propagationStopped = !0);
        }, i._onTouchEnded = function (t) {
          this._dragging = !1, this._touchHandle = !1, this._offset = new c(), t && (t.propagationStopped = !0);
        }, i._onTouchCancelled = function (t) {
          this._dragging = !1, t && (t.propagationStopped = !0);
        }, i._handleSliderLogic = function (t) {
          this._updateProgress(t), this._emitSlideEvent();
        }, i._emitSlideEvent = function () {
          st.emitEvents(this.slideEvents, this), this.node.emit("slide", this);
        }, i._updateProgress = function (t) {
          if (this._handle && t) {
            var e = t.getUILocation();
            c.set(this._touchPos, e.x, e.y, 0);
            var i = this.node._uiProps.uiTransformComp,
                o = i.convertToNodeSpaceAR(this._touchPos, Ds);
            this.direction === ws.Horizontal ? this.progress = V(.5 + (o.x - this._offset.x) / i.width) : this.progress = V(.5 + (o.y - this._offset.y) / i.height);
          }
        }, i._updateHandlePosition = function () {
          if (this._handle) {
            this._handleLocalPos.set(this._handle.node.getPosition());

            var t = this.node._uiProps.uiTransformComp;
            this._direction === ws.Horizontal ? this._handleLocalPos.x = -t.width * t.anchorX + this.progress * t.width : this._handleLocalPos.y = -t.height * t.anchorY + this.progress * t.height, this._handle.node.setPosition(this._handleLocalPos);
          }
        }, i._changeLayout = function () {
          var t = this.node._uiProps.uiTransformComp,
              e = t.contentSize;

          if (t.setContentSize(e.height, e.width), this._handle) {
            var i = this._handle.node.position;
            this._direction === ws.Horizontal ? this._handle.node.setPosition(i.x, 0, i.z) : this._handle.node.setPosition(0, i.y, i.z), this._updateHandlePosition();
          }
        }, _(e, [{
          key: "handle",
          get: function get() {
            return this._handle;
          },
          set: function set(t) {
            this._handle !== t && (this._handle = t);
          }
        }, {
          key: "direction",
          get: function get() {
            return this._direction;
          },
          set: function set(t) {
            this._direction !== t && (this._direction = t, this._changeLayout());
          }
        }, {
          key: "progress",
          get: function get() {
            return this._progress;
          },
          set: function set(t) {
            this._progress !== t && (this._progress = t, this._updateHandlePosition());
          }
        }]), e;
      }(E), Os.Direction = ws, p((Ts = As).prototype, "handle", [us, _s], Object.getOwnPropertyDescriptor(Ts.prototype, "handle"), Ts.prototype), p(Ts.prototype, "direction", [ps, ds], Object.getOwnPropertyDescriptor(Ts.prototype, "direction"), Ts.prototype), p(Ts.prototype, "progress", [F, gs, fs], Object.getOwnPropertyDescriptor(Ts.prototype, "progress"), Ts.prototype), vs = p(Ts.prototype, "slideEvents", [ys, O, bs], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Cs = p(Ts.prototype, "_handle", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ss = p(Ts.prototype, "_direction", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return ws.Horizontal;
        }
      }), Es = p(Ts.prototype, "_progress", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .1;
        }
      }), ms = Ts)) || ms) || ms) || ms) || ms) || ms));

      function Js() {
        for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) {
          e[i] = arguments[i];
        }

        return Object.assign.apply(Object, [{}].concat(e));
      }

      !function (t) {
        t.TOGGLE = "toggle";
      }(qs || (qs = {}));

      var Qs,
          $s,
          ta,
          ea,
          ia,
          oa,
          na,
          ra,
          sa,
          aa,
          ha,
          la,
          ca,
          ua,
          _a,
          pa,
          da,
          ga,
          fa,
          ya,
          ba,
          ma,
          Ta,
          va,
          Ca,
          Sa,
          Ea,
          Oa,
          Aa,
          wa,
          La,
          Da,
          Pa,
          za,
          Ia,
          Ra,
          xa,
          Ba,
          Na,
          Ha,
          Ma,
          ka,
          Va,
          Fa,
          Ga,
          ja,
          Ua,
          Wa,
          Za,
          Ya,
          Xa,
          qa,
          Ka,
          Ja,
          Qa,
          $a,
          th,
          eh,
          ih,
          oh = function (e) {
        return t({
          Toggle: e,
          ToggleComponent: e
        }), e;
      }((Ps = o("cc.Toggle"), zs = d(), Is = g(110), Rs = f(), xs = y(Ct), Bs = b(), Ns = m(), Hs = n(yt), Ms = b(), ks = m(), Vs = n([st]), Fs = m(), Ps(Gs = zs(Gs = Is(Gs = Rs(Gs = xs((Xs = Ys = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "checkEvents", Us, S(e)), C(e, "_isChecked", Ws, S(e)), C(e, "_checkMark", Zs, S(e)), e;
        }

        a(e, t);
        var i = e.prototype;
        return i._internalToggle = function () {
          this.isChecked = !this.isChecked;
        }, i._set = function (t, e) {
          if (void 0 === e && (e = !0), this._isChecked != t) {
            this._isChecked = t;
            var i = this._toggleContainer;
            i && i.enabled && this.enabled && (t || !i.anyTogglesChecked() && !i.allowSwitchOff) && (this._isChecked = !0, i.notifyToggleCheck(this, e)), this.playEffect(), e && this._emitToggleEvents();
          }
        }, i.playEffect = function () {
          this._checkMark && (this._checkMark.node.active = this._isChecked);
        }, i.setIsCheckedWithoutNotify = function (t) {
          this._set(t, !1);
        }, i.onEnable = function () {
          t.prototype.onEnable.call(this), this.playEffect(), this.node.on(e.EventType.CLICK, this._internalToggle, this);
        }, i.onDisable = function () {
          t.prototype.onDisable.call(this), this.node.off(e.EventType.CLICK, this._internalToggle, this);
        }, i.OnDestroy = function () {
          var t = this._toggleContainer;
          t && t.ensureValidState();
        }, i._emitToggleEvents = function () {
          this.node.emit(e.EventType.TOGGLE, this), this.checkEvents && st.emitEvents(this.checkEvents, this);
        }, _(e, [{
          key: "isChecked",
          get: function get() {
            return this._isChecked;
          },
          set: function set(t) {
            this._set(t);
          }
        }, {
          key: "checkMark",
          get: function get() {
            return this._checkMark;
          },
          set: function set(t) {
            this._checkMark !== t && (this._checkMark = t);
          }
        }, {
          key: "_resizeToTarget",
          set: function set(t) {
            t && this._resizeNodeToTargetNode();
          }
        }, {
          key: "_toggleContainer",
          get: function get() {
            var t = this.node.parent;
            return L.Node.isNode(t) ? t.getComponent("cc.ToggleContainer") : null;
          }
        }]), e;
      }(we), Ys.EventType = Js(qs, ve), p((js = Xs).prototype, "isChecked", [Bs, Ns], Object.getOwnPropertyDescriptor(js.prototype, "isChecked"), js.prototype), p(js.prototype, "checkMark", [Hs, Ms, ks], Object.getOwnPropertyDescriptor(js.prototype, "checkMark"), js.prototype), Us = p(js.prototype, "checkEvents", [Vs, O, Fs], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ws = p(js.prototype, "_isChecked", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Zs = p(js.prototype, "_checkMark", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Gs = js)) || Gs) || Gs) || Gs) || Gs) || Gs)),
          nh = function (e) {
        return t({
          ToggleContainer: e,
          ToggleContainerComponent: e
        }), e;
      }((Qs = o("cc.ToggleContainer"), $s = d(), ta = g(110), ea = f(), ia = m(), oa = n([st]), na = m(), Qs(ra = $s(ra = ta(ra = ea(ra = s((la = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "_allowSwitchOff", aa, S(e)), C(e, "checkEvents", ha, S(e)), e;
        }

        a(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          this.ensureValidState(), this.node.on(l.CHILD_ADDED, this.ensureValidState, this), this.node.on(l.CHILD_REMOVED, this.ensureValidState, this);
        }, i.onDisable = function () {
          this.node.off(l.CHILD_ADDED, this.ensureValidState, this), this.node.off(l.CHILD_REMOVED, this.ensureValidState, this);
        }, i.activeToggles = function () {
          return this.toggleItems.filter(function (t) {
            return t.isChecked;
          });
        }, i.anyTogglesChecked = function () {
          return !!this.toggleItems.find(function (t) {
            return t.isChecked;
          });
        }, i.notifyToggleCheck = function (t, e) {
          if (void 0 === e && (e = !0), this.enabledInHierarchy) {
            for (var i = 0; i < this.toggleItems.length; i++) {
              var o = this.toggleItems[i];
              o !== t && (e ? o.isChecked = !1 : o.setIsCheckedWithoutNotify(!1));
            }

            this.checkEvents && L.Component.EventHandler.emitEvents(this.checkEvents, t);
          }
        }, i.ensureValidState = function () {
          var t = this.toggleItems;

          if (!this._allowSwitchOff && !this.anyTogglesChecked() && 0 !== t.length) {
            var e = t[0];
            e.isChecked = !0, this.notifyToggleCheck(e);
          }

          var i = this.activeToggles();
          if (i.length > 1) for (var o = i[0], n = 0; n < i.length; ++n) {
            var r = i[n];
            r !== o && (r.isChecked = !1);
          }
        }, _(e, [{
          key: "allowSwitchOff",
          get: function get() {
            return this._allowSwitchOff;
          },
          set: function set(t) {
            this._allowSwitchOff = t;
          }
        }, {
          key: "toggleItems",
          get: function get() {
            return this.node.children.map(function (t) {
              var e = t.getComponent("cc.Toggle");
              return e && e.enabled ? e : null;
            }).filter(Boolean);
          }
        }]), e;
      }(E), aa = p((sa = la).prototype, "_allowSwitchOff", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), p(sa.prototype, "allowSwitchOff", [ia], Object.getOwnPropertyDescriptor(sa.prototype, "allowSwitchOff"), sa.prototype), ha = p(sa.prototype, "checkEvents", [oa, O, na], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), ra = sa)) || ra) || ra) || ra) || ra) || ra)),
          rh = new k();

      function sh(t) {
        return t instanceof q ? _t : t._uiProps.uiTransformComp ? t._uiProps.uiTransformComp.contentSize : N.ZERO;
      }

      function ah(t, e, i, o) {
        t.parent ? rh.set(t.parent.getScale().x, t.parent.getScale().y) : rh.set(0, 0);

        for (var n = rh.x, r = rh.y, s = 0, a = 0, h = t.parent;;) {
          if (!h) return i.x = i.y = 0, void (o.x = o.y = 1);
          var l = h.getPosition();
          if (s += l.x, a += l.y, (h = h.parent) === e) break;
          h ? rh.set(h.getScale().x, h.getScale().y) : rh.set(0, 0);
          var c = rh.x,
              u = rh.y;
          s *= c, a *= u, n *= c, r *= u;
        }

        o.x = 0 !== n ? 1 / n : 1, o.y = 0 !== r ? 1 / r : 1, i.x = -s, i.y = -a;
      }

      !function (t) {
        t[t.ONCE = 0] = "ONCE", t[t.ALWAYS = 1] = "ALWAYS", t[t.ON_WINDOW_RESIZE = 2] = "ON_WINDOW_RESIZE";
      }(eh || (eh = {})), i(eh), function (t) {
        t[t.TOP = 1] = "TOP", t[t.MID = 2] = "MID", t[t.BOT = 4] = "BOT", t[t.LEFT = 8] = "LEFT", t[t.CENTER = 16] = "CENTER", t[t.RIGHT = 32] = "RIGHT", t[t.HORIZONTAL = 56] = "HORIZONTAL", t[t.VERTICAL = 7] = "VERTICAL";
      }(ih || (ih = {}));

      var hh,
          lh,
          ch,
          uh,
          _h,
          ph,
          dh,
          gh,
          fh,
          yh,
          bh,
          mh,
          Th,
          vh,
          Ch,
          Sh,
          Eh,
          Oh,
          Ah,
          wh = ih.TOP | ih.BOT,
          Lh = ih.LEFT | ih.RIGHT,
          Dh = function (e) {
        return t({
          Widget: e,
          WidgetComponent: e
        }), e;
      }((ca = o("cc.Widget"), ua = d(), _a = g(110), pa = f(), da = y(Ct), ga = n(r), fa = m(), ya = m(), ba = m(), ma = m(), Ta = m(), va = m(), Ca = m(), Sa = H(), Ea = H(), Oa = m(), Aa = m(), wa = m(), La = m(), Da = m(), Pa = m(), za = n(eh), Ia = m(), ca(Ra = ua(Ra = _a(Ra = pa(Ra = da(Ra = s((th = $a = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return (e = t.call.apply(t, [this].concat(o)) || this)._lastPos = new c(), e._lastSize = new N(), e._dirty = !0, e._hadAlignOnce = !1, C(e, "_alignFlags", Ba, S(e)), C(e, "_target", Na, S(e)), C(e, "_left", Ha, S(e)), C(e, "_right", Ma, S(e)), C(e, "_top", ka, S(e)), C(e, "_bottom", Va, S(e)), C(e, "_horizontalCenter", Fa, S(e)), C(e, "_verticalCenter", Ga, S(e)), C(e, "_isAbsLeft", ja, S(e)), C(e, "_isAbsRight", Ua, S(e)), C(e, "_isAbsTop", Wa, S(e)), C(e, "_isAbsBottom", Za, S(e)), C(e, "_isAbsHorizontalCenter", Ya, S(e)), C(e, "_isAbsVerticalCenter", Xa, S(e)), C(e, "_originalWidth", qa, S(e)), C(e, "_originalHeight", Ka, S(e)), C(e, "_alignMode", Ja, S(e)), C(e, "_lockFlags", Qa, S(e)), e;
        }

        a(e, t);
        var i = e.prototype;
        return i.updateAlignment = function () {
          L._widgetManager.updateAlignment(this.node);
        }, i._validateTargetInDEV = function () {}, i.setDirty = function () {
          this._recursiveDirty();
        }, i.onEnable = function () {
          this.node.getPosition(this._lastPos), this._lastSize.set(this.node._uiProps.uiTransformComp.contentSize), L._widgetManager.add(this), this._hadAlignOnce = !1, this._registerEvent(), this._registerTargetEvents();
        }, i.onDisable = function () {
          L._widgetManager.remove(this), this._unregisterEvent(), this._unregisterTargetEvents();
        }, i.onDestroy = function () {
          this._removeParentEvent();
        }, i._adjustWidgetToAllowMovingInEditor = function () {}, i._adjustWidgetToAllowResizingInEditor = function () {}, i._adjustWidgetToAnchorChanged = function () {
          this.setDirty();
        }, i._adjustTargetToParentChanged = function (t) {
          t && this._unregisterOldParentEvents(t), this.node.getParent() && this._registerTargetEvents(), this._setDirtyByMode();
        }, i._registerEvent = function () {
          this.node.on(l.TRANSFORM_CHANGED, this._setDirtyByMode, this), this.node.on(l.SIZE_CHANGED, this._setDirtyByMode, this), this.node.on(l.ANCHOR_CHANGED, this._adjustWidgetToAnchorChanged, this), this.node.on(l.PARENT_CHANGED, this._adjustTargetToParentChanged, this);
        }, i._unregisterEvent = function () {
          this.node.off(l.TRANSFORM_CHANGED, this._setDirtyByMode, this), this.node.off(l.SIZE_CHANGED, this._setDirtyByMode, this), this.node.off(l.ANCHOR_CHANGED, this._adjustWidgetToAnchorChanged, this);
        }, i._removeParentEvent = function () {
          this.node.off(l.PARENT_CHANGED, this._adjustTargetToParentChanged, this);
        }, i._autoChangedValue = function (t, e) {
          if ((this._alignFlags & t) > 0) {
            var i = this.node.parent && this.node.parent._uiProps,
                o = i && i.uiTransformComp,
                n = o ? o.contentSize : _t;
            this.isAlignLeft && t === ih.LEFT ? this._left = e ? this._left * n.width : this._left / n.width : this.isAlignRight && t === ih.RIGHT ? this._right = e ? this._right * n.width : this._right / n.width : this.isAlignHorizontalCenter && t === ih.CENTER ? this._horizontalCenter = e ? this._horizontalCenter * n.width : this._horizontalCenter / n.width : this.isAlignTop && t === ih.TOP ? this._top = e ? this._top * n.height : this._top / n.height : this.isAlignBottom && t === ih.BOT ? this._bottom = e ? this._bottom * n.height : this._bottom / n.height : this.isAbsoluteVerticalCenter && t === ih.MID && (this._verticalCenter = this._verticalCenter / n.height), this._recursiveDirty();
          }
        }, i._registerTargetEvents = function () {
          var t = this._target || this.node.parent;
          t && t.getComponent(Ct) && (t.on(l.TRANSFORM_CHANGED, this._setDirtyByMode, this), t.on(l.SIZE_CHANGED, this._setDirtyByMode, this), t.on(l.ANCHOR_CHANGED, this._setDirtyByMode, this));
        }, i._unregisterTargetEvents = function () {
          var t = this._target || this.node.parent;
          t && (t.off(l.TRANSFORM_CHANGED, this._setDirtyByMode, this), t.off(l.SIZE_CHANGED, this._setDirtyByMode, this), t.off(l.ANCHOR_CHANGED, this._setDirtyByMode, this));
        }, i._unregisterOldParentEvents = function (t) {
          var e = this._target || t;
          e && (e.off(l.TRANSFORM_CHANGED, this._setDirtyByMode, this), e.off(l.SIZE_CHANGED, this._setDirtyByMode, this));
        }, i._setDirtyByMode = function () {
          (this.alignMode === eh.ALWAYS || Y) && this._recursiveDirty();
        }, i._setAlign = function (t, e) {
          if (e !== (this._alignFlags & t) > 0) {
            var i = (t & Lh) > 0,
                o = this.node._uiProps.uiTransformComp;
            e ? (this._alignFlags |= t, i ? (this.isAlignHorizontalCenter = !1, this.isStretchWidth && (this._originalWidth = o.width)) : (this.isAlignVerticalCenter = !1, this.isStretchHeight && (this._originalHeight = o.height))) : (i ? this.isStretchWidth && (o.width = this._originalWidth) : this.isStretchHeight && (o.height = this._originalHeight), this._alignFlags &= ~t);
          }
        }, i._recursiveDirty = function () {
          this._dirty || (this._dirty = !0);
        }, _(e, [{
          key: "target",
          get: function get() {
            return this._target;
          },
          set: function set(t) {
            this._target !== t && (this._unregisterTargetEvents(), this._target = t, this._registerTargetEvents(), this._validateTargetInDEV(), this._recursiveDirty());
          }
        }, {
          key: "isAlignTop",
          get: function get() {
            return (this._alignFlags & ih.TOP) > 0;
          },
          set: function set(t) {
            this._setAlign(ih.TOP, t), this._recursiveDirty();
          }
        }, {
          key: "isAlignBottom",
          get: function get() {
            return (this._alignFlags & ih.BOT) > 0;
          },
          set: function set(t) {
            this._setAlign(ih.BOT, t), this._recursiveDirty();
          }
        }, {
          key: "isAlignLeft",
          get: function get() {
            return (this._alignFlags & ih.LEFT) > 0;
          },
          set: function set(t) {
            this._setAlign(ih.LEFT, t), this._recursiveDirty();
          }
        }, {
          key: "isAlignRight",
          get: function get() {
            return (this._alignFlags & ih.RIGHT) > 0;
          },
          set: function set(t) {
            this._setAlign(ih.RIGHT, t), this._recursiveDirty();
          }
        }, {
          key: "isAlignVerticalCenter",
          get: function get() {
            return (this._alignFlags & ih.MID) > 0;
          },
          set: function set(t) {
            t ? (this.isAlignTop = !1, this.isAlignBottom = !1, this._alignFlags |= ih.MID) : this._alignFlags &= ~ih.MID, this._recursiveDirty();
          }
        }, {
          key: "isAlignHorizontalCenter",
          get: function get() {
            return (this._alignFlags & ih.CENTER) > 0;
          },
          set: function set(t) {
            t ? (this.isAlignLeft = !1, this.isAlignRight = !1, this._alignFlags |= ih.CENTER) : this._alignFlags &= ~ih.CENTER, this._recursiveDirty();
          }
        }, {
          key: "isStretchWidth",
          get: function get() {
            return (this._alignFlags & Lh) === Lh;
          }
        }, {
          key: "isStretchHeight",
          get: function get() {
            return (this._alignFlags & wh) === wh;
          }
        }, {
          key: "top",
          get: function get() {
            return this._top;
          },
          set: function set(t) {
            this._top = t, this._recursiveDirty();
          }
        }, {
          key: "editorTop",
          get: function get() {
            return this._isAbsTop ? this._top : 100 * this._top;
          },
          set: function set(t) {
            this._top = this._isAbsTop ? t : t / 100, this._recursiveDirty();
          }
        }, {
          key: "bottom",
          get: function get() {
            return this._bottom;
          },
          set: function set(t) {
            this._bottom = t, this._recursiveDirty();
          }
        }, {
          key: "editorBottom",
          get: function get() {
            return this._isAbsBottom ? this._bottom : 100 * this._bottom;
          },
          set: function set(t) {
            this._bottom = this._isAbsBottom ? t : t / 100, this._recursiveDirty();
          }
        }, {
          key: "left",
          get: function get() {
            return this._left;
          },
          set: function set(t) {
            this._left = t, this._recursiveDirty();
          }
        }, {
          key: "editorLeft",
          get: function get() {
            return this._isAbsLeft ? this._left : 100 * this._left;
          },
          set: function set(t) {
            this._left = this._isAbsLeft ? t : t / 100, this._recursiveDirty();
          }
        }, {
          key: "right",
          get: function get() {
            return this._right;
          },
          set: function set(t) {
            this._right = t, this._recursiveDirty();
          }
        }, {
          key: "editorRight",
          get: function get() {
            return this._isAbsRight ? this._right : 100 * this._right;
          },
          set: function set(t) {
            this._right = this._isAbsRight ? t : t / 100, this._recursiveDirty();
          }
        }, {
          key: "horizontalCenter",
          get: function get() {
            return this._horizontalCenter;
          },
          set: function set(t) {
            this._horizontalCenter = t, this._recursiveDirty();
          }
        }, {
          key: "editorHorizontalCenter",
          get: function get() {
            return this._isAbsHorizontalCenter ? this._horizontalCenter : 100 * this._horizontalCenter;
          },
          set: function set(t) {
            this._horizontalCenter = this._isAbsHorizontalCenter ? t : t / 100, this._recursiveDirty();
          }
        }, {
          key: "verticalCenter",
          get: function get() {
            return this._verticalCenter;
          },
          set: function set(t) {
            this._verticalCenter = t, this._recursiveDirty();
          }
        }, {
          key: "editorVerticalCenter",
          get: function get() {
            return this._isAbsVerticalCenter ? this._verticalCenter : 100 * this._verticalCenter;
          },
          set: function set(t) {
            this._verticalCenter = this._isAbsVerticalCenter ? t : t / 100, this._recursiveDirty();
          }
        }, {
          key: "isAbsoluteTop",
          get: function get() {
            return this._isAbsTop;
          },
          set: function set(t) {
            this._isAbsTop !== t && (this._isAbsTop = t, this._autoChangedValue(ih.TOP, this._isAbsTop));
          }
        }, {
          key: "isAbsoluteBottom",
          get: function get() {
            return this._isAbsBottom;
          },
          set: function set(t) {
            this._isAbsBottom !== t && (this._isAbsBottom = t, this._autoChangedValue(ih.BOT, this._isAbsBottom));
          }
        }, {
          key: "isAbsoluteLeft",
          get: function get() {
            return this._isAbsLeft;
          },
          set: function set(t) {
            this._isAbsLeft !== t && (this._isAbsLeft = t, this._autoChangedValue(ih.LEFT, this._isAbsLeft));
          }
        }, {
          key: "isAbsoluteRight",
          get: function get() {
            return this._isAbsRight;
          },
          set: function set(t) {
            this._isAbsRight !== t && (this._isAbsRight = t, this._autoChangedValue(ih.RIGHT, this._isAbsRight));
          }
        }, {
          key: "isAbsoluteHorizontalCenter",
          get: function get() {
            return this._isAbsHorizontalCenter;
          },
          set: function set(t) {
            this._isAbsHorizontalCenter !== t && (this._isAbsHorizontalCenter = t, this._autoChangedValue(ih.CENTER, this._isAbsHorizontalCenter));
          }
        }, {
          key: "isAbsoluteVerticalCenter",
          get: function get() {
            return this._isAbsVerticalCenter;
          },
          set: function set(t) {
            this._isAbsVerticalCenter !== t && (this._isAbsVerticalCenter = t, this._autoChangedValue(ih.MID, this._isAbsVerticalCenter));
          }
        }, {
          key: "alignMode",
          get: function get() {
            return this._alignMode;
          },
          set: function set(t) {
            this._alignMode = t, this._recursiveDirty();
          }
        }, {
          key: "alignFlags",
          get: function get() {
            return this._alignFlags;
          },
          set: function set(t) {
            this._alignFlags !== t && (this._alignFlags = t, this._recursiveDirty());
          }
        }]), e;
      }(E), $a.AlignMode = eh, p((xa = th).prototype, "target", [ga, fa], Object.getOwnPropertyDescriptor(xa.prototype, "target"), xa.prototype), p(xa.prototype, "isAlignTop", [ya], Object.getOwnPropertyDescriptor(xa.prototype, "isAlignTop"), xa.prototype), p(xa.prototype, "isAlignBottom", [ba], Object.getOwnPropertyDescriptor(xa.prototype, "isAlignBottom"), xa.prototype), p(xa.prototype, "isAlignLeft", [ma], Object.getOwnPropertyDescriptor(xa.prototype, "isAlignLeft"), xa.prototype), p(xa.prototype, "isAlignRight", [Ta], Object.getOwnPropertyDescriptor(xa.prototype, "isAlignRight"), xa.prototype), p(xa.prototype, "isAlignVerticalCenter", [va], Object.getOwnPropertyDescriptor(xa.prototype, "isAlignVerticalCenter"), xa.prototype), p(xa.prototype, "isAlignHorizontalCenter", [Ca], Object.getOwnPropertyDescriptor(xa.prototype, "isAlignHorizontalCenter"), xa.prototype), p(xa.prototype, "isStretchWidth", [Sa], Object.getOwnPropertyDescriptor(xa.prototype, "isStretchWidth"), xa.prototype), p(xa.prototype, "isStretchHeight", [Ea], Object.getOwnPropertyDescriptor(xa.prototype, "isStretchHeight"), xa.prototype), p(xa.prototype, "top", [Oa], Object.getOwnPropertyDescriptor(xa.prototype, "top"), xa.prototype), p(xa.prototype, "editorTop", [X], Object.getOwnPropertyDescriptor(xa.prototype, "editorTop"), xa.prototype), p(xa.prototype, "bottom", [Aa], Object.getOwnPropertyDescriptor(xa.prototype, "bottom"), xa.prototype), p(xa.prototype, "editorBottom", [X], Object.getOwnPropertyDescriptor(xa.prototype, "editorBottom"), xa.prototype), p(xa.prototype, "left", [wa], Object.getOwnPropertyDescriptor(xa.prototype, "left"), xa.prototype), p(xa.prototype, "editorLeft", [X], Object.getOwnPropertyDescriptor(xa.prototype, "editorLeft"), xa.prototype), p(xa.prototype, "right", [La], Object.getOwnPropertyDescriptor(xa.prototype, "right"), xa.prototype), p(xa.prototype, "editorRight", [X], Object.getOwnPropertyDescriptor(xa.prototype, "editorRight"), xa.prototype), p(xa.prototype, "horizontalCenter", [Da], Object.getOwnPropertyDescriptor(xa.prototype, "horizontalCenter"), xa.prototype), p(xa.prototype, "editorHorizontalCenter", [X], Object.getOwnPropertyDescriptor(xa.prototype, "editorHorizontalCenter"), xa.prototype), p(xa.prototype, "verticalCenter", [Pa], Object.getOwnPropertyDescriptor(xa.prototype, "verticalCenter"), xa.prototype), p(xa.prototype, "editorVerticalCenter", [X], Object.getOwnPropertyDescriptor(xa.prototype, "editorVerticalCenter"), xa.prototype), p(xa.prototype, "isAbsoluteTop", [X], Object.getOwnPropertyDescriptor(xa.prototype, "isAbsoluteTop"), xa.prototype), p(xa.prototype, "isAbsoluteBottom", [X], Object.getOwnPropertyDescriptor(xa.prototype, "isAbsoluteBottom"), xa.prototype), p(xa.prototype, "isAbsoluteLeft", [X], Object.getOwnPropertyDescriptor(xa.prototype, "isAbsoluteLeft"), xa.prototype), p(xa.prototype, "isAbsoluteRight", [X], Object.getOwnPropertyDescriptor(xa.prototype, "isAbsoluteRight"), xa.prototype), p(xa.prototype, "isAbsoluteHorizontalCenter", [X], Object.getOwnPropertyDescriptor(xa.prototype, "isAbsoluteHorizontalCenter"), xa.prototype), p(xa.prototype, "isAbsoluteVerticalCenter", [X], Object.getOwnPropertyDescriptor(xa.prototype, "isAbsoluteVerticalCenter"), xa.prototype), p(xa.prototype, "alignMode", [za, Ia], Object.getOwnPropertyDescriptor(xa.prototype, "alignMode"), xa.prototype), p(xa.prototype, "alignFlags", [X], Object.getOwnPropertyDescriptor(xa.prototype, "alignFlags"), xa.prototype), Ba = p(xa.prototype, "_alignFlags", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Na = p(xa.prototype, "_target", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Ha = p(xa.prototype, "_left", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ma = p(xa.prototype, "_right", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ka = p(xa.prototype, "_top", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Va = p(xa.prototype, "_bottom", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Fa = p(xa.prototype, "_horizontalCenter", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ga = p(xa.prototype, "_verticalCenter", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), ja = p(xa.prototype, "_isAbsLeft", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Ua = p(xa.prototype, "_isAbsRight", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Wa = p(xa.prototype, "_isAbsTop", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Za = p(xa.prototype, "_isAbsBottom", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Ya = p(xa.prototype, "_isAbsHorizontalCenter", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Xa = p(xa.prototype, "_isAbsVerticalCenter", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), qa = p(xa.prototype, "_originalWidth", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ka = p(xa.prototype, "_originalHeight", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ja = p(xa.prototype, "_alignMode", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return eh.ON_WINDOW_RESIZE;
        }
      }), Qa = p(xa.prototype, "_lockFlags", [O, K], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ra = xa)) || Ra) || Ra) || Ra) || Ra) || Ra) || Ra));

      L.internal.computeInverseTransForTarget = ah, L.internal.getReadonlyNodeSize = sh;
      var Ph,
          zh = new e();
      !function (t) {
        t[t.HORIZONTAL = 0] = "HORIZONTAL", t[t.VERTICAL = 1] = "VERTICAL";
      }(Ph || (Ph = {})), i(Ph);

      var Ih,
          Rh,
          xh,
          Bh,
          Nh,
          Hh,
          Mh,
          kh,
          Vh,
          Fh,
          Gh,
          jh,
          Uh,
          Wh,
          Zh,
          Yh,
          Xh,
          qh,
          Kh,
          Jh,
          Qh,
          $h,
          tl,
          el,
          il,
          ol,
          nl,
          rl,
          sl,
          al,
          hl,
          ll,
          cl,
          ul,
          _l,
          pl,
          dl,
          gl,
          fl,
          yl,
          bl,
          ml,
          Tl,
          vl,
          Cl,
          Sl = function (e) {
        return t({
          PageViewIndicator: e,
          PageViewIndicatorComponent: e
        }), e;
      }((hh = o("cc.PageViewIndicator"), lh = d(), ch = g(110), uh = f(), _h = n(ft), ph = m(), dh = n(Ph), gh = m(), fh = n(N), yh = m(), bh = m(), hh(mh = lh(mh = ch(mh = uh((Ah = Oh = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "spacing", vh, S(e)), C(e, "_spriteFrame", Ch, S(e)), C(e, "_direction", Sh, S(e)), C(e, "_cellSize", Eh, S(e)), e._layout = null, e._pageView = null, e._indicators = [], e;
        }

        a(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          this._updateLayout();
        }, i.setPageView = function (t) {
          this._pageView = t, this._refresh();
        }, i._updateLayout = function () {
          this._layout = this.getComponent(Cn), this._layout || (this._layout = this.addComponent(Cn));
          var t = this._layout;
          this.direction === Ph.HORIZONTAL ? (t.type = Cn.Type.HORIZONTAL, t.spacingX = this.spacing) : this.direction === Ph.VERTICAL && (t.type = Cn.Type.VERTICAL, t.spacingY = this.spacing), t.resizeMode = Cn.ResizeMode.CONTAINER;
        }, i._createIndicator = function () {
          var t = new r();
          t.layer = this.node.layer;
          var e = t.addComponent(yt);
          return e.spriteFrame = this.spriteFrame, e.sizeMode = yt.SizeMode.CUSTOM, t.parent = this.node, t._uiProps.uiTransformComp.setContentSize(this._cellSize), t;
        }, i._changedState = function () {
          var t = this._indicators;

          if (0 !== t.length && this._pageView) {
            var e = this._pageView.curPageIdx;

            if (!(e >= t.length)) {
              for (var i = 0; i < t.length; ++i) {
                var o = t[i];

                if (o._uiProps.uiComp) {
                  var n = o._uiProps.uiComp;
                  zh.set(n.color), zh.a = 127.5, n.color = zh;
                }
              }

              if (t[e]._uiProps.uiComp) {
                var r = t[e]._uiProps.uiComp;
                zh.set(r.color), zh.a = 255, r.color = zh;
              }
            }
          }
        }, i._refresh = function () {
          if (this._pageView) {
            var t = this._indicators,
                e = this._pageView.getPages();

            if (e.length !== t.length) {
              var i = 0;
              if (e.length > t.length) for (i = 0; i < e.length; ++i) {
                t[i] || (t[i] = this._createIndicator());
              } else for (i = t.length - e.length; i > 0; --i) {
                var o = t[i - 1];
                this.node.removeChild(o), t.splice(i - 1, 1);
              }
              this._layout && this._layout.enabledInHierarchy && this._layout.updateLayout(), this._changedState();
            }
          }
        }, _(e, [{
          key: "spriteFrame",
          get: function get() {
            return this._spriteFrame;
          },
          set: function set(t) {
            this._spriteFrame !== t && (this._spriteFrame = t);
          }
        }, {
          key: "direction",
          get: function get() {
            return this._direction;
          },
          set: function set(t) {
            this._direction !== t && (this._direction = t);
          }
        }, {
          key: "cellSize",
          get: function get() {
            return this._cellSize;
          },
          set: function set(t) {
            this._cellSize !== t && (this._cellSize = t);
          }
        }]), e;
      }(E), Oh.Direction = Ph, p((Th = Ah).prototype, "spriteFrame", [_h, ph], Object.getOwnPropertyDescriptor(Th.prototype, "spriteFrame"), Th.prototype), p(Th.prototype, "direction", [dh, gh], Object.getOwnPropertyDescriptor(Th.prototype, "direction"), Th.prototype), p(Th.prototype, "cellSize", [fh, yh], Object.getOwnPropertyDescriptor(Th.prototype, "cellSize"), Th.prototype), vh = p(Th.prototype, "spacing", [O, bh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ch = p(Th.prototype, "_spriteFrame", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Sh = p(Th.prototype, "_direction", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ph.HORIZONTAL;
        }
      }), Eh = p(Th.prototype, "_cellSize", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new N(20, 20);
        }
      }), mh = Th)) || mh) || mh) || mh) || mh)),
          El = new k();

      !function (t) {
        t[t.Unified = 0] = "Unified", t[t.Free = 1] = "Free";
      }(Tl || (Tl = {})), i(Tl), function (t) {
        t[t.Horizontal = 0] = "Horizontal", t[t.Vertical = 1] = "Vertical";
      }(vl || (vl = {})), i(vl), function (t) {
        t.PAGE_TURNING = "page-turning";
      }(Cl || (Cl = {}));

      var Ol = function (e) {
        return t({
          PageView: e,
          PageViewComponent: e
        }), e;
      }((Ih = o("cc.PageView"), Rh = d(), xh = g(110), Bh = f(), Nh = n(Tl), Hh = m(), Mh = n(vl), kh = m(), Vh = G(), Fh = m(), Gh = G(), jh = m(), Uh = n(Sl), Wh = m(), Zh = m(), Yh = n(Kr), Xh = H(), qh = n(Kr), Kh = H(), Jh = H(), Qh = H(), $h = H(), tl = n([st]), el = H(), il = n([st]), ol = m(), Ih(nl = Rh(nl = xh(nl = Bh((ml = bl = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "autoPageTurningThreshold", sl, S(e)), C(e, "horizontal", al, S(e)), C(e, "vertical", hl, S(e)), C(e, "cancelInnerEvents", ll, S(e)), C(e, "scrollEvents", cl, S(e)), C(e, "pageTurningSpeed", ul, S(e)), C(e, "pageEvents", _l, S(e)), C(e, "_sizeMode", pl, S(e)), C(e, "_direction", dl, S(e)), C(e, "_scrollThreshold", gl, S(e)), C(e, "_pageTurningEventTiming", fl, S(e)), C(e, "_indicator", yl, S(e)), e._curPageIdx = 0, e._lastPageIdx = 0, e._pages = [], e._initContentPos = new c(), e._scrollCenterOffsetX = [], e._scrollCenterOffsetY = [], e._touchBeganPosition = new k(), e._touchEndPosition = new k(), e;
        }

        a(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          t.prototype.onEnable.call(this), this.node.on(l.SIZE_CHANGED, this._updateAllPagesSize, this), this.node.on(e.EventType.SCROLL_ENG_WITH_THRESHOLD, this._dispatchPageTurningEvent, this);
        }, i.onDisable = function () {
          t.prototype.onDisable.call(this), this.node.off(l.SIZE_CHANGED, this._updateAllPagesSize, this), this.node.off(e.EventType.SCROLL_ENG_WITH_THRESHOLD, this._dispatchPageTurningEvent, this);
        }, i.onLoad = function () {
          this._initPages(), this.indicator && this.indicator.setPageView(this);
        }, i.getCurrentPageIndex = function () {
          return this._curPageIdx;
        }, i.setCurrentPageIndex = function (t) {
          this.scrollToPage(t, 1);
        }, i.getPages = function () {
          return this._pages;
        }, i.addPage = function (t) {
          t && -1 === this._pages.indexOf(t) && this.content && (t._uiProps.uiTransformComp ? (this.content.addChild(t), this._pages.push(t), this._updatePageView()) : Z(4301));
        }, i.insertPage = function (t, e) {
          if (!(e < 0) && t && -1 === this._pages.indexOf(t) && this.content) if (e >= this._pages.length) this.addPage(t);else {
            if (!t._uiProps.uiTransformComp) return void Z(4301);
            this._pages.splice(e, 0, t), this.content.insertChild(t, e), this._updatePageView();
          }
        }, i.removePage = function (t) {
          if (t && this.content) {
            var e = this._pages.indexOf(t);

            -1 !== e ? this.removePageAtIndex(e) : J(4300, t.name);
          }
        }, i.removePageAtIndex = function (t) {
          var e = this._pages;

          if (!(t < 0 || t >= e.length)) {
            var i = e[t];
            i && this.content && (this.content.removeChild(i), e.splice(t, 1), this._updatePageView());
          }
        }, i.removeAllPages = function () {
          if (this.content) {
            for (var t = this._pages, e = 0, i = t.length; e < i; e++) {
              this.content.removeChild(t[e]);
            }

            this._pages.length = 0, this._updatePageView();
          }
        }, i.scrollToPage = function (t, e) {
          void 0 === e && (e = .3), t < 0 || t >= this._pages.length || (this._curPageIdx = t, this.scrollToOffset(this._moveOffsetValue(t), e, !0), this.indicator && this.indicator._changedState());
        }, i.getScrollEndedEventTiming = function () {
          return this.pageTurningEventTiming;
        }, i._updatePageView = function () {
          if (this.content) {
            var t = this.content.getComponent(Cn);
            t && t.enabled && t.updateLayout();
            var e = this._pages.length;
            this._curPageIdx >= e && (this._curPageIdx = 0 === e ? 0 : e - 1, this._lastPageIdx = this._curPageIdx);

            for (var i = this._initContentPos, o = 0; o < e; ++o) {
              var n = this._pages[o].position;
              this.direction === vl.Horizontal ? this._scrollCenterOffsetX[o] = Math.abs(i.x + n.x) : this._scrollCenterOffsetY[o] = Math.abs(i.y + n.y);
            }

            this.indicator && this.indicator._refresh();
          }
        }, i._updateAllPagesSize = function () {
          var t = this.view;
          if (this.content && t && this._sizeMode === Tl.Unified) for (var e = this._pages, i = t.contentSize, o = 0, n = e.length; o < n; o++) {
            e[o]._uiProps.uiTransformComp.setContentSize(i);
          }
        }, i._handleReleaseLogic = function () {
          this._autoScrollToPage(), this._scrolling && (this._scrolling = !1, this._autoScrolling || this._dispatchEvent(e.EventType.SCROLL_ENDED));
        }, i._onTouchBegan = function (e, i) {
          e.touch.getUILocation(El), k.set(this._touchBeganPosition, El.x, El.y), t.prototype._onTouchBegan.call(this, e, i);
        }, i._onTouchMoved = function (e, i) {
          t.prototype._onTouchMoved.call(this, e, i);
        }, i._onTouchEnded = function (e, i) {
          e.touch.getUILocation(El), k.set(this._touchEndPosition, El.x, El.y), t.prototype._onTouchEnded.call(this, e, i);
        }, i._onTouchCancelled = function (e, i) {
          e.touch.getUILocation(El), k.set(this._touchEndPosition, El.x, El.y), t.prototype._onTouchCancelled.call(this, e, i);
        }, i._onMouseWheel = function () {}, i._syncScrollDirection = function () {
          this.horizontal = this.direction === vl.Horizontal, this.vertical = this.direction === vl.Vertical;
        }, i._syncSizeMode = function () {
          var t = this.view;

          if (this.content && t) {
            var e = this.content.getComponent(Cn);

            if (e) {
              if (this._sizeMode === Tl.Free && this._pages.length > 0) {
                var i = this._pages[0]._uiProps.uiTransformComp,
                    o = this._pages[this._pages.length - 1]._uiProps.uiTransformComp;
                this.direction === vl.Horizontal ? (e.paddingLeft = (t.width - i.width) / 2, e.paddingRight = (t.width - o.width) / 2) : this.direction === vl.Vertical && (e.paddingTop = (t.height - i.height) / 2, e.paddingBottom = (t.height - o.height) / 2);
              }

              e.updateLayout();
            }
          }
        }, i._initPages = function () {
          if (this.content) {
            this._initContentPos = this.content.position;

            for (var t = this.content.children, e = 0; e < t.length; ++e) {
              var i = t[e];
              this._pages.indexOf(i) >= 0 || this._pages.push(i);
            }

            this._syncScrollDirection(), this._syncSizeMode(), this._updatePageView();
          }
        }, i._dispatchPageTurningEvent = function () {
          this._lastPageIdx !== this._curPageIdx && (this._lastPageIdx = this._curPageIdx, st.emitEvents(this.pageEvents, this, Cl.PAGE_TURNING), this.node.emit(Cl.PAGE_TURNING, this));
        }, i._isQuicklyScrollable = function (t) {
          if (this.direction === vl.Horizontal) {
            if (Math.abs(t.x) > this.autoPageTurningThreshold) return !0;
          } else if (this.direction === vl.Vertical && Math.abs(t.y) > this.autoPageTurningThreshold) return !0;

          return !1;
        }, i._moveOffsetValue = function (t) {
          var e = new k();
          if (this._sizeMode === Tl.Free) this.direction === vl.Horizontal ? e.x = this._scrollCenterOffsetX[t] : this.direction === vl.Vertical && (e.y = this._scrollCenterOffsetY[t]);else {
            var i = this.view;
            if (!i) return e;
            this.direction === vl.Horizontal ? e.x = t * i.width : this.direction === vl.Vertical && (e.y = t * i.height);
          }
          return e;
        }, i._getDragDirection = function (t) {
          return this._direction === vl.Horizontal ? 0 === t.x ? 0 : t.x > 0 ? 1 : -1 : 0 === t.y ? 0 : t.y < 0 ? 1 : -1;
        }, i._isScrollable = function (t, e, i) {
          if (this._sizeMode === Tl.Free) {
            var o = 0,
                n = 0;
            if (this.direction === vl.Horizontal) return o = this._scrollCenterOffsetX[e], n = this._scrollCenterOffsetX[i], Math.abs(t.x) >= Math.abs(o - n) * this.scrollThreshold;
            if (this.direction === vl.Vertical) return o = this._scrollCenterOffsetY[e], n = this._scrollCenterOffsetY[i], Math.abs(t.y) >= Math.abs(o - n) * this.scrollThreshold;
          } else {
            var r = this.view;
            if (!r) return !1;
            if (this.direction === vl.Horizontal) return Math.abs(t.x) >= r.width * this.scrollThreshold;
            if (this.direction === vl.Vertical) return Math.abs(t.y) >= r.height * this.scrollThreshold;
          }

          return !1;
        }, i._autoScrollToPage = function () {
          if (this._startBounceBackIfNeeded()) {
            var t = this._getHowMuchOutOfBoundary();

            this._clampDelta(t), (t.x > 0 || t.y < 0) && (this._curPageIdx = 0 === this._pages.length ? 0 : this._pages.length - 1), (t.x < 0 || t.y > 0) && (this._curPageIdx = 0), this.indicator && this.indicator._changedState();
          } else {
            var e = new k();
            k.subtract(e, this._touchBeganPosition, this._touchEndPosition);

            var i = this._curPageIdx,
                o = i + this._getDragDirection(e),
                n = this.pageTurningSpeed * Math.abs(i - o);

            if (o < this._pages.length) {
              if (this._isScrollable(e, i, o)) return void this.scrollToPage(o, n);

              var r = this._calculateTouchMoveVelocity();

              if (this._isQuicklyScrollable(r)) return void this.scrollToPage(o, n);
            }

            this.scrollToPage(i, n);
          }
        }, _(e, [{
          key: "sizeMode",
          get: function get() {
            return this._sizeMode;
          },
          set: function set(t) {
            this._sizeMode !== t && (this._sizeMode = t, this._syncSizeMode());
          }
        }, {
          key: "direction",
          get: function get() {
            return this._direction;
          },
          set: function set(t) {
            this._direction !== t && (this._direction = t, this._syncScrollDirection());
          }
        }, {
          key: "scrollThreshold",
          get: function get() {
            return this._scrollThreshold;
          },
          set: function set(t) {
            this._scrollThreshold !== t && (this._scrollThreshold = t);
          }
        }, {
          key: "pageTurningEventTiming",
          get: function get() {
            return this._pageTurningEventTiming;
          },
          set: function set(t) {
            this._pageTurningEventTiming !== t && (this._pageTurningEventTiming = t);
          }
        }, {
          key: "indicator",
          get: function get() {
            return this._indicator;
          },
          set: function set(t) {
            this._indicator !== t && (this._indicator = t, this.indicator && this.indicator.setPageView(this));
          }
        }, {
          key: "curPageIdx",
          get: function get() {
            return this._curPageIdx;
          }
        }, {
          key: "verticalScrollBar",
          get: function get() {
            return t.prototype.verticalScrollBar;
          },
          set: function set(t) {
            this.verticalScrollBar = t;
          }
        }, {
          key: "horizontalScrollBar",
          get: function get() {
            return t.prototype.horizontalScrollBar;
          },
          set: function set(t) {
            this.horizontalScrollBar = t;
          }
        }]), e;
      }(Ls), bl.SizeMode = Tl, bl.Direction = vl, bl.EventType = Js(Cl, Qr), p((rl = ml).prototype, "sizeMode", [Nh, Hh], Object.getOwnPropertyDescriptor(rl.prototype, "sizeMode"), rl.prototype), p(rl.prototype, "direction", [Mh, kh], Object.getOwnPropertyDescriptor(rl.prototype, "direction"), rl.prototype), p(rl.prototype, "scrollThreshold", [F, Vh, Fh], Object.getOwnPropertyDescriptor(rl.prototype, "scrollThreshold"), rl.prototype), p(rl.prototype, "pageTurningEventTiming", [F, Gh, jh], Object.getOwnPropertyDescriptor(rl.prototype, "pageTurningEventTiming"), rl.prototype), p(rl.prototype, "indicator", [Uh, Wh], Object.getOwnPropertyDescriptor(rl.prototype, "indicator"), rl.prototype), sl = p(rl.prototype, "autoPageTurningThreshold", [O, Zh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 100;
        }
      }), p(rl.prototype, "verticalScrollBar", [Yh, Q, Xh], Object.getOwnPropertyDescriptor(rl.prototype, "verticalScrollBar"), rl.prototype), p(rl.prototype, "horizontalScrollBar", [qh, Q, Kh], Object.getOwnPropertyDescriptor(rl.prototype, "horizontalScrollBar"), rl.prototype), al = p(rl.prototype, "horizontal", [Q, O, Jh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), hl = p(rl.prototype, "vertical", [Q, O, Qh], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), ll = p(rl.prototype, "cancelInnerEvents", [Q, O, $h], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), cl = p(rl.prototype, "scrollEvents", [tl, O, Q, el], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), ul = p(rl.prototype, "pageTurningSpeed", [O, X], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .3;
        }
      }), _l = p(rl.prototype, "pageEvents", [il, O, ol], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), pl = p(rl.prototype, "_sizeMode", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Tl.Unified;
        }
      }), dl = p(rl.prototype, "_direction", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return vl.Horizontal;
        }
      }), gl = p(rl.prototype, "_scrollThreshold", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .5;
        }
      }), fl = p(rl.prototype, "_pageTurningEventTiming", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return .1;
        }
      }), yl = p(rl.prototype, "_indicator", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), nl = rl)) || nl) || nl) || nl) || nl)),
          Al = new c(),
          wl = new k(),
          Ll = new k(),
          Dl = new k(1, 1),
          Pl = new k(),
          zl = new k();

      function Il(t, e) {
        if (!e._hadAlignOnce) {
          e.alignMode === eh.ONCE && (e._hadAlignOnce = !0);
          var i,
              o = e.target,
              n = Ll,
              r = Dl;
          o ? ah(t, i = o, n, r) : i = t.parent;
          var s = sh(i),
              a = i instanceof q || !i.getComponent(Ct),
              h = a ? wl : i.getComponent(Ct).anchorPoint,
              l = a;
          t.getPosition(Al);
          var u = t._uiProps.uiTransformComp,
              _ = Al.x,
              p = Al.y,
              d = u.anchorPoint,
              g = t.getScale();

          if (e.alignFlags & ih.HORIZONTAL) {
            var f = 0,
                y = 0,
                b = s.width;
            l ? (f = _t.left.x, y = _t.right.x) : y = (f = -h.x * b) + b, f += e.isAbsoluteLeft ? e.left : e.left * b, y -= e.isAbsoluteRight ? e.right : e.right * b, o && (f += n.x, f *= r.x, y += n.x, y *= r.x);
            var m = 0,
                T = d.x,
                v = g.x;
            if (v < 0 && (T = 1 - T, v = -v), e.isStretchWidth) m = y - f, 0 !== v && (u.width = m / v), _ = f + T * m;else if (m = u.width * v, e.isAlignHorizontalCenter) {
              var C = e.isAbsoluteHorizontalCenter ? e.horizontalCenter : e.horizontalCenter * b,
                  S = (.5 - h.x) * s.width;
              o && (C *= r.x, S += n.x, S *= r.x), _ = S + (T - .5) * m + C;
            } else _ = e.isAlignLeft ? f + T * m : y + (T - 1) * m;
            e._lastSize.width = m;
          }

          if (e.alignFlags & ih.VERTICAL) {
            var E = 0,
                O = 0,
                A = s.height;
            l ? (O = _t.bottom.y, E = _t.top.y) : E = (O = -h.y * A) + A, O += e.isAbsoluteBottom ? e.bottom : e.bottom * A, E -= e.isAbsoluteTop ? e.top : e.top * A, o && (O += n.y, O *= r.y, E += n.y, E *= r.y);
            var w = 0,
                L = d.y,
                D = g.y;
            if (D < 0 && (L = 1 - L, D = -D), e.isStretchHeight) w = E - O, 0 !== D && (u.height = w / D), p = O + L * w;else if (w = u.height * D, e.isAlignVerticalCenter) {
              var P = e.isAbsoluteVerticalCenter ? e.verticalCenter : e.verticalCenter * A,
                  z = (.5 - h.y) * s.height;
              o && (P *= r.y, z += n.y, z *= r.y), p = z + (L - .5) * w + P;
            } else p = e.isAlignBottom ? O + L * w : E + (L - 1) * w;
            e._lastSize.height = w;
          }

          t.setPosition(_, p, Al.z), c.set(e._lastPos, _, p, Al.z);
        }
      }

      function Rl(t) {
        var e = t.getComponent(Dh);

        if (e && e.enabled) {
          if (!L.isValid(t, !0)) return;
          Fl.push(e);
        }

        for (var i, o = t.children, n = W(o); !(i = n()).done;) {
          var r = i.value;
          r.active && Rl(r);
        }
      }

      function xl() {
        var t = at.getScene();

        if (t) {
          Gl.isAligning = !0, Gl._nodesOrderDirty && (Fl.length = 0, Rl(t), Gl._nodesOrderDirty = !1);
          var e = null,
              i = Gl._activeWidgetsIterator;

          for (i.i = 0; i.i < Fl.length; ++i.i) {
            (e = Fl[i.i])._dirty && (Il(e.node, e), e._dirty = !1);
          }

          Gl.isAligning = !1;
        }
      }

      var Bl,
          Nl,
          Hl,
          Ml,
          kl,
          Vl,
          Fl = [],
          Gl = t("widgetManager", L._widgetManager = {
        isAligning: !1,
        _nodesOrderDirty: !1,
        _activeWidgetsIterator: new $.MutableForwardIterator(Fl),
        animationState: null,
        init: function init() {
          at.on(ht.EVENT_AFTER_SCENE_LAUNCH, xl), at.on(ht.EVENT_AFTER_UPDATE, xl), dt.instance.on("design-resolution-changed", this.onResized, this);
          var t = this.onResized.bind(this);
          dt.instance.on("canvas-resize", t), tt.on("orientation-change", t);
        },
        add: function add() {
          this._nodesOrderDirty = !0;
        },
        remove: function remove(t) {
          this._activeWidgetsIterator.remove(t);
        },
        onResized: function onResized() {
          var t = at.getScene();
          t && this.refreshWidgetOnResized(t);
        },
        refreshWidgetOnResized: function refreshWidgetOnResized(t) {
          var e = r.isNode(t) && t.getComponent(Dh);
          e && e.enabled && (e.alignMode === eh.ON_WINDOW_RESIZE || e.alignMode === eh.ALWAYS) && e.setDirty();

          for (var i, o = t.children, n = W(o); !(i = n()).done;) {
            var s = i.value;
            this.refreshWidgetOnResized(s);
          }
        },
        updateOffsetsToStayPut: function updateOffsetsToStayPut(t, e) {
          function i(t, e) {
            return Math.abs(t - e) > 1e-10 ? e : t;
          }

          var o = t.node,
              n = o.parent;

          if (n) {
            var r = Pl;
            r.set(0, 0);
            var s = zl;
            if (s.set(1, 1), t.target && ah(o, n = t.target, r, s), !e) return;

            var a = n._uiProps && n._uiProps.uiTransformComp,
                h = a ? a.anchorPoint : wl,
                l = o._uiProps.uiTransformComp,
                c = sh(n),
                u = l.anchorPoint,
                _ = o.getPosition(),
                p = ih,
                d = o.getScale(),
                g = 0;

            if (e & p.LEFT) {
              var f = -h.x * c.width;
              f += r.x, f *= s.x, g = _.x - u.x * l.width * d.x - f, t.isAbsoluteLeft || (g /= c.width), g /= s.x, t.left = i(t.left, g);
            }

            if (e & p.RIGHT) {
              var y = (1 - h.x) * c.width;
              y += r.x, g = (y *= s.x) - (_.x + (1 - u.x) * l.width * d.x), t.isAbsoluteRight || (g /= c.width), g /= s.x, t.right = i(t.right, g);
            }

            if (e & p.TOP) {
              var b = (1 - h.y) * c.height;
              b += r.y, g = (b *= s.y) - (_.y + (1 - u.y) * l.height * d.y), t.isAbsoluteTop || (g /= c.height), g /= s.y, t.top = i(t.top, g);
            }

            if (e & p.BOT) {
              var m = -h.y * c.height;
              m += r.y, m *= s.y, g = _.y - u.y * l.height * d.y - m, t.isAbsoluteBottom || (g /= c.height), g /= s.y, t.bottom = i(t.bottom, g);
            }
          }
        },
        updateAlignment: function t(e) {
          var i = e.parent;
          i && r.isNode(i) && t(i);
          var o = e.getComponent(Dh);
          o && i && Il(e, o);
        },
        AlignMode: eh,
        AlignFlags: ih
      });
      at.on(ht.EVENT_INIT, function () {
        Gl.init();
      });

      var jl,
          Ul,
          Wl,
          Zl,
          Yl,
          Xl,
          ql,
          Kl,
          Jl,
          Ql,
          $l,
          tc,
          ec,
          ic,
          oc,
          nc,
          rc,
          sc,
          ac,
          hc,
          lc,
          cc = function (e) {
        return t({
          SafeArea: e,
          SafeAreaComponent: e
        }), e;
      }((Bl = o("cc.SafeArea"), Nl = d(), Hl = g(110), Ml = f(), kl = y(Dh), Bl(Vl = Nl(Vl = Hl(Vl = s(Vl = Ml(Vl = kl(Vl = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        a(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          this.updateArea(), tt.on("window-resize", this.updateArea, this), tt.on("orientation-change", this.updateArea, this);
        }, i.onDisable = function () {
          tt.off("window-resize", this.updateArea, this), tt.off("orientation-change", this.updateArea, this);
        }, i.updateArea = function () {
          var t = this.node.getComponent(Dh),
              e = this.node.getComponent(Ct);

          if (t && e) {
            t.updateAlignment();
            var i = this.node.position.clone(),
                o = e.anchorPoint.clone();
            t.isAlignTop = t.isAlignBottom = t.isAlignLeft = t.isAlignRight = !0;
            var n = lt.getVisibleSize(),
                r = n.width,
                s = n.height,
                a = P.getSafeAreaRect();
            t.top = s - a.y - a.height, t.bottom = a.y, t.left = a.x, t.right = r - a.x - a.width, t.updateAlignment();
            var h = this.node.position.clone(),
                l = o.x - (h.x - i.x) / e.width,
                c = o.y - (h.y - i.y) / e.height;
            e.setAnchorPoint(l, c), Gl.add(t);
          }
        }, e;
      }(E)) || Vl) || Vl) || Vl) || Vl) || Vl) || Vl)),
          uc = function (e) {
        return t({
          UICoordinateTracker: e,
          UICoordinateTrackerComponent: e
        }), e;
      }((jl = o("cc.UICoordinateTracker"), Ul = d(), Wl = f(), Zl = g(110), Yl = n(r), Xl = m(), ql = n(gt), Kl = m(), Jl = m(), Ql = m(), $l = n([st]), tc = m(), jl(ec = Ul(ec = Wl(ec = Zl((hc = function (t) {
        function e() {
          for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++) {
            o[n] = arguments[n];
          }

          return e = t.call.apply(t, [this].concat(o)) || this, C(e, "syncEvents", oc, S(e)), C(e, "_target", nc, S(e)), C(e, "_camera", rc, S(e)), C(e, "_useScale", sc, S(e)), C(e, "_distance", ac, S(e)), e._transformPos = new c(), e._viewPos = new c(), e._canMove = !0, e._lastWPos = new c(), e._lastCameraPos = new c(), e;
        }

        a(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          this._checkCanMove();
        }, i.update = function () {
          var t = this.node.worldPosition,
              e = this._camera;

          if (this._canMove && e && e.camera && (!this._lastWPos.equals(t) || !this._lastCameraPos.equals(e.node.worldPosition)) && (this._lastWPos.set(t), this._lastCameraPos.set(e.node.worldPosition), e.camera.update(), e.convertToUINode(t, this._target, this._transformPos), this._useScale && c.transformMat4(this._viewPos, this.node.worldPosition, e.camera.matView), this.syncEvents.length > 0)) {
            var i = this._distance / Math.abs(this._viewPos.z);
            st.emitEvents(this.syncEvents, this._transformPos, i);
          }
        }, i._checkCanMove = function () {
          this._canMove = !(!this._camera || !this._target);
        }, _(e, [{
          key: "target",
          get: function get() {
            return this._target;
          },
          set: function set(t) {
            this._target !== t && (this._target = t, this._checkCanMove());
          }
        }, {
          key: "camera",
          get: function get() {
            return this._camera;
          },
          set: function set(t) {
            this._camera !== t && (this._camera = t, this._checkCanMove());
          }
        }, {
          key: "useScale",
          get: function get() {
            return this._useScale;
          },
          set: function set(t) {
            this._useScale !== t && (this._useScale = t);
          }
        }, {
          key: "distance",
          get: function get() {
            return this._distance;
          },
          set: function set(t) {
            this._distance !== t && (this._distance = t);
          }
        }]), e;
      }(E), p((ic = hc).prototype, "target", [Yl, Xl], Object.getOwnPropertyDescriptor(ic.prototype, "target"), ic.prototype), p(ic.prototype, "camera", [ql, Kl], Object.getOwnPropertyDescriptor(ic.prototype, "camera"), ic.prototype), p(ic.prototype, "useScale", [Jl], Object.getOwnPropertyDescriptor(ic.prototype, "useScale"), ic.prototype), p(ic.prototype, "distance", [Ql], Object.getOwnPropertyDescriptor(ic.prototype, "distance"), ic.prototype), oc = p(ic.prototype, "syncEvents", [$l, O, tc], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), nc = p(ic.prototype, "_target", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), rc = p(ic.prototype, "_camera", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), sc = p(ic.prototype, "_useScale", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), ac = p(ic.prototype, "_distance", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), ec = ic)) || ec) || ec) || ec) || ec)),
          _c = [l.TOUCH_START, l.TOUCH_END, l.TOUCH_MOVE, l.MOUSE_DOWN, l.MOUSE_MOVE, l.MOUSE_UP, l.MOUSE_ENTER, l.MOUSE_LEAVE, l.MOUSE_WHEEL];

      function pc(t) {
        t.propagationStopped = !0;
      }

      var dc,
          gc,
          fc,
          yc,
          bc,
          mc,
          Tc,
          vc,
          Cc,
          Sc,
          Ec,
          Oc,
          Ac,
          wc = function (e) {
        return t({
          BlockInputEvents: e,
          BlockInputEventsComponent: e
        }), e;
      }(o("cc.BlockInputEvents")(lc = d()(lc = f()(lc = function (t) {
        function e() {
          return t.apply(this, arguments) || this;
        }

        a(e, t);
        var i = e.prototype;
        return i.onEnable = function () {
          for (var t = 0; t < _c.length; t++) {
            this.node.on(_c[t], pc, this);
          }
        }, i.onDisable = function () {
          for (var t = 0; t < _c.length; t++) {
            this.node.off(_c[t], pc, this);
          }
        }, e;
      }(E)) || lc) || lc) || lc),
          Lc = t("SubContextView", (dc = o("cc.SubContextView"), gc = d(), fc = g(110), yc = y(Ct), bc = f(), mc = m(), Tc = m(), dc(vc = gc(vc = fc(vc = yc(vc = bc((Oc = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, C(e, "_fps", Sc, S(e)), e._sprite = void 0, e._imageAsset = void 0, e._texture = void 0, e._updatedTime = 0, e._updateInterval = 0, e._openDataContext = void 0, e._content = void 0, C(e, "_designResolutionSize", Ec, S(e)), e._content = new r("content"), e._content.hideFlags |= it.Flags.DontSave | it.Flags.HideInHierarchy, e._sprite = null, e._imageAsset = new ot(), e._openDataContext = null, e._updatedTime = performance.now(), e._texture = new nt(), e;
        }

        a(e, t);
        var i = e.prototype;
        return i.onLoad = function () {
          et.getOpenDataContext ? (this._updateInterval = 1e3 / this._fps, this._openDataContext = et.getOpenDataContext(), this._initSharedCanvas(), this._initContentNode(), this._updateSubContextView(), this._updateContentLayer()) : this.enabled = !1;
        }, i.onEnable = function () {
          this._registerNodeEvent();
        }, i.onDisable = function () {
          this._unregisterNodeEvent();
        }, i._initSharedCanvas = function () {
          if (this._openDataContext) {
            var t = this._openDataContext.canvas;
            t.width = this._designResolutionSize.width, t.height = this._designResolutionSize.height;
          }
        }, i._initContentNode = function () {
          if (this._openDataContext) {
            var t = this._openDataContext.canvas,
                e = this._imageAsset;
            if (e.reset(t), this._texture.image = e, this._texture.create(t.width, t.height), this._sprite = this._content.getComponent(yt), this._sprite || (this._sprite = this._content.addComponent(yt)), this._sprite.spriteFrame) this._sprite.spriteFrame.texture = this._texture;else {
              var i = new ft();
              i.texture = this._texture, this._sprite.spriteFrame = i;
            }
            this._content.parent = this.node;
          }
        }, i._updateSubContextView = function () {
          if (this._openDataContext) {
            var t = this.node.getComponent(Ct),
                e = this._content.getComponent(Ct),
                i = t.width / e.width,
                o = t.height / e.height,
                n = i > o ? o : i;

            e.width *= n, e.height *= n;

            var r = lt.getViewportRect(),
                s = e.getBoundingBoxToWorld(),
                a = lt.getVisibleSize(),
                h = lt.getDevicePixelRatio(),
                l = (r.width * (s.x / a.width) + r.x) / h,
                c = (r.height * (s.y / a.height) + r.y) / h,
                u = r.width * (s.width / a.width) / h,
                _ = r.height * (s.height / a.height) / h;

            this._openDataContext.postMessage({
              fromEngine: !0,
              type: "engine",
              event: "viewport",
              x: l,
              y: c,
              width: u,
              height: _
            });
          }
        }, i._updateSubContextTexture = function () {
          var t = this._imageAsset;

          if (t && this._openDataContext && !(t.width <= 0 || t.height <= 0)) {
            var e = this._openDataContext.canvas;
            t.reset(e), (e.width > t.width || e.height > t.height) && this._texture.create(e.width, e.height), this._texture.uploadData(e);
          }
        }, i._registerNodeEvent = function () {
          this.node.on(l.TRANSFORM_CHANGED, this._updateSubContextView, this), this.node.on(l.SIZE_CHANGED, this._updateSubContextView, this), this.node.on(l.LAYER_CHANGED, this._updateContentLayer, this);
        }, i._unregisterNodeEvent = function () {
          this.node.off(l.TRANSFORM_CHANGED, this._updateSubContextView, this), this.node.off(l.SIZE_CHANGED, this._updateSubContextView, this), this.node.off(l.LAYER_CHANGED, this._updateContentLayer, this);
        }, i._updateContentLayer = function () {
          this._content.layer = this.node.layer;
        }, i.update = function (t) {
          void 0 === t ? this._updateSubContextTexture() : performance.now() - this._updatedTime >= this._updateInterval && (this._updatedTime += this._updateInterval, this._updateSubContextTexture());
        }, i.onDestroy = function () {
          this._content.destroy(), this._texture.destroy(), this._sprite && this._sprite.destroy(), this._imageAsset.destroy(), this._openDataContext = null;
        }, _(e, [{
          key: "designResolutionSize",
          get: function get() {
            return this._designResolutionSize;
          },
          set: function set() {}
        }, {
          key: "fps",
          get: function get() {
            return this._fps;
          },
          set: function set(t) {
            this._fps !== t && (this._fps = t, this._updateInterval = 1e3 / t);
          }
        }]), e;
      }(E), p((Cc = Oc).prototype, "designResolutionSize", [mc], Object.getOwnPropertyDescriptor(Cc.prototype, "designResolutionSize"), Cc.prototype), p(Cc.prototype, "fps", [Tc], Object.getOwnPropertyDescriptor(Cc.prototype, "fps"), Cc.prototype), Sc = p(Cc.prototype, "_fps", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 60;
        }
      }), Ec = p(Cc.prototype, "_designResolutionSize", [O], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new N(640, 960);
        }
      }), vc = Cc)) || vc) || vc) || vc) || vc) || vc));

      L.SubContextView = Lc;
      var Dc = t("UIReorderComponent", o("cc.UIReorderComponent")(Ac = function Ac() {
        J(1408, "UIReorderComponent");
      }) || Ac);
      L.UIReorderComponent = Dc, L.ButtonComponent = we, rt.setClassAlias(we, "cc.ButtonComponent"), L.EditBoxComponent = Ko, rt.setClassAlias(Ko, "cc.EditBoxComponent"), L.LayoutComponent = Cn, rt.setClassAlias(Cn, "cc.LayoutComponent"), L.ProgressBarComponent = Xn, rt.setClassAlias(Xn, "cc.ProgressBarComponent"), L.ScrollViewComponent = Ls, rt.setClassAlias(Ls, "cc.ScrollViewComponent"), L.ScrollBarComponent = Kr, rt.setClassAlias(Kr, "cc.ScrollBarComponent"), L.SliderComponent = Ks, rt.setClassAlias(Ks, "cc.SliderComponent"), L.ToggleComponent = oh, rt.setClassAlias(oh, "cc.ToggleComponent"), L.ToggleContainerComponent = nh, rt.setClassAlias(nh, "cc.ToggleContainerComponent"), L.WidgetComponent = Dh, rt.setClassAlias(Dh, "cc.WidgetComponent"), L.PageViewComponent = Ol, rt.setClassAlias(Ol, "cc.PageViewComponent"), L.PageViewIndicatorComponent = Sl, rt.setClassAlias(Sl, "cc.PageViewIndicatorComponent"), L.SafeAreaComponent = cc, rt.setClassAlias(cc, "cc.SafeAreaComponent"), rt.setClassAlias(uc, "cc.UICoordinateTrackerComponent"), L.BlockInputEventsComponent = wc, rt.setClassAlias(wc, "cc.BlockInputEventsComponent");
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/vertex-format-bf491aa3.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js"], function (e) {
  "use strict";

  var t, n, r, o, T;
  return {
    setters: [function (e) {
      t = e.aH, n = e.b3, r = e.x, o = e.b4, T = e.l;
    }],
    execute: function execute() {
      e({
        b: s,
        g: _
      });
      var R = e("a", [new t(n.ATTR_POSITION, r.RGB32F)]),
          O = e("d", [new t(n.ATTR_POSITION, r.RGB32F), new t(n.ATTR_COLOR, r.RGBA32F)]),
          f = e("c", [new t(n.ATTR_POSITION, r.RGB32F), new t(n.ATTR_TEX_COORD, r.RG32F), new t(n.ATTR_COLOR, r.RGBA32F)]),
          v = e("e", [new t(n.ATTR_POSITION, r.RGB32F), new t(n.ATTR_TEX_COORD, r.RG32F), new t(n.ATTR_COLOR, r.RGBA32F), new t(n.ATTR_COLOR2, r.RGBA32F)]);

      function s(e) {
        for (var t = 0, n = 0; n < e.length; n++) {
          var r = e[n];
          t += o[r.format].count;
        }

        return t;
      }

      function _(e) {
        for (var t = 0, n = 0; n < e.length; n++) {
          var r = e[n];
          t += o[r.format].size;
        }

        return t;
      }

      T.internal.vfmtPosUvColor = f, T.internal.vfmtPosUvTwoColor = v, e("v", Object.freeze({
        __proto__: null,
        vfmt: R,
        vfmtPosColor: O,
        vfmtPosUvColor: f,
        vfmtPosUvTwoColor: v,
        getComponentPerVertex: s,
        getAttributeStride: _
      }));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/video.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./renderable-2d-f6cb180f.js", "./deprecated-ddee6a28.js"], function (t) {
  "use strict";

  var e, i, n, s, o, r, a, l, h, c, p, u, _, d, m, y, f, v, E, b, A, g, w, O, P, T, k, L, R, S, D, C, U, M, V, F, N, H, I;

  return {
    setters: [function (t) {
      e = t.ef, i = t.ec, n = t.e2, s = t.eg, o = t.eh, r = t.ed, a = t.df, l = t.ei, h = t.a, c = t.cJ, p = t.e, u = t.l, _ = t.cd, d = t.dB, m = t.eU, y = t.w, f = t.eW, v = t.gJ, E = t.ac, b = t.ek, A = t.fY, g = t.ge, w = t.fZ, O = t.f_, P = t.gC, T = t.fU, k = t.gf, L = t.co, R = t.dO, S = t.ej;
    }, function (t) {
      D = t.s, C = t.t, U = t.d, M = t.E;
    }, function (t) {
      V = t.s, F = t.w, N = t.v, H = t._;
    }, function () {}, function () {}, function () {}, function () {}, function (t) {
      I = t.U;
    }, function () {}],
    execute: function execute() {
      var x,
          j,
          B,
          G,
          Y = t("VideoClip", e("cc.VideoClip")((G = function (t) {
        function e() {
          var e;
          return e = t.call(this) || this, o(e, "_duration", B, r(e)), e._video = null, e;
        }

        return i(e, t), n(e, [{
          key: "_nativeAsset",
          get: function get() {
            return this._video;
          },
          set: function set(t) {
            this._video = t, this._duration = t ? t.duration : 0;
          }
        }]), e;
      }(a), B = s((j = G).prototype, "_duration", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), x = j)) || x);

      function z(t, e, i) {
        var n = document.createElement("video"),
            s = document.createElement("source");
        n.appendChild(s);
        var o = new XMLHttpRequest();
        o.open("GET", t, !0), o.responseType = "blob", o.onload = function () {
          200 === this.status || 0 === this.status ? (s.src = URL.createObjectURL(this.response), i(null, n)) : i(new Error(o.status + "(no response)"));
        }, o.onerror = function () {
          var e = "load video failure - " + t;
          h(e), i(new Error(e));
        }, o.send();
      }

      function W(t, e, i, n) {
        var s = new Y();
        s._nativeUrl = t, s._nativeAsset = e, n(null, s);
      }

      D.register({
        ".mp4": z,
        ".avi": z,
        ".mov": z,
        ".mpg": z,
        ".mpeg": z,
        ".rm": z,
        ".rmvb": z
      }), C.register({
        ".mp4": W,
        ".avi": W,
        ".mov": W,
        ".mpg": W,
        ".mpeg": W,
        ".rm": W,
        ".rmvb": W
      });
      var K,
          q,
          J = c({
        REMOTE: 0,
        LOCAL: 1
      });
      !function (t) {
        t.NONE = "none", t.PLAYING = "playing", t.PAUSED = "paused", t.STOPPED = "stopped", t.COMPLETED = "completed", t.META_LOADED = "meta-loaded", t.READY_TO_PLAY = "ready-to-play", t.ERROR = "error", t.CLICKED = "clicked";
      }(K || (K = {})), function (t) {
        t[t.HAVE_NOTHING = 0] = "HAVE_NOTHING", t[t.HAVE_METADATA = 1] = "HAVE_METADATA", t[t.HAVE_CURRENT_DATA = 2] = "HAVE_CURRENT_DATA", t[t.HAVE_FUTURE_DATA = 3] = "HAVE_FUTURE_DATA", t[t.HAVE_ENOUGH_DATA = 4] = "HAVE_ENOUGH_DATA";
      }(q || (q = {}));

      var Q = function () {
        function t(t) {
          var e = this;
          this._componentEventList = new Map(), this._state = K.NONE, this._video = null, this._onHide = void 0, this._onShow = void 0, this._interrupted = !1, this._loaded = !1, this._loadedMeta = !1, this._ignorePause = !1, this._fullScreenOnAwake = !1, this._visible = !0, this._playing = !1, this._cachedCurrentTime = -1, this._waitingFullscreen = !1, this._waitingPlay = !1, this._keepAspectRatio = !1, this._component = null, this._uiTrans = null, this._node = null, this._stayOnBottom = !1, this._dirty = !1, this._forceUpdate = !1, this._w = 0, this._h = 0, this._m00 = 0, this._m01 = 0, this._m04 = 0, this._m05 = 0, this._m12 = 0, this._m13 = 0, this._component = t, this._node = t.node, this._uiTrans = t.node.getComponent(I), this._onHide = function () {
            e.video && e._state === K.PLAYING && (e.video.pause(), e._interrupted = !0);
          }, this._onShow = function () {
            e._interrupted && e.video && (e.video.play(), e._interrupted = !1);
          }, u.game.on(u.Game.EVENT_HIDE, this._onHide), u.game.on(u.Game.EVENT_SHOW, this._onShow);
        }

        var e = t.prototype;
        return e.onLoadedMetadata = function (t) {
          this._loadedMeta = !0, this._forceUpdate = !0, this._visible ? this.enable() : this.disable(), this.dispatchEvent(K.META_LOADED);
          var e = t.target;
          this._keepAspectRatio && e && this.syncUITransform(e.videoWidth, e.videoHeight), this.delayedFullScreen(), this.delayedPlay();
        }, e.onCanPlay = function () {
          this._loaded = !0, this.dispatchEvent(K.READY_TO_PLAY);
        }, e.onPlay = function () {
          this._playing = !0, this.dispatchEvent(K.PLAYING);
        }, e.onPlaying = function () {
          this.dispatchEvent(K.PLAYING);
        }, e.onPause = function () {
          this._ignorePause ? this._ignorePause = !1 : (this._playing = !1, this.dispatchEvent(K.PAUSED));
        }, e.onStoped = function () {
          this._playing = !1, this._ignorePause = !1, this.dispatchEvent(K.STOPPED);
        }, e.onEnded = function () {
          this.dispatchEvent(K.COMPLETED);
        }, e.onClick = function () {
          this.dispatchEvent(K.CLICKED);
        }, e.onError = function (t) {
          this.dispatchEvent(K.ERROR);
          var e = t.target;
          e && e.error && p("Error " + e.error.code + "; details: " + e.error.message);
        }, e.play = function () {
          this._loadedMeta || this._loaded ? this.canPlay() : this._waitingPlay = !0;
        }, e.delayedPlay = function () {
          this._waitingPlay && (this.canPlay(), this._waitingPlay = !1);
        }, e.syncFullScreenOnAwake = function (t) {
          this._fullScreenOnAwake = t, this._loadedMeta || this._loaded ? this.canFullScreen(t) : this._waitingFullscreen = !0;
        }, e.delayedFullScreen = function () {
          this._waitingFullscreen && (this.canFullScreen(this._fullScreenOnAwake), this._waitingFullscreen = !1);
        }, e.dispatchEvent = function (t) {
          var e = this._componentEventList.get(t);

          e && (this._state = t, e.call(this));
        }, e.syncUITransform = function (t, e) {
          this._uiTrans && (this._uiTrans.width = t, this._uiTrans.height = e);
        }, e.syncCurrentTime = function () {
          this.video && -1 !== this._cachedCurrentTime && this.video.currentTime !== this._cachedCurrentTime && (this.seekTo(this._cachedCurrentTime), this._cachedCurrentTime = -1);
        }, e.destroy = function () {
          this.removeVideoPlayer(), this._componentEventList.clear(), u.game.off(u.Game.EVENT_HIDE, this._onHide), u.game.off(u.Game.EVENT_SHOW, this._onShow);
        }, n(t, [{
          key: "fullScreenOnAwake",
          get: function get() {
            return this._fullScreenOnAwake;
          }
        }, {
          key: "loaded",
          get: function get() {
            return this._loaded;
          }
        }, {
          key: "componentEventList",
          get: function get() {
            return this._componentEventList;
          }
        }, {
          key: "video",
          get: function get() {
            return this._video;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state;
          }
        }, {
          key: "isPlaying",
          get: function get() {
            return this._playing;
          }
        }, {
          key: "UICamera",
          get: function get() {
            return U.root.batcher2D.getFirstRenderCamera(this._node);
          }
        }]), t;
      }();

      u.internal.VideoPlayerImpl = Q;

      var X,
          Z,
          $,
          tt,
          et,
          it,
          nt,
          st,
          ot,
          rt,
          at,
          lt,
          ht,
          ct,
          pt,
          ut,
          _t,
          dt,
          mt,
          yt,
          ft,
          vt,
          Et,
          bt,
          At,
          gt,
          wt,
          Ot,
          Pt,
          Tt,
          kt,
          Lt,
          Rt,
          St,
          Dt,
          Ct,
          Ut,
          Mt,
          Vt,
          Ft = -Math.pow(2, 15),
          Nt = _(),
          Ht = function (t) {
        function e(e) {
          var i;
          return (i = t.call(this, e) || this)._eventList = new Map(), i._clearColorA = -1, i._clearFlag = void 0, i;
        }

        i(e, t);
        var n = e.prototype;
        return n.addListener = function (t, e) {
          this._video && (this._eventList.set(t, e), this._video.addEventListener(t, e));
        }, n.removeAllListeners = function () {
          var t = this;
          this._eventList.forEach(function (e, i) {
            t._video && t._video.removeEventListener(i, e);
          }), this._eventList.clear();
        }, n.canPlay = function () {
          var t = this;

          if (this.video) {
            var e = this.video.play();
            window.Promise && e instanceof Promise && e.catch(function () {}).then(function () {
              t.syncCurrentTime();
            });
          }
        }, n.pause = function () {
          this.video && (this.video.pause(), this._cachedCurrentTime = this.video.currentTime);
        }, n.resume = function () {
          this.play();
        }, n.stop = function () {
          var t = this;
          this.video && (this._ignorePause = !0, this.video.currentTime = 0, this.video.pause(), this._cachedCurrentTime = 0, setTimeout(function () {
            t._ignorePause = !1, t.dispatchEvent(K.STOPPED);
          }, 0));
        }, n.syncClip = function (t) {
          this.removeVideoPlayer(), t && this.createVideoPlayer(t.nativeUrl);
        }, n.syncURL = function (t) {
          this.removeVideoPlayer(), t && this.createVideoPlayer(t);
        }, n.syncPlaybackRate = function (t) {
          d.browserType !== m.UC ? this.video && (this.video.playbackRate = t) : y("playbackRate is not supported by the uc mobile browser.");
        }, n.syncVolume = function (t) {
          this.video && (this.video.volume = t);
        }, n.syncMute = function (t) {
          this.video && (this.video.muted = t);
        }, n.syncLoop = function (t) {
          this.video && (this.video.loop = t);
        }, n.getDuration = function () {
          return this.video ? this.video.duration : 0;
        }, n.getCurrentTime = function () {
          return this.video ? this.video.currentTime : -1;
        }, n.seekTo = function (t) {
          this.video && (this.video.currentTime = t);
        }, n.canFullScreen = function (t) {
          var e = this,
              i = this._video;
          if (i && i.readyState === q.HAVE_ENOUGH_DATA) return d.os === f.IOS && d.isBrowser ? (t ? i.webkitEnterFullscreen && i.webkitEnterFullscreen() : i.webkitExitFullscreen && i.webkitExitFullscreen(), void (this._fullScreenOnAwake = i.webkitDisplayingFullscreen)) : V.supportsFullScreen ? void (t ? (d.browserType === m.IE && (i.style.transform = ""), i.setAttribute("x5-video-player-fullscreen", "true"), V.requestFullScreen(i, function (t) {
            var n = d.browserType === m.IE ? t.msFullscreenElement : t.fullscreenElement;
            e._fullScreenOnAwake = n === i;
          }, function () {
            e._fullScreenOnAwake = !1;
          })) : (i.removeAttribute("x5-video-player-fullscreen"), V.exitFullScreen())) : (this._fullScreenOnAwake = t, this._forceUpdate = !0, void this.syncMatrix());
        }, n.syncStayOnBottom = function (t) {
          this._video && (this._video.style["z-index"] = t ? Ft : 0, this._stayOnBottom = t), this._dirty = !0;
        }, n.syncKeepAspectRatio = function (t) {
          this._keepAspectRatio = t, t && this._loadedMeta && this._video && this.syncUITransform(this._video.videoWidth, this._video.videoHeight);
        }, n.removeVideoPlayer = function () {
          var t = this._video;
          t && v(F.container, t) && (F.container.removeChild(t), this.removeAllListeners()), this._cachedCurrentTime = 0, this._playing = !1, this._loaded = !1, this._loadedMeta = !1, this._video = null;
        }, n.createVideoPlayer = function (t) {
          var e = this._video = document.createElement("video");
          e.className = "cocosVideo", e.style.visibility = "hidden", e.style.position = "absolute", e.style.bottom = "0px", e.style.left = "0px", e.style["transform-origin"] = "0px 100% 0px", e.style["-webkit-transform-origin"] = "0px 100% 0px", e.setAttribute("preload", "auto"), e.setAttribute("webkit-playsinline", ""), e.setAttribute("x5-playsinline", ""), e.setAttribute("playsinline", ""), this._bindDomEvent(), F.container.appendChild(e);
          var i = document.createElement("source");
          e.appendChild(i), i.src = t;
        }, n._bindDomEvent = function () {
          this._video, this.addListener("loadedmetadata", this.onLoadedMetadata.bind(this)), this.addListener("canplay", this.onCanPlay.bind(this)), this.addListener("canplaythrough", this.onCanPlay.bind(this)), this.addListener("play", this.onPlay.bind(this)), this.addListener("playing", this.onPlaying.bind(this)), this.addListener("pause", this.onPause.bind(this)), this.addListener("click", this.onClick.bind(this)), this.addListener("ended", this.onEnded.bind(this)), this.addListener("error", this.onError.bind(this));
        }, n.onCanPlay = function (e) {
          var i = e.target;
          if (!this._loaded || !i) switch (i.readyState) {
            case q.HAVE_METADATA:
            case q.HAVE_ENOUGH_DATA:
              t.prototype.onCanPlay.call(this, e);
          }
        }, n.enable = function () {
          if (this._video) {
            if (this._visible = !0, "visible" === this._video.style.visibility) return;
            this._video.style.visibility = "visible";
          }
        }, n.disable = function (t) {
          if (this._video) {
            if (!t && this._playing && this._video.pause(), this._visible = !1, "hidden" === this._video.style.visibility) return;
            this._video.style.visibility = "hidden";
          }
        }, n.syncMatrix = function () {
          if (this._video && this._visible && this._component) {
            var t = this.UICamera;

            if (t && !V.fullScreen()) {
              this._dirty && (this._dirty = !1, this._stayOnBottom ? (this._clearColorA = t.clearColor.w, this._clearFlag = t.clearFlag, t.clearColor.w = 0, t.clearFlag = E.ALL) : this._clearFlag && (t.clearColor.w = this._clearColorA, t.clearFlag = this._clearFlag, this._clearColorA = -1, this._clearFlag = null)), this._component.node.getWorldMatrix(Nt), t.update(!0), t.worldMatrixToScreen(Nt, Nt, F.canvas.width, F.canvas.height);
              var e = 0,
                  i = 0;

              if (this._fullScreenOnAwake ? (e = H.width, i = H.height) : (e = this._uiTrans.contentSize.width, i = this._uiTrans.contentSize.height), this._forceUpdate || this._m00 !== Nt.m00 || this._m01 !== Nt.m01 || this._m04 !== Nt.m04 || this._m05 !== Nt.m05 || this._m12 !== Nt.m12 || this._m13 !== Nt.m13 || this._w !== e || this._h !== i) {
                this._m00 = Nt.m00, this._m01 = Nt.m01, this._m04 = Nt.m04, this._m05 = Nt.m05, this._m12 = Nt.m12, this._m13 = Nt.m13, this._w = e, this._h = i;
                var n = N.getDevicePixelRatio(),
                    s = 1 / n,
                    o = 1 / n,
                    r = F.container,
                    a = Nt.m00 * s,
                    l = Nt.m01,
                    h = Nt.m04,
                    c = Nt.m05 * o;
                this._video.style.width = this._w + "px", this._video.style.height = this._h + "px", d.browserType !== m.MOBILE_QQ ? this._video.style.objectFit = this._keepAspectRatio ? "none" : "fill" : y("keepAspectRatio is not supported by the qq mobile browser.");
                var p = this._w * s,
                    u = this._h * o,
                    _ = this._uiTrans.anchorPoint,
                    f = _.x,
                    v = _.y,
                    b = p * Nt.m00 * f,
                    A = u * Nt.m05 * v,
                    g = r && r.style.paddingLeft ? parseInt(r.style.paddingLeft) : 0,
                    w = r && r.style.paddingBottom ? parseInt(r.style.paddingBottom) : 0,
                    O = "matrix(" + a + "," + -l + "," + -h + "," + c + "," + (Nt.m12 * s - b + g) + "," + -(Nt.m13 * o - A + w) + ")";
                this._video.style.transform = O, this._video.style["-webkit-transform"] = O, d.browserType !== m.IE && (this._forceUpdate = !1);
              }
            }
          }
        }, e;
      }(Q),
          It = function () {
        function t() {}

        return t.getImpl = function (t) {
          return new Ht(t);
        }, t;
      }();

      u.internal.VideoPlayerImplManager = It;
      var xt = t("VideoPlayer", (X = e("cc.VideoPlayer"), Z = w(), $ = O(), tt = P(I), et = b(Y), it = b(J), nt = T(), st = T(), ot = b(Y), rt = T(), at = T(), lt = k(), ht = T(), ct = k(), pt = T(), ut = T(), _t = T(), dt = T(), mt = T(), yt = T(), ft = b([M]), vt = S(), Et = T(), X(bt = Z(bt = $(bt = tt(bt = A((Vt = Mt = function (t) {
        function e() {
          for (var e, i = arguments.length, n = new Array(i), s = 0; s < i; s++) {
            n[s] = arguments[s];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, o(e, "_resourceType", gt, r(e)), o(e, "_remoteURL", wt, r(e)), o(e, "_clip", Ot, r(e)), o(e, "_playOnAwake", Pt, r(e)), o(e, "_volume", Tt, r(e)), o(e, "_mute", kt, r(e)), o(e, "_playbackRate", Lt, r(e)), o(e, "_loop", Rt, r(e)), o(e, "_fullScreenOnAwake", St, r(e)), o(e, "_stayOnBottom", Dt, r(e)), o(e, "_keepAspectRatio", Ct, r(e)), e._impl = null, e._cachedCurrentTime = 0, o(e, "videoPlayerEvent", Ut, r(e)), e;
        }

        i(e, t);
        var s = e.prototype;
        return s.syncSource = function () {
          this._impl && (this._resourceType === J.REMOTE ? this._impl.syncURL(this._remoteURL) : this._impl.syncClip(this._clip));
        }, s.__preload = function () {
          this._impl = It.getImpl(this), this.syncSource(), this._impl.syncLoop(this._loop), this._impl.syncVolume(this._volume), this._impl.syncMute(this._mute), this._impl.seekTo(this._cachedCurrentTime), this._impl.syncPlaybackRate(this._playbackRate), this._impl.syncStayOnBottom(this._stayOnBottom), this._impl.syncKeepAspectRatio(this._keepAspectRatio), this._impl.syncFullScreenOnAwake(this._fullScreenOnAwake), this._impl.componentEventList.set(K.META_LOADED, this.onMetaLoaded.bind(this)), this._impl.componentEventList.set(K.READY_TO_PLAY, this.onReadyToPlay.bind(this)), this._impl.componentEventList.set(K.PLAYING, this.onPlaying.bind(this)), this._impl.componentEventList.set(K.PAUSED, this.onPasued.bind(this)), this._impl.componentEventList.set(K.STOPPED, this.onStopped.bind(this)), this._impl.componentEventList.set(K.COMPLETED, this.onCompleted.bind(this)), this._impl.componentEventList.set(K.ERROR, this.onError.bind(this)), this._playOnAwake && this._impl.loaded && this.play();
        }, s.onEnable = function () {
          this._impl && this._impl.enable();
        }, s.onDisable = function () {
          this._impl && this._impl.disable();
        }, s.onDestroy = function () {
          this._impl && (this._impl.destroy(), this._impl = null);
        }, s.update = function () {
          this._impl && this._impl.syncMatrix();
        }, s.onMetaLoaded = function () {
          M.emitEvents(this.videoPlayerEvent, this, K.META_LOADED), this.node.emit("meta-loaded", this);
        }, s.onReadyToPlay = function () {
          this._playOnAwake && !this.isPlaying && this.play(), M.emitEvents(this.videoPlayerEvent, this, K.READY_TO_PLAY), this.node.emit(K.READY_TO_PLAY, this);
        }, s.onPlaying = function () {
          M.emitEvents(this.videoPlayerEvent, this, K.PLAYING), this.node.emit(K.PLAYING, this);
        }, s.onPasued = function () {
          M.emitEvents(this.videoPlayerEvent, this, K.PAUSED), this.node.emit(K.PAUSED, this);
        }, s.onStopped = function () {
          M.emitEvents(this.videoPlayerEvent, this, K.STOPPED), this.node.emit(K.STOPPED, this);
        }, s.onCompleted = function () {
          M.emitEvents(this.videoPlayerEvent, this, K.COMPLETED), this.node.emit(K.COMPLETED, this);
        }, s.onError = function () {
          M.emitEvents(this.videoPlayerEvent, this, K.ERROR), this.node.emit(K.ERROR, this);
        }, s.play = function () {
          this._impl && this._impl.play();
        }, s.resume = function () {
          this._impl && this._impl.resume();
        }, s.pause = function () {
          this._impl && this._impl.pause();
        }, s.stop = function () {
          this._impl && this._impl.stop();
        }, n(e, [{
          key: "resourceType",
          get: function get() {
            return this._resourceType;
          },
          set: function set(t) {
            this._resourceType !== t && (this._resourceType = t, this.syncSource());
          }
        }, {
          key: "remoteURL",
          get: function get() {
            return this._remoteURL;
          },
          set: function set(t) {
            this._remoteURL !== t && (this._remoteURL = t, this.syncSource());
          }
        }, {
          key: "clip",
          get: function get() {
            return this._clip;
          },
          set: function set(t) {
            this._clip !== t && (this._clip = t, this.syncSource());
          }
        }, {
          key: "playOnAwake",
          get: function get() {
            return this._playOnAwake;
          },
          set: function set(t) {
            this._playOnAwake = t;
          }
        }, {
          key: "playbackRate",
          get: function get() {
            return this._playbackRate;
          },
          set: function set(t) {
            this._playbackRate = t, this._impl && this._impl.syncPlaybackRate(t);
          }
        }, {
          key: "volume",
          get: function get() {
            return this._volume;
          },
          set: function set(t) {
            this._volume = t, this._impl && this._impl.syncVolume(t);
          }
        }, {
          key: "mute",
          get: function get() {
            return this._mute;
          },
          set: function set(t) {
            this._mute = t, this._impl && this._impl.syncMute(t);
          }
        }, {
          key: "loop",
          get: function get() {
            return this._loop;
          },
          set: function set(t) {
            this._loop = t, this._impl && this._impl.syncLoop(t);
          }
        }, {
          key: "keepAspectRatio",
          get: function get() {
            return this._keepAspectRatio;
          },
          set: function set(t) {
            this._keepAspectRatio !== t && (this._keepAspectRatio = t, this._impl && this._impl.syncKeepAspectRatio(t));
          }
        }, {
          key: "fullScreenOnAwake",
          get: function get() {
            return this._impl ? (this._fullScreenOnAwake = this._impl.fullScreenOnAwake, this._fullScreenOnAwake) : this._fullScreenOnAwake;
          },
          set: function set(t) {
            this._fullScreenOnAwake !== t && (this._fullScreenOnAwake = t, this._impl && this._impl.syncFullScreenOnAwake(t));
          }
        }, {
          key: "stayOnBottom",
          get: function get() {
            return this._stayOnBottom;
          },
          set: function set(t) {
            this._stayOnBottom !== t && (this._stayOnBottom = t, this._impl && this._impl.syncStayOnBottom(t));
          }
        }, {
          key: "nativeVideo",
          get: function get() {
            return this._impl && this._impl.video || null;
          }
        }, {
          key: "currentTime",
          get: function get() {
            return this._impl ? this._impl.getCurrentTime() : this._cachedCurrentTime;
          },
          set: function set(t) {
            Number.isNaN(t) ? y("illegal video time! value:" + t) : (t = L(t, 0, this.duration), this._cachedCurrentTime = t, this._impl && this._impl.seekTo(t));
          }
        }, {
          key: "duration",
          get: function get() {
            return this._impl ? this._impl.getDuration() : 0;
          }
        }, {
          key: "state",
          get: function get() {
            return this._impl ? this._impl.state : K.NONE;
          }
        }, {
          key: "isPlaying",
          get: function get() {
            return !!this._impl && this._impl.isPlaying;
          }
        }]), e;
      }(R), Mt.EventType = K, Mt.ResourceType = J, gt = s((At = Vt).prototype, "_resourceType", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return J.LOCAL;
        }
      }), wt = s(At.prototype, "_remoteURL", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Ot = s(At.prototype, "_clip", [et, l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), Pt = s(At.prototype, "_playOnAwake", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), Tt = s(At.prototype, "_volume", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), kt = s(At.prototype, "_mute", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Lt = s(At.prototype, "_playbackRate", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Rt = s(At.prototype, "_loop", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), St = s(At.prototype, "_fullScreenOnAwake", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Dt = s(At.prototype, "_stayOnBottom", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), Ct = s(At.prototype, "_keepAspectRatio", [l], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !0;
        }
      }), s(At.prototype, "resourceType", [it, nt], Object.getOwnPropertyDescriptor(At.prototype, "resourceType"), At.prototype), s(At.prototype, "remoteURL", [st], Object.getOwnPropertyDescriptor(At.prototype, "remoteURL"), At.prototype), s(At.prototype, "clip", [ot, rt], Object.getOwnPropertyDescriptor(At.prototype, "clip"), At.prototype), s(At.prototype, "playOnAwake", [at], Object.getOwnPropertyDescriptor(At.prototype, "playOnAwake"), At.prototype), s(At.prototype, "playbackRate", [g, lt, ht], Object.getOwnPropertyDescriptor(At.prototype, "playbackRate"), At.prototype), s(At.prototype, "volume", [g, ct, pt], Object.getOwnPropertyDescriptor(At.prototype, "volume"), At.prototype), s(At.prototype, "mute", [ut], Object.getOwnPropertyDescriptor(At.prototype, "mute"), At.prototype), s(At.prototype, "loop", [_t], Object.getOwnPropertyDescriptor(At.prototype, "loop"), At.prototype), s(At.prototype, "keepAspectRatio", [dt], Object.getOwnPropertyDescriptor(At.prototype, "keepAspectRatio"), At.prototype), s(At.prototype, "fullScreenOnAwake", [mt], Object.getOwnPropertyDescriptor(At.prototype, "fullScreenOnAwake"), At.prototype), s(At.prototype, "stayOnBottom", [yt], Object.getOwnPropertyDescriptor(At.prototype, "stayOnBottom"), At.prototype), Ut = s(At.prototype, "videoPlayerEvent", [l, ft, vt, Et], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), bt = At)) || bt) || bt) || bt) || bt) || bt));
      u.internal.VideoPlayer = xt;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/view-50c22e7e.js", function(require, module, exports){ 			
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

System.register(["./json-asset-1a4fee7d.js"], function (e) {
  "use strict";

  var t, i, n, r, s, a, o, h, u, c, _, l, d, f, p, g, v, m, S, E, T, w, y, O, I, A, b, F, R, D, N, P, L, B, C, M, x, U, H, G, z, k, V, W, K, Y, Q, q, X, j, Z, J, $, ee, te, ie, ne, re, se, ae, oe, he, ue, ce, _e, le, de, fe, pe, ge, ve, me, Se, Ee, Te, we, ye, Oe, Ie, Ae, be, Fe, Re, De, Ne, Pe, Le, Be, Ce, Me, xe, Ue, He, Ge, ze, ke, Ve, We, Ke, Ye, Qe, qe, Xe, je, Ze, Je, $e, et, tt, it, nt, rt, st, at, ot, ht, ut, ct, _t, lt, dt, ft, pt, gt, vt, mt, St, Et, Tt, wt, yt, Ot, It, At, bt, Ft, Rt, Dt, Nt, Pt, Lt;

  return {
    setters: [function (e) {
      t = e.c5, i = e.cc, n = e.ac, r = e.d$, s = e.v, a = e.l, o = e.e0, h = e.e1, u = e.cq, c = e.e2, _ = e.cr, l = e.ao, d = e.ch, f = e.e3, p = e.bN, g = e.e4, v = e.dF, m = e.av, S = e.H, E = e.I, T = e.x, w = e.J, y = e.e5, O = e.L, I = e.N, A = e.bT, b = e.bU, F = e.e6, R = e.aU, D = e.f, N = e.e7, P = e.aq, L = e.z, B = e.G, C = e.aH, M = e.aJ, x = e.P, U = e.dJ, H = e.e8, G = e.e9, z = e.c7, k = e.dQ, V = e.F, W = e.b4, K = e.bd, Y = e.ea, Q = e.t, q = e.eb, X = e.cS, j = e.cR, Z = e.bO, J = e.bA, $ = e.ec, ee = e.bw, te = e.bM, ie = e.ed, ne = e.dr, re = e.ee, se = e.c9, ae = e.ef, oe = e.eg, he = e.eh, ue = e.ei, ce = e.ej, _e = e.ek, le = e.el, de = e.c3, fe = e.em, pe = e.en, ge = e.by, ve = e.eo, me = e.ep, Se = e.eq, Ee = e.cj, Te = e.er, we = e.es, ye = e.aT, Oe = e.et, Ie = e.df, Ae = e.ag, be = e.aW, Fe = e.bn, Re = e.cK, De = e.$, Ne = e.Z, Pe = e.a0, Le = e.ds, Be = e.d7, Ce = e.eu, Me = e.R, xe = e.C, Ue = e.ev, He = e.ew, Ge = e.ex, ze = e.ar, ke = e.ey, Ve = e.cz, We = e.ez, Ke = e.aK, Ye = e.aL, Qe = e.aO, qe = e.aR, Xe = e.eA, je = e.eB, Ze = e.eC, Je = e.eD, $e = e.eE, et = e.eF, tt = e.eG, it = e.eH, nt = e.eI, rt = e.eJ, st = e.eK, at = e.dd, ot = e.eL, ht = e.dD, ut = e.eM, ct = e.dc, _t = e.eN, lt = e.c, dt = e.dC, ft = e.eO, pt = e.eP, gt = e.eQ, vt = e.d, mt = e.a, St = e.c1, Et = e.eR, Tt = e.dy, wt = e.dA, yt = e.eS, Ot = e.dB, It = e.dz, At = e.b2, bt = e.eT, Ft = e.eU, Rt = e.e, Dt = e.w, Nt = e.eV, Pt = e.cf, Lt = e.eW;
    }],
    execute: function execute() {
      var Bt, Ct, Mt, xt, Ut;
      e({
        C: void 0,
        K: void 0,
        L: void 0,
        M: void 0,
        a: void 0,
        b: void 0,
        c: void 0,
        d: void 0,
        g: ai
      }), function (e) {
        e[e.VERTICAL = 0] = "VERTICAL", e[e.HORIZONTAL = 1] = "HORIZONTAL";
      }(Bt || (Bt = e("C", {}))), function (e) {
        e[e.ORTHO = 0] = "ORTHO", e[e.PERSPECTIVE = 1] = "PERSPECTIVE";
      }(Ct || (Ct = e("a", {}))), function (e) {
        e[e.F1_8 = 0] = "F1_8", e[e.F2_0 = 1] = "F2_0", e[e.F2_2 = 2] = "F2_2", e[e.F2_5 = 3] = "F2_5", e[e.F2_8 = 4] = "F2_8", e[e.F3_2 = 5] = "F3_2", e[e.F3_5 = 6] = "F3_5", e[e.F4_0 = 7] = "F4_0", e[e.F4_5 = 8] = "F4_5", e[e.F5_0 = 9] = "F5_0", e[e.F5_6 = 10] = "F5_6", e[e.F6_3 = 11] = "F6_3", e[e.F7_1 = 12] = "F7_1", e[e.F8_0 = 13] = "F8_0", e[e.F9_0 = 14] = "F9_0", e[e.F10_0 = 15] = "F10_0", e[e.F11_0 = 16] = "F11_0", e[e.F13_0 = 17] = "F13_0", e[e.F14_0 = 18] = "F14_0", e[e.F16_0 = 19] = "F16_0", e[e.F18_0 = 20] = "F18_0", e[e.F20_0 = 21] = "F20_0", e[e.F22_0 = 22] = "F22_0";
      }(Mt || (Mt = e("b", {}))), function (e) {
        e[e.ISO100 = 0] = "ISO100", e[e.ISO200 = 1] = "ISO200", e[e.ISO400 = 2] = "ISO400", e[e.ISO800 = 3] = "ISO800";
      }(xt || (xt = e("c", {}))), function (e) {
        e[e.D1 = 0] = "D1", e[e.D2 = 1] = "D2", e[e.D4 = 2] = "D4", e[e.D8 = 3] = "D8", e[e.D15 = 4] = "D15", e[e.D30 = 5] = "D30", e[e.D60 = 6] = "D60", e[e.D125 = 7] = "D125", e[e.D250 = 8] = "D250", e[e.D500 = 9] = "D500", e[e.D1000 = 10] = "D1000", e[e.D2000 = 11] = "D2000", e[e.D4000 = 12] = "D4000";
      }(Ut || (Ut = e("d", {})));
      var Ht = [1.8, 2, 2.2, 2.5, 2.8, 3.2, 3.5, 4, 4.5, 5, 5.6, 6.3, 7.1, 8, 9, 10, 11, 13, 14, 16, 18, 20, 22],
          Gt = [1, .5, 1 / 4, 1 / 8, 1 / 15, 1 / 30, 1 / 60, .008, .004, .002, .001, 5e-4, 1 / 4e3],
          zt = [100, 200, 400, 800],
          kt = new t(),
          Vt = new t(),
          Wt = new i(),
          Kt = e("S", n.STENCIL << 1),
          Yt = [],
          Qt = e("e", function () {
        function e(e) {
          if (this.isWindowSize = !0, this.screenScale = void 0, this._device = void 0, this._scene = null, this._node = null, this._name = null, this._enabled = !1, this._proj = -1, this._aspect = void 0, this._orthoHeight = 10, this._fovAxis = Bt.VERTICAL, this._fov = _(45), this._nearClip = 1, this._farClip = 1e3, this._clearColor = new l(.2, .2, .2, 1), this._viewport = new d(0, 0, 1, 1), this._curTransform = s.IDENTITY, this._isProjDirty = !0, this._matView = new i(), this._matViewInv = null, this._matProj = new i(), this._matProjInv = new i(), this._matViewProj = new i(), this._matViewProjInv = new i(), this._frustum = new f(), this._forward = new t(), this._position = new t(), this._priority = 0, this._aperture = Mt.F16_0, this._apertureValue = void 0, this._shutter = Ut.D125, this._shutterValue = 0, this._iso = xt.ISO100, this._isoValue = 0, this._ec = 0, this._window = null, this._width = 1, this._height = 1, this._clearFlag = n.NONE, this._clearDepth = 1, this._visibility = r, this._exposure = 0, this._clearStencil = 0, this._device = e, this._apertureValue = Ht[this._aperture], this._shutterValue = Gt[this._shutter], this._isoValue = zt[this._iso], this._aspect = this.screenScale = 1, this._frustum.accurate = !0, !Yt.length) {
            var a = e.capabilities.clipSpaceSignY;
            Yt[s.IDENTITY] = new i(1, 0, 0, 0, 0, a), Yt[s.ROTATE_90] = new i(0, 1, 0, 0, -a, 0), Yt[s.ROTATE_180] = new i(-1, 0, 0, 0, 0, -a), Yt[s.ROTATE_270] = new i(0, -1, 0, 0, a, 0);
          }
        }

        var p = e.prototype;
        return p._setWidth = function (e) {
          this._width = e;
        }, p._setHeight = function (e) {
          this._height = e;
        }, p._setScene = function (e) {
          this._scene = e;
        }, p._init = function () {}, p.initialize = function (e) {
          this._init(e), this.node = e.node, this._setWidth(1), this._setHeight(1), this.clearFlag = n.NONE, this.clearDepth = 1, this.visibility = r, this._name = e.name, this._proj = e.projection, this._priority = e.priority || 0, this._aspect = this.screenScale = 1, this.updateExposure(), this.changeTargetWindow(e.window);
        }, p._destroy = function () {}, p.destroy = function () {
          this._window && (this._window.detachCamera(this), this.window = null), this._name = null, this._destroy();
        }, p.attachToScene = function (e) {
          this._enabled = !0, this._setScene(e);
        }, p.detachFromScene = function () {
          this._enabled = !1, this._setScene(null);
        }, p.resize = function (e, t) {
          this._window && (this._setWidth(e), this._setHeight(t), this._aspect = e * this._viewport.width / (t * this._viewport.height), this._isProjDirty = !0);
        }, p.setFixedSize = function (e, t) {
          this._setWidth(e), this._setHeight(t), this._aspect = e * this._viewport.width / (t * this._viewport.height), this.isWindowSize = !1;
        }, p.update = function (e) {
          if (void 0 === e && (e = !1), this._node) {
            var t = !1;
            (this._node.hasChangedFlags || e) && (i.invert(this._matView, this._node.worldMatrix), this._forward.x = -this._matView.m02, this._forward.y = -this._matView.m06, this._forward.z = -this._matView.m10, this._node.getWorldPosition(this._position), t = !0);
            var n = this._device.surfaceTransform;

            if (this._isProjDirty || this._curTransform !== n) {
              var r;
              this._curTransform = n;
              var a = this._device.capabilities.clipSpaceSignY;
              if ((null === (r = this.window) || void 0 === r ? void 0 : r.hasOffScreenAttachments) && (n = s.IDENTITY), this._proj === Ct.PERSPECTIVE) i.perspective(this._matProj, this._fov, this._aspect, this._nearClip, this._farClip, this._fovAxis === Bt.VERTICAL, this._device.capabilities.clipSpaceMinZ, a, n);else {
                var o = this._orthoHeight * this._aspect,
                    h = this._orthoHeight;
                i.ortho(this._matProj, -o, o, -h, h, this._nearClip, this._farClip, this._device.capabilities.clipSpaceMinZ, a, n);
              }
              i.invert(this._matProjInv, this._matProj), t = !0, this._isProjDirty = !1;
            }

            t && (i.multiply(this._matViewProj, this._matProj, this._matView), i.invert(this._matViewProjInv, this._matViewProj), this._frustum.update(this._matViewProj, this._matViewProjInv));
          }
        }, p.changeTargetWindow = function (e) {
          void 0 === e && (e = null), this._window && this._window.detachCamera(this);
          var t = e || a.director.root.mainWindow;
          t && (t.attachCamera(this), this.window = t, this.resize(t.width, t.height));
        }, p.detachCamera = function () {
          this._window && this._window.detachCamera(this);
        }, p.screenPointToRay = function (e, i, n) {
          if (!this._node) return null;

          var r = this.width,
              s = this.height,
              a = this._viewport.x * r,
              u = this._viewport.y * s,
              c = this._viewport.width * r,
              _ = this._viewport.height * s,
              l = this._proj === Ct.PERSPECTIVE,
              d = this._device.capabilities.clipSpaceSignY,
              f = o[this._curTransform];

          t.set(kt, (i - a) / c * 2 - 1, (n - u) / _ * 2 - 1, l ? 1 : -1);
          var p = kt.x,
              g = kt.y;
          return kt.x = p * f[0] + g * f[2] * d, kt.y = p * f[1] + g * f[3] * d, t.transformMat4(l ? kt : e.o, kt, this._matViewProjInv), l ? (this._node.getWorldPosition(Vt), h.fromPoints(e, Vt, kt)) : t.transformQuat(e.d, t.FORWARD, this._node.worldRotation), e;
        }, p.screenToWorld = function (e, i) {
          var n = this.width,
              r = this.height,
              s = this._viewport.x * n,
              a = this._viewport.y * r,
              h = this._viewport.width * n,
              c = this._viewport.height * r,
              _ = this._device.capabilities.clipSpaceSignY,
              l = o[this._curTransform];

          if (this._proj === Ct.PERSPECTIVE) {
            t.set(e, (i.x - s) / h * 2 - 1, (i.y - a) / c * 2 - 1, 1);
            var d = e.x,
                f = e.y;
            e.x = d * l[0] + f * l[2] * _, e.y = d * l[1] + f * l[3] * _, t.transformMat4(e, e, this._matViewProjInv), this._node && this._node.getWorldPosition(kt), t.lerp(e, kt, e, u(this._nearClip / this._farClip, 1, i.z));
          } else {
            t.set(e, (i.x - s) / h * 2 - 1, (i.y - a) / c * 2 - 1, 2 * i.z - 1);
            var p = e.x,
                g = e.y;
            e.x = p * l[0] + g * l[2] * _, e.y = p * l[1] + g * l[3] * _, t.transformMat4(e, e, this._matViewProjInv);
          }

          return e;
        }, p.worldToScreen = function (e, i) {
          var n = this.width,
              r = this.height,
              s = this._viewport.x * n,
              a = this._viewport.y * r,
              h = this._viewport.width * n,
              u = this._viewport.height * r,
              c = this._device.capabilities.clipSpaceSignY,
              _ = o[this._curTransform];
          t.transformMat4(e, i, this._matViewProj);
          var l = e.x,
              d = e.y;
          return e.x = l * _[0] + d * _[2] * c, e.y = l * _[1] + d * _[3] * c, e.x = s + .5 * (e.x + 1) * h, e.y = a + .5 * (e.y + 1) * u, e.z = .5 * e.z + .5, e;
        }, p.worldMatrixToScreen = function (e, n, r, s) {
          i.multiply(e, this._matViewProj, n), i.multiply(e, Yt[this._curTransform], e);
          var a = r / 2,
              o = s / 2;
          return i.identity(Wt), i.transform(Wt, Wt, t.set(kt, a, o, 0)), i.scale(Wt, Wt, t.set(kt, a, o, 1)), i.multiply(e, Wt, e), e;
        }, p.setExposure = function (e) {
          this._exposure = .833333 / Math.pow(2, e);
        }, p.updateExposure = function () {
          var e = Math.log2(this._apertureValue * this._apertureValue / this._shutterValue * 100 / this._isoValue);
          this.setExposure(e);
        }, c(e, [{
          key: "node",
          get: function get() {
            return this._node;
          },
          set: function set(e) {
            this._node = e;
          }
        }, {
          key: "enabled",
          get: function get() {
            return this._enabled;
          },
          set: function set(e) {
            this._enabled = e;
          }
        }, {
          key: "orthoHeight",
          get: function get() {
            return this._orthoHeight;
          },
          set: function set(e) {
            this._orthoHeight = e, this._isProjDirty = !0;
          }
        }, {
          key: "projectionType",
          get: function get() {
            return this._proj;
          },
          set: function set(e) {
            this._proj = e, this._isProjDirty = !0;
          }
        }, {
          key: "fovAxis",
          get: function get() {
            return this._fovAxis;
          },
          set: function set(e) {
            this._fovAxis = e, this._isProjDirty = !0;
          }
        }, {
          key: "fov",
          get: function get() {
            return this._fov;
          },
          set: function set(e) {
            this._fov = e, this._isProjDirty = !0;
          }
        }, {
          key: "nearClip",
          get: function get() {
            return this._nearClip;
          },
          set: function set(e) {
            this._nearClip = e, this._isProjDirty = !0;
          }
        }, {
          key: "farClip",
          get: function get() {
            return this._farClip;
          },
          set: function set(e) {
            this._farClip = e, this._isProjDirty = !0;
          }
        }, {
          key: "clearColor",
          get: function get() {
            return this._clearColor;
          },
          set: function set(e) {
            this._clearColor.x = e.x, this._clearColor.y = e.y, this._clearColor.z = e.z, this._clearColor.w = e.w;
          }
        }, {
          key: "viewport",
          get: function get() {
            return this._viewport;
          },
          set: function set(e) {
            var t = e.x,
                i = e.width,
                n = e.height,
                r = this._device.capabilities.screenSpaceSignY < 0 ? 1 - e.y - n : e.y;

            switch (this._device.surfaceTransform) {
              case s.ROTATE_90:
                this._viewport.x = 1 - r - n, this._viewport.y = t, this._viewport.width = n, this._viewport.height = i;
                break;

              case s.ROTATE_180:
                this._viewport.x = 1 - t - i, this._viewport.y = 1 - r - n, this._viewport.width = i, this._viewport.height = n;
                break;

              case s.ROTATE_270:
                this._viewport.x = r, this._viewport.y = 1 - t - i, this._viewport.width = n, this._viewport.height = i;
                break;

              case s.IDENTITY:
                this._viewport.x = t, this._viewport.y = r, this._viewport.width = i, this._viewport.height = n;
            }

            this.resize(this.width, this.height);
          }
        }, {
          key: "scene",
          get: function get() {
            return this._scene;
          }
        }, {
          key: "name",
          get: function get() {
            return this._name;
          }
        }, {
          key: "width",
          get: function get() {
            return this._width;
          }
        }, {
          key: "height",
          get: function get() {
            return this._height;
          }
        }, {
          key: "aspect",
          get: function get() {
            return this._aspect;
          }
        }, {
          key: "matView",
          get: function get() {
            return this._matView;
          },
          set: function set(e) {
            this._matView = e;
          }
        }, {
          key: "matViewInv",
          get: function get() {
            return this._matViewInv || this._node.worldMatrix;
          },
          set: function set(e) {
            this._matViewInv = e;
          }
        }, {
          key: "matProj",
          get: function get() {
            return this._matProj;
          },
          set: function set(e) {
            this._matProj = e;
          }
        }, {
          key: "matProjInv",
          get: function get() {
            return this._matProjInv;
          },
          set: function set(e) {
            this._matProjInv = e;
          }
        }, {
          key: "matViewProj",
          get: function get() {
            return this._matViewProj;
          },
          set: function set(e) {
            this._matViewProj = e;
          }
        }, {
          key: "matViewProjInv",
          get: function get() {
            return this._matViewProjInv;
          },
          set: function set(e) {
            this._matViewProjInv = e;
          }
        }, {
          key: "frustum",
          get: function get() {
            return this._frustum;
          },
          set: function set(e) {
            this._frustum = e;
          }
        }, {
          key: "window",
          get: function get() {
            return this._window;
          },
          set: function set(e) {
            this._window = e;
          }
        }, {
          key: "forward",
          get: function get() {
            return this._forward;
          },
          set: function set(e) {
            this._forward = e;
          }
        }, {
          key: "position",
          get: function get() {
            return this._position;
          },
          set: function set(e) {
            this._position = e;
          }
        }, {
          key: "visibility",
          get: function get() {
            return this._visibility;
          },
          set: function set(e) {
            this._visibility = e;
          }
        }, {
          key: "priority",
          get: function get() {
            return this._priority;
          },
          set: function set(e) {
            this._priority = e;
          }
        }, {
          key: "aperture",
          get: function get() {
            return this._aperture;
          },
          set: function set(e) {
            this._aperture = e, this._apertureValue = Ht[this._aperture], this.updateExposure();
          }
        }, {
          key: "apertureValue",
          get: function get() {
            return this._apertureValue;
          }
        }, {
          key: "shutter",
          get: function get() {
            return this._shutter;
          },
          set: function set(e) {
            this._shutter = e, this._shutterValue = Gt[this._shutter], this.updateExposure();
          }
        }, {
          key: "shutterValue",
          get: function get() {
            return this._shutterValue;
          }
        }, {
          key: "iso",
          get: function get() {
            return this._iso;
          },
          set: function set(e) {
            this._iso = e, this._isoValue = zt[this._iso], this.updateExposure();
          }
        }, {
          key: "isoValue",
          get: function get() {
            return this._isoValue;
          }
        }, {
          key: "ec",
          get: function get() {
            return this._ec;
          },
          set: function set(e) {
            this._ec = e;
          }
        }, {
          key: "exposure",
          get: function get() {
            return this._exposure;
          }
        }, {
          key: "clearFlag",
          get: function get() {
            return this._clearFlag;
          },
          set: function set(e) {
            this._clearFlag = e;
          }
        }, {
          key: "clearDepth",
          get: function get() {
            return this._clearDepth;
          },
          set: function set(e) {
            this._clearDepth = e;
          }
        }, {
          key: "clearStencil",
          get: function get() {
            return this._clearStencil;
          },
          set: function set(e) {
            this._clearStencil = e;
          }
        }, {
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }]), e;
      }()),
          qt = new R(null),
          Xt = e("m", function () {
        function e() {
          this._device = null, this._passes = null, this._shaders = null, this._subMesh = null, this._patches = null, this._priority = g.DEFAULT, this._inputAssembler = null, this._descriptorSet = null, this._planarInstanceShader = null, this._planarShader = null, this._reflectionTex = null, this._reflectionSampler = null;
        }

        var t = e.prototype;
        return t._destroyDescriptorSet = function () {
          this._descriptorSet.destroy(), this._descriptorSet = null;
        }, t._destroyInputAssembler = function () {
          this._inputAssembler.destroy(), this._inputAssembler = null;
        }, t._createDescriptorSet = function (e) {
          this._descriptorSet = this._device.createDescriptorSet(e);
        }, t._setInputAssembler = function (e) {
          this._inputAssembler = this._device.createInputAssembler(e);
        }, t._setSubMesh = function (e) {
          this._subMesh = e;
        }, t._init = function () {}, t.initialize = function (e, t, i) {
          if (void 0 === i && (i = null), this._device = a.director.root.device, qt.layout = t[0].localSetLayout, this._init(), this._setInputAssembler(e.iaInfo), this._createDescriptorSet(qt), this._setSubMesh(e), this._patches = i, this._passes = t, this._flushPassInfo(), t[0].batchingScheme === p.VB_MERGING && this.subMesh.genFlatBuffers(), this.priority = g.DEFAULT, t[0].phase === v("reflection")) {
            var n = this._device.width,
                r = this._device.height,
                s = 512;
            r < n ? (n = s * n / r, r = s) : r = s * r / (n = s), this._reflectionTex = this._device.createTexture(new m(S.TEX2D, E.STORAGE | E.TRANSFER_SRC | E.SAMPLED, T.RGBA8, n, r, w.IMMUTABLE)), this.descriptorSet.bindTexture(y, this._reflectionTex);
            var o = [O.LINEAR, O.LINEAR, O.NONE, I.CLAMP, I.CLAMP, I.CLAMP],
                h = A(o);
            this._reflectionSampler = b.getSampler(this._device, h), this.descriptorSet.bindSampler(y, this._reflectionSampler), this.descriptorSet.bindTexture(F, this._reflectionTex);
          }
        }, t._initNativePlanarShadowShader = function (e) {
          this._planarShader = e.getPlanarShader(this._patches);
        }, t.initPlanarShadowShader = function () {
          var e = a.director.root.pipeline.pipelineSceneData.shadows;

          this._initNativePlanarShadowShader(e);
        }, t._initNativePlanarShadowInstanceShader = function (e) {
          this._planarInstanceShader = e.getPlanarInstanceShader(this._patches);
        }, t.initPlanarShadowInstanceShader = function () {
          var e = a.director.root.pipeline.pipelineSceneData.shadows;

          this._initNativePlanarShadowInstanceShader(e);
        }, t._destroy = function () {}, t.destroy = function () {
          this._destroyDescriptorSet(), this._destroyInputAssembler(), this.priority = g.DEFAULT, this._patches = null, this._subMesh = null, this._passes = null, this._shaders = null, this._reflectionTex && this._reflectionTex.destroy(), this._reflectionTex = null, this._reflectionSampler && this._reflectionSampler.destroy(), this._reflectionSampler = null, this._destroy();
        }, t.update = function () {
          for (var e = 0; e < this._passes.length; ++e) {
            this._passes[e].update();
          }

          this._descriptorSet.update();
        }, t.onPipelineStateChanged = function () {
          var e = this._passes;

          if (e) {
            for (var t = 0; t < e.length; t++) {
              var i = e[t];
              i.beginChangeStatesSilently(), i.tryCompile(), i.endChangeStatesSilently();
            }

            this._flushPassInfo();
          }
        }, t.onMacroPatchesStateChanged = function (e) {
          this._patches = e;
          var t = this._passes;

          if (t) {
            for (var i = 0; i < t.length; i++) {
              var n = t[i];
              n.beginChangeStatesSilently(), n.tryCompile(), n.endChangeStatesSilently();
            }

            this._flushPassInfo();
          }
        }, t._flushPassInfo = function () {
          var e = this._passes;

          if (e) {
            this._shaders || (this._shaders = []), this._shaders.length = e.length;

            for (var t = 0, i = e.length; t < i; t++) {
              this._shaders[t] = e[t].getShaderVariant(this.patches);
            }
          }
        }, c(e, [{
          key: "passes",
          get: function get() {
            return this._passes;
          },
          set: function set(e) {
            e.length > 8 ? D(12004, 8) : (this._passes = e, this._flushPassInfo(), this._descriptorSet && (this._destroyDescriptorSet(), qt.layout = e[0].localSetLayout, this._createDescriptorSet(qt)));
          }
        }, {
          key: "shaders",
          get: function get() {
            return this._shaders;
          }
        }, {
          key: "subMesh",
          get: function get() {
            return this._subMesh;
          },
          set: function set(e) {
            this._setSubMesh(e), this._inputAssembler.destroy(), this._inputAssembler.initialize(e.iaInfo), this._passes[0].batchingScheme === p.VB_MERGING && this.subMesh.genFlatBuffers();
          }
        }, {
          key: "priority",
          get: function get() {
            return this._priority;
          },
          set: function set(e) {
            this._priority = e;
          }
        }, {
          key: "inputAssembler",
          get: function get() {
            return this._inputAssembler;
          }
        }, {
          key: "descriptorSet",
          get: function get() {
            return this._descriptorSet;
          }
        }, {
          key: "patches",
          get: function get() {
            return this._patches;
          }
        }, {
          key: "planarInstanceShader",
          get: function get() {
            return this._planarInstanceShader;
          }
        }, {
          key: "planarShader",
          get: function get() {
            return this._planarShader;
          }
        }, {
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }]), e;
      }()),
          jt = e("X", function () {
        function e(e) {
          this.instances = [], this.pass = void 0, this.hasPendingModels = !1, this.dynamicOffsets = [], this._device = void 0, this._device = e.device, this.pass = e;
        }

        e.get = function (t, i) {
          void 0 === i && (i = 0);
          var n = e._buffers;
          n.has(t) || n.set(t, {});
          var r = n.get(t);
          return r[i] || (r[i] = new e(t));
        };

        var t = e.prototype;
        return t.destroy = function () {
          for (var e = 0; e < this.instances.length; ++e) {
            var t = this.instances[e];
            t.vb.destroy(), t.ia.destroy();
          }

          this.instances.length = 0;
        }, t.merge = function (e, t, i, n) {
          void 0 === n && (n = null);
          var r = t.buffer.length;

          if (r) {
            var s = e.inputAssembler,
                a = e.descriptorSet.getTexture(N),
                o = n;
            o || (o = e.shaders[i]);

            for (var h = e.descriptorSet, u = 0; u < this.instances.length; ++u) {
              var c = this.instances[u];

              if (!(c.ia.indexBuffer !== s.indexBuffer || c.count >= 1024) && c.lightingMap === a) {
                if (c.stride !== r) return;

                if (c.count >= c.capacity) {
                  c.capacity <<= 1;

                  var _ = c.stride * c.capacity,
                      l = c.data;

                  c.data = new Uint8Array(_), c.data.set(l), c.vb.resize(_);
                }

                return c.shader !== o && (c.shader = o), c.descriptorSet !== h && (c.descriptorSet = h), c.data.set(t.buffer, c.stride * c.count++), void (this.hasPendingModels = !0);
              }
            }

            for (var d = this._device.createBuffer(new P(L.VERTEX | L.TRANSFER_DST, B.HOST | B.DEVICE, 32 * r, r)), f = new Uint8Array(32 * r), p = s.vertexBuffers.slice(), g = s.attributes.slice(), v = s.indexBuffer, m = 0; m < t.attributes.length; m++) {
              var S = t.attributes[m],
                  E = new C(S.name, S.format, S.isNormalized, p.length, !0);
              g.push(E);
            }

            f.set(t.buffer), p.push(d);

            var T = new M(g, p, v),
                w = this._device.createInputAssembler(T);

            this.instances.push({
              count: 1,
              capacity: 32,
              vb: d,
              data: f,
              ia: w,
              stride: r,
              shader: o,
              descriptorSet: h,
              lightingMap: a
            }), this.hasPendingModels = !0;
          }
        }, t.uploadBuffers = function (e) {
          for (var t = 0; t < this.instances.length; ++t) {
            var i = this.instances[t];
            i.count && (i.ia.instanceCount = i.count, e.updateBuffer(i.vb, i.data));
          }
        }, t.clear = function () {
          for (var e = 0; e < this.instances.length; ++e) {
            this.instances[e].count = 0;
          }

          this.hasPendingModels = !1;
        }, e;
      }());
      jt._buffers = new Map();
      var Zt,
          Jt = new i(),
          $t = (new x(function () {
        return new Xt();
      }, 32), [{
        name: "CC_RECEIVE_SHADOW",
        value: !0
      }]);
      !function (e) {
        e[e.DEFAULT = 0] = "DEFAULT", e[e.SKINNING = 1] = "SKINNING", e[e.BAKED_SKINNING = 2] = "BAKED_SKINNING", e[e.BATCH_2D = 3] = "BATCH_2D", e[e.PARTICLE_BATCH = 4] = "PARTICLE_BATCH", e[e.LINE = 5] = "LINE";
      }(Zt || (Zt = e("M", {})));
      var ei = A([O.LINEAR, O.LINEAR, O.NONE, I.CLAMP, I.CLAMP, I.CLAMP]),
          ti = A([O.LINEAR, O.LINEAR, O.LINEAR, I.CLAMP, I.CLAMP, I.CLAMP]),
          ii = (e("i", function () {
        function e() {
          this.type = Zt.DEFAULT, this.scene = null, this.isDynamicBatching = !1, this.instancedAttributes = {
            buffer: null,
            views: [],
            attributes: []
          }, this._worldBounds = null, this._modelBounds = null, this._subModels = [], this._node = null, this._transform = null, this._device = void 0, this._inited = !1, this._descriptorSetCount = 1, this._updateStamp = -1, this._transformUpdated = !0, this._localData = new Float32Array(H.COUNT), this._localBuffer = null, this._instMatWorldIdx = -1, this._lightmap = null, this._lightmapUVParam = new z(), this._receiveShadow = !1, this._castShadow = !1, this._enabled = !0, this._visFlags = U.Enum.NONE, this._device = a.director.root.device;
        }

        var t = e.prototype;
        return t._setReceiveShadow = function (e) {
          this._receiveShadow = e;
        }, t._init = function () {}, t.initialize = function () {
          this._inited || (this._init(), this._setReceiveShadow(!0), this.castShadow = !1, this.enabled = !0, this.visFlags = U.Enum.NONE, this._inited = !0);
        }, t._destroySubmodel = function (e) {
          e.destroy();
        }, t._destroy = function () {}, t.destroy = function () {
          for (var e = this._subModels, t = 0; t < e.length; t++) {
            var i = this._subModels[t];

            this._destroySubmodel(i);
          }

          this._localBuffer && (this._localBuffer.destroy(), this._localBuffer = null), this._worldBounds = null, this._modelBounds = null, this._subModels.length = 0, this._inited = !1, this._transformUpdated = !0, this._transform = null, this._node = null, this.isDynamicBatching = !1, this._destroy();
        }, t.attachToScene = function (e) {
          this.scene = e;
        }, t.detachFromScene = function () {
          this.scene = null;
        }, t.updateTransform = function () {
          var e = this.transform;

          if (e.hasChangedFlags || e._dirtyFlags) {
            e.updateWorldTransform(), this._transformUpdated = !0;
            var t = this._worldBounds;
            this._modelBounds && t && this._modelBounds.transform(e._mat, e._pos, e._rot, e._scale, t);
          }
        }, t.updateWorldBound = function () {
          var e = this.transform;

          if (null !== e) {
            e.updateWorldTransform(), this._transformUpdated = !0;
            var t = this._worldBounds;
            this._modelBounds && t && this._modelBounds.transform(e._mat, e._pos, e._rot, e._scale, t);
          }
        }, t._applyLocalData = function () {}, t._applyLocalBuffer = function () {}, t.updateUBOs = function (e) {
          for (var t = this._subModels, n = 0; n < t.length; n++) {
            t[n].update();
          }

          if (this._updateStamp = e, this._transformUpdated) {
            this._transformUpdated = !1;
            var r,
                s,
                a,
                o,
                h = this.transform._mat,
                u = this._instMatWorldIdx;

            if (u >= 0) {
              var c = this.instancedAttributes.views;
              r = h, s = c[u], a = c[u + 1], o = c[u + 2], s[0] = r.m00, s[1] = r.m01, s[2] = r.m02, s[3] = r.m12, a[0] = r.m04, a[1] = r.m05, a[2] = r.m06, a[3] = r.m13, o[0] = r.m08, o[1] = r.m09, o[2] = r.m10, o[3] = r.m14;
            } else if (this._localBuffer) {
              i.toArray(this._localData, h, H.MAT_WORLD_OFFSET), i.inverseTranspose(Jt, h);

              var _ = Math.abs(i.determinant(Jt)),
                  l = 1 / Math.sqrt(_);

              i.multiplyScalar(Jt, Jt, l), i.toArray(this._localData, Jt, H.MAT_WORLD_IT_OFFSET), this._localBuffer.update(this._localData), this._applyLocalData(), this._applyLocalBuffer();
            }
          }
        }, t._updateNativeBounds = function () {}, t.createBoundingShape = function (e, t) {
          e && t && (this._modelBounds = G.fromPoints(G.create(), e, t), this._worldBounds = G.clone(this._modelBounds), this._updateNativeBounds());
        }, t._createSubModel = function () {
          return new Xt();
        }, t.initSubModel = function (e, t, i) {
          this.initialize(), null == this._subModels[e] ? this._subModels[e] = this._createSubModel() : this._subModels[e].destroy(), this._subModels[e].initialize(t, i.passes, this.getMacroPatches(e)), this._subModels[e].initPlanarShadowShader(), this._subModels[e].initPlanarShadowInstanceShader(), this._updateAttributesAndBinding(e);
        }, t.setSubModelMesh = function (e, t) {
          this._subModels[e] && (this._subModels[e].subMesh = t);
        }, t.setSubModelMaterial = function (e, t) {
          this._subModels[e] && (this._subModels[e].passes = t.passes, this._updateAttributesAndBinding(e));
        }, t.onGlobalPipelineStateChanged = function () {
          for (var e = this._subModels, t = 0; t < e.length; t++) {
            e[t].onPipelineStateChanged();
          }
        }, t.onMacroPatchesStateChanged = function () {
          for (var e = this._subModels, t = 0; t < e.length; t++) {
            e[t].onMacroPatchesStateChanged(this.getMacroPatches(t));
          }
        }, t.updateLightingmap = function (e, t) {
          z.toArray(this._localData, t, H.LIGHTINGMAP_UVPARAM), this._applyLocalData(), this._lightmap = e, this._lightmapUVParam = t, null === e && (e = k.get("empty-texture"));
          var i = e.getGFXTexture();
          if (i) for (var n = b.getSampler(this._device, e.mipmaps.length > 1 ? ti : ei), r = this._subModels, s = 0; s < r.length; s++) {
            var a = r[s].descriptorSet;
            a.bindTexture(N, i), a.bindSampler(N, n), a.update();
          }
        }, t.getMacroPatches = function () {
          return this.receiveShadow ? $t : null;
        }, t._updateAttributesAndBinding = function (e) {
          var t = this._subModels[e];

          if (t) {
            this._initLocalDescriptors(e), this._updateLocalDescriptors(e, t.descriptorSet);
            var i = t.passes[0].getShaderVariant(t.patches);

            this._updateInstancedAttributes(i.attributes, t.passes[0]);
          }
        }, t._getInstancedAttributeIndex = function (e) {
          for (var t = this.instancedAttributes.attributes, i = 0; i < t.length; i++) {
            if (t[i].name === e) return i;
          }

          return -1;
        }, t._setInstMatWorldIdx = function (e) {
          this._instMatWorldIdx = e;
        }, t._updateInstancedAttributes = function (e, t) {
          if (t.device.hasFeature(V.INSTANCED_ARRAYS)) {
            for (var i = 0, n = 0; n < e.length; n++) {
              var r = e[n];
              r.isInstanced && (i += W[r.format].size);
            }

            var s = this.instancedAttributes;
            s.buffer = new Uint8Array(i), s.views.length = s.attributes.length = 0;

            for (var a = 0, o = 0; o < e.length; o++) {
              var h = e[o];

              if (h.isInstanced) {
                var u = new C();
                u.format = h.format, u.name = h.name, u.isNormalized = h.isNormalized, u.location = h.location, s.attributes.push(u);

                var c = W[h.format],
                    _ = new (K(c))(s.buffer.buffer, a, c.count);

                s.views.push(_), a += c.size;
              }
            }

            t.batchingScheme === p.INSTANCING && jt.get(t).destroy(), this._setInstMatWorldIdx(this._getInstancedAttributeIndex(Y)), this._transformUpdated = !0;
          }
        }, t._initLocalDescriptors = function () {
          this._localBuffer || (this._localBuffer = this._device.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, H.SIZE, H.SIZE)), this._applyLocalBuffer());
        }, t._updateLocalDescriptors = function (e, t) {
          this._localBuffer && t.bindBuffer(H.BINDING, this._localBuffer);
        }, c(e, [{
          key: "subModels",
          get: function get() {
            return this._subModels;
          }
        }, {
          key: "inited",
          get: function get() {
            return this._inited;
          }
        }, {
          key: "worldBounds",
          get: function get() {
            return this._worldBounds;
          }
        }, {
          key: "modelBounds",
          get: function get() {
            return this._modelBounds;
          }
        }, {
          key: "localBuffer",
          get: function get() {
            return this._localBuffer;
          }
        }, {
          key: "updateStamp",
          get: function get() {
            return this._updateStamp;
          }
        }, {
          key: "isInstancingEnabled",
          get: function get() {
            return this._instMatWorldIdx >= 0;
          }
        }, {
          key: "receiveShadow",
          get: function get() {
            return this._receiveShadow;
          },
          set: function set(e) {
            this._setReceiveShadow(e), this.onMacroPatchesStateChanged();
          }
        }, {
          key: "castShadow",
          get: function get() {
            return this._castShadow;
          },
          set: function set(e) {
            this._castShadow = e;
          }
        }, {
          key: "node",
          get: function get() {
            return this._node;
          },
          set: function set(e) {
            this._node = e;
          }
        }, {
          key: "transform",
          get: function get() {
            return this._transform;
          },
          set: function set(e) {
            this._transform = e;
          }
        }, {
          key: "visFlags",
          get: function get() {
            return this._visFlags;
          },
          set: function set(e) {
            this._visFlags = e;
          }
        }, {
          key: "enabled",
          get: function get() {
            return this._enabled;
          },
          set: function set(e) {
            this._enabled = e;
          }
        }, {
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }]), e;
      }()), e("R", function () {
        function e(e) {
          this._root = void 0, this._name = "", this._cameras = [], this._models = [], this._batches = [], this._directionalLights = [], this._sphereLights = [], this._spotLights = [], this._mainLight = null, this._modelId = 0, this._root = e, this._createNativeObject();
        }

        e.registerCreateFunc = function (t) {
          t._createSceneFun = function (t) {
            return new e(t);
          };
        };

        var t = e.prototype;
        return t.initialize = function (e) {
          return this._name = e.name, this._createNativeObject(), !0;
        }, t.update = function (e) {
          var t = this._mainLight;
          t && t.update();

          for (var i = this._sphereLights, n = 0; n < i.length; n++) {
            i[n].update();
          }

          for (var r = this._spotLights, s = 0; s < r.length; s++) {
            r[s].update();
          }

          for (var a = this._models, o = 0; o < a.length; o++) {
            var h = a[o];
            h.enabled && (h.updateTransform(e), h.updateUBOs(e));
          }
        }, t._destroy = function () {}, t.destroy = function () {
          this.removeCameras(), this.removeSphereLights(), this.removeSpotLights(), this.removeModels(), this._destroy();
        }, t.addCamera = function (e) {
          e.attachToScene(this), this._cameras.push(e);
        }, t.removeCamera = function (e) {
          for (var t = 0; t < this._cameras.length; ++t) {
            if (this._cameras[t] === e) return this._cameras.splice(t, 1), void e.detachFromScene();
          }
        }, t.removeCameras = function () {
          for (var e, t = Q(this._cameras); !(e = t()).done;) {
            e.value.detachFromScene();
          }

          this._cameras.splice(0);
        }, t.setMainLight = function (e) {
          this._mainLight = e;
        }, t.unsetMainLight = function (e) {
          if (this._mainLight === e) {
            var t = this._directionalLights;
            if (t.length) return this.setMainLight(t[t.length - 1]), void (this._mainLight.node && (this._mainLight.node.hasChangedFlags |= q.ROTATION));
            this.setMainLight(null);
          }
        }, t.addDirectionalLight = function (e) {
          e.attachToScene(this), this._directionalLights.push(e);
        }, t.removeDirectionalLight = function (e) {
          for (var t = 0; t < this._directionalLights.length; ++t) {
            if (this._directionalLights[t] === e) return e.detachFromScene(), void this._directionalLights.splice(t, 1);
          }
        }, t.addSphereLight = function (e) {
          e.attachToScene(this), this._sphereLights.push(e);
        }, t.removeSphereLight = function (e) {
          for (var t = 0; t < this._sphereLights.length; ++t) {
            if (this._sphereLights[t] === e) return e.detachFromScene(), void this._sphereLights.splice(t, 1);
          }
        }, t.addSpotLight = function (e) {
          e.attachToScene(this), this._spotLights.push(e);
        }, t.removeSpotLight = function (e) {
          for (var t = 0; t < this._spotLights.length; ++t) {
            if (this._spotLights[t] === e) return e.detachFromScene(), void this._spotLights.splice(t, 1);
          }
        }, t.removeSphereLights = function () {
          for (var e = 0; e < this._sphereLights.length; ++e) {
            this._sphereLights[e].detachFromScene();
          }

          this._sphereLights.length = 0;
        }, t.removeSpotLights = function () {
          for (var e = 0; e < this._spotLights.length; ++e) {
            this._spotLights[e].detachFromScene();
          }

          this._spotLights = [];
        }, t.addModel = function (e) {
          e.attachToScene(this), this._models.push(e);
        }, t.removeModel = function (e) {
          for (var t = 0; t < this._models.length; ++t) {
            if (this._models[t] === e) return e.detachFromScene(), void this._models.splice(t, 1);
          }
        }, t.removeModels = function () {
          for (var e, t = Q(this._models); !(e = t()).done;) {
            var i = e.value;
            i.detachFromScene(), i.destroy();
          }

          this._models.length = 0;
        }, t.addBatch = function (e) {
          this._batches.push(e);
        }, t.removeBatch = function (e) {
          for (var t = 0; t < this._batches.length; ++t) {
            if (this._batches[t] === e) return void this._batches.splice(t, 1);
          }
        }, t.removeBatches = function () {
          this._batches.length = 0;
        }, t.onGlobalPipelineStateChanged = function () {
          for (var e, t = Q(this._models); !(e = t()).done;) {
            e.value.onGlobalPipelineStateChanged();
          }
        }, t.generateModelId = function () {
          return this._modelId++;
        }, t._createNativeObject = function () {}, c(e, [{
          key: "root",
          get: function get() {
            return this._root;
          }
        }, {
          key: "name",
          get: function get() {
            return this._name;
          }
        }, {
          key: "cameras",
          get: function get() {
            return this._cameras;
          }
        }, {
          key: "mainLight",
          get: function get() {
            return this._mainLight;
          }
        }, {
          key: "sphereLights",
          get: function get() {
            return this._sphereLights;
          }
        }, {
          key: "spotLights",
          get: function get() {
            return this._spotLights;
          }
        }, {
          key: "models",
          get: function get() {
            return this._models;
          }
        }, {
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }, {
          key: "batches",
          get: function get() {
            return this._batches;
          }
        }]), e;
      }()));
      X(ii.prototype, "RenderScene.prototype", [{
        name: "raycastUI2DNode"
      }, {
        name: "raycastUINode"
      }]), X(ii.prototype, "RenderScene.prototype", [{
        name: "raycastAll",
        suggest: "using intersect.rayModel in geometry"
      }, {
        name: "raycastAllModels",
        suggest: "using intersect.rayModel in geometry"
      }, {
        name: "raycastSingleModel",
        suggest: "using intersect.rayModel in geometry"
      }, {
        name: "raycastAllCanvas",
        suggest: "using intersect.rayAABB in geometry"
      }, {
        name: "rayResultCanvas"
      }, {
        name: "rayResultModels"
      }, {
        name: "rayResultAll"
      }, {
        name: "rayResultSingleModel"
      }]);
      var ni = e("f", {});
      X(ni, "CameraVisFlags", [{
        name: "GENERAL"
      }]), j(ni, "CameraVisFlags", [{
        name: "PROFILER",
        newName: "PROFILER",
        target: U.BitMask,
        targetName: "PROFILER"
      }, {
        name: "GIZMOS",
        newName: "GIZMOS",
        target: U.BitMask,
        targetName: "GIZMOS"
      }, {
        name: "EDITOR",
        newName: "EDITOR",
        target: U.BitMask,
        targetName: "EDITOR"
      }, {
        name: "UI",
        newName: "UI",
        target: U.BitMask,
        targetName: "UI_3D"
      }, {
        name: "UI2D",
        newName: "UI2D",
        target: U.BitMask,
        targetName: "UI_2D"
      }]), a.CameraVisFlags = ni;
      var ri,
          si = e("V", {});

      function ai(e, t) {
        t < 1e3 ? t = 1e3 : t > 15e3 && (t = 15e3);
        var i = t * t,
            n = (.860117757 + .000154118254 * t + 1.28641212e-7 * i) / (1 + .000842420235 * t + 7.08145163e-7 * i),
            r = (.317398726 + 422806245e-13 * t + 4.20481691e-8 * i) / (1 - 289741816e-13 * t + 1.61456053e-7 * i),
            s = 2 * n - 8 * r + 4,
            a = 3 * n / s,
            o = 2 * r / s,
            h = 1 / o * a,
            u = 1 / o * (1 - a - o);
        e.x = 3.2404542 * h - 1.5371385 + -.4985314 * u, e.y = -.969266 * h + 1.8760108 + .041556 * u, e.z = .0556434 * h - .2040259 + 1.0572252 * u;
      }

      X(si, "VisibilityFlags", [{
        name: "GENERAL"
      }]), j(si, "VisibilityFlags", [{
        name: "ALWALS",
        newName: "ALWALS",
        target: U.Enum,
        targetName: "ALWALS"
      }, {
        name: "PROFILER",
        newName: "PROFILER",
        target: U.Enum,
        targetName: "PROFILER"
      }, {
        name: "GIZMOS",
        newName: "GIZMOS",
        target: U.Enum,
        targetName: "GIZMOS"
      }, {
        name: "EDITOR",
        newName: "EDITOR",
        target: U.Enum,
        targetName: "EDITOR"
      }, {
        name: "UI",
        newName: "UI",
        target: U.Enum,
        targetName: "UI_3D"
      }, {
        name: "UI2D",
        newName: "UI2D",
        target: U.Enum,
        targetName: "UI_2D"
      }]), a.VisibilityFlags = si, j(Z.prototype, "Pass.prototype", [{
        name: "getBindingTypeFromHandle",
        newName: "getDescriptorTypeFromHandle"
      }]), X(Qt.prototype, "Camera.prototype", [{
        name: "getSplitFrustum"
      }]), X(J.prototype, "Shadows.prototype", [{
        name: "aspect"
      }, {
        name: "selfShadow"
      }, {
        name: "linear"
      }, {
        name: "packing"
      }, {
        name: "autoAdapt"
      }]), function (e) {
        e[e.DIRECTIONAL = 0] = "DIRECTIONAL", e[e.SPHERE = 1] = "SPHERE", e[e.SPOT = 2] = "SPOT", e[e.UNKNOWN = 3] = "UNKNOWN";
      }(ri || (ri = e("L", {})));

      var oi = e("n", function (e) {
        return 4 * Math.PI * Math.PI * e * e;
      }),
          hi = e("h", function () {
        function e() {
          this._baked = !1, this._color = new t(1, 1, 1), this._colorTemp = 6550, this._colorTempRGB = new t(1, 1, 1), this._scene = null, this._node = null, this._name = null, this._useColorTemperature = !1, this._type = ri.UNKNOWN;
        }

        var i = e.prototype;
        return i._init = function () {}, i._destroy = function () {}, i.initialize = function () {
          this._init(), this.color = new t(1, 1, 1), this.colorTemperature = 6550;
        }, i.attachToScene = function (e) {
          this._scene = e;
        }, i.detachFromScene = function () {
          this._scene = null;
        }, i.destroy = function () {
          this._name = null, this._node = null, this._destroy();
        }, i.update = function () {}, c(e, [{
          key: "baked",
          get: function get() {
            return this._baked;
          },
          set: function set(e) {
            this._baked = e;
          }
        }, {
          key: "color",
          get: function get() {
            return this._color;
          },
          set: function set(e) {
            this._color.set(e);
          }
        }, {
          key: "useColorTemperature",
          get: function get() {
            return this._useColorTemperature;
          },
          set: function set(e) {
            this._useColorTemperature = e;
          }
        }, {
          key: "colorTemperature",
          get: function get() {
            return this._colorTemp;
          },
          set: function set(e) {
            this._colorTemp = e, ai(this._colorTempRGB, this._colorTemp);
          }
        }, {
          key: "colorTemperatureRGB",
          get: function get() {
            return this._colorTempRGB;
          }
        }, {
          key: "node",
          get: function get() {
            return this._node;
          },
          set: function set(e) {
            this._node = e, this._node && (this._node.hasChangedFlags |= q.ROTATION);
          }
        }, {
          key: "type",
          get: function get() {
            return this._type;
          }
        }, {
          key: "name",
          get: function get() {
            return this._name;
          },
          set: function set(e) {
            this._name = e;
          }
        }, {
          key: "scene",
          get: function get() {
            return this._scene;
          }
        }, {
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }]), e;
      }()),
          ui = new t(0, 0, -1),
          ci = new t(),
          _i = (e("D", function (e) {
        function i() {
          var i;
          return (i = e.call(this) || this)._dir = new t(1, -1, -1), i._illuminance = ee.SUN_ILLUM, i._type = ri.DIRECTIONAL, i;
        }

        $(i, e);
        var n = i.prototype;
        return n.initialize = function () {
          e.prototype.initialize.call(this), this.illuminance = ee.SUN_ILLUM, this.direction = new t(1, -1, -1);
        }, n.update = function () {
          this._node && this._node.hasChangedFlags && (this.direction = t.transformQuat(ci, ui, this._node.worldRotation));
        }, c(i, [{
          key: "direction",
          get: function get() {
            return this._dir;
          },
          set: function set(e) {
            t.normalize(this._dir, e);
          }
        }, {
          key: "illuminance",
          get: function get() {
            return this._illuminance;
          },
          set: function set(e) {
            this._illuminance = e;
          }
        }]), i;
      }(hi)), e("P", function (e) {
        function t(t, i) {
          var n;
          (n = e.call(this, t.root) || this)._parent = void 0, n._owner = void 0, n._dontNotify = !1, n._parent = t, n._owner = i, n._doInit(n._parent, !0);

          for (var r = 0; r < n._shaderInfo.blocks.length; r++) {
            var s = n._shaderInfo.blocks[r],
                a = n._blocks[s.binding],
                o = n._parent.blocks[s.binding];
            a.set(o);
          }

          n._setRootBufferDirty(!0);

          for (var h = n._parent, u = 0; u < n._shaderInfo.samplerTextures.length; u++) {
            for (var c = n._shaderInfo.samplerTextures[u], _ = 0; _ < c.count; _++) {
              var l = h._descriptorSet.getSampler(c.binding, _),
                  d = h._descriptorSet.getTexture(c.binding, _);

              n._descriptorSet.bindSampler(c.binding, l, _), n._descriptorSet.bindTexture(c.binding, d, _);
            }
          }

          return e.prototype.tryCompile.call(ie(n)), n;
        }

        $(t, e);
        var i = t.prototype;
        return i.overridePipelineStates = function (e, t) {
          this._bs.reset(), this._rs.reset(), this._dss.reset(), Z.fillPipelineInfo(this, e), Z.fillPipelineInfo(this, t), this._onStateChange();
        }, i.tryCompile = function (t) {
          if (t && !te(this._defines, t)) return !1;
          var i = e.prototype.tryCompile.call(this);
          return this._onStateChange(), i;
        }, i.beginChangeStatesSilently = function () {
          this._dontNotify = !0;
        }, i.endChangeStatesSilently = function () {
          this._dontNotify = !1;
        }, i._syncBatchingScheme = function () {
          this._defines.USE_BATCHING = this._defines.USE_INSTANCING = !1, this._setBatchingScheme(p.NONE);
        }, i._onStateChange = function () {
          this._setHash(Z.getPassHash(this)), this._owner.onPassStateChange(this._dontNotify);
        }, c(t, [{
          key: "parent",
          get: function get() {
            return this._parent;
          }
        }]), t;
      }(Z))),
          li = e("o", function (e) {
        function t(t) {
          var i;
          return (i = e.call(this) || this)._passes = [], i._parent = void 0, i._owner = void 0, i._subModelIdx = 0, i._parent = t.parent, i._owner = t.owner || null, i._subModelIdx = t.subModelIdx || 0, i.copy(i._parent), i;
        }

        $(t, e);
        var i = t.prototype;
        return i.recompileShaders = function (e, t) {
          if (this._passes && this.effectAsset) if (void 0 === t) for (var i, n = Q(this._passes); !(i = n()).done;) {
            i.value.tryCompile(e);
          } else this._passes[t].tryCompile(e);
        }, i.overridePipelineStates = function (e, t) {
          if (this._passes && this.effectAsset) {
            var i = this.effectAsset.techniques[this.technique].passes;
            if (void 0 === t) for (var n = 0; n < this._passes.length; n++) {
              var r = this._passes[n],
                  s = this._states[n] || (this._states[n] = {});

              for (var a in e) {
                s[a] = e[a];
              }

              r.overridePipelineStates(i[r.passIndex], s);
            } else {
              var o = this._states[t] || (this._states[t] = {});

              for (var h in e) {
                o[h] = e[h];
              }

              this._passes[t].overridePipelineStates(i[t], o);
            }
          }
        }, i.destroy = function () {
          return this._doDestroy(), !0;
        }, i.onPassStateChange = function (e) {
          this._hash = ne.getHash(this), !e && this._owner && this._owner._onRebuildPSO(this._subModelIdx, this);
        }, i._createPasses = function () {
          var e = [],
              t = this._parent.passes;
          if (!t) return e;

          for (var i = 0; i < t.length; ++i) {
            e.push(new _i(t[i], this));
          }

          return e;
        }, c(t, [{
          key: "parent",
          get: function get() {
            return this._parent;
          }
        }, {
          key: "owner",
          get: function get() {
            return this._owner;
          }
        }]), t;
      }(ne)),
          di = null,
          fi = null,
          pi = e("j", function () {
        function e() {
          this._envmap = null, this._globalDSManager = null, this._model = null, this._default = null, this._enabled = !1, this._useIBL = !1, this._isRGBE = !1;
        }

        var t = e.prototype;
        return t._setEnabled = function (e) {
          this._enabled = e;
        }, t._setUseIBL = function (e) {
          this._useIBL = e;
        }, t._setIsRGBE = function (e) {
          this._isRGBE = e;
        }, t.initialize = function (e) {
          this._setEnabled(e.enabled), this._setUseIBL(e.useIBL), this._setIsRGBE(e.isRGBE), this._envmap = e.envmap;
        }, t.activate = function () {
          var e = a.director.root.pipeline,
              t = e.pipelineSceneData.ambient;
          if (this._globalDSManager = e.globalDSManager, this._default = k.get("default-cube-texture"), this._model || (this._model = a.director.root.createModel(a.renderer.scene.Model), this._model._initLocalDescriptors = function () {}), this._envmap || (this._envmap = this._default), t.albedoArray[3] = this._envmap.mipmapLevel, fi) fi.recompileShaders({
            USE_RGBE_CUBEMAP: this.isRGBE
          });else {
            var i = new ne();
            i.initialize({
              effectName: "skybox",
              defines: {
                USE_RGBE_CUBEMAP: this.isRGBE
              }
            }), fi = new li({
              parent: i
            });
          }
          this.enabled && (di || (di = a.utils.createMesh(a.primitives.box({
            width: 2,
            height: 2,
            length: 2
          }))), this._model.initSubModel(0, di.renderingSubMeshes[0], fi)), this._updateGlobalBinding(), this._updatePipeline();
        }, t._updatePipeline = function () {
          var e = this.useIBL ? this.isRGBE ? 2 : 1 : 0,
              t = a.director.root,
              i = t.pipeline;
          i.macros.CC_USE_IBL !== e && (i.macros.CC_USE_IBL = e, t.onGlobalPipelineStateChanged());
        }, t._updateGlobalBinding = function () {
          var e = this.envmap.getGFXTexture(),
              t = b.getSampler(a.director._device, this.envmap.getSamplerHash());
          this._globalDSManager.bindSampler(re, t), this._globalDSManager.bindTexture(re, e), this._globalDSManager.update();
        }, t._destroy = function () {}, t.destroy = function () {
          this._destroy();
        }, c(e, [{
          key: "model",
          get: function get() {
            return this._model;
          }
        }, {
          key: "enabled",
          get: function get() {
            return this._enabled;
          },
          set: function set(e) {
            this._setEnabled(e), e ? this.activate() : this._updatePipeline();
          }
        }, {
          key: "useIBL",
          get: function get() {
            return this._useIBL;
          },
          set: function set(e) {
            this._setUseIBL(e), this._updatePipeline();
          }
        }, {
          key: "isRGBE",
          get: function get() {
            return this._isRGBE;
          },
          set: function set(e) {
            e && (fi && fi.recompileShaders({
              USE_RGBE_CUBEMAP: e
            }), this._model && this._model.setSubModelMaterial(0, fi)), this._setIsRGBE(e), this._updatePipeline();
          }
        }, {
          key: "envmap",
          get: function get() {
            return this._envmap;
          },
          set: function set(e) {
            this._envmap = e || this._default, this._envmap && (a.director.root.pipeline.pipelineSceneData.ambient.albedoArray[3] = this._envmap.mipmapLevel, this._updateGlobalBinding());
          }
        }, {
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }]), e;
      }());

      a.Skybox = pi, e("k", function (e) {
        $(n, e);
        var i = n.prototype;

        function n() {
          var i;
          return (i = e.call(this) || this)._needUpdate = !1, i._size = .15, i._range = 1, i._luminance = 0, i._pos = void 0, i._aabb = void 0, i._aabb = G.create(), i._pos = new t(), i._type = ri.SPHERE, i;
        }

        return i._init = function () {
          e.prototype._init.call(this);
        }, i._destroy = function () {
          e.prototype._destroy.call(this);
        }, i.initialize = function () {
          e.prototype.initialize.call(this), this.size = .15, this.range = 1, this.luminance = 1700 / oi(.15);
        }, i.update = function () {
          if (this._node && (this._node.hasChangedFlags || this._needUpdate)) {
            this._node.getWorldPosition(this._pos);

            var e = this._range;
            G.set(this._aabb, this._pos.x, this._pos.y, this._pos.z, e, e, e), this._needUpdate = !1;
          }
        }, c(n, [{
          key: "position",
          get: function get() {
            return this._pos;
          }
        }, {
          key: "size",
          get: function get() {
            return this._size;
          },
          set: function set(e) {
            this._size = e;
          }
        }, {
          key: "range",
          get: function get() {
            return this._range;
          },
          set: function set(e) {
            this._range = e, this._needUpdate = !0;
          }
        }, {
          key: "luminance",
          get: function get() {
            return this._luminance;
          },
          set: function set(e) {
            this._luminance = e;
          }
        }, {
          key: "aabb",
          get: function get() {
            return this._aabb;
          }
        }]), n;
      }(hi));
      var gi,
          vi,
          mi,
          Si,
          Ei,
          Ti,
          wi,
          yi,
          Oi,
          Ii,
          Ai,
          bi,
          Fi,
          Ri,
          Di,
          Ni,
          Pi,
          Li,
          Bi,
          Ci,
          Mi,
          xi,
          Ui,
          Hi = new t(0, 0, -1),
          Gi = new se(),
          zi = new i(),
          ki = new i(),
          Vi = new i(),
          Wi = new i(),
          Ki = (e("l", function (e) {
        $(r, e);
        var n = r.prototype;

        function r() {
          var i;
          return (i = e.call(this) || this)._dir = new t(1, -1, -1), i._range = 5, i._spotAngle = Math.cos(Math.PI / 6), i._pos = void 0, i._aabb = void 0, i._frustum = void 0, i._angle = 0, i._needUpdate = !1, i._size = .15, i._luminance = 0, i._aspect = 0, i._aabb = G.create(), i._frustum = f.create(), i._pos = new t(), i._type = ri.SPOT, i;
        }

        return n._init = function () {
          e.prototype._init.call(this);
        }, n._destroy = function () {
          e.prototype._destroy.call(this);
        }, n._setDirection = function (e) {
          this._dir.set(e);
        }, n.initialize = function () {
          e.prototype.initialize.call(this), this.size = .15, this.aspect = 1, this.luminance = 1700 / oi(.15), this.range = Math.cos(Math.PI / 6), this._setDirection(new t(1, -1, -1));
        }, n.update = function () {
          this._node && (this._node.hasChangedFlags || this._needUpdate) && (this._node.getWorldPosition(this._pos), t.transformQuat(this._dir, Hi, this._node.getWorldRotation(Gi)), t.normalize(this._dir, this._dir), G.set(this._aabb, this._pos.x, this._pos.y, this._pos.z, this._range, this._range, this._range), this._node.getWorldRT(zi), i.invert(zi, zi), i.perspective(ki, this._angle, 1, .001, this._range), i.multiply(Vi, ki, zi), this._frustum.update(Vi, Wi), this._needUpdate = !1);
        }, c(r, [{
          key: "position",
          get: function get() {
            return this._pos;
          }
        }, {
          key: "size",
          get: function get() {
            return this._size;
          },
          set: function set(e) {
            this._size = e;
          }
        }, {
          key: "range",
          get: function get() {
            return this._range;
          },
          set: function set(e) {
            this._range = e, this._needUpdate = !0;
          }
        }, {
          key: "luminance",
          get: function get() {
            return this._luminance;
          },
          set: function set(e) {
            this._luminance = e;
          }
        }, {
          key: "direction",
          get: function get() {
            return this._dir;
          }
        }, {
          key: "spotAngle",
          get: function get() {
            return this._spotAngle;
          },
          set: function set(e) {
            this._angle = e, this._spotAngle = Math.cos(.5 * e), this._needUpdate = !0;
          }
        }, {
          key: "angle",
          get: function get() {
            return this._angle;
          }
        }, {
          key: "aspect",
          get: function get() {
            return this._aspect;
          },
          set: function set(e) {
            this._aspect = e, this._needUpdate = !0;
          }
        }, {
          key: "aabb",
          get: function get() {
            return this._aabb;
          }
        }, {
          key: "frustum",
          get: function get() {
            return this._frustum;
          }
        }]), r;
      }(hi)), e("z", (gi = ae("RenderStage"), vi = ce(), mi = ce(), Si = ce(), gi((Ii = function () {
        function e() {
          he(this, "_name", wi, this), he(this, "_priority", yi, this), he(this, "_tag", Oi, this);
        }

        var t = e.prototype;
        return t.initialize = function (e) {
          return this._name = e.name, this._priority = e.priority, e.tag && (this._tag = e.tag), !0;
        }, t.activate = function (e, t) {
          this._pipeline = e, this._flow = t;
        }, c(e, [{
          key: "name",
          get: function get() {
            return this._name;
          }
        }, {
          key: "priority",
          get: function get() {
            return this._priority;
          }
        }, {
          key: "tag",
          get: function get() {
            return this._tag;
          }
        }]), e;
      }(), wi = oe((Ti = Ii).prototype, "_name", [vi, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), yi = oe(Ti.prototype, "_priority", [mi, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Oi = oe(Ti.prototype, "_tag", [Si, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Ei = Ti)) || Ei)));
      a.RenderStage = Ki;
      var Yi = e("y", (Ai = ae("RenderFlow"), bi = ce(), Fi = ce(), Ri = ce(), Di = ce(), Ni = _e([Ki]), Ai((Ui = function () {
        function e() {
          he(this, "_name", Bi, this), he(this, "_priority", Ci, this), he(this, "_tag", Mi, this), he(this, "_stages", xi, this);
        }

        var t = e.prototype;
        return t.initialize = function (e) {
          return this._name = e.name, this._priority = e.priority, this._stages = e.stages, e.tag && (this._tag = e.tag), !0;
        }, t.activate = function (e) {
          this._pipeline = e, this._stages.sort(function (e, t) {
            return e.priority - t.priority;
          });

          for (var t = 0, i = this._stages.length; t < i; t++) {
            this._stages[t].activate(e, this);
          }
        }, t.render = function (e) {
          for (var t = 0, i = this._stages.length; t < i; t++) {
            this._stages[t].render(e);
          }
        }, t.destroy = function () {
          for (var e = 0, t = this._stages.length; e < t; e++) {
            this._stages[e].destroy();
          }

          this._stages.length = 0;
        }, c(e, [{
          key: "name",
          get: function get() {
            return this._name;
          }
        }, {
          key: "priority",
          get: function get() {
            return this._priority;
          }
        }, {
          key: "tag",
          get: function get() {
            return this._tag;
          }
        }, {
          key: "stages",
          get: function get() {
            return this._stages;
          }
        }, {
          key: "pipeline",
          get: function get() {
            return this._pipeline;
          }
        }]), e;
      }(), Bi = oe((Li = Ui).prototype, "_name", [bi, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), Ci = oe(Li.prototype, "_priority", [Fi, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Mi = oe(Li.prototype, "_tag", [Ri, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), xi = oe(Li.prototype, "_stages", [Di, Ni, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Pi = Li)) || Pi));
      a.RenderFlow = Yi;
      var Qi = new t(),
          qi = (new t(), new t(), new t()),
          Xi = new i(),
          ji = new G(),
          Zi = (new G(), []),
          Ji = le.create(0, 0, 0, 1),
          $i = new le(),
          en = new f();
      en.accurate = !0;
      var tn = new f();
      tn.accurate = !0;

      var nn = new f(),
          rn = new i(),
          sn = new i(),
          an = new i(),
          on = new i(),
          hn = new i(),
          un = new i(),
          cn = new i(),
          _n = new t(),
          ln = new de(),
          dn = new t(),
          fn = new t(),
          pn = new t(0, 0, 0),
          gn = new x(function () {
        return {
          model: null,
          depth: 0
        };
      }, 128),
          vn = new x(function () {
        return {
          model: null,
          depth: 0
        };
      }, 128);

      function mn(e, i) {
        var n = 0;
        e.node && (t.subtract(Qi, e.node.worldPosition, i.position), n = t.dot(Qi, i.forward));
        var r = gn.alloc();
        return r.model = e, r.depth = n, r;
      }

      function Sn(e, i) {
        var n = 0;
        e.node && (t.subtract(Qi, e.node.worldPosition, i.position), n = t.dot(Qi, i.forward));
        var r = vn.alloc();
        return r.model = e, r.depth = n, r;
      }

      function En(e, n, r) {
        var s = n.direction,
            a = e.normal,
            o = e.distance + .001,
            h = 1 / t.dot(a, s),
            u = s.x * h,
            c = s.y * h,
            _ = s.z * h,
            l = a.x,
            d = a.y,
            f = a.z,
            p = e.matLight;

        p.m00 = 1 - l * u, p.m01 = -l * c, p.m02 = -l * _, p.m03 = 0, p.m04 = -d * u, p.m05 = 1 - d * c, p.m06 = -d * _, p.m07 = 0, p.m08 = -f * u, p.m09 = -f * c, p.m10 = 1 - f * _, p.m11 = 0, p.m12 = u * o, p.m13 = c * o, p.m14 = _ * o, p.m15 = 1, i.toArray(r, p, pe.MAT_LIGHT_PLANE_PROJ_OFFSET);
      }

      function Tn(e, n) {
        var r = n.scene,
            s = r.mainLight,
            a = e.pipelineSceneData,
            o = a.shadows,
            h = a.skybox,
            u = a.renderObjects;
        gn.freeArray(u), u.length = 0;
        var c = null;
        if (o.enabled && (e.pipelineUBO.updateShadowUBORange(pe.SHADOW_COLOR_OFFSET, o.shadowColor), o.type === ge.ShadowMap)) if (c = e.pipelineSceneData.shadowObjects, vn.freeArray(c), c.length = 0, s && s.node) !function (e, n, r, s, a) {
          var o = n.device,
              h = a.invisibleOcclusionRange,
              u = a.size.x;
          !function (e, t) {
            if (t.node) {
              var n = t.node,
                  r = n.getWorldPosition(),
                  s = n.getWorldRotation();
              i.fromRT(e, s, r), e.m08 *= -1, e.m09 *= -1, e.m10 *= -1;
            }
          }(Xi, s), f.split(en, s, Xi, .1, a.shadowDistance), tn = f.clone(en), i.fromRT(rn, r.node.rotation, pn), i.invert(sn, rn), i.invert(an, sn);
          var c = sn.clone();
          tn.transform(sn), G.fromPoints(ji, new t(1e7, 1e7, 1e7), new t(-1e7, -1e7, -1e7)), ji.mergeFrustum(tn);

          var _ = 2 * ji.halfExtents.z;

          qi.set(ji.center.x, ji.center.y, ji.center.z + ji.halfExtents.z + h), t.transformMat4(qi, qi, an), i.fromRT(rn, r.node.rotation, qi), i.invert(sn, rn), i.invert(an, sn);
          var l = t.distance(en.vertices[0], en.vertices[6]);
          $i.center.set(0, 0, 0), $i.radius = -1, $i.mergePoints(en.vertices);
          var d = .8 * l + .4 * $i.radius;
          a.shadowCameraFar = _ + h;
          var p = .5 * d;

          if (i.ortho(on, -p, p, -p, p, .1, a.shadowCameraFar, o.capabilities.clipSpaceMinZ, o.capabilities.clipSpaceSignY), u > 0) {
            i.multiply(un, on, c), t.transformMat4(_n, qi, un);
            var g = 2 / u;
            ln.set(g, g);
            var v = _n.x % ln.x,
                m = _n.y % ln.y;
            dn.set(_n.x - v, _n.y - m, _n.z), i.invert(cn, un), t.transformMat4(fn, dn, cn), i.fromRT(rn, r.node.rotation, fn), i.invert(sn, rn), i.invert(an, sn), f.createOrtho(e, d, d, .1, a.shadowCameraFar, an);
          } else {
            for (var S = 0; S < 8; S++) {
              e.vertices[S].set(0, 0, 0);
            }

            e.updatePlanes();
          }

          i.multiply(hn, on, sn), a.matShadowView = sn, a.matShadowProj = on, a.matShadowViewProj = hn;
        }(nn, e, s, n, o);else {
          for (var _ = 0; _ < 8; _++) {
            nn.vertices[_].set(0, 0, 0);
          }

          nn.updatePlanes();
        }
        s && o.type === ge.Planar && function (e, i) {
          var n = e.pipelineSceneData.shadows,
              r = i.direction,
              s = n.normal,
              a = n.distance + .001,
              o = 1 / t.dot(s, r),
              h = r.x * o,
              u = r.y * o,
              c = r.z * o,
              _ = s.x,
              l = s.y,
              d = s.z,
              f = n.matLight;
          f.m00 = 1 - _ * h, f.m01 = -_ * u, f.m02 = -_ * c, f.m03 = 0, f.m04 = -l * h, f.m05 = 1 - l * u, f.m06 = -l * c, f.m07 = 0, f.m08 = -d * h, f.m09 = -d * u, f.m10 = 1 - d * c, f.m11 = 0, f.m12 = h * a, f.m13 = u * a, f.m14 = c * a, f.m15 = 1, e.pipelineUBO.updateShadowUBORange(pe.MAT_LIGHT_PLANE_PROJ_OFFSET, n.matLight);
        }(e, s), h.enabled && h.model && n.clearFlag & Kt && u.push(mn(h.model, n));

        for (var l = r.models, d = n.visibility, p = 0; p < l.length; p++) {
          var g = l[p];

          if (g.enabled && (g.node && (d & g.node.layer) === g.node.layer || d & g.visFlags)) {
            if (null != c && g.castShadow && g.worldBounds && !fe.aabbFrustum(g.worldBounds, nn) && c.push(Sn(g, n)), g.worldBounds && !fe.aabbFrustum(g.worldBounds, n.frustum)) continue;
            u.push(mn(g, n));
          }
        }
      }

      var wn = new i(),
          yn = new i(),
          On = new i(),
          In = new z(),
          An = function () {
        function e() {
          this._globalUBO = new Float32Array(ve.COUNT), this._cameraUBO = new Float32Array(me.COUNT), this._shadowUBO = new Float32Array(pe.COUNT);
        }

        e.updateGlobalUBOView = function (e, t) {
          var i = e.device,
              n = a.director.root,
              r = t,
              s = Math.floor(i.width),
              o = Math.floor(i.height);
          r[ve.TIME_OFFSET] = n.cumulativeTime, r[ve.TIME_OFFSET + 1] = n.frameTime, r[ve.TIME_OFFSET + 2] = a.director.getTotalFrames(), r[ve.SCREEN_SIZE_OFFSET] = i.width, r[ve.SCREEN_SIZE_OFFSET + 1] = i.height, r[ve.SCREEN_SIZE_OFFSET + 2] = 1 / i.width, r[ve.SCREEN_SIZE_OFFSET + 3] = 1 / i.height, r[ve.NATIVE_SIZE_OFFSET] = s, r[ve.NATIVE_SIZE_OFFSET + 1] = o, r[ve.NATIVE_SIZE_OFFSET + 2] = 1 / r[ve.NATIVE_SIZE_OFFSET], r[ve.NATIVE_SIZE_OFFSET + 3] = 1 / r[ve.NATIVE_SIZE_OFFSET + 1];
        }, e.updateCameraUBOView = function (e, n, r) {
          var s = e.device,
              o = (r.scene ? r.scene : a.director.getScene().renderScene).mainLight,
              h = e.pipelineSceneData,
              u = h.ambient,
              c = h.fog,
              _ = Math.floor(s.width),
              l = Math.floor(s.height),
              d = n,
              f = r.exposure,
              p = h.isHDR,
              g = h.shadingScale,
              v = h.fpScale;

          if (d[me.SCREEN_SCALE_OFFSET] = r.width / _ * g, d[me.SCREEN_SCALE_OFFSET + 1] = r.height / l * g, d[me.SCREEN_SCALE_OFFSET + 2] = 1 / d[me.SCREEN_SCALE_OFFSET], d[me.SCREEN_SCALE_OFFSET + 3] = 1 / d[me.SCREEN_SCALE_OFFSET + 1], d[me.EXPOSURE_OFFSET] = f, d[me.EXPOSURE_OFFSET + 1] = 1 / f, d[me.EXPOSURE_OFFSET + 2] = p ? 1 : 0, d[me.EXPOSURE_OFFSET + 3] = v / f, o) {
            if (t.toArray(d, o.direction, me.MAIN_LIT_DIR_OFFSET), t.toArray(d, o.color, me.MAIN_LIT_COLOR_OFFSET), o.useColorTemperature) {
              var m = o.colorTemperatureRGB;
              d[me.MAIN_LIT_COLOR_OFFSET] *= m.x, d[me.MAIN_LIT_COLOR_OFFSET + 1] *= m.y, d[me.MAIN_LIT_COLOR_OFFSET + 2] *= m.z;
            }

            d[me.MAIN_LIT_COLOR_OFFSET + 3] = p ? o.illuminance * v : o.illuminance * f;
          } else t.toArray(d, t.UNIT_Z, me.MAIN_LIT_DIR_OFFSET), z.toArray(d, z.ZERO, me.MAIN_LIT_COLOR_OFFSET);

          var S = u.colorArray;
          S[3] = p ? u.skyIllum * v : u.skyIllum * f, d.set(S, me.AMBIENT_SKY_OFFSET), d.set(u.albedoArray, me.AMBIENT_GROUND_OFFSET), i.toArray(d, r.matView, me.MAT_VIEW_OFFSET), i.toArray(d, r.node.worldMatrix, me.MAT_VIEW_INV_OFFSET), t.toArray(d, r.position, me.CAMERA_POS_OFFSET), i.toArray(d, r.matProj, me.MAT_PROJ_OFFSET), i.toArray(d, r.matProjInv, me.MAT_PROJ_INV_OFFSET), i.toArray(d, r.matViewProj, me.MAT_VIEW_PROJ_OFFSET), i.toArray(d, r.matViewProjInv, me.MAT_VIEW_PROJ_INV_OFFSET), d[me.CAMERA_POS_OFFSET + 3] = this.getCombineSignY(), d.set(c.colorArray, me.GLOBAL_FOG_COLOR_OFFSET), d[me.GLOBAL_FOG_BASE_OFFSET] = c.fogStart, d[me.GLOBAL_FOG_BASE_OFFSET + 1] = c.fogEnd, d[me.GLOBAL_FOG_BASE_OFFSET + 2] = c.fogDensity, d[me.GLOBAL_FOG_ADD_OFFSET] = c.fogTop, d[me.GLOBAL_FOG_ADD_OFFSET + 1] = c.fogRange, d[me.GLOBAL_FOG_ADD_OFFSET + 2] = c.fogAtten;
        }, e.updateShadowUBOView = function (e, t, n) {
          var r = e.device,
              s = n.scene.mainLight,
              a = e.pipelineSceneData.shadows,
              o = t;

          if (a.enabled) {
            if (s && a.type === ge.ShadowMap) {
              var h,
                  u,
                  c,
                  _ = .1,
                  l = 0;

              if (a.fixedArea) {
                i.invert(wn, s.node.getWorldMatrix()), h = wn;
                var d = a.orthoSize,
                    f = a.orthoSize;
                _ = a.near, l = a.far, i.ortho(yn, -d, d, -f, f, _, l, r.capabilities.clipSpaceMinZ, r.capabilities.clipSpaceSignY), u = yn, i.multiply(On, yn, wn), c = On;
              } else _ = .1, l = a.shadowCameraFar, h = a.matShadowView, u = a.matShadowProj, c = a.matShadowViewProj;

              i.toArray(t, h, pe.MAT_LIGHT_VIEW_OFFSET), o[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 0] = u.m10, o[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 1] = u.m14, o[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 2] = u.m11, o[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 3] = u.m15, o[pe.SHADOW_PROJ_INFO_OFFSET + 0] = u.m00, o[pe.SHADOW_PROJ_INFO_OFFSET + 1] = u.m05, o[pe.SHADOW_PROJ_INFO_OFFSET + 2] = 1 / u.m00, o[pe.SHADOW_PROJ_INFO_OFFSET + 3] = 1 / u.m05, i.toArray(t, c, pe.MAT_LIGHT_VIEW_PROJ_OFFSET);
              var p = Te(r) ? 0 : 1;
              o[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 0] = _, o[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 1] = l, o[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 2] = 0, o[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 3] = 1 - a.saturation, o[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 0] = a.size.x, o[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 1] = a.size.y, o[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 2] = a.pcf, o[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 3] = a.bias, o[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 0] = 0, o[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 1] = p, o[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 2] = a.normalBias, o[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 3] = 0;
            } else s && a.type === ge.Planar && En(a, s, o);

            Ee.toArray(o, a.shadowColor, pe.SHADOW_COLOR_OFFSET);
          }
        }, e.updateShadowUBOLightView = function (e, t, n) {
          var r,
              s,
              a,
              o = e.device,
              h = e.pipelineSceneData.shadows,
              u = t,
              c = Te(o) ? 0 : 1,
              _ = .1,
              l = 0;

          switch (n.type) {
            case ri.DIRECTIONAL:
              if (h.fixedArea) {
                i.invert(wn, n.node.getWorldMatrix()), r = wn;
                var d = h.orthoSize,
                    f = h.orthoSize;
                _ = h.near, l = h.far, i.ortho(yn, -d, d, -f, f, _, l, o.capabilities.clipSpaceMinZ, o.capabilities.clipSpaceSignY), s = yn, i.multiply(On, yn, wn), a = On;
              } else _ = .1, l = h.shadowCameraFar, r = h.matShadowView, s = h.matShadowProj, a = h.matShadowViewProj;

              i.toArray(t, r, pe.MAT_LIGHT_VIEW_OFFSET), u[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 0] = s.m10, u[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 1] = s.m14, u[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 2] = s.m11, u[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 3] = s.m15, u[pe.SHADOW_PROJ_INFO_OFFSET + 0] = s.m00, u[pe.SHADOW_PROJ_INFO_OFFSET + 1] = s.m05, u[pe.SHADOW_PROJ_INFO_OFFSET + 2] = 1 / s.m00, u[pe.SHADOW_PROJ_INFO_OFFSET + 3] = 1 / s.m05, i.toArray(t, a, pe.MAT_LIGHT_VIEW_PROJ_OFFSET), In.set(_, l, 0, 1 - h.saturation), z.toArray(u, In, pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET), In.set(0, c, h.normalBias, 0), z.toArray(u, In, pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET);
              break;

            case ri.SPOT:
              i.invert(wn, n.node.getWorldMatrix()), i.toArray(u, wn, pe.MAT_LIGHT_VIEW_OFFSET), i.perspective(yn, n.angle, n.aspect, .001, n.range), i.multiply(On, yn, wn), i.toArray(u, On, pe.MAT_LIGHT_VIEW_PROJ_OFFSET), In.set(.01, n.range, 0, 1 - h.saturation), z.toArray(u, In, pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET), In.set(1, c, h.normalBias, 0), z.toArray(u, In, pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET);
          }

          In.set(h.size.x, h.size.y, h.pcf, h.bias), z.toArray(u, In, pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET), Ee.toArray(u, h.shadowColor, pe.SHADOW_COLOR_OFFSET);
        }, e.getCombineSignY = function () {
          return e._combineSignY;
        };
        var n = e.prototype;
        return n._initCombineSignY = function () {
          var t = this._device;
          e._combineSignY = .5 * t.capabilities.screenSpaceSignY + .5 << 1 | .5 * t.capabilities.clipSpaceSignY + .5;
        }, n.activate = function (e, t) {
          this._device = e, this._pipeline = t;
          var i = this._pipeline.descriptorSet;

          this._initCombineSignY();

          var n = e.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, ve.SIZE, ve.SIZE));
          i.bindBuffer(ve.BINDING, n);
          var r = e.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, me.SIZE, me.SIZE));
          i.bindBuffer(me.BINDING, r);
          var s = e.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, pe.SIZE, pe.SIZE));
          i.bindBuffer(pe.BINDING, s);
        }, n.updateGlobalUBO = function () {
          var t = this._pipeline.globalDSManager,
              i = this._pipeline.descriptorSet,
              n = this._pipeline.commandBuffers;
          i.update(), e.updateGlobalUBOView(this._pipeline, this._globalUBO), n[0].updateBuffer(i.getBuffer(ve.BINDING), this._globalUBO), t.bindBuffer(ve.BINDING, i.getBuffer(ve.BINDING)), t.update();
        }, n.updateCameraUBO = function (t) {
          var i = this._pipeline.globalDSManager,
              n = this._pipeline.descriptorSet,
              r = this._pipeline.commandBuffers;
          e.updateCameraUBOView(this._pipeline, this._cameraUBO, t), r[0].updateBuffer(n.getBuffer(me.BINDING), this._cameraUBO), i.bindBuffer(me.BINDING, n.getBuffer(me.BINDING)), i.update();
        }, n.updateShadowUBO = function (t) {
          var i = this._pipeline.pipelineSceneData;

          if (i.shadows.enabled) {
            var n = this._pipeline.descriptorSet,
                r = this._pipeline.commandBuffers,
                s = i.shadowFrameBufferMap,
                a = t.scene.mainLight;
            n.update(), a && s.has(a) && n.bindTexture(Se, s.get(a).colorTextures[0]), e.updateShadowUBOView(this._pipeline, this._shadowUBO, t), r[0].updateBuffer(n.getBuffer(pe.BINDING), this._shadowUBO);
          }
        }, n.updateShadowUBOLight = function (t, i) {
          var n = this._pipeline.descriptorSet;
          e.updateShadowUBOLightView(this._pipeline, this._shadowUBO, t, i), n.getBuffer(pe.BINDING).update(this._shadowUBO);
        }, n.updateShadowUBORange = function (e, t) {
          t instanceof i ? i.toArray(this._shadowUBO, t, e) : t instanceof Ee && Ee.toArray(this._shadowUBO, t, e);
        }, n.destroy = function () {}, e;
      }();

      An._combineSignY = 0;

      var bn,
          Fn,
          Rn,
          Dn,
          Nn,
          Pn,
          Ln,
          Bn,
          Cn,
          Mn,
          xn,
          Un = [O.LINEAR, O.LINEAR, O.NONE, I.CLAMP, I.CLAMP, I.CLAMP],
          Hn = [O.POINT, O.POINT, O.NONE, I.CLAMP, I.CLAMP, I.CLAMP],
          Gn = function () {
        function e(e) {
          this._device = void 0, this._descriptorSetMap = new Map(), this._globalDescriptorSet = void 0, this._descriptorSetLayout = void 0, this._linearSampler = void 0, this._pointSampler = void 0, this._device = e.device;
          var t = A(Un);
          this._linearSampler = b.getSampler(this._device, t);
          var i = A(Hn);
          this._pointSampler = b.getSampler(this._device, i);
          var n = new ye(Oe.bindings);
          this._descriptorSetLayout = this._device.createDescriptorSetLayout(n), this._globalDescriptorSet = this._device.createDescriptorSet(new R(this._descriptorSetLayout));
        }

        var t = e.prototype;
        return t.bindBuffer = function (e, t) {
          this._globalDescriptorSet.bindBuffer(e, t);

          for (var i = this._descriptorSetMap.values(), n = i.next(); !n.done;) {
            n.value.bindBuffer(e, t), n = i.next();
          }
        }, t.bindSampler = function (e, t) {
          this._globalDescriptorSet.bindSampler(e, t);

          for (var i = this._descriptorSetMap.values(), n = i.next(); !n.done;) {
            n.value.bindSampler(e, t), n = i.next();
          }
        }, t.bindTexture = function (e, t) {
          this._globalDescriptorSet.bindTexture(e, t);

          for (var i = this._descriptorSetMap.values(), n = i.next(); !n.done;) {
            n.value.bindTexture(e, t), n = i.next();
          }
        }, t.update = function () {
          this._globalDescriptorSet.update();

          for (var e = this._descriptorSetMap.values(), t = e.next(); !t.done;) {
            t.value.update(), t = e.next();
          }
        }, t.getOrCreateDescriptorSet = function (e) {
          var t = this._device;

          if (!this._descriptorSetMap.has(e)) {
            var i = this._globalDescriptorSet,
                n = t.createDescriptorSet(new R(this._descriptorSetLayout));

            this._descriptorSetMap.set(e, n);

            for (var r = we.UBO_GLOBAL; r < we.COUNT; r++) {
              n.bindBuffer(r, i.getBuffer(r)), n.bindSampler(r, i.getSampler(r)), n.bindTexture(r, i.getTexture(r));
            }

            var s = t.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, pe.SIZE, pe.SIZE));
            n.bindBuffer(pe.BINDING, s), n.update();
          }

          return this._descriptorSetMap.get(e);
        }, t.destroy = function () {
          this._descriptorSetLayout.destroy(), this._linearSampler.destroy(), this._pointSampler.destroy();
        }, c(e, [{
          key: "descriptorSetMap",
          get: function get() {
            return this._descriptorSetMap;
          }
        }, {
          key: "linearSampler",
          get: function get() {
            return this._linearSampler;
          }
        }, {
          key: "pointSampler",
          get: function get() {
            return this._pointSampler;
          }
        }, {
          key: "descriptorSetLayout",
          get: function get() {
            return this._descriptorSetLayout;
          }
        }, {
          key: "globalDescriptorSet",
          get: function get() {
            return this._globalDescriptorSet;
          }
        }]), e;
      }(),
          zn = e("x", (bn = ae("cc.RenderPipeline"), Fn = ce(), Rn = ce(), Dn = _e([Yi]), bn((Cn = function (e) {
        function t() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return t = e.call.apply(e, [this].concat(n)) || this, he(t, "_tag", Ln, ie(t)), he(t, "_flows", Bn, ie(t)), t._commandBuffers = [], t._pipelineUBO = new An(), t._macros = {}, t._constantMacros = "", t;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (e) {
          return this._flows = e.flows, e.tag && (this._tag = e.tag), !0;
        }, i.generateRenderArea = function (e) {
          var t = new Ae(),
              i = e.viewport,
              n = this.pipelineSceneData,
              r = e.window.hasOnScreenAttachments && this.device.surfaceTransform % 2 ? e.height : e.width,
              s = e.window.hasOnScreenAttachments && this.device.surfaceTransform % 2 ? e.width : e.height;
          return t.x = i.x * r, t.y = i.y * s, t.width = i.width * r * n.shadingScale, t.height = i.height * s * n.shadingScale, t;
        }, i.activate = function () {
          this._device = a.director.root.device, this._globalDSManager = new Gn(this), this._descriptorSet = this._globalDSManager.globalDescriptorSet, this._pipelineUBO.activate(this._device, this), this._pipelineSceneData.activate(this._device, this);

          for (var e = 0; e < this._flows.length; e++) {
            this._flows[e].activate(this);
          }

          return this._macros.CC_USE_HDR = this._pipelineSceneData.isHDR, this._generateConstantMacros(), !0;
        }, i.render = function (e) {
          for (var t = 0; t < e.length; t++) {
            var i = e[t];
            if (i.scene) for (var n = 0; n < this._flows.length; n++) {
              this._flows[n].render(i);
            }
          }
        }, i.destroy = function () {
          for (var t, i, n = 0; n < this._flows.length; n++) {
            this._flows[n].destroy();
          }

          this._flows.length = 0, this._descriptorSet && this._descriptorSet.destroy(), null === (t = this._globalDSManager) || void 0 === t || t.destroy();

          for (var r = 0; r < this._commandBuffers.length; r++) {
            this._commandBuffers[r].destroy();
          }

          return this._commandBuffers.length = 0, this._pipelineUBO.destroy(), null === (i = this._pipelineSceneData) || void 0 === i || i.destroy(), e.prototype.destroy.call(this);
        }, i.resize = function () {}, i._generateConstantMacros = function () {
          var e = "";
          e += "#define CC_DEVICE_SUPPORT_FLOAT_TEXTURE " + (this.device.hasFeature(V.TEXTURE_FLOAT) ? 1 : 0) + "\n", e += "#define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS " + this.device.capabilities.maxVertexUniformVectors + "\n", e += "#define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS " + this.device.capabilities.maxFragmentUniformVectors + "\n", this._constantMacros = e;
        }, c(t, [{
          key: "tag",
          get: function get() {
            return this._tag;
          }
        }, {
          key: "flows",
          get: function get() {
            return this._flows;
          }
        }, {
          key: "constantMacros",
          get: function get() {
            return this._constantMacros;
          }
        }, {
          key: "macros",
          get: function get() {
            return this._macros;
          }
        }, {
          key: "device",
          get: function get() {
            return this._device;
          }
        }, {
          key: "globalDSManager",
          get: function get() {
            return this._globalDSManager;
          }
        }, {
          key: "descriptorSetLayout",
          get: function get() {
            return this._globalDSManager.descriptorSetLayout;
          }
        }, {
          key: "descriptorSet",
          get: function get() {
            return this._descriptorSet;
          }
        }, {
          key: "commandBuffers",
          get: function get() {
            return this._commandBuffers;
          }
        }, {
          key: "pipelineUBO",
          get: function get() {
            return this._pipelineUBO;
          }
        }, {
          key: "pipelineSceneData",
          get: function get() {
            return this._pipelineSceneData;
          }
        }]), t;
      }(Ie), Ln = oe((Pn = Cn).prototype, "_tag", [Fn, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), Bn = oe(Pn.prototype, "_flows", [Rn, Dn, ue], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Nn = Pn)) || Nn));

      a.RenderPipeline = zn, function (e) {
        e[e.FORWARD = 10] = "FORWARD", e[e.UI = 20] = "UI";
      }(Mn || (Mn = {})), function (e) {
        e[e.SHADOW = 0] = "SHADOW", e[e.FORWARD = 1] = "FORWARD", e[e.UI = 10] = "UI";
      }(xn || (xn = {}));

      var kn,
          Vn,
          Wn,
          Kn,
          Yn,
          Qn,
          qn,
          Xn,
          jn,
          Zn,
          Jn,
          $n,
          er,
          tr,
          ir,
          nr,
          rr,
          sr,
          ar,
          or,
          hr,
          ur,
          cr,
          _r,
          lr,
          dr,
          fr,
          pr,
          gr,
          vr,
          mr,
          Sr,
          Er,
          Tr,
          wr,
          yr,
          Or,
          Ir,
          Ar,
          br,
          Fr,
          Rr,
          Dr,
          Nr,
          Pr,
          Lr,
          Br,
          Cr,
          Mr,
          xr,
          Ur,
          Hr,
          Gr,
          zr,
          kr,
          Vr,
          Wr,
          Kr,
          Yr,
          Qr,
          qr,
          Xr,
          jr,
          Zr,
          Jr,
          $r,
          es,
          ts,
          is,
          ns,
          rs,
          ss,
          as,
          os,
          hs,
          us,
          cs,
          _s,
          ls,
          ds = e("Y", function () {
        function e() {}

        return e.getOrCreatePipelineState = function (e, t, i, n, r) {
          var s = t.hash ^ n.hash ^ r.attributesHash ^ i.id,
              a = this._PSOHashMap.get(s);

          if (!a) {
            t.pipelineLayout;
            var o = new be(r.attributes),
                h = new Fe(i, t.pipelineLayout, n, o, t.rasterizerState, t.depthStencilState, t.blendState, t.primitive, t.dynamicStates);
            a = e.createPipelineState(h), this._PSOHashMap.set(s, a);
          }

          return a;
        }, e;
      }());

      ds._PSOHashMap = new Map(), Re(S), Re(E), Re(De), Re(Ne), Re(Pe), function (e) {
        e[e.SCENE = 0] = "SCENE", e[e.POSTPROCESS = 1] = "POSTPROCESS", e[e.UI = 2] = "UI";
      }(ls || (ls = {})), Re(ls), kn = ae("RenderTextureDesc"), Vn = _e(S), Wn = _e(E), Kn = _e(T), kn((Qn = oe((Yn = function Yn() {
        he(this, "name", Qn, this), he(this, "type", qn, this), he(this, "usage", Xn, this), he(this, "format", jn, this), he(this, "width", Zn, this), he(this, "height", Jn, this);
      }).prototype, "name", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), qn = oe(Yn.prototype, "type", [Vn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return S.TEX2D;
        }
      }), Xn = oe(Yn.prototype, "usage", [Wn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return E.COLOR_ATTACHMENT;
        }
      }), jn = oe(Yn.prototype, "format", [Kn], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return T.UNKNOWN;
        }
      }), Zn = oe(Yn.prototype, "width", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), Jn = oe(Yn.prototype, "height", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), Yn));
      var fs,
          ps = ($n = ae("RenderTextureConfig"), er = _e(Le), $n((nr = oe((ir = function ir() {
        he(this, "name", nr, this), he(this, "texture", rr, this);
      }).prototype, "name", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), rr = oe(ir.prototype, "texture", [er], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), tr = ir)) || tr),
          gs = (sr = ae("MaterialConfig"), ar = _e(ne), sr((hr = oe((or = function or() {
        he(this, "name", hr, this), he(this, "material", ur, this);
      }).prototype, "name", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), ur = oe(or.prototype, "material", [ar], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), or)), cr = ae("FrameBufferDesc"), _r = _e([Be]), lr = _e(Le), cr((fr = oe((dr = function dr() {
        he(this, "name", fr, this), he(this, "renderPass", pr, this), he(this, "colorTextures", gr, this), he(this, "depthStencilTexture", vr, this), he(this, "texture", mr, this);
      }).prototype, "name", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), pr = oe(dr.prototype, "renderPass", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 0;
        }
      }), gr = oe(dr.prototype, "colorTextures", [_r], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), vr = oe(dr.prototype, "depthStencilTexture", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "";
        }
      }), mr = oe(dr.prototype, "texture", [lr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), dr)), Sr = ae("ColorDesc"), Er = _e(T), Tr = _e(Ne), wr = _e(De), yr = _e([Pe]), Or = _e([Pe]), Sr((br = oe((Ar = function Ar() {
        he(this, "format", br, this), he(this, "loadOp", Fr, this), he(this, "storeOp", Rr, this), he(this, "sampleCount", Dr, this), he(this, "beginAccesses", Nr, this), he(this, "endAccesses", Pr, this);
      }).prototype, "format", [Er], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return T.UNKNOWN;
        }
      }), Fr = oe(Ar.prototype, "loadOp", [Tr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ne.CLEAR;
        }
      }), Rr = oe(Ar.prototype, "storeOp", [wr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return De.STORE;
        }
      }), Dr = oe(Ar.prototype, "sampleCount", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Nr = oe(Ar.prototype, "beginAccesses", [yr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Pr = oe(Ar.prototype, "endAccesses", [Or], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [Pe.PRESENT];
        }
      }), Ir = Ar)) || Ir),
          vs = (Lr = ae("DepthStencilDesc"), Br = _e(T), Cr = _e(Ne), Mr = _e(De), xr = _e(Ne), Ur = _e(De), Hr = _e([Pe]), Gr = _e([Pe]), Lr((Vr = oe((kr = function kr() {
        he(this, "format", Vr, this), he(this, "depthLoadOp", Wr, this), he(this, "depthStoreOp", Kr, this), he(this, "stencilLoadOp", Yr, this), he(this, "stencilStoreOp", Qr, this), he(this, "sampleCount", qr, this), he(this, "beginAccesses", Xr, this), he(this, "endAccesses", jr, this);
      }).prototype, "format", [Br], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return T.UNKNOWN;
        }
      }), Wr = oe(kr.prototype, "depthLoadOp", [Cr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ne.CLEAR;
        }
      }), Kr = oe(kr.prototype, "depthStoreOp", [Mr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return De.STORE;
        }
      }), Yr = oe(kr.prototype, "stencilLoadOp", [xr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return Ne.CLEAR;
        }
      }), Qr = oe(kr.prototype, "stencilStoreOp", [Ur], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return De.STORE;
        }
      }), qr = oe(kr.prototype, "sampleCount", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return 1;
        }
      }), Xr = oe(kr.prototype, "beginAccesses", [Hr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), jr = oe(kr.prototype, "endAccesses", [Gr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [Pe.DEPTH_STENCIL_ATTACHMENT_WRITE];
        }
      }), zr = kr)) || zr);
      Zr = ae("RenderPassDesc"), Jr = _e([gs]), $r = _e(vs), Zr((ts = oe((es = function es() {
        he(this, "index", ts, this), he(this, "colorAttachments", is, this), he(this, "depthStencilAttachment", ns, this);
      }).prototype, "index", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return -1;
        }
      }), is = oe(es.prototype, "colorAttachments", [Jr], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), ns = oe(es.prototype, "depthStencilAttachment", [$r], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return new vs();
        }
      }), es)), function (e) {
        e[e.FRONT_TO_BACK = 0] = "FRONT_TO_BACK", e[e.BACK_TO_FRONT = 1] = "BACK_TO_FRONT";
      }(fs || (fs = {})), Re(fs);
      var ms = (rs = ae("RenderQueueDesc"), ss = _e(fs), as = _e([Be]), rs((us = oe((hs = function hs() {
        he(this, "isTransparent", us, this), he(this, "sortMode", cs, this), he(this, "stages", _s, this);
      }).prototype, "isTransparent", [ue, Ce], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return !1;
        }
      }), cs = oe(hs.prototype, "sortMode", [ss], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return fs.FRONT_TO_BACK;
        }
      }), _s = oe(hs.prototype, "stages", [as], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), os = hs)) || os);

      function Ss(e, t) {
        return e.hash - t.hash || e.depth - t.depth || e.shaderId - t.shaderId;
      }

      function Es(e, t) {
        return e.hash - t.hash || t.depth - e.depth || e.shaderId - t.shaderId;
      }

      var Ts = function () {
        function e(e) {
          this.queue = void 0, this._passDesc = void 0, this._passPool = void 0, this._passDesc = e, this._passPool = new Me(function () {
            return {
              hash: 0,
              depth: 0,
              shaderId: 0,
              subModel: null,
              passIdx: 0
            };
          }, 64), this.queue = new xe(64, this._passDesc.sortFunc);
        }

        var t = e.prototype;
        return t.clear = function () {
          this.queue.clear(), this._passPool.reset();
        }, t.insertRenderPass = function (e, t, i) {
          var n = e.model.subModels[t],
              r = n.passes[i],
              s = n.shaders[i];
          if (r.blendState.targets[0].blend !== this._passDesc.isTransparent || !(r.phase & this._passDesc.phases)) return !1;

          var a = 0 | r.priority << 16 | n.priority << 8 | i,
              o = this._passPool.add();

          return o.hash = a, o.depth = e.depth || 0, o.shaderId = s.id, o.subModel = n, o.passIdx = i, this.queue.push(o), !0;
        }, t.sort = function () {
          this.queue.sort();
        }, t.recordCommandBuffer = function (e, t, i) {
          for (var n = 0; n < this.queue.length; ++n) {
            var r = this.queue.array[n],
                s = r.subModel,
                a = r.passIdx,
                o = s.inputAssembler,
                h = s.passes[a],
                u = s.shaders[a],
                c = ds.getOrCreatePipelineState(e, h, u, t, o);
            i.bindPipelineState(c), i.bindDescriptorSet(Ue.MATERIAL, h.descriptorSet), i.bindDescriptorSet(Ue.LOCAL, s.descriptorSet), i.bindInputAssembler(o), i.draw(o);
          }
        }, e;
      }();

      function ws(e) {
        for (var t = 0, i = 0; i < e.stages.length; i++) {
          t |= v(e.stages[i]);
        }

        var n = Ss;

        switch (e.sortMode) {
          case fs.BACK_TO_FRONT:
            n = Es;
            break;

          case fs.FRONT_TO_BACK:
            n = Ss;
        }

        return new Ts({
          isTransparent: e.isTransparent,
          phases: t,
          sortFunc: n
        });
      }

      function ys(e) {
        e.clear();
      }

      function Os(e) {
        e.sort();
      }

      function Is(e, t) {
        e.x = t.x * t.x, e.y = t.y * t.y, e.z = t.z * t.z;
      }

      var As = function () {
        function e() {
          this.queue = new Set();
        }

        var t = e.prototype;
        return t.clear = function () {
          for (var e = this.queue.values(), t = e.next(); !t.done;) {
            t.value.clear(), t = e.next();
          }

          this.queue.clear();
        }, t.uploadBuffers = function (e) {
          for (var t = this.queue.values(), i = t.next(); !i.done;) {
            for (var n = 0; n < i.value.batches.length; ++n) {
              var r = i.value.batches[n];

              if (r.mergeCount) {
                for (var s = 0; s < r.vbs.length; ++s) {
                  r.vbs[s].update(r.vbDatas[s]);
                }

                e.updateBuffer(r.vbIdx, r.vbIdxData.buffer), e.updateBuffer(r.ubo, r.uboData);
              }
            }

            i = t.next();
          }
        }, t.recordCommandBuffer = function (e, t, i) {
          for (var n = this.queue.values(), r = n.next(); !r.done;) {
            for (var s = !1, a = 0; a < r.value.batches.length; ++a) {
              var o = r.value.batches[a];

              if (o.mergeCount) {
                if (!s) {
                  var h = o.shader,
                      u = ds.getOrCreatePipelineState(e, o.pass, h, t, o.ia);
                  i.bindPipelineState(u), i.bindDescriptorSet(Ue.MATERIAL, o.pass.descriptorSet), s = !0;
                }

                i.bindDescriptorSet(Ue.LOCAL, o.descriptorSet, r.value.dynamicOffsets), i.bindInputAssembler(o.ia), i.draw(o.ia);
              }
            }

            r = n.next();
          }
        }, e;
      }(),
          bs = function () {
        function e() {
          this.queue = new Set();
        }

        var t = e.prototype;
        return t.clear = function () {
          for (var e = this.queue.values(), t = e.next(); !t.done;) {
            t.value.clear(), t = e.next();
          }

          this.queue.clear();
        }, t.uploadBuffers = function (e) {
          for (var t = this.queue.values(), i = t.next(); !i.done;) {
            i.value.hasPendingModels && i.value.uploadBuffers(e), i = t.next();
          }
        }, t.recordCommandBuffer = function (e, t, i) {
          for (var n = this.queue.values(), r = n.next(); !r.done;) {
            var s = r.value,
                a = s.instances,
                o = s.pass;

            if (s.hasPendingModels) {
              i.bindDescriptorSet(Ue.MATERIAL, o.descriptorSet);

              for (var h = null, u = 0; u < a.length; ++u) {
                var c = a[u];

                if (c.count) {
                  var _ = c.shader,
                      l = ds.getOrCreatePipelineState(e, o, _, t, c.ia);
                  h !== l && (i.bindPipelineState(l), h = l), i.bindDescriptorSet(Ue.LOCAL, c.descriptorSet, r.value.dynamicOffsets), i.bindInputAssembler(c.ia), i.draw(c.ia);
                }
              }
            }

            r = n.next();
          }
        }, e;
      }(),
          Fs = function () {
        function e(e) {
          this.batches = [], this.dynamicOffsets = [], this._device = void 0, this._device = e.device;
        }

        e.get = function (t, i) {
          void 0 === i && (i = 0);
          var n = e._buffers;
          n.has(t) || n.set(t, {});
          var r = n.get(t);
          return r[i] || (r[i] = new e(t));
        };

        var t = e.prototype;
        return t.destroy = function () {
          for (var e = 0; e < this.batches.length; ++e) {
            for (var t = this.batches[e], i = 0; i < t.vbs.length; ++i) {
              t.vbs[i].destroy();
            }

            t.vbIdx.destroy(), t.ia.destroy(), t.ubo.destroy();
          }

          this.batches.length = 0;
        }, t.merge = function (e, t, n) {
          var r = e.subMesh.flatBuffers;

          if (0 !== r.length) {
            for (var s = 0, a = 0, o = r[0].count, h = e.passes[t], u = e.shaders[t], c = e.descriptorSet, _ = !1, l = 0; l < this.batches.length; ++l) {
              var d = this.batches[l];

              if (d.vbs.length === r.length && d.mergeCount < He.BATCHING_COUNT) {
                _ = !0;

                for (var f = 0; f < d.vbs.length; ++f) {
                  if (d.vbs[f].stride !== r[f].stride) {
                    _ = !1;
                    break;
                  }
                }

                if (_) {
                  for (var p = 0; p < d.vbs.length; ++p) {
                    var g = r[p],
                        v = d.vbs[p],
                        m = d.vbDatas[p];
                    (s = (o + d.vbCount) * g.stride) > v.size && (v.resize(s), d.vbDatas[p] = new Uint8Array(s), d.vbDatas[p].set(m)), d.vbDatas[p].set(g.buffer, d.vbCount * g.stride);
                  }

                  var S = d.vbIdxData;
                  (a = 4 * (o + d.vbCount)) > d.vbIdx.size && (d.vbIdx.resize(a), d.vbIdxData = new Float32Array(a / Float32Array.BYTES_PER_ELEMENT), d.vbIdxData.set(S), S = d.vbIdxData);
                  var E = d.vbCount,
                      w = E + o,
                      y = d.mergeCount;
                  if (S[E] !== y || S[w - 1] !== y) for (var O = E; O < w; O++) {
                    S[O] = y + .1;
                  }
                  return i.toArray(d.uboData, n.transform.worldMatrix, He.MAT_WORLDS_OFFSET + 16 * d.mergeCount), d.mergeCount || (c.bindBuffer(He.BINDING, d.ubo), c.update(), d.pass = h, d.shader = u, d.descriptorSet = c), ++d.mergeCount, d.vbCount += o, void (d.ia.vertexCount += o);
                }
              }
            }

            for (var I = [], A = [], b = [], F = 0; F < r.length; ++F) {
              var R = r[F],
                  D = this._device.createBuffer(new P(L.VERTEX | L.TRANSFER_DST, B.HOST | B.DEVICE, R.count * R.stride, R.stride));

              D.update(R.buffer.buffer), I.push(D), A.push(new Uint8Array(D.size)), b.push(D);
            }

            var N = this._device.createBuffer(new P(L.VERTEX | L.TRANSFER_DST, B.HOST | B.DEVICE, 4 * o, 4)),
                x = new Float32Array(o);

            x.fill(0), N.update(x), b.push(N);

            for (var U = e.inputAssembler.attributes, H = new Array(U.length + 1), G = 0; G < U.length; ++G) {
              H[G] = U[G];
            }

            H[U.length] = new C("a_dyn_batch_id", T.R32F, !1, r.length);

            var z = new M(H, b),
                k = this._device.createInputAssembler(z),
                V = this._device.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, He.SIZE, He.SIZE));

            c.bindBuffer(He.BINDING, V), c.update();
            var W = new Float32Array(He.COUNT);
            i.toArray(W, n.transform.worldMatrix, He.MAT_WORLDS_OFFSET), this.batches.push({
              mergeCount: 1,
              vbs: I,
              vbDatas: A,
              vbIdx: N,
              vbIdxData: x,
              vbCount: o,
              ia: k,
              ubo: V,
              uboData: W,
              pass: h,
              shader: u,
              descriptorSet: c
            });
          }
        }, t.clear = function () {
          for (var e = 0; e < this.batches.length; ++e) {
            var t = this.batches[e];
            t.vbCount = 0, t.mergeCount = 0, t.ia.vertexCount = 0;
          }
        }, e;
      }();

      Fs._buffers = new Map();
      var Rs = new x(function () {
        return {
          subModel: null,
          passIdx: -1,
          dynamicOffsets: [],
          lights: []
        };
      }, 16),
          Ds = new Float32Array(4),
          Ns = le.create(0, 0, 0, 1),
          Ps = [],
          Ls = [],
          Bs = new i(),
          Cs = new i();

      function Ms(e, t) {
        return !(!t.worldBounds || fe.aabbWithAABB(t.worldBounds, e.aabb));
      }

      function xs(e, t) {
        return !(!t.worldBounds || fe.aabbWithAABB(t.worldBounds, e.aabb) && fe.aabbFrustum(t.worldBounds, e.frustum));
      }

      var Us = v("forward-add"),
          Hs = [];

      function Gs(e, t) {
        t.length = 0;

        for (var i = !1, n = 0; n < e.length; n++) {
          for (var r = e[n].passes, s = -1, a = 0; a < r.length; a++) {
            if (r[a].phase === Us) {
              s = a, i = !0;
              break;
            }
          }

          t.push(s);
        }

        return i;
      }

      var zs,
          ks,
          Vs,
          Ws,
          Ks,
          Ys,
          Qs,
          qs,
          Xs,
          js,
          Zs,
          Js = function () {
        function e(e) {
          this._pipeline = void 0, this._device = void 0, this._validLights = [], this._lightPasses = [], this._shadowUBO = new Float32Array(pe.COUNT), this._lightBufferCount = 16, this._lightBufferStride = void 0, this._lightBufferElementCount = void 0, this._lightBuffer = void 0, this._firstLightBufferView = void 0, this._lightBufferData = void 0, this._instancedQueue = void 0, this._batchedQueue = void 0, this._lightMeterScale = 1e4, this._pipeline = e, this._device = e.device, this._instancedQueue = new bs(), this._batchedQueue = new As();
          var t = this._device.capabilities.uboOffsetAlignment;
          this._lightBufferStride = Math.ceil(Ge.SIZE / t) * t, this._lightBufferElementCount = this._lightBufferStride / Float32Array.BYTES_PER_ELEMENT, this._lightBuffer = this._device.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, this._lightBufferStride * this._lightBufferCount, this._lightBufferStride)), this._firstLightBufferView = this._device.createBuffer(new ze(this._lightBuffer, 0, Ge.SIZE)), this._lightBufferData = new Float32Array(this._lightBufferElementCount * this._lightBufferCount);
        }

        var n = e.prototype;
        return n.clear = function () {
          this._instancedQueue.clear(), this._batchedQueue.clear(), this._validLights.length = 0;

          for (var e = 0; e < this._lightPasses.length; e++) {
            var t = this._lightPasses[e];
            t.dynamicOffsets.length = 0, t.lights.length = 0;
          }

          Rs.freeArray(this._lightPasses), this._lightPasses.length = 0;
        }, n.destroy = function () {
          for (var e = this._pipeline.globalDSManager.descriptorSetMap, t = e.keys, i = 0; i < t.length; i++) {
            var n = t[i],
                r = e.get(n);
            r && (r.getBuffer(pe.BINDING).destroy(), r.getSampler(Se).destroy(), r.getSampler(ke).destroy(), r.getTexture(Se).destroy(), r.getTexture(ke).destroy(), r.destroy()), e.delete(n);
          }
        }, n.gatherLightPasses = function (e, t) {
          var i = this._validLights;

          if (this.clear(), this._gatherValidLights(e, i), i.length) {
            this._updateUBOs(e, t), this._updateLightDescriptorSet(e, t);

            for (var n = this._pipeline.pipelineSceneData.renderObjects, r = 0; r < n.length; r++) {
              var s = n[r].model,
                  a = s.subModels;
              if (Gs(a, Hs) && (Ls.length = 0, this._lightCulling(s, i), Ls.length)) for (var o = 0; o < a.length; o++) {
                var h = Hs[o];

                if (!(h < 0)) {
                  var u = a[o],
                      c = u.passes[h];
                  u.descriptorSet.bindBuffer(Ge.BINDING, this._firstLightBufferView), u.descriptorSet.update(), this._addRenderQueue(c, u, s, h, i);
                }
              }
            }

            this._instancedQueue.uploadBuffers(t), this._batchedQueue.uploadBuffers(t);
          }
        }, n.recordCommandBuffer = function (e, t, i) {
          this._instancedQueue.recordCommandBuffer(e, t, i), this._batchedQueue.recordCommandBuffer(e, t, i);

          for (var n = this._pipeline.globalDSManager, r = 0; r < this._lightPasses.length; r++) {
            var s = this._lightPasses[r],
                a = s.subModel,
                o = s.passIdx,
                h = s.dynamicOffsets,
                u = s.lights,
                c = a.passes[o],
                _ = a.shaders[o],
                l = a.inputAssembler,
                d = ds.getOrCreatePipelineState(e, c, _, t, l),
                f = c.descriptorSet,
                p = a.descriptorSet;
            i.bindPipelineState(d), i.bindDescriptorSet(Ue.MATERIAL, f), i.bindInputAssembler(l);

            for (var g = 0; g < h.length; ++g) {
              var v = u[g],
                  m = n.getOrCreateDescriptorSet(v);
              Ps[0] = h[g], i.bindDescriptorSet(Ue.GLOBAL, m), i.bindDescriptorSet(Ue.LOCAL, p, Ps), i.draw(l);
            }
          }
        }, n._gatherValidLights = function (e, t) {
          for (var i = e.scene.sphereLights, n = 0; n < i.length; n++) {
            var r = i[n];
            r.baked || (le.set(Ns, r.position.x, r.position.y, r.position.z, r.range), fe.sphereFrustum(Ns, e.frustum) && t.push(r));
          }

          for (var s = e.scene.spotLights, a = 0; a < s.length; a++) {
            var o = s[a];
            o.baked || (le.set(Ns, o.position.x, o.position.y, o.position.z, o.range), fe.sphereFrustum(Ns, e.frustum) && t.push(o));
          }
        }, n._lightCulling = function (e, t) {
          for (var i = 0; i < t.length; i++) {
            var n = t[i],
                r = !1;

            switch (n.type) {
              case ri.SPHERE:
                r = Ms(n, e);
                break;

              case ri.SPOT:
                r = xs(n, e);
            }

            r || Ls.push(i);
          }
        }, n._addRenderQueue = function (e, t, i, n) {
          var r = e.batchingScheme;
          if (r === p.INSTANCING) for (var s = 0; s < Ls.length; s++) {
            var a = Ls[s],
                o = jt.get(e, a);
            o.merge(t, i.instancedAttributes, n), o.dynamicOffsets[0] = this._lightBufferStride * a, this._instancedQueue.queue.add(o);
          } else if (r === p.VB_MERGING) for (var h = 0; h < Ls.length; h++) {
            var u = Ls[h],
                c = Fs.get(e, u);
            c.merge(t, n, i), c.dynamicOffsets[0] = this._lightBufferStride * u, this._batchedQueue.queue.add(c);
          } else {
            var _ = Rs.alloc();

            _.subModel = t, _.passIdx = n;

            for (var l = 0; l < Ls.length; l++) {
              var d = Ls[l];
              _.lights.push(d), _.dynamicOffsets.push(this._lightBufferStride * d);
            }

            this._lightPasses.push(_);
          }
        }, n._updateLightDescriptorSet = function (e, t) {
          for (var n = this._pipeline.device, r = this._pipeline.pipelineSceneData, s = r.shadows, a = r.shadowFrameBufferMap, o = e.scene.mainLight, h = Te(n) ? 0 : 1, u = this._pipeline.globalDSManager, c = 0; c < this._validLights.length; c++) {
            var _ = this._validLights[c],
                l = u.getOrCreateDescriptorSet(c);

            if (l) {
              var d = void 0,
                  f = void 0;

              switch (_.type) {
                case ri.SPHERE:
                  o && En(s, o, this._shadowUBO), this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 0] = s.size.x, this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 1] = s.size.y, this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 2] = s.pcf, this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 3] = s.bias, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 0] = 2, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 1] = h, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 2] = s.normalBias, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 3] = 0, Ee.toArray(this._shadowUBO, s.shadowColor, pe.SHADOW_COLOR_OFFSET);
                  break;

                case ri.SPOT:
                  if (o && En(s, o, this._shadowUBO), i.invert(Bs, _.node.getWorldMatrix()), i.perspective(Cs, _.angle, _.aspect, .001, _.range), d = Cs.clone(), f = Cs.clone().invert(), i.multiply(Cs, Cs, Bs), i.toArray(this._shadowUBO, Bs, pe.MAT_LIGHT_VIEW_OFFSET), i.toArray(this._shadowUBO, Cs, pe.MAT_LIGHT_VIEW_PROJ_OFFSET), this._shadowUBO[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 0] = .01, this._shadowUBO[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 1] = _.range, this._shadowUBO[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 2] = 0, this._shadowUBO[pe.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET + 3] = 1 - s.saturation, this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 0] = s.size.x, this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 1] = s.size.y, this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 2] = s.pcf, this._shadowUBO[pe.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET + 3] = s.bias, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 0] = 1, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 1] = h, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 2] = s.normalBias, this._shadowUBO[pe.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET + 3] = 0, this._shadowUBO[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 0] = d.m10, this._shadowUBO[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 1] = d.m14, this._shadowUBO[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 2] = d.m11, this._shadowUBO[pe.SHADOW_PROJ_DEPTH_INFO_OFFSET + 3] = d.m15, this._shadowUBO[pe.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET + 0] = f.m10, this._shadowUBO[pe.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET + 1] = f.m14, this._shadowUBO[pe.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET + 2] = f.m11, this._shadowUBO[pe.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET + 3] = f.m15, this._shadowUBO[pe.SHADOW_PROJ_INFO_OFFSET + 0] = d.m00, this._shadowUBO[pe.SHADOW_PROJ_INFO_OFFSET + 1] = d.m05, this._shadowUBO[pe.SHADOW_PROJ_INFO_OFFSET + 2] = 1 / d.m00, this._shadowUBO[pe.SHADOW_PROJ_INFO_OFFSET + 3] = 1 / d.m05, Ee.toArray(this._shadowUBO, s.shadowColor, pe.SHADOW_COLOR_OFFSET), a.has(_)) {
                    var p,
                        g = null === (p = a.get(_)) || void 0 === p ? void 0 : p.colorTextures[0];
                    g && l.bindTexture(ke, g);
                  }

              }

              l.update(), t.updateBuffer(l.getBuffer(pe.BINDING), this._shadowUBO);
            }
          }
        }, n._updateUBOs = function (e, i) {
          var n = e.exposure,
              r = this._pipeline.pipelineSceneData,
              s = r.isHDR,
              a = r.fpScale;
          this._validLights.length > this._lightBufferCount && (this._firstLightBufferView.destroy(), this._lightBufferCount = Ve(this._validLights.length), this._lightBuffer.resize(this._lightBufferStride * this._lightBufferCount), this._lightBufferData = new Float32Array(this._lightBufferElementCount * this._lightBufferCount), this._firstLightBufferView.initialize(new ze(this._lightBuffer, 0, Ge.SIZE)));

          for (var o = 0, h = 0; o < this._validLights.length; o++, h += this._lightBufferElementCount) {
            var u = this._validLights[o];

            switch (u.type) {
              case ri.SPHERE:
                if (t.toArray(Ds, u.position), Ds[3] = 0, this._lightBufferData.set(Ds, h + Ge.LIGHT_POS_OFFSET), Ds[0] = u.size, Ds[1] = u.range, Ds[2] = 0, this._lightBufferData.set(Ds, h + Ge.LIGHT_SIZE_RANGE_ANGLE_OFFSET), t.toArray(Ds, u.color), u.useColorTemperature) {
                  var c = u.colorTemperatureRGB;
                  Ds[0] *= c.x, Ds[1] *= c.y, Ds[2] *= c.z;
                }

                Ds[3] = s ? u.luminance * a * this._lightMeterScale : u.luminance * n * this._lightMeterScale, this._lightBufferData.set(Ds, h + Ge.LIGHT_COLOR_OFFSET);
                break;

              case ri.SPOT:
                if (t.toArray(Ds, u.position), Ds[3] = 1, this._lightBufferData.set(Ds, h + Ge.LIGHT_POS_OFFSET), Ds[0] = u.size, Ds[1] = u.range, Ds[2] = u.spotAngle, this._lightBufferData.set(Ds, h + Ge.LIGHT_SIZE_RANGE_ANGLE_OFFSET), t.toArray(Ds, u.direction), this._lightBufferData.set(Ds, h + Ge.LIGHT_DIR_OFFSET), t.toArray(Ds, u.color), u.useColorTemperature) {
                  var _ = u.colorTemperatureRGB;
                  Ds[0] *= _.x, Ds[1] *= _.y, Ds[2] *= _.z;
                }

                Ds[3] = s ? u.luminance * a * this._lightMeterScale : u.luminance * n * this._lightMeterScale, this._lightBufferData.set(Ds, h + Ge.LIGHT_COLOR_OFFSET);
            }
          }

          i.updateBuffer(this._lightBuffer, this._lightBufferData);
        }, e;
      }(),
          $s = new G(),
          ea = function () {
        function e(e) {
          this._pendingModels = [], this._castModels = [], this._instancedQueue = new bs(), this._pipeline = void 0, this._pipeline = e;
        }

        var t = e.prototype;
        return t.gatherShadowPasses = function (e, t) {
          var i = this._pipeline.pipelineSceneData,
              n = this._pipeline.pipelineUBO,
              r = i.shadows;

          if (this._instancedQueue.clear(), this._pendingModels.length = 0, this._castModels.length = 0, r.enabled && r.type === ge.Planar) {
            n.updateShadowUBO(e);
            var s = e.scene,
                a = e.frustum,
                o = 0 != (e.visibility & U.BitMask.DEFAULT);

            if (s.mainLight && o) {
              for (var h = s.models, u = 0; u < h.length; u++) {
                var c = h[u];
                c.enabled && c.node && c.castShadow && this._castModels.push(c);
              }

              var _ = jt.get(r.instancingMaterial.passes[0]);

              this._instancedQueue.queue.add(_);

              for (var l = 0; l < this._castModels.length; l++) {
                var d = this._castModels[l];
                if (!d.worldBounds || (G.transform($s, d.worldBounds, r.matLight), fe.aabbFrustum($s, a))) if (d.isInstancingEnabled) for (var f = d.subModels, p = 0; p < f.length; p++) {
                  var g = f[p];

                  _.merge(g, d.instancedAttributes, 0, g.planarInstanceShader);
                } else this._pendingModels.push(d);
              }

              this._instancedQueue.uploadBuffers(t);
            }
          }
        }, t.recordCommandBuffer = function (e, t, i) {
          var n = this._pipeline.pipelineSceneData.shadows;

          if (n.enabled && n.type === ge.Planar && (this._instancedQueue.recordCommandBuffer(e, t, i), this._pendingModels.length)) {
            var r = n.material.passes[0],
                s = r.descriptorSet;
            i.bindDescriptorSet(Ue.MATERIAL, s);

            for (var a = this._pendingModels.length, o = 0; o < a; o++) {
              for (var h = this._pendingModels[o], u = 0; u < h.subModels.length; u++) {
                var c = h.subModels[u],
                    _ = c.planarShader,
                    l = c.inputAssembler,
                    d = ds.getOrCreatePipelineState(e, r, _, t, l);
                i.bindPipelineState(d), i.bindDescriptorSet(Ue.LOCAL, c.descriptorSet), i.bindInputAssembler(l), i.draw(l);
              }
            }
          }
        }, e;
      }(),
          ta = function () {
        function e() {
          this._phaseID = v("default");
        }

        var t = e.prototype;
        return t.activate = function (e) {
          this._pipeline = e;
        }, t.render = function (e, t) {
          for (var i = this._pipeline, n = i.device, r = i.commandBuffers[0], s = e.scene.batches, a = 0; a < s.length; a++) {
            var o = s[a],
                h = !1;
            if (e.visibility & o.visFlags && (h = !0), h) for (var u = o.shaders.length, c = 0; c < u; c++) {
              var _ = o.passes[c];

              if (_.phase === this._phaseID) {
                var l = o.shaders[c],
                    d = o.inputAssembler,
                    f = o.descriptorSet,
                    p = ds.getOrCreatePipelineState(n, _, l, t, d);
                r.bindPipelineState(p), r.bindDescriptorSet(Ue.MATERIAL, _.descriptorSet), r.bindDescriptorSet(Ue.LOCAL, f), r.bindInputAssembler(d), r.draw(d);
              }
            }
          }
        }, e;
      }(),
          ia = [new l(0, 0, 0, 1)],
          na = e("B", (zs = ae("ForwardStage"), ks = _e([ms]), Vs = ce(), zs((qs = Qs = function (e) {
        function t() {
          var t;
          return t = e.call(this) || this, he(t, "renderQueues", Ys, ie(t)), t._renderQueues = [], t._renderArea = new Ae(), t._batchedQueue = void 0, t._instancedQueue = void 0, t._phaseID = v("default"), t._clearFlag = 4294967295, t._batchedQueue = new As(), t._instancedQueue = new bs(), t._uiPhase = new ta(), t;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          return e.prototype.initialize.call(this, t), t.renderQueues && (this.renderQueues = t.renderQueues), !0;
        }, i.activate = function (t, i) {
          e.prototype.activate.call(this, t, i);

          for (var n = 0; n < this.renderQueues.length; n++) {
            this._renderQueues[n] = ws(this.renderQueues[n]);
          }

          this._additiveLightQueue = new Js(this._pipeline), this._planarQueue = new ea(this._pipeline), this._uiPhase.activate(t);
        }, i.destroy = function () {}, i.render = function (e) {
          this._instancedQueue.clear(), this._batchedQueue.clear();
          var t = this._pipeline,
              i = t.device;

          this._renderQueues.forEach(ys);

          for (var r = t.pipelineSceneData.renderObjects, s = 0, a = 0, o = 0, h = 0; h < r.length; ++h) {
            var u = r[h],
                c = u.model.subModels;

            for (s = 0; s < c.length; ++s) {
              var _ = c[s],
                  l = _.passes;

              for (a = 0; a < l.length; ++a) {
                var d = l[a];

                if (d.phase === this._phaseID) {
                  var f = d.batchingScheme;

                  if (f === p.INSTANCING) {
                    var g = jt.get(d);
                    g.merge(_, u.model.instancedAttributes, a), this._instancedQueue.queue.add(g);
                  } else if (f === p.VB_MERGING) {
                    var v = Fs.get(d);
                    v.merge(_, a, u.model), this._batchedQueue.queue.add(v);
                  } else for (o = 0; o < this._renderQueues.length; o++) {
                    this._renderQueues[o].insertRenderPass(u, s, a);
                  }
                }
              }
            }
          }

          this._renderQueues.forEach(Os);

          var m = t.commandBuffers[0];
          this._instancedQueue.uploadBuffers(m), this._batchedQueue.uploadBuffers(m), this._additiveLightQueue.gatherLightPasses(e, m), this._planarQueue.gatherShadowPasses(e, m);
          var S = t.pipelineSceneData;
          if (this._renderArea = t.generateRenderArea(e), e.clearFlag & n.COLOR) if (S.isHDR) {
            Is(ia[0], e.clearColor);
            var E = S.fpScale / e.exposure;
            ia[0].x *= E, ia[0].y *= E, ia[0].z *= E;
          } else ia[0].x = e.clearColor.x, ia[0].y = e.clearColor.y, ia[0].z = e.clearColor.z;
          ia[0].w = e.clearColor.w;
          var T = e.window.framebuffer,
              w = T.colorTextures[0] ? T.renderPass : t.getRenderPass(e.clearFlag & this._clearFlag);
          m.beginRenderPass(w, T, this._renderArea, ia, e.clearDepth, e.clearStencil), m.bindDescriptorSet(Ue.GLOBAL, t.descriptorSet), this._renderQueues[0].recordCommandBuffer(i, w, m), this._instancedQueue.recordCommandBuffer(i, w, m), this._batchedQueue.recordCommandBuffer(i, w, m), this._additiveLightQueue.recordCommandBuffer(i, w, m), this._planarQueue.recordCommandBuffer(i, w, m), this._renderQueues[1].recordCommandBuffer(i, w, m), this._uiPhase.render(e, w), m.endRenderPass();
        }, t;
      }(Ki), Qs.initInfo = {
        name: "ForwardStage",
        priority: Mn.FORWARD,
        tag: 0,
        renderQueues: [{
          isTransparent: !1,
          sortMode: fs.FRONT_TO_BACK,
          stages: ["default"]
        }, {
          isTransparent: !0,
          sortMode: fs.BACK_TO_FRONT,
          stages: ["default", "planarShadow"]
        }]
      }, Ys = oe((Ks = qs).prototype, "renderQueues", [ks, ue, Vs], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ws = Ks)) || Ws)),
          ra = e("A", ae("ForwardFlow")((Zs = js = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          if (e.prototype.initialize.call(this, t), 0 === this._stages.length) {
            var i = new na();
            i.initialize(na.initInfo), this._stages.push(i);
          }

          return !0;
        }, i.activate = function (t) {
          e.prototype.activate.call(this, t);
        }, i.render = function (t) {
          e.prototype.render.call(this, t);
        }, i.destroy = function () {
          e.prototype.destroy.call(this);
        }, t;
      }(Yi), js.initInfo = {
        name: We,
        priority: xn.FORWARD,
        stages: []
      }, Xs = Zs)) || Xs),
          sa = v("shadow-caster"),
          aa = [];

      function oa(e, t) {
        t.length = 0;

        for (var i = !1, n = 0; n < e.length; n++) {
          for (var r = e[n].passes, s = -1, a = 0; a < r.length; a++) {
            if (r[a].phase === sa) {
              s = a, i = !0;
              break;
            }
          }

          t.push(s);
        }

        return i;
      }

      var ha,
          ua,
          ca,
          _a,
          la,
          da,
          fa,
          pa,
          ga,
          va,
          ma,
          Sa,
          Ea,
          Ta,
          wa,
          ya,
          Oa,
          Ia,
          Aa,
          ba,
          Fa,
          Ra,
          Da,
          Na = function () {
        function e(e) {
          this._pipeline = void 0, this._subModelsArray = [], this._passArray = [], this._shaderArray = [], this._instancedQueue = void 0, this._batchedQueue = void 0, this._pipeline = e, this._instancedQueue = new bs(), this._batchedQueue = new As();
        }

        var t = e.prototype;
        return t.gatherLightPasses = function (e, t, i) {
          this.clear();
          var n = this._pipeline.pipelineSceneData.shadows,
              r = this._pipeline.pipelineSceneData.shadowObjects,
              s = this._pipeline.pipelineSceneData.renderObjects;
          if (e && n.enabled && n.type === ge.ShadowMap) switch (this._pipeline.pipelineUBO.updateShadowUBOLight(e, t), e.type) {
            case ri.DIRECTIONAL:
              for (var a = 0; a < r.length; a++) {
                var o = r[a].model;
                oa(o.subModels, aa) && this.add(o, i, aa);
              }

              break;

            case ri.SPOT:
              for (var h = 0; h < s.length; h++) {
                var u = s[h].model;
                oa(u.subModels, aa) && u.castShadow && (!u.worldBounds || fe.aabbWithAABB(u.worldBounds, e.aabb) && fe.aabbFrustum(u.worldBounds, e.frustum)) && this.add(u, i, aa);
              }

          }
        }, t.clear = function () {
          this._subModelsArray.length = 0, this._shaderArray.length = 0, this._passArray.length = 0, this._instancedQueue.clear(), this._batchedQueue.clear();
        }, t.add = function (e, t, i) {
          for (var n = e.subModels, r = 0; r < n.length; r++) {
            var s = n[r],
                a = i[r],
                o = s.passes[a];

            if (o.batchingScheme === p.INSTANCING) {
              var h = jt.get(o);
              h.merge(s, e.instancedAttributes, a), this._instancedQueue.queue.add(h);
            } else if (o.batchingScheme === p.VB_MERGING) {
              var u = Fs.get(o);
              u.merge(s, a, e), this._batchedQueue.queue.add(u);
            } else {
              var c = s.shaders[a];
              this._subModelsArray.push(s), c && this._shaderArray.push(c), this._passArray.push(o);
            }
          }

          this._instancedQueue.uploadBuffers(t), this._batchedQueue.uploadBuffers(t);
        }, t.recordCommandBuffer = function (e, t, i) {
          this._instancedQueue.recordCommandBuffer(e, t, i), this._batchedQueue.recordCommandBuffer(e, t, i);

          for (var n = 0; n < this._subModelsArray.length; ++n) {
            var r = this._subModelsArray[n],
                s = this._shaderArray[n],
                a = this._passArray[n],
                o = r.inputAssembler,
                h = ds.getOrCreatePipelineState(e, a, s, t, o),
                u = a.descriptorSet;
            i.bindPipelineState(h), i.bindDescriptorSet(Ue.MATERIAL, u), i.bindDescriptorSet(Ue.LOCAL, r.descriptorSet), i.bindInputAssembler(o), i.draw(o);
          }
        }, e;
      }(),
          Pa = [new l(1, 1, 1, 1)],
          La = e("W", ae("ShadowStage")((ca = ua = function (e) {
        function t() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (t = e.call.apply(e, [this].concat(n)) || this)._shadowFrameBuffer = null, t._renderArea = new Ae(), t._light = null, t;
        }

        $(t, e);
        var i = t.prototype;
        return i.setUsage = function (e, t) {
          this._light = e, this._shadowFrameBuffer = t;
        }, i.destroy = function () {
          var e;
          null === (e = this._additiveShadowQueue) || void 0 === e || e.clear();
        }, i.clearFramebuffer = function (e) {
          if (this._light && this._shadowFrameBuffer) {
            Pa[0].w = e.clearColor.w;
            var t = this._pipeline.commandBuffers[0],
                i = this._shadowFrameBuffer.renderPass;
            t.beginRenderPass(i, this._shadowFrameBuffer, this._renderArea, Pa, e.clearDepth, e.clearStencil), t.endRenderPass();
          }
        }, i.render = function (e) {
          var t = this._pipeline,
              i = t.pipelineSceneData,
              n = i.shadows,
              r = i.shadingScale,
              s = t.commandBuffers[0];

          if (this._light && this._shadowFrameBuffer) {
            this._additiveShadowQueue.gatherLightPasses(this._light, e, s);

            var a = e.viewport,
                o = n.size;
            this._renderArea.x = a.x * o.x, this._renderArea.y = a.y * o.y, this._renderArea.width = a.width * o.x * r, this._renderArea.height = a.height * o.y * r;
            var h = t.device,
                u = this._shadowFrameBuffer.renderPass;
            s.beginRenderPass(u, this._shadowFrameBuffer, this._renderArea, Pa, e.clearDepth, e.clearStencil), s.bindDescriptorSet(Ue.GLOBAL, t.descriptorSet), this._additiveShadowQueue.recordCommandBuffer(h, u, s), s.endRenderPass();
          }
        }, i.activate = function (t, i) {
          e.prototype.activate.call(this, t, i), this._additiveShadowQueue = new Na(t);
        }, t;
      }(Ki), ua.initInfo = {
        name: "ShadowStage",
        priority: Mn.FORWARD,
        tag: 0
      }, ha = ca)) || ha),
          Ba = e("U", ae("ShadowFlow")((da = la = function (e) {
        function t() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (t = e.call.apply(e, [this].concat(n)) || this)._shadowRenderPass = null, t;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          if (e.prototype.initialize.call(this, t), 0 === this._stages.length) {
            var i = new La();
            i.initialize(La.initInfo), this._stages.push(i);
          }

          return !0;
        }, i.render = function (e) {
          var t = this._pipeline,
              i = t.pipelineSceneData.shadows,
              n = t.pipelineSceneData.shadowFrameBufferMap,
              r = t.pipelineSceneData.shadowObjects,
              s = t.pipelineSceneData.renderObjects;

          if (i.enabled && i.type === ge.ShadowMap) {
            var a = function (e, t) {
              Zi.length = 0;
              var i = e.scene;
              Zi.push(i.mainLight);

              for (var n = i.spotLights, r = 0; r < n.length; r++) {
                var s = n[r];
                le.set(Ji, s.position.x, s.position.y, s.position.z, s.range), fe.sphereFrustum(Ji, e.frustum) && t > Zi.length && Zi.push(s);
              }

              return Zi;
            }(e, i.maxReceived);

            if (0 !== r.length || 0 !== s.length) {
              i.shadowMapDirty && this.resizeShadowMap();

              for (var o = 0; o < a.length; o++) {
                var h = a[o];
                n.has(h) || this._initShadowFrameBuffer(t, h);

                for (var u = n.get(h), c = 0; c < this._stages.length; c++) {
                  var _ = this._stages[c];
                  _.setUsage(h, u), _.render(e);
                }
              }

              t.pipelineUBO.updateShadowUBO(e);
            } else this.clearShadowMap(a, e);
          }
        }, i.destroy = function () {
          if (e.prototype.destroy.call(this), this._pipeline) {
            for (var t = this._pipeline.pipelineSceneData.shadowFrameBufferMap, i = Array.from(t.values()), n = 0; n < i.length; n++) {
              var r = i[n];

              if (r) {
                for (var s = r.colorTextures, a = 0; a < s.length; a++) {
                  var o = s[n];
                  o && o.destroy();
                }

                s.length = 0;
                var h = r.depthStencilTexture;
                h && h.destroy(), r.destroy();
              }
            }

            t.clear();
          }

          this._shadowRenderPass && this._shadowRenderPass.destroy();
        }, i._initShadowFrameBuffer = function (e, t) {
          var i = e.device,
              n = e.pipelineSceneData.shadows.size,
              r = e.pipelineSceneData.shadowFrameBufferMap,
              s = Te(i) ? T.R32F : T.RGBA8;

          if (!this._shadowRenderPass) {
            var a = new Ke();
            a.format = s, a.loadOp = Ne.CLEAR, a.storeOp = De.STORE, a.sampleCount = 1;
            var o = new Ye();
            o.format = i.depthStencilFormat, o.depthLoadOp = Ne.CLEAR, o.depthStoreOp = De.DISCARD, o.stencilLoadOp = Ne.CLEAR, o.stencilStoreOp = De.DISCARD, o.sampleCount = 1;
            var h = new Qe([a], o);
            this._shadowRenderPass = i.createRenderPass(h);
          }

          var u = [];
          u.push(i.createTexture(new m(S.TEX2D, E.COLOR_ATTACHMENT | E.SAMPLED, s, n.x, n.y)));

          var c = i.createTexture(new m(S.TEX2D, E.DEPTH_STENCIL_ATTACHMENT, i.depthStencilFormat, n.x, n.y)),
              _ = i.createFramebuffer(new qe(this._shadowRenderPass, u, c));

          r.set(t, _);
        }, i.clearShadowMap = function (e, t) {
          for (var i = this._pipeline.pipelineSceneData, n = 0; n < e.length; n++) {
            var r = e[n],
                s = i.shadowFrameBufferMap.get(r);
            if (i.shadowFrameBufferMap.has(r)) for (var a = 0; a < this._stages.length; a++) {
              var o = this._stages[a];
              o.setUsage(r, s), o.clearFramebuffer(t);
            }
          }
        }, i.resizeShadowMap = function () {
          for (var e = this._pipeline.pipelineSceneData.shadows, t = e.size, i = this._pipeline, n = i.device, r = i.pipelineSceneData.shadowFrameBufferMap, s = Te(n) ? T.R32F : T.RGBA8, a = r.values(), o = a.next(); !o.done;) {
            var h = o.value;

            if (h) {
              var u = [];
              u.push(i.device.createTexture(new m(S.TEX2D, E.COLOR_ATTACHMENT | E.SAMPLED, s, t.x, t.y)));
              var c = h.depthStencilTexture;
              c && c.resize(t.x, t.y);
              var _ = h.renderPass;
              h.destroy(), h.initialize(new qe(_, u, c)), o = a.next();
            } else o = a.next();
          }

          e.shadowMapDirty = !1;
        }, t;
      }(Yi), la.initInfo = {
        name: Xe,
        priority: xn.SHADOW,
        tag: ls.SCENE,
        stages: []
      }, _a = da)) || _a),
          Ca = function () {
        var e = t.prototype;

        function t() {
          this.fog = new je(), this.ambient = new ee(), this.skybox = new pi(), this.shadows = new J(), this.renderObjects = [], this.shadowObjects = [], this.shadowFrameBufferMap = new Map(), this._isHDR = !1, this._shadingScale = 1, this._fpScale = 1 / 1024, this._init(), this.shadingScale = 1, this.fpScale = 1 / 1024;
        }

        return e._init = function () {}, e.activate = function (e, t) {
          return this._device = e, this._pipeline = t, !0;
        }, e.onGlobalPipelineStateChanged = function () {}, e.destroy = function () {
          this.ambient.destroy(), this.skybox.destroy(), this.fog.destroy(), this.shadows.destroy();
        }, c(t, [{
          key: "native",
          get: function get() {
            return this._nativeObj;
          }
        }, {
          key: "isHDR",
          get: function get() {
            return this._isHDR;
          },
          set: function set(e) {
            this._isHDR = e;
          }
        }, {
          key: "shadingScale",
          get: function get() {
            return this._shadingScale;
          },
          set: function set(e) {
            this._shadingScale = e;
          }
        }, {
          key: "fpScale",
          get: function get() {
            return this._fpScale;
          },
          set: function set(e) {
            this._fpScale = e;
          }
        }]), t;
      }(),
          Ma = [O.POINT, O.POINT, O.NONE, I.CLAMP, I.CLAMP, I.CLAMP];

      e("F", (fa = ae("ForwardPipeline"), pa = _e([ps]), ga = ce(), fa((Ea = function (e) {
        function t() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return t = e.call.apply(e, [this].concat(n)) || this, he(t, "renderTextures", Sa, ie(t)), t._renderPasses = new Map(), t;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          if (e.prototype.initialize.call(this, t), 0 === this._flows.length) {
            var i = new Ba();
            i.initialize(Ba.initInfo), this._flows.push(i);
            var n = new ra();
            n.initialize(ra.initInfo), this._flows.push(n);
          }

          return !0;
        }, i.activate = function () {
          return this._macros = {
            CC_PIPELINE_TYPE: 0
          }, this._pipelineSceneData = new Ca(), !(!e.prototype.activate.call(this) || !this._activeRenderer() && (D(2402), 1));
        }, i.render = function (e) {
          this._commandBuffers[0].begin(), this._pipelineUBO.updateGlobalUBO();

          for (var t = 0; t < e.length; t++) {
            var i = e[t];

            if (i.scene) {
              Tn(this, i), this._pipelineUBO.updateCameraUBO(i);

              for (var n = 0; n < this._flows.length; n++) {
                this._flows[n].render(i);
              }
            }
          }

          this._commandBuffers[0].end(), this._device.flushCommands(this._commandBuffers), this._device.queue.submit(this._commandBuffers);
        }, i.getRenderPass = function (e) {
          var t = this._renderPasses.get(e);

          if (t) return t;
          var i = this.device,
              r = new Ke(),
              s = new Ye();
          r.format = i.colorFormat, s.format = i.depthStencilFormat, s.stencilStoreOp = De.DISCARD, s.depthStoreOp = De.DISCARD, e & n.COLOR || (e & Kt ? r.loadOp = Ne.DISCARD : (r.loadOp = Ne.LOAD, r.beginAccesses = [Pe.PRESENT])), (e & n.DEPTH_STENCIL) !== n.DEPTH_STENCIL && (e & n.DEPTH || (s.depthLoadOp = Ne.LOAD), e & n.STENCIL || (s.stencilLoadOp = Ne.LOAD), s.beginAccesses = [Pe.DEPTH_STENCIL_ATTACHMENT_WRITE]);
          var a = new Qe([r], s);
          return t = i.createRenderPass(a), this._renderPasses.set(e, t), t;
        }, i._activeRenderer = function () {
          var e = this.device;

          this._commandBuffers.push(e.commandBuffer);

          var t = A(Ma),
              i = b.getSampler(e, t);
          return this._descriptorSet.bindSampler(Se, i), this._descriptorSet.bindTexture(Se, k.get("default-texture").getGFXTexture()), this._descriptorSet.bindSampler(ke, i), this._descriptorSet.bindTexture(ke, k.get("default-texture").getGFXTexture()), this._descriptorSet.update(), !0;
        }, i.destroyUBOs = function () {
          this._descriptorSet && (this._descriptorSet.getBuffer(ve.BINDING).destroy(), this._descriptorSet.getBuffer(pe.BINDING).destroy(), this._descriptorSet.getBuffer(me.BINDING).destroy(), this._descriptorSet.getSampler(Se).destroy(), this._descriptorSet.getSampler(ke).destroy(), this._descriptorSet.getTexture(Se).destroy(), this._descriptorSet.getTexture(ke).destroy());
        }, i.destroy = function () {
          this.destroyUBOs();

          for (var t = this._renderPasses.values(), i = t.next(); !i.done;) {
            i.value.destroy(), i = t.next();
          }

          return this._commandBuffers.length = 0, e.prototype.destroy.call(this);
        }, t;
      }(zn), Sa = oe((ma = Ea).prototype, "renderTextures", [pa, ue, ga], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), va = ma)) || va)), function (e) {
        e[e.GBUFFER = 10] = "GBUFFER", e[e.LIGHTING = 15] = "LIGHTING", e[e.TRANSPARENT = 18] = "TRANSPARENT", e[e.POSTPROCESS = 19] = "POSTPROCESS", e[e.UI = 20] = "UI";
      }(Ta || (Ta = {})), function (e) {
        e[e.SHADOW = 0] = "SHADOW", e[e.GBUFFER = 1] = "GBUFFER", e[e.LIGHTING = 5] = "LIGHTING", e[e.UI = 10] = "UI";
      }(wa || (wa = {}));

      var xa,
          Ua,
          Ha,
          Ga,
          za,
          ka,
          Va,
          Wa,
          Ka,
          Ya,
          Qa,
          qa,
          Xa,
          ja,
          Za,
          Ja,
          $a,
          eo,
          to,
          io,
          no,
          ro,
          so,
          ao,
          oo,
          ho,
          uo,
          co,
          _o,
          lo,
          fo,
          po,
          go,
          vo,
          mo,
          So,
          Eo = [new l(0, 0, 0, 0), new l(0, 0, 0, 0), new l(0, 0, 0, 0), new l(0, 0, 0, 0)],
          To = e("J", (ya = ae("GbufferStage"), Oa = _e([ms]), Ia = ce(), ya((Da = Ra = function (e) {
        function t() {
          var t;
          return t = e.call(this) || this, he(t, "renderQueues", Fa, ie(t)), t._renderQueues = [], t._renderArea = new Ae(), t._batchedQueue = void 0, t._instancedQueue = void 0, t._phaseID = v("deferred"), t._batchedQueue = new As(), t._instancedQueue = new bs(), t;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          return e.prototype.initialize.call(this, t), t.renderQueues && (this.renderQueues = t.renderQueues), !0;
        }, i.activate = function (t, i) {
          e.prototype.activate.call(this, t, i);

          for (var n = 0; n < this.renderQueues.length; n++) {
            this._renderQueues[n] = ws(this.renderQueues[n]);
          }
        }, i.destroy = function () {}, i.render = function (e) {
          this._instancedQueue.clear(), this._batchedQueue.clear();
          var t = this._pipeline,
              i = t.device;

          this._renderQueues.forEach(ys);

          var r = t.pipelineSceneData.renderObjects;

          if (0 !== r.length) {
            for (var s = 0, a = 0, o = 0, h = 0; h < r.length; ++h) {
              var u = r[h],
                  c = u.model.subModels;

              for (s = 0; s < c.length; ++s) {
                var _ = c[s],
                    l = _.passes;

                for (a = 0; a < l.length; ++a) {
                  var d = l[a];

                  if (d.phase === this._phaseID) {
                    var f = d.batchingScheme;

                    if (f === p.INSTANCING) {
                      var g = jt.get(d);
                      g.merge(_, u.model.instancedAttributes, a), this._instancedQueue.queue.add(g);
                    } else if (f === p.VB_MERGING) {
                      var v = Fs.get(d);
                      v.merge(_, a, u.model), this._batchedQueue.queue.add(v);
                    } else for (o = 0; o < this._renderQueues.length; o++) {
                      this._renderQueues[o].insertRenderPass(u, s, a);
                    }
                  }
                }
              }
            }

            this._renderQueues.forEach(Os);

            var m = t.commandBuffers[0];
            if (this._instancedQueue.uploadBuffers(m), this._batchedQueue.uploadBuffers(m), this._renderArea = t.generateRenderArea(e), t.updateQuadVertexData(this._renderArea), e.clearFlag & n.COLOR) if (t.pipelineSceneData.isHDR) {
              Is(Eo[0], e.clearColor);
              var S = t.pipelineSceneData.fpScale / e.exposure;
              Eo[0].x *= S, Eo[0].y *= S, Eo[0].z *= S;
            } else Eo[0].x = e.clearColor.x, Eo[0].y = e.clearColor.y, Eo[0].z = e.clearColor.z;
            Eo[0].w = e.clearColor.w;
            var E = t.getDeferredRenderData(e).gbufferFrameBuffer,
                T = E.renderPass;
            m.beginRenderPass(T, E, this._renderArea, Eo, e.clearDepth, e.clearStencil), m.bindDescriptorSet(Ue.GLOBAL, t.descriptorSet);

            for (var w = 0; w < this.renderQueues.length; w++) {
              this._renderQueues[w].recordCommandBuffer(i, T, m);
            }

            this._instancedQueue.recordCommandBuffer(i, T, m), this._batchedQueue.recordCommandBuffer(i, T, m), m.endRenderPass();
          }
        }, t;
      }(Ki), Ra.initInfo = {
        name: "GbufferStage",
        priority: Ta.GBUFFER,
        tag: 0,
        renderQueues: [{
          isTransparent: !1,
          sortMode: fs.FRONT_TO_BACK,
          stages: ["default"]
        }, {
          isTransparent: !0,
          sortMode: fs.BACK_TO_FRONT,
          stages: ["default"]
        }]
      }, Fa = oe((ba = Da).prototype, "renderQueues", [Oa, ue, Ia], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Aa = ba)) || Aa)),
          wo = e("I", ae("GbufferFlow")((Ha = Ua = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          if (e.prototype.initialize.call(this, t), 0 === this._stages.length) {
            var i = new To();
            i.initialize(To.initInfo), this._stages.push(i);
          }

          return !0;
        }, i.activate = function (t) {
          e.prototype.activate.call(this, t);
        }, i.render = function (t) {
          e.prototype.render.call(this, t);
        }, i.destroy = function () {
          e.prototype.destroy.call(this);
        }, t;
      }(Yi), Ua.initInfo = {
        name: Ze,
        priority: wa.GBUFFER,
        stages: []
      }, xa = Ha)) || xa),
          yo = [new l(0, 0, 0, 1)],
          Oo = e("O", (Ga = ae("LightingStage"), za = _e(ne), ka = ce(), Va = _e([ms]), Wa = ce(), Ga((ja = Xa = function (e) {
        function i() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (t = e.call.apply(e, [this].concat(n)) || this)._deferredLitsBufs = null, t._maxDeferredLights = Je.LIGHTS_PER_PASS, t._lightMeterScale = 1e4, t._descriptorSet = null, t._renderArea = new Ae(), he(t, "_deferredMaterial", Qa, ie(t)), he(t, "renderQueues", qa, ie(t)), t._phaseID = v("default"), t._defPhaseID = v("deferred"), t._renderQueues = [], t;
        }

        $(i, e);
        var r = i.prototype;
        return r.initialize = function (t) {
          return e.prototype.initialize.call(this, t), !0;
        }, r.gatherLights = function (e) {
          for (var i = this._pipeline, n = i.commandBuffers[0], r = e.scene.sphereLights, s = e.scene.spotLights, a = le.create(0, 0, 0, 1), o = new Float32Array(4), h = e.exposure, u = 0, c = z.length, _ = c * this._maxDeferredLights, l = 0; l < r.length && u < this._maxDeferredLights; l++, ++u) {
            var d = r[l];

            if (le.set(a, d.position.x, d.position.y, d.position.z, d.range), fe.sphereFrustum(a, e.frustum)) {
              if (t.toArray(o, d.position), o[3] = 0, this._lightBufferData.set(o, u * c), t.toArray(o, d.color), d.useColorTemperature) {
                var f = d.colorTemperatureRGB;
                o[0] *= f.x, o[1] *= f.y, o[2] *= f.z;
              }

              i.pipelineSceneData.isHDR ? o[3] = d.luminance * i.pipelineSceneData.fpScale * this._lightMeterScale : o[3] = d.luminance * h * this._lightMeterScale, this._lightBufferData.set(o, u * c + 1 * _), o[0] = d.size, o[1] = d.range, o[2] = 0, this._lightBufferData.set(o, u * c + 2 * _);
            }
          }

          for (var p = 0; p < s.length && u < this._maxDeferredLights; p++, ++u) {
            var g = s[p];

            if (le.set(a, g.position.x, g.position.y, g.position.z, g.range), fe.sphereFrustum(a, e.frustum)) {
              if (t.toArray(o, g.position), o[3] = 1, this._lightBufferData.set(o, u * c + 0 * _), t.toArray(o, g.color), g.useColorTemperature) {
                var v = g.colorTemperatureRGB;
                o[0] *= v.x, o[1] *= v.y, o[2] *= v.z;
              }

              i.pipelineSceneData.isHDR ? o[3] = g.luminance * i.pipelineSceneData.fpScale * this._lightMeterScale : o[3] = g.luminance * h * this._lightMeterScale, this._lightBufferData.set(o, u * c + 1 * _), o[0] = g.size, o[1] = g.range, o[2] = g.spotAngle, this._lightBufferData.set(o, u * c + 2 * _), t.toArray(o, g.direction), this._lightBufferData.set(o, u * c + 3 * _);
            }
          }

          var m = 3 * _ + 3;
          this._lightBufferData.set([u], m), n.updateBuffer(this._deferredLitsBufs, this._lightBufferData);
        }, r.activate = function (t, i) {
          e.prototype.activate.call(this, t, i);

          for (var n = t.device, r = 0; r < this.renderQueues.length; r++) {
            this._renderQueues[r] = ws(this.renderQueues[r]);
          }

          var s = 16 * Float32Array.BYTES_PER_ELEMENT * this._maxDeferredLights;
          s = Math.ceil(s / n.capabilities.uboOffsetAlignment) * n.capabilities.uboOffsetAlignment, this._deferredLitsBufs = n.createBuffer(new P(L.UNIFORM | L.TRANSFER_DST, B.HOST | B.DEVICE, s, n.capabilities.uboOffsetAlignment));
          var a = n.createBuffer(new ze(this._deferredLitsBufs, 0, s));
          this._lightBufferData = new Float32Array(s / Float32Array.BYTES_PER_ELEMENT);
          var o = new ye($e.bindings);
          this._descriptorSetLayout = n.createDescriptorSetLayout(o), this._descriptorSet = n.createDescriptorSet(new R(this._descriptorSetLayout)), this._descriptorSet.bindBuffer(Ge.BINDING, a), this._planarQueue = new ea(this._pipeline), this._deferredMaterial && (t.pipelineSceneData.deferredLightingMaterial = this._deferredMaterial);
        }, r.destroy = function () {
          var e;
          null === (e = this._deferredLitsBufs) || void 0 === e || e.destroy(), this._deferredLitsBufs = null, this._descriptorSet = null;
        }, r.render = function (e) {
          var t = this._pipeline,
              i = t.device,
              r = t.commandBuffers[0],
              s = t.pipelineSceneData,
              a = s.renderObjects;

          if (0 !== a.length) {
            if (this.gatherLights(e), this._descriptorSet.update(), this._planarQueue.gatherShadowPasses(e, r), r.bindDescriptorSet(Ue.LOCAL, this._descriptorSet, [0]), this._renderArea = t.generateRenderArea(e), e.clearFlag & n.COLOR) if (s.isHDR) {
              Is(yo[0], e.clearColor);
              var o = s.fpScale / e.exposure;
              yo[0].x *= o, yo[0].y *= o, yo[0].z *= o;
            } else yo[0].x = e.clearColor.x, yo[0].y = e.clearColor.y, yo[0].z = e.clearColor.z;
            yo[0].w = 0;
            var h = t.getDeferredRenderData(e).lightingFrameBuffer,
                u = h.renderPass;
            r.beginRenderPass(u, h, this._renderArea, yo, e.clearDepth, e.clearStencil), r.bindDescriptorSet(Ue.GLOBAL, t.descriptorSet);

            var c = s.deferredLightingMaterial.passes[0],
                _ = c.getShaderVariant();

            r.bindDescriptorSet(Ue.MATERIAL, c.descriptorSet);
            var l = t.quadIAOffscreen,
                d = null;
            null != c && null != _ && null != l && (d = ds.getOrCreatePipelineState(i, c, _, u, l)), null != d && (r.bindPipelineState(d), r.bindInputAssembler(l), r.draw(l)), this._renderQueues.forEach(ys);

            for (var f = 0, p = 0, g = 0, v = 0; v < a.length; ++v) {
              var m = a[v],
                  S = m.model.subModels;

              for (f = 0; f < S.length; ++f) {
                var E = S[f].passes;

                for (p = 0; p < E.length; ++p) {
                  var T = E[p];
                  if (T.phase === this._phaseID || T.phase === this._defPhaseID) for (g = 0; g < this._renderQueues.length; g++) {
                    this._renderQueues[g].insertRenderPass(m, f, p);
                  }
                }
              }
            }

            this._renderQueues.forEach(Os);

            for (var w = 0; w < this._renderQueues.length; w++) {
              this._renderQueues[w].recordCommandBuffer(i, u, r);
            }

            this._planarQueue.recordCommandBuffer(i, u, r), r.endRenderPass();
          }
        }, i;
      }(Ki), Xa.initInfo = {
        name: "LightingStage",
        priority: Ta.LIGHTING,
        tag: 0
      }, Qa = oe((Ya = ja).prototype, "_deferredMaterial", [za, ue, ka], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), qa = oe(Ya.prototype, "renderQueues", [Va, ue, Wa], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), Ka = Ya)) || Ka)),
          Io = e("N", ae("LightingFlow")(($a = Ja = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          if (e.prototype.initialize.call(this, t), 0 === this._stages.length) {
            var i = new Oo();
            i.initialize(Oo.initInfo), this._stages.push(i);
          }

          return !0;
        }, i.activate = function (t) {
          e.prototype.activate.call(this, t);
        }, i.render = function (t) {
          e.prototype.render.call(this, t);
        }, i.destroy = function () {
          e.prototype.destroy.call(this);
        }, t;
      }(Yi), Ja.initInfo = {
        name: et,
        priority: wa.LIGHTING,
        stages: []
      }, Za = $a)) || Za),
          Ao = function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }

        $(t, e);
        var i = t.prototype;
        return i.onGlobalPipelineStateChanged = function () {
          this.updateDeferredPassInfo();
        }, i.initPipelinePassInfo = function () {
          var e = new ne();
          e._uuid = "builtin-deferred-material", e.initialize({
            effectName: "deferred-lighting"
          });

          for (var t = 0; t < e.passes.length; ++t) {
            e.passes[t].tryCompile();
          }

          this._deferredLightingMaterial = e;
          var i = new ne();
          i._uuid = "builtin-post-process-material", i.initialize({
            effectName: "post-process"
          });

          for (var n = 0; n < i.passes.length; ++n) {
            i.passes[n].tryCompile();
          }

          this._deferredPostMaterial = i, this.updateDeferredPassInfo();
        }, i.activate = function (t, i) {
          return e.prototype.activate.call(this, t, i), this.initPipelinePassInfo(), !0;
        }, i.updateDeferredPassInfo = function () {
          this.updateDeferredLightPass(), this.updateDeferredPostPass();
        }, i.updateDeferredLightPass = function () {
          if (this._deferredLightingMaterial) {
            var e = this._deferredLightingMaterial.passes[0];
            e.beginChangeStatesSilently(), e.tryCompile(), e.endChangeStatesSilently();
          }
        }, i.updateDeferredPostPass = function () {
          if (this.deferredPostMaterial) {
            var e = this.deferredPostMaterial.passes[0];
            e.beginChangeStatesSilently(), e.tryCompile(), e.endChangeStatesSilently();
          }
        }, c(t, [{
          key: "deferredLightingMaterial",
          get: function get() {
            return this._deferredLightingMaterial;
          },
          set: function set(e) {
            this._deferredLightingMaterial !== e && e && (this._deferredLightingMaterial = e, this.updateDeferredPassInfo());
          }
        }, {
          key: "deferredPostMaterial",
          get: function get() {
            return this._deferredPostMaterial;
          },
          set: function set(e) {
            this._deferredPostMaterial !== e && e && (this._deferredPostMaterial = e, this.updateDeferredPassInfo());
          }
        }]), t;
      }(Ca),
          bo = [O.POINT, O.POINT, O.NONE, I.CLAMP, I.CLAMP, I.CLAMP],
          Fo = A(bo),
          Ro = function Ro() {
        this.quadIB = null, this.quadVB = null, this.quadIA = null;
      },
          Do = function Do() {
        this.gbufferFrameBuffer = null, this.gbufferRenderTargets = [], this.lightingFrameBuffer = null, this.lightingRenderTargets = [], this.depthTex = null;
      },
          No = (e("H", (eo = ae("DeferredPipeline"), to = _e([ps]), io = ce(), eo((ao = function (e) {
        function t() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (t = e.call.apply(e, [this].concat(n)) || this)._quadIB = null, t._quadVBOnscreen = null, t._quadVBOffscreen = null, t._quadIAOnscreen = null, t._quadIAOffscreen = null, t._deferredRenderData = null, t._gbufferRenderPass = null, t._lightingRenderPass = null, t._width = 0, t._height = 0, t._lastUsedRenderArea = new Ae(), he(t, "renderTextures", so, ie(t)), t._renderPasses = new Map(), t;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          if (e.prototype.initialize.call(this, t), 0 === this._flows.length) {
            var i = new Ba();
            i.initialize(Ba.initInfo), this._flows.push(i);
            var n = new wo();
            n.initialize(wo.initInfo), this._flows.push(n);
            var r = new Io();
            r.initialize(Io.initInfo), this._flows.push(r);
          }

          return !0;
        }, i.activate = function () {
          return this._macros = {
            CC_PIPELINE_TYPE: 1
          }, this._pipelineSceneData = new Ao(), !(!e.prototype.activate.call(this) || !this._activeRenderer() && (D(2402), 1));
        }, i.render = function (e) {
          if (0 !== e.length) {
            this._commandBuffers[0].begin(), this._pipelineUBO.updateGlobalUBO();

            for (var t = 0; t < e.length; t++) {
              var i = e[t];

              if (i.scene) {
                Tn(this, i), this._pipelineUBO.updateCameraUBO(i);

                for (var n = 0; n < this._flows.length; n++) {
                  this._flows[n].render(i);
                }
              }
            }

            this._commandBuffers[0].end(), this._device.queue.submit(this._commandBuffers);
          }
        }, i.getRenderPass = function (e) {
          var t = this._renderPasses.get(e);

          if (t) return t;
          var i = this.device,
              r = new Ke(),
              s = new Ye();
          r.format = i.colorFormat, s.format = i.depthStencilFormat, s.stencilStoreOp = De.DISCARD, s.depthStoreOp = De.DISCARD, e & n.COLOR || (e & Kt ? r.loadOp = Ne.DISCARD : (r.loadOp = Ne.LOAD, r.beginAccesses = [Pe.PRESENT])), (e & n.DEPTH_STENCIL) !== n.DEPTH_STENCIL && (e & n.DEPTH || (s.depthLoadOp = Ne.LOAD), e & n.STENCIL || (s.stencilLoadOp = Ne.LOAD), s.beginAccesses = [Pe.DEPTH_STENCIL_ATTACHMENT_WRITE]);
          var a = new Qe([r], s);
          return t = i.createRenderPass(a), this._renderPasses.set(e, t), t;
        }, i.getDeferredRenderData = function () {
          return this._deferredRenderData || this._generateDeferredRenderData(), this._deferredRenderData;
        }, i._activeRenderer = function () {
          var e = this.device;

          this._commandBuffers.push(e.commandBuffer);

          var t = b.getSampler(e, Fo);
          this._descriptorSet.bindSampler(Se, t), this._descriptorSet.bindTexture(Se, k.get("default-texture").getGFXTexture()), this._descriptorSet.bindSampler(ke, t), this._descriptorSet.bindTexture(ke, k.get("default-texture").getGFXTexture()), this._descriptorSet.update();
          var i = new Ro();
          if (!(i = this.createQuadInputAssembler(s.IDENTITY)).quadIB || !i.quadVB || !i.quadIA) return !1;
          this._quadIB = i.quadIB, this._quadVBOffscreen = i.quadVB, this._quadIAOffscreen = i.quadIA;
          var n = this.createQuadInputAssembler(e.surfaceTransform);
          if (!n.quadIB || !n.quadVB || !n.quadIA) return !1;

          if (this._quadVBOnscreen = n.quadVB, this._quadIAOnscreen = n.quadIA, !this._gbufferRenderPass) {
            var r = new Ke();
            r.format = T.RGBA16F, r.loadOp = Ne.CLEAR, r.storeOp = De.STORE;
            var a = new Ke();
            a.format = T.RGBA16F, a.loadOp = Ne.CLEAR, a.storeOp = De.STORE;
            var o = new Ke();
            o.format = T.RGBA16F, o.loadOp = Ne.CLEAR, o.storeOp = De.STORE;
            var h = new Ke();
            h.format = T.RGBA16F, h.loadOp = Ne.CLEAR, h.storeOp = De.STORE;
            var u = new Ye();
            u.format = e.depthStencilFormat, u.depthLoadOp = Ne.CLEAR, u.depthStoreOp = De.STORE, u.stencilLoadOp = Ne.CLEAR, u.stencilStoreOp = De.STORE;
            var c = new Qe([r, a, o, h], u);
            this._gbufferRenderPass = e.createRenderPass(c);
          }

          if (!this._lightingRenderPass) {
            var _ = new Ke();

            _.format = T.RGBA8, _.loadOp = Ne.CLEAR, _.storeOp = De.STORE, _.endAccesses = [Pe.COLOR_ATTACHMENT_WRITE];
            var l = new Ye();
            l.format = e.depthStencilFormat, l.depthLoadOp = Ne.LOAD, l.depthStoreOp = De.DISCARD, l.stencilLoadOp = Ne.LOAD, l.stencilStoreOp = De.DISCARD, l.beginAccesses = [Pe.DEPTH_STENCIL_ATTACHMENT_WRITE], l.endAccesses = [Pe.DEPTH_STENCIL_ATTACHMENT_WRITE];
            var d = new Qe([_], l);
            this._lightingRenderPass = e.createRenderPass(d);
          }

          return this._width = e.width, this._height = e.height, this._generateDeferredRenderData(), !0;
        }, i.destroyUBOs = function () {
          this._descriptorSet && (this._descriptorSet.getBuffer(ve.BINDING).destroy(), this._descriptorSet.getBuffer(pe.BINDING).destroy(), this._descriptorSet.getBuffer(me.BINDING).destroy(), this._descriptorSet.getSampler(Se).destroy(), this._descriptorSet.getSampler(ke).destroy(), this._descriptorSet.getTexture(Se).destroy(), this._descriptorSet.getTexture(ke).destroy());
        }, i.destroyDeferredData = function () {
          var e = this._deferredRenderData;

          if (e) {
            e.gbufferFrameBuffer && e.gbufferFrameBuffer.destroy(), e.lightingFrameBuffer && e.lightingFrameBuffer.destroy(), e.depthTex && e.depthTex.destroy();

            for (var t = 0; t < e.gbufferRenderTargets.length; t++) {
              e.gbufferRenderTargets[t].destroy();
            }

            e.gbufferRenderTargets.length = 0;

            for (var i = 0; i < e.lightingRenderTargets.length; i++) {
              e.lightingRenderTargets[i].destroy();
            }

            e.lightingRenderTargets.length = 0;
          }

          this._deferredRenderData = null;
        }, i.destroy = function () {
          this.destroyUBOs(), this.destroyQuadInputAssembler(), this.destroyDeferredData();

          for (var t = this._renderPasses.values(), i = t.next(); !i.done;) {
            i.value.destroy(), i = t.next();
          }

          return this._commandBuffers.length = 0, e.prototype.destroy.call(this);
        }, i.resize = function (e, t) {
          this._width === e && this._height === t || (this._width = e, this._height = t, this.destroyDeferredData(), this._generateDeferredRenderData());
        }, i.createQuadInputAssembler = function () {
          var e = new Ro(),
              t = 4 * Float32Array.BYTES_PER_ELEMENT,
              i = 4 * t,
              n = this._device.createBuffer(new P(L.VERTEX | L.TRANSFER_DST, B.HOST | B.DEVICE, i, t));

          if (!n) return e;

          var r = Uint8Array.BYTES_PER_ELEMENT,
              s = 6 * r,
              a = this._device.createBuffer(new P(L.INDEX | L.TRANSFER_DST, B.HOST | B.DEVICE, s, r));

          if (!a) return e;
          var o = new Uint8Array(6);
          o[0] = 0, o[1] = 1, o[2] = 2, o[3] = 1, o[4] = 3, o[5] = 2, a.update(o);
          var h = new Array(2);
          h[0] = new C("a_position", T.RG32F), h[1] = new C("a_texCoord", T.RG32F);

          var u = this._device.createInputAssembler(new M(h, [n], a));

          return e.quadIB = a, e.quadVB = n, e.quadIA = u, e;
        }, i.updateQuadVertexData = function (e) {
          if (this._lastUsedRenderArea !== e) {
            this._lastUsedRenderArea = e;
            var t = this.genQuadVertexData(s.IDENTITY, e);

            this._quadVBOffscreen.update(t);

            var i = this.genQuadVertexData(this.device.surfaceTransform, e);

            this._quadVBOnscreen.update(i);
          }
        }, i.genQuadVertexData = function (e, t) {
          var i = new Float32Array(16),
              n = t.x / this.device.width,
              r = (t.x + t.width) / this.device.width,
              a = t.y / this.device.height,
              o = (t.y + t.height) / this.device.height;

          if (this.device.capabilities.screenSpaceSignY > 0) {
            var h = o;
            o = a, a = h;
          }

          var u = 0;

          switch (e) {
            case s.IDENTITY:
              u = 0, i[u++] = -1, i[u++] = -1, i[u++] = n, i[u++] = o, i[u++] = 1, i[u++] = -1, i[u++] = r, i[u++] = o, i[u++] = -1, i[u++] = 1, i[u++] = n, i[u++] = a, i[u++] = 1, i[u++] = 1, i[u++] = r, i[u++] = a;
              break;

            case s.ROTATE_90:
              u = 0, i[u++] = -1, i[u++] = -1, i[u++] = r, i[u++] = o, i[u++] = 1, i[u++] = -1, i[u++] = r, i[u++] = a, i[u++] = -1, i[u++] = 1, i[u++] = n, i[u++] = o, i[u++] = 1, i[u++] = 1, i[u++] = n, i[u++] = a;
              break;

            case s.ROTATE_180:
              u = 0, i[u++] = -1, i[u++] = -1, i[u++] = n, i[u++] = a, i[u++] = 1, i[u++] = -1, i[u++] = r, i[u++] = a, i[u++] = -1, i[u++] = 1, i[u++] = n, i[u++] = o, i[u++] = 1, i[u++] = 1, i[u++] = r, i[u++] = o;
              break;

            case s.ROTATE_270:
              u = 0, i[u++] = -1, i[u++] = -1, i[u++] = n, i[u++] = a, i[u++] = 1, i[u++] = -1, i[u++] = n, i[u++] = o, i[u++] = -1, i[u++] = 1, i[u++] = r, i[u++] = a, i[u++] = 1, i[u++] = 1, i[u++] = r, i[u++] = o;
          }

          return i;
        }, i.destroyQuadInputAssembler = function () {
          this._quadIB && (this._quadIB.destroy(), this._quadIB = null), this._quadVBOnscreen && (this._quadVBOnscreen.destroy(), this._quadVBOnscreen = null), this._quadVBOffscreen && (this._quadVBOffscreen.destroy(), this._quadVBOffscreen = null), this._quadIAOnscreen && (this._quadIAOnscreen.destroy(), this._quadIAOnscreen = null), this._quadIAOffscreen && (this._quadIAOffscreen.destroy(), this._quadIAOffscreen = null);
        }, i._generateDeferredRenderData = function () {
          var e = this.device,
              t = this._deferredRenderData = new Do();
          t.gbufferRenderTargets.push(e.createTexture(new m(S.TEX2D, E.COLOR_ATTACHMENT | E.SAMPLED, T.RGBA16F, this._width, this._height))), t.gbufferRenderTargets.push(e.createTexture(new m(S.TEX2D, E.COLOR_ATTACHMENT | E.SAMPLED, T.RGBA16F, this._width, this._height))), t.gbufferRenderTargets.push(e.createTexture(new m(S.TEX2D, E.COLOR_ATTACHMENT | E.SAMPLED, T.RGBA16F, this._width, this._height))), t.gbufferRenderTargets.push(e.createTexture(new m(S.TEX2D, E.COLOR_ATTACHMENT | E.SAMPLED, T.RGBA16F, this._width, this._height))), t.depthTex = e.createTexture(new m(S.TEX2D, E.DEPTH_STENCIL_ATTACHMENT, e.depthStencilFormat, this._width, this._height)), t.gbufferFrameBuffer = e.createFramebuffer(new qe(this._gbufferRenderPass, t.gbufferRenderTargets, t.depthTex)), t.lightingRenderTargets.push(e.createTexture(new m(S.TEX2D, E.COLOR_ATTACHMENT | E.SAMPLED, T.RGBA8, this._width, this._height))), t.lightingFrameBuffer = e.createFramebuffer(new qe(this._lightingRenderPass, t.lightingRenderTargets, t.depthTex)), this._descriptorSet.bindTexture(tt, t.gbufferFrameBuffer.colorTextures[0]), this._descriptorSet.bindTexture(it, t.gbufferFrameBuffer.colorTextures[1]), this._descriptorSet.bindTexture(nt, t.gbufferFrameBuffer.colorTextures[2]), this._descriptorSet.bindTexture(rt, t.gbufferFrameBuffer.colorTextures[3]), this._descriptorSet.bindTexture(st, t.lightingFrameBuffer.colorTextures[0]);
          var i = b.getSampler(e, Fo);
          this._descriptorSet.bindSampler(tt, i), this._descriptorSet.bindSampler(it, i), this._descriptorSet.bindSampler(nt, i), this._descriptorSet.bindSampler(rt, i), this._descriptorSet.bindSampler(st, i);
        }, c(t, [{
          key: "quadIAOnscreen",
          get: function get() {
            return this._quadIAOnscreen;
          }
        }, {
          key: "quadIAOffscreen",
          get: function get() {
            return this._quadIAOffscreen;
          }
        }]), t;
      }(zn), so = oe((ro = ao).prototype, "renderTextures", [to, ue, io], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), no = ro)) || no)), [new l(0, 0, 0, 1)]),
          Po = (e("Q", (oo = ae("PostprocessStage"), ho = _e(ne), uo = ce(), co = _e([ms]), _o = ce(), oo((mo = vo = function (e) {
        function t() {
          var t;
          return t = e.call(this) || this, he(t, "_postProcessMaterial", po, ie(t)), he(t, "renderQueues", go, ie(t)), t._renderArea = new Ae(), t._uiPhase = void 0, t._uiPhase = new ta(), t;
        }

        $(t, e);
        var i = t.prototype;
        return i.initialize = function (t) {
          return e.prototype.initialize.call(this, t), !0;
        }, i.activate = function (t, i) {
          e.prototype.activate.call(this, t, i), this._uiPhase.activate(t), this._postProcessMaterial && (t.pipelineSceneData.deferredPostMaterial = this._postProcessMaterial);
        }, i.destroy = function () {}, i.render = function (e) {
          var t = this._pipeline,
              i = t.device,
              r = t.pipelineSceneData,
              s = t.commandBuffers[0];
          t.pipelineUBO.updateCameraUBO(e);
          var a = e.viewport;
          this._renderArea.x = a.x * e.width, this._renderArea.y = a.y * e.height, this._renderArea.width = a.width * e.width * r.shadingScale, this._renderArea.height = a.height * e.height * r.shadingScale;
          var o = e.window.framebuffer,
              h = o.colorTextures[0] ? o.renderPass : t.getRenderPass(e.clearFlag);
          e.clearFlag & n.COLOR && (No[0].x = e.clearColor.x, No[0].y = e.clearColor.y, No[0].z = e.clearColor.z), No[0].w = e.clearColor.w, s.beginRenderPass(h, o, this._renderArea, No, e.clearDepth, e.clearStencil), s.bindDescriptorSet(Ue.GLOBAL, t.descriptorSet);
          var u = r.deferredPostMaterial.passes[0],
              c = u.getShaderVariant();
          s.bindDescriptorSet(Ue.MATERIAL, u.descriptorSet);

          var _ = e.window.hasOffScreenAttachments ? t.quadIAOffscreen : t.quadIAOnscreen,
              l = null;

          null != u && null != c && null != _ && (l = ds.getOrCreatePipelineState(i, u, c, h, _));
          var d = t.pipelineSceneData.renderObjects;
          null != l && d.length > 0 && (s.bindPipelineState(l), s.bindInputAssembler(_), s.draw(_)), this._uiPhase.render(e, h), s.endRenderPass();
        }, t;
      }(Ki), vo.initInfo = {
        name: "PostprocessStage",
        priority: Ta.POSTPROCESS,
        tag: 0
      }, po = oe((fo = mo).prototype, "_postProcessMaterial", [ho, ue, uo], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return null;
        }
      }), go = oe(fo.prototype, "renderQueues", [co, ue, _o], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), lo = fo)) || lo)), function () {
        function e() {
          this.support = void 0, this._isStarted = !1, this._accelMode = "normal", this._eventTarget = new at(), this._didAccelerateFunc = void 0, this.support = !0, this._didAccelerateFunc = this._didAccelerate.bind(this);
        }

        var t = e.prototype;
        return t._registerEvent = function () {
          ot.onAccelerometerChange(this._didAccelerateFunc);
        }, t._unregisterEvent = function () {
          ot.offAccelerometerChange(this._didAccelerateFunc);
        }, t._didAccelerate = function (e) {
          var t = {
            type: ht.DEVICEMOTION,
            x: e.x,
            y: e.y,
            z: e.z,
            timestamp: performance.now()
          };

          this._eventTarget.emit(ht.DEVICEMOTION, t);
        }, t.start = function () {
          var e = this;
          this._registerEvent(), ot.startAccelerometer({
            interval: this._accelMode,
            success: function success() {
              e._isStarted = !0;
            }
          });
        }, t.stop = function () {
          var e = this;
          ot.stopAccelerometer({
            success: function success() {
              e._isStarted = !1;
            },
            fail: function fail() {
              console.error("failed to stop accelerometer");
            }
          }), this._unregisterEvent();
        }, t.setInterval = function (e) {
          this._accelMode = e >= 200 ? "normal" : e >= 60 ? "ui" : "game", this._isStarted && (this.stop(), this.start());
        }, t.onChange = function (e) {
          this._eventTarget.on(ht.DEVICEMOTION, e);
        }, e;
      }()),
          Lo = function () {
        function e() {
          this.support = void 0, this.support = !0;
        }

        var t = e.prototype;
        return t.show = function () {
          throw new Error("Method not implemented.");
        }, t.hide = function () {
          throw new Error("Method not implemented.");
        }, t.onChange = function () {
          throw new Error("Method not implemented.");
        }, t.onComplete = function () {
          throw new Error("Method not implemented.");
        }, t.offChange = function () {
          throw new Error("Method not implemented.");
        }, t.offComplete = function () {
          throw new Error("Method not implemented.");
        }, e;
      }();

      !function (e) {
        e[e.NONE = 0] = "NONE", e[e.BACKSPACE = 8] = "BACKSPACE", e[e.TAB = 9] = "TAB", e[e.ENTER = 13] = "ENTER", e[e.SHIFT_LEFT = 16] = "SHIFT_LEFT", e[e.CTRL_LEFT = 17] = "CTRL_LEFT", e[e.ALT_LEFT = 18] = "ALT_LEFT", e[e.PAUSE = 19] = "PAUSE", e[e.CAPS_LOCK = 20] = "CAPS_LOCK", e[e.ESCAPE = 27] = "ESCAPE", e[e.SPACE = 32] = "SPACE", e[e.PAGE_UP = 33] = "PAGE_UP", e[e.PAGE_DOWN = 34] = "PAGE_DOWN", e[e.END = 35] = "END", e[e.HOME = 36] = "HOME", e[e.ARROW_LEFT = 37] = "ARROW_LEFT", e[e.ARROW_UP = 38] = "ARROW_UP", e[e.ARROW_RIGHT = 39] = "ARROW_RIGHT", e[e.ARROW_DOWN = 40] = "ARROW_DOWN", e[e.INSERT = 45] = "INSERT", e[e.DELETE = 46] = "DELETE", e[e.DIGIT_0 = 48] = "DIGIT_0", e[e.DIGIT_1 = 49] = "DIGIT_1", e[e.DIGIT_2 = 50] = "DIGIT_2", e[e.DIGIT_3 = 51] = "DIGIT_3", e[e.DIGIT_4 = 52] = "DIGIT_4", e[e.DIGIT_5 = 53] = "DIGIT_5", e[e.DIGIT_6 = 54] = "DIGIT_6", e[e.DIGIT_7 = 55] = "DIGIT_7", e[e.DIGIT_8 = 56] = "DIGIT_8", e[e.DIGIT_9 = 57] = "DIGIT_9", e[e.KEY_A = 65] = "KEY_A", e[e.KEY_B = 66] = "KEY_B", e[e.KEY_C = 67] = "KEY_C", e[e.KEY_D = 68] = "KEY_D", e[e.KEY_E = 69] = "KEY_E", e[e.KEY_F = 70] = "KEY_F", e[e.KEY_G = 71] = "KEY_G", e[e.KEY_H = 72] = "KEY_H", e[e.KEY_I = 73] = "KEY_I", e[e.KEY_J = 74] = "KEY_J", e[e.KEY_K = 75] = "KEY_K", e[e.KEY_L = 76] = "KEY_L", e[e.KEY_M = 77] = "KEY_M", e[e.KEY_N = 78] = "KEY_N", e[e.KEY_O = 79] = "KEY_O", e[e.KEY_P = 80] = "KEY_P", e[e.KEY_Q = 81] = "KEY_Q", e[e.KEY_R = 82] = "KEY_R", e[e.KEY_S = 83] = "KEY_S", e[e.KEY_T = 84] = "KEY_T", e[e.KEY_U = 85] = "KEY_U", e[e.KEY_V = 86] = "KEY_V", e[e.KEY_W = 87] = "KEY_W", e[e.KEY_X = 88] = "KEY_X", e[e.KEY_Y = 89] = "KEY_Y", e[e.KEY_Z = 90] = "KEY_Z", e[e.NUM_0 = 96] = "NUM_0", e[e.NUM_1 = 97] = "NUM_1", e[e.NUM_2 = 98] = "NUM_2", e[e.NUM_3 = 99] = "NUM_3", e[e.NUM_4 = 100] = "NUM_4", e[e.NUM_5 = 101] = "NUM_5", e[e.NUM_6 = 102] = "NUM_6", e[e.NUM_7 = 103] = "NUM_7", e[e.NUM_8 = 104] = "NUM_8", e[e.NUM_9 = 105] = "NUM_9", e[e.NUM_MULTIPLY = 106] = "NUM_MULTIPLY", e[e.NUM_PLUS = 107] = "NUM_PLUS", e[e.NUM_SUBTRACT = 109] = "NUM_SUBTRACT", e[e.NUM_DECIMAL = 110] = "NUM_DECIMAL", e[e.NUM_DIVIDE = 111] = "NUM_DIVIDE", e[e.F1 = 112] = "F1", e[e.F2 = 113] = "F2", e[e.F3 = 114] = "F3", e[e.F4 = 115] = "F4", e[e.F5 = 116] = "F5", e[e.F6 = 117] = "F6", e[e.F7 = 118] = "F7", e[e.F8 = 119] = "F8", e[e.F9 = 120] = "F9", e[e.F10 = 121] = "F10", e[e.F11 = 122] = "F11", e[e.F12 = 123] = "F12", e[e.NUM_LOCK = 144] = "NUM_LOCK", e[e.SCROLL_LOCK = 145] = "SCROLL_LOCK", e[e.SEMICOLON = 186] = "SEMICOLON", e[e.EQUAL = 187] = "EQUAL", e[e.COMMA = 188] = "COMMA", e[e.DASH = 189] = "DASH", e[e.PERIOD = 190] = "PERIOD", e[e.SLASH = 191] = "SLASH", e[e.BACK_QUOTE = 192] = "BACK_QUOTE", e[e.BRACKET_LEFT = 219] = "BRACKET_LEFT", e[e.BACKSLASH = 220] = "BACKSLASH", e[e.BRACKET_RIGHT = 221] = "BRACKET_RIGHT", e[e.QUOTE = 222] = "QUOTE", e[e.SHIFT_RIGHT = 2e3] = "SHIFT_RIGHT", e[e.CTRL_RIGHT = 2001] = "CTRL_RIGHT", e[e.ALT_RIGHT = 2002] = "ALT_RIGHT", e[e.NUM_ENTER = 2003] = "NUM_ENTER";
      }(So || (So = e("K", {})));
      var Bo = {
        Backspace: So.BACKSPACE,
        Tab: So.TAB,
        Enter: So.ENTER,
        ShiftLeft: So.SHIFT_LEFT,
        ControlLeft: So.CTRL_LEFT,
        AltLeft: So.ALT_LEFT,
        ShiftRight: So.SHIFT_RIGHT,
        ControlRight: So.CTRL_RIGHT,
        AltRight: So.ALT_RIGHT,
        Pause: So.PAUSE,
        CapsLock: So.CAPS_LOCK,
        Escape: So.ESCAPE,
        Space: So.SPACE,
        PageUp: So.PAGE_UP,
        PageDown: So.PAGE_DOWN,
        End: So.END,
        Home: So.HOME,
        ArrowLeft: So.ARROW_LEFT,
        ArrowUp: So.ARROW_UP,
        ArrowRight: So.ARROW_RIGHT,
        ArrowDown: So.ARROW_DOWN,
        Insert: So.INSERT,
        Delete: So.DELETE,
        Digit0: So.DIGIT_0,
        Digit1: So.DIGIT_1,
        Digit2: So.DIGIT_2,
        Digit3: So.DIGIT_3,
        Digit4: So.DIGIT_4,
        Digit5: So.DIGIT_5,
        Digit6: So.DIGIT_6,
        Digit7: So.DIGIT_7,
        Digit8: So.DIGIT_8,
        Digit9: So.DIGIT_9,
        KeyA: So.KEY_A,
        KeyB: So.KEY_B,
        KeyC: So.KEY_C,
        KeyD: So.KEY_D,
        KeyE: So.KEY_E,
        KeyF: So.KEY_F,
        KeyG: So.KEY_G,
        KeyH: So.KEY_H,
        KeyI: So.KEY_I,
        KeyJ: So.KEY_J,
        KeyK: So.KEY_K,
        KeyL: So.KEY_L,
        KeyM: So.KEY_M,
        KeyN: So.KEY_N,
        KeyO: So.KEY_O,
        KeyP: So.KEY_P,
        KeyQ: So.KEY_Q,
        KeyR: So.KEY_R,
        KeyS: So.KEY_S,
        KeyT: So.KEY_T,
        KeyU: So.KEY_U,
        KeyV: So.KEY_V,
        KeyW: So.KEY_W,
        KeyX: So.KEY_X,
        KeyY: So.KEY_Y,
        KeyZ: So.KEY_Z,
        Numpad0: So.NUM_0,
        Numpad1: So.NUM_1,
        Numpad2: So.NUM_2,
        Numpad3: So.NUM_3,
        Numpad4: So.NUM_4,
        Numpad5: So.NUM_5,
        Numpad6: So.NUM_6,
        Numpad7: So.NUM_7,
        Numpad8: So.NUM_8,
        Numpad9: So.NUM_9,
        NumpadMultiply: So.NUM_MULTIPLY,
        NumpadAdd: So.NUM_PLUS,
        NumpadSubtract: So.NUM_SUBTRACT,
        NumpadDecimal: So.NUM_DECIMAL,
        NumpadDivide: So.NUM_DIVIDE,
        NumpadEnter: So.NUM_ENTER,
        F1: So.F1,
        F2: So.F2,
        F3: So.F3,
        F4: So.F4,
        F5: So.F5,
        F6: So.F6,
        F7: So.F7,
        F8: So.F8,
        F9: So.F9,
        F10: So.F10,
        F11: So.F11,
        F12: So.F12,
        NumLock: So.NUM_LOCK,
        ScrollLock: So.SCROLL_LOCK,
        Semicolon: So.SEMICOLON,
        Equal: So.EQUAL,
        Comma: So.COMMA,
        Minus: So.DASH,
        Period: So.PERIOD,
        Slash: So.SLASH,
        Backquote: So.BACK_QUOTE,
        BracketLeft: So.BRACKET_LEFT,
        Backslash: So.BACKSLASH,
        BracketRight: So.BRACKET_RIGHT,
        Quote: So.QUOTE
      };

      function Co(e) {
        return Bo[e] || So.NONE;
      }

      var Mo = function () {
        function e() {
          this.support = void 0, this._eventTarget = new at(), this._keyStateMap = {}, this.support = "object" == (0, _typeof2.default)(ot.wx) && void 0 !== ot.wx.onKeyDown, this.support && this._registerEvent();
        }

        var t = e.prototype;
        return t._registerEvent = function () {
          var e,
              t,
              i,
              n,
              r = this;
          null === (e = ot.wx) || void 0 === e || null === (t = e.onKeyDown) || void 0 === t || t.call(e, function (e) {
            var t = Co(e.code);

            if (!r._keyStateMap[t]) {
              var i = r._getInputEvent(e, ht.KEY_DOWN);

              r._eventTarget.emit(ht.KEY_DOWN, i);
            }

            var n = r._getInputEvent(e, ht.KEY_DOWN);

            r._eventTarget.emit(ht.KEY_DOWN, n), r._keyStateMap[t] = !0;
          }), null === (i = ot.wx) || void 0 === i || null === (n = i.onKeyUp) || void 0 === n || n.call(i, function (e) {
            var t = Co(e.code),
                i = {
              code: t,
              type: ht.KEY_UP,
              timestamp: performance.now()
            };
            r._keyStateMap[t] = !1, r._eventTarget.emit(ht.KEY_UP, i);
          });
        }, t._getInputEvent = function (e, t) {
          return {
            type: t,
            code: Co(e.code),
            timestamp: performance.now()
          };
        }, t.onDown = function (e) {
          this._eventTarget.on("keypress", e);
        }, t.onPressing = function (e) {
          this._eventTarget.on(ht.KEY_DOWN, e);
        }, t.onUp = function (e) {
          this._eventTarget.on(ht.KEY_UP, e);
        }, e;
      }(),
          xo = function () {
        function e() {
          this.support = void 0, this._eventTarget = new at(), this._isPressed = !1, this._preMousePos = new de(), this.support = "object" == (0, _typeof2.default)(ot.wx) && void 0 !== ot.wx.onMouseDown, this.support && this._registerEvent();
        }

        var t = e.prototype;
        return t._registerEvent = function () {
          var e,
              t,
              i,
              n,
              r,
              s,
              a,
              o,
              h = this;
          null === (e = ot.wx) || void 0 === e || null === (t = e.onMouseDown) || void 0 === t || t.call(e, this._createCallback(ht.MOUSE_DOWN)), null === (i = ot.wx) || void 0 === i || null === (n = i.onMouseMove) || void 0 === n || n.call(i, this._createCallback(ht.MOUSE_MOVE)), null === (r = ot.wx) || void 0 === r || null === (s = r.onMouseUp) || void 0 === s || s.call(r, this._createCallback(ht.MOUSE_UP)), null === (a = ot.wx) || void 0 === a || null === (o = a.onWheel) || void 0 === o || o.call(a, function (e) {
            var t = ot.getSystemInfoSync(),
                i = {
              type: ht.MOUSE_WHEEL,
              x: e.x,
              y: t.screenHeight - e.y,
              button: e.button,
              deltaX: e.deltaX,
              deltaY: e.deltaY,
              timestamp: performance.now()
            };

            h._eventTarget.emit(ht.MOUSE_WHEEL, i);
          });
        }, t._createCallback = function (e) {
          var t = this;
          return function (i) {
            var n = ot.getSystemInfoSync(),
                r = i.button;

            switch (e) {
              case ht.MOUSE_DOWN:
                t._isPressed = !0;
                break;

              case ht.MOUSE_UP:
                t._isPressed = !1;
                break;

              case ht.MOUSE_MOVE:
                t._isPressed || (r = -1);
            }

            var s = i.x,
                a = n.screenHeight - i.y,
                o = {
              type: e,
              x: s,
              y: a,
              movementX: s - t._preMousePos.x,
              movementY: t._preMousePos.y - a,
              button: r,
              timestamp: performance.now()
            };
            t._preMousePos.set(o.x, o.y), t._eventTarget.emit(e, o);
          };
        }, t.onDown = function (e) {
          this._eventTarget.on(ht.MOUSE_DOWN, e);
        }, t.onMove = function (e) {
          this._eventTarget.on(ht.MOUSE_MOVE, e);
        }, t.onUp = function (e) {
          this._eventTarget.on(ht.MOUSE_UP, e);
        }, t.onWheel = function (e) {
          this._eventTarget.on(ht.MOUSE_WHEEL, e);
        }, e;
      }(),
          Uo = function () {
        function e() {
          this.support = void 0, this._eventTarget = new at(), this.support = !0, this._registerEvent();
        }

        var t = e.prototype;
        return t._registerEvent = function () {
          ot.onTouchStart(this._createCallback(ht.TOUCH_START)), ot.onTouchMove(this._createCallback(ht.TOUCH_MOVE)), ot.onTouchEnd(this._createCallback(ht.TOUCH_END)), ot.onTouchCancel(this._createCallback(ht.TOUCH_CANCEL));
        }, t._createCallback = function (e) {
          var t = this;
          return function (i) {
            for (var n = ot.getSystemInfoSync(), r = [], s = i.changedTouches.length, a = 0; a < s; ++a) {
              var o = i.changedTouches[a],
                  h = t._getLocation(o),
                  u = {
                identifier: o.identifier,
                x: h.x,
                y: n.windowHeight - h.y,
                force: o.force
              };

              r.push(u);
            }

            var c = {
              type: e,
              changedTouches: r,
              timestamp: performance.now()
            };

            t._eventTarget.emit(e, c);
          };
        }, t._getLocation = function (e) {
          return new de(e.clientX, e.clientY);
        }, t.onStart = function (e) {
          this._eventTarget.on(ht.TOUCH_START, e);
        }, t.onMove = function (e) {
          this._eventTarget.on(ht.TOUCH_MOVE, e);
        }, t.onEnd = function (e) {
          this._eventTarget.on(ht.TOUCH_END, e);
        }, t.onCancel = function (e) {
          this._eventTarget.on(ht.TOUCH_CANCEL, e);
        }, e;
      }(),
          Ho = new (function () {
        function e() {
          this._touch = new Uo(), this._mouse = new xo(), this._keyboard = new Mo(), this._accelerometer = new Po(), this._inputBox = new Lo(), this._touchEvents = [], this._mouseEvents = [], this._keyboardEvents = [], this._accelerometerEvents = [], this._registerEvent();
        }

        var t = e.prototype;
        return t._registerEvent = function () {
          if (this._touch.support) {
            var e = this._touchEvents;
            this._touch.onStart(function (t) {
              e.push(t);
            }), this._touch.onMove(function (t) {
              e.push(t);
            }), this._touch.onEnd(function (t) {
              e.push(t);
            }), this._touch.onCancel(function (t) {
              e.push(t);
            });
          }

          if (this._mouse.support) {
            var t = this._mouseEvents;
            this._mouse.onDown(function (e) {
              t.push(e);
            }), this._mouse.onMove(function (e) {
              t.push(e);
            }), this._mouse.onUp(function (e) {
              t.push(e);
            }), this._mouse.onWheel(function (e) {
              t.push(e);
            });
          }

          if (this._keyboard.support) {
            var i = this._keyboardEvents;
            this._keyboard.onPressing(function (e) {
              i.push(e);
            }), this._keyboard.onUp(function (e) {
              i.push(e);
            });
          }

          if (this._accelerometer.support) {
            var n = this._accelerometerEvents;

            this._accelerometer.onChange(function (e) {
              n.push(e);
            });
          }
        }, t.startAccelerometer = function () {
          this._accelerometer.start();
        }, t.stopAccelerometer = function () {
          this._accelerometer.stop();
        }, t.setAccelerometerInterval = function (e) {
          this._accelerometer.setInterval(e);
        }, t.pollTouchEvents = function () {
          var e = ut.array.copy(this._touchEvents);
          return this._touchEvents.length = 0, e;
        }, t.pollMouseEvents = function () {
          var e = ut.array.copy(this._mouseEvents);
          return this._mouseEvents.length = 0, e;
        }, t.pollKeyboardEvents = function () {
          var e = ut.array.copy(this._keyboardEvents);
          return this._keyboardEvents.length = 0, e;
        }, t.pollAccelerometerEvents = function () {
          var e = ut.array.copy(this._accelerometerEvents);
          return this._accelerometerEvents.length = 0, e;
        }, e;
      }())(),
          Go = new de(),
          zo = e("E", function (e) {
        function t(i, n, r) {
          var s;
          return (s = e.call(this, i, n) || this).movementX = 0, s.movementY = 0, s._eventType = void 0, s._button = t.BUTTON_MISSING, s._x = 0, s._y = 0, s._prevX = 0, s._prevY = 0, s._scrollX = 0, s._scrollY = 0, s._eventType = i, r && (s._prevX = r.x, s._prevY = r.y), s;
        }

        $(t, e);
        var i = t.prototype;
        return i.setScrollData = function (e, t) {
          this._scrollX = e, this._scrollY = t;
        }, i.getScrollX = function () {
          return this._scrollX;
        }, i.getScrollY = function () {
          return this._scrollY;
        }, i.setLocation = function (e, t) {
          this._x = e, this._y = t;
        }, i.getLocation = function (e) {
          return e || (e = new de()), de.set(e, this._x, this._y), e;
        }, i.getLocationInView = function (e) {
          return e || (e = new de()), de.set(e, this._x, a.view._designResolutionSize.height - this._y), e;
        }, i.getUILocation = function (e) {
          return e || (e = new de()), de.set(e, this._x, this._y), a.view._convertPointWithScale(e), e;
        }, i.getPreviousLocation = function (e) {
          return e || (e = new de()), de.set(e, this._prevX, this._prevY), e;
        }, i.getUIPreviousLocation = function (e) {
          return e || (e = new de()), de.set(e, this._prevX, this._prevY), a.view._convertPointWithScale(e), e;
        }, i.getDelta = function (e) {
          return e || (e = new de()), de.set(e, this._x - this._prevX, this._y - this._prevY), e;
        }, i.getDeltaX = function () {
          return this._x - this._prevX;
        }, i.getDeltaY = function () {
          return this._y - this._prevY;
        }, i.getUIDelta = function (e) {
          return e || (e = new de()), de.set(e, (this._x - this._prevX) / a.view.getScaleX(), (this._y - this._prevY) / a.view.getScaleY()), e;
        }, i.getUIDeltaX = function () {
          return (this._x - this._prevX) / a.view.getScaleX();
        }, i.getUIDeltaY = function () {
          return (this._y - this._prevY) / a.view.getScaleY();
        }, i.setButton = function (e) {
          this._button = e;
        }, i.getButton = function () {
          return this._button;
        }, i.getLocationX = function () {
          return this._x;
        }, i.getLocationY = function () {
          return this._y;
        }, i.getUILocationX = function () {
          var e = a.view.getViewportRect();
          return (this._x - e.x) / a.view.getScaleX();
        }, i.getUILocationY = function () {
          var e = a.view.getViewportRect();
          return (this._y - e.y) / a.view.getScaleY();
        }, c(t, [{
          key: "eventType",
          get: function get() {
            return this._eventType;
          }
        }]), t;
      }(ct));

      zo.BUTTON_MISSING = -1, zo.BUTTON_LEFT = 0, zo.BUTTON_RIGHT = 2, zo.BUTTON_MIDDLE = 1, zo.BUTTON_4 = 3, zo.BUTTON_5 = 4, zo.BUTTON_6 = 5, zo.BUTTON_7 = 6, zo.BUTTON_8 = 7;
      var ko = e("r", function (e) {
        function t(t, i, n, r) {
          var s;
          return void 0 === r && (r = []), (s = e.call(this, n, i) || this).touch = null, s.simulate = !1, s._eventCode = void 0, s._touches = void 0, s._allTouches = void 0, s._eventCode = n, s._touches = t || [], s._allTouches = r, s;
        }

        $(t, e);
        var i = t.prototype;
        return i.getEventCode = function () {
          return this._eventCode;
        }, i.getTouches = function () {
          return this._touches;
        }, i.getAllTouches = function () {
          return this._allTouches;
        }, i.setLocation = function (e, t) {
          this.touch && this.touch.setTouchInfo(this.touch.getID(), e, t);
        }, i.getLocation = function (e) {
          return this.touch ? this.touch.getLocation(e) : new de();
        }, i.getUILocation = function (e) {
          return this.touch ? this.touch.getUILocation(e) : new de();
        }, i.getLocationInView = function (e) {
          return this.touch ? this.touch.getLocationInView(e) : new de();
        }, i.getPreviousLocation = function (e) {
          return this.touch ? this.touch.getPreviousLocation(e) : new de();
        }, i.getStartLocation = function (e) {
          return this.touch ? this.touch.getStartLocation(e) : new de();
        }, i.getUIStartLocation = function (e) {
          return this.touch ? this.touch.getUIStartLocation(e) : new de();
        }, i.getID = function () {
          return this.touch ? this.touch.getID() : null;
        }, i.getDelta = function (e) {
          return this.touch ? this.touch.getDelta(e) : new de();
        }, i.getUIDelta = function (e) {
          return this.touch ? this.touch.getUIDelta(e) : new de();
        }, i.getDeltaX = function () {
          return this.touch ? this.touch.getDelta(Go).x : 0;
        }, i.getDeltaY = function () {
          return this.touch ? this.touch.getDelta(Go).y : 0;
        }, i.getLocationX = function () {
          return this.touch ? this.touch.getLocationX() : 0;
        }, i.getLocationY = function () {
          return this.touch ? this.touch.getLocationY() : 0;
        }, t;
      }(ct));
      ko.MAX_TOUCHES = 5;
      var Vo = e("t", function (e) {
        function t(t, i) {
          var n;
          return (n = e.call(this, ht.DEVICEMOTION, i) || this).acc = void 0, n.acc = t, n;
        }

        return $(t, e), t;
      }(ct)),
          Wo = e("u", function (e) {
        function t(t, i, n) {
          var r;
          return "boolean" == typeof i && (i = i ? ht.KEY_DOWN : ht.KEY_UP), (r = e.call(this, i, n) || this).keyCode = void 0, r.rawEvent = void 0, r._isPressed = void 0, r._isPressed = i !== ht.KEY_UP, "number" == typeof t ? r.keyCode = t : (r.keyCode = t.keyCode, r.rawEvent = t), r;
        }

        return $(t, e), c(t, [{
          key: "isPressed",
          get: function get() {
            return this._isPressed;
          }
        }]), t;
      }(ct));
      ct.EventMouse = zo, ct.EventTouch = ko, ct.EventAcceleration = Vo, ct.EventKeyboard = Wo;
      var Ko = new de(),
          Yo = e("T", function () {
        function e(e, t, i) {
          void 0 === i && (i = 0), this._point = new de(), this._prevPoint = new de(), this._lastModified = 0, this._id = 0, this._startPoint = new de(), this._startPointCaptured = !1, this.setTouchInfo(i, e, t);
        }

        var t = e.prototype;
        return t.getLocation = function (e) {
          return e || (e = new de()), e.set(this._point.x, this._point.y), e;
        }, t.getLocationX = function () {
          return this._point.x;
        }, t.getLocationY = function () {
          return this._point.y;
        }, t.getUILocation = function (e) {
          return e || (e = new de()), e.set(this._point.x, this._point.y), a.view._convertPointWithScale(e), e;
        }, t.getUILocationX = function () {
          var e = a.view.getViewportRect();
          return (this._point.x - e.x) / a.view.getScaleX();
        }, t.getUILocationY = function () {
          var e = a.view.getViewportRect();
          return (this._point.y - e.y) / a.view.getScaleY();
        }, t.getPreviousLocation = function (e) {
          return e || (e = new de()), e.set(this._prevPoint.x, this._prevPoint.y), e;
        }, t.getUIPreviousLocation = function (e) {
          return e || (e = new de()), e.set(this._prevPoint.x, this._prevPoint.y), a.view._convertPointWithScale(e), e;
        }, t.getStartLocation = function (e) {
          return e || (e = new de()), e.set(this._startPoint.x, this._startPoint.y), e;
        }, t.getUIStartLocation = function (e) {
          return e || (e = new de()), e.set(this._startPoint.x, this._startPoint.y), a.view._convertPointWithScale(e), e;
        }, t.getDelta = function (e) {
          return e || (e = new de()), e.set(this._point), e.subtract(this._prevPoint), e;
        }, t.getUIDelta = function (e) {
          return e || (e = new de()), Ko.set(this._point), Ko.subtract(this._prevPoint), e.set(a.view.getScaleX(), a.view.getScaleY()), de.divide(e, Ko, e), e;
        }, t.getLocationInView = function (e) {
          return e || (e = new de()), e.set(this._point.x, a.view._designResolutionSize.height - this._point.y), e;
        }, t.getPreviousLocationInView = function (e) {
          return e || (e = new de()), e.set(this._prevPoint.x, a.view._designResolutionSize.height - this._prevPoint.y), e;
        }, t.getStartLocationInView = function (e) {
          return e || (e = new de()), e.set(this._startPoint.x, a.view._designResolutionSize.height - this._startPoint.y), e;
        }, t.getID = function () {
          return this._id;
        }, t.setTouchInfo = function (e, t, i) {
          void 0 === e && (e = 0), this._prevPoint = this._point, this._point = new de(t || 0, i || 0), this._id = e, this._startPointCaptured || (this._startPoint = new de(this._point), this._startPointCaptured = !0);
        }, t.setPoint = function (e, t) {
          "object" == (0, _typeof2.default)(e) ? (this._point.x = e.x, this._point.y = e.y) : (this._point.x = e || 0, this._point.y = t || 0), this._lastModified = a.game.frameStartTime;
        }, t.setPrevPoint = function (e, t) {
          this._prevPoint = "object" == (0, _typeof2.default)(e) ? new de(e.x, e.y) : new de(e || 0, t || 0), this._lastModified = a.game.frameStartTime;
        }, c(e, [{
          key: "lastModified",
          get: function get() {
            return this._lastModified;
          }
        }]), e;
      }());
      a.Touch = Yo;

      var Qo = function Qo(e, t, i, n) {
        void 0 === e && (e = 0), void 0 === t && (t = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), this.x = void 0, this.y = void 0, this.z = void 0, this.timestamp = void 0, this.x = e, this.y = t, this.z = i, this.timestamp = n;
      },
          qo = dt.TOUCH_TIMEOUT,
          Xo = new de(),
          jo = new de(),
          Zo = function () {
        function e() {
          this._preTouchPoint = new de(), this._prevMousePoint = new de(), this._preTouchPool = [], this._preTouchPoolPointer = 0, this._touches = [], this._touchesIntegerDict = {}, this._indexBitsUsed = 0, this._maxTouches = 8, this._glView = null;
        }

        var t = e.prototype;
        return t.clearEvents = function () {
          Ho.pollMouseEvents(), Ho.pollTouchEvents(), Ho.pollKeyboardEvents(), Ho.pollAccelerometerEvents();
        }, t.frameDispatchEvents = function () {
          for (var e = Ho.pollMouseEvents(), t = 0, i = e.length; t < i; ++t) {
            var n = e[t];

            this._dispatchMouseEvent(n);
          }

          for (var r = Ho.pollTouchEvents(), s = 0, a = r.length; s < a; ++s) {
            var o = r[s];

            this._dispatchTouchEvent(o);
          }

          for (var h = Ho.pollKeyboardEvents(), u = 0, c = h.length; u < c; ++u) {
            var _ = h[u];

            this._dispatchKeyboardEvent(_);
          }

          for (var l = Ho.pollAccelerometerEvents(), d = 0, f = l.length; d < f; ++d) {
            var p = l[d];

            this._dispatchAccelerometerEvent(p);
          }
        }, t._dispatchMouseEvent = function (e) {
          var t, i;

          switch (e.type) {
            case ht.MOUSE_DOWN:
              t = this._getMouseEvent(e), i = this._getTouch(e), this._handleTouchesStart([i]), _t.dispatchEvent(t);
              break;

            case ht.MOUSE_MOVE:
              t = this._getMouseEvent(e), i = this._getTouch(e), this._handleTouchesMove([i]), _t.dispatchEvent(t);
              break;

            case ht.MOUSE_UP:
              t = this._getMouseEvent(e), i = this._getTouch(e), this._handleTouchesEnd([i]), _t.dispatchEvent(t);
              break;

            case ht.MOUSE_WHEEL:
              (t = this._getMouseEvent(e)).setScrollData(e.deltaX, e.deltaY), _t.dispatchEvent(t);
          }
        }, t._dispatchTouchEvent = function (e) {
          var t = this._getTouchList(e);

          switch (e.type) {
            case ht.TOUCH_START:
              this._handleTouchesStart(t);

              break;

            case ht.TOUCH_MOVE:
              this._handleTouchesMove(t);

              break;

            case ht.TOUCH_END:
              this._handleTouchesEnd(t);

              break;

            case ht.TOUCH_CANCEL:
              this._handleTouchesCancel(t);

          }
        }, t._handleTouchesStart = function (e) {
          for (var t = [], i = this._touchesIntegerDict, n = 0; n < e.length; ++n) {
            var r = e[n],
                s = r.getID();

            if (null !== s && void 0 === i[s]) {
              var a = this._getUnUsedIndex();

              if (-1 === a) {
                lt(2300, a);
                continue;
              }

              r.getLocation(Xo);
              var o = new Yo(Xo.x, Xo.y, s);
              this._touches[a] = o, r.getPreviousLocation(Xo), o.setPrevPoint(Xo), i[s] = a, t.push(o);
            }
          }

          if (t.length > 0) {
            var h = new ko(t, !1, ht.TOUCH_START, dt.ENABLE_MULTI_TOUCH ? this._getUsefulTouches() : t);

            _t.dispatchEvent(h);
          }
        }, t._handleTouchesMove = function (e) {
          for (var t = [], i = this._touches, n = 0; n < e.length; ++n) {
            var r = e[n],
                s = r.getID();

            if (null !== s) {
              var a = this._touchesIntegerDict[s];
              void 0 !== a && i[a] && (r.getLocation(Xo), i[a].setPoint(Xo), r.getPreviousLocation(Xo), i[a].setPrevPoint(Xo), t.push(i[a]));
            }
          }

          if (t.length > 0) {
            var o = new ko(t, !1, ht.TOUCH_MOVE, dt.ENABLE_MULTI_TOUCH ? this._getUsefulTouches() : t);

            _t.dispatchEvent(o);
          }
        }, t._handleTouchesEnd = function (e) {
          var t = this.getSetOfTouchesEndOrCancel(e);

          if (t.length > 0) {
            var i = new ko(t, !1, ht.TOUCH_END, dt.ENABLE_MULTI_TOUCH ? this._getUsefulTouches() : t);

            _t.dispatchEvent(i);
          }

          this._preTouchPool.length = 0;
        }, t._handleTouchesCancel = function (e) {
          var t = this.getSetOfTouchesEndOrCancel(e);

          if (t.length > 0) {
            var i = new ko(t, !1, ht.TOUCH_CANCEL, dt.ENABLE_MULTI_TOUCH ? this._getUsefulTouches() : t);

            _t.dispatchEvent(i);
          }

          this._preTouchPool.length = 0;
        }, t.getSetOfTouchesEndOrCancel = function (e) {
          for (var t = [], i = this._touches, n = this._touchesIntegerDict, r = 0; r < e.length; ++r) {
            var s = e[r],
                a = s.getID();

            if (null !== a) {
              var o = n[a];
              void 0 !== o && i[o] && (s.getLocation(Xo), i[o].setPoint(Xo), s.getPreviousLocation(Xo), i[o].setPrevPoint(Xo), t.push(i[o]), this._removeUsedIndexBit(o), delete n[a]);
            }
          }

          return t;
        }, t._getPreTouch = function (e) {
          for (var t = null, i = this._preTouchPool, n = e.getID(), r = i.length - 1; r >= 0; r--) {
            if (i[r].getID() === n) {
              t = i[r];
              break;
            }
          }

          return t || (t = e), t;
        }, t._setPreTouch = function (e) {
          for (var t = !1, i = this._preTouchPool, n = e.getID(), r = i.length - 1; r >= 0; r--) {
            if (i[r].getID() === n) {
              i[r] = e, t = !0;
              break;
            }
          }

          t || (i.length <= 50 ? i.push(e) : (i[this._preTouchPoolPointer] = e, this._preTouchPoolPointer = (this._preTouchPoolPointer + 1) % 50));
        }, t._getViewPixelRatio = function () {
          return this._glView || (this._glView = a.view), this._glView ? this._glView._devicePixelRatio : 1;
        }, t._getTouch = function (e) {
          var t = this._preTouchPoint,
              i = this._getViewPixelRatio(),
              n = e.x * i,
              r = e.y * i,
              s = new Yo(n, r, 0);

          return s.setPrevPoint(t.x, t.y), t.x = n, t.y = r, s;
        }, t._getMouseEvent = function (e) {
          var t = this._prevMousePoint,
              i = new zo(e.type, !1, t),
              n = this._getViewPixelRatio();

          return t.x = e.x * n, t.y = e.y * n, a.GAME_VIEW && (t.x /= a.gameView.canvas.width / a.game.canvas.width, t.y /= a.gameView.canvas.height / a.game.canvas.height), i.setLocation(t.x, t.y), i.setButton(e.button), e.movementX && (i.movementX = e.movementX), e.movementY && (i.movementY = e.movementY), i;
        }, t._getTouchList = function (e) {
          for (var t = [], i = this._preTouchPoint, n = e.changedTouches.length, r = this._getViewPixelRatio(), s = 0; s < n; s++) {
            var a = e.changedTouches[s],
                o = a.x * r,
                h = a.y * r,
                u = new Yo(o, h, a.identifier);
            if (this._getPreTouch(u).getLocation(jo), u.setPrevPoint(jo.x, jo.y), this._setPreTouch(u), i.x = o, i.y = h, t.push(u), !dt.ENABLE_MULTI_TOUCH) break;
          }

          return t;
        }, t._getUnUsedIndex = function () {
          for (var e = this._indexBitsUsed, t = a.game.frameStartTime, i = 0; i < this._maxTouches; i++) {
            if (!(1 & e)) return this._indexBitsUsed |= 1 << i, i;
            var n = this._touches[i];

            if (t - n.lastModified > qo) {
              this._removeUsedIndexBit(i);

              var r = n.getID();
              return null !== r && delete this._touchesIntegerDict[r], i;
            }

            e >>= 1;
          }

          return -1;
        }, t._removeUsedIndexBit = function (e) {
          if (!(e < 0 || e >= this._maxTouches)) {
            var t = 1 << e;
            t = ~t, this._indexBitsUsed &= t;
          }
        }, t._getUsefulTouches = function () {
          var e = [],
              t = this._touchesIntegerDict;

          for (var i in t) {
            var n = t[parseInt(i)];

            if (null != n) {
              var r = this._touches[n];
              e.push(r);
            }
          }

          return e;
        }, t._dispatchKeyboardEvent = function (e) {
          switch (e.type) {
            case ht.KEY_DOWN:
              _t.dispatchEvent(new Wo(e.code, ht.KEY_DOWN));

              break;

            case ht.KEY_UP:
              _t.dispatchEvent(new Wo(e.code, ht.KEY_UP));

          }
        }, t._dispatchAccelerometerEvent = function (e) {
          if (e.type === ht.DEVICEMOTION) {
            var t = e.x,
                i = e.y,
                n = e.z,
                r = e.timestamp;

            _t.dispatchEvent(new Vo(new Qo(t, i, n, r)));
          }
        }, t.setAccelerometerEnabled = function (e) {
          e ? Ho.startAccelerometer() : Ho.stopAccelerometer();
        }, t.setAccelerometerInterval = function (e) {
          Ho.setAccelerometerInterval(e);
        }, e;
      }(),
          Jo = e("Z", new Zo());

      a.internal.inputManager = Jo;
      var $o = e("G", function (e) {
        function t() {
          for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
            n[r] = arguments[r];
          }

          return (t = e.call.apply(e, [this].concat(n)) || this).frame = null, t.container = null, t.canvas = null, t.renderType = -1, t.eventTargetOn = e.prototype.on, t.eventTargetOnce = e.prototype.once, t.config = {}, t.onStart = null, t.frameTime = 1e3 / 60, t.collisionMatrix = [], t.groupList = [], t._persistRootNodes = {}, t._gfxDevice = null, t._configLoaded = !1, t._isCloning = !1, t._inited = !1, t._engineInited = !1, t._rendererInitialized = !1, t._paused = !0, t._frameRate = 60, t._intervalId = 0, t._initTime = 0, t._startTime = 0, t._deltaTime = 0, t;
        }

        $(t, e);
        var i = t.prototype;
        return i.setFrameRate = function (e) {
          this.frameRate = e;
        }, i.getFrameRate = function () {
          return this.frameRate;
        }, i.step = function () {
          a.director.tick(this.frameTime / 1e3);
        }, i.pause = function () {
          this._paused || (this._paused = !0, this._intervalId && (window.cAF(this._intervalId), this._intervalId = 0));
        }, i.resume = function () {
          this._paused && (Jo.clearEvents(), this._intervalId && (window.cAF(this._intervalId), this._intervalId = 0), this._paused = !1, this._updateCallback(), this._intervalId = window.rAF(this._frameCB));
        }, i.isPaused = function () {
          return this._paused;
        }, i.restart = function () {
          var e = this;
          return new Promise(function (e) {
            return a.director.once(a.Director.EVENT_END_FRAME, function () {
              return e();
            });
          }).then(function () {
            for (var i in e._persistRootNodes) {
              e.removePersistRootNode(e._persistRootNodes[i]);
            }

            return a.director.getScene().destroy(), a.Object._deferredDestroy(), a.director.reset(), e.pause(), e._setRenderPipelineNShowSplash().then(function () {
              e.resume(), e._safeEmit(t.EVENT_RESTART);
            });
          });
        }, i.end = function () {
          ft.close();
        }, i.on = function (e, i, n, r) {
          return (this._engineInited && e === t.EVENT_ENGINE_INITED || this._inited && e === t.EVENT_GAME_INITED || this._rendererInitialized && e === t.EVENT_RENDERER_INITED) && i.call(n), this.eventTargetOn(e, i, n, r);
        }, i.once = function (e, i, n) {
          return this._engineInited && e === t.EVENT_ENGINE_INITED ? i.call(n) : this.eventTargetOnce(e, i, n);
        }, i.init = function (e) {
          var t = this;
          if (this._initConfig(e), this.config.assetOptions && a.assetManager.init(this.config.assetOptions), this.config.layers) for (var i = this.config.layers, n = 0; n < i.length; n++) {
            var r = i[n],
                s = pt(r.value);
            U.addLayer(r.name, s);
          }
          return this._initEngine().then(function () {
            return t._initEvents(), a.director.root && a.director.root.dataPoolManager && a.director.root.dataPoolManager.jointTexturePool.registerCustomTextureLayouts(e.customJointTextureLayouts), t._engineInited;
          });
        }, i.run = function (e, t) {
          var i,
              n = this;
          return "function" != typeof e && e ? (i = this.init(e), this.onStart = null != t ? t : null) : this.onStart = null != e ? e : null, gt.init(), Promise.resolve(i).then(function () {
            return n._setRenderPipelineNShowSplash();
          });
        }, i.addPersistRootNode = function (e) {
          if (a.Node.isNode(e) && e.uuid) {
            var t = e.uuid;

            if (!this._persistRootNodes[t]) {
              var i = a.director._scene;
              if (a.isValid(i)) if (e.parent) {
                if (!(e.parent instanceof a.Scene)) return void vt(3801);
                if (e.parent !== i) return void vt(3802);
                e._originalSceneId = i.uuid;
              } else e.parent = i;
              this._persistRootNodes[t] = e, e._persistNode = !0, a.assetManager._releaseManager._addPersistNodeRef(e);
            }
          } else vt(3800);
        }, i.removePersistRootNode = function (e) {
          var t = e.uuid || "";
          e === this._persistRootNodes[t] && (delete this._persistRootNodes[t], e._persistNode = !1, e._originalSceneId = "", a.assetManager._releaseManager._removePersistNodeRef(e));
        }, i.isPersistRootNode = function (e) {
          return !!e._persistNode;
        }, i._initEngine = function () {
          var e = this;
          return this._initDevice(), Promise.resolve(a.director._init()).then(function () {
            mt("Cocos Creator v" + St), e.emit(t.EVENT_ENGINE_INITED), e._engineInited = !0, a.internal.dynamicAtlasManager && (a.internal.dynamicAtlasManager.enabled = !dt.CLEANUP_IMAGE_CACHE);
          });
        }, i._setAnimFrame = function () {
          var e = this._frameRate,
              t = window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
          60 !== e && 30 !== e ? (window.rAF = this._stTime.bind(this), window.cAF = this._ctTime) : (window.rAF = t || this._stTime.bind(this), window.cAF = window.cancelAnimationFrame || window.cancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.webkitCancelRequestAnimationFrame || window.msCancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.ocancelAnimationFrame || this._ctTime, this._updateCallback());
        }, i._stTime = function (e) {
          var t = performance.now(),
              i = Math.max(0, t - this._startTime),
              n = Math.max(0, this.frameTime - i);
          return window.setTimeout(e, n);
        }, i._ctTime = function (e) {
          window.clearTimeout(e);
        }, i._calculateDT = function (e) {
          return e || (e = performance.now()), this._deltaTime = e > this._startTime ? (e - this._startTime) / 1e3 : 0, this._deltaTime > t.DEBUG_DT_THRESHOLD && (this._deltaTime = this.frameTime / 1e3), this._startTime = e, this._deltaTime;
        }, i._updateCallback = function () {
          var e,
              t = this,
              i = a.director;

          if (30 === this._frameRate) {
            var n = !0;

            e = function e(_e2) {
              t._intervalId = window.rAF(t._frameCB), (n = !n) || i.tick(t._calculateDT(_e2));
            };
          } else e = function e(_e3) {
            i.tick(t._calculateDT(_e3)), t._intervalId = window.rAF(t._frameCB);
          };

          this._frameCB = e;
        }, i._runMainLoop = function () {
          if (this._inited && !Et) {
            var e = this.config,
                t = a.director;
            Tt(!!e.showFPS), t.startAnimation(), this.resume();
          }
        }, i._initConfig = function (e) {
          "number" != typeof e.debugMode && (e.debugMode = wt.NONE), e.exposeClassName = !!e.exposeClassName, "number" != typeof e.frameRate && (e.frameRate = 60);
          var t = e.renderMode;
          ("number" != typeof t || t > 2 || t < 0) && (e.renderMode = 0), e.showFPS = !!e.showFPS, yt(e.debugMode), this.config = e, this._configLoaded = !0, this.frameRate = e.frameRate;
        }, i._determineRenderType = function () {
          var e = this.config,
              i = parseInt(e.renderMode, 10);
          this.renderType = t.RENDER_TYPE_CANVAS;
          var n = !1;
          if (0 === i ? Ot.capabilities.opengl ? (this.renderType = t.RENDER_TYPE_WEBGL, n = !0) : Ot.capabilities.canvas && (this.renderType = t.RENDER_TYPE_CANVAS, n = !0) : 1 === i && Ot.capabilities.canvas ? (this.renderType = t.RENDER_TYPE_CANVAS, n = !0) : 2 === i && Ot.capabilities.opengl && (this.renderType = t.RENDER_TYPE_WEBGL, n = !0), !n) throw new Error(It(3820, i));
        }, i._initDevice = function () {
          if (!this._rendererInitialized) {
            var e = this.config.adapter;

            if (e && (this.canvas = e.canvas, this.frame = e.frame, this.container = e.container), this._determineRenderType(), this.renderType === t.RENDER_TYPE_WEBGL) {
              var i = [],
                  n = dt.ENABLE_WEBGL_ANTIALIAS,
                  r = new At(this.canvas, n, !1, window.devicePixelRatio, Ot.windowPixelResolution.width, Ot.windowPixelResolution.height, bt),
                  s = !!window.WebGL2RenderingContext,
                  o = window.navigator.userAgent.toLowerCase();
              (-1 !== o.indexOf("safari") && -1 === o.indexOf("chrome") || Ot.browserType === Ft.UC) && (s = !1), s && a.WebGL2Device && i.push(a.WebGL2Device), a.WebGLDevice && i.push(a.WebGLDevice);

              for (var h = 0; h < i.length && (this._gfxDevice = new i[h](), !this._gfxDevice.initialize(r)); h++) {
                ;
              }
            }

            if (!this._gfxDevice) return Rt("can not support canvas rendering in 3D"), void (this.renderType = t.RENDER_TYPE_CANVAS);

            this.canvas.oncontextmenu = function () {
              return !1;
            };
          }
        }, i._initEvents = function () {
          ft.on("show", this._onShow, this), ft.on("hide", this._onHide, this);
        }, i._onHide = function () {
          this.emit(t.EVENT_HIDE), this.pause();
        }, i._onShow = function () {
          this.emit(t.EVENT_SHOW), this.resume();
        }, i._setRenderPipelineNShowSplash = function () {
          var e = this;
          return Promise.resolve(this._setupRenderPipeline()).then(function () {
            return Promise.resolve(e._showSplashScreen()).then(function () {
              e._inited = !0, e._initTime = performance.now(), e._runMainLoop(), e._safeEmit(t.EVENT_GAME_INITED), e.onStart && e.onStart();
            });
          });
        }, i._setupRenderPipeline = function () {
          var e = this,
              t = this.config.renderPipeline;
          return t ? new Promise(function (e, i) {
            a.assetManager.loadAny(t, function (t, n) {
              return !t && n instanceof zn ? e(n) : i(t);
            });
          }).then(function (t) {
            e._setRenderPipeline(t);
          }).catch(function (i) {
            Dt(i), Dt("Failed load render pipeline: " + t + ", engine failed to initialize, will fallback to default pipeline"), e._setRenderPipeline();
          }) : this._setRenderPipeline();
        }, i._showSplashScreen = function () {
          if (a.internal.SplashScreen) {
            var e = a.internal.SplashScreen.instance;
            return e.main(a.director.root), new Promise(function (t) {
              e.setOnFinish(function () {
                return t();
              }), e.loadFinish = !0;
            });
          }

          return null;
        }, i._setRenderPipeline = function (e) {
          a.director.root.setRenderPipeline(e) || this._setRenderPipeline(), this._rendererInitialized = !0, this._safeEmit(t.EVENT_RENDERER_INITED);
        }, i._safeEmit = function (e) {
          this.emit(e);
        }, c(t, [{
          key: "inited",
          get: function get() {
            return this._inited;
          }
        }, {
          key: "frameRate",
          get: function get() {
            return this._frameRate;
          },
          set: function set(e) {
            "number" != typeof e && (e = parseInt(e, 10), Number.isNaN(e) && (e = 60)), this._frameRate = e, this.frameTime = 1e3 / e, this._setAnimFrame();
          }
        }, {
          key: "deltaTime",
          get: function get() {
            return this._deltaTime;
          }
        }, {
          key: "totalTime",
          get: function get() {
            return performance.now() - this._initTime;
          }
        }, {
          key: "frameStartTime",
          get: function get() {
            return this._startTime;
          }
        }]), t;
      }(at));
      $o.EVENT_HIDE = "game_on_hide", $o.EVENT_SHOW = "game_on_show", $o.EVENT_LOW_MEMORY = "game_on_low_memory", $o.EVENT_GAME_INITED = "game_inited", $o.EVENT_ENGINE_INITED = "engine_inited", $o.EVENT_RENDERER_INITED = "renderer_inited", $o.EVENT_RESTART = "game_on_restart", $o.RENDER_TYPE_CANVAS = 0, $o.RENDER_TYPE_WEBGL = 1, $o.RENDER_TYPE_OPENGL = 2, $o.DEBUG_DT_THRESHOLD = 1, a.Game = $o, e("w", a.game = new $o());
      var eh = e("_", {
        topLeft: a.v2(0, 0),
        topRight: a.v2(0, 0),
        top: a.v2(0, 0),
        bottomLeft: a.v2(0, 0),
        bottomRight: a.v2(0, 0),
        bottom: a.v2(0, 0),
        center: a.v2(0, 0),
        left: a.v2(0, 0),
        right: a.v2(0, 0),
        width: 0,
        height: 0,
        init: function init(e) {
          var t = this.width = e.width,
              i = this.height = e.height,
              n = e.x,
              r = e.y,
              s = r + i,
              a = n + t;
          this.topLeft.x = n, this.topLeft.y = s, this.topRight.x = a, this.topRight.y = s, this.top.x = n + t / 2, this.top.y = s, this.bottomLeft.x = n, this.bottomLeft.y = r, this.bottomRight.x = a, this.bottomRight.y = r, this.bottom.x = n + t / 2, this.bottom.y = r, this.center.x = n + t / 2, this.center.y = r + i / 2, this.left.x = n, this.left.y = r + i / 2, this.right.x = a, this.right.y = r + i / 2;
        }
      });
      a.visibleRect = eh;

      var th = function () {
        function e() {}

        var t = e.prototype;
        return t.fullScreen = function () {
          return Nt.isFullScreen;
        }, t.requestFullScreen = function (e, t, i) {
          return arguments.length > 0 && vt(1400, "screen.requestFullScreen(element, onFullScreenChange?, onFullScreenError?)", "screen.requestFullScreen(): Promise"), Nt.requestFullScreen().then(function () {
            null == t || t();
          }).catch(function (e) {
            console.error(e), null == i || i();
          });
        }, t.exitFullScreen = function () {
          return Nt.exitFullScreen();
        }, t.autoFullScreen = function (e, t) {
          var i;
          null === (i = this.requestFullScreen(e, t)) || void 0 === i || i.catch(function () {});
        }, t.disableAutoFullScreen = function () {}, c(e, [{
          key: "supportsFullScreen",
          get: function get() {
            return Nt.supportFullScreen;
          }
        }]), e;
      }(),
          ih = e("s", new th());

      a.screen = ih;
      var nh = new Pt(),
          rh = e("p", function (e) {
        function t() {
          var t;
          (t = e.call(this) || this)._resizeWithBrowserSize = void 0, t._designResolutionSize = void 0, t._frameSize = void 0, t._scaleX = void 0, t._scaleY = void 0, t._viewportRect = void 0, t._visibleRect = void 0, t._autoFullScreen = void 0, t._devicePixelRatio = void 0, t._maxPixelRatio = void 0, t._retinaEnabled = void 0, t._resizeCallback = void 0, t._resizing = void 0, t._orientationChanging = void 0, t._isRotated = void 0, t._orientation = void 0, t._resolutionPolicy = void 0, t._rpExactFit = void 0, t._rpShowAll = void 0, t._rpNoBorder = void 0, t._rpFixedHeight = void 0, t._rpFixedWidth = void 0;
          var i = sh,
              n = ah;
          return t._frameSize = new Pt(0, 0), t._designResolutionSize = new Pt(0, 0), t._scaleX = 1, t._scaleY = 1, t._viewportRect = new d(0, 0, 0, 0), t._visibleRect = new d(0, 0, 0, 0), t._autoFullScreen = !1, t._devicePixelRatio = 1, t._maxPixelRatio = 2, t._retinaEnabled = !1, t._resizeCallback = null, t._resizing = !1, t._resizeWithBrowserSize = !1, t._orientationChanging = !0, t._isRotated = !1, t._orientation = a.macro.ORIENTATION_AUTO, t._rpExactFit = new oh(i.EQUAL_TO_FRAME, n.EXACT_FIT), t._rpShowAll = new oh(i.EQUAL_TO_FRAME, n.SHOW_ALL), t._rpNoBorder = new oh(i.EQUAL_TO_FRAME, n.NO_BORDER), t._rpFixedHeight = new oh(i.EQUAL_TO_FRAME, n.FIXED_HEIGHT), t._rpFixedWidth = new oh(i.EQUAL_TO_FRAME, n.FIXED_WIDTH), t._resolutionPolicy = t._rpShowAll, a.game.once(a.Game.EVENT_ENGINE_INITED, t.init, ie(t)), t;
        }

        $(t, e);
        var i = t.prototype;
        return i.init = function () {
          this._initFrameSize();

          var e = a.game.canvas.width,
              t = a.game.canvas.height;
          this._designResolutionSize.width = e, this._designResolutionSize.height = t, this._viewportRect.width = e, this._viewportRect.height = t, this._visibleRect.width = e, this._visibleRect.height = t, nh.width = this._visibleRect.width, nh.height = this._visibleRect.height, eh && eh.init(this._visibleRect);
        }, i.resizeWithBrowserSize = function (e) {
          e ? this._resizeWithBrowserSize || (this._resizeWithBrowserSize = !0, Nt.on("window-resize", this._resizeEvent, this), Nt.on("orientation-change", this._orientationChange, this)) : this._resizeWithBrowserSize && (this._resizeWithBrowserSize = !1, Nt.off("window-resize", this._resizeEvent, this), Nt.off("orientation-change", this._orientationChange, this));
        }, i.setResizeCallback = function (e) {
          "function" != typeof e && null != e || (this._resizeCallback = e);
        }, i.setOrientation = function (e) {
          (e &= a.macro.ORIENTATION_AUTO) && this._orientation !== e && (this._orientation = e);
        }, i.adjustViewportMeta = function () {}, i.enableRetina = function (e) {
          this._retinaEnabled = !!e;
        }, i.isRetinaEnabled = function () {
          return this._retinaEnabled;
        }, i.enableAutoFullScreen = function (e) {
          e !== this._autoFullScreen && (this._autoFullScreen = e, e && ih.requestFullScreen().catch(function () {}));
        }, i.isAutoFullScreenEnabled = function () {
          return this._autoFullScreen;
        }, i.setCanvasSize = function (e, t) {
          var i = a.game.canvas,
              n = a.game.container;
          this._devicePixelRatio = window.devicePixelRatio, i.width = Ot.windowPixelResolution.width, i.height = Ot.windowPixelResolution.height, i.style.width = e + "px", i.style.height = t + "px", n.style.width = e + "px", n.style.height = t + "px", this._resizeEvent();
        }, i.getCanvasSize = function () {
          return new Pt(a.game.canvas.width, a.game.canvas.height);
        }, i.getFrameSize = function () {
          return new Pt(this._frameSize.width, this._frameSize.height);
        }, i.setFrameSize = function (e, t) {
          this._frameSize.width = e, this._frameSize.height = t, a.game.frame.style.width = e + "px", a.game.frame.style.height = t + "px", this._resizeEvent();
        }, i.getVisibleSize = function () {
          return new Pt(this._visibleRect.width, this._visibleRect.height);
        }, i.getVisibleSizeInPixel = function () {
          return new Pt(this._visibleRect.width * this._scaleX, this._visibleRect.height * this._scaleY);
        }, i.getVisibleOrigin = function () {
          return new de(this._visibleRect.x, this._visibleRect.y);
        }, i.getVisibleOriginInPixel = function () {
          return new de(this._visibleRect.x * this._scaleX, this._visibleRect.y * this._scaleY);
        }, i.getResolutionPolicy = function () {
          return this._resolutionPolicy;
        }, i.setResolutionPolicy = function (e) {
          if (e instanceof oh) this._resolutionPolicy = e;else {
            var t = oh;
            e === t.EXACT_FIT && (this._resolutionPolicy = this._rpExactFit), e === t.SHOW_ALL && (this._resolutionPolicy = this._rpShowAll), e === t.NO_BORDER && (this._resolutionPolicy = this._rpNoBorder), e === t.FIXED_HEIGHT && (this._resolutionPolicy = this._rpFixedHeight), e === t.FIXED_WIDTH && (this._resolutionPolicy = this._rpFixedWidth);
          }
        }, i.setDesignResolutionSize = function (e, t, i) {
          if (e > 0 && t > 0) {
            this.setResolutionPolicy(i);
            var n = this._resolutionPolicy;

            if (n && n.preApply(this), this._orientationChanging = !0, this._resizing || this._initFrameSize(), n) {
              this._designResolutionSize.width = e, this._designResolutionSize.height = t;
              var r = n.apply(this, this._designResolutionSize);

              if (r.scale && 2 === r.scale.length && (this._scaleX = r.scale[0], this._scaleY = r.scale[1]), r.viewport) {
                var s = this._viewportRect,
                    a = this._visibleRect,
                    o = r.viewport;
                s.x = o.x, s.y = o.y, s.width = o.width, s.height = o.height, a.x = 0, a.y = 0, a.width = o.width / this._scaleX, a.height = o.height / this._scaleY;
              }

              n.postApply(this), nh.width = this._visibleRect.width, nh.height = this._visibleRect.height, eh && eh.init(this._visibleRect), this.emit("design-resolution-changed");
            } else lt(2201);
          } else D(2200);
        }, i.getDesignResolutionSize = function () {
          return new Pt(this._designResolutionSize.width, this._designResolutionSize.height);
        }, i.setRealPixelResolution = function (e, t, i) {
          this.setDesignResolutionSize(e, t, i);
        }, i.getViewportRect = function () {
          return this._viewportRect;
        }, i.getScaleX = function () {
          return this._scaleX;
        }, i.getScaleY = function () {
          return this._scaleY;
        }, i.getDevicePixelRatio = function () {
          return this._devicePixelRatio;
        }, i.convertToLocationInView = function (e, t, i, n) {
          var r = n || new de(),
              s = this._devicePixelRatio * (e - i.left),
              o = this._devicePixelRatio * (i.top + i.height - t);
          return this._isRotated ? (r.x = a.game.canvas.width - o, r.y = s) : (r.x = s, r.y = o), a.GAME_VIEW && (r.x /= a.gameView.canvas.width / a.game.canvas.width, r.y /= a.gameView.canvas.height / a.game.canvas.height), r;
        }, i._convertPointWithScale = function (e) {
          var t = this._viewportRect;
          e.x = (e.x - t.x) / this._scaleX, e.y = (e.y - t.y) / this._scaleY;
        }, i._resizeEvent = function () {
          var e,
              t = this._frameSize.width,
              i = this._frameSize.height,
              n = this._isRotated;

          if (a.sys.isMobile) {
            var r = a.game.container.style,
                s = r.margin;
            r.margin = "0", r.display = "none", this._initFrameSize(), r.margin = s, r.display = "block";
          } else this._initFrameSize();

          if (this._orientationChanging || this._isRotated !== n || this._frameSize.width !== t || this._frameSize.height !== i) {
            var o = this._designResolutionSize.width,
                h = this._designResolutionSize.height;
            this._resizing = !0, o > 0 && this.setDesignResolutionSize(o, h, this._resolutionPolicy), this._resizing = !1, this.emit("canvas-resize"), null === (e = this._resizeCallback) || void 0 === e || e.call(this);
          }
        }, i._orientationChange = function () {
          this._orientationChanging = !0, this._resizeEvent();
        }, i._initFrameSize = function () {
          var e = this._frameSize,
              t = Nt.windowSize,
              i = t.width,
              n = t.height,
              r = i >= n;
          !a.sys.isMobile || r && this._orientation & a.macro.ORIENTATION_LANDSCAPE || !r && this._orientation & a.macro.ORIENTATION_PORTRAIT ? (e.width = i, e.height = n, a.game.container.style["-webkit-transform"] = "rotate(0deg)", a.game.container.style.transform = "rotate(0deg)", this._isRotated = !1) : (e.width = n, e.height = i, a.game.container.style["-webkit-transform"] = "rotate(90deg)", a.game.container.style.transform = "rotate(90deg)", a.game.container.style["-webkit-transform-origin"] = "0px 0px 0px", a.game.container.style.transformOrigin = "0px 0px 0px", this._isRotated = !0, a.game.canvas.style["-webkit-transform"] = "translateZ(0px)", a.game.canvas.style.transform = "translateZ(0px)"), this._orientationChanging && setTimeout(function () {
            a.view._orientationChanging = !1;
          }, 1e3);
        }, t;
      }(at));
      rh.instance = void 0;

      var sh = function () {
        function e() {
          this.name = "ContainerStrategy";
        }

        var t = e.prototype;
        return t.preApply = function () {}, t.apply = function () {}, t.postApply = function () {}, t._setupContainer = function (e, t, i) {
          var n = a.game.canvas,
              r = a.game.container;
          Ot.os !== Lt.ANDROID && Ot.os !== Lt.OHOS || (document.body.style.width = (e._isRotated ? i : t) + "px", document.body.style.height = (e._isRotated ? t : i) + "px"), r.style.width = n.style.width = t + "px", r.style.height = n.style.height = i + "px", e._devicePixelRatio = 1, e.isRetinaEnabled() && (e._devicePixelRatio = Math.min(e._maxPixelRatio, window.devicePixelRatio || 1)), n.width = t * e._devicePixelRatio, n.height = i * e._devicePixelRatio;
        }, t._fixContainer = function () {
          document.body.insertBefore(a.game.container, document.body.firstChild);
          var e = document.body.style;
          e.width = window.innerWidth + "px", e.height = window.innerHeight + "px", e.overflow = "hidden";
          var t = a.game.container.style;
          t.position = "fixed", t.left = t.top = "0px", document.body.scrollTop = 0;
        }, e;
      }();

      sh.EQUAL_TO_FRAME = void 0, sh.PROPORTION_TO_FRAME = void 0;

      var ah = function () {
        function e() {
          this.name = "ContentStrategy", this._result = void 0, this._result = {
            scale: [1, 1],
            viewport: null
          };
        }

        var t = e.prototype;
        return t.preApply = function () {}, t.apply = function () {
          return {
            scale: [1, 1]
          };
        }, t.postApply = function () {}, t._buildResult = function (e, t, i, n, r, s) {
          Math.abs(e - i) < 2 && (i = e), Math.abs(t - n) < 2 && (n = t);
          var a = new d(Math.round((e - i) / 2), Math.round((t - n) / 2), i, n);
          return this._result.scale = [r, s], this._result.viewport = a, this._result;
        }, e;
      }();

      ah.EXACT_FIT = void 0, ah.SHOW_ALL = void 0, ah.NO_BORDER = void 0, ah.FIXED_HEIGHT = void 0, ah.FIXED_WIDTH = void 0, function () {
        var e = function (e) {
          function t() {
            for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
              n[r] = arguments[r];
            }

            return (t = e.call.apply(e, [this].concat(n)) || this).name = "EqualToFrame", t;
          }

          return $(t, e), t.prototype.apply = function (e) {
            var t = e._frameSize.height,
                i = a.game.container.style;
            this._setupContainer(e, e._frameSize.width, e._frameSize.height), e._isRotated ? i.margin = "0 0 0 " + t + "px" : i.margin = "0px", i.padding = "0px";
          }, t;
        }(sh),
            t = function (e) {
          function t() {
            for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
              n[r] = arguments[r];
            }

            return (t = e.call.apply(e, [this].concat(n)) || this).name = "ProportionalToFrame", t;
          }

          return $(t, e), t.prototype.apply = function (e, t) {
            var i,
                n,
                r = e._frameSize.width,
                s = e._frameSize.height,
                o = a.game.container.style,
                h = t.width,
                u = t.height,
                c = r / h,
                _ = s / u;

            c < _ ? (i = r, n = u * c) : (i = h * _, n = s);
            var l = Math.round((r - i) / 2),
                d = Math.round((s - n) / 2);
            i = r - 2 * l, n = s - 2 * d, this._setupContainer(e, i, n), e._isRotated ? o.margin = "0 0 0 " + s + "px" : o.margin = "0px", o.paddingLeft = l + "px", o.paddingRight = l + "px", o.paddingTop = d + "px", o.paddingBottom = d + "px";
          }, t;
        }(sh),
            i = ("undefined" == typeof window ? global : window).__globalAdapter;

        i && (i.adaptContainerStrategy && i.adaptContainerStrategy(sh.prototype), i.adaptView && i.adaptView(rh.prototype)), sh.EQUAL_TO_FRAME = new e(), sh.PROPORTION_TO_FRAME = new t();

        var n = function (e) {
          function t() {
            for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
              n[r] = arguments[r];
            }

            return (t = e.call.apply(e, [this].concat(n)) || this).name = "ExactFit", t;
          }

          return $(t, e), t.prototype.apply = function (e, t) {
            var i = a.game.canvas.width,
                n = a.game.canvas.height,
                r = i / t.width,
                s = n / t.height;
            return this._buildResult(i, n, i, n, r, s);
          }, t;
        }(ah),
            r = function (e) {
          function t() {
            for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
              n[r] = arguments[r];
            }

            return (t = e.call.apply(e, [this].concat(n)) || this).name = "ShowAll", t;
          }

          return $(t, e), t.prototype.apply = function (e, t) {
            var i,
                n,
                r = a.game.canvas.width,
                s = a.game.canvas.height,
                o = t.width,
                h = t.height,
                u = r / o,
                c = s / h,
                _ = 0;
            return u < c ? (i = r, n = h * (_ = u)) : (i = o * (_ = c), n = s), this._buildResult(r, s, i, n, _, _);
          }, t;
        }(ah),
            s = function (e) {
          function t() {
            for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
              n[r] = arguments[r];
            }

            return (t = e.call.apply(e, [this].concat(n)) || this).name = "NoBorder", t;
          }

          return $(t, e), t.prototype.apply = function (e, t) {
            var i,
                n,
                r,
                s = a.game.canvas.width,
                o = a.game.canvas.height,
                h = t.width,
                u = t.height,
                c = s / h,
                _ = o / u;

            return c < _ ? (n = h * (i = _), r = o) : (n = s, r = u * (i = c)), this._buildResult(s, o, n, r, i, i);
          }, t;
        }(ah),
            o = function (e) {
          function t() {
            for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
              n[r] = arguments[r];
            }

            return (t = e.call.apply(e, [this].concat(n)) || this).name = "FixedHeight", t;
          }

          return $(t, e), t.prototype.apply = function (e, t) {
            var i = a.game.canvas.width,
                n = a.game.canvas.height,
                r = n / t.height,
                s = i,
                o = n;
            return this._buildResult(i, n, s, o, r, r);
          }, t;
        }(ah),
            h = function (e) {
          function t() {
            for (var t, i = arguments.length, n = new Array(i), r = 0; r < i; r++) {
              n[r] = arguments[r];
            }

            return (t = e.call.apply(e, [this].concat(n)) || this).name = "FixedWidth", t;
          }

          return $(t, e), t.prototype.apply = function (e, t) {
            var i = a.game.canvas.width,
                n = a.game.canvas.height,
                r = i / t.width,
                s = i,
                o = n;
            return this._buildResult(i, n, s, o, r, r);
          }, t;
        }(ah);

        ah.EXACT_FIT = new n(), ah.SHOW_ALL = new r(), ah.NO_BORDER = new s(), ah.FIXED_HEIGHT = new o(), ah.FIXED_WIDTH = new h();
      }();
      var oh = e("q", function () {
        function e(e, t) {
          this.name = "ResolutionPolicy", this._containerStrategy = void 0, this._contentStrategy = void 0, this._containerStrategy = null, this._contentStrategy = null, this.setContainerStrategy(e), this.setContentStrategy(t);
        }

        var t = e.prototype;
        return t.preApply = function (e) {
          this._containerStrategy.preApply(e), this._contentStrategy.preApply(e);
        }, t.apply = function (e, t) {
          return this._containerStrategy.apply(e, t), this._contentStrategy.apply(e, t);
        }, t.postApply = function (e) {
          this._containerStrategy.postApply(e), this._contentStrategy.postApply(e);
        }, t.setContainerStrategy = function (e) {
          e instanceof sh && (this._containerStrategy = e);
        }, t.setContentStrategy = function (e) {
          e instanceof ah && (this._contentStrategy = e);
        }, c(e, [{
          key: "canvasSize",
          get: function get() {
            return new de(a.game.canvas.width, a.game.canvas.height);
          }
        }]), e;
      }());
      oh.EXACT_FIT = 0, oh.NO_BORDER = 1, oh.SHOW_ALL = 2, oh.FIXED_HEIGHT = 3, oh.FIXED_WIDTH = 4, oh.UNKNOWN = 5, oh.ContainerStrategy = sh, oh.ContentStrategy = ah, a.ResolutionPolicy = oh, e("v", rh.instance = a.view = new rh()), a.winSize = nh;
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/webgl-define-47af0bf2.js", function(require, module, exports){ 			
"use strict";

System.register([], function (_) {
  "use strict";

  return {
    execute: function execute() {
      var S;
      _("W", void 0), function (_) {
        _[_.RGBA16F_EXT = 34842] = "RGBA16F_EXT", _[_.RGB16F_EXT = 34843] = "RGB16F_EXT", _[_.RGBA32F_EXT = 34836] = "RGBA32F_EXT", _[_.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 33297] = "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT", _[_.UNSIGNED_NORMALIZED_EXT = 35863] = "UNSIGNED_NORMALIZED_EXT", _[_.UNSIGNED_INT_24_8_WEBGL = 34042] = "UNSIGNED_INT_24_8_WEBGL", _[_.HALF_FLOAT_OES = 36193] = "HALF_FLOAT_OES", _[_.SRGB_EXT = 35904] = "SRGB_EXT", _[_.SRGB_ALPHA_EXT = 35906] = "SRGB_ALPHA_EXT", _[_.SRGB8_ALPHA8_EXT = 35907] = "SRGB8_ALPHA8_EXT", _[_.COMPRESSED_RGB_S3TC_DXT1_EXT = 33776] = "COMPRESSED_RGB_S3TC_DXT1_EXT", _[_.COMPRESSED_RGBA_S3TC_DXT1_EXT = 33777] = "COMPRESSED_RGBA_S3TC_DXT1_EXT", _[_.COMPRESSED_RGBA_S3TC_DXT3_EXT = 33778] = "COMPRESSED_RGBA_S3TC_DXT3_EXT", _[_.COMPRESSED_RGBA_S3TC_DXT5_EXT = 33779] = "COMPRESSED_RGBA_S3TC_DXT5_EXT", _[_.COMPRESSED_SRGB_S3TC_DXT1_EXT = 35916] = "COMPRESSED_SRGB_S3TC_DXT1_EXT", _[_.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 35917] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT", _[_.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 35918] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT", _[_.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 35919] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT", _[_.COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 35840] = "COMPRESSED_RGB_PVRTC_4BPPV1_IMG", _[_.COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 35841] = "COMPRESSED_RGB_PVRTC_2BPPV1_IMG", _[_.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 35842] = "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG", _[_.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 35843] = "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG", _[_.COMPRESSED_RGB_ETC1_WEBGL = 36196] = "COMPRESSED_RGB_ETC1_WEBGL", _[_.COMPRESSED_R11_EAC = 37488] = "COMPRESSED_R11_EAC", _[_.COMPRESSED_SIGNED_R11_EAC = 37489] = "COMPRESSED_SIGNED_R11_EAC", _[_.COMPRESSED_RG11_EAC = 37490] = "COMPRESSED_RG11_EAC", _[_.COMPRESSED_SIGNED_RG11_EAC = 37491] = "COMPRESSED_SIGNED_RG11_EAC", _[_.COMPRESSED_RGB8_ETC2 = 37492] = "COMPRESSED_RGB8_ETC2", _[_.COMPRESSED_SRGB8_ETC2 = 37493] = "COMPRESSED_SRGB8_ETC2", _[_.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494] = "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", _[_.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495] = "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2", _[_.COMPRESSED_RGBA8_ETC2_EAC = 37496] = "COMPRESSED_RGBA8_ETC2_EAC", _[_.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497] = "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC", _[_.COMPRESSED_RGBA_ASTC_4x4_KHR = 37808] = "COMPRESSED_RGBA_ASTC_4x4_KHR", _[_.COMPRESSED_RGBA_ASTC_5x4_KHR = 37809] = "COMPRESSED_RGBA_ASTC_5x4_KHR", _[_.COMPRESSED_RGBA_ASTC_5x5_KHR = 37810] = "COMPRESSED_RGBA_ASTC_5x5_KHR", _[_.COMPRESSED_RGBA_ASTC_6x5_KHR = 37811] = "COMPRESSED_RGBA_ASTC_6x5_KHR", _[_.COMPRESSED_RGBA_ASTC_6x6_KHR = 37812] = "COMPRESSED_RGBA_ASTC_6x6_KHR", _[_.COMPRESSED_RGBA_ASTC_8x5_KHR = 37813] = "COMPRESSED_RGBA_ASTC_8x5_KHR", _[_.COMPRESSED_RGBA_ASTC_8x6_KHR = 37814] = "COMPRESSED_RGBA_ASTC_8x6_KHR", _[_.COMPRESSED_RGBA_ASTC_8x8_KHR = 37815] = "COMPRESSED_RGBA_ASTC_8x8_KHR", _[_.COMPRESSED_RGBA_ASTC_10x5_KHR = 37816] = "COMPRESSED_RGBA_ASTC_10x5_KHR", _[_.COMPRESSED_RGBA_ASTC_10x6_KHR = 37817] = "COMPRESSED_RGBA_ASTC_10x6_KHR", _[_.COMPRESSED_RGBA_ASTC_10x8_KHR = 37818] = "COMPRESSED_RGBA_ASTC_10x8_KHR", _[_.COMPRESSED_RGBA_ASTC_10x10_KHR = 37819] = "COMPRESSED_RGBA_ASTC_10x10_KHR", _[_.COMPRESSED_RGBA_ASTC_12x10_KHR = 37820] = "COMPRESSED_RGBA_ASTC_12x10_KHR", _[_.COMPRESSED_RGBA_ASTC_12x12_KHR = 37821] = "COMPRESSED_RGBA_ASTC_12x12_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840] = "COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841] = "COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842] = "COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843] = "COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844] = "COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845] = "COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846] = "COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847] = "COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848] = "COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849] = "COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850] = "COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851] = "COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852] = "COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR", _[_.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853] = "COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR";
      }(S || (S = _("W", {})));
    }
  };
}); 
 			}); 
		define("__plugin__/wx0446ba2621dda60a/webview.js", function(require, module, exports){ 			
"use strict";

System.register(["./json-asset-1a4fee7d.js", "./index-60bf8166.js", "./view-50c22e7e.js", "./deprecated-0fa1cf2f.js", "./camera-component-ec549211.js", "./renderable-component-b5e46bae.js", "./transform-utils-65bf8251.js", "./renderable-2d-f6cb180f.js", "./deprecated-ddee6a28.js"], function (t) {
  "use strict";

  var e, i, n, s, r, o, h, a, l, c, p, m, u, _, d, f, w, v, b, y, E, g, L, O, D;

  return {
    setters: [function (t) {
      e = t.e2, i = t.l, n = t.cd, s = t.ec, r = t.gJ, o = t.e, h = t.w, a = t.ef, l = t.ek, c = t.fY, p = t.eg, m = t.fZ, u = t.f_, _ = t.gC, d = t.fU, f = t.eh, w = t.ed, v = t.dO, b = t.ei, y = t.ej;
    }, function (t) {
      E = t.d, g = t.E;
    }, function (t) {
      L = t.w, O = t.v;
    }, function () {}, function () {}, function () {}, function () {}, function (t) {
      D = t.U;
    }, function () {}],
    execute: function execute() {
      var R;
      !function (t) {
        t.NONE = "none", t.LOADING = "loading", t.LOADED = "loaded", t.ERROR = "error";
      }(R || (R = {}));

      var k = function () {
        function t(t) {
          this._componentEventList = new Map(), this._state = R.NONE, this._warpper = void 0, this._webview = null, this._loaded = !1, this._forceUpdate = !1, this._component = null, this._uiTrans = null, this._node = null, this._w = 0, this._h = 0, this._m00 = 0, this._m01 = 0, this._m04 = 0, this._m05 = 0, this._m12 = 0, this._m13 = 0, this._component = t, this._node = t.node, this._uiTrans = t.node.getComponent(D), this.reset(), this.createWebView();
        }

        var i = t.prototype;
        return i.reset = function () {
          this._warpper = null, this._webview = null, this._loaded = !1, this._w = 0, this._h = 0, this._m00 = 0, this._m01 = 0, this._m04 = 0, this._m05 = 0, this._m12 = 0, this._m13 = 0, this._state = R.NONE, this._forceUpdate = !1;
        }, i.dispatchEvent = function (t) {
          var e = this._componentEventList.get(t);

          if (e) {
            this._state = t;

            for (var i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++) {
              n[s - 1] = arguments[s];
            }

            e.call(this, n);
          }
        }, i.destroy = function () {
          this.removeWebView(), this._warpper = null, this._webview = null, this._loaded = !1, this._component = null, this._uiTrans = null, this._forceUpdate = !1, this._componentEventList.clear();
        }, e(t, [{
          key: "loaded",
          get: function get() {
            return this._loaded;
          }
        }, {
          key: "componentEventList",
          get: function get() {
            return this._componentEventList;
          }
        }, {
          key: "webview",
          get: function get() {
            return this._webview;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state;
          }
        }, {
          key: "UICamera",
          get: function get() {
            return E.root.batcher2D.getFirstRenderCamera(this._node);
          }
        }]), t;
      }();

      i.internal.WebViewImpl = k;

      var x,
          I,
          A,
          N,
          T,
          U,
          j,
          S,
          W,
          C,
          J,
          V,
          M,
          G,
          z = n(),
          B = function (t) {
        function e(e) {
          return t.call(this, e) || this;
        }

        s(e, t);
        var i = e.prototype;
        return i._bindDomEvent = function () {
          var t = this;
          this.webview && this.webview.addEventListener("load", function (e) {
            t._forceUpdate = !0, t.dispatchEvent(R.LOADED);
            var i = e.target,
                n = i.contentDocument && i.contentDocument.body;
            n && n.innerHTML.includes("404") && t.dispatchEvent(R.ERROR, n.innerHTML);
          });
        }, i.loadURL = function (t) {
          this.webview && (this.webview.src = t, this.dispatchEvent(R.LOADING));
        }, i.createWebView = function () {
          var t = document.createElement("div");
          this._warpper = t, t.id = "webview-wrapper", t.style["-webkit-overflow"] = "auto", t.style["-webkit-overflow-scrolling"] = "touch", t.style.position = "absolute", t.style.bottom = "0px", t.style.left = "0px", t.style.transformOrigin = "0px 100% 0px", t.style["-webkit-transform-origin"] = "0px 100% 0px", L.container.appendChild(t);
          var e = document.createElement("iframe");
          this._webview = e, e.id = "webview", e.style.border = "none", e.style.width = "100%", e.style.height = "100%", t.appendChild(e), this._bindDomEvent();
        }, i.removeWebView = function () {
          var t = this._warpper;
          r(L.container, t) && L.container.removeChild(t), this.reset();
        }, i.enable = function () {
          this._warpper && (this._warpper.style.visibility = "visible");
        }, i.disable = function () {
          this._warpper && (this._warpper.style.visibility = "hidden");
        }, i.evaluateJS = function (t) {
          if (this.webview) {
            var e = this.webview.contentWindow;
            if (e) try {
              e.eval(t);
            } catch (t) {
              this.dispatchEvent(R.ERROR, t), o(t);
            }
          }
        }, i.setOnJSCallback = function () {
          h("The platform does not support");
        }, i.setJavascriptInterfaceScheme = function () {
          h("The platform does not support");
        }, i.syncMatrix = function () {
          if (this._warpper && this._uiTrans && this._component && "hidden" !== this._warpper.style.visibility) {
            var t = this.UICamera;

            if (t) {
              this._component.node.getWorldMatrix(z), t.update(!0), t.worldMatrixToScreen(z, z, L.canvas.width, L.canvas.height);
              var e = this._uiTrans.contentSize,
                  i = e.width,
                  n = e.height;

              if (this._forceUpdate || this._m00 !== z.m00 || this._m01 !== z.m01 || this._m04 !== z.m04 || this._m05 !== z.m05 || this._m12 !== z.m12 || this._m13 !== z.m13 || this._w !== i || this._h !== n) {
                this._m00 = z.m00, this._m01 = z.m01, this._m04 = z.m04, this._m05 = z.m05, this._m12 = z.m12, this._m13 = z.m13, this._w = i, this._h = n;
                var s = O.getDevicePixelRatio(),
                    r = 1 / s,
                    o = 1 / s,
                    h = L.container,
                    a = z.m00 * r,
                    l = z.m01,
                    c = z.m04,
                    p = z.m05 * o;
                this._warpper.style.width = i + "px", this._warpper.style.height = n + "px";

                var m = this._w * r,
                    u = this._h * o,
                    _ = m * z.m00 * this._uiTrans.anchorX,
                    d = u * z.m05 * this._uiTrans.anchorY,
                    f = h && h.style.paddingLeft ? parseInt(h.style.paddingLeft) : 0,
                    w = h && h.style.paddingBottom ? parseInt(h.style.paddingBottom) : 0,
                    v = "matrix(" + a + "," + -l + "," + -c + "," + p + "," + (z.m12 * r - _ + f) + "," + -(z.m13 * o - d + w) + ")";

                this._warpper.style.transform = v, this._warpper.style["-webkit-transform"] = v, this._forceUpdate = !1;
              }
            }
          }
        }, e;
      }(k),
          H = function () {
        function t() {}

        return t.getImpl = function (t) {
          return new B(t);
        }, t;
      }();

      i.internal.WebViewImplManager = H;
      var P = t("WebView", (x = a("cc.WebView"), I = m(), A = u(), N = _(D), T = d(), U = l([g]), j = y(), S = d(), x(W = I(W = A(W = N(W = c((G = M = function (t) {
        function i() {
          for (var e, i = arguments.length, n = new Array(i), s = 0; s < i; s++) {
            n[s] = arguments[s];
          }

          return e = t.call.apply(t, [this].concat(n)) || this, f(e, "_url", J, w(e)), e._impl = null, f(e, "webviewEvents", V, w(e)), e;
        }

        s(i, t);
        var n = i.prototype;
        return n.setJavascriptInterfaceScheme = function (t) {
          this._impl && this._impl.setJavascriptInterfaceScheme(t);
        }, n.setOnJSCallback = function (t) {
          this._impl && this._impl.setOnJSCallback(t);
        }, n.evaluateJS = function (t) {
          this._impl && this._impl.evaluateJS(t);
        }, n.__preload = function () {
          this._impl = H.getImpl(this), this._impl.componentEventList.set(R.LOADING, this.onLoading.bind(this)), this._impl.componentEventList.set(R.LOADED, this.onLoaded.bind(this)), this._impl.componentEventList.set(R.ERROR, this.onError.bind(this)), this._impl.loadURL(this._url);
        }, n.onLoading = function () {
          g.emitEvents(this.webviewEvents, this, R.LOADING), this.node.emit(R.LOADING, this);
        }, n.onLoaded = function () {
          g.emitEvents(this.webviewEvents, this, R.LOADED), this.node.emit(R.LOADED, this);
        }, n.onError = function () {
          for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) {
            e[i] = arguments[i];
          }

          g.emitEvents(this.webviewEvents, this, R.ERROR, e), this.node.emit(R.ERROR, this, e);
        }, n.onEnable = function () {
          this._impl && this._impl.enable();
        }, n.onDisable = function () {
          this._impl && this._impl.disable();
        }, n.onDestroy = function () {
          this._impl && (this._impl.destroy(), this._impl = null);
        }, n.update = function () {
          this._impl && this._impl.syncMatrix();
        }, e(i, [{
          key: "url",
          get: function get() {
            return this._url;
          },
          set: function set(t) {
            this._url = t, this._impl && this._impl.loadURL(t);
          }
        }, {
          key: "nativeWebView",
          get: function get() {
            return this._impl && this._impl.webview || null;
          }
        }, {
          key: "state",
          get: function get() {
            return this._impl ? this._impl.state : R.NONE;
          }
        }]), i;
      }(v), M.EventType = R, J = p((C = G).prototype, "_url", [b], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return "https://cocos.com";
        }
      }), p(C.prototype, "url", [T], Object.getOwnPropertyDescriptor(C.prototype, "url"), C.prototype), V = p(C.prototype, "webviewEvents", [b, U, j, S], {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        initializer: function initializer() {
          return [];
        }
      }), W = C)) || W) || W) || W) || W) || W));
      i.internal.WebView = P;
    }
  };
}); 
 			}); 
	